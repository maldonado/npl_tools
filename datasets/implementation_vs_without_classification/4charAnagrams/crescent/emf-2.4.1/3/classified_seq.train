IMPLEMENTATION	// TODO: Also check REG_ANCHORINDEX vs. anchor
IMPLEMENTATION	// skip header bytes // maybe should check if they're valid or not?
IMPLEMENTATION	// need to add static block here
IMPLEMENTATION	/**    * Parse the attribute type.    * [54] AttType ::= StringType | TokenizedType | EnumeratedType    * [55] StringType ::= 'CDATA'    * [56] TokenizedType ::= 'ID' | 'IDREF' | 'IDREFS' | 'ENTITY' | 'ENTITIES' |    *                        'NMTOKEN' | 'NMTOKENS'    * [57] EnumeratedType ::= NotationType | Enumeration    * *TODO: validate the type!!    */
IMPLEMENTATION	// this convention may change...
IMPLEMENTATION	// Need some format checking here
IMPLEMENTATION	// implement the recursion for getClassImpl()
IMPLEMENTATION	// Need to calculate this... just fudging here for now.
IMPLEMENTATION	// Need to calculate this... just fudging here for now.
IMPLEMENTATION	// Need to calculate this... just fudging here for now.
IMPLEMENTATION	/**    * Parse the XML declaration.    * <pre>    * [25] XMLDecl ::= '&lt;?xml' VersionInfo EncodingDecl? SDDecl? S? '?&gt;'    * [26] VersionInfo ::= S 'version' Eq ('"1.0"' | "'1.0'")    * [33] SDDecl ::= S 'standalone' Eq "'" ('yes' | 'no') "'"    *               | S 'standalone' Eq '"' ("yes" | "no") '"'    * [78] EncodingDecl ::= S 'encoding' Eq QEncoding    * </pre>    * <p>([80] to [82] are also significant.)    * <p>(The <code>&lt;?xml</code> and whitespace have already been read.)    * <p>TODO: validate value of standalone.    * @see #parseTextDecl    * @see #checkEncoding    */
IMPLEMENTATION	/**    * Parse an element-content model.    * [42] elements ::= (choice | seq) ('?' | '*' | '+')?    * [44] cps ::= S? %cp S?    * [45] choice ::= '(' S? %ctokplus (S? '|' S? %ctoks)* S? ')'    * [46] ctokplus ::= cps ('|' cps)+    * [47] ctoks ::= cps ('|' cps)*    * [48] seq ::= '(' S? %stoks (S? ',' S? %stoks)* S? ')'    * [49] stoks ::= cps (',' cps)*    * *NOTE: the opening '(' and S have already been read.    * *TODO: go over parameter entity boundaries more carefully.    */
IMPLEMENTATION	/** * An output stream that compresses into the BZip2 format (without the file * header chars) into another stream. TODO: Update to BZip2 1.0.1 * * @author <a href="mailto:keiron@aftexsw.com">Keiron Liddle</a> */
IMPLEMENTATION	/*		Debug utils are static so that they are reachable by code that doesn't		necessarily have an interpreter reference (e.g. tracing in utils).		In the future we may want to allow debug/trace to be turned on on		a per interpreter basis, in which case we'll need to use the parent 		reference in some way to determine the scope of the command that 		turns it on or off.	*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*			Doing instanceof?  Next node is a type.		*/
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ParentDirectoryRenderer class
WITHOUT_CLASSIFICATION	//{{{ TableMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ mouseClicked() method
WITHOUT_CLASSIFICATION	// install man page
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	// set proxy authentication
WITHOUT_CLASSIFICATION	//{{{ autodetect() method
WITHOUT_CLASSIFICATION	// file does not begin with UTF-8-Y // signature. reset stream, read as // UTF-8.
WITHOUT_CLASSIFICATION	// Determine whether we are dealing // with a one-, two-, three-, or four- // byte sequence.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ insideCompoundEdit() method
WITHOUT_CLASSIFICATION	// 1-byte sequence: 000000000xxxxxxx = 0xxxxxxx
WITHOUT_CLASSIFICATION	// null object ref is not instance of any type
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getDocument() method
WITHOUT_CLASSIFICATION	//{{{ getParentElement() method
WITHOUT_CLASSIFICATION	//{{{ getAttributes() method
WITHOUT_CLASSIFICATION	//{{{ ensureCapacity() method
WITHOUT_CLASSIFICATION	//{{{ RootElement constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ getEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ getElementIndex() method
WITHOUT_CLASSIFICATION	// No super method, try to invoke regular method // could be a superfluous "super." which is legal.
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Local Variables. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadClass() method
WITHOUT_CLASSIFICATION	//{{{ getZipFile() method
WITHOUT_CLASSIFICATION	/* Defer to whoever loaded us (such as JShell,			 * Echidna, etc) */
WITHOUT_CLASSIFICATION	// remember that this class doesn't exist for // future reference
WITHOUT_CLASSIFICATION	//{{{ getResourceAsStream() method
WITHOUT_CLASSIFICATION	//{{{ getResource() method
WITHOUT_CLASSIFICATION	//{{{ getResourceAsPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ dump() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ JARClassLoader constructor
WITHOUT_CLASSIFICATION	//{{{ finalize() method
WITHOUT_CLASSIFICATION	//{{{ activate() method
WITHOUT_CLASSIFICATION	//{{{ deactivate() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ _loadClass() method
WITHOUT_CLASSIFICATION	//{{{ ServiceListHandler constructor
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getElementCount() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ getElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ getCachedServices() method
WITHOUT_CLASSIFICATION	//{{{ isLeaf() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ pushElement() method
WITHOUT_CLASSIFICATION	//{{{ peekElement() method
WITHOUT_CLASSIFICATION	//{{{ popElement() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getLabel() method
WITHOUT_CLASSIFICATION	//{{{ OptionGroup constructor
WITHOUT_CLASSIFICATION	//{{{ OptionGroup constructor
WITHOUT_CLASSIFICATION	//{{{ addOptionGroup() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	//{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	//{{{ getMembers() method
WITHOUT_CLASSIFICATION	//{{{ getMember() method
WITHOUT_CLASSIFICATION	//{{{ getMemberIndex() method
WITHOUT_CLASSIFICATION	//{{{ getMemberCount() method
WITHOUT_CLASSIFICATION	//{{{ setSort() method
WITHOUT_CLASSIFICATION	//{{{ insertionSort() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getLabel() method
WITHOUT_CLASSIFICATION	//{{{ removeFromBus() method
WITHOUT_CLASSIFICATION	//{{{ addToBus() method
WITHOUT_CLASSIFICATION	//{{{ getComponents() method
WITHOUT_CLASSIFICATION	//{{{ send() method
WITHOUT_CLASSIFICATION	// can't create new instances
WITHOUT_CLASSIFICATION	//{{{ EditAction constructor
WITHOUT_CLASSIFICATION	//{{{ getMouseOverText() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ isToggle() method
WITHOUT_CLASSIFICATION	//{{{ isSelected() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ noRepeat() method
WITHOUT_CLASSIFICATION	//{{{ noRecord() method
WITHOUT_CLASSIFICATION	//{{{ noRememberLast() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Wrapper class
WITHOUT_CLASSIFICATION	//{{{ setInterval() method
WITHOUT_CLASSIFICATION	//{{{ stop() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	// might come in handy useful some time
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Animator class
WITHOUT_CLASSIFICATION	//{{{ AbbrevEditor constructor
WITHOUT_CLASSIFICATION	//{{{ getAbbrev() method
WITHOUT_CLASSIFICATION	//{{{ setAbbrev() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //{{{ KEY_RELEASED...
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* on some Windows versions, connections to localhost			 * fail if the network is not running. To avoid			 * confusing newbies with weird error messages, log			 * errors that occur while starting the server			 * as NOTICE, not ERROR */
WITHOUT_CLASSIFICATION	//{{{ run() method
WITHOUT_CLASSIFICATION	//{{{ handleClient() method
WITHOUT_CLASSIFICATION	//{{{ handleClient() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// no background mode, and opening a new view
WITHOUT_CLASSIFICATION	// no background mode, and reusing existing view
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ handleClient() method
WITHOUT_CLASSIFICATION	// un-iconify using JDK 1.3 API
WITHOUT_CLASSIFICATION	//{{{ isOK() method
WITHOUT_CLASSIFICATION	//{{{ getPort method
WITHOUT_CLASSIFICATION	//{{{ stopServer() method
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	// Reset the timeout
WITHOUT_CLASSIFICATION	//{{{ BeanShellAction constructor
WITHOUT_CLASSIFICATION	/* Some characters that we like to use in action names		 * ('.', '-') are not allowed in BeanShell identifiers. */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ isSelected() method
WITHOUT_CLASSIFICATION	//{{{ noRepeat() method
WITHOUT_CLASSIFICATION	//{{{ noRecord() method
WITHOUT_CLASSIFICATION	//{{{ noRememberLast() method
WITHOUT_CLASSIFICATION	// so that in the future we don't see streams of // exceptions
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	/* Runtime runtime = Runtime.getRuntime();		int freeMemory = (int)(runtime.freeMemory() / 1024);		int totalMemory = (int)(runtime.totalMemory() / 1024);		int usedMemory = (totalMemory - freeMemory);		Log.log(Log.DEBUG,this,"Java heap: " + usedMemory + "Kb / "			+ totalMemory + "Kb, " + (usedMemory * 100 / totalMemory)			+ "%"); */
WITHOUT_CLASSIFICATION	// save list of open files
WITHOUT_CLASSIFICATION	// flush log
WITHOUT_CLASSIFICATION	//{{{ ActionListHandler constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ pushElement() method
WITHOUT_CLASSIFICATION	//{{{ paste() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ copy() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ peekElement() method
WITHOUT_CLASSIFICATION	//{{{ popElement() method
WITHOUT_CLASSIFICATION	// protected members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ paste() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setRegister() method
WITHOUT_CLASSIFICATION	//{{{ setRegister() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	/* to avoid data loss, only do this if the above			 * completed successfully */
WITHOUT_CLASSIFICATION	//{{{ clearRegister() method
WITHOUT_CLASSIFICATION	//{{{ getRegisters() method
WITHOUT_CLASSIFICATION	//{{{ getRegisterStatusPrompt() method
WITHOUT_CLASSIFICATION	//{{{ saveRegisters() method
WITHOUT_CLASSIFICATION	//{{{ loadRegisters() method
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,Registers.class,fnf);
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ Register interface
WITHOUT_CLASSIFICATION	//{{{ ClipboardRegister class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	// remove trailing \n
WITHOUT_CLASSIFICATION	//{{{ StringRegister class
WITHOUT_CLASSIFICATION	//{{{ RegistersHandler class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ EBMessage constructor
WITHOUT_CLASSIFICATION	//{{{ EBMessage constructor
WITHOUT_CLASSIFICATION	//{{{ getSource() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Deprecated methods
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ setBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getTextArea() method
WITHOUT_CLASSIFICATION	// only do this if we are the current edit pane
WITHOUT_CLASSIFICATION	// Only do this after all I/O requests are complete
WITHOUT_CLASSIFICATION	// avoid a race condition // see bug #834338
WITHOUT_CLASSIFICATION	//{{{ prevBuffer() method
WITHOUT_CLASSIFICATION	//{{{ nextBuffer() method
WITHOUT_CLASSIFICATION	//{{{ recentBuffer() method
WITHOUT_CLASSIFICATION	//{{{ focusOnTextArea() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLabel() method
WITHOUT_CLASSIFICATION	//{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	//{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	//{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	//{{{ setLabel() method
WITHOUT_CLASSIFICATION	//{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ addAction() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ removeAction() method
WITHOUT_CLASSIFICATION	//{{{ removeAllActions() method
WITHOUT_CLASSIFICATION	//{{{ getAction() method
WITHOUT_CLASSIFICATION	//{{{ getActionCount() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getActions() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ getActionNames() method
WITHOUT_CLASSIFICATION	//{{{ getActionNames() method
WITHOUT_CLASSIFICATION	//{{{ getCacheableActionNames() method
WITHOUT_CLASSIFICATION	//{{{ contains() method
WITHOUT_CLASSIFICATION	//{{{ size() method
WITHOUT_CLASSIFICATION	//{{{ initKeyBindings() method
WITHOUT_CLASSIFICATION	//actions.clear();
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ dragAndDropCallback() method
WITHOUT_CLASSIFICATION	//{{{ initTextArea() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ initBufferSwitcher() method
WITHOUT_CLASSIFICATION	//{{{ MyFocusManager class
WITHOUT_CLASSIFICATION	//{{{ MyFocusTraversalPolicy class
WITHOUT_CLASSIFICATION	//{{{ MouseWheelHandler class
WITHOUT_CLASSIFICATION	//{{{ TextAreaTransferHandler class
WITHOUT_CLASSIFICATION	/* I assume that there can be only one drag operation at the time */
WITHOUT_CLASSIFICATION	/* if user drops into the same			selection where they started, do			nothing. */
WITHOUT_CLASSIFICATION	/* if user drops into a selection,				replace selection */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* otherwise just insert the text */
WITHOUT_CLASSIFICATION	// correctly handle text flavor + file list flavor // + text area read only, do an or of all flags
WITHOUT_CLASSIFICATION	//{{{ DropHandler class
WITHOUT_CLASSIFICATION	//textArea.getBuffer().beginCompoundEdit();
WITHOUT_CLASSIFICATION	//textArea.getBuffer().endCompoundEdit();
WITHOUT_CLASSIFICATION	//textArea.getBuffer().endCompoundEdit();
WITHOUT_CLASSIFICATION	//{{{ TextAreaSelection class
WITHOUT_CLASSIFICATION	//{{{ showBufferSwitcher() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Path name methods
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ canonPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// get rid of mixed paths on Windows
WITHOUT_CLASSIFICATION	// also get rid of trailing spaces on Windows
WITHOUT_CLASSIFICATION	// do the same on OS X
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ resolveSymlinks() method
WITHOUT_CLASSIFICATION	//{{{ isAbsolutePath() method
WITHOUT_CLASSIFICATION	// not sure if this is correct for OpenVMS.
WITHOUT_CLASSIFICATION	// nice and simple
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ saveCaretInfo() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ concatPath() method
WITHOUT_CLASSIFICATION	// Make all child paths relative.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getFileExtension() method
WITHOUT_CLASSIFICATION	//{{{ getFileName() method
WITHOUT_CLASSIFICATION	//{{{ getFileNameNoExtension() method
WITHOUT_CLASSIFICATION	//{{{ getFileParent() method
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ getFileProtocol() method
WITHOUT_CLASSIFICATION	//{{{ getProtocolOfURL() method
WITHOUT_CLASSIFICATION	//{{{ isURL() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// C:\AUTOEXEC.BAT
WITHOUT_CLASSIFICATION	// /etc/passwd
WITHOUT_CLASSIFICATION	// D:\WINDOWS, or doesn't contain : at all
WITHOUT_CLASSIFICATION	// If backups is 1, create ~ file
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//Selection[] selection = (Selection[])buffer.getProperty(Buffer.SELECTION);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* if backup file was created less than			 * 'backupTimeDistance' ago, we do not			 * create the backup */
WITHOUT_CLASSIFICATION	// If backups > 1, move old ~n~ files, create ~1~ file
WITHOUT_CLASSIFICATION	/* delete a backup created using above method */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ fileToClass() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ classToFile() method
WITHOUT_CLASSIFICATION	/*			Treat lhs and rhs as arbitrary objects and do the operation.			(including NULL and VOID represented by their Primitive types)		*/
WITHOUT_CLASSIFICATION	//{{{ Text methods
WITHOUT_CLASSIFICATION	//{{{ getLeadingWhiteSpace() method
WITHOUT_CLASSIFICATION	// FALL THROUGH TO DEFAULT CASE!!!
WITHOUT_CLASSIFICATION	/*		object is a non-null and non-void Primitive type	*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Bsh scripted object
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ getLeadingWhiteSpaceWidth() method
WITHOUT_CLASSIFICATION	//{{{ getVirtualWidth() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getOffsetOfVirtualColumn() method
WITHOUT_CLASSIFICATION	//{{{ createWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ createWhiteSpace() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ globToRE() method
WITHOUT_CLASSIFICATION	//{{{ escapesToChars() method
WITHOUT_CLASSIFICATION	//{{{ charsToEscapes() method
WITHOUT_CLASSIFICATION	//{{{ charsToEscapes() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ compareVersions() method
WITHOUT_CLASSIFICATION	//{{{ compareStrings() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//_i--;
WITHOUT_CLASSIFICATION	//_j--;
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ stringsEqual() method
WITHOUT_CLASSIFICATION	//{{{ objectsEqual() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isVMS() method
WITHOUT_CLASSIFICATION	//{{{ isMacOSLF() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ hasScreenMenuBar
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isJava14() method
WITHOUT_CLASSIFICATION	//{{{ isJava15() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	// for debugging, make jEdit think its using a different // version of Java than it really is.
WITHOUT_CLASSIFICATION	//{{{ Some constants
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ charsToEntities() method
WITHOUT_CLASSIFICATION	//{{{ formatFileSize() method
WITHOUT_CLASSIFICATION	//{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	//{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	//{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	/*delcaredOnly*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Sorting methods
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	//{{{ Compare interface
WITHOUT_CLASSIFICATION	//{{{ StringCompare class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ StringICaseCompare class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Java object
WITHOUT_CLASSIFICATION	//{{{ MenuItemCompare class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Map types to assignable forms, need to keep this fast...
WITHOUT_CLASSIFICATION	//{{{ buildToVersion() method
WITHOUT_CLASSIFICATION	// First 2 chars are the major version number
WITHOUT_CLASSIFICATION	// Second 2 are the minor number
WITHOUT_CLASSIFICATION	// Then the pre-release status
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Finally the bug fix release
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ 1. Check whether tools.jar is in the system classpath:
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG, MiscUtilities.class, //	"- is not in system classpath."); //}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ 2. Check whether it is in the jEdit user settings jars folder:
WITHOUT_CLASSIFICATION	// jEdit will load it automatically
WITHOUT_CLASSIFICATION	// jEdit will load it automatically
WITHOUT_CLASSIFICATION	//{{{ 3. Check whether it is in jEdit's system jars folder:
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ 4. Check whether it is in <java.home>/lib:
WITHOUT_CLASSIFICATION	//{{{ Load it, if not yet done:
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getEncodings() method
WITHOUT_CLASSIFICATION	//{{{ isSupportedEncoding() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ compareChars()
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ maybeReload() method
WITHOUT_CLASSIFICATION	// On Windows and MacOS, path names are case insensitive
WITHOUT_CLASSIFICATION	//{{{ Input/output methods
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	// unwrap any primitives
WITHOUT_CLASSIFICATION	/*onlystatic*/
WITHOUT_CLASSIFICATION	/*onlystatic*/
WITHOUT_CLASSIFICATION	/*onlystatic*/
WITHOUT_CLASSIFICATION	// no field, try property acces
WITHOUT_CLASSIFICATION	// not a field, try property access
WITHOUT_CLASSIFICATION	// shouldn't happen
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getExpandOnInput() method
WITHOUT_CLASSIFICATION	//{{{ setExpandOnInput() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ expandAbbrev() method
WITHOUT_CLASSIFICATION	//{{{ Figure out some minor things
WITHOUT_CLASSIFICATION	// we reuse the 'pp' vector to save time
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	// positional parameters will be inserted where $1, $2, $3, ... // occurs in the expansion
WITHOUT_CLASSIFICATION	//{{{ Handle abbrevs of the form abbrev#pos1#pos2#pos3#...
WITHOUT_CLASSIFICATION	// have to check again since above might set // NEW_FILE flag
WITHOUT_CLASSIFICATION	//{{{ reload() method
WITHOUT_CLASSIFICATION	// For `reload' command
WITHOUT_CLASSIFICATION	// Only on initial load
WITHOUT_CLASSIFICATION	//{{{ Do some stuff once loading is finished
WITHOUT_CLASSIFICATION	// if reloading a file, clear dirty flag
WITHOUT_CLASSIFICATION	// view text areas temporarily blank out while a buffer is // being loaded, to indicate to the user that there is no // data available yet.
WITHOUT_CLASSIFICATION	// theoretically a segment could // have seg.offset != 0 but // SegmentBuffer never does that
WITHOUT_CLASSIFICATION	/* do nothing */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setMode() method
WITHOUT_CLASSIFICATION	//{{{ setMode() method
WITHOUT_CLASSIFICATION	//{{{ setMode() method
WITHOUT_CLASSIFICATION	/* This protects against stupid people (like me)		 * doing stuff like buffer.setMode(jEdit.getMode(...)); */
WITHOUT_CLASSIFICATION	// this must be in reverse order so that modes from the user // catalog get checked first!
WITHOUT_CLASSIFICATION	//{{{ markTokens() method
WITHOUT_CLASSIFICATION	//{{{ Indentation
WITHOUT_CLASSIFICATION	//{{{ removeTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	// blank line
WITHOUT_CLASSIFICATION	// no whitespace
WITHOUT_CLASSIFICATION	//{{{ shiftIndentLeft() method
WITHOUT_CLASSIFICATION	//{{{ shiftIndentRight() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getVirtualWidth() method
WITHOUT_CLASSIFICATION	//{{{ getOffsetOfVirtualColumn() method
WITHOUT_CLASSIFICATION	//{{{ getOpenParenIndent() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// the first element of pp is the abbrev itself
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //{{{ Handle ordinary abbrevs
WITHOUT_CLASSIFICATION	//{{{ Maybe show add abbrev dialog
WITHOUT_CLASSIFICATION	//{{{ getGlobalAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ setGlobalAbbrevs() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getModeAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ setModeAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ addGlobalAbbrev() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ addModeAbbrev() method
WITHOUT_CLASSIFICATION	// only load global abbrevs if user abbrevs file could not be loaded
WITHOUT_CLASSIFICATION	//{{{ countNewlines() method
WITHOUT_CLASSIFICATION	// try mode-specific abbrevs first
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ expandAbbrev() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ saveAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ saveAbbrevs() method
WITHOUT_CLASSIFICATION	// write global abbrevs
WITHOUT_CLASSIFICATION	// write mode abbrevs
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// number of positional parameters in abbreviation expansion
WITHOUT_CLASSIFICATION	//{{{ Expansion constructor
WITHOUT_CLASSIFICATION	//{{{ Handle backslash
WITHOUT_CLASSIFICATION	// $n is 1-indexed, but vector // contents is zero indexed
WITHOUT_CLASSIFICATION	// $key will be $key, for // example
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ insertAtColumn() method
WITHOUT_CLASSIFICATION	//{{{ insertIndented() method
WITHOUT_CLASSIFICATION	// obtain the leading indent for later use
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//{{{ stop() method
WITHOUT_CLASSIFICATION	//{{{ getClassName() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	// this one only finds public (and in interfaces, etc.)
WITHOUT_CLASSIFICATION	// try declaredField
WITHOUT_CLASSIFICATION	//{{{ createMenuItems() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ createMenuItems() method
WITHOUT_CLASSIFICATION	//{{{ createBrowserMenuItems() method
WITHOUT_CLASSIFICATION	//{{{ Deprecated methods
WITHOUT_CLASSIFICATION	//{{{ createOptionPanes() method
WITHOUT_CLASSIFICATION	//{{{ getJAR() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// package-private members
WITHOUT_CLASSIFICATION	//{{{ Deferred class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// package-private members
WITHOUT_CLASSIFICATION	//{{{ JAR class
WITHOUT_CLASSIFICATION	//{{{ getVersion() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBuild() method
WITHOUT_CLASSIFICATION	// (major).(minor).(<99 = preX, 99 = final).(bug fix)
WITHOUT_CLASSIFICATION	//{{{ main() method
WITHOUT_CLASSIFICATION	//{{{ Check for Java 1.3 or later
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Miscellaneous methods
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getNext() method
WITHOUT_CLASSIFICATION	// MacOS users expect the app to keep running after all windows // are closed
WITHOUT_CLASSIFICATION	//{{{ getPrev() method
WITHOUT_CLASSIFICATION	//{{{ setWaitSocket() method
WITHOUT_CLASSIFICATION	//{{{ getIndex() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Parse command line
WITHOUT_CLASSIFICATION	// open initial view?
WITHOUT_CLASSIFICATION	// script to run
WITHOUT_CLASSIFICATION	//{{{ We need these initializations very early on
WITHOUT_CLASSIFICATION	//{{{ Try connecting to another running jEdit instance
WITHOUT_CLASSIFICATION	// block until its closed
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Initialize settings directory
WITHOUT_CLASSIFICATION	// Write a warning message:
WITHOUT_CLASSIFICATION	//{{{ Get things rolling
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Initialize server
WITHOUT_CLASSIFICATION	//{{{ Do more stuff
WITHOUT_CLASSIFICATION	// Buffer sort
WITHOUT_CLASSIFICATION	//{{{ Initialize Java 1.4-specific code
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Activate plugins that must be activated at startup
WITHOUT_CLASSIFICATION	//{{{ Load macros and run startup scripts, after plugins and settings are loaded
WITHOUT_CLASSIFICATION	//{{{ Run script specified with -run= parameter
WITHOUT_CLASSIFICATION	// Open files, create the view and hide the splash screen.
WITHOUT_CLASSIFICATION	//{{{ Property methods
WITHOUT_CLASSIFICATION	//{{{ getProperties() method
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	//{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	//{{{ getIntegerProperty() method
WITHOUT_CLASSIFICATION	//{{{ getDoubleProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Not found, fall through to next class
WITHOUT_CLASSIFICATION	// Now, on with the hunt...
WITHOUT_CLASSIFICATION	// Quick check catches public fields include those in interfaces
WITHOUT_CLASSIFICATION	//{{{ getFontProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getFontProperty() method
WITHOUT_CLASSIFICATION	//{{{ getColorProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setColorProperty() method
WITHOUT_CLASSIFICATION	//{{{ setProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setTemporaryProperty() method
WITHOUT_CLASSIFICATION	//{{{ setBooleanProperty() method
WITHOUT_CLASSIFICATION	//{{{ setIntegerProperty() method
WITHOUT_CLASSIFICATION	//{{{ setDoubleProperty() method
WITHOUT_CLASSIFICATION	//{{{ setFontProperty() method
WITHOUT_CLASSIFICATION	//{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	//{{{ resetProperty() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	// give all text areas the same font
WITHOUT_CLASSIFICATION	//defaults.put("TextField.font",font);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Enable/Disable tooltips
WITHOUT_CLASSIFICATION	// we do this here instead of adding buffers to the bus.
WITHOUT_CLASSIFICATION	//{{{ getPluginJARs() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPlugin() method
WITHOUT_CLASSIFICATION	//{{{ Plugin management methods
WITHOUT_CLASSIFICATION	//{{{ getNotLoadedPluginJARs() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ _getLineManager() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPlugin(String, boolean) method
WITHOUT_CLASSIFICATION	//{{{ getPlugins() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addPluginJAR() method
WITHOUT_CLASSIFICATION	// backwards compatibility...
WITHOUT_CLASSIFICATION	//{{{ addPluginJARsFromDirectory() method
WITHOUT_CLASSIFICATION	// remove this when 4.1 plugin API is deprecated
WITHOUT_CLASSIFICATION	//{{{ removePluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ Action methods
WITHOUT_CLASSIFICATION	//{{{ getActionContext() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addActionSet() method
WITHOUT_CLASSIFICATION	//{{{ removeActionSet() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getAction() method
WITHOUT_CLASSIFICATION	//{{{ getBuiltInActionSet() method
WITHOUT_CLASSIFICATION	//{{{ getActionSets() method
WITHOUT_CLASSIFICATION	//{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getActions() method
WITHOUT_CLASSIFICATION	//{{{ getActionNames() method
WITHOUT_CLASSIFICATION	//{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	//{{{ Edit mode methods
WITHOUT_CLASSIFICATION	//{{{ reloadModes() method
WITHOUT_CLASSIFICATION	/* Try to guess the eventual size to avoid unnecessary		 * copying */
WITHOUT_CLASSIFICATION	//{{{ Load the global catalog
WITHOUT_CLASSIFICATION	//{{{ Load user catalog
WITHOUT_CLASSIFICATION	// create dummy catalog
WITHOUT_CLASSIFICATION	//{{{ getMode() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ getModes() method
WITHOUT_CLASSIFICATION	//{{{ Buffer creation methods
WITHOUT_CLASSIFICATION	//{{{ openFiles() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ openTemporary() method
WITHOUT_CLASSIFICATION	//{{{ commitTemporary() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Buffer constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// if loadAutosave is false, we loaded an // autosave file, so we set 'dirty' to true
WITHOUT_CLASSIFICATION	// note that we don't use setDirty(), // because a) that would send an unnecessary // message, b) it would also set the // AUTOSAVE_DIRTY flag, which will make // the autosave thread write out a // redundant autosave file
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ Renderer class
WITHOUT_CLASSIFICATION	//{{{ keyPressed() method
WITHOUT_CLASSIFICATION	/* int */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// send full range of events to avoid breaking plugins
WITHOUT_CLASSIFICATION	//{{{ newFile() method
WITHOUT_CLASSIFICATION	// don't want 'New File' to create a read only buffer // if current file is on SQL VFS or something
WITHOUT_CLASSIFICATION	// return the newly created 'untitled-1'
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Find the highest Untitled-n file
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Buffer management methods
WITHOUT_CLASSIFICATION	//{{{ closeBuffer() method
WITHOUT_CLASSIFICATION	// send some EditBus messages
WITHOUT_CLASSIFICATION	//EditBus.send(new BufferUpdate(Buffer.this, //	view,BufferUpdate.MARKERS_CHANGED));
WITHOUT_CLASSIFICATION	//{{{ keyTyped() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ insertFile() method
WITHOUT_CLASSIFICATION	// this returns false if initial sanity // checks (if the file is a directory, etc) // fail
WITHOUT_CLASSIFICATION	//{{{ checkFileStatus() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ autosave() method
WITHOUT_CLASSIFICATION	//{{{ saveAs() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	// files[] should have length 1, since the dialog type is // SAVE_DIALOG
WITHOUT_CLASSIFICATION	// Once save is complete, do a few other things
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	/* fall through */
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	// \t handled above
WITHOUT_CLASSIFICATION	/* eg, foo<C+b>, will insert foobar, */
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isFocusTraversable() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Getters/setter methods for various buffer meta-data
WITHOUT_CLASSIFICATION	//{{{ getLastModified() method
WITHOUT_CLASSIFICATION	//{{{ setLastModified() method
WITHOUT_CLASSIFICATION	//{{{ getVFS() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ _closeBuffer() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getSymlinkPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isClosed() method
WITHOUT_CLASSIFICATION	//{{{ getDirectory() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isLoaded() method
WITHOUT_CLASSIFICATION	//{{{ isPerformingIO() method
WITHOUT_CLASSIFICATION	//{{{ isNewFile() method
WITHOUT_CLASSIFICATION	//{{{ setNewFile() method
WITHOUT_CLASSIFICATION	//{{{ isUntitled() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// zero it here so that BufferTabs doesn't have any problems
WITHOUT_CLASSIFICATION	//{{{ saveAllBuffers() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ reloadAllBuffers() method
WITHOUT_CLASSIFICATION	// save caret info. Buffer.load() will load it.
WITHOUT_CLASSIFICATION	//{{{ _getBuffer() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getBuffers() method
WITHOUT_CLASSIFICATION	//{{{ getBufferCount() method
WITHOUT_CLASSIFICATION	//{{{ getFirstBuffer() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLastBuffer() method
WITHOUT_CLASSIFICATION	//{{{ checkBufferStatus() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isDirty() method
WITHOUT_CLASSIFICATION	//{{{ isReadOnly() method
WITHOUT_CLASSIFICATION	//{{{ isEditable() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setDirty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setReadOnly() method
WITHOUT_CLASSIFICATION	// fixes dirty flag not being reset on // save/insert/undo/redo/undo
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* fall through */
WITHOUT_CLASSIFICATION	//{{{ View methods
WITHOUT_CLASSIFICATION	//{{{ getInputHandler() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isTemporary() method
WITHOUT_CLASSIFICATION	//{{{ getIcon() method
WITHOUT_CLASSIFICATION	//{{{ Thread safety
WITHOUT_CLASSIFICATION	//{{{ readLock() method
WITHOUT_CLASSIFICATION	//{{{ readUnlock() method
WITHOUT_CLASSIFICATION	//{{{ writeLock() method
WITHOUT_CLASSIFICATION	//{{{ writeUnlock() method
WITHOUT_CLASSIFICATION	//{{{ Line offset methods
WITHOUT_CLASSIFICATION	//{{{ getLength() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	// no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	//{{{ getLineCount() method
WITHOUT_CLASSIFICATION	//{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLineStartOffset() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLineLength() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ invalidateCachedScreenLineCounts() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Text getters and setters
WITHOUT_CLASSIFICATION	//{{{ getLineText() method
WITHOUT_CLASSIFICATION	//{{{ getLineText() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	/* otherwise it will be delivered later */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Undo
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ isTransactionInProgress() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ beginCompoundEdit() method
WITHOUT_CLASSIFICATION	//{{{ endCompoundEdit() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ insideCompoundEdit() method
WITHOUT_CLASSIFICATION	//{{{ Buffer events
WITHOUT_CLASSIFICATION	//{{{ addBufferChangeListener() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ removeBufferChangeListener() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBufferChangeListeners() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getIndentSize() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getTabSize() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Now try buffer.<property>
WITHOUT_CLASSIFICATION	//{{{ initProxy() method
WITHOUT_CLASSIFICATION	// For backwards compatibility
WITHOUT_CLASSIFICATION	// First try the buffer-local properties
WITHOUT_CLASSIFICATION	// Now try mode.<mode>.<property>
WITHOUT_CLASSIFICATION	// Try returning it as an integer first
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ newView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// set proxy host
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ newView() method
WITHOUT_CLASSIFICATION	//{{{ newView() method
WITHOUT_CLASSIFICATION	//{{{ newView() method
WITHOUT_CLASSIFICATION	// set proxy port
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// show tip of the day
WITHOUT_CLASSIFICATION	// set non proxy hosts list
WITHOUT_CLASSIFICATION	//{{{ closeView() method
WITHOUT_CLASSIFICATION	//{{{ getViews() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getViewCount() method
WITHOUT_CLASSIFICATION	//{{{ getFirstView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLastView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getActiveView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// eg user just closed a view and didn't focus another
WITHOUT_CLASSIFICATION	//{{{ Miscellaneous methods
WITHOUT_CLASSIFICATION	//{{{ isMainThread() method
WITHOUT_CLASSIFICATION	//{{{ isBackgroundMode() method
WITHOUT_CLASSIFICATION	//{{{ showMemoryStatusDialog() method
WITHOUT_CLASSIFICATION	//{{{ getJEditHome() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getSettingsDirectory() method
WITHOUT_CLASSIFICATION	//{{{ getJARCacheDirectory() method
WITHOUT_CLASSIFICATION	//{{{ backupSettingsFile() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ exit() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ saveSettings() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Wait for pending I/O requests
WITHOUT_CLASSIFICATION	// Close dialog, view.close() call need a view...
WITHOUT_CLASSIFICATION	// Send EditorExitRequested
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Close all buffers
WITHOUT_CLASSIFICATION	// If we are running in background mode and // reallyExit was not specified, then return here.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Save settings in case user kills the backgrounded // jEdit process
WITHOUT_CLASSIFICATION	// Save view properties here
WITHOUT_CLASSIFICATION	// Stop autosave timer
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Send EditorExiting
WITHOUT_CLASSIFICATION	// Save settings
WITHOUT_CLASSIFICATION	// Close activity log stream
WITHOUT_CLASSIFICATION	// Byebye...
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ getEditServer() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addMode() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadMode() method
WITHOUT_CLASSIFICATION	/* package-private */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addPluginProps() method
WITHOUT_CLASSIFICATION	//{{{ removePluginProps() method
WITHOUT_CLASSIFICATION	//{{{ pluginError() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//{{{ setActiveView() method
WITHOUT_CLASSIFICATION	// buffer link list
WITHOUT_CLASSIFICATION	// makes openTemporary() thread-safe
WITHOUT_CLASSIFICATION	// view link list
WITHOUT_CLASSIFICATION	//{{{ usage() method
WITHOUT_CLASSIFICATION	//{{{ version() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ initMisc() method
WITHOUT_CLASSIFICATION	//{{{ makeServerScript() method
WITHOUT_CLASSIFICATION	// Add our protocols to java.net.URL's list
WITHOUT_CLASSIFICATION	/* Determine installation directory.		 * If the jedit.home property is set, use that.		 * Then, look for jedit.jar in the classpath.		 * If that fails, assume this is the web start version. */
WITHOUT_CLASSIFICATION	// Set the User-Agent string used by the java.net HTTP handler
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// check if web start
WITHOUT_CLASSIFICATION	// use user.dir as last resort
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	// Add an EditBus component that will reload edit modes and // macros if they are changed from within the editor
WITHOUT_CLASSIFICATION	//{{{ initSiteProperties() method
WITHOUT_CLASSIFICATION	//{{{ initSystemProperties() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// site properties are loaded as default properties, overwriting // jEdit's system properties
WITHOUT_CLASSIFICATION	//{{{ initResources() method
WITHOUT_CLASSIFICATION	//{{{ initPlugins() method
WITHOUT_CLASSIFICATION	//{{{ initUserProperties() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ initPLAF() method
WITHOUT_CLASSIFICATION	// give all Swing components our colors
WITHOUT_CLASSIFICATION	//defaults.put(prefix + ".inactiveForeground",foreground);
WITHOUT_CLASSIFICATION	//{{{ runStartupScripts() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// null not supported?
WITHOUT_CLASSIFICATION	//{{{ FirewallAuthenticator class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ finishStartup() method
WITHOUT_CLASSIFICATION	// Start I/O threads
WITHOUT_CLASSIFICATION	// Start edit server
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Report any plugin errors
WITHOUT_CLASSIFICATION	//{{{ showPluginErrorDialog() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// in one case not a single AWT class will // have been touched (splash screen off + // -nogui -nobackground switches on command // line)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addBufferToList() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Can't happen
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getNotLoadedPluginJARs() method
WITHOUT_CLASSIFICATION	//{{{ gotoMarker() method
WITHOUT_CLASSIFICATION	// Handle line number
WITHOUT_CLASSIFICATION	// Handle marker
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// default value
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Sort buffer list
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ removeViewFromList() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// fixes the hang that can occur if we 'save as' to a new // filename which requires re-sorting
WITHOUT_CLASSIFICATION	//{{{ addViewToList() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ initKeyBindings() method
WITHOUT_CLASSIFICATION	//{{{ getProperties() method
WITHOUT_CLASSIFICATION	//{{{ closeView() method
WITHOUT_CLASSIFICATION	/* exit does editor event & save */
WITHOUT_CLASSIFICATION	//{{{ loadModeCatalog() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadSystemProps() method
WITHOUT_CLASSIFICATION	//{{{ loadSiteProps() method
WITHOUT_CLASSIFICATION	//{{{ loadUserProps() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ saveUserProps() method
WITHOUT_CLASSIFICATION	//{{{ loadPluginProps() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//{{{ setProperty() method
WITHOUT_CLASSIFICATION	//{{{ addPluginProps() method
WITHOUT_CLASSIFICATION	//{{{ removePluginProps() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setTemporaryProperty() method
WITHOUT_CLASSIFICATION	//{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	//{{{ resetProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getDefaultProperty() method
WITHOUT_CLASSIFICATION	//{{{ loadProps() method
WITHOUT_CLASSIFICATION	//{{{ Mode constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	//{{{ setTokenMarker() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setProperty() method
WITHOUT_CLASSIFICATION	//{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ accept() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ evalSelection() method
WITHOUT_CLASSIFICATION	//{{{ showEvaluateDialog() method
WITHOUT_CLASSIFICATION	//{{{ showEvaluateLinesDialog() method
WITHOUT_CLASSIFICATION	//{{{ _runScript() method
WITHOUT_CLASSIFICATION	//{{{ _runScript() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	// user cancelled???
WITHOUT_CLASSIFICATION	//{{{ getStringProperty() method
WITHOUT_CLASSIFICATION	//{{{ setStringProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setBooleanProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getIntegerProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setIntegerProperty() method
WITHOUT_CLASSIFICATION	// will be cached from now on...
WITHOUT_CLASSIFICATION	//{{{ getRegexpProperty() method
WITHOUT_CLASSIFICATION	//{{{ getRuleSetAtOffset() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//{{{ eval() method
WITHOUT_CLASSIFICATION	//{{{ _eval() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//{{{ cacheBlock() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ eval() method
WITHOUT_CLASSIFICATION	//{{{ eval() method
WITHOUT_CLASSIFICATION	// never called
WITHOUT_CLASSIFICATION	//{{{ runCachedBlock() method
WITHOUT_CLASSIFICATION	//{{{ isScriptRunning() method
WITHOUT_CLASSIFICATION	//{{{ getNameSpace() method
WITHOUT_CLASSIFICATION	//{{{ Deprecated functions
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//{{{ resetClassManager() method
WITHOUT_CLASSIFICATION	//{{{ setupDefaultVariables() method
WITHOUT_CLASSIFICATION	//{{{ resetDefaultVariables() method
WITHOUT_CLASSIFICATION	//{{{ unwrapException() method
WITHOUT_CLASSIFICATION	//{{{ handleException() method
WITHOUT_CLASSIFICATION	//{{{ createInterpreter() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// garbage collected
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// clean up old listeners
WITHOUT_CLASSIFICATION	//System.err.println("cleaned up weak ref: "+deadref);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getKeywordMapAtOffset() method
WITHOUT_CLASSIFICATION	//{{{ getContextSensitiveProperty() method
WITHOUT_CLASSIFICATION	// remove duplicates
WITHOUT_CLASSIFICATION	// remove duplicates
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Used to store property values
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// clean up old listeners
WITHOUT_CLASSIFICATION	//System.err.println("cleaned up weak ref: "+deadref);
WITHOUT_CLASSIFICATION	// clear the static caches in BshClassManager
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// garbage collected
WITHOUT_CLASSIFICATION	//{{{ User interface
WITHOUT_CLASSIFICATION	//{{{ Groups
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Common layers
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Layers for top group
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Layers for bottom group
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getDockableWindowManager() method
WITHOUT_CLASSIFICATION	//{{{ getToolBar() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	//{{{ showWaitCursor() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// still needed even though glass pane // has a wait cursor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ hideWaitCursor() method
WITHOUT_CLASSIFICATION	//{{{ getStatus() method
WITHOUT_CLASSIFICATION	//{{{ getActionBar() method
WITHOUT_CLASSIFICATION	//{{{ getSearchBar() method
WITHOUT_CLASSIFICATION	//{{{ quickIncrementalSearch() method
WITHOUT_CLASSIFICATION	//{{{ quickHyperSearch() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getInputHandler() method
WITHOUT_CLASSIFICATION	//{{{ Input handling
WITHOUT_CLASSIFICATION	//{{{ getKeyEventInterceptor() method
WITHOUT_CLASSIFICATION	//{{{ setKeyEventInterceptor() method
WITHOUT_CLASSIFICATION	//{{{ setInputHandler() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getMacroRecorder() method
WITHOUT_CLASSIFICATION	//{{{ setMacroRecorder() method
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) FormalParameters */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Gather all of the methods of class and parents
WITHOUT_CLASSIFICATION	//{{{ toggleWordWrap() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* boolean */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Buffers, edit panes, split panes
WITHOUT_CLASSIFICATION	//{{{ splitHorizontally() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*	Type, name and expression syntax follows.*/
WITHOUT_CLASSIFICATION	//{{{ splitVertically() method
WITHOUT_CLASSIFICATION	//{{{ split() method
WITHOUT_CLASSIFICATION	//{{{ unsplit() method
WITHOUT_CLASSIFICATION	//{{{ unsplitCurrent() method
WITHOUT_CLASSIFICATION	// find first split pane parenting current edit pane
WITHOUT_CLASSIFICATION	// Succeeded.  Cache the resolved method.
WITHOUT_CLASSIFICATION	// Is the method public or are we in accessibility mode?
WITHOUT_CLASSIFICATION	// Yes, it is.
WITHOUT_CLASSIFICATION	// Found at least one matching method but couldn't use
WITHOUT_CLASSIFICATION	// ignore and move on
WITHOUT_CLASSIFICATION	// No, it is not.
WITHOUT_CLASSIFICATION	// Is this a class?
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Type */
WITHOUT_CLASSIFICATION	/*ignore*/
WITHOUT_CLASSIFICATION	/* 			Find an appropriate constructor.			use declared here to see package and private as well			(there are no inherited constructors to worry about) 		*/
WITHOUT_CLASSIFICATION	// get rid of any edit pane that is a child // of the current edit pane's parent splitter
WITHOUT_CLASSIFICATION	//{{{ nextTextArea() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Pull out the method signatures with matching names
WITHOUT_CLASSIFICATION	// method matches name 
WITHOUT_CLASSIFICATION	/*        This method should parallel findMostSpecificMethod()    */
WITHOUT_CLASSIFICATION	//{{{ prevTextArea() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getSplitPane() method
WITHOUT_CLASSIFICATION	//{{{ setBuffer() method
WITHOUT_CLASSIFICATION	//{{{ goToBuffer() method
WITHOUT_CLASSIFICATION	/* ignore zero-height splits, etc */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getTextArea() method
WITHOUT_CLASSIFICATION	//{{{ getEditPane() method
WITHOUT_CLASSIFICATION	//{{{ getEditPanes() method
WITHOUT_CLASSIFICATION	//{{{ getViewConfig() method
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) FormalParameter */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* fall through */
WITHOUT_CLASSIFICATION	/*bcm*/
WITHOUT_CLASSIFICATION	/*bcm*/
WITHOUT_CLASSIFICATION	/*shouldn't happen*/
WITHOUT_CLASSIFICATION	// why so cute?
WITHOUT_CLASSIFICATION	// add interpereter and namespace to args list
WITHOUT_CLASSIFICATION	/*@bgen(jjtree)*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree)*/
WITHOUT_CLASSIFICATION	/*this originally handled postfix array dimensions...void VariableDeclaratorId() #VariableDeclaratorId :{ Token t; }{  t=<IDENTIFIER> { jjtThis.name = t.image; }  ( "[" "]" { jjtThis.addUndefinedDimension(); } )*}*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*	Gather modifiers for a class, method, or field.	I lookahead is true then we are being called as part of a lookahead and we	should not enforce any rules.  Otherwise we validate based on context	(field, method, class)*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ClassDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) MethodDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) PackageDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ImportDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) VariableDeclarator */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ReturnType */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) PrimitiveType */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) AmbiguousName */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Assignment */
WITHOUT_CLASSIFICATION	// This production is to determine lookahead only.
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) CastExpression */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) PrimaryExpression */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) PrimarySuffix */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Literal */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// leave these on the stack for Arguments() to handle
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) AllocationExpression */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ArrayDimensions */
WITHOUT_CLASSIFICATION	/* * Statement syntax follows. */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Block */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) #FormalComment( retainComments) */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) SwitchStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) SwitchLabel */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) WhileStatement */
WITHOUT_CLASSIFICATION	/*	Do statement is just a While statement with a special hook to execute	at least once.*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ForStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) EnhancedForStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) TypedVariableDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) StatementExpressionList */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ReturnStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ThrowStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) TryStatement */
WITHOUT_CLASSIFICATION	// All core AWT listeners
WITHOUT_CLASSIFICATION	// All listeners in javax.swing.event as of Swing 1.1
WITHOUT_CLASSIFICATION	// handleEvent gets all events
WITHOUT_CLASSIFICATION	/*squeltch*/
WITHOUT_CLASSIFICATION	// send to specific event handler
WITHOUT_CLASSIFICATION	// Listener interfaces
WITHOUT_CLASSIFICATION	// Listener interfaces
WITHOUT_CLASSIFICATION	// used for the delayed evaluation...
WITHOUT_CLASSIFICATION	// Token was accepted
WITHOUT_CLASSIFICATION	/*paramTypes*/
WITHOUT_CLASSIFICATION	/*returnType*/
WITHOUT_CLASSIFICATION	// BSHType will cache the type for us
WITHOUT_CLASSIFICATION	// Hashtable implements Map
WITHOUT_CLASSIFICATION	// BSHFormalParameters will cache the type for us
WITHOUT_CLASSIFICATION	// Hashtable implements Map
WITHOUT_CLASSIFICATION	// Arrays incomplete... need to use the array setter
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Hypothetical question: can you have a RE that matches 1 times, // 3 times, 5 times, but not 2 times or 4 times?  Does having // the subexpression back-reference operator allow that?
WITHOUT_CLASSIFICATION	//{{{ isClosed() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Possible positions for the next repeat to match at
WITHOUT_CLASSIFICATION	// Declare variables used in loop
WITHOUT_CLASSIFICATION	// try next repeat at all possible positions
WITHOUT_CLASSIFICATION	// add all items in current to doables array
WITHOUT_CLASSIFICATION	// Find new doablesLast
WITHOUT_CLASSIFICATION	// if none of the possibilities worked out, break out of do/while
WITHOUT_CLASSIFICATION	// reassign where the next repeat can match
WITHOUT_CLASSIFICATION	// increment how many repeats we've successfully found
WITHOUT_CLASSIFICATION	// If there aren't enough repeats, then fail
WITHOUT_CLASSIFICATION	// We're greedy, but ease off until a true match is found 
WITHOUT_CLASSIFICATION	// else did not match rest of the tokens, try again on smaller sample
WITHOUT_CLASSIFICATION	// does this get all?
WITHOUT_CLASSIFICATION	// If we fall out, no matches.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isPlainView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// clone() separates a single match from the chain
WITHOUT_CLASSIFICATION	// chain results to doneIndex
WITHOUT_CLASSIFICATION	// Find new doneIndexLast
WITHOUT_CLASSIFICATION	// matches after a newline
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// position in REToken.newline
WITHOUT_CLASSIFICATION	// Don't match at all if REG_NOTBOL is set.
WITHOUT_CLASSIFICATION	// value for end
WITHOUT_CLASSIFICATION	// closer to end
WITHOUT_CLASSIFICATION	// Allocate more space in the buffer.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// value for end
WITHOUT_CLASSIFICATION	// Big enough for a \r\n pair // lookBehind[0] = most recent // lookBehind[1] = second most recent
WITHOUT_CLASSIFICATION	// this.index is index of next pos relative to charAt(0)
WITHOUT_CLASSIFICATION	// set flag that next should fail next time?
WITHOUT_CLASSIFICATION	// move read position [index] clicks from 'charAt(0)'
WITHOUT_CLASSIFICATION	// If we have buffered replace data, use it.
WITHOUT_CLASSIFICATION	// This is prone to infinite loops if replace string turns out empty.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// closer to end
WITHOUT_CLASSIFICATION	// Allocate more space in the buffer.
WITHOUT_CLASSIFICATION	// this.index is index of next pos relative to charAt(0)
WITHOUT_CLASSIFICATION	// set flag that next should fail next time?
WITHOUT_CLASSIFICATION	// move read position [index] clicks from 'charAt(0)'
WITHOUT_CLASSIFICATION	// convert the byte read into a char
WITHOUT_CLASSIFICATION	// Error conditions from GNU regcomp(3) manual
WITHOUT_CLASSIFICATION	// Package scope constructor is used by RE.getMatchEnumeration()
WITHOUT_CLASSIFICATION	//else
WITHOUT_CLASSIFICATION	//else
WITHOUT_CLASSIFICATION	// no match
WITHOUT_CLASSIFICATION	// doesn't happen
WITHOUT_CLASSIFICATION	// need to deep clone?
WITHOUT_CLASSIFICATION	// cut off alternates
WITHOUT_CLASSIFICATION	// cut off alternates
WITHOUT_CLASSIFICATION	// Anchor position refers to the index into the source input // at which the matching operation began. // This is also useful for the ANCHORINDEX option.
WITHOUT_CLASSIFICATION	// Offset in source text where match was tried.  This is zero-based; // the actual position in the source text is given by (offset + anchor).
WITHOUT_CLASSIFICATION	// Package scope; used by RE. // used while matching to mark current match position in input // start positions (relative to offset) for each (sub)exp. // end positions for the same // other possibility (to avoid having to use arrays)
WITHOUT_CLASSIFICATION	// position in newline
WITHOUT_CLASSIFICATION	// assume for now that next can only be one character
WITHOUT_CLASSIFICATION	// Overrides REToken.chain() to optimize for strings
WITHOUT_CLASSIFICATION	// Note that there is some debate over whether '_' should be included
WITHOUT_CLASSIFICATION	// The RE constructor uses this to look up the constant for a string
WITHOUT_CLASSIFICATION	// Array indices correspond to constants defined above.
WITHOUT_CLASSIFICATION	// This is the number of subexpressions in this regular expression, // with a minimum value of zero.  Returned by getNumSubs()
WITHOUT_CLASSIFICATION	// The localized strings are kept in a separate file
WITHOUT_CLASSIFICATION	// This String will be returned by getVersion()
WITHOUT_CLASSIFICATION	// Retrieves a message from the ResourceBundle
WITHOUT_CLASSIFICATION	// internal constructor used for alternation
WITHOUT_CLASSIFICATION	// Subexpression index of this token.
WITHOUT_CLASSIFICATION	// For use by subclasses
WITHOUT_CLASSIFICATION	// The meat of construction
WITHOUT_CLASSIFICATION	// Number of subexpressions in this token.
WITHOUT_CLASSIFICATION	// linked list of tokens (sort of -- some closed loops can exist)
WITHOUT_CLASSIFICATION	// Precalculate these so we don't pay for the math every time we // need to access them.
WITHOUT_CLASSIFICATION	// This is the case of {x,}
WITHOUT_CLASSIFICATION	// This is used for {x,y} calculations
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Buffer a token so we can create a TokenRepeated, etc.
WITHOUT_CLASSIFICATION	// read the next character unit (including backslash escapes)
WITHOUT_CLASSIFICATION	// make everything up to here be a branch. create vector if nec.
WITHOUT_CLASSIFICATION	// LIST OPERATOR: //  [...] | [^...]
WITHOUT_CLASSIFICATION	// Check for initial caret, negation
WITHOUT_CLASSIFICATION	// Check for leading right bracket literal
WITHOUT_CLASSIFICATION	// Create a new RETokenOneOf
WITHOUT_CLASSIFICATION	//{{{ setWaitSocket() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// find end of subexpression
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// not a comment // subexpression
WITHOUT_CLASSIFICATION	//{{{ getNext() method
WITHOUT_CLASSIFICATION	// START OF LINE OPERATOR //  ^
WITHOUT_CLASSIFICATION	// END OF LINE OPERATOR //  $
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Read string of digits
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// BACKREFERENCE OPERATOR //  \1 \2 ... \9 // not available if RE_NO_BK_REFS is set
WITHOUT_CLASSIFICATION	// Check for stingy matching on RETokenRepeated
WITHOUT_CLASSIFICATION	// START OF STRING OPERATOR //  \A if RE_STRING_ANCHORS is set
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// WORD END OPERATOR  //  \> if ????
WITHOUT_CLASSIFICATION	// NON-WORD BREAK OPERATOR // \B if ????
WITHOUT_CLASSIFICATION	// NON-DIGIT OPERATOR //  \D
WITHOUT_CLASSIFICATION	// NEWLINE ESCAPE //  \n
WITHOUT_CLASSIFICATION	// RETURN ESCAPE //  \r
WITHOUT_CLASSIFICATION	// WHITESPACE OPERATOR //  \s if RE_CHAR_CLASS_ESCAPES is set
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// ALPHANUMERIC OPERATOR //  \w
WITHOUT_CLASSIFICATION	// NON-ALPHANUMERIC OPERATOR //  \W
WITHOUT_CLASSIFICATION	// END OF STRING OPERATOR //  \Z
WITHOUT_CLASSIFICATION	// not a special character
WITHOUT_CLASSIFICATION	// end while
WITHOUT_CLASSIFICATION	// Add final buffered token and an EndSub marker
WITHOUT_CLASSIFICATION	// compact the Vector
WITHOUT_CLASSIFICATION	// Trivial case
WITHOUT_CLASSIFICATION	// Overrides REToken.setUncle
WITHOUT_CLASSIFICATION	// to deal with empty subexpressions
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// handle pathological case of zero-length match
WITHOUT_CLASSIFICATION	/* Implements abstract method REToken.match() */
WITHOUT_CLASSIFICATION	// Note the start of this subexpression
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Read string of digits
WITHOUT_CLASSIFICATION	// Find longest match of them all to observe leftmost longest
WITHOUT_CLASSIFICATION	// Append character to buffer if needed
WITHOUT_CLASSIFICATION	//{{{ getPrev() method
WITHOUT_CLASSIFICATION	/* Helper function for constructor */
WITHOUT_CLASSIFICATION	// didn't match up
WITHOUT_CLASSIFICATION	// Precondition: input[index-1] == '{', minMax != null
WITHOUT_CLASSIFICATION	// This constructor is used for convenience when we know the set beforehand, // e.g. \d --> new RETokenOneOf("0123456789",false, ..) //      \D --> new RETokenOneOf("0123456789",true, ..)
WITHOUT_CLASSIFICATION	// We know min and max now, and they are valid.
WITHOUT_CLASSIFICATION	// return the index following the '}'
WITHOUT_CLASSIFICATION	// Cast input appropriately or throw exception
WITHOUT_CLASSIFICATION	// do we lose index info?
WITHOUT_CLASSIFICATION	// match was successful
WITHOUT_CLASSIFICATION	// Add tryMatch to list of possibilities.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	// set contents of mymatch equal to newMatch
WITHOUT_CLASSIFICATION	// try each one that matched
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ View constructor
WITHOUT_CLASSIFICATION	// index+1 works for [^abc] lists, not for generic lookahead (--> index)
WITHOUT_CLASSIFICATION	// If we have buffered replace data, use it.
WITHOUT_CLASSIFICATION	// check if input is at a valid position
WITHOUT_CLASSIFICATION	// handled by RE
WITHOUT_CLASSIFICATION	// true for the constant defined syntaxes
WITHOUT_CLASSIFICATION	// Values for constants are bit indexes
WITHOUT_CLASSIFICATION	// impl.
WITHOUT_CLASSIFICATION	// single line mode (/s)
WITHOUT_CLASSIFICATION	// Define syntaxes
WITHOUT_CLASSIFICATION	/* P1003.2/D11.2, section 4.20.7.1, lines 5078ff.  */
WITHOUT_CLASSIFICATION	/* Differs from RE_SYNTAX_POSIX_EXTENDED in that RE_CONTEXT_INVALID_OPS	 replaces RE_CONTEXT_INDEP_OPS and RE_NO_BK_REFS is added. */
WITHOUT_CLASSIFICATION	/* There is no official Perl spec, but here's a "best guess" */
WITHOUT_CLASSIFICATION	// except for '{', apparently
WITHOUT_CLASSIFICATION	// \d,\D,\w,\W,\s,\S
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// UNDONE
WITHOUT_CLASSIFICATION	// XXX
WITHOUT_CLASSIFICATION	// Unexpected EOF!
WITHOUT_CLASSIFICATION	// Per Patrick Beard:
WITHOUT_CLASSIFICATION	/*     * always: in the range 0 .. 9.     * The current block size is 100000 * this number.     */
WITHOUT_CLASSIFICATION	/*     * index of the last char in the block, so     * the block size == last + 1.     */
WITHOUT_CLASSIFICATION	/*     * index in zptr[] of original string after sorting.     */
WITHOUT_CLASSIFICATION	//throw new CCoruptionError();
WITHOUT_CLASSIFICATION	// throw new IOException("Invalid block size");
WITHOUT_CLASSIFICATION	/*         * not a char and not EOF         */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*         * A bad CRC is considered a fatal error.         */
WITHOUT_CLASSIFICATION	//        currBlockNo++;
WITHOUT_CLASSIFICATION	/*         * Now the selectors         */
WITHOUT_CLASSIFICATION	/*         * Now the coding tables         */
WITHOUT_CLASSIFICATION	/*         * Create the Huffman decoding tables         */
WITHOUT_CLASSIFICATION	/*         * Receive the mapping table         */
WITHOUT_CLASSIFICATION	/* XXX */
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	/*     * If you are ever unlucky/improbable enough     * to get a stack overflow whilst sorting,     * increase the following constant and try     * again.  In practice I have never seen the     * stack go above 27 elems, so the following     * limit seems very generous.     */
WITHOUT_CLASSIFICATION	/*     * Knuth's increments seem to work better     * than Incerpi-Sedgewick here.  Possibly     * because the number of elems to sort is     * usually small, typically <= 20.     */
WITHOUT_CLASSIFICATION	/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */
WITHOUT_CLASSIFICATION	//        ch = 0;
WITHOUT_CLASSIFICATION	/*     * index in zptr[] of original string after sorting.     */
WITHOUT_CLASSIFICATION	/*         * The back end needs a place to store the MTF values         * whilst it calculates the coding tables.  We could         * put them in the zptr array.  However, these values         * will fit in a short, so we overlay szptr at the         * start of zptr, in the hope of reducing the number         * of cache misses induced by the multiple traversals         * of the MTF values when calculating coding tables.         * Seems to improve compression speed by about 1%.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	//throw new CError();
WITHOUT_CLASSIFICATION	//    szptr = zptr;
WITHOUT_CLASSIFICATION	//        blockNo++;
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	/*         * sort the block and establish posn of original string         */
WITHOUT_CLASSIFICATION	/*         * Now the block's CRC, so it is in a known place.         */
WITHOUT_CLASSIFICATION	/*         * Now a single bit indicating randomisation.         */
WITHOUT_CLASSIFICATION	/*         * Finally, block's contents proper.         */
WITHOUT_CLASSIFICATION	/*         * Now another magic 48-bit number, 0x177245385090, to         * indicate the end of the last block.  (sqrt(pi), if         * you want to know.  I did want to use e, but it contains         * too much repetition -- 27 18 28 18 28 46 -- for me         * to feel statistically comfortable.  Call me paranoid.)         */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*         * In the various block-sized structures, live data runs         * from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,         * set up the overshoot area for block.         */
WITHOUT_CLASSIFICATION	/*             * Use simpleSort(), since the full sorting mechanism             * has quite a large constant overhead.             */
WITHOUT_CLASSIFICATION	/*             * Now ftab contains the first loc of every small bucket.             * Calculate the running order, from smallest to largest             * big bucket.             */
WITHOUT_CLASSIFICATION	/*             * The main sorting loop.             */
WITHOUT_CLASSIFICATION	/*                 * Process big buckets, starting with the least full.                 */
WITHOUT_CLASSIFICATION	//{{{ close() method
WITHOUT_CLASSIFICATION	// handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	/*         * Decide how many coding tables to use         */
WITHOUT_CLASSIFICATION	/*             * Generate an initial set of coding tables             */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*         * Iterate up to N_ITERS times to improve the tables.         */
WITHOUT_CLASSIFICATION	/*                 * Set group start & end marks.                 */
WITHOUT_CLASSIFICATION	/*                 * Calculate the cost of this group as coded                 * by each of the coding tables.                 */
WITHOUT_CLASSIFICATION	// run jEditLauncher installation
WITHOUT_CLASSIFICATION	/*                 * Increment the symbol frequencies for the selected table.                 */
WITHOUT_CLASSIFICATION	/*             * Recompute the tables based on the accumulated frequencies.             */
WITHOUT_CLASSIFICATION	/*             * Compute MTF values for the selectors.             */
WITHOUT_CLASSIFICATION	/*         * Assign actual codes for the tables.         */
WITHOUT_CLASSIFICATION	/*             * Transmit the mapping table.             */
WITHOUT_CLASSIFICATION	/*         * Now the selectors.         */
WITHOUT_CLASSIFICATION	/*                     * 11                     */
WITHOUT_CLASSIFICATION	/*         * And finally, the block data proper         */
WITHOUT_CLASSIFICATION	/*                 * copy 1                 */
WITHOUT_CLASSIFICATION	/*                 * copy 2                 */
WITHOUT_CLASSIFICATION	// ( (this.assemLen + numToWrite ) < this.recordBuf.length )
WITHOUT_CLASSIFICATION	// // When we get here we have EITHER: //   o An empty "assemble" buffer. //   o No bytes to write (numToWrite == 0) //
WITHOUT_CLASSIFICATION	//in.close();
WITHOUT_CLASSIFICATION	// Pass 1: compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	// Pass 2: redistribute free space
WITHOUT_CLASSIFICATION	// synchronized
WITHOUT_CLASSIFICATION	// on by default
WITHOUT_CLASSIFICATION	// create app start script
WITHOUT_CLASSIFICATION	// Delete existing copy
WITHOUT_CLASSIFICATION	// Write simple script
WITHOUT_CLASSIFICATION	// Make it executable
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	/* XXX */
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	/* new JEditLauncherOSTask(installer) */
WITHOUT_CLASSIFICATION	// install user-selected packages
WITHOUT_CLASSIFICATION	// do operating system specific stuff (creating startup // scripts, installing man pages, etc.)
WITHOUT_CLASSIFICATION	//System.err.println(fileName);
WITHOUT_CLASSIFICATION	// label == null means no configurable options
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ getPosition() method
WITHOUT_CLASSIFICATION	//{{{ Marker constructor
WITHOUT_CLASSIFICATION	//{{{ setShortcut() method
WITHOUT_CLASSIFICATION	//{{{ createPosition() method
WITHOUT_CLASSIFICATION	//{{{ removePosition() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// forget the cached Position instance
WITHOUT_CLASSIFICATION	//{{{ setPosition() method
WITHOUT_CLASSIFICATION	//{{{ isPerspectiveDirty() method
WITHOUT_CLASSIFICATION	//{{{ setPerspectiveDirty() method
WITHOUT_CLASSIFICATION	//{{{ loadPerspective() method
WITHOUT_CLASSIFICATION	//{{{ savePerspective() method
WITHOUT_CLASSIFICATION	// backgrounded
WITHOUT_CLASSIFICATION	//{{{ input() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ PerspectiveHandler class
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ showRunScriptDialog() method
WITHOUT_CLASSIFICATION	//{{{ message() method
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	// save dockable window geometry, and close 'em
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ input() method
WITHOUT_CLASSIFICATION	// only executed if above loop falls // through, ie there is no handler for // this file
WITHOUT_CLASSIFICATION	//{{{ confirm() method
WITHOUT_CLASSIFICATION	//{{{ confirm() method
WITHOUT_CLASSIFICATION	//{{{ loadMacros() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ registerHandler() method
WITHOUT_CLASSIFICATION	//{{{ getHandlers() method
WITHOUT_CLASSIFICATION	//{{{ getHandlerForFileName() method
WITHOUT_CLASSIFICATION	//{{{ getHandler() method
WITHOUT_CLASSIFICATION	//{{{ getMacroHierarchy() method
WITHOUT_CLASSIFICATION	//{{{ getMacroActionSet() method
WITHOUT_CLASSIFICATION	//{{{ getMacro() method
WITHOUT_CLASSIFICATION	//{{{ Macro class
WITHOUT_CLASSIFICATION	//{{{ Macro constructor
WITHOUT_CLASSIFICATION	//{{{ getPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getHandler() method
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ macroNameToLabel() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ loadMacros() method
WITHOUT_CLASSIFICATION	//{{{ recordTemporaryMacro() method
WITHOUT_CLASSIFICATION	//{{{ recordMacro() method
WITHOUT_CLASSIFICATION	//{{{ stopRecording() method
WITHOUT_CLASSIFICATION	//{{{ runTemporaryMacro() method
WITHOUT_CLASSIFICATION	/* I already wrote a comment expaining this in			 * Macro.invoke(). */
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ recordMacro() method
WITHOUT_CLASSIFICATION	/* do nothing! */
WITHOUT_CLASSIFICATION	//{{{ try to merge with an existing menu first
WITHOUT_CLASSIFICATION	//{{{ addMacro() method
WITHOUT_CLASSIFICATION	// ignore if already added. // see comment in loadMacros().
WITHOUT_CLASSIFICATION	// setting the message to 'null' causes the status bar to check // if a recording is in progress
WITHOUT_CLASSIFICATION	//{{{ Recorder class
WITHOUT_CLASSIFICATION	//{{{ Recorder constructor
WITHOUT_CLASSIFICATION	//{{{ record() method
WITHOUT_CLASSIFICATION	//{{{ record() method
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ recordInput() method
WITHOUT_CLASSIFICATION	//{{{ recordInput() method
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ accept() method
WITHOUT_CLASSIFICATION	//{{{ createMacro() method
WITHOUT_CLASSIFICATION	//{{{ Handler class
WITHOUT_CLASSIFICATION	// setting the message to 'null' causes the status bar to // check if a recording is in progress
WITHOUT_CLASSIFICATION	//{{{ flushInput() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getLabel() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ Handler constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ createMacro() method
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ BeanShellHandler class
WITHOUT_CLASSIFICATION	//{{{ BeanShellHandler constructor
WITHOUT_CLASSIFICATION	// Remove '.bsh'
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Some predefined icons
WITHOUT_CLASSIFICATION	//{{{ Icon methods
WITHOUT_CLASSIFICATION	//{{{ setIconPath() method
WITHOUT_CLASSIFICATION	//{{{ loadIcon() method
WITHOUT_CLASSIFICATION	// check if there is a cached version first
WITHOUT_CLASSIFICATION	// get the icon
WITHOUT_CLASSIFICATION	//{{{ getEditorIcon() method
WITHOUT_CLASSIFICATION	//{{{ getPluginIcon() method
WITHOUT_CLASSIFICATION	//{{{ Menus, tool bars
WITHOUT_CLASSIFICATION	//{{{ loadMenuBar() method
WITHOUT_CLASSIFICATION	//{{{ loadMenuBar() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ message() method
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	//{{{ input() method
WITHOUT_CLASSIFICATION	//{{{ input() method
WITHOUT_CLASSIFICATION	//{{{ confirm() method
WITHOUT_CLASSIFICATION	//{{{ inputProperty() method
WITHOUT_CLASSIFICATION	//{{{ loadMenu() method
WITHOUT_CLASSIFICATION	//{{{ loadMenu() method
WITHOUT_CLASSIFICATION	//{{{ loadToolBar() method
WITHOUT_CLASSIFICATION	//{{{ loadPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ loadPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ loadToolBar() method
WITHOUT_CLASSIFICATION	//{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	//{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	//{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	//{{{ inputProperty() method
WITHOUT_CLASSIFICATION	//{{{ loadToolButton() method
WITHOUT_CLASSIFICATION	//{{{ loadToolButton() method
WITHOUT_CLASSIFICATION	//{{{ prettifyMenuLabel() method
WITHOUT_CLASSIFICATION	//{{{ showVFSFileDialog() method
WITHOUT_CLASSIFICATION	//{{{ Canned dialog boxes
WITHOUT_CLASSIFICATION	//{{{ Colors and styles
WITHOUT_CLASSIFICATION	//{{{ parseColor() method
WITHOUT_CLASSIFICATION	//{{{ parseColor() method
WITHOUT_CLASSIFICATION	//{{{ parseStyle() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ parseStyle() method
WITHOUT_CLASSIFICATION	//{{{ loadStyles() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadStyles() method
WITHOUT_CLASSIFICATION	// start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	//{{{ Loading, saving window geometry
WITHOUT_CLASSIFICATION	//{{{ loadGeometry() method
WITHOUT_CLASSIFICATION	//{{{ adjustForScreenBounds() method
WITHOUT_CLASSIFICATION	// Make sure the window is displayed in visible region
WITHOUT_CLASSIFICATION	//{{{ ComponentHandler class
WITHOUT_CLASSIFICATION	//{{{ componentMoved() method
WITHOUT_CLASSIFICATION	//{{{ componentResized() method
WITHOUT_CLASSIFICATION	//{{{ WindowHandler class
WITHOUT_CLASSIFICATION	//{{{ windowOpened() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ saveGeometry() method
WITHOUT_CLASSIFICATION	//{{{ getExtendedState() method
WITHOUT_CLASSIFICATION	//{{{ setExtendedState() method
WITHOUT_CLASSIFICATION	//{{{ centerOnScreen() method
WITHOUT_CLASSIFICATION	//{{{ hideSplashScreen() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ createMultilineLabel() method
WITHOUT_CLASSIFICATION	//{{{ requestFocus() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ isMiddleButton() method
WITHOUT_CLASSIFICATION	//{{{ isPopupTrigger() method
WITHOUT_CLASSIFICATION	//{{{ isAncestorOf() method
WITHOUT_CLASSIFICATION	//System.err.println("x overflow");
WITHOUT_CLASSIFICATION	//{{{ isRightButton() method
WITHOUT_CLASSIFICATION	//{{{ getComponentParent() method
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ advanceSplashProgress() method
WITHOUT_CLASSIFICATION	//{{{ getParentDialog() method
WITHOUT_CLASSIFICATION	//{{{ showSplashScreen() method
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ AbstractOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	// Only show class decs in CLASSES
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getComponent() method
WITHOUT_CLASSIFICATION	// final in 4.2
WITHOUT_CLASSIFICATION	// final in 4.2
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// ALL
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ addSeparator() method
WITHOUT_CLASSIFICATION	//cons.insets = new Insets(1,0,1,0);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ addSeparator() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getEntry() method
WITHOUT_CLASSIFICATION	//{{{ setEntry() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getHistory() method
WITHOUT_CLASSIFICATION	//{{{ getBufferHistory() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,BufferHistory.class,fnf);
WITHOUT_CLASSIFICATION	/* to avoid data loss, only do this if the above			 * completed successfully */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ addEntry() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*				Try to squeltch the native code stack trace if the exception				was caused by a reflective call back into the bsh interpreter				(e.g. eval() or source()			*/
WITHOUT_CLASSIFICATION	// classExists caches info for us
WITHOUT_CLASSIFICATION	// classExists caches info for us
WITHOUT_CLASSIFICATION	// classExists caches the tests for us
WITHOUT_CLASSIFICATION	/*					Note: do *not* change this to 					BshClassManager plainClassForName() or equivalent.					This class must not touch any other bsh classes.				*/
WITHOUT_CLASSIFICATION	/*			Child is array initializer.  Evaluate it and fill in the 			dimensions it returns.  Initialized arrays are always fully defined			(no undefined dimensions to worry about).  			The syntax uses the undefinedDimension count.			e.g. int [][] { 1, 2 };		*/
WITHOUT_CLASSIFICATION	// fill in definedDimensions [] lengths
WITHOUT_CLASSIFICATION	// Evaluate the defined dimensions of the array
WITHOUT_CLASSIFICATION	// unsafe caching of types
WITHOUT_CLASSIFICATION	// first label
WITHOUT_CLASSIFICATION	// get the first label
WITHOUT_CLASSIFICATION	// while more labels or blocks and haven't hit return control
WITHOUT_CLASSIFICATION	// if label is default or equals switchVal
WITHOUT_CLASSIFICATION	// eval it
WITHOUT_CLASSIFICATION	// should check to disallow continue here?
WITHOUT_CLASSIFICATION	// skip nodes until next label
WITHOUT_CLASSIFICATION	// binaryOperation can return Primitive or wrapper type 
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ activatePlugin() method
WITHOUT_CLASSIFICATION	/* private */
WITHOUT_CLASSIFICATION	//{{{ removeEntry() method
WITHOUT_CLASSIFICATION	// XXX //e.printStackTrace();
WITHOUT_CLASSIFICATION	// Delegate to the static method
WITHOUT_CLASSIFICATION	// Create the class static namespace
WITHOUT_CLASSIFICATION	// Evaluate any inner class class definitions in the block  // effectively recursively call this method for contained classes first
WITHOUT_CLASSIFICATION	/*override*/
WITHOUT_CLASSIFICATION	/*override*/
WITHOUT_CLASSIFICATION	// Generate the type for our class
WITHOUT_CLASSIFICATION	// if debug, write out the class file to debugClasses directory
WITHOUT_CLASSIFICATION	// Define the new class in the classloader
WITHOUT_CLASSIFICATION	//bcm.doneDefiningClass( fqClassName );
WITHOUT_CLASSIFICATION	// import the unq name into parent
WITHOUT_CLASSIFICATION	//classStaticNameSpace.importClass( fqClassName.replace('$','.') );
WITHOUT_CLASSIFICATION	/*strictJava*/
WITHOUT_CLASSIFICATION	// evaluate the static portion of the block in the static space
WITHOUT_CLASSIFICATION	// Set the static bsh This callback 
WITHOUT_CLASSIFICATION	/*strict*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	// value error shouldn't happen
WITHOUT_CLASSIFICATION	/*declaringNameSpace*/
WITHOUT_CLASSIFICATION	//{{{ getFile() method
WITHOUT_CLASSIFICATION	// Also cache it in the static namespace... //classStaticNameSpace.cacheClass( name, genClass );
WITHOUT_CLASSIFICATION	// Give the static space its class static import // important to do this after all classes are defined
WITHOUT_CLASSIFICATION	// look for the specially named super delegate method
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	// make all buttons the same size
WITHOUT_CLASSIFICATION	// cancel button goes on far left
WITHOUT_CLASSIFICATION	// prev and next buttons are on the right
WITHOUT_CLASSIFICATION	// calculate size for current page
WITHOUT_CLASSIFICATION	//{{{ getPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getCachePath() method
WITHOUT_CLASSIFICATION	//{{{ getZipFile() method
WITHOUT_CLASSIFICATION	//{{{ getClassLoader() method
WITHOUT_CLASSIFICATION	//{{{ getActions() method
WITHOUT_CLASSIFICATION	//{{{ getActionSet() method
WITHOUT_CLASSIFICATION	//{{{ getBrowserActionSet() method
WITHOUT_CLASSIFICATION	//{{{ checkDependencies() method
WITHOUT_CLASSIFICATION	//{{{ getDependentPlugins() method
WITHOUT_CLASSIFICATION	//{{{ getPlugin() method
WITHOUT_CLASSIFICATION	// recursive call
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// package-private members // package-private, not private, for speedy access by inner classes
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// for thread safety
WITHOUT_CLASSIFICATION	//{{{ activateIfNecessary() method
WITHOUT_CLASSIFICATION	// 4.1 plugin
WITHOUT_CLASSIFICATION	// 4.2 plugin
WITHOUT_CLASSIFICATION	// if at least one property listed here is true, // load the plugin
WITHOUT_CLASSIFICATION	//{{{ deactivatePlugin() method
WITHOUT_CLASSIFICATION	// see if this is a 4.1-style plugin
WITHOUT_CLASSIFICATION	//{{{ getDockablesURI() method
WITHOUT_CLASSIFICATION	//{{{ getServicesURI() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Static methods
WITHOUT_CLASSIFICATION	//{{{ getPluginCache() method
WITHOUT_CLASSIFICATION	// returns false with outdated cache
WITHOUT_CLASSIFICATION	//{{{ setPluginCache() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ PluginJAR constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ uninit() method
WITHOUT_CLASSIFICATION	//{{{ getClasses() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Check if a plugin with the same name // is already loaded
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ actionsPresentButNotCoreClass() method
WITHOUT_CLASSIFICATION	//{{{ loadCache() method
WITHOUT_CLASSIFICATION	//{{{ generateCache() method
WITHOUT_CLASSIFICATION	//{{{ startPlugin() method
WITHOUT_CLASSIFICATION	// old plugins expected jEdit 4.1-style // behavior, where a PropertiesChanged // was sent after plugins were started
WITHOUT_CLASSIFICATION	// buffers retain a reference to the fold handler in // question... and the easiest way to handle fold // handler loading is this...
WITHOUT_CLASSIFICATION	// == null before loaded
WITHOUT_CLASSIFICATION	//{{{ startPluginLater() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ breakPlugin() method
WITHOUT_CLASSIFICATION	// but we want properties to hang around
WITHOUT_CLASSIFICATION	//{{{ PluginCacheEntry class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ read() method
WITHOUT_CLASSIFICATION	/* read() and write() must be kept perfectly in sync...		 * its a very simple file format. doing it this way is		 * faster than serializing since serialization calls		 * reflection, etc. */
WITHOUT_CLASSIFICATION	//{{{ readStringArray() method
WITHOUT_CLASSIFICATION	//{{{ readURI() method
WITHOUT_CLASSIFICATION	//{{{ write() method
WITHOUT_CLASSIFICATION	//{{{ readBooleanArray() method
WITHOUT_CLASSIFICATION	//{{{ readMap() method
WITHOUT_CLASSIFICATION	//{{{ writeStringArray() method
WITHOUT_CLASSIFICATION	//{{{ writeBooleanArray() method
WITHOUT_CLASSIFICATION	//{{{ writeMap() method
WITHOUT_CLASSIFICATION	//{{{ Roster constructor
WITHOUT_CLASSIFICATION	//{{{ addRemove() method
WITHOUT_CLASSIFICATION	//{{{ addInstall() method
WITHOUT_CLASSIFICATION	//{{{ getOperation() method
WITHOUT_CLASSIFICATION	//{{{ getOperationCount() method
WITHOUT_CLASSIFICATION	//{{{ isEmpty() method
WITHOUT_CLASSIFICATION	//{{{ performOperationsInWorkThread() method
WITHOUT_CLASSIFICATION	//{{{ performOperationsInAWTThread() method
WITHOUT_CLASSIFICATION	// add the JARs before checking deps since dep check might // require all JARs to be present
WITHOUT_CLASSIFICATION	// now activate the plugins
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Operation interface
WITHOUT_CLASSIFICATION	//{{{ addOperation() method
WITHOUT_CLASSIFICATION	//{{{ getDownloadDir() method
WITHOUT_CLASSIFICATION	//{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	//{{{ Remove constructor
WITHOUT_CLASSIFICATION	//{{{ Remove class
WITHOUT_CLASSIFICATION	//{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	// close JAR file and all JARs that depend on this
WITHOUT_CLASSIFICATION	// remove cache file
WITHOUT_CLASSIFICATION	// move JAR first
WITHOUT_CLASSIFICATION	//{{{ unloadPluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	//{{{ Install class
WITHOUT_CLASSIFICATION	//{{{ Install constructor
WITHOUT_CLASSIFICATION	// catch those hooligans passing null urls
WITHOUT_CLASSIFICATION	//{{{ getMaximum() method
WITHOUT_CLASSIFICATION	//{{{ runInWorkThread() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	// check if download failed
WITHOUT_CLASSIFICATION	// if download OK, remove existing version
WITHOUT_CLASSIFICATION	/* even if installDirectory is different */
WITHOUT_CLASSIFICATION	//{{{ download() method
WITHOUT_CLASSIFICATION	// do nothing, user clicked 'Stop'
WITHOUT_CLASSIFICATION	//{{{ copy() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ construct() method
WITHOUT_CLASSIFICATION	//{{{ menuSelected() method
WITHOUT_CLASSIFICATION	//{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	//{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	//{{{ ShowRecentMenuItem class
WITHOUT_CLASSIFICATION	// allocate the array to store the initializers // description of the array // The other dimensions default to zero and are assigned when  // the values are set.
WITHOUT_CLASSIFICATION	// Evaluate the initializers
WITHOUT_CLASSIFICATION	// unwrap primitive to the wrapper type
WITHOUT_CLASSIFICATION	// don't deal with object types here... unless above
WITHOUT_CLASSIFICATION	// store the value in the array
WITHOUT_CLASSIFICATION	// I think this can happen
WITHOUT_CLASSIFICATION	// Supply any defaulted attributes.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////// // Constants. ////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// // Constants for element content type. //
WITHOUT_CLASSIFICATION	// // Constants for the entity type. //
WITHOUT_CLASSIFICATION	// // Constants for attribute type. //
WITHOUT_CLASSIFICATION	// // Constants for supported encodings. //
WITHOUT_CLASSIFICATION	// // Constants for attribute default value. //
WITHOUT_CLASSIFICATION	// Read the version.
WITHOUT_CLASSIFICATION	// Try reading an encoding declaration.
WITHOUT_CLASSIFICATION	// Try reading a standalone declaration
WITHOUT_CLASSIFICATION	// Read an optional version.
WITHOUT_CLASSIFICATION	// Read the encoding.
WITHOUT_CLASSIFICATION	// 8-bit encodings
WITHOUT_CLASSIFICATION	// 16-bit encodings
WITHOUT_CLASSIFICATION	// 32-bit encodings
WITHOUT_CLASSIFICATION	// Read the document type name.
WITHOUT_CLASSIFICATION	// Read the ExternalIDs.
WITHOUT_CLASSIFICATION	// Look for a declaration subset.
WITHOUT_CLASSIFICATION	// loop until the subset ends
WITHOUT_CLASSIFICATION	// end of subset
WITHOUT_CLASSIFICATION	// Read the external subset, if any
WITHOUT_CLASSIFICATION	// Loop until we end up back at '>'
WITHOUT_CLASSIFICATION	// No external subset.
WITHOUT_CLASSIFICATION	// Read the element type name.
WITHOUT_CLASSIFICATION	// Determine the current content type.
WITHOUT_CLASSIFICATION	// Read the element type name.
WITHOUT_CLASSIFICATION	// // Flags for parsing context. //
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Major syntactic productions. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//skip all white, PIs, and comments //if this doesn't throw an exception...
WITHOUT_CLASSIFICATION	// Expand general entities in // default values of attributes. // (Do this after the doctypeDecl // event!). // expandAttributeDefaultValues();
WITHOUT_CLASSIFICATION	// This is the (global) counter for the // array of specified attributes.
WITHOUT_CLASSIFICATION	// Read the attributes, if any. // After this loop, we should be just // in front of the closing delimiter.
WITHOUT_CLASSIFICATION	// See if it was specified.
WITHOUT_CLASSIFICATION	// I guess not...
WITHOUT_CLASSIFICATION	// Figure out if this is a start tag // or an empty element, and dispatch an // event accordingly.
WITHOUT_CLASSIFICATION	// Restore the previous state.
WITHOUT_CLASSIFICATION	// Read the attribute name.
WITHOUT_CLASSIFICATION	// Parse '='
WITHOUT_CLASSIFICATION	// Handle delimiters
WITHOUT_CLASSIFICATION	// Found "&"
WITHOUT_CLASSIFICATION	// Found "<"
WITHOUT_CLASSIFICATION	// Found "<!"
WITHOUT_CLASSIFICATION	// Found "<!-"
WITHOUT_CLASSIFICATION	// Found "<!["
WITHOUT_CLASSIFICATION	// Found "</"
WITHOUT_CLASSIFICATION	// Found "<" followed by something else
WITHOUT_CLASSIFICATION	// Read the content model.
WITHOUT_CLASSIFICATION	// Parse the first content particle
WITHOUT_CLASSIFICATION	// Check for end or for a separator.
WITHOUT_CLASSIFICATION	// Register the separator.
WITHOUT_CLASSIFICATION	// Parse the rest of the content model.
WITHOUT_CLASSIFICATION	// Check for the occurrence indicator.
WITHOUT_CLASSIFICATION	// Check for PCDATA alone.
WITHOUT_CLASSIFICATION	// Parse mixed content.
WITHOUT_CLASSIFICATION	// Read the attribute type.
WITHOUT_CLASSIFICATION	// Read the default value.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Note that the attribute has been // specified.
WITHOUT_CLASSIFICATION	// Read the first token.
WITHOUT_CLASSIFICATION	// Read the remaining tokens.
WITHOUT_CLASSIFICATION	// no surrogates needed
WITHOUT_CLASSIFICATION	// > 16 bits, surrogate needed
WITHOUT_CLASSIFICATION	// too big for surrogate
WITHOUT_CLASSIFICATION	// Check for a parameter entity.
WITHOUT_CLASSIFICATION	// Read the entity name, and prepend // '%' if necessary.
WITHOUT_CLASSIFICATION	// Read the entity value.
WITHOUT_CLASSIFICATION	// Internal entity.
WITHOUT_CLASSIFICATION	// Read the external IDs
WITHOUT_CLASSIFICATION	// Check for NDATA declaration.
WITHOUT_CLASSIFICATION	// Finish the declaration.
WITHOUT_CLASSIFICATION	// Read the external identifiers.
WITHOUT_CLASSIFICATION	// Register the notation.
WITHOUT_CLASSIFICATION	// Start with a little cheat -- in most // cases, the entire sequence of // character data will already be in // the readBuffer; if not, fall through to // the normal approach.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // High-level reading and scanning methods. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// else fall through...
WITHOUT_CLASSIFICATION	// else fall through...
WITHOUT_CLASSIFICATION	// OK, do it by the book.
WITHOUT_CLASSIFICATION	// Read the first character.
WITHOUT_CLASSIFICATION	// Find the delimiter.
WITHOUT_CLASSIFICATION	// Read the literal.
WITHOUT_CLASSIFICATION	// Literals never have line ends
WITHOUT_CLASSIFICATION	// References may be allowed
WITHOUT_CLASSIFICATION	// check the next character
WITHOUT_CLASSIFICATION	// Return the value.
WITHOUT_CLASSIFICATION	// public id
WITHOUT_CLASSIFICATION	// system id
WITHOUT_CLASSIFICATION	// Expand buffer if necessary.
WITHOUT_CLASSIFICATION	// Skip whitespace at the start.
WITHOUT_CLASSIFICATION	// Skip whitespace at the end.
WITHOUT_CLASSIFICATION	// Start copying to the left.
WITHOUT_CLASSIFICATION	// Normalise all other whitespace to // a single space.
WITHOUT_CLASSIFICATION	// Generate a hash code.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// error
WITHOUT_CLASSIFICATION	// Get the bucket.
WITHOUT_CLASSIFICATION	// Stop when we hit a null index.
WITHOUT_CLASSIFICATION	// If they're the same length, // check for a match. // If the loop finishes, 'index' will // contain the current bucket // position.
WITHOUT_CLASSIFICATION	// Stop if there are no more tuples.
WITHOUT_CLASSIFICATION	// That's it, we have a match!
WITHOUT_CLASSIFICATION	// Not found -- we'll have to add it.
WITHOUT_CLASSIFICATION	// Do we have to grow the bucket?
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // XML query routines. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// // Elements //
WITHOUT_CLASSIFICATION	// Try looking up the element
WITHOUT_CLASSIFICATION	// Make a new one if necessary.
WITHOUT_CLASSIFICATION	// Insert the content model, if any.
WITHOUT_CLASSIFICATION	// Insert the attributes, if any.
WITHOUT_CLASSIFICATION	// Save the element info.
WITHOUT_CLASSIFICATION	// Create a new hashtable if necessary.
WITHOUT_CLASSIFICATION	// Check that the attribute doesn't // already exist!
WITHOUT_CLASSIFICATION	// Use CONTENT_UNDECLARED to avoid overwriting // existing element declaration.
WITHOUT_CLASSIFICATION	// // Entities //
WITHOUT_CLASSIFICATION	// // Notations. //
WITHOUT_CLASSIFICATION	// // Location. //
WITHOUT_CLASSIFICATION	// As long as there's nothing in the // read buffer, try reading more data // (for an external entity) or popping // the entity stack (for either).
WITHOUT_CLASSIFICATION	// Normal condition.
WITHOUT_CLASSIFICATION	// Push the existing status.
WITHOUT_CLASSIFICATION	// Create a new read buffer. // (Note the four-character margin)
WITHOUT_CLASSIFICATION	// Flush any remaining data.
WITHOUT_CLASSIFICATION	// Make the URL absolute.
WITHOUT_CLASSIFICATION	// See if the application wants to // redirect the system ID and/or // supply its own character stream.
WITHOUT_CLASSIFICATION	// Start the entity.
WITHOUT_CLASSIFICATION	// Figure out what we're reading from.
WITHOUT_CLASSIFICATION	// There's an explicit character stream.
WITHOUT_CLASSIFICATION	// We have to open our own stream // to the URL.
WITHOUT_CLASSIFICATION	// Set the new status
WITHOUT_CLASSIFICATION	// If we get to here, there must be // an InputStream available.
WITHOUT_CLASSIFICATION	// Attempt to detect the encoding.
WITHOUT_CLASSIFICATION	// Read an XML or text declaration.
WITHOUT_CLASSIFICATION	// Read the XML/Encoding declaration.
WITHOUT_CLASSIFICATION	// Read the first four bytes for // autodetection.
WITHOUT_CLASSIFICATION	// Look for a known signature.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// UCS-4 must begin with "<!XML" // 0x00 0x00 0x3c 0x00: UCS-4, unusual (2143)
WITHOUT_CLASSIFICATION	// UCS-2 with a byte-order marker. // 0xfe 0xff: UCS-2, big-endian (12)
WITHOUT_CLASSIFICATION	// UCS-2 without a BOM must begin with "<?XML" // 0x00 0x3c 0x00 0x3f: UCS-2, big-endian, no byte-order mark
WITHOUT_CLASSIFICATION	// UCS-2 without a BOM must begin with "<?XML" // 0x3c 0x00 0x3f 0x00: UCS-2, little-endian, no byte-order mark
WITHOUT_CLASSIFICATION	// Some kind of 8-bit encoding with "<?XML" // 0x3c 0x3f 0x78 0x6d: UTF-8 or other 8-bit markup (read ENCODING)
WITHOUT_CLASSIFICATION	// Push the existing status
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Don't bother if there is no input.
WITHOUT_CLASSIFICATION	// Push it onto the stack.
WITHOUT_CLASSIFICATION	// Throw an EOFException if there // is nothing else to pop.
WITHOUT_CLASSIFICATION	// Read the character
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// See if we have any overflow.
WITHOUT_CLASSIFICATION	// Special situation -- we're taking // input from a character stream.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Filter out all carriage returns // if we've seen any.
WITHOUT_CLASSIFICATION	// Reset the position.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// 2-byte sequence: 00000yyyyyxxxxxx = 110yyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	// 3-byte sequence: zzzzyyyyyyxxxxxx = 1110zzzz 10yyyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	// 4-byte sequence: 11101110wwwwzzzzyy + 110111yyyyxxxxxx //     = 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx // (uuuuu = wwww + 1)
WITHOUT_CLASSIFICATION	// Otherwise, the 8th bit may not be set in UTF-8
WITHOUT_CLASSIFICATION	// How many characters have we read?
WITHOUT_CLASSIFICATION	// Take a character from the buffer // or from the actual input stream.
WITHOUT_CLASSIFICATION	// Check for the correct bits at the // start.
WITHOUT_CLASSIFICATION	// Return the significant bits.
WITHOUT_CLASSIFICATION	// No errors; first line
WITHOUT_CLASSIFICATION	// Set up the buffers for data and names
WITHOUT_CLASSIFICATION	// Set up the DTD hash tables
WITHOUT_CLASSIFICATION	// Set up the variables for the current // element context.
WITHOUT_CLASSIFICATION	// Set up the input variables
WITHOUT_CLASSIFICATION	// // The current XML handler interface. //
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// // Hashtables for DTD information on elements, entities, and notations. //
WITHOUT_CLASSIFICATION	// // Element type currently in force. //
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// // Base external identifiers for resolution. //
WITHOUT_CLASSIFICATION	// // Stack of entity names, to help detect recursion. //
WITHOUT_CLASSIFICATION	// // Are we in a context where PEs are allowed? //
WITHOUT_CLASSIFICATION	// // Symbol table, for internalising names. //
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//app.setServicesProvider(delegate);
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	// // Utility flag: have we noticed a CR while reading the last // data chunk?  If so, we will have to go back and normalise // CR/LF. //
WITHOUT_CLASSIFICATION	// Set type/creator codes for files
WITHOUT_CLASSIFICATION	//{{{ osok() method
WITHOUT_CLASSIFICATION	// According to Slava this is better
WITHOUT_CLASSIFICATION	//{{{ showInFinder() method
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ ScriptRunner class
WITHOUT_CLASSIFICATION	//{{{ openSelection() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	//Remember to make this an option later //NSApplication.sharedApplication().hide(jEdit.getPlugin("MacOSPlugin"));
WITHOUT_CLASSIFICATION	//SwingUtilities.invokeLater(new ScriptRunner(path)); //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ getSettings() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ Handlers
WITHOUT_CLASSIFICATION	//{{{ handleAbout() method
WITHOUT_CLASSIFICATION	//{{{ handleFileCodes() method
WITHOUT_CLASSIFICATION	// Set type/creator on save
WITHOUT_CLASSIFICATION	// Fail silently, since we may be using UFS
WITHOUT_CLASSIFICATION	// Add type/creator to local buffer property list on open
WITHOUT_CLASSIFICATION	// This will happen when a new file is created
WITHOUT_CLASSIFICATION	//{{{ handleOpenFile() method
WITHOUT_CLASSIFICATION	//{{{ handleOpenFile() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ handlePreferences() method
WITHOUT_CLASSIFICATION	//{{{ handleQuit() method
WITHOUT_CLASSIFICATION	//{{{ Delegate methods
WITHOUT_CLASSIFICATION	//{{{ applicationDockMenu() method
WITHOUT_CLASSIFICATION	// notify clients with -wait
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Buffers
WITHOUT_CLASSIFICATION	// Recent Buffers
WITHOUT_CLASSIFICATION	// Recent Directories
WITHOUT_CLASSIFICATION	// Macros
WITHOUT_CLASSIFICATION	//{{{ applicationOpenFiles() method
WITHOUT_CLASSIFICATION	//{{{ applicationShouldTerminate() method
WITHOUT_CLASSIFICATION	//{{{ Services
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ insertSelection() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ construct() method
WITHOUT_CLASSIFICATION	//{{{ menuSelected() method
WITHOUT_CLASSIFICATION	//{{{ Dock Menu
WITHOUT_CLASSIFICATION	//{{{ BufferMenu class
WITHOUT_CLASSIFICATION	//item.setImage(NSWorkspace.sharedWorkspace().iconForFile( //	buffs[i].getPath()));
WITHOUT_CLASSIFICATION	//{{{ MacrosMenu class
WITHOUT_CLASSIFICATION	//{{{ RecentMenu class
WITHOUT_CLASSIFICATION	//{{{ RecentDirMenu class
WITHOUT_CLASSIFICATION	//{{{ MacroAction class
WITHOUT_CLASSIFICATION	//{{{ NewViewAction class
WITHOUT_CLASSIFICATION	//{{{ ShowFileAction class
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ construct() method
WITHOUT_CLASSIFICATION	//{{{ menuSelected() method
WITHOUT_CLASSIFICATION	//{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	//{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	//{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	//{{{ ShowRecentDirMenuItem class
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	//{{{ ShowFileAction class
WITHOUT_CLASSIFICATION	//{{{ ShowBufferMenuItem class
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ ShowDirAction class
WITHOUT_CLASSIFICATION	//{{{ accept() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ accept() method
WITHOUT_CLASSIFICATION	//{{{ createMacro() method
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ Handler constructor
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - serializable
WITHOUT_CLASSIFICATION	// End BeanShell Modification - serializable
WITHOUT_CLASSIFICATION	// should normally be
WITHOUT_CLASSIFICATION	// Do the for init
WITHOUT_CLASSIFICATION	// do *not* invoke special override for block... (see above)
WITHOUT_CLASSIFICATION	// put it back
WITHOUT_CLASSIFICATION	// default impl
WITHOUT_CLASSIFICATION	//{{{ stringToSelection() method
WITHOUT_CLASSIFICATION	/*declaringNameSpace*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Begin Method components
WITHOUT_CLASSIFICATION	// Arguments
WITHOUT_CLASSIFICATION	// Scripted method body
WITHOUT_CLASSIFICATION	// Java Method
WITHOUT_CLASSIFICATION	// End method components
WITHOUT_CLASSIFICATION	/*paramNames*/
WITHOUT_CLASSIFICATION	/*method.block*/
WITHOUT_CLASSIFICATION	/*modifiers*/
WITHOUT_CLASSIFICATION	/*		Note: bshmethod needs to re-evaluate arg types here		This is broken.	*/
WITHOUT_CLASSIFICATION	/*		Note: bshmethod needs to re-evaluate the method return type here.		This is broken.	*/
WITHOUT_CLASSIFICATION	/*isNative*/
WITHOUT_CLASSIFICATION	// is this a syncrhonized method?
WITHOUT_CLASSIFICATION	// ???
WITHOUT_CLASSIFICATION	// Cardinality (number of args) mismatch
WITHOUT_CLASSIFICATION	// Make the local namespace for the method invocation
WITHOUT_CLASSIFICATION	// set the method parameters in the local namespace
WITHOUT_CLASSIFICATION	/*override*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Set typed variable
WITHOUT_CLASSIFICATION	// getAssignable would catch this for typed param
WITHOUT_CLASSIFICATION	// Push the new namespace on the call stack
WITHOUT_CLASSIFICATION	// save the callstack including the called method, just for error mess
WITHOUT_CLASSIFICATION	// Get back to caller namespace
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// return type is a class
WITHOUT_CLASSIFICATION	// Point to return statement point if we had one. // (else it was implicit return? What's the case here?)
WITHOUT_CLASSIFICATION	// The token.image text of the name... never changes.
WITHOUT_CLASSIFICATION	// null value means no value
WITHOUT_CLASSIFICATION	// check for easy mistake
WITHOUT_CLASSIFICATION	// Need to scrape a value from the last line?
WITHOUT_CLASSIFICATION	// I/O error
WITHOUT_CLASSIFICATION	// read results...
WITHOUT_CLASSIFICATION	// bad postURL
WITHOUT_CLASSIFICATION	// ?
WITHOUT_CLASSIFICATION	//  first node will either be PrimitiveType or AmbiguousName
WITHOUT_CLASSIFICATION	// Ease debugging... // XThis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	/*				If equals() is not explicitly defined we must override the 				default implemented by the This object protocol for scripted				object.  To support XThis equals() must test for equality with 				the generated proxy object, not the scripted bsh This object;				otherwise callers from outside in Java will not see a the 				proxy object as equal to itself.			*/
WITHOUT_CLASSIFICATION	/*leave null*/
WITHOUT_CLASSIFICATION	/*leave null*/
WITHOUT_CLASSIFICATION	// XThis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	// return cached type if available
WITHOUT_CLASSIFICATION	/*    * Ordinals for various reasons why an Error of this type can be thrown.    */
WITHOUT_CLASSIFICATION	// put it back
WITHOUT_CLASSIFICATION	// return cached type if available
WITHOUT_CLASSIFICATION	//  first node will either be PrimitiveType or AmbiguousName
WITHOUT_CLASSIFICATION	// finaly block
WITHOUT_CLASSIFICATION	/*    * Constructors of various flavors follow.    */
WITHOUT_CLASSIFICATION	// unwrap the target error
WITHOUT_CLASSIFICATION	// If the param is typed check assignability
WITHOUT_CLASSIFICATION	// Get catch block
WITHOUT_CLASSIFICATION	// If we have an exception, find a catch
WITHOUT_CLASSIFICATION	// Found match, execute catch block
WITHOUT_CLASSIFICATION	// set a typed variable (directly in the block)
WITHOUT_CLASSIFICATION	// set an untyped variable directly in the block
WITHOUT_CLASSIFICATION	// put cbNameSpace on the top of the stack
WITHOUT_CLASSIFICATION	// handled target
WITHOUT_CLASSIFICATION	// evaluate finally block
WITHOUT_CLASSIFICATION	// exception fell through, throw it upward...
WITHOUT_CLASSIFICATION	// Note: no way to mutate the Throwable message, must maintain our own
WITHOUT_CLASSIFICATION	// freeze the callstack for the stack trace.
WITHOUT_CLASSIFICATION	// Users should not normally see this.
WITHOUT_CLASSIFICATION	/*type*/
WITHOUT_CLASSIFICATION	/*type*/
WITHOUT_CLASSIFICATION	// check this.value
WITHOUT_CLASSIFICATION	/*strictjava*/
WITHOUT_CLASSIFICATION	// See notes in getThis()
WITHOUT_CLASSIFICATION	//Log.log(Log.ERROR,this,io);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Prepare to execute the block. // We must create a new BlockNameSpace to hold the catch // parameter and swap it on the stack after initializing it.
WITHOUT_CLASSIFICATION	// Begin instance data // Note: if we add something here we should reset it in the clear() method.
WITHOUT_CLASSIFICATION	//|| ( getParent()!=null && getParent().classStatic != null ) 
WITHOUT_CLASSIFICATION	// End instance data
WITHOUT_CLASSIFICATION	// Begin constructors
WITHOUT_CLASSIFICATION	// Note: in this case parent must have a class manager.
WITHOUT_CLASSIFICATION	// Register for notification of classloader change
WITHOUT_CLASSIFICATION	// End constructors
WITHOUT_CLASSIFICATION	// if localscoping switch follow strictJava, else recurse
WITHOUT_CLASSIFICATION	/*recurse*/
WITHOUT_CLASSIFICATION	// primitives should have been wrapped
WITHOUT_CLASSIFICATION	// Locate the variable definition if it exists.
WITHOUT_CLASSIFICATION	// Found an existing variable here (or above if recurse allowed)
WITHOUT_CLASSIFICATION	// No previous variable definition found here (or above if recurse)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// nameSpaceChanged() on new variable addition
WITHOUT_CLASSIFICATION	/*modifiers*/
WITHOUT_CLASSIFICATION	/*recurse*/
WITHOUT_CLASSIFICATION	// If we are disconnected from root we need to handle the def imports
WITHOUT_CLASSIFICATION	/*interp*/
WITHOUT_CLASSIFICATION	/*interp*/
WITHOUT_CLASSIFICATION	//Interpreter.debug("No class manager namespace:" +this);
WITHOUT_CLASSIFICATION	// try parent
WITHOUT_CLASSIFICATION	// Change import precedence if we are a class body/instance
WITHOUT_CLASSIFICATION	// Change import precedence if we are a class body/instance // Get imported first.
WITHOUT_CLASSIFICATION	//checkVariableModifiers( name, modifiers );
WITHOUT_CLASSIFICATION	/*		Get variables declared in this namespace.	*/
WITHOUT_CLASSIFICATION	// Setting a typed variable is always a local operation.
WITHOUT_CLASSIFICATION	// does the variable already exist?
WITHOUT_CLASSIFICATION	// Is it typed?
WITHOUT_CLASSIFICATION	// else set it and return
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//checkMethodModifiers( method );
WITHOUT_CLASSIFICATION	// Vector
WITHOUT_CLASSIFICATION	/*declaredOnly*/
WITHOUT_CLASSIFICATION	// Change import precedence if we are a class body/instance // Get import first.
WITHOUT_CLASSIFICATION	// m contains either BshMethod or Vector of BshMethod
WITHOUT_CLASSIFICATION	// unwrap 
WITHOUT_CLASSIFICATION	// Apply most specific signature matching
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Try object imports
WITHOUT_CLASSIFICATION	// Try static imports
WITHOUT_CLASSIFICATION	/*object*/
WITHOUT_CLASSIFICATION	/* 			Here we catch any EvalError from the interpreter because we are			using it as a tool to load the command, not as part of the			execution path.		*/
WITHOUT_CLASSIFICATION	// Look for the loaded command 
WITHOUT_CLASSIFICATION	//cacheCount++; // debug
WITHOUT_CLASSIFICATION	// Check the cache
WITHOUT_CLASSIFICATION	// Unqualified (simple, non-compound) name
WITHOUT_CLASSIFICATION	// Unqualified name check imported
WITHOUT_CLASSIFICATION	// Try imported class
WITHOUT_CLASSIFICATION	// if found as imported also cache it
WITHOUT_CLASSIFICATION	// Not found
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Try absolute
WITHOUT_CLASSIFICATION	// Cache unqualified names to prevent import check again
WITHOUT_CLASSIFICATION	// Try explicitly imported class, e.g. import foo.Bar;
WITHOUT_CLASSIFICATION	/*				Found the full name in imported classes.			*/
WITHOUT_CLASSIFICATION	// Try to make the full imported name
WITHOUT_CLASSIFICATION	// Handle imported inner class case
WITHOUT_CLASSIFICATION	/* not a class */
WITHOUT_CLASSIFICATION	// If found cache the full name in the BshClassManager
WITHOUT_CLASSIFICATION	/*			Try imported packages, e.g. "import foo.bar.*;"			in reverse order of import...			(give later imports precedence...)		*/
WITHOUT_CLASSIFICATION	/*			Try super import if available			Note: we do this last to allow explicitly imported classes			and packages to take priority.  This method will also throw an			error indicating ambiguity if it exists...		*/
WITHOUT_CLASSIFICATION	/*		For serialization.		Don't serialize non-serializable objects.	*/
WITHOUT_CLASSIFICATION	/*arbitrary flag*/
WITHOUT_CLASSIFICATION	// volatile, transient
WITHOUT_CLASSIFICATION	// default
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* --- Begin static members --- */
WITHOUT_CLASSIFICATION	/* --- End static members --- */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// End constructors
WITHOUT_CLASSIFICATION	/* --- End instance data --- */
WITHOUT_CLASSIFICATION	/* 			Create the root "bsh" system object if it doesn't exist.		*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// bsh
WITHOUT_CLASSIFICATION	// bsh.system
WITHOUT_CLASSIFICATION	// alias
WITHOUT_CLASSIFICATION	// bsh.help
WITHOUT_CLASSIFICATION	// bsh.cwd
WITHOUT_CLASSIFICATION	// applets can't see sys props
WITHOUT_CLASSIFICATION	// bsh.interactive
WITHOUT_CLASSIFICATION	/*BshClassManager*/
WITHOUT_CLASSIFICATION	// init the callstack.  
WITHOUT_CLASSIFICATION	// try to sync up the console
WITHOUT_CLASSIFICATION	// this helps a little
WITHOUT_CLASSIFICATION	// sanity check during development
WITHOUT_CLASSIFICATION	// reinit the callstack
WITHOUT_CLASSIFICATION	// begin source and eval
WITHOUT_CLASSIFICATION	/*, CallStack callstack */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// nodes remember from where they were sourced
WITHOUT_CLASSIFICATION	// non-interactive, return control now
WITHOUT_CLASSIFICATION	// show extra "expecting..." info
WITHOUT_CLASSIFICATION	// add the source file info and throw again
WITHOUT_CLASSIFICATION	// failsafe, set the Line as the origin of the error.
WITHOUT_CLASSIFICATION	// failsafe, set the Line as the origin of the error.
WITHOUT_CLASSIFICATION	// end source and eval
WITHOUT_CLASSIFICATION	// End ConsoleInterface
WITHOUT_CLASSIFICATION	// map null to Primtive.NULL coming in...
WITHOUT_CLASSIFICATION	// optimization for common case
WITHOUT_CLASSIFICATION	/*			We jump through some hoops here to handle arbitrary cases like			unset("bsh.foo");		*/
WITHOUT_CLASSIFICATION	//lhs.assign( null, false );
WITHOUT_CLASSIFICATION	// end primary set and get methods
WITHOUT_CLASSIFICATION	/*	Methods for interacting with Parser */
WITHOUT_CLASSIFICATION	// Default is c:\windows under win98, $HOME under Unix
WITHOUT_CLASSIFICATION	// squeltch security exception, filenotfoundexception
WITHOUT_CLASSIFICATION	// if relative, fix up to bsh.cwd
WITHOUT_CLASSIFICATION	// set transient fields
WITHOUT_CLASSIFICATION	// ug
WITHOUT_CLASSIFICATION	// evaluate the expression
WITHOUT_CLASSIFICATION	// Order of body and condition is swapped for do / while
WITHOUT_CLASSIFICATION	// has body, else just for side effects
WITHOUT_CLASSIFICATION	// no body?
WITHOUT_CLASSIFICATION	//initCallStack( namespace );
WITHOUT_CLASSIFICATION	// null callstack, one will be created for us 
WITHOUT_CLASSIFICATION	/*declaringInterpreter*/
WITHOUT_CLASSIFICATION	// Find the bsh method
WITHOUT_CLASSIFICATION	// leave null
WITHOUT_CLASSIFICATION	// a default equals() testing for equality with the This reference
WITHOUT_CLASSIFICATION	// Call script "invoke( String methodName, Object [] args );
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ RecentHandler class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// These do not change during evaluation
WITHOUT_CLASSIFICATION	// For evaluation
WITHOUT_CLASSIFICATION	// number of times eval hit 'this.caller'
WITHOUT_CLASSIFICATION	//   //  End mutable instance variables. // ---------------------------------------------------------
WITHOUT_CLASSIFICATION	//{{{ updateTitle() method
WITHOUT_CLASSIFICATION	// Begin Cached result structures // These are optimizations 
WITHOUT_CLASSIFICATION	// End Cached result structures
WITHOUT_CLASSIFICATION	/*autoalloc*/
WITHOUT_CLASSIFICATION	// switch namespace and special var visibility
WITHOUT_CLASSIFICATION	// Resolved the variable
WITHOUT_CLASSIFICATION	/*				Keep adding parts until we have a class 			*/
WITHOUT_CLASSIFICATION	// not a class (or variable per above)
WITHOUT_CLASSIFICATION	/*			If we didn't find a class or variable name (or prefix) above			there are two possibilities:			- If we are a simple name then we can pass as a void variable 			reference.			- If we are compound then we must fail at this point.		*/
WITHOUT_CLASSIFICATION	/*			--------------------------------------------------------			After this point we're definitely evaluating relative to			a base object.			--------------------------------------------------------		*/
WITHOUT_CLASSIFICATION	/*			Do some basic validity checks.		*/
WITHOUT_CLASSIFICATION	// previous round produced null
WITHOUT_CLASSIFICATION	// previous round produced void
WITHOUT_CLASSIFICATION	// Class qualified 'this' reference from inner class. // e.g. 'MyOuterClass.this'
WITHOUT_CLASSIFICATION	// find the enclosing class instance space of the class name
WITHOUT_CLASSIFICATION	//&& thisNameSpace.getParent().classInstance != null
WITHOUT_CLASSIFICATION	// static field?
WITHOUT_CLASSIFICATION	// inner class?
WITHOUT_CLASSIFICATION	/* 			Some kind of field access?		*/
WITHOUT_CLASSIFICATION	// length access on array? 
WITHOUT_CLASSIFICATION	/* not a field */
WITHOUT_CLASSIFICATION	// if we get here we have failed
WITHOUT_CLASSIFICATION	/*			Some duplication for "super".  See notes for "this" above			If we're in an enclsing class instance and have a superclass			instance our super is the superclass instance.		*/
WITHOUT_CLASSIFICATION	// Allow getSuper() to through BlockNameSpace to the method's super
WITHOUT_CLASSIFICATION	// super is now the closure's super or class instance
WITHOUT_CLASSIFICATION	// get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	// get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	// early return
WITHOUT_CLASSIFICATION	// "var" means untyped, return null class
WITHOUT_CLASSIFICATION	/* Try straightforward class name first */
WITHOUT_CLASSIFICATION	/* 				Try toObject() which knows how to work through inner classes				and see what we end up with 			*/
WITHOUT_CLASSIFICATION	// Null interpreter and callstack references. // class only resolution should not require them.
WITHOUT_CLASSIFICATION	// couldn't resolve it
WITHOUT_CLASSIFICATION	/*	*/
WITHOUT_CLASSIFICATION	// Simple (non-compound) variable assignment e.g. x=5;
WITHOUT_CLASSIFICATION	// Interpreter.debug("Simple var LHS...");
WITHOUT_CLASSIFICATION	// Field e.g. foo.bar=5;
WITHOUT_CLASSIFICATION	/*autoallocthis*/
WITHOUT_CLASSIFICATION	// found a non-backslash char.
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// Finished eval and its a class.
WITHOUT_CLASSIFICATION	// e.g. this.x=5;  or someThisType.x=5;
WITHOUT_CLASSIFICATION	// dissallow assignment to magic fields
WITHOUT_CLASSIFICATION	// Superclass method invocation? (e.g. super.foo())
WITHOUT_CLASSIFICATION	// Find target object or class identifier
WITHOUT_CLASSIFICATION	// if we've got an object, resolve the method
WITHOUT_CLASSIFICATION	// It's a class
WITHOUT_CLASSIFICATION	// try static method
WITHOUT_CLASSIFICATION	// cache the fact that this is a static method invocation on this class
WITHOUT_CLASSIFICATION	// return null; ???
WITHOUT_CLASSIFICATION	/*, ReflectError, InvocationTargetException*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// If defined, invoke it
WITHOUT_CLASSIFICATION	// Look for a BeanShell command
WITHOUT_CLASSIFICATION	// should try to print usage here if nothing found
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// end compound name routines
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*checkonly*/
WITHOUT_CLASSIFICATION	/*fromValue*/
WITHOUT_CLASSIFICATION	/*checkOnly*/
WITHOUT_CLASSIFICATION	// This should not happen with checkOnly true
WITHOUT_CLASSIFICATION	// assignment to loose type, void type, or exactly same type
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getEditPanes() method
WITHOUT_CLASSIFICATION	// must be null in checkOnly
WITHOUT_CLASSIFICATION	// Cannot cast from arbitrary object to primitive
WITHOUT_CLASSIFICATION	// Casting to reference type
WITHOUT_CLASSIFICATION	// primitive to wrapper type
WITHOUT_CLASSIFICATION	// Primitive (not null or void) to Object.class type
WITHOUT_CLASSIFICATION	// box it
WITHOUT_CLASSIFICATION	// If type already assignable no cast necessary // We do this last to allow various errors above to be caught. // e.g cast Primitive.Void to Object would pass this
WITHOUT_CLASSIFICATION	// Currently unused, but we'll probably need it later.
WITHOUT_CLASSIFICATION	/*		Note: it may see like with the new 1.3 scoping this test could be		removed, but it cannot.  When recurse is false we still need to set the		variable in our parent, not here.	*/
WITHOUT_CLASSIFICATION	// set the var here in the block namespace
WITHOUT_CLASSIFICATION	// set the var in the enclosing (parent) namespace
WITHOUT_CLASSIFICATION	/*strict?*/
WITHOUT_CLASSIFICATION	// super.variables.containsKey( name ) not any faster, I checked
WITHOUT_CLASSIFICATION	//e.printStackTrace();
WITHOUT_CLASSIFICATION	// ClassPathException is a type of UtilEvalError
WITHOUT_CLASSIFICATION	/*		The interpretation of an ambiguous name is context sensitive.		We disallow a generic eval( ).	*/
WITHOUT_CLASSIFICATION	// Should never come here
WITHOUT_CLASSIFICATION	// Read all the backslashes
WITHOUT_CLASSIFICATION	// Both numeric wrapper types?  // Try numeric style promotion wrapper cast
WITHOUT_CLASSIFICATION	// // Begin methods which simply delegate to our parent (enclosing scope)  //
WITHOUT_CLASSIFICATION	// Here, we have seen an odd number of backslash's followed by a 'u'
WITHOUT_CLASSIFICATION	// assign doesn't need the pre-value
WITHOUT_CLASSIFICATION	//{{{ getSplitConfig() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// evaluate each child
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* Determines whether the current node was actually closed and     pushed.  This should only be called in the final user action of a     node scope.  */
WITHOUT_CLASSIFICATION	/* Call this to reinitialize the node stack.  It is called     automatically by the parser's ReInit() method. */
WITHOUT_CLASSIFICATION	/* Returns the root node of the AST.  It only makes sense to call     this after a successful parse. */
WITHOUT_CLASSIFICATION	/* Pushes a node on to the stack. */
WITHOUT_CLASSIFICATION	/* Returns the node on the top of the stack, and remove it from the     stack.  */
WITHOUT_CLASSIFICATION	/* Returns the node currently on the top of the stack. */
WITHOUT_CLASSIFICATION	/* Returns the number of children on the stack in the current node     scope. */
WITHOUT_CLASSIFICATION	/* A conditional node is constructed if its condition is true.  All     the nodes that have been pushed since the node was opened are     made children of the the conditional node, which is then pushed     on to the stack.  If the condition is false the node is not     constructed and they are left on the stack. */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	/*ignore*/
WITHOUT_CLASSIFICATION	// try scripted class
WITHOUT_CLASSIFICATION	// end HandlerBase implementation
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// classloader wants no leading slash
WITHOUT_CLASSIFICATION	// classloader wants no leading slash
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*offset*/
WITHOUT_CLASSIFICATION	/*len*/
WITHOUT_CLASSIFICATION	// may have been axed previously
WITHOUT_CLASSIFICATION	// no args method
WITHOUT_CLASSIFICATION	/*	Note: this class is final because we may test == Primitive.class in places.	If we need to change that search for those tests.*/
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// special primitive types
WITHOUT_CLASSIFICATION	// keep track of the original types
WITHOUT_CLASSIFICATION	// Unwrap primitives
WITHOUT_CLASSIFICATION	// returns Object covering both Long and Boolean return types
WITHOUT_CLASSIFICATION	// arithmetic
WITHOUT_CLASSIFICATION	// bitwise
WITHOUT_CLASSIFICATION	// bitwise
WITHOUT_CLASSIFICATION	// returns Object covering both Integer and Boolean return types
WITHOUT_CLASSIFICATION	// returns Object covering both Double and Boolean return types
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	// returns Object covering both Long and Boolean return types
WITHOUT_CLASSIFICATION	// arithmetic
WITHOUT_CLASSIFICATION	// arithmetic
WITHOUT_CLASSIFICATION	// can't shift floating-point values
WITHOUT_CLASSIFICATION	// can't shift floats
WITHOUT_CLASSIFICATION	// ++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	// Promote character to Number type for these purposes
WITHOUT_CLASSIFICATION	// arbitrary
WITHOUT_CLASSIFICATION	// map voids to nulls for the outside world
WITHOUT_CLASSIFICATION	/*fromValue*/
WITHOUT_CLASSIFICATION	/*checkOnly*/
WITHOUT_CLASSIFICATION	/*			Lots of preconditions checked here...			Once things are running smoothly we might comment these out			(That's what assertions are for).		*/
WITHOUT_CLASSIFICATION	// unwrap primitives
WITHOUT_CLASSIFICATION	/*    */
WITHOUT_CLASSIFICATION	// non boolean primitive, get appropriate flavor of zero
WITHOUT_CLASSIFICATION	/*fromType*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// unwrap, etc.
WITHOUT_CLASSIFICATION	// Trying to cast null to primitive type?
WITHOUT_CLASSIFICATION	// can only cast boolean to boolean
WITHOUT_CLASSIFICATION	// Do numeric cast
WITHOUT_CLASSIFICATION	// first promote char to Number type to avoid duplicating code
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - public, extend EvalError
WITHOUT_CLASSIFICATION	// End BeanShell Modification - public, extend EvalError
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - sourceFile
WITHOUT_CLASSIFICATION	// End BeanShell Modification - sourceFile
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	// End BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	// End BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	// End BeanShell Modification - super constructor args
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - moved body to overloaded getMessage()
WITHOUT_CLASSIFICATION	/*strict*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	// End BeanShell Modification - moved body to overloaded getMessage()
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - added debug param
WITHOUT_CLASSIFICATION	// End BeanShell Modification - added debug param
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - added sourceFile info
WITHOUT_CLASSIFICATION	// End BeanShell Modification - added sourceFile info
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - made conditional on debug
WITHOUT_CLASSIFICATION	// End BeanShell Modification - made conditional on debug
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - override error methods and toString
WITHOUT_CLASSIFICATION	// copied from generated getMessage()
WITHOUT_CLASSIFICATION	// End BeanShell Modification - override error methods and toString
WITHOUT_CLASSIFICATION	// skip CR
WITHOUT_CLASSIFICATION	// Test it
WITHOUT_CLASSIFICATION	// for inner classes
WITHOUT_CLASSIFICATION	// Force the class public for now...
WITHOUT_CLASSIFICATION	// Generate the bsh instance 'This' reference holder field
WITHOUT_CLASSIFICATION	// Generate the static bsh static reference holder field
WITHOUT_CLASSIFICATION	// Generate the fields
WITHOUT_CLASSIFICATION	// Generate the constructors
WITHOUT_CLASSIFICATION	// Don't generate private constructors
WITHOUT_CLASSIFICATION	// If no other constructors, generate a default constructor
WITHOUT_CLASSIFICATION	/*index*/
WITHOUT_CLASSIFICATION	// Generate the delegate methods
WITHOUT_CLASSIFICATION	// Don't generate private /*or loosely return typed */ methods
WITHOUT_CLASSIFICATION	/*|| returnType == null*/
WITHOUT_CLASSIFICATION	// map loose return type to Object
WITHOUT_CLASSIFICATION	// Generate method body
WITHOUT_CLASSIFICATION	/*	 * The split config is recorded in a simple RPN "language".	 */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Get the instance field
WITHOUT_CLASSIFICATION	// Generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	// Push the boolean constant 'true' (for declaredOnly)
WITHOUT_CLASSIFICATION	//{{{ restoreSplitConfig() method
WITHOUT_CLASSIFICATION	// Generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	// Invoke the method This.invokeMethod( name, Class [] sig, boolean )
WITHOUT_CLASSIFICATION	// Generate code to unwrap bsh Primitive types
WITHOUT_CLASSIFICATION	// Generate code to return the value
WITHOUT_CLASSIFICATION	// Create this constructor method
WITHOUT_CLASSIFICATION	/*isStatic*/
WITHOUT_CLASSIFICATION	// Generate the code implementing the alternate constructor switch
WITHOUT_CLASSIFICATION	// Generate code to invoke the ClassGeneratorUtil initInstance() method
WITHOUT_CLASSIFICATION	// push 'this' 
WITHOUT_CLASSIFICATION	// Push the class/constructor name as a constant
WITHOUT_CLASSIFICATION	// Push arguments as an object array
WITHOUT_CLASSIFICATION	// invoke the initInstance() method
WITHOUT_CLASSIFICATION	// push super class name // use superClassName var?
WITHOUT_CLASSIFICATION	// push class static This object
WITHOUT_CLASSIFICATION	// push args
WITHOUT_CLASSIFICATION	// push this constructor index number onto stack
WITHOUT_CLASSIFICATION	// invoke the ClassGeneratorUtil getConstructorsArgs() method
WITHOUT_CLASSIFICATION	// store ConstructorArgs in consArgsVar
WITHOUT_CLASSIFICATION	//{{{ toggleLineSeparator() method
WITHOUT_CLASSIFICATION	// Get the ConstructorArgs selector field from ConstructorArgs
WITHOUT_CLASSIFICATION	// push ConstructorArgs 
WITHOUT_CLASSIFICATION	// start switch
WITHOUT_CLASSIFICATION	/*max*/
WITHOUT_CLASSIFICATION	/*min*/
WITHOUT_CLASSIFICATION	// generate switch body
WITHOUT_CLASSIFICATION	// default branch always invokes no args super // push 'this' 
WITHOUT_CLASSIFICATION	// done with switch
WITHOUT_CLASSIFICATION	//cv.visitLineNumber( index, labels[index] ); // push this before args
WITHOUT_CLASSIFICATION	// Unload the arguments from the ConstructorArgs object
WITHOUT_CLASSIFICATION	// invoke the iterator method on the ConstructorArgs // push the ConstructorArgs
WITHOUT_CLASSIFICATION	// if it's an object type we must do a check cast
WITHOUT_CLASSIFICATION	// invoke the constructor for this branch
WITHOUT_CLASSIFICATION	// Maybe combine this with generateMethod()
WITHOUT_CLASSIFICATION	// map loose return to Object
WITHOUT_CLASSIFICATION	// Add method body
WITHOUT_CLASSIFICATION	// Push vars
WITHOUT_CLASSIFICATION	//long
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// use default super constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*modifiers*/
WITHOUT_CLASSIFICATION	// use default super constructor
WITHOUT_CLASSIFICATION	// Make a tmp namespace to hold the original constructor args for // use in eval of the parameters node
WITHOUT_CLASSIFICATION	// evaluate the args
WITHOUT_CLASSIFICATION	// find the matching super() constructor for the args
WITHOUT_CLASSIFICATION	// find the matching this() constructor for the args
WITHOUT_CLASSIFICATION	// Are we choosing ourselves recursively through a this() reference?
WITHOUT_CLASSIFICATION	// Get the static This reference from the proto-instance
WITHOUT_CLASSIFICATION	// Get the instance initializer block from the static This 
WITHOUT_CLASSIFICATION	/*override*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Create the instance namespace
WITHOUT_CLASSIFICATION	// Set the instance This reference on the instance
WITHOUT_CLASSIFICATION	// Give the instance space its object import
WITHOUT_CLASSIFICATION	// invoke the constructor method from the instanceThis 
WITHOUT_CLASSIFICATION	// Find the constructor (now in the instance namespace)
WITHOUT_CLASSIFICATION	// if args, we must have constructor
WITHOUT_CLASSIFICATION	// Evaluate the constructor
WITHOUT_CLASSIFICATION	/*overrideNameSpace*/
WITHOUT_CLASSIFICATION	/*callerInfo*/
WITHOUT_CLASSIFICATION	// unwrap Primitive.Null to null
WITHOUT_CLASSIFICATION	// right?
WITHOUT_CLASSIFICATION	// unsafe caching of type here
WITHOUT_CLASSIFICATION	// Begin Child node structure evaluated by insureNodesParsed
WITHOUT_CLASSIFICATION	// index of the first throws clause child node
WITHOUT_CLASSIFICATION	// End Child node structure evaluated by insureNodesParsed
WITHOUT_CLASSIFICATION	// there is always a paramsNode
WITHOUT_CLASSIFICATION	// skip throws
WITHOUT_CLASSIFICATION	// skip throws
WITHOUT_CLASSIFICATION	// Unsafe caching of type here. // null (none), Void.TYPE, or a Class
WITHOUT_CLASSIFICATION	// Install an *instance* of this method in the namespace. // See notes in BshMethod 
WITHOUT_CLASSIFICATION	// validate that the throws names are class names
WITHOUT_CLASSIFICATION	// if strictJava mode, check for loose parameters and return type
WITHOUT_CLASSIFICATION	// do nothing - ch already contains correct character
WITHOUT_CLASSIFICATION	// get next character
WITHOUT_CLASSIFICATION	// get next character
WITHOUT_CLASSIFICATION	// check the next two characters
WITHOUT_CLASSIFICATION	// type is either a class name or a primitive type
WITHOUT_CLASSIFICATION	// args is either constructor arguments or array dimensions
WITHOUT_CLASSIFICATION	// Look for scripted class object
WITHOUT_CLASSIFICATION	/* force class*/
WITHOUT_CLASSIFICATION	// Try regular class
WITHOUT_CLASSIFICATION	/*force class*/
WITHOUT_CLASSIFICATION	// Is an inner class style object allocation
WITHOUT_CLASSIFICATION	// No need to wrap this debug
WITHOUT_CLASSIFICATION	// Is it an inner class?
WITHOUT_CLASSIFICATION	// work through to class 'this'
WITHOUT_CLASSIFICATION	/*interfaces*/
WITHOUT_CLASSIFICATION	/*superClass*/
WITHOUT_CLASSIFICATION	/*isInterface*/
WITHOUT_CLASSIFICATION	// statical import fields from the interface so that code inside // can refer to the fields directly (e.g. HEIGHT)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	/* all printable ASCII characters */
WITHOUT_CLASSIFICATION	//SwingUtilities.updateComponentTreeUI(getRootPane()); //}}}
WITHOUT_CLASSIFICATION	//{{{ loadToolBars() method
WITHOUT_CLASSIFICATION	//{{{ createEditPane() method
WITHOUT_CLASSIFICATION	//{{{ setEditPane() method
WITHOUT_CLASSIFICATION	// repaint the gutter so that the border color // reflects the focus state
WITHOUT_CLASSIFICATION	//{{{ handleBufferUpdate() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// zeros
WITHOUT_CLASSIFICATION	// First node is the expression on which to sync
WITHOUT_CLASSIFICATION	// Do the actual synchronization
WITHOUT_CLASSIFICATION	/*filter*/
WITHOUT_CLASSIFICATION	/*				Evaluate block in two passes: 				First do class declarations then do everything else.			*/
WITHOUT_CLASSIFICATION	// filter nodes
WITHOUT_CLASSIFICATION	// statement or embedded block evaluated a return statement
WITHOUT_CLASSIFICATION	// make sure we put the namespace back when we leave.
WITHOUT_CLASSIFICATION	/*		Our children are a prefix expression and any number of suffixes.		<p>		We don't eval() any nodes until the suffixes have had an		opportunity to work through them.  This lets the suffixes decide		how to interpret an ambiguous name (e.g. for the .class operation).	*/
WITHOUT_CLASSIFICATION	/*			If the result is a Node eval() it to an object or LHS			(as determined by toLHS)		*/
WITHOUT_CLASSIFICATION	// Some arbitrary kind of node
WITHOUT_CLASSIFICATION	// return LHS or value object as determined by toLHS
WITHOUT_CLASSIFICATION	// Type node is passed down the chain for array initializers // which need it under some circumstances
WITHOUT_CLASSIFICATION	// import the package we're in by default...
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// field access
WITHOUT_CLASSIFICATION	/*		Field access, .length on array, or a method invocation		Must handle toLHS case for each.	*/
WITHOUT_CLASSIFICATION	// .length on array
WITHOUT_CLASSIFICATION	// Property style access to Hashtable or Map
WITHOUT_CLASSIFICATION	// ++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	// Method invocation // (LHS or non LHS evaluation can both encounter method calls)
WITHOUT_CLASSIFICATION	/*key*/
WITHOUT_CLASSIFICATION	//public SimpleNode getParent() { return (SimpleNode)parent; }
WITHOUT_CLASSIFICATION	/*		Override this method if you want to customize how the node dumps		out its children.	*/
WITHOUT_CLASSIFICATION	//  ---- BeanShell specific stuff hereafter ----  //
WITHOUT_CLASSIFICATION	// If this is a unary increment of decrement (either pre or postfix) // then we need an LHS to which to assign the result.  Otherwise // just do the unary operation for the value.
WITHOUT_CLASSIFICATION	// resolve superclass if any
WITHOUT_CLASSIFICATION	// Get interfaces
WITHOUT_CLASSIFICATION	// Get the class body BSHBlock
WITHOUT_CLASSIFICATION	/*		type = VARIABLE;		this.varName = varName;		this.nameSpace = nameSpace;*/
WITHOUT_CLASSIFICATION	// Set the variable in namespace according to localVar flag
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// pass along target error
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// General case - performe the instanceof based on assignability
WITHOUT_CLASSIFICATION	/*			Look ahead and short circuit evaluation of the rhs if:				we're a boolean AND and the lhs is false.		*/
WITHOUT_CLASSIFICATION	/*			Look ahead and short circuit evaluation of the rhs if:				we're a boolean AND and the lhs is false.		*/
WITHOUT_CLASSIFICATION	// end stuff that was tacked on for boolean short-circuiting.
WITHOUT_CLASSIFICATION	/*			Are both the lhs and rhs either wrappers or primitive values?			do binary op		*/
WITHOUT_CLASSIFICATION	// Special case for EQ on two wrapper objects
WITHOUT_CLASSIFICATION	/*  					Don't auto-unwrap wrappers (preserve identity semantics)					FALL THROUGH TO OBJECT OPERATIONS BELOW.				*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// lazy instantiation
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// fix for the bug where key events in JTextComponents // inside views are also handled by the input handler
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ WindowHandler class
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ handleEditPaneUpdate() method
WITHOUT_CLASSIFICATION	//{{{ updateGutterBorders() method
WITHOUT_CLASSIFICATION	//{{{ _preprocessKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ CaretHandler class
WITHOUT_CLASSIFICATION	//{{{ FocusHandler class
WITHOUT_CLASSIFICATION	// walk up hierarchy, looking for an EditPane
WITHOUT_CLASSIFICATION	//{{{ ScrollHandler class
WITHOUT_CLASSIFICATION	// People have reported hangs with JDK 1.4; might be // caused by modal dialogs being displayed from // windowActivated()
WITHOUT_CLASSIFICATION	//{{{ ViewConfig class
WITHOUT_CLASSIFICATION	// dockables
WITHOUT_CLASSIFICATION	// this constructor keys the hash table
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getAction() method
WITHOUT_CLASSIFICATION	//{{{ getActionNames() method
WITHOUT_CLASSIFICATION	//{{{ addActionSet() method
WITHOUT_CLASSIFICATION	//{{{ removeActionSet() method
WITHOUT_CLASSIFICATION	//{{{ getActionSets() method
WITHOUT_CLASSIFICATION	//{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	//{{{ loadServices() method
WITHOUT_CLASSIFICATION	//{{{ invokeAction() method
WITHOUT_CLASSIFICATION	//{{{ unloadServices() method
WITHOUT_CLASSIFICATION	//{{{ registerService() method
WITHOUT_CLASSIFICATION	// this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ registerService() method
WITHOUT_CLASSIFICATION	//{{{ unregisterService() method
WITHOUT_CLASSIFICATION	//{{{ getServiceTypes() method
WITHOUT_CLASSIFICATION	//{{{ getServiceNames() method
WITHOUT_CLASSIFICATION	//{{{ getService() method
WITHOUT_CLASSIFICATION	// unknown service - <clazz,name> not in table
WITHOUT_CLASSIFICATION	//{{{ Descriptor class
WITHOUT_CLASSIFICATION	// avoid re-running script if it gives // us null
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// this constructor keys the hash table
WITHOUT_CLASSIFICATION	// this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	// lazy instantiation
WITHOUT_CLASSIFICATION	// avoid re-running script if it gives // us null
WITHOUT_CLASSIFICATION	//{{{ EditServer constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ IOProgressMonitor constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	//{{{ ErrorListCellRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ getListCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ ErrorEntry class
WITHOUT_CLASSIFICATION	//{{{ ErrorListDialog constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ EditPane constructor
WITHOUT_CLASSIFICATION	//{{{ close() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ handleBufferUpdate() method
WITHOUT_CLASSIFICATION	//{{{ isX11() method
WITHOUT_CLASSIFICATION	// Set up the right-click popup menu
WITHOUT_CLASSIFICATION	//{{{ getScreenBounds() method
WITHOUT_CLASSIFICATION	// use old property name for backwards compatibility
WITHOUT_CLASSIFICATION	//{{{ getScreenBounds() method
WITHOUT_CLASSIFICATION	//{{{ loadBufferSwitcher() method
WITHOUT_CLASSIFICATION	// Don't add duplicates
WITHOUT_CLASSIFICATION	/* When closing the last buffer, the BufferUpdate.CLOSED			 * handler doesn't call setBuffer(), because null buffers			 * are not supported. Instead, it waits for the subsequent			 * 'Untitled' file creation. */
WITHOUT_CLASSIFICATION	//shadow size
WITHOUT_CLASSIFICATION	//shadow size
WITHOUT_CLASSIFICATION	//{{{ isDOSDerived() method
WITHOUT_CLASSIFICATION	// Pick screen with largest intersection
WITHOUT_CLASSIFICATION	//{{{ isOS2() method
WITHOUT_CLASSIFICATION	// Make adjustments for some OS's
WITHOUT_CLASSIFICATION	//{{{ isWindows() method
WITHOUT_CLASSIFICATION	// Yay, we're finally there
WITHOUT_CLASSIFICATION	//{{{ getMarkers() method
WITHOUT_CLASSIFICATION	//{{{ isWindows9x() method
WITHOUT_CLASSIFICATION	//{{{ isUnix() method
WITHOUT_CLASSIFICATION	//{{{ isWindowsNT() method
WITHOUT_CLASSIFICATION	//{{{ indentLines() method
WITHOUT_CLASSIFICATION	//{{{ isMacOS() method
WITHOUT_CLASSIFICATION	// Do it
WITHOUT_CLASSIFICATION	//{{{ indentLines() method
WITHOUT_CLASSIFICATION	//{{{ Get properties
WITHOUT_CLASSIFICATION	//{{{ indentLine() method
WITHOUT_CLASSIFICATION	//{{{ indentLine() method
WITHOUT_CLASSIFICATION	//{{{ getCurrentIndentForLine() method
WITHOUT_CLASSIFICATION	//{{{ getIdealIndentForLine() method
WITHOUT_CLASSIFICATION	//{{{ Get indent attributes of previous line
WITHOUT_CLASSIFICATION	//{{{ getFile() method
WITHOUT_CLASSIFICATION	//{{{ createPosition() method
WITHOUT_CLASSIFICATION	//{{{ Deprecated methods
WITHOUT_CLASSIFICATION	//{{{ markTokens() method
WITHOUT_CLASSIFICATION	//{{{ Handle brackets
WITHOUT_CLASSIFICATION	//{{{ Get indent attributes for current line
WITHOUT_CLASSIFICATION	//{{{ putBooleanProperty() method
WITHOUT_CLASSIFICATION	// Additional bracket indent // For lining up closing // and opening brackets
WITHOUT_CLASSIFICATION	//{{{ Handle regexps
WITHOUT_CLASSIFICATION	//{{{ Deep indenting
WITHOUT_CLASSIFICATION	//{{{ isFoldStart() method
WITHOUT_CLASSIFICATION	// no parenthesis on previous line (prevLineParenWeight == 0) so the normal indenting rules are used
WITHOUT_CLASSIFICATION	//{{{ getRootElements() method
WITHOUT_CLASSIFICATION	// If the previous line matches indentNextLine or indentNextLines, // add a level of indent
WITHOUT_CLASSIFICATION	//{{{ getLineParenWeight() method
WITHOUT_CLASSIFICATION	//{{{ getParagraphElement() method
WITHOUT_CLASSIFICATION	//{{{ putProperty() method
WITHOUT_CLASSIFICATION	//{{{ isFoldEnd() method
WITHOUT_CLASSIFICATION	// for backwards compatibility
WITHOUT_CLASSIFICATION	//{{{ setFoldHandler() method
WITHOUT_CLASSIFICATION	//{{{ getDefaultRootElement() method
WITHOUT_CLASSIFICATION	//{{{ invalidateCachedFoldLevels() method
WITHOUT_CLASSIFICATION	//{{{ getCurrentIdentForLine() method
WITHOUT_CLASSIFICATION	//{{{ Folding methods
WITHOUT_CLASSIFICATION	//{{{ Position methods
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ getFoldAtLine() method
WITHOUT_CLASSIFICATION	//{{{ Marker methods
WITHOUT_CLASSIFICATION	//{{{ getFoldHandler() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ commitTemporary() method
WITHOUT_CLASSIFICATION	//{{{ getMarker() method
WITHOUT_CLASSIFICATION	// notify clients with -wait
WITHOUT_CLASSIFICATION	//Log.log(Log.ERROR,this,io);
WITHOUT_CLASSIFICATION	//{{{ close() method
WITHOUT_CLASSIFICATION	// don't sort markers while buffer is being loaded
WITHOUT_CLASSIFICATION	//{{{ getMarkerStatusPrompt() method
WITHOUT_CLASSIFICATION	//{{{ checkFileForLoad() method
WITHOUT_CLASSIFICATION	//{{{ addOrRemoveMarker() method
WITHOUT_CLASSIFICATION	//{{{ getMarkerInRange() method
WITHOUT_CLASSIFICATION	//{{{ addMarker() method
WITHOUT_CLASSIFICATION	// this must be called before any EditBus messages are sent
WITHOUT_CLASSIFICATION	//{{{ getMarkerAtLine() method
WITHOUT_CLASSIFICATION	//{{{ resetCachedProperties() method
WITHOUT_CLASSIFICATION	//{{{ removeMarker() method
WITHOUT_CLASSIFICATION	/* Magic: UNTITLED is only set if newFile param to		 * constructor is set, NEW_FILE is also set if file		 * doesn't exist on disk.		 *		 * This is so that we can tell apart files created		 * with jEdit.newFile(), and those that just don't		 * exist on disk.		 *		 * Why do we need to tell the difference between the		 * two? jEdit.addBufferToList() checks if the only		 * opened buffer is an untitled buffer, and if so,		 * replaces it with the buffer to add. We don't want		 * this behavior to occur with files that don't		 * exist on disk; only untitled ones.		 */
WITHOUT_CLASSIFICATION	//{{{ removeAllMarkers() method
WITHOUT_CLASSIFICATION	// Display
WITHOUT_CLASSIFICATION	//{{{ Flags
WITHOUT_CLASSIFICATION	//{{{ finishSaving() method
WITHOUT_CLASSIFICATION	//{{{ setFlag() method
WITHOUT_CLASSIFICATION	//{{{ setPath() method
WITHOUT_CLASSIFICATION	//{{{ getFlag() method
WITHOUT_CLASSIFICATION	//{{{ checkFileForSave() method
WITHOUT_CLASSIFICATION	//{{{ Flag values
WITHOUT_CLASSIFICATION	//{{{ recoverAutosave() method
WITHOUT_CLASSIFICATION	// this method might get called at startup
WITHOUT_CLASSIFICATION	//{{{ fireTransactionComplete() method
WITHOUT_CLASSIFICATION	//{{{ finishLoading() method
WITHOUT_CLASSIFICATION	// Create marker positions
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ setTokenMarker() method
WITHOUT_CLASSIFICATION	// if we don't do this, the autosave file won't be // deleted after a save as
WITHOUT_CLASSIFICATION	// Need to reset properties that were cached defaults, // since the defaults might have changed.
WITHOUT_CLASSIFICATION	// on a reload, the fold handler doesn't change, but // we still need to re-collapse folds. // don't do this on initial fold handler creation
WITHOUT_CLASSIFICATION	// show this message when all I/O requests are // complete
WITHOUT_CLASSIFICATION	/* if we save a file with the same name as one				 * that's already open, we presume that we can				 * close the existing file, since the user				 * would have confirmed the overwrite in the				 * 'save as' dialog box anyway */
WITHOUT_CLASSIFICATION	/* can't happen? */
WITHOUT_CLASSIFICATION	/* can't happen? */
WITHOUT_CLASSIFICATION	/* if we saved over an already open file using				 * 'save a copy as', then reload the existing				 * buffer */
WITHOUT_CLASSIFICATION	//{{{ Update this buffer for the new path
WITHOUT_CLASSIFICATION	// this ensures that undo can clear // the dirty flag properly when all // edits up to a save are undone
WITHOUT_CLASSIFICATION	// if user adds mode buffer-local property
WITHOUT_CLASSIFICATION	// new message type introduced in 4.0pre4
WITHOUT_CLASSIFICATION	//{{{ parseBufferLocalProperties() method
WITHOUT_CLASSIFICATION	//{{{ parseBufferLocalProperties() method
WITHOUT_CLASSIFICATION	// first line for last 10 lines, make sure not to overlap // with the first 10
WITHOUT_CLASSIFICATION	// use the low-level property setting code // so that if we have a buffer-local // property with the same value as a default, // later changes in the default don't affect // the buffer-local property
WITHOUT_CLASSIFICATION	// don't do this on initial token marker
WITHOUT_CLASSIFICATION	//{{{ getPriorNonEmptyLine() method
WITHOUT_CLASSIFICATION	// didn't find a line that contains non-whitespace chars // so return index of prior whitespace line
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ Event firing methods
WITHOUT_CLASSIFICATION	//{{{ getListener() method
WITHOUT_CLASSIFICATION	//{{{ fireFoldLevelChanged() method
WITHOUT_CLASSIFICATION	//{{{ fireContentInserted() method
WITHOUT_CLASSIFICATION	//{{{ fireContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ firePreContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ fireFoldHandlerChanged() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// end HandlerBase implementation
WITHOUT_CLASSIFICATION	// so you the avid code reader should use MODES as the // DOCTYPE instead, but we still let old catalogs through // to avoid annoying users.
WITHOUT_CLASSIFICATION	// older jEdit versions used a DOCTYPE of CATALOG, which // is incorrect since the DOCTYPE must be the name of the // root element, which is MODES.
WITHOUT_CLASSIFICATION	// 1 because we've already 'seen' the first bracket
WITHOUT_CLASSIFICATION	//{{{ findMatchingBracket() method
WITHOUT_CLASSIFICATION	// to avoid slowdown with large files; only scan 10000 lines either way
WITHOUT_CLASSIFICATION	//{{{ Forward search
WITHOUT_CLASSIFICATION	//{{{ getTokenAtOffset() method
WITHOUT_CLASSIFICATION	// corresponding character // false - backwards, true - forwards
WITHOUT_CLASSIFICATION	//}}} //{{{ Backward search
WITHOUT_CLASSIFICATION	// Get the syntax token at 'offset' // only tokens with the same type will be checked for // the corresponding bracket
WITHOUT_CLASSIFICATION	// Nothing found
WITHOUT_CLASSIFICATION	//{{{ Go on to next line
WITHOUT_CLASSIFICATION	//{{{ Go on to previous line
WITHOUT_CLASSIFICATION	//{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	//{{{ findWordStart() method
WITHOUT_CLASSIFICATION	//{{{ findWordStart() method
WITHOUT_CLASSIFICATION	//{{{ findWordStart() method
WITHOUT_CLASSIFICATION	//{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	//{{{ Whitespace...
WITHOUT_CLASSIFICATION	//{{{ Whitespace...
WITHOUT_CLASSIFICATION	// only select other whitespace in this case
WITHOUT_CLASSIFICATION	// only select other whitespace in this case
WITHOUT_CLASSIFICATION	// word char or symbol; stop
WITHOUT_CLASSIFICATION	//}}} //{{{ Word character...
WITHOUT_CLASSIFICATION	// word char; keep going
WITHOUT_CLASSIFICATION	// whitespace; include in word if eating
WITHOUT_CLASSIFICATION	// whitespace; include in word if eating
WITHOUT_CLASSIFICATION	//}}} //{{{ Symbol...
WITHOUT_CLASSIFICATION	//{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	//{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	//{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	// whitespace; include in word if eating
WITHOUT_CLASSIFICATION	//}}} //{{{ Symbol...
WITHOUT_CLASSIFICATION	// align everything to paragraph's leading indent
WITHOUT_CLASSIFICATION	// if we see whitespace, set flag.
WITHOUT_CLASSIFICATION	//{{{ tabsToSpaces() method
WITHOUT_CLASSIFICATION	//{{{ spacesToTabs() method
WITHOUT_CLASSIFICATION	//{{{ createEncodingMenu() method
WITHOUT_CLASSIFICATION	//{{{ format() method
WITHOUT_CLASSIFICATION	//{{{ BrowserCommandsMenu constructor
WITHOUT_CLASSIFICATION	//{{{ getStringCase() method
WITHOUT_CLASSIFICATION	// set rename to false if > 1 file selected
WITHOUT_CLASSIFICATION	//{{{ toTitleCase() method
WITHOUT_CLASSIFICATION	/* all good */
WITHOUT_CLASSIFICATION	//{{{ formatParagraph() method
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	// show 'close' item if at least one selected // file is currently open
WITHOUT_CLASSIFICATION	// this will disable most operations if // files of multiple types are selected
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ createMenuItem() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getIconForFile() method
WITHOUT_CLASSIFICATION	//{{{ FileCellRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ getIconForFile() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getEntryWidth() method
WITHOUT_CLASSIFICATION	//{{{ ExpansionToggleBorder class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ ExpansionToggleBorder constructor
WITHOUT_CLASSIFICATION	//{{{ isExpansionToggle() method
WITHOUT_CLASSIFICATION	//setColumnSelectionAllowed(true); //setCellSelectionEnabled(false);
WITHOUT_CLASSIFICATION	//{{{ paintBorder() method
WITHOUT_CLASSIFICATION	//{{{ VFSDirectoryEntryTable constructor
WITHOUT_CLASSIFICATION	//{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	//{{{ isBorderOpaque() method
WITHOUT_CLASSIFICATION	//{{{ selectFile() method
WITHOUT_CLASSIFICATION	/* TableColumn col1 = getColumnModel().getColumn(0);		col1.setMinWidth(20);		col1.setMaxWidth(20);		col1.setPreferredWidth(20); */
WITHOUT_CLASSIFICATION	//{{{ setDirectory() method
WITHOUT_CLASSIFICATION	//{{{ getExpandedDirectories() method
WITHOUT_CLASSIFICATION	//{{{ doTypeSelect() method
WITHOUT_CLASSIFICATION	//{{{ doTypeSelect() method
WITHOUT_CLASSIFICATION	//{{{ scrollRectToVisible() method
WITHOUT_CLASSIFICATION	//{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ toggleExpanded() method
WITHOUT_CLASSIFICATION	// avoid scrolling to the right
WITHOUT_CLASSIFICATION	//{{{ setSelectedRow() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ run() method
WITHOUT_CLASSIFICATION	//{{{ expand() method
WITHOUT_CLASSIFICATION	//{{{ resizeColumnsAppropriately() method
WITHOUT_CLASSIFICATION	//{{{ delete() method
WITHOUT_CLASSIFICATION	//{{{ ClearTypeSelect class
WITHOUT_CLASSIFICATION	//{{{ getExtendedAttribute() method
WITHOUT_CLASSIFICATION	//{{{ Request types
WITHOUT_CLASSIFICATION	//{{{ rename() method
WITHOUT_CLASSIFICATION	//{{{ BrowserIORequest constructor
WITHOUT_CLASSIFICATION	/* fireTableRowsInserted(startIndex + 1,				startIndex + list.size() + 1); */
WITHOUT_CLASSIFICATION	//{{{ listDirectory() method
WITHOUT_CLASSIFICATION	// allow user to change name // case
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ mkdir() method
WITHOUT_CLASSIFICATION	/* fireTableRowsUpdated(startIndex,startIndex); */
WITHOUT_CLASSIFICATION	//{{{ VFSDirectoryEntryTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ setRoot() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ collapse() method
WITHOUT_CLASSIFICATION	//{{{ addExtendedAttributes() method
WITHOUT_CLASSIFICATION	/* fireTableRowsUpdated(index,index);		fireTableRowsDeleted(index + 1,lastIndex); */
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ removeExtendedAttributes() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	//{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ showFilePopup() method
WITHOUT_CLASSIFICATION	// this vfs has an extended attribute which is not // in the list. add it to the end with a ref count // of 1
WITHOUT_CLASSIFICATION	// this vfs has an extended attribute which is not // in the list ???
WITHOUT_CLASSIFICATION	// we no longer have any // dirs using this extended // attribute
WITHOUT_CLASSIFICATION	//{{{ BrowserView constructor
WITHOUT_CLASSIFICATION	// how deeply we are nested
WITHOUT_CLASSIFICATION	//{{{ clearExpansionState() method
WITHOUT_CLASSIFICATION	//{{{ ExtendedAttribute class
WITHOUT_CLASSIFICATION	//{{{ focusOnFileView() method
WITHOUT_CLASSIFICATION	/* reference counter allows us to remove a column from		 * the table when no directory using this column is		 * visible */
WITHOUT_CLASSIFICATION	//{{{ updateFileView() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ loadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ selectNone() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ saveExpansionState() method
WITHOUT_CLASSIFICATION	//{{{ directoryLoaded() method
WITHOUT_CLASSIFICATION	//{{{ getBrowser() method
WITHOUT_CLASSIFICATION	//{{{ If reloading root, update parent directory list
WITHOUT_CLASSIFICATION	// for the parent directory right-click; on the click we select // the clicked item, but when the popup goes away we select the // currently showing directory.
WITHOUT_CLASSIFICATION	//{{{ getTable() method
WITHOUT_CLASSIFICATION	//{{{ getParentDirectoryList() method
WITHOUT_CLASSIFICATION	// we use SwingUtilities.invokeLater() // so that the action is executed before // the popup is hidden.
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	// so that it doesn't resize...
WITHOUT_CLASSIFICATION	// because this method is called for *every* VFS update, // we don't want to scan the tree all the time. So we // use the following algorithm to determine if the path // might be part of the tree: // - if the path starts with the browser's current directory, //   we do the tree scan // - if the browser's directory is 'favorites:' -- we have to //   do the tree scan, as every path can appear under the //   favorites list // - if the browser's directory is 'roots:' and path is on //   the local filesystem, do a tree scan
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	/* nothing */
WITHOUT_CLASSIFICATION	//{{{ doComplete() method
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	//{{{ VFSFileNameField constructor
WITHOUT_CLASSIFICATION	//{{{ VFSFileChooserDialog constructor
WITHOUT_CLASSIFICATION	// fix for bug #765507 // we don't type complete in save dialog // boxes. Press TAB to do an explicit // complete
WITHOUT_CLASSIFICATION	// fix for bug #765507 // we don't type complete in save dialog // boxes. Press TAB to do an explicit // complete
WITHOUT_CLASSIFICATION	//{{{ goToParent() method
WITHOUT_CLASSIFICATION	//{{{ BrowserHandler class
WITHOUT_CLASSIFICATION	//{{{ BackspaceAction class
WITHOUT_CLASSIFICATION	/* browser.getBrowserView().getTable().addKeyListener(new KeyHandler()); */
WITHOUT_CLASSIFICATION	//String filename = filenameField.getText();
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ doFileExistsWarning() method
WITHOUT_CLASSIFICATION	//{{{ filesSelected() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ getActionContext() method
WITHOUT_CLASSIFICATION	//{{{ getMode() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ filesActivated() method
WITHOUT_CLASSIFICATION	// non-existent file
WITHOUT_CLASSIFICATION	// user pressed enter when the vfs table or // file name field has focus, with nothing // selected.
WITHOUT_CLASSIFICATION	//{{{ progressUpdate() method
WITHOUT_CLASSIFICATION	//{{{ WorkThreadListener class
WITHOUT_CLASSIFICATION	//{{{ statusUpdate() method
WITHOUT_CLASSIFICATION	//{{{ GetFileTypeRequest class
WITHOUT_CLASSIFICATION	// because its preferred size can be quite wide, we // don't want it to make the browser way too big, // so set the preferred width to 0.
WITHOUT_CLASSIFICATION	//{{{ Browser types
WITHOUT_CLASSIFICATION	//{{{ browseDirectoryInNewWindow() method
WITHOUT_CLASSIFICATION	//{{{ VFSBrowser constructor
WITHOUT_CLASSIFICATION	//{{{ VFSBrowser constructor
WITHOUT_CLASSIFICATION	//{{{ browseDirectory() method
WITHOUT_CLASSIFICATION	// see VFSBrowser.browseDirectory()
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	// unknown value??!!!
WITHOUT_CLASSIFICATION	//{{{ isMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ newFile() method
WITHOUT_CLASSIFICATION	//{{{ getDirectory() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	//{{{ setDirectory() method
WITHOUT_CLASSIFICATION	//{{{ delete() method
WITHOUT_CLASSIFICATION	//{{{ rename() method
WITHOUT_CLASSIFICATION	//{{{ mkdir() method
WITHOUT_CLASSIFICATION	//{{{ directoryLoaded() method
WITHOUT_CLASSIFICATION	//{{{ filesSelected() method
WITHOUT_CLASSIFICATION	// used by FTP plugin to clear directory cache
WITHOUT_CLASSIFICATION	//{{{ isHorizontalLayout() method
WITHOUT_CLASSIFICATION	//{{{ setShowHiddenFiles() method
WITHOUT_CLASSIFICATION	//{{{ getShowHiddenFiles() method
WITHOUT_CLASSIFICATION	//{{{ locateFile() method
WITHOUT_CLASSIFICATION	//{{{ getFilenameFilter() method
WITHOUT_CLASSIFICATION	// if a directory is selected, create new dir in there. // if a file is selected, create new dir inside its parent.
WITHOUT_CLASSIFICATION	//{{{ setFilenameFilter() method
WITHOUT_CLASSIFICATION	//{{{ getDirectoryField() method
WITHOUT_CLASSIFICATION	// path is the currently viewed directory in the browser
WITHOUT_CLASSIFICATION	//{{{ rootDirectory() method
WITHOUT_CLASSIFICATION	//{{{ addBrowserListener() method
WITHOUT_CLASSIFICATION	//{{{ reloadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ searchInDirectory() method
WITHOUT_CLASSIFICATION	//{{{ searchInDirectory() method
WITHOUT_CLASSIFICATION	//{{{ removeBrowserListener() method
WITHOUT_CLASSIFICATION	//{{{ getBrowserView() method
WITHOUT_CLASSIFICATION	//{{{ pathsEqual() method
WITHOUT_CLASSIFICATION	//{{{ updateFilenameFilter() method
WITHOUT_CLASSIFICATION	//{{{ endRequest() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	/* We do this stuff because the browser is not able to handle	 * more than one request yet */
WITHOUT_CLASSIFICATION	// close if this buffer is currently // visible in the view.
WITHOUT_CLASSIFICATION	// if a file is selected in OPEN_DIALOG or // SAVE_DIALOG mode, just let the listener(s) // handle it
WITHOUT_CLASSIFICATION	//{{{ updatePopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ createMenuBar() method
WITHOUT_CLASSIFICATION	//{{{ startRequest() method
WITHOUT_CLASSIFICATION	//{{{ createToolBar() method
WITHOUT_CLASSIFICATION	//Log.log(Log.WARNING,this,"VFS update: request already in progress");
WITHOUT_CLASSIFICATION	//{{{ CommandsMenuButton class
WITHOUT_CLASSIFICATION	// dump stack trace for debugging purposes
WITHOUT_CLASSIFICATION	// save a file -> sends vfs update. if a VFS file dialog box // is shown from the same event frame as the save, the // VFSUpdate will be delivered before the directory is loaded, // and before the path is set.
WITHOUT_CLASSIFICATION	//{{{ updateFilterEnabled() method
WITHOUT_CLASSIFICATION	//{{{ PluginsMenuButton class
WITHOUT_CLASSIFICATION	//{{{ CommandsMenuButton constructor
WITHOUT_CLASSIFICATION	/* we're in a modal dialog */
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ PluginsMenuButton constructor
WITHOUT_CLASSIFICATION	//{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ FavoritesMenuButton class
WITHOUT_CLASSIFICATION	//{{{ old API
WITHOUT_CLASSIFICATION	//{{{ DirectoryLoadedAWTRequest class
WITHOUT_CLASSIFICATION	//{{{ new API
WITHOUT_CLASSIFICATION	//{{{ FavoritesMenuButton constructor
WITHOUT_CLASSIFICATION	// This is the new, canonical path
WITHOUT_CLASSIFICATION	// there was an error
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,BufferHistory.class,fnf);
WITHOUT_CLASSIFICATION	/* to avoid data loss, only do this if the above			 * completed successfully */
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	// if any directories are selected, add // them, otherwise add current directory
WITHOUT_CLASSIFICATION	// ensure consistent history; // eg we don't want both // foo/ and foo
WITHOUT_CLASSIFICATION	// to notify listeners that any existing // selection has been deactivated
WITHOUT_CLASSIFICATION	// turns out under some circumstances this // method can switch the current buffer in // BROWSER mode.
WITHOUT_CLASSIFICATION	// in any case, this is only needed for the // directory chooser (why?), so we add a // check. otherwise poor Rick will go insane.
WITHOUT_CLASSIFICATION	//{{{ BrowserActionContext class
WITHOUT_CLASSIFICATION	// in the future we will want something better, // eg. having an 'evt' object passed to // EditAction.invoke().
WITHOUT_CLASSIFICATION	// for now, since all browser actions are // written in beanshell we set the 'browser' // variable directly.
WITHOUT_CLASSIFICATION	// I guess ideally all browsers // should have views, but since they // don't, we just use the active view // in that case, since some actions // depend on a view being there and // I don't want to add checks to // them all
WITHOUT_CLASSIFICATION	//{{{ getListModel() method
WITHOUT_CLASSIFICATION	//{{{ changed() method
WITHOUT_CLASSIFICATION	// compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	// strings might be equal!
WITHOUT_CLASSIFICATION	// no duplicates, check for all-whitespace string
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ read() method
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ run() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ KillRingHandler class
WITHOUT_CLASSIFICATION	// we don't want duplicate // entries in the kill ring
WITHOUT_CLASSIFICATION	//{{{ RingListModel class
WITHOUT_CLASSIFICATION	// we don't want duplicate entries // in the kill ring
WITHOUT_CLASSIFICATION	// True if a \n was read after a \r. Usually // means this is a DOS/Windows file
WITHOUT_CLASSIFICATION	//{{{ BufferIORequest constructor
WITHOUT_CLASSIFICATION	//{{{ Constants
WITHOUT_CLASSIFICATION	// auto-detect encoding within the gzip stream.
WITHOUT_CLASSIFICATION	// do not reset the stream and just treat it // like a normal UTF-8 file.
WITHOUT_CLASSIFICATION	/* we guess an initial size for the array */
WITHOUT_CLASSIFICATION	// only true if the file size is known
WITHOUT_CLASSIFICATION	// if the file size is not known, start with a resonable // default buffer size
WITHOUT_CLASSIFICATION	// Number of characters in 'buf' array. // InputStream.read() doesn't always fill the // array (eg, the file size is not a multiple of // IOBUFSIZE, or it is a GZipped file, etc)
WITHOUT_CLASSIFICATION	// A \r was read, hence a MacOS file
WITHOUT_CLASSIFICATION	// Was the previous read character a \r? // If we read a \n and this is true, we assume // we have a DOS/Windows file
WITHOUT_CLASSIFICATION	// If we read a \r and // lastWasCR is also true, // it is probably a Mac file // (\r\r in stream)
WITHOUT_CLASSIFICATION	// Number of lines read. Every 100 lines, we update the // progress bar
WITHOUT_CLASSIFICATION	// Offset of previous line, relative to // the start of the I/O buffer (NOT // relative to the start of the document)
WITHOUT_CLASSIFICATION	// Look for line endings.
WITHOUT_CLASSIFICATION	// Otherwise set a flag, // so that \n knows that last // was a \r
WITHOUT_CLASSIFICATION	// This is i+1 to take the // trailing \n into account
WITHOUT_CLASSIFICATION	// Insert a line
WITHOUT_CLASSIFICATION	// If lastWasCR is true, // we just read a \r followed // by a \n. We specify that // this is a Windows file, // but take no further // action and just ignore // the \r.
WITHOUT_CLASSIFICATION	// Bump lastLine so // that the next line // doesn't erronously // pick up the \r
WITHOUT_CLASSIFICATION	// Otherwise, we found a \n // that follows some other // character, hence we have // a Unix file
WITHOUT_CLASSIFICATION	// If we find some other // character that follows // a \r, so it is not a // Windows file, and probably // a Mac file
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ write() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	// For `reload' command
WITHOUT_CLASSIFICATION	//{{{ autosave() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ beginCompoundEdit() method
WITHOUT_CLASSIFICATION	//{{{ endCompoundEdit() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	// Chop trailing newline and/or ^Z (if any)
WITHOUT_CLASSIFICATION	// Add remaining stuff from buffer
WITHOUT_CLASSIFICATION	// the entire save operation can be aborted...
WITHOUT_CLASSIFICATION	// to avoid having to deal with read/write locks and such, // we insert the loaded data into the buffer in the // post-load cleanup runnable, which runs in the AWT thread.
WITHOUT_CLASSIFICATION	/* DOS ^Z */
WITHOUT_CLASSIFICATION	//{{{ readMarkers() method
WITHOUT_CLASSIFICATION	// add a line marker at the end for proper offset manager // operation
WITHOUT_CLASSIFICATION	// used in insert()
WITHOUT_CLASSIFICATION	// the entire save operation can be aborted...
WITHOUT_CLASSIFICATION	/* if the VFS supports renaming files, we first			 * save to #<filename>#save#, then rename that			 * to <filename>, so that if the save fails,			 * data will not be lost.			 *			 * as of 4.1pre7 we now call vfs.getTwoStageSaveName()			 * instead of constructing the path directly			 * since some VFS's might not allow # in filenames.			 */
WITHOUT_CLASSIFICATION	//buffer.readLock();
WITHOUT_CLASSIFICATION	// Only backup once per session
WITHOUT_CLASSIFICATION	// this must be after the stream is created or // we deadlock with SSHTools.
WITHOUT_CLASSIFICATION	// We only save markers to VFS's that support deletion. // Otherwise, we will accumilate stale marks files.
WITHOUT_CLASSIFICATION	// Can't use buffer.getName() here because // it is not changed until the save is // complete
WITHOUT_CLASSIFICATION	//buffer.readUnlock();
WITHOUT_CLASSIFICATION	//{{{ writeMarkers() method
WITHOUT_CLASSIFICATION	// buffer has been saved while we // were waiting.
WITHOUT_CLASSIFICATION	//{{{ setLimit() method
WITHOUT_CLASSIFICATION	// not supported by Java...
WITHOUT_CLASSIFICATION	//{{{ UndoManager constructor
WITHOUT_CLASSIFICATION	/* we don't do this in Buffer.insert() so that				   we can insert multiple files at once */
WITHOUT_CLASSIFICATION	//{{{ clear() method
WITHOUT_CLASSIFICATION	/* nothing done between begin/end calls */
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ bufferSaved() method
WITHOUT_CLASSIFICATION	//{{{ Remove class
WITHOUT_CLASSIFICATION	//{{{ Remove constructor
WITHOUT_CLASSIFICATION	//{{{ Remove constructor
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	// queue of undos. last is most recent, first is oldest
WITHOUT_CLASSIFICATION	//{{{ Insert class
WITHOUT_CLASSIFICATION	// queue of redos. first is most recent, last is oldest
WITHOUT_CLASSIFICATION	//{{{ addEdit() method
WITHOUT_CLASSIFICATION	//{{{ Insert constructor
WITHOUT_CLASSIFICATION	//{{{ getMergeEdit() method
WITHOUT_CLASSIFICATION	//{{{ Insert constructor
WITHOUT_CLASSIFICATION	//{{{ getLastEdit() method
WITHOUT_CLASSIFICATION	//{{{ Edit class
WITHOUT_CLASSIFICATION	//{{{ CompoundEdit class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	//{{{ createPosition() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ finalize() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	/* get all positions from offset to the end, inclusive */
WITHOUT_CLASSIFICATION	/* get all positions from offset to the end, inclusive */
WITHOUT_CLASSIFICATION	//{{{ PosTopHalf class
WITHOUT_CLASSIFICATION	//{{{ unref() method
WITHOUT_CLASSIFICATION	//{{{ PosTopHalf constructor
WITHOUT_CLASSIFICATION	//{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	//{{{ getOffset() method
WITHOUT_CLASSIFICATION	//{{{ compareTo() method
WITHOUT_CLASSIFICATION	//{{{ PosBottomHalf class
WITHOUT_CLASSIFICATION	//{{{ getStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ PosBottomHalf constructor
WITHOUT_CLASSIFICATION	//{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	//{{{ ref() method
WITHOUT_CLASSIFICATION	//{{{ LineElement constructor
WITHOUT_CLASSIFICATION	//{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	//{{{ getDocument() method
WITHOUT_CLASSIFICATION	//{{{ getEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ getParentElement() method
WITHOUT_CLASSIFICATION	//{{{ getAttributes() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getLength() method
WITHOUT_CLASSIFICATION	//{{{ getLineCount() method
WITHOUT_CLASSIFICATION	//{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	// copy text after gap
WITHOUT_CLASSIFICATION	//{{{ getElementIndex() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineCount() method
WITHOUT_CLASSIFICATION	//{{{ getElementCount() method
WITHOUT_CLASSIFICATION	//{{{ _setContent() method
WITHOUT_CLASSIFICATION	//{{{ getElement() method
WITHOUT_CLASSIFICATION	// limitations...
WITHOUT_CLASSIFICATION	//{{{ isLeaf() method
WITHOUT_CLASSIFICATION	//{{{ moveGapStart() method
WITHOUT_CLASSIFICATION	//{{{ ExplicitFoldHandler constructor
WITHOUT_CLASSIFICATION	// limitations...
WITHOUT_CLASSIFICATION	// copy text before gap
WITHOUT_CLASSIFICATION	//{{{ moveGapEnd() method
WITHOUT_CLASSIFICATION	//{{{ setFirstInvalidFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ DummyFoldHandler constructor
WITHOUT_CLASSIFICATION	//{{{ setScreenLineCount() method
WITHOUT_CLASSIFICATION	//{{{ LineManager constructor
WITHOUT_CLASSIFICATION	//{{{ getFirstInvalidFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ isScreenLineCountValid() method
WITHOUT_CLASSIFICATION	//{{{ getLineContext() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ getFoldHandler() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	//{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	//{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	//{{{ Update line info and line context arrays
WITHOUT_CLASSIFICATION	//{{{ setLineContext() method
WITHOUT_CLASSIFICATION	//{{{ Update line info and line context arrays
WITHOUT_CLASSIFICATION	//{{{ setFirstInvalidLineContext() method
WITHOUT_CLASSIFICATION	//{{{ getFirstInvalidLineContext() method
WITHOUT_CLASSIFICATION	//moveGap(-1,0,"contentInserted");
WITHOUT_CLASSIFICATION	//{{{ invalidateScreenLineCounts() method
WITHOUT_CLASSIFICATION	//{{{ setLineEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ _contentInserted() method
WITHOUT_CLASSIFICATION	/* Having all the info packed into an int is not very OO and makes the	 * code somewhat more complicated, but it saves a lot of memory.	 *	 * The new document model has just 12 bytes of overhead per line.	 * LineContext instances are now internalized, so only a few should	 * actually be in the heap.	 *	 * In the old document model there were 5 objects per line, for a	 * total of about 100 bytes, plus a cached token list, which used	 * another 100 or so bytes. */
WITHOUT_CLASSIFICATION	//moveGap(-1,0,"contentRemoved");
WITHOUT_CLASSIFICATION	//{{{ registerFoldHandler() method
WITHOUT_CLASSIFICATION	//{{{ moveGap() method
WITHOUT_CLASSIFICATION	//{{{ unregisterFoldHandler() method
WITHOUT_CLASSIFICATION	// Default implementation... subclasses can extend this.
WITHOUT_CLASSIFICATION	//{{{ getFoldHandlers() method
WITHOUT_CLASSIFICATION	//{{{ hashCode() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ stop() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ getIcon() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	// if 'temp' is true, hide search bar after user is done with it
WITHOUT_CLASSIFICATION	//{{{ getFoldModes() method
WITHOUT_CLASSIFICATION	// empty line. inherit previous line's fold level
WITHOUT_CLASSIFICATION	//{{{ FoldHandler() constructor
WITHOUT_CLASSIFICATION	//{{{ getExpansion() method
WITHOUT_CLASSIFICATION	//{{{ Static initializer
WITHOUT_CLASSIFICATION	//{{{ AnimatedIcon constructor
WITHOUT_CLASSIFICATION	//{{{ getFrames() method
WITHOUT_CLASSIFICATION	//{{{ setExpansion() method
WITHOUT_CLASSIFICATION	//{{{ getRate() method
WITHOUT_CLASSIFICATION	//{{{ getField() method
WITHOUT_CLASSIFICATION	//{{{ setFrames() method
WITHOUT_CLASSIFICATION	//{{{ getAbbrevField() method
WITHOUT_CLASSIFICATION	//{{{ setIcon() method
WITHOUT_CLASSIFICATION	//{{{ setRate() method
WITHOUT_CLASSIFICATION	//{{{ getBeforeCaretTextArea() method
WITHOUT_CLASSIFICATION	//{{{ goToActionBar() method
WITHOUT_CLASSIFICATION	//{{{ getAfterCaretTextArea() method
WITHOUT_CLASSIFICATION	//{{{ ActionBar constructor
WITHOUT_CLASSIFICATION	/* construct a BeanShell snippet instead of				 * invoking directly so that user can record				 * property changes in macros. */
WITHOUT_CLASSIFICATION	//{{{ getCompletions() method
WITHOUT_CLASSIFICATION	//{{{ complete() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	// protected members
WITHOUT_CLASSIFICATION	//{{{ isOK() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	//{{{ DocumentHandler class
WITHOUT_CLASSIFICATION	//{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	//{{{ ActionTextField class
WITHOUT_CLASSIFICATION	//{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	//{{{ setModel() method
WITHOUT_CLASSIFICATION	//{{{ TipOfTheDay constructor
WITHOUT_CLASSIFICATION	//{{{ CompletionPopup class
WITHOUT_CLASSIFICATION	//{{{ CompletionList class
WITHOUT_CLASSIFICATION	//{{{ CompletionPopup constructor
WITHOUT_CLASSIFICATION	// we need this public not protected
WITHOUT_CLASSIFICATION	// Recursively adds our key listener to sub-components
WITHOUT_CLASSIFICATION	//{{{ nextTip() method
WITHOUT_CLASSIFICATION	//{{{ SelectLineRange constructor
WITHOUT_CLASSIFICATION	//{{{ createFieldPanel() method
WITHOUT_CLASSIFICATION	//{{{ CloseDialog constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ getCompletions() method
WITHOUT_CLASSIFICATION	//{{{ getCompletions() method
WITHOUT_CLASSIFICATION	// only set if all buffers saved/closed
WITHOUT_CLASSIFICATION	// so that we don't see the same tip again if the user // clicks 'Next Tip'
WITHOUT_CLASSIFICATION	//{{{ completeWord() method
WITHOUT_CLASSIFICATION	// do nothing //}}}
WITHOUT_CLASSIFICATION	//{{{ completeWord() method
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ CompleteWord constructor
WITHOUT_CLASSIFICATION	//}}} //{{{ show popup if > 1
WITHOUT_CLASSIFICATION	//{{{ if there is only one competion, insert in buffer
WITHOUT_CLASSIFICATION	// attempting to expand non-word char
WITHOUT_CLASSIFICATION	// figure out what constitutes a word character and what // doesn't
WITHOUT_CLASSIFICATION	//{{{ getNonAlphaNumericWordChars() method
WITHOUT_CLASSIFICATION	//{{{ getWordToComplete() method
WITHOUT_CLASSIFICATION	// build a list of unique words in all visible buffers
WITHOUT_CLASSIFICATION	// only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	// only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	//{{{ try to find matching keywords
WITHOUT_CLASSIFICATION	//{{{ loop through all lines of current buffer
WITHOUT_CLASSIFICATION	// check for match at start of line
WITHOUT_CLASSIFICATION	// check for match inside line
WITHOUT_CLASSIFICATION	// '+ 1' so that findWordEnd() doesn't pick up the space at the start
WITHOUT_CLASSIFICATION	//{{{ insertSelected() method
WITHOUT_CLASSIFICATION	//{{{ Completion class
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ setMessageAndClear() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ statusUpdate() method
WITHOUT_CLASSIFICATION	//{{{ progressUpdate() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	//{{{ updateCaption() method
WITHOUT_CLASSIFICATION	//{{{ ThreadProgress constructor
WITHOUT_CLASSIFICATION	//{{{ WorkThreadHandler class
WITHOUT_CLASSIFICATION	//{{{ StatusBar constructor
WITHOUT_CLASSIFICATION	//{{{ ThreadProgress class
WITHOUT_CLASSIFICATION	//System.err.println("value: " + thread.getProgressValue());
WITHOUT_CLASSIFICATION	//{{{ setMessageComponent() method
WITHOUT_CLASSIFICATION	//{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	//{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	//{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	//{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	//{{{ WorkThreadListener implementation
WITHOUT_CLASSIFICATION	// so if view is closed in the meantime...
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	// don't obscure existing message
WITHOUT_CLASSIFICATION	//{{{ updateCaretStatus() method
WITHOUT_CLASSIFICATION	//{{{ setMessage() method
WITHOUT_CLASSIFICATION	/* can happen when switching buffers sometimes */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	// hopefully another caret update will come?
WITHOUT_CLASSIFICATION	//{{{ ToolTipLabel class
WITHOUT_CLASSIFICATION	// see above
WITHOUT_CLASSIFICATION	//{{{ updateMiscStatus() method
WITHOUT_CLASSIFICATION	//{{{ updateBufferStatus() method
WITHOUT_CLASSIFICATION	//{{{ MemoryStatus class
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	/* package-private for speed */
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ MemoryStatus constructor
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//Font font = UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	//{{{ Clock class
WITHOUT_CLASSIFICATION	//MemoryStatus.this.getBorder().getBorderInsets(this);
WITHOUT_CLASSIFICATION	/* FontRenderContext frc = new FontRenderContext(				null,false,false);			Rectangle2D bounds = getFont()				.getStringBounds(getTime(),frc);			Dimension dim = new Dimension((int)bounds.getWidth(),				(int)bounds.getHeight());			setPreferredSize(dim);			setMaximumSize(dim); */
WITHOUT_CLASSIFICATION	//{{{ Clock constructor
WITHOUT_CLASSIFICATION	//{{{ getTime() method
WITHOUT_CLASSIFICATION	//{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ MemoryStatus constructor
WITHOUT_CLASSIFICATION	//{{{ setSelectAllOnFocus() method
WITHOUT_CLASSIFICATION	//Font font = UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//MemoryStatus.this.getBorder().getBorderInsets(this);
WITHOUT_CLASSIFICATION	//{{{ Clock constructor
WITHOUT_CLASSIFICATION	/* FontRenderContext frc = new FontRenderContext(				null,false,false);			Rectangle2D bounds = getFont()				.getStringBounds(getTime(),frc);			Dimension dim = new Dimension((int)bounds.getWidth(),				(int)bounds.getHeight());			setPreferredSize(dim);			setMaximumSize(dim); */
WITHOUT_CLASSIFICATION	//{{{ getTime() method
WITHOUT_CLASSIFICATION	//{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	//{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	//{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	//{{{ setInstantPopups() method
WITHOUT_CLASSIFICATION	//{{{ getInstantPopups() method
WITHOUT_CLASSIFICATION	//{{{ getSelectAllOnFocus() method
WITHOUT_CLASSIFICATION	//{{{ setEnterAddsToHistory() method
WITHOUT_CLASSIFICATION	//{{{ getEnterAddsToHistory() method
WITHOUT_CLASSIFICATION	//{{{ getModel() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ setModel() method
WITHOUT_CLASSIFICATION	//{{{ historyPrevious() method
WITHOUT_CLASSIFICATION	//{{{ addCurrentToHistory() method
WITHOUT_CLASSIFICATION	//{{{ processMouseEvent() method
WITHOUT_CLASSIFICATION	//{{{ setText() method
WITHOUT_CLASSIFICATION	//{{{ mouseMoved() method
WITHOUT_CLASSIFICATION	//{{{ fireActionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ doBackwardSearch() method
WITHOUT_CLASSIFICATION	// have to do this because setText() sets index to -1
WITHOUT_CLASSIFICATION	//{{{ doForwardSearch() method
WITHOUT_CLASSIFICATION	// down arrow
WITHOUT_CLASSIFICATION	// have to do this because setText() sets index to -1
WITHOUT_CLASSIFICATION	//{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	//{{{ historyNext() method
WITHOUT_CLASSIFICATION	//{{{ ColorWellButton constructor
WITHOUT_CLASSIFICATION	//{{{ HistoryBorder class
WITHOUT_CLASSIFICATION	// according to krisk this looks better on OS X...
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ Renderer class
WITHOUT_CLASSIFICATION	/* we don't handle key pressed A+ */
WITHOUT_CLASSIFICATION	//{{{ getSelectedColor() method
WITHOUT_CLASSIFICATION	//{{{ ColorPickerDialog class
WITHOUT_CLASSIFICATION	//{{{ setSelectedColor() method
WITHOUT_CLASSIFICATION	//}}} //{{{ KEY_TYPED...
WITHOUT_CLASSIFICATION	//{{{ ColorWell class
WITHOUT_CLASSIFICATION	//{{{ KEY_PRESSED...
WITHOUT_CLASSIFICATION	/* they're too troublesome */
WITHOUT_CLASSIFICATION	// get rid of keys we never need to handle
WITHOUT_CLASSIFICATION	// need to let \b through so that backspace will work // in HistoryTextFields
WITHOUT_CLASSIFICATION	/* case KeyEvent.VK_SEPARATOR: */
WITHOUT_CLASSIFICATION	//{{{ updateButtons() method
WITHOUT_CLASSIFICATION	// if the last key was a numeric keypad key // and NumLock is off, filter it out
WITHOUT_CLASSIFICATION	//{{{ PasteFromListDialog constructor
WITHOUT_CLASSIFICATION	//{{{ numericKeypadKey() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedClipText()
WITHOUT_CLASSIFICATION	//{{{ showClipText() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ reload() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ Renderer class
WITHOUT_CLASSIFICATION	//{{{ InputHandler constructor
WITHOUT_CLASSIFICATION	//{{{ selectAll() method
WITHOUT_CLASSIFICATION	//{{{ valueChanged() method
WITHOUT_CLASSIFICATION	//{{{ isPrefixActive() method
WITHOUT_CLASSIFICATION	// for ABI compatibility
WITHOUT_CLASSIFICATION	// is it a header?
WITHOUT_CLASSIFICATION	//{{{ FilesChangedDialog constructor
WITHOUT_CLASSIFICATION	//{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	// remove empty category branches
WITHOUT_CLASSIFICATION	//{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	// selected a header; skip to the next row
WITHOUT_CLASSIFICATION	//{{{ getLastAction() method
WITHOUT_CLASSIFICATION	//{{{ TreeHandler class
WITHOUT_CLASSIFICATION	//{{{ handleKey() method
WITHOUT_CLASSIFICATION	//{{{ removeKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ removeAllKeyBindings() method
WITHOUT_CLASSIFICATION	//{{{ getLastActionCount() method
WITHOUT_CLASSIFICATION	//{{{ getRepeatCount() method
WITHOUT_CLASSIFICATION	//{{{ setRepeatCount() method
WITHOUT_CLASSIFICATION	//{{{ readNextChar() method
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ invokeAction() method
WITHOUT_CLASSIFICATION	//{{{ invokeAction() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ setModel() method
WITHOUT_CLASSIFICATION	//{{{ setModel() method
WITHOUT_CLASSIFICATION	//{{{ selectAll() method
WITHOUT_CLASSIFICATION	//{{{ readNextChar() method
WITHOUT_CLASSIFICATION	/* value */
WITHOUT_CLASSIFICATION	//{{{ resetLastActionCount() method
WITHOUT_CLASSIFICATION	// If repeat was true originally, clear it // Otherwise it might have been set by the action, etc
WITHOUT_CLASSIFICATION	// remember the last executed action
WITHOUT_CLASSIFICATION	//{{{ invokeReadNextChar() method
WITHOUT_CLASSIFICATION	// remember old values, in case action changes them
WITHOUT_CLASSIFICATION	// first of all, if this action set a // readNextChar, do not clear the repeat
WITHOUT_CLASSIFICATION	// execute the action
WITHOUT_CLASSIFICATION	//{{{ getValues() method
WITHOUT_CLASSIFICATION	// stop people doing dumb stuff like C+ENTER 100 C+n
WITHOUT_CLASSIFICATION	// stop people doing dumb stuff like C+ENTER 100 C+n
WITHOUT_CLASSIFICATION	//{{{ invokeLastAction() method
WITHOUT_CLASSIFICATION	// this might be a bit slow if __char__ occurs a lot
WITHOUT_CLASSIFICATION	//{{{ userInput() method
WITHOUT_CLASSIFICATION	//{{{ JCheckBoxList constructor
WITHOUT_CLASSIFICATION	//{{{ JCheckBoxList constructor
WITHOUT_CLASSIFICATION	//{{{ getSelectedValue() method
WITHOUT_CLASSIFICATION	//{{{ getCheckedValues() method
WITHOUT_CLASSIFICATION	/* hasFocus */
WITHOUT_CLASSIFICATION	//{{{ getCellRenderer() method
WITHOUT_CLASSIFICATION	//{{{ DummyRenderer class
WITHOUT_CLASSIFICATION	//{{{ LabelRenderer class
WITHOUT_CLASSIFICATION	//{{{ AboutDialog constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ pushElement() method
WITHOUT_CLASSIFICATION	//{{{ peekElement() method
WITHOUT_CLASSIFICATION	//{{{ popElement() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ Constants
WITHOUT_CLASSIFICATION	//{{{ createDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ AboutPanel class
WITHOUT_CLASSIFICATION	//{{{ cacheDockableWindows() method
WITHOUT_CLASSIFICATION	//{{{ Static part of class
WITHOUT_CLASSIFICATION	//{{{ getCachedDockableNames() method
WITHOUT_CLASSIFICATION	//{{{ loadDockableWindows() method
WITHOUT_CLASSIFICATION	//{{{ registerDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ unloadDockableWindows() method
WITHOUT_CLASSIFICATION	//{{{ getRegisteredDockableWindows() method
WITHOUT_CLASSIFICATION	//{{{ getCachedDockableActionFlags() method
WITHOUT_CLASSIFICATION	//{{{ DockableListHandler class
WITHOUT_CLASSIFICATION	//{{{ OpenAction class
WITHOUT_CLASSIFICATION	//{{{ DockableListHandler constructor
WITHOUT_CLASSIFICATION	//{{{ Factory class
WITHOUT_CLASSIFICATION	//{{{ Factory constructor
WITHOUT_CLASSIFICATION	//{{{ OpenAction constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ isSelected() method
WITHOUT_CLASSIFICATION	//{{{ Static initializer
WITHOUT_CLASSIFICATION	//{{{ showDockableWindow() method
WITHOUT_CLASSIFICATION	// make default be true for the next // action
WITHOUT_CLASSIFICATION	//{{{ Instance part of class
WITHOUT_CLASSIFICATION	//{{{ ToggleAction class
WITHOUT_CLASSIFICATION	//{{{ removeDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ ToggleAction constructor
WITHOUT_CLASSIFICATION	//{{{ DockableWindowManager constructor
WITHOUT_CLASSIFICATION	//{{{ FloatAction class
WITHOUT_CLASSIFICATION	/* an error occurred */
WITHOUT_CLASSIFICATION	//{{{ FloatAction constructor
WITHOUT_CLASSIFICATION	//{{{ floatDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ closeCurrentArea() method
WITHOUT_CLASSIFICATION	// create a copy of this dockable window and float it
WITHOUT_CLASSIFICATION	//{{{ toggleDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ addDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ getDockableTitle() method
WITHOUT_CLASSIFICATION	//{{{ hideDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ getDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ isDockableWindowVisible() method
WITHOUT_CLASSIFICATION	//{{{ getDockable() method
WITHOUT_CLASSIFICATION	//System.err.println(comp.getClass());
WITHOUT_CLASSIFICATION	//{{{ isDockableWindowDocked() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ addEntry() method
WITHOUT_CLASSIFICATION	//{{{ getTopDockingArea() method
WITHOUT_CLASSIFICATION	// we don't care
WITHOUT_CLASSIFICATION	//{{{ close() method
WITHOUT_CLASSIFICATION	//{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getLeftDockingArea() method
WITHOUT_CLASSIFICATION	//{{{ getAllPluginEntries() method
WITHOUT_CLASSIFICATION	//{{{ setResizePos() method
WITHOUT_CLASSIFICATION	//{{{ getBottomDockingArea() method
WITHOUT_CLASSIFICATION	//{{{ getRightDockingArea() method
WITHOUT_CLASSIFICATION	//{{{ finishResizing() method
WITHOUT_CLASSIFICATION	//{{{ paintChildren() method
WITHOUT_CLASSIFICATION	//{{{ DockableLayout class
WITHOUT_CLASSIFICATION	// don't show menu items to dock into a plain view
WITHOUT_CLASSIFICATION	//{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	/* nothing to do */
WITHOUT_CLASSIFICATION	//{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	//{{{ Lay out dependent buttons
WITHOUT_CLASSIFICATION	//{{{ removeLayoutComponent() method
WITHOUT_CLASSIFICATION	//{{{ maximumLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	//{{{ Lay out docking areas
WITHOUT_CLASSIFICATION	//{{{ Lay out independent buttons
WITHOUT_CLASSIFICATION	// I'm lazy
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Lay out independent buttons
WITHOUT_CLASSIFICATION	//{{{ Lay out dependent buttons
WITHOUT_CLASSIFICATION	//{{{ Lay out docking areas
WITHOUT_CLASSIFICATION	//{{{ Position tool bars if they are managed by us
WITHOUT_CLASSIFICATION	//{{{ Position center (edit pane, or split pane)
WITHOUT_CLASSIFICATION	//{{{ adjustDockingAreasToFit() method
WITHOUT_CLASSIFICATION	//{{{ getLayoutAlignmentX() method
WITHOUT_CLASSIFICATION	//{{{ getLayoutAlignmentY() method
WITHOUT_CLASSIFICATION	//{{{ invalidateLayout() method
WITHOUT_CLASSIFICATION	// only set if open
WITHOUT_CLASSIFICATION	// only for docked
WITHOUT_CLASSIFICATION	//{{{ Entry constructor
WITHOUT_CLASSIFICATION	//{{{ Entry constructor
WITHOUT_CLASSIFICATION	// get the title here, not in the factory constructor, // since the factory might be created before a plugin's // props are loaded
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ isOK() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	// eg, trying to bind C+n C+p if C+n already bound
WITHOUT_CLASSIFICATION	//{{{ GrabKeyDialog constructor
WITHOUT_CLASSIFICATION	//{{{ GrabKeyDialog constructor
WITHOUT_CLASSIFICATION	//{{{ Instance variables // this is a bad hack
WITHOUT_CLASSIFICATION	// show "remove" button
WITHOUT_CLASSIFICATION	// create a panel with a BoxLayout. Can't use Box here // because Box doesn't have setBorder().
WITHOUT_CLASSIFICATION	//{{{ updateAssignedTo() method
WITHOUT_CLASSIFICATION	//{{{ getSymbolicName() method
WITHOUT_CLASSIFICATION	// create a temporary (synthetic) prefix // KeyBinding, that won't be saved
WITHOUT_CLASSIFICATION	//{{{ getKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ InputPane class
WITHOUT_CLASSIFICATION	// eg, trying to bind C+e if C+e is a prefix
WITHOUT_CLASSIFICATION	// ask whether to remove the old shortcut
WITHOUT_CLASSIFICATION	//{{{ KeyBinding class
WITHOUT_CLASSIFICATION	// we don't need two identical shortcuts
WITHOUT_CLASSIFICATION	//{{{ canClose() method
WITHOUT_CLASSIFICATION	// check whether the other shortcut is the alt. shortcut
WITHOUT_CLASSIFICATION	// check whether this shortcut already exists
WITHOUT_CLASSIFICATION	// check whether shortcut is a prefix to others
WITHOUT_CLASSIFICATION	// can't override prefix shortcuts
WITHOUT_CLASSIFICATION	// ask whether to override that other shortcut
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// Pass 1: compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	// Pass 2: redistribute free space
WITHOUT_CLASSIFICATION	// Pass 3: layout components
WITHOUT_CLASSIFICATION	// synchronized
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ addOptionGroup() method
WITHOUT_CLASSIFICATION	//{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ valueChanged() method
WITHOUT_CLASSIFICATION	// in case saved geometry is too small
WITHOUT_CLASSIFICATION	//{{{ OptionsDialog constructor
WITHOUT_CLASSIFICATION	//{{{ OptionsDialog constructor
WITHOUT_CLASSIFICATION	// Save settings to disk
WITHOUT_CLASSIFICATION	/* This will fire the PROPERTIES_CHANGED event */
WITHOUT_CLASSIFICATION	// register the Options dialog as a TreeSelectionListener. // this is done before the initial selection to ensure that the // first selected OptionPane is displayed on startup.
WITHOUT_CLASSIFICATION	// get rid of this dialog if necessary
WITHOUT_CLASSIFICATION	//{{{ updateSize() method
WITHOUT_CLASSIFICATION	//{{{ OptionTreeModel class
WITHOUT_CLASSIFICATION	//{{{ selectPane() method
WITHOUT_CLASSIFICATION	//{{{ selectPane() method
WITHOUT_CLASSIFICATION	//{{{ PaneNameRenderer class
WITHOUT_CLASSIFICATION	// this model may not be changed by the TableCellEditor
WITHOUT_CLASSIFICATION	//{{{ BufferOptions constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ Line separator
WITHOUT_CLASSIFICATION	// returns false if no such pane exists; calling with null // param selects first option pane found
WITHOUT_CLASSIFICATION	//setFont(new Font("Dialog",Font.BOLD,10));
WITHOUT_CLASSIFICATION	// wait for it to be painted to ensure progress is updated // continuously
WITHOUT_CLASSIFICATION	//{{{ Max line length
WITHOUT_CLASSIFICATION	//{{{ Encoding
WITHOUT_CLASSIFICATION	//{{{ GZipped setting
WITHOUT_CLASSIFICATION	//{{{ Tab size
WITHOUT_CLASSIFICATION	//{{{ Edit mode
WITHOUT_CLASSIFICATION	//{{{ FontSelector constructor
WITHOUT_CLASSIFICATION	//{{{ Fold mode
WITHOUT_CLASSIFICATION	//{{{ Indent size
WITHOUT_CLASSIFICATION	//{{{ Wrap mode
WITHOUT_CLASSIFICATION	//{{{ FontSelector constructor
WITHOUT_CLASSIFICATION	//{{{ Soft tabs
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog class
WITHOUT_CLASSIFICATION	//{{{ Buttons
WITHOUT_CLASSIFICATION	//{{{ isAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	//{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	//{{{ updateText() method
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ updatePreview() method
WITHOUT_CLASSIFICATION	// if the buffer count becomes 0, then it is guaranteed to // become 1 very soon, so don't do anything in that case.
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	/* fonts = getToolkit().getFontList(); */
WITHOUT_CLASSIFICATION	//{{{ getSelectedFont() method
WITHOUT_CLASSIFICATION	// for SPACE or S+SPACE we pass the // key typed since international // keyboards sometimes produce a // KEY_PRESSED SPACE but not a // KEY_TYPED SPACE, eg if you have to // do a "<space> to insert ".
WITHOUT_CLASSIFICATION	/* Log.log(Log.ERROR,this,"Using deprecated Toolkit.getFontList()"); */
WITHOUT_CLASSIFICATION	//{{{ getFontList() method
WITHOUT_CLASSIFICATION	//{{{ addTranslation() method
WITHOUT_CLASSIFICATION	//{{{ createTextFieldAndListPanel() method
WITHOUT_CLASSIFICATION	/* on MacOS, A+ can be user input */
WITHOUT_CLASSIFICATION	//{{{ translateKeyEvent() method
WITHOUT_CLASSIFICATION	/* on MacOS, A+ can be user input */
WITHOUT_CLASSIFICATION	//{{{ getSymbolicModifierName() method
WITHOUT_CLASSIFICATION	//{{{ parseKey() method
WITHOUT_CLASSIFICATION	//{{{ setModifierMapping() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	/* M+ discarded by key event workaround! */
WITHOUT_CLASSIFICATION	/* == C+ */
WITHOUT_CLASSIFICATION	/* == A+ */
WITHOUT_CLASSIFICATION	/* == M+ */
WITHOUT_CLASSIFICATION	//{{{ DockableWindowCompare class
WITHOUT_CLASSIFICATION	//{{{ register() method
WITHOUT_CLASSIFICATION	/* == S+ */
WITHOUT_CLASSIFICATION	// removing last component, so remove border
WITHOUT_CLASSIFICATION	//{{{ Key class
WITHOUT_CLASSIFICATION	//{{{ Create button
WITHOUT_CLASSIFICATION	//{{{ PanelWindowContainer constructor
WITHOUT_CLASSIFICATION	//{{{ setDimension() method
WITHOUT_CLASSIFICATION	//{{{ Button box setup
WITHOUT_CLASSIFICATION	//{{{ isVisible() method
WITHOUT_CLASSIFICATION	//{{{ unregister() method
WITHOUT_CLASSIFICATION	//{{{ showMostRecent() method
WITHOUT_CLASSIFICATION	//{{{ getCurrent() method
WITHOUT_CLASSIFICATION	//{{{ show() method
WITHOUT_CLASSIFICATION	//{{{ sortDockables() method
WITHOUT_CLASSIFICATION	//{{{ getDimension() method
WITHOUT_CLASSIFICATION	//{{{ MenuMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ getDockables() method
WITHOUT_CLASSIFICATION	//{{{ getWrappedDimension() method
WITHOUT_CLASSIFICATION	// remember the most recent dockable
WITHOUT_CLASSIFICATION	//{{{ DockBorder class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ paintBorder() method
WITHOUT_CLASSIFICATION	//{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	//{{{ isBorderOpaque() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	//{{{ getWrappedDimension() method
WITHOUT_CLASSIFICATION	//{{{ removeLayoutComponent() method //}}}
WITHOUT_CLASSIFICATION	//{{{ DockBorder constructor
WITHOUT_CLASSIFICATION	//{{{ RotatedTextIcon class
WITHOUT_CLASSIFICATION	//{{{ paintHorizBorder() method
WITHOUT_CLASSIFICATION	//{{{ getIconHeight() method
WITHOUT_CLASSIFICATION	//{{{ paintVertBorder() method
WITHOUT_CLASSIFICATION	//{{{ RotatedTextIcon constructor
WITHOUT_CLASSIFICATION	//{{{ updateColors() method
WITHOUT_CLASSIFICATION	//}}} //{{{ Counterclockwise rotation
WITHOUT_CLASSIFICATION	//height = (int)glyphs.getLogicalBounds().getHeight();
WITHOUT_CLASSIFICATION	//{{{ paintIcon() method
WITHOUT_CLASSIFICATION	//{{{ getIconWidth() method
WITHOUT_CLASSIFICATION	//{{{ DockablePanel constructor
WITHOUT_CLASSIFICATION	//{{{ No rotation
WITHOUT_CLASSIFICATION	//{{{ ButtonLayout class
WITHOUT_CLASSIFICATION	//}}} //{{{ Clockwise rotation
WITHOUT_CLASSIFICATION	// nothing 'cept close box
WITHOUT_CLASSIFICATION	//{{{ addLayoutComponent() method //}}}
WITHOUT_CLASSIFICATION	//{{{ setBounds() method
WITHOUT_CLASSIFICATION	//{{{ getWindowContainer() method
WITHOUT_CLASSIFICATION	//{{{ DockablePanel class
WITHOUT_CLASSIFICATION	//{{{ ResizeMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ showDockable() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ mouseMoved() method
WITHOUT_CLASSIFICATION	//{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	// collapsed
WITHOUT_CLASSIFICATION	//{{{ Top...
WITHOUT_CLASSIFICATION	//{{{ Top...
WITHOUT_CLASSIFICATION	//}}} //{{{ Left...
WITHOUT_CLASSIFICATION	//}}} //{{{ Left...
WITHOUT_CLASSIFICATION	//}}} //{{{ Bottom...
WITHOUT_CLASSIFICATION	//}}} //{{{ Bottom...
WITHOUT_CLASSIFICATION	//}}} //{{{ Right...
WITHOUT_CLASSIFICATION	//}}} //{{{ Right...
WITHOUT_CLASSIFICATION	// can't happen?
WITHOUT_CLASSIFICATION	//{{{ mouseExited() method
WITHOUT_CLASSIFICATION	//{{{ getCursor() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ getDockableWindowManager() method
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ register() method
WITHOUT_CLASSIFICATION	//{{{ unregister() method
WITHOUT_CLASSIFICATION	//{{{ show() method
WITHOUT_CLASSIFICATION	//{{{ isVisible() method
WITHOUT_CLASSIFICATION	//{{{ FloatingWindowContainer constructor
WITHOUT_CLASSIFICATION	//{{{ LogViewer constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ getAbbrev() method
WITHOUT_CLASSIFICATION	//{{{ getExpansion() method
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ removeKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ checkForExistingAbbrev() method
WITHOUT_CLASSIFICATION	//{{{ LogList class
WITHOUT_CLASSIFICATION	//{{{ setEnabled() method
WITHOUT_CLASSIFICATION	//{{{ RolloverButton constructor
WITHOUT_CLASSIFICATION	//{{{ RolloverButton constructor
WITHOUT_CLASSIFICATION	//{{{ updateUI() method
WITHOUT_CLASSIFICATION	//{{{ setBorderPainted() method
WITHOUT_CLASSIFICATION	//{{{ DefaultInputHandler constructor
WITHOUT_CLASSIFICATION	//{{{ isOpaque() method
WITHOUT_CLASSIFICATION	//{{{ revalidate() method
WITHOUT_CLASSIFICATION	//{{{ DefaultInputHandler constructor
WITHOUT_CLASSIFICATION	//{{{ paint() method
WITHOUT_CLASSIFICATION	//{{{ EditAbbrevDialog constructor
WITHOUT_CLASSIFICATION	//{{{ EditAbbrevDialog constructor
WITHOUT_CLASSIFICATION	// user asks to remove non-existent
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	/* to avoid data loss, only do this if the above			 * completed successfully */
WITHOUT_CLASSIFICATION	//{{{ removeAllKeyBindings() method
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	//{{{ clear() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getModel() method
WITHOUT_CLASSIFICATION	/* case KeyEvent.VK_SEPARATOR: */
WITHOUT_CLASSIFICATION	//{{{ isPrefixActive() method
WITHOUT_CLASSIFICATION	//{{{ handleKey() method
WITHOUT_CLASSIFICATION	//{{{ getKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ getSymbolicModifierName() method
WITHOUT_CLASSIFICATION	//{{{ _addKeyBinding() method
WITHOUT_CLASSIFICATION	// Don't beep if the user presses some // key we don't know about unless a // prefix is active. Otherwise it will // beep when caps lock is pressed, etc.
WITHOUT_CLASSIFICATION	//{{{ saveHistory() method
WITHOUT_CLASSIFICATION	// F10 should be passed on, but C+e F10 // shouldn't
WITHOUT_CLASSIFICATION	//{{{ getSize() method
WITHOUT_CLASSIFICATION	//{{{ parseKeyStroke() method
WITHOUT_CLASSIFICATION	//{{{ HistoryModel constructor
WITHOUT_CLASSIFICATION	// Stores prefix name in bindings hashtable
WITHOUT_CLASSIFICATION	//{{{ setCurrentBindings() method
WITHOUT_CLASSIFICATION	//{{{ loadHistory() method
WITHOUT_CLASSIFICATION	//{{{ addItem() method
WITHOUT_CLASSIFICATION	//{{{ ToolBarManager constructor
WITHOUT_CLASSIFICATION	//{{{ getItem() method
WITHOUT_CLASSIFICATION	//{{{ getElementAt() method
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,HistoryModel.class,fnf);
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ HelpSearchPanel constructor
WITHOUT_CLASSIFICATION	// See if we should place this toolbar before any others
WITHOUT_CLASSIFICATION	// select the appropriate tree node.
WITHOUT_CLASSIFICATION	// Place the toolbar at the bottom of the group
WITHOUT_CLASSIFICATION	//{{{ ResultIcon class
WITHOUT_CLASSIFICATION	// EnhancedDialog implementation
WITHOUT_CLASSIFICATION	// we later use this to compute a relative ranking
WITHOUT_CLASSIFICATION	// end EnhancedDialog implementation
WITHOUT_CLASSIFICATION	// what to do?
WITHOUT_CLASSIFICATION	//{{{ ResultRenderer class
WITHOUT_CLASSIFICATION	// multiple files w/ word bonus
WITHOUT_CLASSIFICATION	//{{{ Result class
WITHOUT_CLASSIFICATION	//{{{ ResultCompare class
WITHOUT_CLASSIFICATION	// turn the rankings into relative rankings, from 1 to 4
WITHOUT_CLASSIFICATION	//{{{ gotoURL() method
WITHOUT_CLASSIFICATION	//{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	//{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	//{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	//{{{ getBaseURL() method
WITHOUT_CLASSIFICATION	/* don't show loading msg because we won't				   receive a propertyChanged */
WITHOUT_CLASSIFICATION	//{{{ queueTOCReload() method
WITHOUT_CLASSIFICATION	//{{{ getShortURL() method
WITHOUT_CLASSIFICATION	//{{{ Instance members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getFile() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	// reset default cursor so that the hand cursor doesn't // stick around
WITHOUT_CLASSIFICATION	// the TOC pane looks up user's guide URLs relative to the // doc directory...
WITHOUT_CLASSIFICATION	//{{{ HelpIndex constructor
WITHOUT_CLASSIFICATION	//{{{ indexJAR() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() class
WITHOUT_CLASSIFICATION	/* //{{{ HelpIndex constructor	public HelpIndex(String fileListPath, String wordIndexPath)	{		this();	} //}}} */
WITHOUT_CLASSIFICATION	//{{{ LinkHandler class
WITHOUT_CLASSIFICATION	//{{{ HelpFile class
WITHOUT_CLASSIFICATION	//{{{ hyperlinkUpdate() method
WITHOUT_CLASSIFICATION	//{{{ indexEditorHelp() method
WITHOUT_CLASSIFICATION	//{{{ PropertyChangeHandler class
WITHOUT_CLASSIFICATION	/*  || lname.endsWith(".txt") */
WITHOUT_CLASSIFICATION	//{{{ ignoreWord() method
WITHOUT_CLASSIFICATION	//{{{ indexDirectory() method
WITHOUT_CLASSIFICATION	// how much an occurrence in the title is worth
WITHOUT_CLASSIFICATION	//{{{ indexStream() method
WITHOUT_CLASSIFICATION	//{{{ indexURL() method
WITHOUT_CLASSIFICATION	//{{{ lookupWord() method
WITHOUT_CLASSIFICATION	//{{{ addWord() method
WITHOUT_CLASSIFICATION	// the word
WITHOUT_CLASSIFICATION	//{{{ Word class
WITHOUT_CLASSIFICATION	//{{{ HelpTOCPanel constructor
WITHOUT_CLASSIFICATION	// files it occurs in
WITHOUT_CLASSIFICATION	//{{{ createTOC() method
WITHOUT_CLASSIFICATION	//{{{ HelpNode class
WITHOUT_CLASSIFICATION	//{{{ selectNode() method
WITHOUT_CLASSIFICATION	// so that HelpViewer constructor doesn't try to expand
WITHOUT_CLASSIFICATION	//{{{ createNode() method
WITHOUT_CLASSIFICATION	//{{{ loadTOC() method
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ processMouseEvent() method
WITHOUT_CLASSIFICATION	//{{{ TOCHandler constructor
WITHOUT_CLASSIFICATION	//{{{ Private members // used to mark words to ignore (see constructor for the list)
WITHOUT_CLASSIFICATION	//{{{ TOCHandler class
WITHOUT_CLASSIFICATION	//{{{ HelpNode constructor
WITHOUT_CLASSIFICATION	//ToolTipManager ttm = ToolTipManager.sharedInstance();
WITHOUT_CLASSIFICATION	//{{{ TOCTree constructor
WITHOUT_CLASSIFICATION	//{{{ TOCTree class
WITHOUT_CLASSIFICATION	/* case MouseEvent.MOUSE_ENTERED:				toolTipInitialDelay = ttm.getInitialDelay();				toolTipReshowDelay = ttm.getReshowDelay();				ttm.setInitialDelay(200);				ttm.setReshowDelay(0);				super.processMouseEvent(evt);				break;			case MouseEvent.MOUSE_EXITED:				ttm.setInitialDelay(toolTipInitialDelay);				ttm.setReshowDelay(toolTipReshowDelay);				super.processMouseEvent(evt);				break; */
WITHOUT_CLASSIFICATION	//{{{ cellRectIsVisible() method
WITHOUT_CLASSIFICATION	//{{{ TOCCellRenderer class
WITHOUT_CLASSIFICATION	//{{{ PluginCompare class
WITHOUT_CLASSIFICATION	//{{{ VFS methods
WITHOUT_CLASSIFICATION	//{{{ getFileVFS() method
WITHOUT_CLASSIFICATION	//{{{ getUrlVFS() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	//{{{ runInWorkThread() method
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	// in new api, protocol always equals name
WITHOUT_CLASSIFICATION	//{{{ getVFSByName() method
WITHOUT_CLASSIFICATION	//{{{ getFilesystems() method
WITHOUT_CLASSIFICATION	//{{{ waitForRequests() method
WITHOUT_CLASSIFICATION	//{{{ getVFSForProtocol() method
WITHOUT_CLASSIFICATION	//{{{ getVFSs() method
WITHOUT_CLASSIFICATION	//{{{ getVFSForPath() method
WITHOUT_CLASSIFICATION	// we were the first to add an update; // add update sending runnable to AWT // thread
WITHOUT_CLASSIFICATION	//{{{ registerVFS() method
WITHOUT_CLASSIFICATION	//{{{ errorOccurred() method
WITHOUT_CLASSIFICATION	//{{{ I/O request methods
WITHOUT_CLASSIFICATION	//{{{ sendVFSUpdate() method
WITHOUT_CLASSIFICATION	//{{{ getIOThreadPool() method
WITHOUT_CLASSIFICATION	// the vfs browser has what you might call // a design flaw, it doesn't update properly // unless the vfs update for a parent arrives // before any updates for the children. sorting // the list alphanumerically guarantees this.
WITHOUT_CLASSIFICATION	//{{{ getRequestCount() method
WITHOUT_CLASSIFICATION	// don't send two updates // for the same path
WITHOUT_CLASSIFICATION	// if we are already in the AWT thread, take a shortcut
WITHOUT_CLASSIFICATION	//{{{ SendVFSUpdatesSafely class
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	//{{{ UrlVFS constructor
WITHOUT_CLASSIFICATION	//{{{ _canonPath() method
WITHOUT_CLASSIFICATION	//{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	// Check for backup.directory, and create that // directory if it doesn't exist
WITHOUT_CLASSIFICATION	//{{{ FileVFS method
WITHOUT_CLASSIFICATION	//{{{ LocalDirectoryEntry class
WITHOUT_CLASSIFICATION	//{{{ getFileSeparator() method
WITHOUT_CLASSIFICATION	//{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	//{{{ Check if file is valid
WITHOUT_CLASSIFICATION	//{{{ _rename() method
WITHOUT_CLASSIFICATION	// use system default short format
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _delete() method
WITHOUT_CLASSIFICATION	//{{{ _backup() method
WITHOUT_CLASSIFICATION	// do some platforms throw exceptions if the file does not exist // when we ask for the canonical path?
WITHOUT_CLASSIFICATION	// this is needed because on OS X renaming to a non-existent // directory causes problems
WITHOUT_CLASSIFICATION	// Fetch properties
WITHOUT_CLASSIFICATION	//{{{ _mkdir() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	//{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	//{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	//{{{ _delete() method
WITHOUT_CLASSIFICATION	//{{{ setPermissions() method
WITHOUT_CLASSIFICATION	//{{{ _saveComplete() method
WITHOUT_CLASSIFICATION	//{{{ addToFavorites() method
WITHOUT_CLASSIFICATION	//{{{ Permission preservation code
WITHOUT_CLASSIFICATION	//{{{ getPermissions() method
WITHOUT_CLASSIFICATION	//{{{ FavoritesVFS constructor
WITHOUT_CLASSIFICATION	//{{{ saveFavorites() method
WITHOUT_CLASSIFICATION	//{{{ loadFavorites() method
WITHOUT_CLASSIFICATION	// don't want it to show "0 bytes" for size, // etc.
WITHOUT_CLASSIFICATION	//{{{ listRoots() method
WITHOUT_CLASSIFICATION	//{{{ getFavorites() method
WITHOUT_CLASSIFICATION	//{{{ FileRootsVFS constructor
WITHOUT_CLASSIFICATION	//{{{ FavoritesEntry class
WITHOUT_CLASSIFICATION	// JDK 1.4 adds methods to obtain a drive letter label and // list the desktop on Windows
WITHOUT_CLASSIFICATION	// Make sure people don't do stupid things like putting files in /Volumes
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	//{{{ getFileName() method
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ reloadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ getFileSeparator() method
WITHOUT_CLASSIFICATION	//{{{ _canonPath() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	// don't want it to show "0 bytes" for size, // etc.
WITHOUT_CLASSIFICATION	//{{{ showBrowseDialog() method
WITHOUT_CLASSIFICATION	//{{{ RootsEntry class
WITHOUT_CLASSIFICATION	// so an empty cd drive is not reported as a file
WITHOUT_CLASSIFICATION	// REMIND: calling isDirectory() on a floppy drive // displays stupid I/O error dialog box on Windows
WITHOUT_CLASSIFICATION	// reasonable defaults (?)
WITHOUT_CLASSIFICATION	// to prevent windows looking for a disk in the floppy drive
WITHOUT_CLASSIFICATION	//{{{ Capabilities
WITHOUT_CLASSIFICATION	// this ensures that getFileParent("protocol:"), for // example, is "protocol:" and not "".
WITHOUT_CLASSIFICATION	//{{{ Extended attributes
WITHOUT_CLASSIFICATION	//{{{ getCapabilities() method
WITHOUT_CLASSIFICATION	//{{{ VFS constructor
WITHOUT_CLASSIFICATION	//{{{ VFS constructor
WITHOUT_CLASSIFICATION	//{{{ VFS constructor
WITHOUT_CLASSIFICATION	// don't want getFileName("roots:") to return ""
WITHOUT_CLASSIFICATION	//{{{ getExtendedAttributes() method
WITHOUT_CLASSIFICATION	// this makes HyperSearch much faster
WITHOUT_CLASSIFICATION	//{{{ getTwoStageSaveName() method
WITHOUT_CLASSIFICATION	// ignore last character of path to properly handle // paths like /foo/bar/
WITHOUT_CLASSIFICATION	/* When doing a 'save as', the path to save to (path)		 * will not be the same as the buffer's previous path		 * (buffer.getPath()). In that case, we want to create		 * a backup of the new path, even if the old path was		 * backed up as well (BACKED_UP property set) */
WITHOUT_CLASSIFICATION	//{{{ createVFSSession() method
WITHOUT_CLASSIFICATION	// A method name that starts with _ requires a session object
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ getExtendedAttribute() method
WITHOUT_CLASSIFICATION	//{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	//{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _delete() method
WITHOUT_CLASSIFICATION	//{{{ _rename() method
WITHOUT_CLASSIFICATION	//{{{ _mkdir() method
WITHOUT_CLASSIFICATION	//{{{ _backup() method
WITHOUT_CLASSIFICATION	//{{{ _saveComplete() method
WITHOUT_CLASSIFICATION	//{{{ _endVFSSession() method
WITHOUT_CLASSIFICATION	//{{{ DirectoryEntry class
WITHOUT_CLASSIFICATION	//{{{ File types
WITHOUT_CLASSIFICATION	//{{{ getDefaultColorFor() method
WITHOUT_CLASSIFICATION	//{{{ DirectoryEntry constructor
WITHOUT_CLASSIFICATION	//{{{ DirectoryEntry constructor
WITHOUT_CLASSIFICATION	//{{{ ColorEntry class
WITHOUT_CLASSIFICATION	// maintain backwards compatibility
WITHOUT_CLASSIFICATION	//{{{ DirectoryEntryCompare class
WITHOUT_CLASSIFICATION	//{{{ getColor() method
WITHOUT_CLASSIFICATION	// skip autosave files
WITHOUT_CLASSIFICATION	//{{{ DirectoryProvider constructor
WITHOUT_CLASSIFICATION	// resolve symlinks to avoid loops
WITHOUT_CLASSIFICATION	//{{{ loadColors() method
WITHOUT_CLASSIFICATION	//{{{ ActionListeners
WITHOUT_CLASSIFICATION	// skip backup files
WITHOUT_CLASSIFICATION	// for filtering out backups
WITHOUT_CLASSIFICATION	// skip marker files
WITHOUT_CLASSIFICATION	//current.addSeparator();
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ old API
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ paint() method
WITHOUT_CLASSIFICATION	//{{{ paint() method
WITHOUT_CLASSIFICATION	//{{{ ActionListeners
WITHOUT_CLASSIFICATION	//current.addSeparator();
WITHOUT_CLASSIFICATION	// We build a set of lists, each list contains plugin menu // items that begin with a given letter.
WITHOUT_CLASSIFICATION	//{{{ addToLetterMap() method
WITHOUT_CLASSIFICATION	// Sort each letter
WITHOUT_CLASSIFICATION	// if less than 20 items, put them directly in the menu
WITHOUT_CLASSIFICATION	//{{{ MarkersMenuItem class
WITHOUT_CLASSIFICATION	// Collect blocks of up to maxItems of consecutive letters
WITHOUT_CLASSIFICATION	//{{{ MarkersMenuItem constructor
WITHOUT_CLASSIFICATION	//{{{ EnhancedMenuItem constructor
WITHOUT_CLASSIFICATION	//{{{ EnhancedCheckBoxMenuItem constructor
WITHOUT_CLASSIFICATION	//{{{ Model class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ menuSelected() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ finalize() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ paint() method
WITHOUT_CLASSIFICATION	//{{{ ViewUpdate constructor
WITHOUT_CLASSIFICATION	//{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	//{{{ createMacrosMenu() method
WITHOUT_CLASSIFICATION	//{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	//{{{ ActionListener...
WITHOUT_CLASSIFICATION	//{{{ ActionListener...
WITHOUT_CLASSIFICATION	//{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	//{{{ MouseListener...
WITHOUT_CLASSIFICATION	//{{{ MouseListener...
WITHOUT_CLASSIFICATION	//{{{ EditBusStub class
WITHOUT_CLASSIFICATION	//{{{ getWhat() method
WITHOUT_CLASSIFICATION	/* EnhancedMenu has a reference to EditBusStub, but not the other	 * way around. So when the EnhancedMenu is being garbage collected	 * its finalize() method removes the EditBusStub from the edit bus. */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ setSelectedRow() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getDockable() method
WITHOUT_CLASSIFICATION	//{{{ getWhat() method
WITHOUT_CLASSIFICATION	//{{{ getWhat() method
WITHOUT_CLASSIFICATION	//{{{ getWhat() method
WITHOUT_CLASSIFICATION	//{{{ getMenuName() method
WITHOUT_CLASSIFICATION	//{{{ Message types
WITHOUT_CLASSIFICATION	//{{{ Message types
WITHOUT_CLASSIFICATION	//{{{ Message types
WITHOUT_CLASSIFICATION	//{{{ DockableWindowUpdate constructor
WITHOUT_CLASSIFICATION	//{{{ BufferUpdate constructor
WITHOUT_CLASSIFICATION	//{{{ PluginUpdate constructor
WITHOUT_CLASSIFICATION	//{{{ isExiting() method
WITHOUT_CLASSIFICATION	//{{{ BrowserColorsOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ DynamicMenuChanged constructor
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ SelectionHandler class
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ BrowserColorsModel class
WITHOUT_CLASSIFICATION	//{{{ BrowserColorsModel constructor
WITHOUT_CLASSIFICATION	//{{{ BrowserColorsModel constructor
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ moveUp() method
WITHOUT_CLASSIFICATION	//{{{ moveUp() method
WITHOUT_CLASSIFICATION	//{{{ moveDown() method
WITHOUT_CLASSIFICATION	//{{{ moveDown() method
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer class
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	// protected members
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer class
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	/* Text color */
WITHOUT_CLASSIFICATION	//{{{ TextAreaOptionPane constructor
WITHOUT_CLASSIFICATION	/* Multiple selection color */
WITHOUT_CLASSIFICATION	/* Font */
WITHOUT_CLASSIFICATION	/* Fractional font metrics */
WITHOUT_CLASSIFICATION	/* Background color */
WITHOUT_CLASSIFICATION	/* Line highlight */
WITHOUT_CLASSIFICATION	/* Caret color, caret blink, block caret */
WITHOUT_CLASSIFICATION	/* Wrap guide */
WITHOUT_CLASSIFICATION	/* Selection color */
WITHOUT_CLASSIFICATION	// Skip certain actions this way
WITHOUT_CLASSIFICATION	/* Structure highlight */
WITHOUT_CLASSIFICATION	/* Electric borders */
WITHOUT_CLASSIFICATION	/* EOL markers */
WITHOUT_CLASSIFICATION	//{{{ EditingOptionPane constructor
WITHOUT_CLASSIFICATION	/* Anti-aliasing */
WITHOUT_CLASSIFICATION	// redraw the whole table because a second shortcut // might have changed, too
WITHOUT_CLASSIFICATION	//{{{ selectMode() method
WITHOUT_CLASSIFICATION	//{{{ saveMode() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ updateButtons() method
WITHOUT_CLASSIFICATION	//{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	//{{{ ModeProperties class
WITHOUT_CLASSIFICATION	// don't do anything if the user didn't change // any settings
WITHOUT_CLASSIFICATION	//{{{ ModeProperties constructor
WITHOUT_CLASSIFICATION	//{{{ ModeProperties constructor
WITHOUT_CLASSIFICATION	//{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	// need to call Mode.init() if the file name or first line // globs change
WITHOUT_CLASSIFICATION	// Old API
WITHOUT_CLASSIFICATION	//{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	//{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	// initialize the Plugins branch of the options tree
WITHOUT_CLASSIFICATION	//{{{ createOptionTreeModel() method
WITHOUT_CLASSIFICATION	//{{{ Ceate icons list
WITHOUT_CLASSIFICATION	// Query plugins for option panes
WITHOUT_CLASSIFICATION	//{{{ NoPluginsPane class
WITHOUT_CLASSIFICATION	// only add the Plugins branch if there are OptionPanes
WITHOUT_CLASSIFICATION	/* Show toolbar */
WITHOUT_CLASSIFICATION	//{{{ getDefaultGroup() method
WITHOUT_CLASSIFICATION	//{{{ ToolBarOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ Create buttons
WITHOUT_CLASSIFICATION	//}}} ///}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// protected members
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ ToolBarEditDialog constructor
WITHOUT_CLASSIFICATION	//{{{ ButtonCompare class
WITHOUT_CLASSIFICATION	//{{{ IconListEntry class
WITHOUT_CLASSIFICATION	//{{{ Button class
WITHOUT_CLASSIFICATION	//{{{ ToolBarEditDialog constructor
WITHOUT_CLASSIFICATION	//{{{ ButtonCellRenderer class
WITHOUT_CLASSIFICATION	//{{{ IconCellRenderer class
WITHOUT_CLASSIFICATION	// Icon selection
WITHOUT_CLASSIFICATION	//{{{ ToolBarEditDialog class
WITHOUT_CLASSIFICATION	//{{{ updateList() method
WITHOUT_CLASSIFICATION	// Icon selection
WITHOUT_CLASSIFICATION	//{{{ updateList() method
WITHOUT_CLASSIFICATION	//{{{ getSelection() method
WITHOUT_CLASSIFICATION	//{{{ getSelection() method
WITHOUT_CLASSIFICATION	//{{{ StyleOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	// start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	// start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ createStyleTableScroller() method
WITHOUT_CLASSIFICATION	//{{{ StyleTableModel class
WITHOUT_CLASSIFICATION	//{{{ createStyleTableModel() method
WITHOUT_CLASSIFICATION	// for sorting
WITHOUT_CLASSIFICATION	//{{{ StyleTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ StyleTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ addStyleChoice() method
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer class
WITHOUT_CLASSIFICATION	//{{{ StyleChoice class
WITHOUT_CLASSIFICATION	//{{{ StyleEditor class
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ StyleEditor constructor
WITHOUT_CLASSIFICATION	//{{{ getStyle() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	/* Text color */
WITHOUT_CLASSIFICATION	/* Background color */
WITHOUT_CLASSIFICATION	/* Structure highlight */
WITHOUT_CLASSIFICATION	//{{{ addStyleChoice() method
WITHOUT_CLASSIFICATION	//{{{ StyleChoice class
WITHOUT_CLASSIFICATION	// for sorting
WITHOUT_CLASSIFICATION	// for sorting
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer class
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ StyleEditor constructor
WITHOUT_CLASSIFICATION	//{{{ getStyle() method
WITHOUT_CLASSIFICATION	/* Text font */
WITHOUT_CLASSIFICATION	//{{{ GutterOptionPane constructor
WITHOUT_CLASSIFICATION	/* Line numbering */
WITHOUT_CLASSIFICATION	/* Number alignment */
WITHOUT_CLASSIFICATION	/* Border width */
WITHOUT_CLASSIFICATION	/* Marker highlight */
WITHOUT_CLASSIFICATION	/* gutterBorderWidth = new JTextField(jEdit.getProperty(			"view.gutter.borderWidth"));		addComponent(jEdit.getProperty("options.gutter.borderWidth"),			gutterBorderWidth); */
WITHOUT_CLASSIFICATION	/* Current line highlight */
WITHOUT_CLASSIFICATION	/* unfocused border color */
WITHOUT_CLASSIFICATION	/* Highlight interval and color */
WITHOUT_CLASSIFICATION	/* Fold marker color */
WITHOUT_CLASSIFICATION	/* Focused border color */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	/* Background color */
WITHOUT_CLASSIFICATION	/* Status bar visible */
WITHOUT_CLASSIFICATION	//{{{ StatusBarOptionPane constructor
WITHOUT_CLASSIFICATION	/* Edit mode */
WITHOUT_CLASSIFICATION	/* Wrap */
WITHOUT_CLASSIFICATION	/* Foreground color */
WITHOUT_CLASSIFICATION	/* Fold mode */
WITHOUT_CLASSIFICATION	/* Caret status */
WITHOUT_CLASSIFICATION	/* Memory status */
WITHOUT_CLASSIFICATION	/* Multi select */
WITHOUT_CLASSIFICATION	/* Encoding */
WITHOUT_CLASSIFICATION	/* Overwrite */
WITHOUT_CLASSIFICATION	/* Memory background color */
WITHOUT_CLASSIFICATION	/* Rect select */
WITHOUT_CLASSIFICATION	/* Line seperator */
WITHOUT_CLASSIFICATION	//{{{ MouseOptionPane constructor
WITHOUT_CLASSIFICATION	/* Memory foreground color */
WITHOUT_CLASSIFICATION	/* Clock */
WITHOUT_CLASSIFICATION	/* Non word character selection behavior */
WITHOUT_CLASSIFICATION	/* Text drag and drop */
WITHOUT_CLASSIFICATION	/* Middle mouse button click pastes % register */
WITHOUT_CLASSIFICATION	/* Gutter mouse actions */
WITHOUT_CLASSIFICATION	//{{{ FirewallOptionPane constructor
WITHOUT_CLASSIFICATION	// checkbox
WITHOUT_CLASSIFICATION	// checkbox
WITHOUT_CLASSIFICATION	// proxy host
WITHOUT_CLASSIFICATION	// proxy host
WITHOUT_CLASSIFICATION	// proxy port
WITHOUT_CLASSIFICATION	// proxy port
WITHOUT_CLASSIFICATION	// proxy username
WITHOUT_CLASSIFICATION	// proxy password
WITHOUT_CLASSIFICATION	// no proxy for
WITHOUT_CLASSIFICATION	//{{{ DockingOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ WindowTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ createWindowTableScroller() method
WITHOUT_CLASSIFICATION	//{{{ WindowTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ createWindowModel() method
WITHOUT_CLASSIFICATION	//{{{ DockPositionCellRenderer class
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ WindowTableModel class
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ WindowCompare class
WITHOUT_CLASSIFICATION	//{{{ WindowCompare class
WITHOUT_CLASSIFICATION	//{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ createOptionTreeModel() method
WITHOUT_CLASSIFICATION	//{{{ getDefaultGroup() method
WITHOUT_CLASSIFICATION	//{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	//{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	//{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	//{{{ AutosaveBackupOptionPane constructor
WITHOUT_CLASSIFICATION	// initialize the jEdit branch of the options tree
WITHOUT_CLASSIFICATION	/* Backup on every save */
WITHOUT_CLASSIFICATION	/* Autosave interval */
WITHOUT_CLASSIFICATION	/* Install location */
WITHOUT_CLASSIFICATION	/* Backup count */
WITHOUT_CLASSIFICATION	/* Download mirror */
WITHOUT_CLASSIFICATION	/* Backup directory */
WITHOUT_CLASSIFICATION	//{{{ DownloadMirrorsThread class
WITHOUT_CLASSIFICATION	/* Backup filename prefix */
WITHOUT_CLASSIFICATION	/* Update mirror list */
WITHOUT_CLASSIFICATION	/* Backup suffix */
WITHOUT_CLASSIFICATION	// Insert code to update the plugin managers list here later
WITHOUT_CLASSIFICATION	/* Download source */
WITHOUT_CLASSIFICATION	/* Delete downloaded files */
WITHOUT_CLASSIFICATION	//{{{ MirrorModel class
WITHOUT_CLASSIFICATION	//{{{ AbbrevsOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ SingleSelectionModel class
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ TableMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ Renderer class
WITHOUT_CLASSIFICATION	//{{{ SelectionHandler class
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ edit() method
WITHOUT_CLASSIFICATION	//{{{ toHashtable() method
WITHOUT_CLASSIFICATION	//{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ toHashtable() method
WITHOUT_CLASSIFICATION	//{{{ AbbrevsModel class
WITHOUT_CLASSIFICATION	//{{{ AbbrevsModel constructor
WITHOUT_CLASSIFICATION	//{{{ AbbrevsModel constructor
WITHOUT_CLASSIFICATION	//{{{ AbbrevCompare class
WITHOUT_CLASSIFICATION	//{{{ Abbrev class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ AbbrevCompare class
WITHOUT_CLASSIFICATION	/* Ignore case when sorting */
WITHOUT_CLASSIFICATION	//{{{ BrowserOptionPane constructor
WITHOUT_CLASSIFICATION	/* Show menu bar */
WITHOUT_CLASSIFICATION	/* Default directory */
WITHOUT_CLASSIFICATION	/* split VFSFileDialog horizontally */
WITHOUT_CLASSIFICATION	/* Show tool bar */
WITHOUT_CLASSIFICATION	/* Show icons */
WITHOUT_CLASSIFICATION	/* Mix files and directories */
WITHOUT_CLASSIFICATION	/* Show hidden files */
WITHOUT_CLASSIFICATION	/* Beep on search auto wrap */
WITHOUT_CLASSIFICATION	//{{{ ViewOptionPane constructor
WITHOUT_CLASSIFICATION	/* Double-click close */
WITHOUT_CLASSIFICATION	/* Show full path */
WITHOUT_CLASSIFICATION	//{{{ AppearanceOptionPane constructor
WITHOUT_CLASSIFICATION	/* View dock layout */
WITHOUT_CLASSIFICATION	/* Show search bar */
WITHOUT_CLASSIFICATION	/* Primary Metal L&F font */
WITHOUT_CLASSIFICATION	/* Show buffer switcher */
WITHOUT_CLASSIFICATION	/* Menu spillover count */
WITHOUT_CLASSIFICATION	/* Look and feel */
WITHOUT_CLASSIFICATION	/* History count */
WITHOUT_CLASSIFICATION	/* Secondary Metal L&F font */
WITHOUT_CLASSIFICATION	/* Use jEdit colors in all text components */
WITHOUT_CLASSIFICATION	/* Show tip of the day */
WITHOUT_CLASSIFICATION	/* Show splash screen */
WITHOUT_CLASSIFICATION	/* Decorate frames with look and feel (JDK 1.4 only) */
WITHOUT_CLASSIFICATION	/* Decorate dialogs with look and feel (JDK 1.4 only) */
WITHOUT_CLASSIFICATION	//{{{ PrintOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ getEntry() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	/* Font */
WITHOUT_CLASSIFICATION	/* Line numbering */
WITHOUT_CLASSIFICATION	/* Tab size */
WITHOUT_CLASSIFICATION	/* Header */
WITHOUT_CLASSIFICATION	/* Persistent markers */
WITHOUT_CLASSIFICATION	/* Footer */
WITHOUT_CLASSIFICATION	//{{{ GeneralOptionPane constructor
WITHOUT_CLASSIFICATION	/* Color */
WITHOUT_CLASSIFICATION	/* Auto detect encoding */
WITHOUT_CLASSIFICATION	/* Line separator */
WITHOUT_CLASSIFICATION	/* Sort recent file list */
WITHOUT_CLASSIFICATION	/* Force 1.3 print dialog */
WITHOUT_CLASSIFICATION	/* Default file encoding */
WITHOUT_CLASSIFICATION	/* Check mod status on focus */
WITHOUT_CLASSIFICATION	/* Create the plugin table */
WITHOUT_CLASSIFICATION	/* Recent file list size */
WITHOUT_CLASSIFICATION	/* Save caret positions */
WITHOUT_CLASSIFICATION	/* Sort buffers by names */
WITHOUT_CLASSIFICATION	/* Session management */
WITHOUT_CLASSIFICATION	/* Confirm save all */
WITHOUT_CLASSIFICATION	/* Sort buffers */
WITHOUT_CLASSIFICATION	/* Two-stage save */
WITHOUT_CLASSIFICATION	//{{{ ManagePanel constructor
WITHOUT_CLASSIFICATION	/* Strip trailing EOL */
WITHOUT_CLASSIFICATION	/* Create button panel */
WITHOUT_CLASSIFICATION	//{{{ showListConfirm() method
WITHOUT_CLASSIFICATION	//{{{ PluginTableModel class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ unloadPluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ Mirror class
WITHOUT_CLASSIFICATION	//{{{ setSortType() method
WITHOUT_CLASSIFICATION	//{{{ unloadPluginJARWithDialog() method
WITHOUT_CLASSIFICATION	//{{{ loadExtraJARsIfNecessary() method
WITHOUT_CLASSIFICATION	//{{{ HelpButton class
WITHOUT_CLASSIFICATION	//{{{ transitiveClosure() method
WITHOUT_CLASSIFICATION	//{{{ TextRenderer class
WITHOUT_CLASSIFICATION	//{{{ EntryCompare class
WITHOUT_CLASSIFICATION	//{{{ HideLibrariesButton class
WITHOUT_CLASSIFICATION	//{{{ MirrorCompare class
WITHOUT_CLASSIFICATION	//{{{ RemoveButton class
WITHOUT_CLASSIFICATION	//{{{ MirrorList constructor
WITHOUT_CLASSIFICATION	//{{{ finished() method
WITHOUT_CLASSIFICATION	//{{{ PluginList constructor
WITHOUT_CLASSIFICATION	//{{{ addPlugin() method
WITHOUT_CLASSIFICATION	//{{{ addPluginSet() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	// end HandlerBase implementation
WITHOUT_CLASSIFICATION	//{{{ dump() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ finished() method
WITHOUT_CLASSIFICATION	//{{{ Dependency class
WITHOUT_CLASSIFICATION	// after the entire list is loaded, fill out plugin field // in dependencies
WITHOUT_CLASSIFICATION	//{{{ PluginSet class
WITHOUT_CLASSIFICATION	//branch.satisfyDependencies(roster,installDirectory, //	downloadSource);
WITHOUT_CLASSIFICATION	//{{{ Plugin class
WITHOUT_CLASSIFICATION	//String installed; //String installedVersion;
WITHOUT_CLASSIFICATION	//{{{ Branch class
WITHOUT_CLASSIFICATION	// Force the install tab to refresh for possible // change of mirror
WITHOUT_CLASSIFICATION	// only used if what is "plugin"
WITHOUT_CLASSIFICATION	//{{{ getPluginList() method
WITHOUT_CLASSIFICATION	//{{{ getInstance() method
WITHOUT_CLASSIFICATION	//{{{ showPluginManager() method
WITHOUT_CLASSIFICATION	/* Setup panes */
WITHOUT_CLASSIFICATION	//{{{ PluginManager constructor
WITHOUT_CLASSIFICATION	//{{{ updatePluginList() method
WITHOUT_CLASSIFICATION	/* Create the buttons */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ clear() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ PluginTableModel class
WITHOUT_CLASSIFICATION	//{{{ setSortType() method
WITHOUT_CLASSIFICATION	//{{{ EntryCompare class
WITHOUT_CLASSIFICATION	//{{{ PluginInfoBox class
WITHOUT_CLASSIFICATION	//{{{ ListUpdater class
WITHOUT_CLASSIFICATION	/* Create buttons */
WITHOUT_CLASSIFICATION	//{{{ InstallPanel constructor
WITHOUT_CLASSIFICATION	/* Setup the table */
WITHOUT_CLASSIFICATION	//{{{ updateModel() method
WITHOUT_CLASSIFICATION	/* Create description */
WITHOUT_CLASSIFICATION	//{{{ SizeLabel class
WITHOUT_CLASSIFICATION	//{{{ formatSize() method
WITHOUT_CLASSIFICATION	//{{{ setSelectAll() method
WITHOUT_CLASSIFICATION	//{{{ SelectallButton class
WITHOUT_CLASSIFICATION	//{{{ isDownloadingList() method
WITHOUT_CLASSIFICATION	//{{{ InstallButton class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ WindowHandler class
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ PluginManagerProgress constructor
WITHOUT_CLASSIFICATION	//{{{ TextRenderer
WITHOUT_CLASSIFICATION	//{{{ RosterThread class
WITHOUT_CLASSIFICATION	//{{{ endDocument() method
WITHOUT_CLASSIFICATION	//{{{ setValue() method
WITHOUT_CLASSIFICATION	//{{{ BufferPrintable constructor
WITHOUT_CLASSIFICATION	//{{{ done() method
WITHOUT_CLASSIFICATION	// progress value as of start of current task
WITHOUT_CLASSIFICATION	// Change any white text to black
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//buffer.readLock();
WITHOUT_CLASSIFICATION	//buffer.readUnlock();
WITHOUT_CLASSIFICATION	//{{{ printPage() method
WITHOUT_CLASSIFICATION	//{{{ print() method
WITHOUT_CLASSIFICATION	//{{{ print() method
WITHOUT_CLASSIFICATION	//{{{ print() method
WITHOUT_CLASSIFICATION	//{{{ print() method
WITHOUT_CLASSIFICATION	//{{{ calculate tab size
WITHOUT_CLASSIFICATION	//{{{ nextTabStop() method
WITHOUT_CLASSIFICATION	//{{{ determine line number width
WITHOUT_CLASSIFICATION	//{{{ paintHeader() method
WITHOUT_CLASSIFICATION	// the +1's ensure that 99 gets 3 digits, 103 gets 4 digits, // and so on.
WITHOUT_CLASSIFICATION	//no need to always keep the same job name for every printout.
WITHOUT_CLASSIFICATION	// now that we know how many chars there are, get the width.
WITHOUT_CLASSIFICATION	//{{{ getPrintJob() method
WITHOUT_CLASSIFICATION	//{{{ paintFooter() method
WITHOUT_CLASSIFICATION	//{{{ getPrintJob() method
WITHOUT_CLASSIFICATION	//{{{ PrintTabExpander class
WITHOUT_CLASSIFICATION	//{{{ getPageFormat() method
WITHOUT_CLASSIFICATION	//{{{ PrintTabExpander constructor
WITHOUT_CLASSIFICATION	//{{{ getPageFormat() method
WITHOUT_CLASSIFICATION	//format.setOrientation(PageFormat.PORTRAIT);
WITHOUT_CLASSIFICATION	//{{{ pageSetup() method
WITHOUT_CLASSIFICATION	//{{{ pageSetup() method
WITHOUT_CLASSIFICATION	//for backwards compatibility, the color variable is stored also as a property
WITHOUT_CLASSIFICATION	//for backwards compatibility, the color variable is stored also as a property
WITHOUT_CLASSIFICATION	//convert from PrintRequestAttributeSet to the pageFormat
WITHOUT_CLASSIFICATION	//{{{ savePrintSpec() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//doesnt exist?? //pf.setOrientation(PageFormat.REVERSE_PORTRAIT); //then just do the next best thing
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	// if 'temp' is true, hide search bar after user is done with it
WITHOUT_CLASSIFICATION	//{{{ getField() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getSelection() method
WITHOUT_CLASSIFICATION	//{{{ Occur constructor
WITHOUT_CLASSIFICATION	//{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	// cached for speed
WITHOUT_CLASSIFICATION	//{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	//{{{ goTo() method
WITHOUT_CLASSIFICATION	//{{{ Create the timer used by incremental search
WITHOUT_CLASSIFICATION	//{{{ HyperSearchResult constructor
WITHOUT_CLASSIFICATION	//{{{ addOccur() method
WITHOUT_CLASSIFICATION	//{{{ bufferOpened() method
WITHOUT_CLASSIFICATION	//{{{ bufferOpened() method
WITHOUT_CLASSIFICATION	//{{{ getFirstFile() method
WITHOUT_CLASSIFICATION	//{{{ pathEquals() method
WITHOUT_CLASSIFICATION	//{{{ getFileCount() method
WITHOUT_CLASSIFICATION	//{{{ Occur class
WITHOUT_CLASSIFICATION	//{{{ getNextFile() method
WITHOUT_CLASSIFICATION	// not supported for arbitriary filesets
WITHOUT_CLASSIFICATION	// -1 so that the last isn't checked
WITHOUT_CLASSIFICATION	// not found at all.
WITHOUT_CLASSIFICATION	//{{{ getFiles() method
WITHOUT_CLASSIFICATION	//{{{ invalidateCachedList() method
WITHOUT_CLASSIFICATION	//{{{ SearchBar constructor
WITHOUT_CLASSIFICATION	//{{{ setHyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ getDirectory() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ setDirectory() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ DocumentHandler class
WITHOUT_CLASSIFICATION	//{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	//{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	//{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	//{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	//{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	//{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	// not found at all.
WITHOUT_CLASSIFICATION	//{{{ find() method
WITHOUT_CLASSIFICATION	// close button only there if 'temp' is true
WITHOUT_CLASSIFICATION	//{{{ If nothing entered, show search and replace dialog box
WITHOUT_CLASSIFICATION	//}}} //{{{ HyperSearch
WITHOUT_CLASSIFICATION	//}}} //{{{ Incremental search
WITHOUT_CLASSIFICATION	// on enter, start search from end // of current match to find next one
WITHOUT_CLASSIFICATION	// not found. start from // beginning
WITHOUT_CLASSIFICATION	// inform user search restarted
WITHOUT_CLASSIFICATION	// beep if beep property set
WITHOUT_CLASSIFICATION	//{{{ incrementalSearch() method
WITHOUT_CLASSIFICATION	/* For example, if the current fileset is a directory,		 * C+g will find the next match within that fileset.		 * This can be annoying if you have just done an		 * incremental search and want the next occurrence		 * in the current buffer. */
WITHOUT_CLASSIFICATION	//{{{ timerIncrementalSearch() method
WITHOUT_CLASSIFICATION	// on insert, start search from beginning of // current match. This will continue to highlight // the current match until another match is found
WITHOUT_CLASSIFICATION	// on backspace, restart from beginning
WITHOUT_CLASSIFICATION	// on backspace, restart from beginning
WITHOUT_CLASSIFICATION	// don't beep if not found. // subsequent beeps are very // annoying when backspacing an // invalid search string.
WITHOUT_CLASSIFICATION	//{{{ DirectoryListSet constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	// on insert, start search from beginning of // current match. This will continue to highlight // the current match until another match is found
WITHOUT_CLASSIFICATION	// don't beep if not found. // subsequent beeps are very // annoying when backspacing an // invalid search string.
WITHOUT_CLASSIFICATION	//{{{ setRecursive() method
WITHOUT_CLASSIFICATION	// reverse regexp search // not supported yet, so // 'simulate' with restart
WITHOUT_CLASSIFICATION	// reverse regexp search // not supported yet, so // 'simulate' with restart
WITHOUT_CLASSIFICATION	//{{{ getTreeModel() method
WITHOUT_CLASSIFICATION	//{{{ getFileFilter() method
WITHOUT_CLASSIFICATION	//{{{ _getFiles() method
WITHOUT_CLASSIFICATION	//{{{ setFileFilter() method
WITHOUT_CLASSIFICATION	//{{{ isRecursive() method
WITHOUT_CLASSIFICATION	//{{{ getTree() method
WITHOUT_CLASSIFICATION	//{{{ HyperSearchResults constructor
WITHOUT_CLASSIFICATION	//{{{ searchDone() method
WITHOUT_CLASSIFICATION	//{{{ visitBuffers() method
WITHOUT_CLASSIFICATION	//{{{ searchStarted() method
WITHOUT_CLASSIFICATION	// BufferUpdate.CLOSED
WITHOUT_CLASSIFICATION	//{{{ updateMultiStatus() method
WITHOUT_CLASSIFICATION	//{{{ searchFailed() method
WITHOUT_CLASSIFICATION	// collapse all nodes, as suggested on user mailing list...
WITHOUT_CLASSIFICATION	//{{{ goToSelectedNode() method
WITHOUT_CLASSIFICATION	// do nothing if clicked "foo (showing n occurrences in m files)"
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ Getters and setters
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu method
WITHOUT_CLASSIFICATION	//{{{ ResultCellRenderer class
WITHOUT_CLASSIFICATION	//{{{ RemoveTreeNodeAction class
WITHOUT_CLASSIFICATION	//{{{ ResultVisitor interface
WITHOUT_CLASSIFICATION	//{{{ RemoveAllTreeNodesAction class
WITHOUT_CLASSIFICATION	//{{{ ResultCellRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ getRegexp() method
WITHOUT_CLASSIFICATION	//{{{ getTreeCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ BufferLoadedVisitor class
WITHOUT_CLASSIFICATION	//{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ BufferClosedVisitor class
WITHOUT_CLASSIFICATION	//{{{ Match class
WITHOUT_CLASSIFICATION	//{{{ setReverseSearch() method
WITHOUT_CLASSIFICATION	//{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ getBeanShellReplace() method
WITHOUT_CLASSIFICATION	//{{{ setRegexp() method
WITHOUT_CLASSIFICATION	//{{{ getReverseSearch() method
WITHOUT_CLASSIFICATION	//{{{ setAutoWrap() method
WITHOUT_CLASSIFICATION	//{{{ setBeanShellReplace() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ find() method
WITHOUT_CLASSIFICATION	//{{{ find() method
WITHOUT_CLASSIFICATION	//{{{ find() method
WITHOUT_CLASSIFICATION	// beep if beep property set
WITHOUT_CLASSIFICATION	//{{{ setSearchFileSet() method
WITHOUT_CLASSIFICATION	//{{{ getAutoWrap() method
WITHOUT_CLASSIFICATION	//{{{ setSearchMatcher() method
WITHOUT_CLASSIFICATION	// start search from beginning
WITHOUT_CLASSIFICATION	//{{{ getSearchMatcher() method
WITHOUT_CLASSIFICATION	//{{{ Actions
WITHOUT_CLASSIFICATION	//{{{ getSearchFileSet() method
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	//{{{ getSmartCaseReplace() method
WITHOUT_CLASSIFICATION	//{{{ hyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ hyperSearch() method
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	// Wait for the buffer to load
WITHOUT_CLASSIFICATION	// the start and end flags will be wrong with reverse search enabled, // but they are only used by the regexp matcher, which doesn't // support reverse search yet. // // REMIND: fix flags when adding reverse regexp search.
WITHOUT_CLASSIFICATION	// make sure end of match is visible
WITHOUT_CLASSIFICATION	// make sure start of match is visible
WITHOUT_CLASSIFICATION	//{{{ replace() method
WITHOUT_CLASSIFICATION	//{{{ replace() method
WITHOUT_CLASSIFICATION	// so that Replace and Find continues from // the right location
WITHOUT_CLASSIFICATION	//{{{ replaceAll() method
WITHOUT_CLASSIFICATION	// Wait for buffer to finish loading
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ record() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ Constants
WITHOUT_CLASSIFICATION	//{{{ preloadSearchDialog() method
WITHOUT_CLASSIFICATION	/* Don't do this when playing a macro, cos it's annoying */
WITHOUT_CLASSIFICATION	//{{{ handleError() method
WITHOUT_CLASSIFICATION	// Tags plugin likes to call this method at times other than // startup; so we need to fire a SearchSettingsChanged to // notify the search bar and so on.
WITHOUT_CLASSIFICATION	//{{{ regexpBeanShellReplace() method
WITHOUT_CLASSIFICATION	//{{{ initReplace() method
WITHOUT_CLASSIFICATION	// only record this if doing a find next
WITHOUT_CLASSIFICATION	//{{{ regexpReplace() method
WITHOUT_CLASSIFICATION	//{{{ replaceInSelection() method
WITHOUT_CLASSIFICATION	//{{{ showSearchDialog() method
WITHOUT_CLASSIFICATION	//{{{ _replace() method
WITHOUT_CLASSIFICATION	//{{{ literalBeanShellReplace() method
WITHOUT_CLASSIFICATION	//{{{ replaceOne() method
WITHOUT_CLASSIFICATION	//{{{ replaceOne() method
WITHOUT_CLASSIFICATION	//{{{ getColumnOnOtherLine() method
WITHOUT_CLASSIFICATION	//{{{ getSearchDialog() method
WITHOUT_CLASSIFICATION	// might be already selected, see above.
WITHOUT_CLASSIFICATION	/* this property is only loaded and saved if				 * the 'current buffer' file set is selected.				 * otherwise, it defaults to on. */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ createFieldPanel() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getFileFilter() method
WITHOUT_CLASSIFICATION	//{{{ SearchDialog constructor
WITHOUT_CLASSIFICATION	// fields
WITHOUT_CLASSIFICATION	// search settings
WITHOUT_CLASSIFICATION	/* replaceBtn = new JButton(jEdit.getProperty("search.replaceBtn"));		replaceBtn.setMnemonic(jEdit.getProperty("search.replaceBtn.mnemonic")			.charAt(0));		grid.add(replaceBtn);		replaceBtn.addActionListener(actionHandler); */
WITHOUT_CLASSIFICATION	// multifile settings
WITHOUT_CLASSIFICATION	//{{{ createSearchSettingsPanel() method
WITHOUT_CLASSIFICATION	// buttons
WITHOUT_CLASSIFICATION	//{{{ closeOrKeepDialog() method
WITHOUT_CLASSIFICATION	/* replaceBtn, */
WITHOUT_CLASSIFICATION	/* replaceBtn, */
WITHOUT_CLASSIFICATION	/* replaceBtn, */
WITHOUT_CLASSIFICATION	/* replaceBtn, */
WITHOUT_CLASSIFICATION	// prevents us from handling SearchSettingsChanged // as a result of below
WITHOUT_CLASSIFICATION	//{{{ createMultiFilePanel() method
WITHOUT_CLASSIFICATION	// source is directory or filter field
WITHOUT_CLASSIFICATION	//{{{ createButtonsPanel() method
WITHOUT_CLASSIFICATION	//{{{ synchronizeMultiFileSettings() method
WITHOUT_CLASSIFICATION	//{{{ ReplaceActionHandler class
WITHOUT_CLASSIFICATION	// source is directory or filter field
WITHOUT_CLASSIFICATION	//{{{ SettingsActionHandler class
WITHOUT_CLASSIFICATION	//{{{ MyJRadioButton class
WITHOUT_CLASSIFICATION	//{{{ MultiFileActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ButtonActionHandler class
WITHOUT_CLASSIFICATION	//{{{ AllBufferSet constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ run() method
WITHOUT_CLASSIFICATION	//{{{ getFirstFile() method
WITHOUT_CLASSIFICATION	//{{{ getNextFile() method
WITHOUT_CLASSIFICATION	//{{{ getFiles() method
WITHOUT_CLASSIFICATION	//{{{ getFileCount() method
WITHOUT_CLASSIFICATION	//{{{ _getFiles() method
WITHOUT_CLASSIFICATION	//{{{ searchInSelection() method
WITHOUT_CLASSIFICATION	// just as if Enter was pressed in another // text field
WITHOUT_CLASSIFICATION	// just as if Enter was pressed in another // text field
WITHOUT_CLASSIFICATION	// to minimise synchronization and stuff like that, we only // show a status message at most twice a second
WITHOUT_CLASSIFICATION	//{{{ HyperSearchRequest constructor
WITHOUT_CLASSIFICATION	//{{{ match() method
WITHOUT_CLASSIFICATION	// initially zero, so that we always show the first message
WITHOUT_CLASSIFICATION	//{{{ BoyerMooreSearchMatcher constructor
WITHOUT_CLASSIFICATION	//{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ nextMatch() method
WITHOUT_CLASSIFICATION	// position variable for pattern test position
WITHOUT_CLASSIFICATION	/*	 *  a good introduction to the Boyer-Moore fast string matching	 *  algorithm may be found on Moore's website at:	 *	 *   http://www.cs.utexas.edu/users/moore/best-ideas/string-searching/	 *	 */
WITHOUT_CLASSIFICATION	// pattern test
WITHOUT_CLASSIFICATION	// position variable for pattern start
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ nextMatch() method
WITHOUT_CLASSIFICATION	// heuristic #2
WITHOUT_CLASSIFICATION	// last possible start position of a match with this pattern; // this is negative if the pattern is longer than the text // causing the search loop below to immediately fail //int last_anchor = reverseSearch //	? offset + pattern.length - 1 //	: length - pattern.length;
WITHOUT_CLASSIFICATION	// the search works by starting the anchor (first character // of the pattern) at the initial offset. as long as the // anchor is far enough from the enough of the text for the // pattern to match, and until the pattern matches, we // compare the pattern to the text from the last character // to the first character in reverse order. where a character // in the pattern mismatches, we use the two heuristics // based on the mismatch character and its position in the // pattern to determine the furthest we can move the anchor // without missing any potential pattern matches.
WITHOUT_CLASSIFICATION	// character mismatch, determine how many characters to skip
WITHOUT_CLASSIFICATION	// go back to the while loop
WITHOUT_CLASSIFICATION	// heuristic #1
WITHOUT_CLASSIFICATION	// MISMATCH: return -1 as defined by API
WITHOUT_CLASSIFICATION	// skip the greater of the two distances provided by the // heuristics
WITHOUT_CLASSIFICATION	// Boyer-Moore helper methods
WITHOUT_CLASSIFICATION	// MATCH: return the position of its first character
WITHOUT_CLASSIFICATION	// leave the table cleanly-initialized for an empty pattern
WITHOUT_CLASSIFICATION	// Boyer-Moore member fields
WITHOUT_CLASSIFICATION	/*	 *  the 'skip' array is used to determine for each index in the	 *  hashed alphabet how many characters can be skipped if	 *  a mismatch occurs on a characater hashing to that index.	 */
WITHOUT_CLASSIFICATION	//{{{ generateSkipArray() method
WITHOUT_CLASSIFICATION	// initialize the skip array to all zeros
WITHOUT_CLASSIFICATION	/*	 *  to avoid our skip table having a length of 2 ^ 16, we hash each	 *  character of the input into a character in the alphabet [\x00-\xFF]	 *  using the lower 8 bits of the character's value (resulting in	 *  a more reasonable skip table of length 2 ^ 8).	 *	 *  the result of this is that more than one character can hash to the	 *  same index, but since the skip table encodes the position of	 *  occurence of the character furthest into the string with a particular	 *  index (whether or not it is the only character with that index), an	 *  index collision only means that that this heuristic will give a	 *  sub-optimal skip (i.e. a complete skip table could use the differences	 *  between colliding characters to maximal effect, at the expense of	 *  building a table that is over 2 orders of magnitude larger and very	 *  sparse).	 */
WITHOUT_CLASSIFICATION	//{{{ getSkipIndex() method
WITHOUT_CLASSIFICATION	//{{{ generateSuffixArray() method
WITHOUT_CLASSIFICATION	//{{{ RESearchMatcher constructor
WITHOUT_CLASSIFICATION	// never mind
WITHOUT_CLASSIFICATION	//{{{ stringToToken() method
WITHOUT_CLASSIFICATION	//{{{ createToken() method
WITHOUT_CLASSIFICATION	//{{{ addToken() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ getLineContext() method
WITHOUT_CLASSIFICATION	//{{{ setLineContext() method
WITHOUT_CLASSIFICATION	//{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	// unless we are matching to the end of the buffer, // $ should not match on the end of the substring
WITHOUT_CLASSIFICATION	// unless we are matching from the start of the buffer, // ^ should not match on the beginning of the substring
WITHOUT_CLASSIFICATION	//{{{ lookup() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ Token types
WITHOUT_CLASSIFICATION	//{{{ getTokens() method
WITHOUT_CLASSIFICATION	// Special:
WITHOUT_CLASSIFICATION	//{{{ getNonAlphaNumericChars() method
WITHOUT_CLASSIFICATION	//{{{ Token constructor
WITHOUT_CLASSIFICATION	//{{{ handleToken() method
WITHOUT_CLASSIFICATION	//{{{ regionMatches() method
WITHOUT_CLASSIFICATION	//{{{ TokenMarker constructor
WITHOUT_CLASSIFICATION	//{{{ getParserRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ getKeywords() method
WITHOUT_CLASSIFICATION	//{{{ KeywordMap constructor
WITHOUT_CLASSIFICATION	//{{{ KeywordMap constructor
WITHOUT_CLASSIFICATION	//{{{ addRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ getStringMapKey() method
WITHOUT_CLASSIFICATION	//{{{ getSegmentMapKey() method
WITHOUT_CLASSIFICATION	//{{{ Keyword class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ markTokens() method
WITHOUT_CLASSIFICATION	//{{{ check if we have to stop parsing
WITHOUT_CLASSIFICATION	//{{{ getMainRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ Set up some instance variables // this is to avoid having to pass around lots and lots of // parameters.
WITHOUT_CLASSIFICATION	//{{{ getRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ See if the rule's start or end sequence matches here
WITHOUT_CLASSIFICATION	//{{{ getRuleSets() method
WITHOUT_CLASSIFICATION	//{{{ Main parser loop
WITHOUT_CLASSIFICATION	// stop checking rules if there was a match
WITHOUT_CLASSIFICATION	//{{{ check for end of delegate
WITHOUT_CLASSIFICATION	//{{{ Mark all remaining characters
WITHOUT_CLASSIFICATION	//{{{ check every rule
WITHOUT_CLASSIFICATION	//{{{ check if current character is a word separator
WITHOUT_CLASSIFICATION	//{{{ checkDelegateEnd() method
WITHOUT_CLASSIFICATION	//{{{ Unwind any NO_LINE_BREAK parent delegates
WITHOUT_CLASSIFICATION	//{{{ handleRule() method
WITHOUT_CLASSIFICATION	// move pos to last character of match sequence
WITHOUT_CLASSIFICATION	// check escape rule of parent
WITHOUT_CLASSIFICATION	//{{{ Some rules can only match in certain locations
WITHOUT_CLASSIFICATION	//{{{ SEQ
WITHOUT_CLASSIFICATION	// the end cannot be a regular expression
WITHOUT_CLASSIFICATION	/* substitute result of matching the rule start				 * into the end string.				 *				 * eg, in shell script mode, <<\s*(\w+) is				 * matched into \<$1\> to construct rules for				 * highlighting read-ins like this <<EOF				 * ...				 * EOF				 */
WITHOUT_CLASSIFICATION	//{{{ Check for an escape sequence
WITHOUT_CLASSIFICATION	//{{{ handleNoWordBreak() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ hashCode() method
WITHOUT_CLASSIFICATION	//}}} //{{{ MARK_FOLLOWING
WITHOUT_CLASSIFICATION	// Instead of passing these around to each method, we just store them // as instance variables. Note that this is not thread-safe.
WITHOUT_CLASSIFICATION	// move pos to last character of match sequence
WITHOUT_CLASSIFICATION	// note that all regexps start with \A so they only // match the start of the string
WITHOUT_CLASSIFICATION	// a DELEGATE attribute on a SEQ changes the // ruleset from the end of the SEQ onwards
WITHOUT_CLASSIFICATION	//}}} //{{{ Handle start of rule
WITHOUT_CLASSIFICATION	// break out of inner for loop to check next char //}}} //{{{ Handle end of MARK_FOLLOWING
WITHOUT_CLASSIFICATION	//}}} //{{{ SPAN, EOL_SPAN
WITHOUT_CLASSIFICATION	//{{{ markKeyword() method
WITHOUT_CLASSIFICATION	//}}} //{{{ MARK_PREVIOUS
WITHOUT_CLASSIFICATION	//{{{ substitute() method
WITHOUT_CLASSIFICATION	//{{{ handleTokenWithSpaces() method
WITHOUT_CLASSIFICATION	//{{{ Do keywords
WITHOUT_CLASSIFICATION	//{{{ Do digits
WITHOUT_CLASSIFICATION	// used for SPAN_REGEXP rules; otherwise null
WITHOUT_CLASSIFICATION	// only match against regexp if its not all // digits; if all digits, no point matching
WITHOUT_CLASSIFICATION	//{{{ Handle any remaining crud
WITHOUT_CLASSIFICATION	//{{{ clone() method
WITHOUT_CLASSIFICATION	//{{{ LineContext class
WITHOUT_CLASSIFICATION	//{{{ intern() method
WITHOUT_CLASSIFICATION	//{{{ LineContext constructor
WITHOUT_CLASSIFICATION	//{{{ LineContext constructor
WITHOUT_CLASSIFICATION	//{{{ XModeHandler constructor
WITHOUT_CLASSIFICATION	//{{{ charArraysEqual() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ pushElement() method
WITHOUT_CLASSIFICATION	//{{{ peekElement() method
WITHOUT_CLASSIFICATION	//{{{ popElement() method
WITHOUT_CLASSIFICATION	//{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	//{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	//{{{ endDocument() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ handleToken() method
WITHOUT_CLASSIFICATION	//}}} //{{{ MARK_FOLLOWING
WITHOUT_CLASSIFICATION	//}}} //{{{ MARK_PREVIOUS
WITHOUT_CLASSIFICATION	//}}} //{{{ EOL_SPAN
WITHOUT_CLASSIFICATION	// mixed digit/alpha keyword, // and no regexp... don't // highlight as DIGIT
WITHOUT_CLASSIFICATION	//}}} //{{{ RULES
WITHOUT_CLASSIFICATION	//{{{ PROPERTY
WITHOUT_CLASSIFICATION	//}}} //{{{ TERMINATE
WITHOUT_CLASSIFICATION	//}}} //{{{ PROPS
WITHOUT_CLASSIFICATION	//}}} //{{{ IMPORT
WITHOUT_CLASSIFICATION	//}}} //{{{ SEQ_REGEXP
WITHOUT_CLASSIFICATION	//}}} //{{{ SEQ
WITHOUT_CLASSIFICATION	//}}} //{{{ SPAN_REGEXP
WITHOUT_CLASSIFICATION	//}}} //{{{ SPAN
WITHOUT_CLASSIFICATION	//{{{ getModeProperties() method
WITHOUT_CLASSIFICATION	//}}} //{{{ Keywords
WITHOUT_CLASSIFICATION	//}}} //{{{ EOL_SPAN_REGEXP
WITHOUT_CLASSIFICATION	//{{{ addKeyword() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ setLineContext() method
WITHOUT_CLASSIFICATION	//{{{ Major actions
WITHOUT_CLASSIFICATION	//{{{ paintChunkList() method
WITHOUT_CLASSIFICATION	//{{{ paintChunkBackgrounds() method
WITHOUT_CLASSIFICATION	// only paint visible chunks
WITHOUT_CLASSIFICATION	// only paint visible chunks
WITHOUT_CLASSIFICATION	//{{{ Chunk constructor
WITHOUT_CLASSIFICATION	// Useful for debugging purposes
WITHOUT_CLASSIFICATION	//{{{ Paint token background color if necessary
WITHOUT_CLASSIFICATION	//{{{ Chunk constructor
WITHOUT_CLASSIFICATION	//{{{ offsetToX() method
WITHOUT_CLASSIFICATION	//{{{ offsetToX() method
WITHOUT_CLASSIFICATION	//{{{ createSpanRule() method
WITHOUT_CLASSIFICATION	//{{{ xToOffset() method
WITHOUT_CLASSIFICATION	//{{{ xToOffset() method
WITHOUT_CLASSIFICATION	//{{{ getPositions() method
WITHOUT_CLASSIFICATION	// set up after init()
WITHOUT_CLASSIFICATION	//{{{ Action hints
WITHOUT_CLASSIFICATION	//{{{ Position match hints
WITHOUT_CLASSIFICATION	//{{{ createRegexpSpanRule() method
WITHOUT_CLASSIFICATION	//{{{ createSequenceRule() method
WITHOUT_CLASSIFICATION	//{{{ createEOLSpanRule() method
WITHOUT_CLASSIFICATION	//{{{ createRegexpSequenceRule() method
WITHOUT_CLASSIFICATION	//{{{ createRegexpEOLSpanRule() method
WITHOUT_CLASSIFICATION	//{{{ createMarkFollowingRule() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getProperties() method
WITHOUT_CLASSIFICATION	//{{{ setProperties() method
WITHOUT_CLASSIFICATION	//{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ getKeywords() method
WITHOUT_CLASSIFICATION	//{{{ addRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ getModeName() method
WITHOUT_CLASSIFICATION	//{{{ createMarkPreviousRule() method
WITHOUT_CLASSIFICATION	//{{{ setEscapeRule() method
WITHOUT_CLASSIFICATION	//{{{ createEscapeRule() method
WITHOUT_CLASSIFICATION	//{{{ getSetName() method
WITHOUT_CLASSIFICATION	//{{{ getStandardRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ setKeywords() method
WITHOUT_CLASSIFICATION	//{{{ ParserRuleSet constructor
WITHOUT_CLASSIFICATION	//{{{ resolveImports() method
WITHOUT_CLASSIFICATION	//{{{ getHighlightDigits() method
WITHOUT_CLASSIFICATION	//{{{ addRule() method
WITHOUT_CLASSIFICATION	//{{{ getDefault() method
WITHOUT_CLASSIFICATION	//{{{ getRules() method
WITHOUT_CLASSIFICATION	//{{{ setHighlightDigits() method
WITHOUT_CLASSIFICATION	//{{{ getRuleCount() method
WITHOUT_CLASSIFICATION	//{{{ getTerminateChar() method
WITHOUT_CLASSIFICATION	//{{{ getDigitRegexp() method
WITHOUT_CLASSIFICATION	//{{{ setTerminateChar() method
WITHOUT_CLASSIFICATION	//{{{ setDefault() method
WITHOUT_CLASSIFICATION	//{{{ setDigitRegexp() method
WITHOUT_CLASSIFICATION	//{{{ getEscapeRule() method
WITHOUT_CLASSIFICATION	//{{{ getNoWordSep() method
WITHOUT_CLASSIFICATION	//{{{ setNoWordSep() method
WITHOUT_CLASSIFICATION	//{{{ isBuiltIn() method
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	//{{{ handleToken() method
WITHOUT_CLASSIFICATION	//{{{ setCharWidth() method
WITHOUT_CLASSIFICATION	// SILLY: allow for anti-aliased characters' "fuzz"
WITHOUT_CLASSIFICATION	//{{{ canMerge() method
WITHOUT_CLASSIFICATION	// don't have chunks longer than 100 characters to avoid slowing things down
WITHOUT_CLASSIFICATION	//{{{ getChunkList() method
WITHOUT_CLASSIFICATION	//{{{ textAreaDisposed() method
WITHOUT_CLASSIFICATION	//{{{ SyntaxStyle constructor
WITHOUT_CLASSIFICATION	//{{{ createChunk() method
WITHOUT_CLASSIFICATION	//{{{ Static part
WITHOUT_CLASSIFICATION	//{{{ initChunk() method
WITHOUT_CLASSIFICATION	//{{{ getForegroundColor() method
WITHOUT_CLASSIFICATION	//{{{ merge() method
WITHOUT_CLASSIFICATION	// in case already initialized; un-initialize it
WITHOUT_CLASSIFICATION	//{{{ getBackgroundColor() method
WITHOUT_CLASSIFICATION	//{{{ getDisplayManager() method
WITHOUT_CLASSIFICATION	//{{{ getFont() method
WITHOUT_CLASSIFICATION	//{{{ _notifyScreenLineChanges() method
WITHOUT_CLASSIFICATION	//{{{ getCharWidth() method
WITHOUT_CLASSIFICATION	// if we got here, no unused display manager in list
WITHOUT_CLASSIFICATION	//{{{ isLineVisible() method
WITHOUT_CLASSIFICATION	//{{{ releaseDisplayManager() method
WITHOUT_CLASSIFICATION	//{{{ getFirstVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineCount() method
WITHOUT_CLASSIFICATION	//{{{ getNextVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ getLastVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ getPrevVisibleLine() method
WITHOUT_CLASSIFICATION	/* start of next expanded range */
WITHOUT_CLASSIFICATION	/* in collapsed range */
WITHOUT_CLASSIFICATION	/* in collapsed range */
WITHOUT_CLASSIFICATION	/* start of next expanded range */
WITHOUT_CLASSIFICATION	/* beyond last visible line */
WITHOUT_CLASSIFICATION	/* equal to last visible line */
WITHOUT_CLASSIFICATION	/* last in expanded range */
WITHOUT_CLASSIFICATION	/* end of prev expanded range */
WITHOUT_CLASSIFICATION	/* next in expanded range */
WITHOUT_CLASSIFICATION	/* end of prev expanded range */
WITHOUT_CLASSIFICATION	/* before first visible line */
WITHOUT_CLASSIFICATION	/* prev in expanded range */
WITHOUT_CLASSIFICATION	/* equal to first visible line */
WITHOUT_CLASSIFICATION	/* first in expanded range */
WITHOUT_CLASSIFICATION	//{{{ Find fold start and end...
WITHOUT_CLASSIFICATION	//{{{ collapseFold() method
WITHOUT_CLASSIFICATION	//{{{ getScrollLineCount() method
WITHOUT_CLASSIFICATION	// scan backwards looking for the start
WITHOUT_CLASSIFICATION	// this line is the start of a fold
WITHOUT_CLASSIFICATION	// this line is the start of a fold
WITHOUT_CLASSIFICATION	// no folds in buffer
WITHOUT_CLASSIFICATION	// Collapse the fold...
WITHOUT_CLASSIFICATION	//{{{ expandFold() method
WITHOUT_CLASSIFICATION	// the first sub-fold. used by JEditTextArea.expandFold().
WITHOUT_CLASSIFICATION	//{{{ Find fold start and fold end...
WITHOUT_CLASSIFICATION	/* isLineVisible(i) && */
WITHOUT_CLASSIFICATION	//XXX
WITHOUT_CLASSIFICATION	//{{{ Expand the fold...
WITHOUT_CLASSIFICATION	// we need a different value of initialFoldLevel here!
WITHOUT_CLASSIFICATION	//{{{ expandAllFolds() method
WITHOUT_CLASSIFICATION	//{{{ expandFolds() method
WITHOUT_CLASSIFICATION	//{{{ expandFolds() method
WITHOUT_CLASSIFICATION	/* this ensures that the first line is always visible */
WITHOUT_CLASSIFICATION	//{{{ narrow() method
WITHOUT_CLASSIFICATION	// if we narrowed to a single collapsed fold
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ changed() method
WITHOUT_CLASSIFICATION	//{{{ changed() method
WITHOUT_CLASSIFICATION	//{{{ setScreenLineCount() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ _notifyScreenLineChanges() method
WITHOUT_CLASSIFICATION	//XXX
WITHOUT_CLASSIFICATION	// when the text area switches to us, it will do // a reset anyway
WITHOUT_CLASSIFICATION	// this notifies each display manager editing this // buffer of the screen line count change
WITHOUT_CLASSIFICATION	//{{{ fvmget() method
WITHOUT_CLASSIFICATION	//{{{ updateWrapSettings() method
WITHOUT_CLASSIFICATION	//{{{ DisplayManager constructor
WITHOUT_CLASSIFICATION	//{{{ showLineRange() method
WITHOUT_CLASSIFICATION	//{{{ fvmput() method
WITHOUT_CLASSIFICATION	//{{{ hideLineRange() method
WITHOUT_CLASSIFICATION	//{{{ fvmreset() method
WITHOUT_CLASSIFICATION	// important: not lineMgr.getScreenLineCount()
WITHOUT_CLASSIFICATION	//{{{ fvmput2() method
WITHOUT_CLASSIFICATION	// ScrollLineCount.changed() does the same // thing
WITHOUT_CLASSIFICATION	//{{{ fvmdump() method
WITHOUT_CLASSIFICATION	//{{{ _setScreenLineCount() method
WITHOUT_CLASSIFICATION	/* update fold visibility map. */
WITHOUT_CLASSIFICATION	/* update fold visibility map. */
WITHOUT_CLASSIFICATION	//{{{ FirstLine class
WITHOUT_CLASSIFICATION	//{{{ Anchor class
WITHOUT_CLASSIFICATION	//{{{ Debug code
WITHOUT_CLASSIFICATION	//{{{ ScrollLineCount class
WITHOUT_CLASSIFICATION	//{{{ Debug code
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	//{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	//{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	/* update fold visibility map. */
WITHOUT_CLASSIFICATION	//{{{ Debug code
WITHOUT_CLASSIFICATION	// JEditTextArea.scrollTo() needs this to simplify // its code
WITHOUT_CLASSIFICATION	// JEditTextArea.scrollTo() needs this to simplify // its code
WITHOUT_CLASSIFICATION	//{{{ physUp() method // scroll up by physical line amount
WITHOUT_CLASSIFICATION	//{{{ scrollDown() method // scroll down by screen line amount
WITHOUT_CLASSIFICATION	//{{{ scrollUp() method // scroll up by screen line amount
WITHOUT_CLASSIFICATION	//{{{ ensurePhysicalLineIsVisible() method
WITHOUT_CLASSIFICATION	//{{{ BufferChangeHandler class
WITHOUT_CLASSIFICATION	//System.err.println("foldLevelChanged " + (start-1) + " to " + textArea.getLastPhysicalLine() + "," + end);
WITHOUT_CLASSIFICATION	//{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	//{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	/* both have same visibility; just remove			 * anything in between. */
WITHOUT_CLASSIFICATION	// we're removing from before // the first visible to after // the last visible
WITHOUT_CLASSIFICATION	/* collapse 2 */
WITHOUT_CLASSIFICATION	// we're removing from // the first visible to after // the last visible
WITHOUT_CLASSIFICATION	/* shift */
WITHOUT_CLASSIFICATION	/* update */
WITHOUT_CLASSIFICATION	// will be handled later. // see comments at the end of // transactionComplete().
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	//XXX
WITHOUT_CLASSIFICATION	//{{{ setBorder() method
WITHOUT_CLASSIFICATION	//{{{ doDelayedUpdate() method
WITHOUT_CLASSIFICATION	// must update screen line counts before we call // _notifyScreenLineChanges() since that calls // updateScrollBars() which needs valid info
WITHOUT_CLASSIFICATION	// must be before the below call // so that the chunk cache is not // updated with an invisible first // line (see above)
WITHOUT_CLASSIFICATION	// update visible lines
WITHOUT_CLASSIFICATION	// force the fold levels to be // updated.
WITHOUT_CLASSIFICATION	// when painting the last line of // a buffer, Buffer.isFoldStart() // doesn't call getFoldLevel(), // hence the foldLevelChanged() // event might not be sent for the // previous line.
WITHOUT_CLASSIFICATION	//{{{ delayedUpdate() method
WITHOUT_CLASSIFICATION	//{{{ caretAutoScroll() method
WITHOUT_CLASSIFICATION	//{{{ updateBorder() method
WITHOUT_CLASSIFICATION	//{{{ Layers
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ Match class
WITHOUT_CLASSIFICATION	//{{{ paintInvalidLine() method
WITHOUT_CLASSIFICATION	//{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	//{{{ selectMatch() method
WITHOUT_CLASSIFICATION	//{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	// fill the background
WITHOUT_CLASSIFICATION	//{{{ MouseActions constructor
WITHOUT_CLASSIFICATION	//{{{ BracketMatcher class
WITHOUT_CLASSIFICATION	//{{{ getActionForEvent() method
WITHOUT_CLASSIFICATION	//{{{ removeExtension() method
WITHOUT_CLASSIFICATION	//{{{ getMatch() method
WITHOUT_CLASSIFICATION	// if buffer is loading, don't paint anything
WITHOUT_CLASSIFICATION	//{{{ Highlight class
WITHOUT_CLASSIFICATION	//{{{ Gutter constructor
WITHOUT_CLASSIFICATION	//{{{ getExtensions() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ setBorder() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ toggleExpanded() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ Getters and setters
WITHOUT_CLASSIFICATION	/*	 * Component.getPreferredSize() is overridden here to support the	 * collapsing behavior.	 */
WITHOUT_CLASSIFICATION	/*	 * JComponent.setBorder(Border) is overridden here to cache the left	 * inset of the border (if any) to avoid having to fetch it during every	 * repaint.	 */
WITHOUT_CLASSIFICATION	//{{{ getHighlightedForeground() method
WITHOUT_CLASSIFICATION	//{{{ setFont() method
WITHOUT_CLASSIFICATION	//{{{ setHighlightInterval() method
WITHOUT_CLASSIFICATION	/*	 * JComponent.setFont(Font) is overridden here to cache the baseline for	 * the font. This avoids having to get the font metrics during every	 * repaint.	 */
WITHOUT_CLASSIFICATION	//{{{ setHighlightedForeground() method
WITHOUT_CLASSIFICATION	//{{{ getLineNumberAlignment() method
WITHOUT_CLASSIFICATION	//{{{ getCurrentLineForeground() method
WITHOUT_CLASSIFICATION	//{{{ isStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setCurrentLineForeground() method
WITHOUT_CLASSIFICATION	//{{{ setLineNumberAlignment() method
WITHOUT_CLASSIFICATION	//{{{ getFoldColor() method
WITHOUT_CLASSIFICATION	//{{{ isCurrentLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setFoldColor() method
WITHOUT_CLASSIFICATION	//{{{ isMarkerHighlightEnabled()
WITHOUT_CLASSIFICATION	//{{{ isExpanded() method
WITHOUT_CLASSIFICATION	//{{{ setCurrentLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setExpanded() method
WITHOUT_CLASSIFICATION	//{{{ setStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getHighlightInterval() method
WITHOUT_CLASSIFICATION	//{{{ getStructureHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ getMarkerHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ setStructureHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ setMarkerHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ isMarkerHighlightEnabled() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ Layers
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	//{{{ setBounds() method
WITHOUT_CLASSIFICATION	//{{{ mouseExited() method
WITHOUT_CLASSIFICATION	//{{{ Getters and setters
WITHOUT_CLASSIFICATION	//{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	//{{{ mouseEntered() method
WITHOUT_CLASSIFICATION	//{{{ paintLine() method
WITHOUT_CLASSIFICATION	// draw |
WITHOUT_CLASSIFICATION	// Skip lines beyond EOF
WITHOUT_CLASSIFICATION	//{{{ Handle actions
WITHOUT_CLASSIFICATION	//{{{ Paint fold triangles
WITHOUT_CLASSIFICATION	// draw |^
WITHOUT_CLASSIFICATION	// draw |_
WITHOUT_CLASSIFICATION	//{{{ Paint line numbers
WITHOUT_CLASSIFICATION	//{{{ MarkerHighlight class
WITHOUT_CLASSIFICATION	//{{{ Determine action
WITHOUT_CLASSIFICATION	//{{{ setStyles() method
WITHOUT_CLASSIFICATION	/* && e.getX() >= getWidth() - borderWidth * 2 */
WITHOUT_CLASSIFICATION	//{{{ getStyles() method
WITHOUT_CLASSIFICATION	//{{{ setCaretColor() method
WITHOUT_CLASSIFICATION	//{{{ getCaretColor() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ isAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getStructureHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ setStructureHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ isStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ isBlockCaretEnabled() method
WITHOUT_CLASSIFICATION	// assumed this is called after a font render context is set up. // changing font render context settings without a setStyles() // call will not reset cached monospaced font info.
WITHOUT_CLASSIFICATION	//{{{ getMultipleSelectionColor() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionColor() method
WITHOUT_CLASSIFICATION	//{{{ getWrapGuideColor() method
WITHOUT_CLASSIFICATION	//{{{ setSelectionColor() method
WITHOUT_CLASSIFICATION	//{{{ setMultipleSelectionColor() method
WITHOUT_CLASSIFICATION	//{{{ setBlockCaretEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getLineHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ setLineHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ getEOLMarkerColor() method
WITHOUT_CLASSIFICATION	//{{{ isLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setWrapGuideColor() method
WITHOUT_CLASSIFICATION	//{{{ setLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setFractionalFontMetricsEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setEOLMarkerColor() method
WITHOUT_CLASSIFICATION	//{{{ isWrapGuidePainted() method
WITHOUT_CLASSIFICATION	//{{{ getEOLMarkersPainted() method
WITHOUT_CLASSIFICATION	//{{{ setEOLMarkersPainted() method
WITHOUT_CLASSIFICATION	//{{{ isFractionalFontMetricsEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setWrapGuidePainted() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLineStyle() method
WITHOUT_CLASSIFICATION	//{{{ setFoldLineStyle() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ setBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ nextTabStop() method
WITHOUT_CLASSIFICATION	//{{{ getCharWidth() method
WITHOUT_CLASSIFICATION	//{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ removeExtension() method
WITHOUT_CLASSIFICATION	//{{{ getExtensions() method
WITHOUT_CLASSIFICATION	//{{{ setFont() method
WITHOUT_CLASSIFICATION	//{{{ getFontRenderContext() method
WITHOUT_CLASSIFICATION	//{{{ getStringWidth() method
WITHOUT_CLASSIFICATION	//{{{ getFontMetrics() method
WITHOUT_CLASSIFICATION	//{{{ updateRenderingHints() method
WITHOUT_CLASSIFICATION	/* package-private since they are accessed by inner classes and we	 * want this to be fast */
WITHOUT_CLASSIFICATION	//{{{ Paint line highlight and collapsed fold highlight
WITHOUT_CLASSIFICATION	// should try to use this as little as possible.
WITHOUT_CLASSIFICATION	//hints.put(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
WITHOUT_CLASSIFICATION	//{{{ TextAreaPainter constructor
WITHOUT_CLASSIFICATION	//{{{ PaintLineBackground class
WITHOUT_CLASSIFICATION	//{{{ Paint token backgrounds
WITHOUT_CLASSIFICATION	// minimise access$ methods
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ Getters and setters
WITHOUT_CLASSIFICATION	//{{{ getDisplayManager() method
WITHOUT_CLASSIFICATION	//{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	//horizontal.setBorder(null);
WITHOUT_CLASSIFICATION	// Because the clipRect's height is usually an even multiple // of the font height, we subtract 1 from it, otherwise one // too many lines will always be painted.
WITHOUT_CLASSIFICATION	//{{{ PaintSelection class
WITHOUT_CLASSIFICATION	//{{{ JEditTextArea constructor
WITHOUT_CLASSIFICATION	//{{{ paintSelection() method
WITHOUT_CLASSIFICATION	//{{{ PaintWrapGuide class
WITHOUT_CLASSIFICATION	//{{{ Initialize some misc. stuff
WITHOUT_CLASSIFICATION	//{{{ PaintText class
WITHOUT_CLASSIFICATION	//{{{ Add some event listeners
WITHOUT_CLASSIFICATION	//{{{ PaintCaret class
WITHOUT_CLASSIFICATION	//{{{ Initialize the GUI
WITHOUT_CLASSIFICATION	//{{{ setCaretBlinkEnabled() method
WITHOUT_CLASSIFICATION	// some plugins add stuff in a "right-hand" gutter
WITHOUT_CLASSIFICATION	//{{{ setQuickCopyEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getPainter() method
WITHOUT_CLASSIFICATION	//{{{ getElectricScroll() method
WITHOUT_CLASSIFICATION	//{{{ getGutter() method
WITHOUT_CLASSIFICATION	//{{{ isCaretBlinkEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setElectricScroll() method
WITHOUT_CLASSIFICATION	//{{{ isQuickCopyEnabled() method
WITHOUT_CLASSIFICATION	/* do nothing */
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	//{{{ isEditable() method
WITHOUT_CLASSIFICATION	// JEditTextArea.scrollTo() needs this to simplify // its code
WITHOUT_CLASSIFICATION	// dubious? //setFirstLine(0);
WITHOUT_CLASSIFICATION	//{{{ this ensures that the text area's look is slightly // more consistent with the rest of the metal l&f. // while it depends on not-so-well-documented portions // of Swing, it only affects appearance, so future // breakage shouldn't matter
WITHOUT_CLASSIFICATION	//{{{ setDragEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getDragAndDropCallback() method
WITHOUT_CLASSIFICATION	//{{{ scrollUpPage() method
WITHOUT_CLASSIFICATION	//{{{ Scrolling
WITHOUT_CLASSIFICATION	//{{{ setDragAndDropCallback() method
WITHOUT_CLASSIFICATION	// we have to be careful
WITHOUT_CLASSIFICATION	//{{{ isDragInProgress() method
WITHOUT_CLASSIFICATION	//{{{ Debugging code
WITHOUT_CLASSIFICATION	//{{{ setDragInProgress() method
WITHOUT_CLASSIFICATION	// we have to be careful
WITHOUT_CLASSIFICATION	//{{{ isDragEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getVisibleLines() method
WITHOUT_CLASSIFICATION	//{{{ getFirstLine() method
WITHOUT_CLASSIFICATION	//{{{ getFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ setFirstLine() method
WITHOUT_CLASSIFICATION	//{{{ ensure we don't have empty space at the bottom or top, etc
WITHOUT_CLASSIFICATION	//{{{ ensure we don't have empty space at the bottom or top, etc
WITHOUT_CLASSIFICATION	//{{{ setFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ setFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ getHorizontalOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLastPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ scrollDownLine() method
WITHOUT_CLASSIFICATION	//{{{ setHorizontalOffset() method
WITHOUT_CLASSIFICATION	//{{{ scrollUpLine() method
WITHOUT_CLASSIFICATION	//{{{ getLineCount() method
WITHOUT_CLASSIFICATION	//{{{ addScrollListener() method
WITHOUT_CLASSIFICATION	//{{{ scrollDownPage() method
WITHOUT_CLASSIFICATION	//{{{ scrollToCaret() method
WITHOUT_CLASSIFICATION	//{{{ removeScrollListener() method
WITHOUT_CLASSIFICATION	//{{{ scrollTo() method
WITHOUT_CLASSIFICATION	//{{{ scrollTo() method
WITHOUT_CLASSIFICATION	//{{{ Offset conversion
WITHOUT_CLASSIFICATION	//{{{ Get ready
WITHOUT_CLASSIFICATION	//{{{ Screen line stuff
WITHOUT_CLASSIFICATION	//{{{ Scroll vertically
WITHOUT_CLASSIFICATION	//{{{ invalidateScreenLineRange() method
WITHOUT_CLASSIFICATION	//{{{ Scroll horizontally
WITHOUT_CLASSIFICATION	//{{{ xyToOffset() method
WITHOUT_CLASSIFICATION	//{{{ getPhysicalLineOfScreenLine() method
WITHOUT_CLASSIFICATION	//{{{ xyToOffset() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ Convenience methods
WITHOUT_CLASSIFICATION	//{{{ getScreenLineStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ xToScreenLineOffset() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ invalidateLine() method
WITHOUT_CLASSIFICATION	//{{{ offsetToXY() method
WITHOUT_CLASSIFICATION	//{{{ offsetToXY() method
WITHOUT_CLASSIFICATION	//{{{ Painting
WITHOUT_CLASSIFICATION	//{{{ invalidateLineRange() method
WITHOUT_CLASSIFICATION	//{{{ getBufferLength() method
WITHOUT_CLASSIFICATION	//{{{ invalidateSelectedLines() method
WITHOUT_CLASSIFICATION	// to hide line highlight if selections are being added later on
WITHOUT_CLASSIFICATION	//{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLineStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLineLength() method
WITHOUT_CLASSIFICATION	//{{{ getLineText() method
WITHOUT_CLASSIFICATION	//{{{ getLineText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ selectNone() method
WITHOUT_CLASSIFICATION	//{{{ setText() method
WITHOUT_CLASSIFICATION	//{{{ selectAll() method
WITHOUT_CLASSIFICATION	//{{{ getSelection() method
WITHOUT_CLASSIFICATION	// Scan backwards, trying to find a bracket
WITHOUT_CLASSIFICATION	//{{{ Selection
WITHOUT_CLASSIFICATION	//{{{ selectLine() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionCount() method
WITHOUT_CLASSIFICATION	//{{{ selectParagraph() method
WITHOUT_CLASSIFICATION	// We can't do the backward scan if start == 0
WITHOUT_CLASSIFICATION	//{{{ selectWord() method
WITHOUT_CLASSIFICATION	// to hide current line highlight
WITHOUT_CLASSIFICATION	//{{{ selectToMatchingBracket() method
WITHOUT_CLASSIFICATION	//{{{ selectToMatchingBracket() method
WITHOUT_CLASSIFICATION	// Reset count
WITHOUT_CLASSIFICATION	//{{{ selectBlock() method
WITHOUT_CLASSIFICATION	//{{{ setSelection() method
WITHOUT_CLASSIFICATION	//{{{ setSelection() method
WITHOUT_CLASSIFICATION	// Scan forward, matching that bracket
WITHOUT_CLASSIFICATION	// to hide current line highlight
WITHOUT_CLASSIFICATION	//{{{ lineInStructureScope() method
WITHOUT_CLASSIFICATION	// invalidate the old selection
WITHOUT_CLASSIFICATION	//{{{ invertSelection() method
WITHOUT_CLASSIFICATION	//{{{ addToSelection() method
WITHOUT_CLASSIFICATION	//{{{ addToSelection() method
WITHOUT_CLASSIFICATION	// to hide current line highlight
WITHOUT_CLASSIFICATION	// to hide current line highlight
WITHOUT_CLASSIFICATION	//{{{ getSelectionAtOffset() method
WITHOUT_CLASSIFICATION	//{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ removeFromSelection() method
WITHOUT_CLASSIFICATION	//{{{ removeFromSelection() method
WITHOUT_CLASSIFICATION	//{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ resizeSelection() method
WITHOUT_CLASSIFICATION	//{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ extendSelection() method
WITHOUT_CLASSIFICATION	//{{{ extendSelection() method
WITHOUT_CLASSIFICATION	//{{{ Caret
WITHOUT_CLASSIFICATION	//{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	// no no no!!!! //selectNone(); //}}}
WITHOUT_CLASSIFICATION	//{{{ setCaretPosition() method
WITHOUT_CLASSIFICATION	// for compatibility with older jEdit versions
WITHOUT_CLASSIFICATION	//{{{ addStructureMatcher() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedLines() method
WITHOUT_CLASSIFICATION	//{{{ setCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ showSelectLineRangeDialog() method
WITHOUT_CLASSIFICATION	//{{{ removeStructureMatcher() method
WITHOUT_CLASSIFICATION	//{{{ getStructureMatch() method
WITHOUT_CLASSIFICATION	//{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ blinkCaret() method
WITHOUT_CLASSIFICATION	//{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ centerCaret() method
WITHOUT_CLASSIFICATION	//{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ getCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ getCaretLine() method
WITHOUT_CLASSIFICATION	//{{{ goToNextParagraph() method
WITHOUT_CLASSIFICATION	//{{{ getMagicCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ setMagicCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ goToNextWord() method
WITHOUT_CLASSIFICATION	//{{{ addCaretListener() method
WITHOUT_CLASSIFICATION	//{{{ goToNextWord() method
WITHOUT_CLASSIFICATION	//{{{ removeCaretListener() method
WITHOUT_CLASSIFICATION	//{{{ smartHome() method
WITHOUT_CLASSIFICATION	//{{{ goToNextBracket() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevBracket() method
WITHOUT_CLASSIFICATION	//{{{ goToNextLine() method
WITHOUT_CLASSIFICATION	//{{{ goToFirstVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ goToNextMarker() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevLine() method
WITHOUT_CLASSIFICATION	//{{{ goToNextPage() method
WITHOUT_CLASSIFICATION	//case 3:
WITHOUT_CLASSIFICATION	//case 3:
WITHOUT_CLASSIFICATION	//{{{ goToPrevMarker() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevPage() method
WITHOUT_CLASSIFICATION	//{{{ smartEnd() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevParagraph() method
WITHOUT_CLASSIFICATION	//{{{ goToLastVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevWord() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevWord() method
WITHOUT_CLASSIFICATION	//{{{ goToStartOfLine() method
WITHOUT_CLASSIFICATION	//{{{ goToEndOfLine() method
WITHOUT_CLASSIFICATION	//{{{ goToBufferStart() method
WITHOUT_CLASSIFICATION	//{{{ goToStartOfWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ goToEndOfWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ goToBufferEnd() method
WITHOUT_CLASSIFICATION	//{{{ addMarker() method
WITHOUT_CLASSIFICATION	//{{{ delete() method
WITHOUT_CLASSIFICATION	//{{{ isMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ userInput() method
WITHOUT_CLASSIFICATION	//{{{ deleteParagraph() method
WITHOUT_CLASSIFICATION	//{{{ goToMatchingBracket() method
WITHOUT_CLASSIFICATION	//{{{ toggleOverwriteEnabled() method
WITHOUT_CLASSIFICATION	//{{{ showGoToLineDialog() method
WITHOUT_CLASSIFICATION	//{{{ User input
WITHOUT_CLASSIFICATION	//{{{ backspace() method
WITHOUT_CLASSIFICATION	// check if the user entered a bracket
WITHOUT_CLASSIFICATION	//{{{ deleteToStartOfLine() method
WITHOUT_CLASSIFICATION	//{{{ isOverwriteEnabled() method
WITHOUT_CLASSIFICATION	//{{{ backspaceWord() method
WITHOUT_CLASSIFICATION	//{{{ setOverwriteEnabled() method
WITHOUT_CLASSIFICATION	//{{{ backspaceWord() method
WITHOUT_CLASSIFICATION	//{{{ toggleRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ deleteToEndOfLine() method
WITHOUT_CLASSIFICATION	//{{{ deleteWord() method
WITHOUT_CLASSIFICATION	//{{{ deleteLine() method
WITHOUT_CLASSIFICATION	//{{{ deleteWord() method
WITHOUT_CLASSIFICATION	// otherwise a bunch of consecutive C+d's would be merged // into one edit
WITHOUT_CLASSIFICATION	//{{{ swapMarkerAndCaret() method
WITHOUT_CLASSIFICATION	//{{{ setRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ toggleMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ Markers
WITHOUT_CLASSIFICATION	//{{{ isRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ Folding
WITHOUT_CLASSIFICATION	//{{{ goToMarker() method
WITHOUT_CLASSIFICATION	// always add markers on selected lines
WITHOUT_CLASSIFICATION	// toggle marker on caret line
WITHOUT_CLASSIFICATION	//{{{ removeTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ shiftIndentLeft() method
WITHOUT_CLASSIFICATION	//{{{ shiftIndentRight() method
WITHOUT_CLASSIFICATION	//{{{ spacesToTabs() method
WITHOUT_CLASSIFICATION	//{{{ tabsToSpaces() method
WITHOUT_CLASSIFICATION	//{{{ formatParagraph() method
WITHOUT_CLASSIFICATION	//{{{ collapseFold() method
WITHOUT_CLASSIFICATION	//{{{ expandFold() method
WITHOUT_CLASSIFICATION	//{{{ toUpperCase() method
WITHOUT_CLASSIFICATION	//{{{ goToParentFold() method
WITHOUT_CLASSIFICATION	//{{{ narrowToFold() method
WITHOUT_CLASSIFICATION	//{{{ goToNextFold() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevFold() method
WITHOUT_CLASSIFICATION	//{{{ narrowToSelection() method
WITHOUT_CLASSIFICATION	//{{{ selectFold() method
WITHOUT_CLASSIFICATION	//{{{ selectFold() method
WITHOUT_CLASSIFICATION	//{{{ toLowerCase() method
WITHOUT_CLASSIFICATION	//{{{ addExplicitFold() method
WITHOUT_CLASSIFICATION	//{{{ showWordCountDialog() method
WITHOUT_CLASSIFICATION	//{{{ insertEnterAndIndent() method
WITHOUT_CLASSIFICATION	//{{{ Text editing
WITHOUT_CLASSIFICATION	//{{{ lineComment() method
WITHOUT_CLASSIFICATION	//{{{ insertTabAndIndent() method
WITHOUT_CLASSIFICATION	//{{{ rangeComment() method
WITHOUT_CLASSIFICATION	//{{{ Right click popup
WITHOUT_CLASSIFICATION	// if caret is inside leading whitespace, indent.
WITHOUT_CLASSIFICATION	//{{{ isRightClickPopupEnabled() method
WITHOUT_CLASSIFICATION	//{{{ indentSelectedLines() method
WITHOUT_CLASSIFICATION	//{{{ joinLines() method
WITHOUT_CLASSIFICATION	//{{{ setRightClickPopupEnabled() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Deprecated methods
WITHOUT_CLASSIFICATION	//{{{ AWT stuff
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getRightClickPopup() method
WITHOUT_CLASSIFICATION	//{{{ addLeftOfScrollBar() method
WITHOUT_CLASSIFICATION	//{{{ setRightClickPopup() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionStartLine() method
WITHOUT_CLASSIFICATION	//{{{ handlePopupTrigger() method
WITHOUT_CLASSIFICATION	//{{{ getMarkLine() method
WITHOUT_CLASSIFICATION	//{{{ removeLeftOfScrollBar() method
WITHOUT_CLASSIFICATION	//{{{ setSelectionStart() method
WITHOUT_CLASSIFICATION	//{{{ getFocusCycleRoot() method
WITHOUT_CLASSIFICATION	//{{{ addTopComponent() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionEnd() method
WITHOUT_CLASSIFICATION	//{{{ removeTopComponent() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionEnd() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionStart() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionStart() method
WITHOUT_CLASSIFICATION	//{{{ select() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionEndLine() method
WITHOUT_CLASSIFICATION	//{{{ select() method
WITHOUT_CLASSIFICATION	//{{{ setSelectionEnd() method
WITHOUT_CLASSIFICATION	//{{{ getMarkPosition() method
WITHOUT_CLASSIFICATION	//{{{ isSelectionRectangular() method
WITHOUT_CLASSIFICATION	// used to store offsetToXY() results
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	// this does the "trick" to eliminate blank space at the end
WITHOUT_CLASSIFICATION	//{{{ isCaretVisible() method
WITHOUT_CLASSIFICATION	/* on JDK 1.4, this is set to a method by Java14. The method must take	* these parameters:	* - a JEditTextArea	* - an InputEvent	* - a boolean (copy text or move, depending on modifier user held down)	*/
WITHOUT_CLASSIFICATION	//{{{ isStructureHighlightVisible() method
WITHOUT_CLASSIFICATION	//{{{ foldStructureChanged() method
WITHOUT_CLASSIFICATION	//{{{ updateMaxHorizontalScrollWidth() method
WITHOUT_CLASSIFICATION	// in case one of the above fails, we still want to // clear these flags.
WITHOUT_CLASSIFICATION	//{{{ recalculateVisibleLines() method
WITHOUT_CLASSIFICATION	//{{{ finishCaretUpdate() method
WITHOUT_CLASSIFICATION	//{{{ updateScrollBars() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionStartEndOnLine() method
WITHOUT_CLASSIFICATION	//{{{ _finishCaretUpdate() method
WITHOUT_CLASSIFICATION	// see finishCaretUpdate() & _finishCaretUpdate()
WITHOUT_CLASSIFICATION	/* called by DisplayManager.BufferChangeHandler.transactionComplete() */
WITHOUT_CLASSIFICATION	//{{{ insideSelection() method
WITHOUT_CLASSIFICATION	// When the user is typing, etc, we don't want the caret // to blink
WITHOUT_CLASSIFICATION	// JDiff, error list add stuff here
WITHOUT_CLASSIFICATION	/* otherwise DisplayManager.BufferChangeHandler calls */
WITHOUT_CLASSIFICATION	//{{{ startDragAndDrop() method // calls dndCallback via reflection
WITHOUT_CLASSIFICATION	//{{{ doWordWrap() method
WITHOUT_CLASSIFICATION	//{{{ _addToSelection() method
WITHOUT_CLASSIFICATION	//{{{ updateStructureHighlightWithDelay() method
WITHOUT_CLASSIFICATION	//{{{ fireCaretEvent() method
WITHOUT_CLASSIFICATION	/* only ever return true if space was pressed		 * with logicalLength == maxLineLen */
WITHOUT_CLASSIFICATION	//{{{ fireScrollEvent() method
WITHOUT_CLASSIFICATION	//{{{ insertTab() method
WITHOUT_CLASSIFICATION	//{{{ doWordCount() method
WITHOUT_CLASSIFICATION	//{{{ updateStructureHighlight() method
WITHOUT_CLASSIFICATION	// Fix bug #922951 Off-by-one error in Word Count
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ FocusHandler class
WITHOUT_CLASSIFICATION	//{{{ paintBorder() method
WITHOUT_CLASSIFICATION	//{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	//{{{ delete() method
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	//{{{ removeLayoutComponent() method
WITHOUT_CLASSIFICATION	//{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	//case 3:
WITHOUT_CLASSIFICATION	//{{{ recalculateLastPhysicalLine() method
WITHOUT_CLASSIFICATION	// only wrap if we're at the end of a line, or the rest of the // line text is whitespace
WITHOUT_CLASSIFICATION	//{{{ showStructureStatusMessage() method
WITHOUT_CLASSIFICATION	// last character before wrap // length with tabs expanded
WITHOUT_CLASSIFICATION	//{{{ ScrollLayout class
WITHOUT_CLASSIFICATION	// caretLine would have been incremented // since insertNewLineAt <= caretPos
WITHOUT_CLASSIFICATION	// get rid of embedded tabs not removed by trim()
WITHOUT_CLASSIFICATION	//{{{ shiftTallCaretLeft() method
WITHOUT_CLASSIFICATION	//{{{ getRectParams() method
WITHOUT_CLASSIFICATION	//{{{ focusGained() method
WITHOUT_CLASSIFICATION	//{{{ tallCaretDelete() method
WITHOUT_CLASSIFICATION	//{{{ TextAreaBorder class
WITHOUT_CLASSIFICATION	//{{{ CaretBlinker class
WITHOUT_CLASSIFICATION	//{{{ MutableCaretEvent constructor
WITHOUT_CLASSIFICATION	//{{{ MutableCaretEvent class
WITHOUT_CLASSIFICATION	//{{{ getMark() method
WITHOUT_CLASSIFICATION	//{{{ getDot() method
WITHOUT_CLASSIFICATION	//{{{ adjustmentValueChanged() method
WITHOUT_CLASSIFICATION	//{{{ AdjustHandler class
WITHOUT_CLASSIFICATION	// XXX: getMarkPosition() deprecated!
WITHOUT_CLASSIFICATION	/* with drag and drop on, a mouse down in a selection does not		immediately deselect */
WITHOUT_CLASSIFICATION	//{{{ focusLost() method
WITHOUT_CLASSIFICATION	//{{{ doSingleClick() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	//case 3:
WITHOUT_CLASSIFICATION	// so that Home <mouse click> Home is not the same // as pressing Home twice in a row
WITHOUT_CLASSIFICATION	// control-click in virtual space inserts // whitespace and moves caret
WITHOUT_CLASSIFICATION	// so that shift-click-drag works
WITHOUT_CLASSIFICATION	// so that quick copy works
WITHOUT_CLASSIFICATION	//{{{ doDoubleClick() method
WITHOUT_CLASSIFICATION	// Ignore empty lines
WITHOUT_CLASSIFICATION	//{{{ doTripleClick() method
WITHOUT_CLASSIFICATION	//{{{ doSingleDrag() method
WITHOUT_CLASSIFICATION	// just scroll to the dragged location
WITHOUT_CLASSIFICATION	//{{{ doDoubleDrag() method
WITHOUT_CLASSIFICATION	//{{{ doTripleDrag() method
WITHOUT_CLASSIFICATION	// middle mouse button drag inserts selection // at caret position
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ setBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ recalculateVisibleLines() method
WITHOUT_CLASSIFICATION	//{{{ xToSubregionOffset() method
WITHOUT_CLASSIFICATION	//{{{ ChunkCache constructor
WITHOUT_CLASSIFICATION	//return -1;
WITHOUT_CLASSIFICATION	//{{{ getMaxHorizontalScrollWidth() method
WITHOUT_CLASSIFICATION	//{{{ invalidateChunksFromPhys() method
WITHOUT_CLASSIFICATION	// Find the screen line containing this offset
WITHOUT_CLASSIFICATION	//{{{ scrollDown() method
WITHOUT_CLASSIFICATION	// line is invisible?
WITHOUT_CLASSIFICATION	//{{{ xToSubregionOffset() method
WITHOUT_CLASSIFICATION	//{{{ scrollUp() method
WITHOUT_CLASSIFICATION	//{{{ subregionOffsetToX() method
WITHOUT_CLASSIFICATION	//{{{ invalidateAll() method
WITHOUT_CLASSIFICATION	//{{{ getLineInfo() method
WITHOUT_CLASSIFICATION	//{{{ invalidateChunksFrom() method
WITHOUT_CLASSIFICATION	//{{{ subregionOffsetToX() method
WITHOUT_CLASSIFICATION	//{{{ getLineSubregionCount() method
WITHOUT_CLASSIFICATION	//{{{ getBelowPosition() method
WITHOUT_CLASSIFICATION	//{{{ getSubregionOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ updateChunksUpTo() method
WITHOUT_CLASSIFICATION	//{{{ getSubregionStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ getAbovePosition() method
WITHOUT_CLASSIFICATION	//{{{ getSubregionEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ needFullRepaint() method
WITHOUT_CLASSIFICATION	//{{{ getLineInfosForPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ getLineInfosForPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ clone() method
WITHOUT_CLASSIFICATION	// Note that we rely on the fact that when a physical line is // invalidated, all screen lines/subregions of that line are // invalidated as well. See below comment for code that tries // to uphold this assumption.
WITHOUT_CLASSIFICATION	// find a valid line closest to the last screen line
WITHOUT_CLASSIFICATION	// otherwise, determine the next visible line
WITHOUT_CLASSIFICATION	// for the first line displayed, take its physical line to be // the text area's first physical line
WITHOUT_CLASSIFICATION	/* if the user changes the syntax token at the				 * end of a line, need to do a full repaint. */
WITHOUT_CLASSIFICATION	// if -1, the empty space at the end of the text area // when the buffer has less lines than are visible
WITHOUT_CLASSIFICATION	// empty space
WITHOUT_CLASSIFICATION	// get another line of chunks
WITHOUT_CLASSIFICATION	// if the line has no text, out.size() == 0
WITHOUT_CLASSIFICATION	// unless this is the first time, increment // the line number
WITHOUT_CLASSIFICATION	// fix the bug where the horiz. // scroll bar was not updated // after creating a new file.
WITHOUT_CLASSIFICATION	/* We only cache entire physical lines at once;				 * don't want to split a physical line into				 * screen lines and only have some valid. */
WITHOUT_CLASSIFICATION	// chunk the line.
WITHOUT_CLASSIFICATION	// otherwise, the number of subregions
WITHOUT_CLASSIFICATION	/* If this line has become longer or shorter				 * (in which case the new physical line number				 * is different from the cached one) we need to:				 * - continue updating past the last line				 * - advise the text area to repaint				 * On the other hand, if the line wraps beyond				 * lastScreenLine, we need to keep updating the				 * chunk list to ensure proper alignment of				 * invalidation flags (see start of method) */
WITHOUT_CLASSIFICATION	//{{{ LineInfo class
WITHOUT_CLASSIFICATION	//{{{ getStartLine() method
WITHOUT_CLASSIFICATION	//{{{ lineToChunkList() method
WITHOUT_CLASSIFICATION	//{{{ getEnd() method
WITHOUT_CLASSIFICATION	//{{{ getStart() method
WITHOUT_CLASSIFICATION	//{{{ getStart() method
WITHOUT_CLASSIFICATION	//{{{ getEnd() method
WITHOUT_CLASSIFICATION	//{{{ Selection constructor
WITHOUT_CLASSIFICATION	//{{{ overlaps() method
WITHOUT_CLASSIFICATION	//{{{ getEndLine() method
WITHOUT_CLASSIFICATION	//{{{ Selection constructor
WITHOUT_CLASSIFICATION	//{{{ Selection constructor
WITHOUT_CLASSIFICATION	//{{{ Range class
WITHOUT_CLASSIFICATION	//{{{ Range constructor
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ setText() method
WITHOUT_CLASSIFICATION	//{{{ setText() method
WITHOUT_CLASSIFICATION	//{{{ getColumnOnOtherLine() method
WITHOUT_CLASSIFICATION	//{{{ getStart() method
WITHOUT_CLASSIFICATION	//{{{ getStart() method
WITHOUT_CLASSIFICATION	//{{{ getEnd() method
WITHOUT_CLASSIFICATION	//{{{ getEnd() method
WITHOUT_CLASSIFICATION	//{{{ Range constructor
WITHOUT_CLASSIFICATION	//{{{ Range constructor
WITHOUT_CLASSIFICATION	//{{{ Move the caret down a line
WITHOUT_CLASSIFICATION	//{{{ Rect class
WITHOUT_CLASSIFICATION	//{{{ getStartColumn() method
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ getEndColumn() method
WITHOUT_CLASSIFICATION	//{{{ Split the text into lines
WITHOUT_CLASSIFICATION	//{{{ Insert the lines into the buffer
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Constants
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	//{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ removeExtension() method
WITHOUT_CLASSIFICATION	//{{{ getExtensions() method
WITHOUT_CLASSIFICATION	// notify a running waitForRequests() method
WITHOUT_CLASSIFICATION	// wait for more requests
WITHOUT_CLASSIFICATION	// status message changed, operation started, operation ends, ...
WITHOUT_CLASSIFICATION	// progress bar value change
WITHOUT_CLASSIFICATION	// Log some stuff
WITHOUT_CLASSIFICATION	//{{{ setLogWriter() method
WITHOUT_CLASSIFICATION	// do nothing, who cares
WITHOUT_CLASSIFICATION	//{{{ flushStream() method
WITHOUT_CLASSIFICATION	//{{{ closeStream() method
WITHOUT_CLASSIFICATION	//{{{ getLogListModel() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ waitForRequests() method
WITHOUT_CLASSIFICATION	//{{{ getRequestCount() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ CharIndexedSegment constructor
WITHOUT_CLASSIFICATION	// remove it so editor can continue // functioning
WITHOUT_CLASSIFICATION	//{{{ log() method
WITHOUT_CLASSIFICATION	// so that jEdit doesn't exit with no views open automatically //setDaemon(true);
WITHOUT_CLASSIFICATION	//{{{ CharIndexedSegment constructor
WITHOUT_CLASSIFICATION	// If multiple threads log stuff, we don't want // the output to get mixed up
WITHOUT_CLASSIFICATION	/* not really needed since threads don't start until after */
WITHOUT_CLASSIFICATION	//{{{ createPrintStream() method
WITHOUT_CLASSIFICATION	//{{{ charAt() method
WITHOUT_CLASSIFICATION	//{{{ _logException() method
WITHOUT_CLASSIFICATION	//{{{ _log() method
WITHOUT_CLASSIFICATION	//{{{ isValid() method
WITHOUT_CLASSIFICATION	//{{{ LogListModel class
WITHOUT_CLASSIFICATION	//{{{ addWorkRequest() method
WITHOUT_CLASSIFICATION	// do any queued AWT runnables
WITHOUT_CLASSIFICATION	//{{{ move() method
WITHOUT_CLASSIFICATION	//{{{ if there are no requests, execute AWT requests immediately
WITHOUT_CLASSIFICATION	//{{{ WorkThreadPool constructor
WITHOUT_CLASSIFICATION	//{{{ fireStatusChanged() method
WITHOUT_CLASSIFICATION	//{{{ getThreadCount() method
WITHOUT_CLASSIFICATION	//				Log.log(Log.DEBUG,this,"AWT immediate: " + run);
WITHOUT_CLASSIFICATION	//{{{ Add to AWT queue...
WITHOUT_CLASSIFICATION	//{{{ getThread() method
WITHOUT_CLASSIFICATION	//{{{ addProgressListener() method
WITHOUT_CLASSIFICATION	//{{{ removeProgressListener() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ readLock() method
WITHOUT_CLASSIFICATION	//{{{ readUnlock() method
WITHOUT_CLASSIFICATION	//{{{ writeLock() method
WITHOUT_CLASSIFICATION	//{{{ writeUnlock() method
WITHOUT_CLASSIFICATION	//{{{ ensureCapacity() method
WITHOUT_CLASSIFICATION	// AWT thread magic
WITHOUT_CLASSIFICATION	//}}} //{{{ Add to work thread queue...
WITHOUT_CLASSIFICATION	//{{{ queueAWTRunner() method
WITHOUT_CLASSIFICATION	//{{{ fireProgressChanged() method
WITHOUT_CLASSIFICATION	//{{{ doAWTRequests() method
WITHOUT_CLASSIFICATION	//{{{ requestDone() method
WITHOUT_CLASSIFICATION	//{{{ RunRequestsInAWTThread class
WITHOUT_CLASSIFICATION	//{{{ getNextRequest() method
WITHOUT_CLASSIFICATION	//{{{ doAWTRequest() method
WITHOUT_CLASSIFICATION	// Request queue
WITHOUT_CLASSIFICATION	//			Log.log(Log.DEBUG,this,"AWT runner queued");
WITHOUT_CLASSIFICATION	//readers.removeElement(Thread.currentThread());
WITHOUT_CLASSIFICATION	//		Log.log(Log.DEBUG,this,"Running in AWT thread: " + request);
WITHOUT_CLASSIFICATION	//{{{ SegmentBuffer constructor
WITHOUT_CLASSIFICATION	//{{{ getNextAWTRequest() method
WITHOUT_CLASSIFICATION	//{{{ allowRead() method
WITHOUT_CLASSIFICATION	//{{{ Request class
WITHOUT_CLASSIFICATION	// Write in progress.
WITHOUT_CLASSIFICATION	//readers.addElement(Thread.currentThread());
WITHOUT_CLASSIFICATION	// Roll back state.
WITHOUT_CLASSIFICATION	//{{{ allowWrite() method
WITHOUT_CLASSIFICATION	// Same thread.
WITHOUT_CLASSIFICATION	//{{{ isWriteLocked() method
WITHOUT_CLASSIFICATION	//{{{ claimWriteLock() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ clear() method
WITHOUT_CLASSIFICATION	//{{{ getSize() method
WITHOUT_CLASSIFICATION	//case ClassWriter.FIELD: //case ClassWriter.METH: //case ClassWriter.IMETH:
WITHOUT_CLASSIFICATION	//{{{ IntegerArray constructor
WITHOUT_CLASSIFICATION	//{{{ IntegerArray constructor
WITHOUT_CLASSIFICATION	//{{{ get() method
WITHOUT_CLASSIFICATION	//{{{ setSize() method
WITHOUT_CLASSIFICATION	//{{{ getArray() method
WITHOUT_CLASSIFICATION	/** * A constant pool item. Constant pool items can be created with the 'newXXX' * methods in the {@link ClassWriter} class. */
WITHOUT_CLASSIFICATION	// ------------------------------------------------------------------------- // Special instructions // -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------------------------------------- // Exceptions table entries, max stack size and max locals // -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------------------------------------- // Debug information // -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Fields for the control flow graph analysis algorithm (used to compute the // maximum stack size). A control flow graph contains one node per "basic // block", and one edge per "jump" from one basic block to another. Each node // (i.e., each basic block) is represented by the Label object that // corresponds to the first instruction of this basic block. Each node also // stores the list of it successors in the graph, as a linked list of Edge // objects. // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Constructor // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Methods to compute offsets and to manage forward references // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// changes the opcode of the jump instruction, in order to be able to // find it later (see resizeInstructions in CodeWriter). These // temporary opcodes are similar to jump instruction opcodes, except // that the 2 bytes offset is unsigned (and can therefore represent // values from 0 to 65535, which is sufficient since the size of a // method is limited to 65535 bytes).
WITHOUT_CLASSIFICATION	// changes IFEQ ... JSR to opcodes 202 to 217 (inclusive)
WITHOUT_CLASSIFICATION	// changes IFNULL and IFNONNULL to opcodes 218 and 219 (inclusive)
WITHOUT_CLASSIFICATION	// updates maxLocals
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Constructors // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	//case 'L':
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Accessors // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	//case ARRAY: //case OBJECT:
WITHOUT_CLASSIFICATION	//case ARRAY: //case OBJECT:
WITHOUT_CLASSIFICATION	//case ARRAY: //case OBJECT:
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Direct conversion from classes to type descriptors, // without intermediate Type objects // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Corresponding size and opcodes // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Static initializer // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// pushes the first block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// if opcode == ATHROW or xRETURN, ends current block (no successor)
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// BIPUSH or NEWARRAY
WITHOUT_CLASSIFICATION	// no stack change, but end of current block (no successor)
WITHOUT_CLASSIFICATION	// xLOAD or xSTORE
WITHOUT_CLASSIFICATION	// updates max locals
WITHOUT_CLASSIFICATION	/*ILOAD_0*/
WITHOUT_CLASSIFICATION	/*ISTORE_0*/
WITHOUT_CLASSIFICATION	/*WIDE*/
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// computes the stack size variation
WITHOUT_CLASSIFICATION	// updates current and max stack sizes only if opcode == NEWARRAY // (stack size variation = 0 for BIPUSH or SIPUSH)
WITHOUT_CLASSIFICATION	/*WIDE*/
WITHOUT_CLASSIFICATION	// updates current and max stack sizes only if opcode == NEW // (stack size variation = 0 for ANEWARRAY, CHECKCAST, INSTANCEOF)
WITHOUT_CLASSIFICATION	//case Constants.PUTFIELD:
WITHOUT_CLASSIFICATION	// computes the stack size variation
WITHOUT_CLASSIFICATION	// computes the stack size variation. In order not to recompute several // times this variation for the same Item, we use the intVal field of // this item to store this variation, once it has been computed. More // precisely this intVal field stores the sizes of the arguments and of // the return value corresponding to desc.
WITHOUT_CLASSIFICATION	// JSR_W
WITHOUT_CLASSIFICATION	// the above sizes have not been computed yet, so we compute them...
WITHOUT_CLASSIFICATION	// ... and we save them in order not to recompute them in the future
WITHOUT_CLASSIFICATION	// no stack change, but end of current block (with one new successor)
WITHOUT_CLASSIFICATION	// GOTO_W
WITHOUT_CLASSIFICATION	// ends current block (with one new successor)
WITHOUT_CLASSIFICATION	// resolves previous forward references to label, if any
WITHOUT_CLASSIFICATION	/*LDC2_W*/
WITHOUT_CLASSIFICATION	/*LDC_W*/
WITHOUT_CLASSIFICATION	// updates max locals only (no stack change)
WITHOUT_CLASSIFICATION	// updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	// updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	// ends current block (with many new successors)
WITHOUT_CLASSIFICATION	// ends current block (with many new successors)
WITHOUT_CLASSIFICATION	// jump offset // GOTO_W
WITHOUT_CLASSIFICATION	// case of a backward jump with an offset >= -32768, or of a forward jump // with, of course, an unknown offset. In these cases we store the offset // in 2 bytes (which will be increased in resizeInstructions, if needed).
WITHOUT_CLASSIFICATION	// begins a new current block, // resets the relative current and max stack sizes
WITHOUT_CLASSIFICATION	// updates current stack size (max stack size unchanged because stack // size variation always negative or null)
WITHOUT_CLASSIFICATION	// pushes handler block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	// true (non relative) max stack size
WITHOUT_CLASSIFICATION	// pops a block from the stack
WITHOUT_CLASSIFICATION	// computes the true (non relative) max stack size of this block
WITHOUT_CLASSIFICATION	// updates the global max stack size
WITHOUT_CLASSIFICATION	// analyses the successors of the block
WITHOUT_CLASSIFICATION	// if this successor has not already been pushed onto the stack...
WITHOUT_CLASSIFICATION	// computes the true beginning stack size of this successor block
WITHOUT_CLASSIFICATION	// pushes this successor onto the stack
WITHOUT_CLASSIFICATION	// releases all the Edge objects used by this CodeWriter
WITHOUT_CLASSIFICATION	// appends the [head ... tail] list at the beginning of the pool list
WITHOUT_CLASSIFICATION	// creates a new Edge object or reuses one from the shared pool
WITHOUT_CLASSIFICATION	// removes b from the pool
WITHOUT_CLASSIFICATION	// adds the previous Edge to the list of Edges used by this CodeWriter
WITHOUT_CLASSIFICATION	// initializes the previous Edge object...
WITHOUT_CLASSIFICATION	// ...and adds it to the successor list of the currentBlock block
WITHOUT_CLASSIFICATION	// replaces the temporary jump opcodes introduced by Label.resolve.
WITHOUT_CLASSIFICATION	// replaces old bytecodes with new ones
WITHOUT_CLASSIFICATION	// returns the positions of the resized instructions
WITHOUT_CLASSIFICATION	// forward jump
WITHOUT_CLASSIFICATION	// backward jump
WITHOUT_CLASSIFICATION	// access flags
WITHOUT_CLASSIFICATION	// types for NEWARRAY
WITHOUT_CLASSIFICATION	// JSR_W
WITHOUT_CLASSIFICATION	// over estimation of the number of bytes to be added to this // instruction = 3 - current number of padding bytes = 3 - (3 - // u%4) = u%4 = u & 3
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Utility methods: instruction resizing (used to handle GOTO_W and JSR_W) // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// bytecode of the method // indexes in b // loop indexes
WITHOUT_CLASSIFICATION	// 3 = loop again, 2 = loop ended, 1 = last pass, 0 = done
WITHOUT_CLASSIFICATION	// two additional bytes will be required to replace this // GOTO or JSR instruction with a GOTO_W or a JSR_W
WITHOUT_CLASSIFICATION	// opcode of current instruction // bytes to be added after this instruction
WITHOUT_CLASSIFICATION	// true number of bytes to be added (or removed) from this // instruction = (future number of padding bytes - current number // of padding byte) - previously over estimated variation = // = ((3 - newOffset%4) - (3 - u%4)) - u%4 // = (-newOffset%4 + u%4) - u%4 // = -(newOffset & 3)
WITHOUT_CLASSIFICATION	// converts temporary opcodes 202 to 217 (inclusive), 218 and 219 // to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL
WITHOUT_CLASSIFICATION	// five additional bytes will be required to replace this // IFxxx <l> instruction with IFNOTxxx <l'> GOTO_W <l>, where // IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for // IFEQ) and where <l'> designates the instruction just after // the GOTO_W.
WITHOUT_CLASSIFICATION	// like TABL_INSN
WITHOUT_CLASSIFICATION	// like TABL_INSN
WITHOUT_CLASSIFICATION	// skips instruction
WITHOUT_CLASSIFICATION	// skips instruction
WITHOUT_CLASSIFICATION	// adds a new (u, insert) entry in the allIndexes and allSizes arrays
WITHOUT_CLASSIFICATION	// replaces GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> with // IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode // of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the // instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	// case ClassWriter.MANA_INSN:
WITHOUT_CLASSIFICATION	// changes temporary opcodes 202 to 217 (inclusive), 218 and 219 // to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL
WITHOUT_CLASSIFICATION	// 2nd step: // copies the bytecode of the method into a new bytevector, updates the // offsets, and inserts (or removes) bytes as requested.
WITHOUT_CLASSIFICATION	// reads and copies instruction
WITHOUT_CLASSIFICATION	// skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	// jump offset // GOTO_W // newOffset now computed from start of GOTO_W
WITHOUT_CLASSIFICATION	// skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	// reads and copies instruction
WITHOUT_CLASSIFICATION	// updates the instructions addresses in the // catch, local var and line number tables
WITHOUT_CLASSIFICATION	// case MANA_INSN:
WITHOUT_CLASSIFICATION	// opcodes                  // visit method (- = idem)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// scan from selection to end failed, so // scan from start to selection
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Constructor // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Static initializer // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Implementation of the ClassVisitor interface // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Other public methods // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// computes the real size of the bytecode of this class
WITHOUT_CLASSIFICATION	// allocates a byte vector of this size, in order to avoid unnecessary // arraycopy operations in the ByteVector.enlarge() method
WITHOUT_CLASSIFICATION	// special case: no current development version
WITHOUT_CLASSIFICATION	// end AbstractOptionPane implementation
WITHOUT_CLASSIFICATION	// begin ActionListener implementation
WITHOUT_CLASSIFICATION	// helper method to get Font from plugin properties
WITHOUT_CLASSIFICATION	// // Constructor //
WITHOUT_CLASSIFICATION	// // Attribute methods //
WITHOUT_CLASSIFICATION	// for toolbar display
WITHOUT_CLASSIFICATION	// // EBComponent implementation //
WITHOUT_CLASSIFICATION	// These JComponent methods provide the appropriate points // to subscribe and unsubscribe this object to the EditBus
WITHOUT_CLASSIFICATION	// // QuickNotepadActions implementation //
WITHOUT_CLASSIFICATION	// // Listener objects //
WITHOUT_CLASSIFICATION	// <Esc> closes a floating window
WITHOUT_CLASSIFICATION	// cwd not implemented in this version
WITHOUT_CLASSIFICATION	// end JcmdProcess.java
WITHOUT_CLASSIFICATION	/* Get full command line */
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// we remember which classes we don't exist // because BeanShell tries loading all possible // <imported prefix>.<class name> combinations
WITHOUT_CLASSIFICATION	// if it's not in the class hash, and not marked as // non-existent, try loading it from the CLASSPATH
WITHOUT_CLASSIFICATION	// To avoid any problems if components are added or removed // while the message is being sent
WITHOUT_CLASSIFICATION	// Some Java versions return the clipboard // contents using the native line separator, // so have to convert it here
WITHOUT_CLASSIFICATION	// Either class sun.tools.javac.Main or // com.sun.tools.javac.Main must be there:
WITHOUT_CLASSIFICATION	// Stop script kiddies from opening the edit // server port and just leaving it open, as a // DoS
WITHOUT_CLASSIFICATION	// coming out of background mode. // no views open. // no buffers open if args empty.
WITHOUT_CLASSIFICATION	// since recentBuffer will be set to the one that // was closed
WITHOUT_CLASSIFICATION	// - don't do these checks while a save is in progress, // because for a moment newModTime will be greater than // oldModTime, due to the multithreading // - only supported on local file system
WITHOUT_CLASSIFICATION	// this ensures that undo can clear the dirty flag properly // when all edits up to a save are undone
WITHOUT_CLASSIFICATION	// note that if firstLine == lastLine, loop does not // execute
WITHOUT_CLASSIFICATION	// fill in defaults for these from system properties if the // corresponding buffer.XXX properties not set
WITHOUT_CLASSIFICATION	// create a DirectoryEntry manually // instead of using _vfs._getDirectoryEntry() // since so many VFS's have broken // implementations of this method
WITHOUT_CLASSIFICATION	// Java does not support this encoding so // we have to handle it manually.
WITHOUT_CLASSIFICATION	// file begins with UTF-8-Y signature. // discard the signature, and read // the remainder as UTF-8.
WITHOUT_CLASSIFICATION	// fix for "[ 865589 ] 0-byte files should open using // the default line seperator"
WITHOUT_CLASSIFICATION	// // helper methods //
WITHOUT_CLASSIFICATION	/* call sendBreak after fixed number of			 * lines of stdout are read			 */
WITHOUT_CLASSIFICATION	// end JcmdProcessTest.java
WITHOUT_CLASSIFICATION	// Big enough for a \r\n pair // lookBehind[0] = most recent // lookBehind[1] = second most recent
WITHOUT_CLASSIFICATION	// Is this it? // Is the class public or can we use accessibility?
WITHOUT_CLASSIFICATION	// we don't know the right hand side of the assignment yet. // has at least one setter of the right name?
WITHOUT_CLASSIFICATION	// Add the '0-repeats' index // positions.elementAt(z) == position [] in input after <<z>> matches
WITHOUT_CLASSIFICATION	// Order these from longest to shortest // Start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	// These variables are package scope for fast access within the engine // execution flags this match was made using
WITHOUT_CLASSIFICATION	// These are, respectively, the first and last tokens in our linked list // If there is only one token, firstToken == lastToken
WITHOUT_CLASSIFICATION	// not in settings directory or jEdit home directory. // no need to reload anything.
WITHOUT_CLASSIFICATION	//}}} //{{{ Insert the expansion
WITHOUT_CLASSIFICATION	// $ at end is literal //}}}
WITHOUT_CLASSIFICATION	// later on we need to know if certain code is called from // the main thread
WITHOUT_CLASSIFICATION	// ok, this one seems to confuse newbies // endlessly, so log it as NOTICE, not // ERROR
WITHOUT_CLASSIFICATION	// don't show splash screen if there is a file named // 'nosplash' in the settings directory
WITHOUT_CLASSIFICATION	// This reloads the token marker and sends a message // which causes edit panes to repaint their text areas
WITHOUT_CLASSIFICATION	// If only one new file is open which is clean, just close // it, which will create an 'Untitled-1'
WITHOUT_CLASSIFICATION	// can happen if the user presses C+w twice real // quick and the buffer has unsaved changes
WITHOUT_CLASSIFICATION	// paths on case-insensitive filesystems are stored as lower // case in the hash.
WITHOUT_CLASSIFICATION	// still need to call the status check even if the option is // off, so that the write protection is updated if it changes // on disk
WITHOUT_CLASSIFICATION	// the problem with this is that if we have two edit panes // looking at the same buffer and the file is reloaded both // will jump to the same location
WITHOUT_CLASSIFICATION	// Don't show the welcome message if jEdit was started // with the -nosettings switch
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,jEdit.class,"Adding edit mode " //	+ mode.getName());
WITHOUT_CLASSIFICATION	// if only one, clean, 'untitled' buffer is open, we // replace it
WITHOUT_CLASSIFICATION	// if the user pressed eg C+e n n in the // search bar we want focus to go back there // after the prefix is done
WITHOUT_CLASSIFICATION	// we might have been closed as a result of // the above
WITHOUT_CLASSIFICATION	// we might have been closed as a result of // the above
WITHOUT_CLASSIFICATION	// tool bar and status bar gets added in propertiesChanged() // depending in the 'tool bar alternate layout' setting.
WITHOUT_CLASSIFICATION	// null some variables so that retaining references // to closed views won't hurt as much.
WITHOUT_CLASSIFICATION	// we create a stream tokenizer for parsing a simple // stack-based language
WITHOUT_CLASSIFICATION	// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Do not evaluate methods this() or super() in class instance space // (i.e. inside a constructor)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Check if a plugin with the same name // is already loaded
WITHOUT_CLASSIFICATION	// remove action sets, dockables, etc so that user doesn't // see the broken plugin
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// endIndex is now position at a ')','\)'  // nextIndex is end of string or position after ')' or '\)'
WITHOUT_CLASSIFICATION	// ONE-OR-MORE REPEAT OPERATOR //  + | \+ depending on RE_BK_PLUS_QM //  not available if RE_LIMITED_OPS is set
WITHOUT_CLASSIFICATION	// ZERO-OR-ONE REPEAT OPERATOR / STINGY MATCHING OPERATOR //  ? | \? depending on RE_BK_PLUS_QM //  not available if RE_LIMITED_OPS is set //  stingy matching if RE_STINGY_OPS is set and it follows a quantifier
WITHOUT_CLASSIFICATION	// WORD BREAK OPERATOR //  \b if ????
WITHOUT_CLASSIFICATION	// DIGIT OPERATOR //  \d if RE_CHAR_CLASS_ESCAPES is set
WITHOUT_CLASSIFICATION	// NON-WHITESPACE OPERATOR //  \S
WITHOUT_CLASSIFICATION	// (?:) // *?,??,+?,{}? // (?=)(?!) // \A,\Z // \d,\D,\w,\W,\s,\S within [] // (?#)
WITHOUT_CLASSIFICATION	// if chain returns false, it "rejected" the token due to // an optimization, and next was combined with lastToken
WITHOUT_CLASSIFICATION	// next succeeds // is a match // try next option
WITHOUT_CLASSIFICATION	// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//int totalDraw = (n + 1 + NUM_OVERSHOOT_BYTES) + (n + NUM_OVERSHOOT_BYTES) + n + 65537; //compressOutOfMemory ( totalDraw, n );
WITHOUT_CLASSIFICATION	// ensures that active view is saved last, // ie created last on next load, ie in front // on next load
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// record \n and \t on lines specially so that auto indent // can take place
WITHOUT_CLASSIFICATION	// since subsequent macros with the same name are ignored, // load user macros first so that they override the system // macros.
WITHOUT_CLASSIFICATION	// in case macro file name has a space in it. // spaces break the view.toolBar property, for instance, // since it uses spaces to delimit action names.
WITHOUT_CLASSIFICATION	//System.err.println("y=" + y + ",offsetY=" + offsetY //	+ ",size.height=" + size.height //	+ ",win.height=" + win.getHeight());
WITHOUT_CLASSIFICATION	// I'm not sure when this can happen, // but it does sometimes, witness the // jEdit bug tracker.
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Constructors. ////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// // Constants for input. //
WITHOUT_CLASSIFICATION	// Read the value, normalizing whitespace // if it is not CDATA.
WITHOUT_CLASSIFICATION	// Check for surrogates: 00000000 0000xxxx yyyyyyyy zzzzzzzz //  (1101|10xx|xxyy|yyyy + 1101|11yy|zzzz|zzzz: 
WITHOUT_CLASSIFICATION	// Search for a matching tuple, and // return the string if we find one.
WITHOUT_CLASSIFICATION	// OK, add it to the end of the // bucket.
WITHOUT_CLASSIFICATION	// // Attributes //
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // High-level I/O. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// UCS-4 must begin with "<!XML" // 0x00 0x00 0x00 0x3c: UCS-4, big-endian (1234)
WITHOUT_CLASSIFICATION	// Set up a snapshot of the current // input source.
WITHOUT_CLASSIFICATION	// Compare the input, character- // by character.
WITHOUT_CLASSIFICATION	// // Buffers for decoded but unparsed character input. //
WITHOUT_CLASSIFICATION	// // Buffer for undecoded raw byte input. //
WITHOUT_CLASSIFICATION	// This is necessary to have a file opened from the Finder // before jEdit is running set as the currently active // buffer.
WITHOUT_CLASSIFICATION	//super(); //}}}
WITHOUT_CLASSIFICATION	// put forNameSpace it on the top of the stack // Note: it's important that there is only one exit point from this // method so that we can swap back the namespace.
WITHOUT_CLASSIFICATION	// The lock is our declaring namespace's This reference // (the method's 'super').  Or in the case of a class it's the // class instance.
WITHOUT_CLASSIFICATION	// Set untyped variable // untyped param
WITHOUT_CLASSIFICATION	// Check for explicit return of value from void method type. // retControl.returnPoint is the Node of the return statement
WITHOUT_CLASSIFICATION	// remove the bsh:// // get the index of the : between the host and the port is located
WITHOUT_CLASSIFICATION	// Unwrap target exception.  If the interface declares that  // it throws the ex it will be delivered.  If not it will be  // wrapped in an UndeclaredThrowable
WITHOUT_CLASSIFICATION	// Get the type by constructing a prototype array with // arbitrary (zero) length in each dimension. // int array default zeros
WITHOUT_CLASSIFICATION	// If it had a different type throw error. // This allows declaring the same var again, but not with // a different (even if assignable) type.
WITHOUT_CLASSIFICATION	// Careful here: // else fall through to override and install the new typed version
WITHOUT_CLASSIFICATION	// now done in NameSpace automatically when root // The classes which are imported by default //globalNameSpace.loadDefaultImports();
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// --------------------------------------------------------- // The following instance variables mutate during evaluation and should // be reset by the reset() method where necessary
WITHOUT_CLASSIFICATION	// No variable or class found in 'this' type ref. // if autoAllocateThis then create one; a child 'this'.
WITHOUT_CLASSIFICATION	// null 'from' type corresponds to type of Primitive.NULL // assign to any object type
WITHOUT_CLASSIFICATION	// wrapper to primitive // Convert value to Primitive and check/cast it.
WITHOUT_CLASSIFICATION	// For operator-assign operations save the lhs value before evaluating // the rhs.  This is correct Java behavior for postfix operations // e.g. i=1; i+=i++; // should be 2 not 3
WITHOUT_CLASSIFICATION	// number of nodes on stack // current mark
WITHOUT_CLASSIFICATION	// Try to load the module // don't refer to it directly here or we're dependent upon it
WITHOUT_CLASSIFICATION	// NULL return null as type... we currently use null type to indicate  // loose typing throughout bsh.
WITHOUT_CLASSIFICATION	// Trying to cast primitive to an object type // Primitive.NULL can be cast to any object type
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - super constructor args // null node, null callstack, ParseException knows where the error is.
WITHOUT_CLASSIFICATION	// Push nulls for various args of invokeMethod // interpreter // callstack // callerinfo
WITHOUT_CLASSIFICATION	// Generate code to call ClassGeneratorUtil to get our switch index  // and give us args...
WITHOUT_CLASSIFICATION	// check to see if the instance has already been initialized // (the case if using a this() alternate constuctor)
WITHOUT_CLASSIFICATION	// evaluate the instance portion of the block in it // Evaluate the initializer block
WITHOUT_CLASSIFICATION	// Handle ".class" suffix operation // Prefix must be a BSHType
WITHOUT_CLASSIFICATION	//}}} //{{{ Word character...
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// we didn't have a component previously, so // create a border
WITHOUT_CLASSIFICATION	//{{{ filesActivated() method // canDoubleClickClose set to false when ENTER pressed
WITHOUT_CLASSIFICATION	// we expand those that are non-empty, and // remove those that are empty
WITHOUT_CLASSIFICATION	//{{{ setFoldLevel() method // Also sets 'fold level valid' flag
WITHOUT_CLASSIFICATION	// if auto wrap is on, always restart search. // if auto wrap is off, and we're called from // a macro, stop search. If we're called // interactively, ask the user what to do.
WITHOUT_CLASSIFICATION	// for backwards compatibility with plugins that fiddle with // jEdit's UI layout
WITHOUT_CLASSIFICATION	// we have binding foo // but user asks to remove foo bar?
WITHOUT_CLASSIFICATION	// we keep the first non-null frc we get, since sometimes // we get invalid ones on subsequent pages on Windows
WITHOUT_CLASSIFICATION	// this is handled a little differently from other jEdit settings // as the splash screen flag needs to be known very early in the // startup sequence, before the user properties have been loaded
WITHOUT_CLASSIFICATION	// impl note: since multiple searches now allowed, // extra level in hierarchy
WITHOUT_CLASSIFICATION	// invalid regexp, ignore // return true to avoid annoying beeping while // typing a re
WITHOUT_CLASSIFICATION	// we use a custom JRadioButton subclass that returns // false for isFocusTraversable() so that the user can // tab from the search field to the replace field with // one keystroke
WITHOUT_CLASSIFICATION	// the code above builds a 1-indexed suffix array, // but we shift it to be 0-indexed, ignoring the // original 0-th element
WITHOUT_CLASSIFICATION	// Leave buffer in a consistent state if // an error occurs
WITHOUT_CLASSIFICATION	//{{{ // lazily create skip and suffix arrays for either the // search pattern, or the reversed search pattern
WITHOUT_CLASSIFICATION	// used for the stringReplace and beanShell replace radio buttons, // so that the user can press tab to go from the find field to the // replace field in one go
WITHOUT_CLASSIFICATION	// if the caret is on a collapsed fold, collapse the // parent fold
WITHOUT_CLASSIFICATION	// this is either style.getBackgroundColor() or // styles[defaultID].getBackgroundColor()
WITHOUT_CLASSIFICATION	// complete-word command needs a list of all non-alphanumeric // characters used in a keyword map.
WITHOUT_CLASSIFICATION	//}}} //{{{ Paint bracket scope
WITHOUT_CLASSIFICATION	//{{{ physDown() method // scroll down by physical line amount
WITHOUT_CLASSIFICATION	// still have to call this even if it equals the // old one so that the offset manager sets the // validity flag!
WITHOUT_CLASSIFICATION	// No matter what happends... stops us from leaving buffer // in a bad state
WITHOUT_CLASSIFICATION	// Don't overstrike if we're on the end of // the line
WITHOUT_CLASSIFICATION	// so that end followed by up arrow will always put caret at // the end of the previous line, for example //setMagicCaretPosition(Integer.MAX_VALUE); //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// this is package-private so that the painter can use it without // having to call getSelection() (which involves an array copy)
WITHOUT_CLASSIFICATION	// try and merge existing selections one by // one with the new selection
WITHOUT_CLASSIFICATION	// if one line's chunks are invalid, remaining lines are also // invalid
WITHOUT_CLASSIFICATION	//case ClassWriter.FIELD: //case ClassWriter.METH: //case ClassWriter.IMETH:
WITHOUT_CLASSIFICATION	// updates current stack size (max stack size unchanged because stack // size variation always negative in this case)
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Utility methods: control flow analysis algorithm // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// copy of indexes // copy of sizes // instructions to be resized // future offset of a jump instruction
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*		Perform a cast, cast check, or assignability check.		@param toType the class type of the cast result, which may include			primitive types, e.g. Byte.TYPE.  toType may be null to indicate a			loose type assignment (which matches any fromType).		@param fromType is the class type of the value to be cast including			java primitive TYPE classes for primitives.			fromType should be null to indicate that the fromValue is or would			be Primitive.NULL		@param fromValue an Object or bsh.Primitive primitive value (including			Primitive.NULL or Primitive.VOID )		@param checkOnly If checkOnly is true then fromValue must be null.			FromType is checked for the cast to toType...			If checkOnly is false then fromValue must be non-null			(Primitive.NULL is ok) and the actual cast is performed.		@throws UtilEvalError on invalid assignment (when operation is			assignment ).		@throws UtilTargetError wrapping ClassCastException on cast error 			(when operation is cast)		@param operation is Types.CAST or Types.ASSIGNMENT		@see Primitive.getType()	*/
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	/* do nothing */
WITHOUT_CLASSIFICATION	/* do nothing */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// for debugging
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// // I/O information. // // current reader // current input stream // current line number // current column number // type of input source // stack of input soruces // current external entity // current character encoding. // how many bytes read from current source.
WITHOUT_CLASSIFICATION	/*          We'll print our banner using eval(String) in order to          exercise the parser and get the basic expression classes loaded...          This ameliorates the delay after typing the first statement.        */
WITHOUT_CLASSIFICATION	/*		Disallowing VOIDs here was an easy way to support the throwing of a 		more descriptive error message on use of an undefined argument to a 		method call (very common).  If it ever turns out that we need to 		support that for some reason we'll have to re-evaluate how we get 		"meta-information" about the arguments in the various invoke() methods 		that take Object [].  We could either pass BSHArguments down to 		overloaded forms of the methods or throw an exception subtype 		including the argument position back up, where the error message would		be compounded.	*/
WITHOUT_CLASSIFICATION	/*				Primitive (number or void) is not normally an instanceof				anything.  But for internal use we'll test true for the				bsh.Primitive class.  				i.e. (5 instanceof bsh.Primitive) will be true			*/
WITHOUT_CLASSIFICATION	// this will be the current parse character (pattern[index])
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// fixes the hang that can occur if we 'save as' to a // new filename which requires re-sorting
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Conversion to type descriptors // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// each JAR file listed in the plugin's jars property // needs to know that we need them
WITHOUT_CLASSIFICATION	// // Maintain a count of errors. //
WITHOUT_CLASSIFICATION	// number of child nodes 
WITHOUT_CLASSIFICATION	// number of child nodes 
WITHOUT_CLASSIFICATION	// wrap the exception in a TargetException to propogate it up
WITHOUT_CLASSIFICATION	/*		object is a java.lang wrapper for boolean, char, or number type	*/
WITHOUT_CLASSIFICATION	// ALTERNATION OPERATOR //  \| or | (if RE_NO_BK_VBAR) or newline (if RE_NEWLINE_ALT) //  not available if RE_LIMITED_OPS is set
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ removeBufferFromList() method
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Fields for the control flow graph analysis algorithm (used to compute the // maximum stack size). A control flow graph contains one node per "basic // block", and one edge per "jump" from one basic block to another. Each node // (i.e., each basic block) is represented by the Label object that // corresponds to the first instruction of this basic block. Each node also // stores the list of its successors in the graph, as a linked list of Edge // objects. // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// default for plugins that don't specify this property (ie, // 4.1-style plugins) is to load them on startup
WITHOUT_CLASSIFICATION	// overflow character from last data chunk.
WITHOUT_CLASSIFICATION	// sanity check during development
WITHOUT_CLASSIFICATION	/* A definite node is constructed from a specified number of     children.  That number of nodes are popped from the stack and     made the children of the definite node.  Then the definite node     is pushed on to the stack. */
WITHOUT_CLASSIFICATION	// while in list // Out of list, index is one past ']'
WITHOUT_CLASSIFICATION	// don't do this in static{} since we need jEdit.initMisc() // run first so we have the jeditresource: protocol
WITHOUT_CLASSIFICATION	/* if value is null:		 * - if default is null, unset user prop		 * - else set user prop to ""		 * else		 * - if default equals value, ignore		 * - if default doesn't equal value, set user		 */
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Fields to optimize the creation of {@link Edge Edge} objects by using a // pool of reusable objects. The (shared) pool is a linked list of Edge // objects, linked to each other by their {@link Edge#poolNext} field. Each // time a CodeWriter needs to allocate an Edge, it removes the first Edge // of the pool and adds it to a private list of Edge objects. After the end // of the control flow analysis algorithm, the Edge objects in the private // list of the CodeWriter are added back to the pool (by appending this // private list to the pool list; in order to do this in constant time, both // head and tail of the private list are stored in this CodeWriter). // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// buffers retain a reference to the fold handler in // question... and the easiest way to handle fold // handler unloading is this...
WITHOUT_CLASSIFICATION	// // Buffer for parsed character data. //
WITHOUT_CLASSIFICATION	/*					We get stuck in infinite loops here when unicode escapes					fail.  Must re-init the char stream reader 					(ASCII_UCodeESC_CharStream.java)				*/
WITHOUT_CLASSIFICATION	// find the java method
WITHOUT_CLASSIFICATION	// SUBEXPRESSIONS //  (...) | \(...\) depending on RE_NO_BK_PARENS
WITHOUT_CLASSIFICATION	// even though this class is called AbstractOptionPane, it is not really // abstract, since BufferOptions uses an instance of it to lay out its // components.
WITHOUT_CLASSIFICATION	//{{{ loadIfNecessary() method
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Implementation of the CodeVisitor interface // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	// // Buffer for parsed names. //
WITHOUT_CLASSIFICATION	// reinit the callstack
WITHOUT_CLASSIFICATION	// Do we have the necessary jdk1.2 packages and optional package?
WITHOUT_CLASSIFICATION	// I guess this is when we pass it as an argument? // Setting locally
WITHOUT_CLASSIFICATION	// not a comment // create RE subexpression as token.
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ setProperties() method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// // Hash table of attributes found in current start tag. //
WITHOUT_CLASSIFICATION	/*ignore*/
WITHOUT_CLASSIFICATION	// UNMATCHED RIGHT PAREN // ) or \) throw exception if // !syntax.get(RESyntax.RE_UNMATCHED_RIGHT_PAREN_ORD)
WITHOUT_CLASSIFICATION	/* private */
WITHOUT_CLASSIFICATION	// need to carry over file name and first line globs because they are // not given to us by the XMode handler, but instead are filled in by // the catalog loader.
WITHOUT_CLASSIFICATION	// case of a backward jump with an offset < -32768. In this case we // automatically replace GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> // with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode // of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the // instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//dockMenu.addItem(new NSMenuItem().separatorItem()); //dockMenu.addItem(miMac);
WITHOUT_CLASSIFICATION	/* 			Create non-interactive local interpreter for this namespace			with source from the input stream and out/err same as 			this interpreter.		*/
WITHOUT_CLASSIFICATION	// If not found and there are arguments to match - // Look for an overloaded assignable match // (First find the method, then find accessible version of it)
WITHOUT_CLASSIFICATION	// MATCH-ANY-CHARACTER OPERATOR (except possibly newline and null) //  .
WITHOUT_CLASSIFICATION	//{{{ JARClassLoader constructor
WITHOUT_CLASSIFICATION	// no need to do this for macros!
WITHOUT_CLASSIFICATION	// GOTO_W
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ applicationShouldHandleReopen() method
WITHOUT_CLASSIFICATION	/*                throw new EvalError(					"Sourced file: "+sourceFileInfo+" parser Error: " 					+ e.getMessage( DEBUG ), node, callstack );				*/
WITHOUT_CLASSIFICATION	// Try static and then object, if allowed // Note that the Java compiler should not allow both.
WITHOUT_CLASSIFICATION	// search all of its interfaces breadth first
WITHOUT_CLASSIFICATION	// ZERO-OR-MORE REPEAT OPERATOR //  *
WITHOUT_CLASSIFICATION	// see what JARClassLoader this class is in
WITHOUT_CLASSIFICATION	// never called
WITHOUT_CLASSIFICATION	// control flow analysis algorithm: while the block stack is not empty, // pop a block from this stack, update the max stack size, compute // the true (non relative) begin stack size of the successors of this // block, and push these successors onto the stack (unless they have // already been pushed onto the stack). Note: by hypothesis, the {@link // Label#beginStackSize} of the blocks in the block stack are the true // (non relative) beginning stack sizes of these blocks.
WITHOUT_CLASSIFICATION	/*			Note: some interesting things are going on here.			1) We swap instead of push...  The primary mode of operation 			acts like we are in the enclosing namespace...  (super must be 			preserved, etc.)			2) We do *not* call the body block eval with the namespace 			override.  Instead we allow it to create a second subordinate 			BlockNameSpace child of the forNameSpace.  Variable propogation 			still works through the chain, but the block's child cleans the 			state between iteration.  			(which is correct Java behavior... see forscope4.bsh)		*/
WITHOUT_CLASSIFICATION	// WORD BEGIN OPERATOR  //  \< if ????
WITHOUT_CLASSIFICATION	// used to mark non-existent classes in class hash
WITHOUT_CLASSIFICATION	// evaluate a method declaration
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Utility methods: dump bytecode array // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/*	End methods for interacting with Parser */
WITHOUT_CLASSIFICATION	/*        NULL means "no value".        This ia a placeholder for primitive null value.    */
WITHOUT_CLASSIFICATION	/*                If idealMatch fits targetMatch and this is the first match 				or targetMatch is more specific than the best match, make it 				the new best match.            */
WITHOUT_CLASSIFICATION	// TAB ESCAPE //  \t
WITHOUT_CLASSIFICATION	//{{{ cut() method
WITHOUT_CLASSIFICATION	//{{{ CustomClassManager class
WITHOUT_CLASSIFICATION	// Set the default entities here.
WITHOUT_CLASSIFICATION	// The canonical file name is also absolute. // No need for getAbsolutePath() here...
WITHOUT_CLASSIFICATION	// private to prevent invocation with param that isn't a primitive-wrapper
WITHOUT_CLASSIFICATION	// NON-SPECIAL CHARACTER (or escape to make literal) //  c | \* for example
WITHOUT_CLASSIFICATION	//{{{ getRegister() method
WITHOUT_CLASSIFICATION	// 1st step: // As explained above, resizing an instruction may require to resize another // one, which may require to resize yet another one, and so on. The first // step of the algorithm consists in finding all the instructions that // need to be resized, without modifying the code. This is done by the // following "fix point" algorithm: // - parse the code to find the jump instructions whose offset will need //   more than 2 bytes to be stored (the future offset is computed from the //   current offset and from the number of bytes that will be inserted or //   removed between the source and target instructions). For each such //   instruction, adds an entry in (a copy of) the indexes and sizes arrays //   (if this has not already been done in a previous iteration!) // - if at least one entry has been added during the previous step, go back //   to the beginning, otherwise stop. // In fact the real algorithm is complicated by the fact that the size of // TABLESWITCH and LOOKUPSWITCH instructions depends on their position in // the bytecode (because of padding). In order to ensure the convergence of // the algorithm, the number of bytes to be added or removed from these // instructions is over estimated during the previous loop, and computed // exactly only after the loop is finished (this requires another pass to // parse the bytecode of the method).
WITHOUT_CLASSIFICATION	// // When the class is loaded, populate the hash table of // attribute types. //
WITHOUT_CLASSIFICATION	/*modifiers*/
WITHOUT_CLASSIFICATION	/*		If this type of This implements it directly return this,		else try complain that we don't have the proxy mechanism.	*/
WITHOUT_CLASSIFICATION	// If both original args were Primitives return a Primitive result // else it was mixed (wrapper/primitive) return the wrapper type // Exception is for boolean result, return the primitive
WITHOUT_CLASSIFICATION	/*bcm*/
WITHOUT_CLASSIFICATION	// Overrides REToken.chain
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	// clear the static caches in BshClassManager
WITHOUT_CLASSIFICATION	// visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitIntInsn // - // visitLdcInsn //int LDC_W = 19;           // - //int LDC2_W = 20;          // - // visitVarInsn // - // - // - // - //int ILOAD_0 = 26;         // - //int ILOAD_1 = 27;         // - //int ILOAD_2 = 28;         // - //int ILOAD_3 = 29;         // - //int LLOAD_0 = 30;         // - //int LLOAD_1 = 31;         // - //int LLOAD_2 = 32;         // - //int LLOAD_3 = 33;         // - //int FLOAD_0 = 34;         // - //int FLOAD_1 = 35;         // - //int FLOAD_2 = 36;         // - //int FLOAD_3 = 37;         // - //int DLOAD_0 = 38;         // - //int DLOAD_1 = 39;         // - //int DLOAD_2 = 40;         // - //int DLOAD_3 = 41;         // - //int ALOAD_0 = 42;         // - //int ALOAD_1 = 43;         // - //int ALOAD_2 = 44;         // - //int ALOAD_3 = 45;         // - // visitInsn // - // - // - // - // - // - // - // visitVarInsn // - // - // - // - //int ISTORE_0 = 59;        // - //int ISTORE_1 = 60;        // - //int ISTORE_2 = 61;        // - //int ISTORE_3 = 62;        // - //int LSTORE_0 = 63;        // - //int LSTORE_1 = 64;        // - //int LSTORE_2 = 65;        // - //int LSTORE_3 = 66;        // - //int FSTORE_0 = 67;        // - //int FSTORE_1 = 68;        // - //int FSTORE_2 = 69;        // - //int FSTORE_3 = 70;        // - //int DSTORE_0 = 71;        // - //int DSTORE_1 = 72;        // - //int DSTORE_2 = 73;        // - //int DSTORE_3 = 74;        // - //int ASTORE_0 = 75;        // - //int ASTORE_1 = 76;        // - //int ASTORE_2 = 77;        // - //int ASTORE_3 = 78;        // - // visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitIincInsn // visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitJumpInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitVarInsn // visiTableSwitchInsn // visitLookupSwitch // visitInsn // - // - // - // - // - // visitFieldInsn // - // - // - // visitMethodInsn // - // - // - //int UNUSED = 186;         // NOT VISITED // visitTypeInsn // visitIntInsn // visitTypeInsn // visitInsn // - // visitTypeInsn // - // visitInsn // - //int WIDE = 196;           // NOT VISITED // visitMultiANewArrayInsn // visitJumpInsn // - //int GOTO_W = 200;         // - //int JSR_W = 201;          // -
WITHOUT_CLASSIFICATION	// // Flags for reading literals. //
WITHOUT_CLASSIFICATION	// If null callstack
WITHOUT_CLASSIFICATION	/*		invokeMethod() here is generally used by outside code to callback		into the bsh interpreter. e.g. when we are acting as an interface		for a scripted listener, etc.  In this case there is no real call stack		so we make a default one starting with the special JAVACODE namespace		and our namespace as the next.	*/
WITHOUT_CLASSIFICATION	// arithmetic
WITHOUT_CLASSIFICATION	/*eof*/
WITHOUT_CLASSIFICATION	// this has been changed since 1.03 to be non-overlapping matches
WITHOUT_CLASSIFICATION	// have to handle this case specially on windows. // insert \ between, eg A: and myfile.txt.
WITHOUT_CLASSIFICATION	//{{{ ToolBar-related constants
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Utility methods: constant pool management // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Error reporting. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// Invoke the block, overriding namespace with localNameSpace
WITHOUT_CLASSIFICATION	// a default hashCode()
WITHOUT_CLASSIFICATION	// can't cast void to anything
WITHOUT_CLASSIFICATION	/*	Thanks to Sreenivasa Viswanadha for suggesting how to get rid of expensive	lookahead here.*/
WITHOUT_CLASSIFICATION	// Create a new REMatch to hold results
WITHOUT_CLASSIFICATION	//{{{ saveBackup() method
WITHOUT_CLASSIFICATION	//{{{ saveBackup() method
WITHOUT_CLASSIFICATION	//{{{ Layers
WITHOUT_CLASSIFICATION	// Method body can only use 'return' statment type return control.
WITHOUT_CLASSIFICATION	// These are necessary to let us test synchronization from scripts
WITHOUT_CLASSIFICATION	// Only allow legal Java assignment unless we're a CAST operation
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ArrayInitializer */
WITHOUT_CLASSIFICATION	// Optimization: check if anchor + minimumLength > length
WITHOUT_CLASSIFICATION	/* if backup file was created less than			 * 'backupTimeDistance' ago, we do not			 * create the backup */
WITHOUT_CLASSIFICATION	//{{{ actionBar() method
WITHOUT_CLASSIFICATION	// Read the attribute name.
WITHOUT_CLASSIFICATION	// retControl.returnPoint is the Node of the return statement
WITHOUT_CLASSIFICATION	// null evalname and we're finished // base object for current eval
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	/*	Originally called ResultType in the grammar*/
WITHOUT_CLASSIFICATION	// Special handling at end of input for e.g. "$"
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	// this should never throw an exception.
WITHOUT_CLASSIFICATION	// Inform the handler about the // attribute.
WITHOUT_CLASSIFICATION	// If return type void, return void as the value.
WITHOUT_CLASSIFICATION	// Note: it's ok to cache class resolution here because when the class // space changes the namespace will discard cached names.
WITHOUT_CLASSIFICATION	// EOF, not zero read apparently
WITHOUT_CLASSIFICATION	/* * Expression syntax follows. */
WITHOUT_CLASSIFICATION	// Precondition: pattern[index-1] == ':' // we will return pos of closing ']'.
WITHOUT_CLASSIFICATION	//{{{ isToolsJarAvailable() method
WITHOUT_CLASSIFICATION	// Bind to any port on localhost; accept 2 simultaneous // connection attempts before rejecting connections
WITHOUT_CLASSIFICATION	// Found "<?"
WITHOUT_CLASSIFICATION	/*				If we have type info and the child is an array initializer				pass it along...  Else use the default eval style.				(This allows array initializer to handle the problem... 				allowing for future enhancements in loosening types there).				*/
WITHOUT_CLASSIFICATION	/*			Is it a simple variable name?			Doing this first gives the correct Java precedence for vars 			vs. imported class names (at least in the simple case - see			tests/precedence1.bsh).  It should also speed things up a bit.		*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) MethodInvocation */
WITHOUT_CLASSIFICATION	// Check for {} tomfoolery
WITHOUT_CLASSIFICATION	//{{{ parsePermissions() method
WITHOUT_CLASSIFICATION	// we have to deal with a huge range of possible border cases here.
WITHOUT_CLASSIFICATION	// Make a hash of the interface hashcodes in order to cache them
WITHOUT_CLASSIFICATION	/*			Is it a bsh script variable reference?			If we're just starting the eval of name (no base object)			or we're evaluating relative to a This type reference check.		*/
WITHOUT_CLASSIFICATION	// Generate code to push the BSHTHIS or BSHSTATIC field 
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Arguments */
WITHOUT_CLASSIFICATION	// We could let a String fall through to final input, but since // it's the most likely input type, we check it first.
WITHOUT_CLASSIFICATION	//{{{ Expansion class
WITHOUT_CLASSIFICATION	// no background mode, and opening a new view
WITHOUT_CLASSIFICATION	// Get the string of enumerated values // if necessary.
WITHOUT_CLASSIFICATION	/*leave null*/
WITHOUT_CLASSIFICATION	/*			Is it a class name?			If we're just starting eval of name try to make it, else fail.		*/
WITHOUT_CLASSIFICATION	// Push 'this'
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Block */
WITHOUT_CLASSIFICATION	// UNDONE When File lets us get the userName, use it!
WITHOUT_CLASSIFICATION	//}}} //{{{ Handle $
WITHOUT_CLASSIFICATION	//{{{ getBufferSwitcher() method
WITHOUT_CLASSIFICATION	// getClassInstance() throws exception if not there
WITHOUT_CLASSIFICATION	// Push the name of the method as a constant
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) IfStatement */
WITHOUT_CLASSIFICATION	/*     * freq table collected to save a pass over the data     * during decompression.     */
WITHOUT_CLASSIFICATION	// if no server running and user runs jedit -quit, // just exit
WITHOUT_CLASSIFICATION	//{{{ loadCaretInfo() method
WITHOUT_CLASSIFICATION	/**    * Parse a conditional section.    * [63] conditionalSect ::= includeSect || ignoreSect    * [64] includeSect ::= '<![' %'INCLUDE' '[' (%markupdecl*)* ']]>'    * [65] ignoreSect ::= '<![' %'IGNORE' '[' ignoreSectContents* ']]>'    * [66] ignoreSectContents ::= ((SkipLit | Comment | PI) -(Char* ']]>'))    *                           | ('<![' ignoreSectContents* ']]>')    *                           | (Char - (']' | [<'"]))    *                           | ('<!' (Char - ('-' | '[')))    * *NOTE: the '<![' has already been read.    * *TODO: verify that I am handling ignoreSectContents right.    */
WITHOUT_CLASSIFICATION	/*			If we've fallen through here we are no longer resolving to			a class type.		*/
WITHOUT_CLASSIFICATION	// generate the default branch of switch
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) WhileStatement */
WITHOUT_CLASSIFICATION	/*     * always: in the range 0 .. 9.     * The current block size is 100000 * this number.     */
WITHOUT_CLASSIFICATION	//{{{ Property methods
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ReturnStatement */
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //
WITHOUT_CLASSIFICATION	// file name
WITHOUT_CLASSIFICATION	//{{{ getColorProperty() method
WITHOUT_CLASSIFICATION	// left == default case
WITHOUT_CLASSIFICATION	// OK, the cheat didn't work; start over // and do it by the book.
WITHOUT_CLASSIFICATION	// don't break jEdit core and plugins! //throw new InterpreterError("null variable value");
WITHOUT_CLASSIFICATION	/*		Generate a branch of the constructor switch.  This method is called by		generateConstructorSwitch.		The code generated by this method assumes that the argument array is 		on the stack.	*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ReturnStatement */
WITHOUT_CLASSIFICATION	/*     * index of the last char in the block, so     * the block size == last + 1.     */
WITHOUT_CLASSIFICATION	// Start with a little cheat.  Most of // the time, the white space will fall // within the current read buffer; if // not, then fall through.
WITHOUT_CLASSIFICATION	// If recurse, set global untyped var, else set it here.	 //NameSpace varScope = recurse ? getGlobal() : this; // This modification makes default allocation local
WITHOUT_CLASSIFICATION	/*bubble up if allowed*/
WITHOUT_CLASSIFICATION	// ok?
WITHOUT_CLASSIFICATION	/*squeltch*/
WITHOUT_CLASSIFICATION	/*squeltch*/
WITHOUT_CLASSIFICATION	/*         * Setting up the unzftab entries here is not strictly         * necessary, but it does save having to do it later         * in a separate pass, and so saves a block's worth of         * cache misses.         */
WITHOUT_CLASSIFICATION	//{{{ getMode() method
WITHOUT_CLASSIFICATION	//{{{ getAutosaveFile() method
WITHOUT_CLASSIFICATION	// Normalise whitespace if necessary.
WITHOUT_CLASSIFICATION	// try parent
WITHOUT_CLASSIFICATION	/*forcclass*/
WITHOUT_CLASSIFICATION	/*		Note: technically I think we could get by passing in only the		current namespace or perhaps BshClassManager here instead of 		CallStack and Interpreter.  However let's just play it safe in case		of future changes - anywhere you eval a node you need these.	*/
WITHOUT_CLASSIFICATION	/*         * Undo the MTF values for the selectors.         */
WITHOUT_CLASSIFICATION	//{{{ newFile() method
WITHOUT_CLASSIFICATION	//{{{ addBufferChangeListener() method
WITHOUT_CLASSIFICATION	// system id
WITHOUT_CLASSIFICATION	// Add the new typed var
WITHOUT_CLASSIFICATION	/*				If this was a literal "super" reference then we allow recursion				in setting the variable to get the normal effect of finding the				nearest definition starting at the super scope.  On any other				resolution qualified by a 'this' type reference we want to set				the variable directly in that scope. e.g. this.x=5;  or 				someThisType.x=5;								In the old scoping rules super didn't do this.			*/
WITHOUT_CLASSIFICATION	// type is correct here
WITHOUT_CLASSIFICATION	// Word boundary means input[index-1] was a word character // and input[index] is not, or input[index] is a word character // and input[index-1] was not //  In the string "one two three", these positions match: //  |o|n|e| |t|w|o| |t|h|r|e|e| //  ^     ^ ^     ^ ^         ^ // is current character a letter or digit? // is previous character a letter or digit?
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// Wait for pending I/O requests
WITHOUT_CLASSIFICATION	// Wait for pending I/O requests
WITHOUT_CLASSIFICATION	// will be cached from now on...
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Utility routines. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/*declaredOnly*/
WITHOUT_CLASSIFICATION	/*declaredOnly*/
WITHOUT_CLASSIFICATION	/*declaredOnly*/
WITHOUT_CLASSIFICATION	// Note: if we want methods declared inside blocks to be accessible via // this.methodname() inside the block we could handle it here as a // special case.  See also resolveThisFieldReference() special handling // for BlockNameSpace case.  They currently work via the direct name // e.g. methodName().
WITHOUT_CLASSIFICATION	// auto-gen default constructor // use default super constructor
WITHOUT_CLASSIFICATION	// number of times we've matched so far
WITHOUT_CLASSIFICATION	// Create a new file when the last is closed
WITHOUT_CLASSIFICATION	//{{{ Edit modes, syntax highlighting
WITHOUT_CLASSIFICATION	// The new length is <= the old one.
WITHOUT_CLASSIFICATION	// Try object imports
WITHOUT_CLASSIFICATION	// found an object and it's not an undefined variable
WITHOUT_CLASSIFICATION	// Determine if the constructor calls this() or super()
WITHOUT_CLASSIFICATION	// Check for stingy match for each possibility.
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	//{{{ closeAllBuffers() method
WITHOUT_CLASSIFICATION	//{{{ closeAllBuffers() method
WITHOUT_CLASSIFICATION	//{{{ need to convert entries of 'props' to PropValue instances
WITHOUT_CLASSIFICATION	// Insert the content type, if any.
WITHOUT_CLASSIFICATION	// Try static imports
WITHOUT_CLASSIFICATION	// this() constructors come after super constructors in the table
WITHOUT_CLASSIFICATION	// Order these from longest to shortest // Start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	/*         * A 6-byte block header, the value chosen arbitrarily         * as 0x314159265359 :-).  A 32 bit value does not really         * give a strong enough guarantee that the value will not         * appear by chance in the compressed datastream.  Worst-case         * probability of this event, for a 900k block, is about         * 2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.         * For a compressed file of size 100Gb -- about 100000 blocks --         * only a 48-bit marker will do.  NB: normal compression/         * decompression do *not* rely on these statistical properties.         * They are only important when trying to recover blocks from         * damaged files.         */
WITHOUT_CLASSIFICATION	// close remaining buffers (the close dialog only deals with // dirty ones)
WITHOUT_CLASSIFICATION	// we do a write lock so that the // autosave, which grabs a read lock, // is not executed between the // deletion of the autosave file // and clearing of the dirty flag
WITHOUT_CLASSIFICATION	/*		If we want to support multiple commands in the command path we need to		change this to not throw the exception.	*/
WITHOUT_CLASSIFICATION	// Check for existing method
WITHOUT_CLASSIFICATION	// Create the instance 'This' namespace, set it on the object // instance and invoke the instance initializer
WITHOUT_CLASSIFICATION	// Find new doablesLast
WITHOUT_CLASSIFICATION	/*         * 20 is just a paranoia constant         */
WITHOUT_CLASSIFICATION	//{{{ saveAllBuffers() method
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// UCS-4 must begin with "<!XML" // 0x3c 0x00 0x00 0x00: UCS-4, little-endian (4321)
WITHOUT_CLASSIFICATION	//return countParts(value) > 1;
WITHOUT_CLASSIFICATION	// The object instance has already been initialzed by another // constructor.  Fall through to invoke the constructor body below.
WITHOUT_CLASSIFICATION	// At this point we've either got too many or just the right amount. // See if this numRepeats works with the rest of the regexp.
WITHOUT_CLASSIFICATION	/*         * Write `magic' bytes h indicating file-format == huffmanised,         * followed by a digit indicating blockSize100k.         */
WITHOUT_CLASSIFICATION	// auto reload changed buffers?
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	// UCS-4 must begin with "<!XML" // 0x00 0x3c 0x00 0x00: UCS-4, unusual (3421)
WITHOUT_CLASSIFICATION	// Test all possible matches for this number of repeats
WITHOUT_CLASSIFICATION	/*                 * Complete the big bucket [ss] by quicksorting                 * any unsorted small buckets [ss, j].  Hopefully                 * previous pointer-scanning phases have already                 * completed many of the small buckets [ss, j], so                 * we don't have to sort them at all.                 */
WITHOUT_CLASSIFICATION	// ... sweet. saveBackup() will create backupDir if it // doesn't exist.
WITHOUT_CLASSIFICATION	//{{{ ParentMouseHandler class
WITHOUT_CLASSIFICATION	// UCS-2 with a byte-order marker. // 0xff 0xfe: UCS-2, little-endian (21)
WITHOUT_CLASSIFICATION	// Can't call it getClass()
WITHOUT_CLASSIFICATION	// handle primitive widening conversions - JLS 5.1.2
WITHOUT_CLASSIFICATION	/*overrideNamespace*/
WITHOUT_CLASSIFICATION	/*                 * Now scan this big bucket so as to synthesise the                 * sorted order for small buckets [t, ss] for all t != ss.                 */
WITHOUT_CLASSIFICATION	// Even if reallyExit is false, we still exit properly // if background mode is off
WITHOUT_CLASSIFICATION	// compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	// Compare with number of dimensions actually created with the // number specified (syntax uses the undefined ones here)
WITHOUT_CLASSIFICATION	// Some kind of 8-bit encoding without "<?XML" // (otherwise) UTF-8 without encoding/XML declaration
WITHOUT_CLASSIFICATION	/*			Lots of preconditions checked here...			Once things are running smoothly we might comment these out			(That's what assertions are for).		*/
WITHOUT_CLASSIFICATION	/*			dimensionsNode can return either a fully intialized array or VOID.			when VOID the prescribed array dimensions (defined and undefined)			are contained in the node.		*/
WITHOUT_CLASSIFICATION	// so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	// so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	/*                 * Find the coding table which is best for this group,                 * and record its identity in the selector table.                 */
WITHOUT_CLASSIFICATION	// in this case, we can't directly call // view.close(); we have to call closeView() // for all open views
WITHOUT_CLASSIFICATION	// execute nodes, skipping labels, until a break or return
WITHOUT_CLASSIFICATION	// Check for entity recursion.
WITHOUT_CLASSIFICATION	/* --- Instance data --- */
WITHOUT_CLASSIFICATION	// Both primitives, do primitive cast
WITHOUT_CLASSIFICATION	/*filter*/
WITHOUT_CLASSIFICATION	// check if input is at a valid position
WITHOUT_CLASSIFICATION	/*                     * 10                     */
WITHOUT_CLASSIFICATION	// Stop server
WITHOUT_CLASSIFICATION	//{{{ EnhancedButton constructor
WITHOUT_CLASSIFICATION	// Stop all plugins
WITHOUT_CLASSIFICATION	// Delegate to the static method
WITHOUT_CLASSIFICATION	// Test for a match, and push the character // back if the match fails.
WITHOUT_CLASSIFICATION	// Interpreter has no input stream, use eval() only // Interpreter has no input stream, use eval() only // Interpreter has a user, print prompts, etc.
WITHOUT_CLASSIFICATION	//Object r = checkOnly ? VALID_CAST :
WITHOUT_CLASSIFICATION	/*		Perform a suffix operation on the given object and return the 		new value.		<p>		obj will be a Node when suffix evaluation begins, allowing us to		interpret it contextually. (e.g. for .class) Thereafter it will be 		an value object or LHS (as determined by toLHS).		<p>				We must handle the toLHS case at each point here.		<p>	*/
WITHOUT_CLASSIFICATION	/*                 * copy 3                 */
WITHOUT_CLASSIFICATION	//{{{ updatePosition() method
WITHOUT_CLASSIFICATION	// if no requests are running, requestDone() // will not be called, so we must queue the // AWT runner ourselves.
WITHOUT_CLASSIFICATION	// Also cache the class so that no import resolution must occur // this avoids having to load our enclosing class which isn't // finished being generated yet... oy.
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Low-level I/O. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// need to set the input stream - reinit the parser?
WITHOUT_CLASSIFICATION	// Primitive to arbitrary object type.  // Allow Primitive.castToType() to handle it as well as cases of  // Primitive.NULL and Primitive.VOID
WITHOUT_CLASSIFICATION	/*			Evaluate our prefix if it needs evaluating first.			If this is the first evaluation our prefix mayb be a Node 			(directly from the PrimaryPrefix) - eval() it to an object.  			If it's an LHS, resolve to a value.			Note: The ambiguous name construct is now necessary where the node 			may be an ambiguous name.  If this becomes common we might want to 			make a static method nodeToObject() or something.  The point is 			that we can't just eval() - we need to direct the evaluation to 			the context sensitive type of result; namely object, class, etc.		*/
WITHOUT_CLASSIFICATION	// a la Perl, $0 is whole thing, $1 - $9 are subexpressions
WITHOUT_CLASSIFICATION	// if started with java -jar jedit.jar
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Constructor // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// Read as many bytes as possible // into the read buffer.
WITHOUT_CLASSIFICATION	// init the static shared sharedObject if it's not there yet
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	/*map*/
WITHOUT_CLASSIFICATION	// index tracks the position in the char array
WITHOUT_CLASSIFICATION	// Pass 3: layout components
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,jEdit.class,fnf);
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Fields // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/*strict*/
WITHOUT_CLASSIFICATION	// Dispatch to an encoding-specific // reader method to populate the // readBuffer.
WITHOUT_CLASSIFICATION	// bsh.evalOnly
IMPLEMENTATION	// TODO Auto-generated constructor stub
IMPLEMENTATION	// XXX - log an error?  throw an exception?
IMPLEMENTATION	// TODO: allow user to request the system or no parent
IMPLEMENTATION	// XXX add exceptions
IMPLEMENTATION	/** * TODO: * comment field doesn't include all options yet */
IMPLEMENTATION	/** * TODO: * comment field doesn't include all options yet */
IMPLEMENTATION	//TO DO : delete the file if it is not a valid file.
IMPLEMENTATION	// Have to think about lazy initialization here...  JHM // comparator = new java.text.RuleBasedCollator();
IMPLEMENTATION	//TODO no methods yet for getClassname //TODO no method for newInstance using a reverse-classloader
IMPLEMENTATION	//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list
IMPLEMENTATION	/*     * The displayName variable stores the value of the "display-name" element     * from the standard EJB descriptor.  As a future enhancement to this task,     * we may determine the name of the EJB JAR file using this display-name,     * but this has not be implemented yet.     */
IMPLEMENTATION	//TO DO : delete the file if it is not a valid file.
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	/**     * This method checks the timestamp on each file listed in the <code>     * ejbFiles</code> and compares them to the timestamp on the <code>jarFile     * </code>.  If the <code>jarFile</code>'s timestamp is more recent than     * each EJB file, <code>true</code> is returned.  Otherwise, <code>false     * </code> is returned.     * TODO: find a way to check the manifest-file, that is found by naming convention     *     * @param ejbFiles Hashtable of EJB classes (and other) files that will be     *                 added to the completed JAR file     * @param jarFile  JAR file which will contain all of the EJB classes (and     *                 other) files     * @return         boolean indicating whether or not the <code>jarFile</code>     *                 is up to date     */
IMPLEMENTATION	/** * An output stream that compresses into the BZip2 format (without the file * header chars) into another stream. * <p>The compression requires large amounts of memory. Thus you * should call the {@link #close() close()} method as soon as * possible, to force <tt>CBZip2OutputStream</tt> to release the * allocated memory.</p> * * <p>You can shrink the amount of allocated memory and maybe raise * the compression speed by choosing a lower blocksize, which in turn * may cause a lower compression ratio.  You can avoid unnecessary * memory allocation by avoiding using a blocksize which is bigger * than the size of the input. </p> * * <p>You can compute the memory usage for compressing by the * following formula:</p> * <pre> * <code>400k + (9 * blocksize)</code>. * </pre> *  * <p>To get the memory required for decompression by {@link * CBZip2InputStream CBZip2InputStream} use</p> * <pre> * <code>65k + (5 * blocksize)</code>. * </pre> * * <table width="100%" border="1"> *  <colgroup> *    <col width="33%" /> *    <col width="33%" /> *    <col width="33%" /> *  </colgroup> *  <tr> *    <th colspan="3">Memory usage by blocksize</th> *  </tr><tr> *    <th align="right">Blocksize</th> *    <th align="right">Compression<br>memory usage</th> *    <th align="right">Decompression<br>memory usage</th> *  </tr><tr> *    <td align="right">100k</td> *    <td align="right">1300k</td> *    <td align="right"> 565k</td> *  </tr><tr> *    <td align="right">200k</td> *    <td align="right">2200k</td> *    <td align="right">1065k</td> *  </tr><tr> *    <td align="right">300k</td> *    <td align="right">3100k</td> *    <td align="right">1565k</td> *  </tr><tr> *    <td align="right">400k</td> *    <td align="right">4000k</td> *    <td align="right">2065k</td> *  </tr><tr> *    <td align="right">500k</td> *    <td align="right">4900k</td> *    <td align="right">2565k</td> *  </tr><tr> *    <td align="right">600k</td> *    <td align="right">5800k</td> *    <td align="right">3065k</td> *  </tr><tr> *    <td align="right">700k</td> *    <td align="right">6700k</td> *    <td align="right">3565k</td> *  </tr><tr> *    <td align="right">800k</td> *    <td align="right">7600k</td> *    <td align="right">4065k</td> *  </tr><tr> *    <td align="right">900k</td> *    <td align="right">8500k</td> *    <td align="right">4565k</td> *  </tr> * </table> * * <p>For decompression <tt>CBZip2InputStream</tt> allocates less * memory if the bzipped input is smaller than one block.</p> * * <p>Instances of this class are not threadsafe.</p> * * <p> * TODO:    Update to BZip2 1.0.1 * </p> * */
WITHOUT_CLASSIFICATION	/* BuildListener stuff */
WITHOUT_CLASSIFICATION	// we don't expect to find this
WITHOUT_CLASSIFICATION	// ignore expected
WITHOUT_CLASSIFICATION	// ignore expected
WITHOUT_CLASSIFICATION	// tell the build it is finished
WITHOUT_CLASSIFICATION	//end class
WITHOUT_CLASSIFICATION	// keep track of what operating systems are supported here.
WITHOUT_CLASSIFICATION	// father and child pattern test
WITHOUT_CLASSIFICATION	// redo the test, but the 2 include patterns are inverted
WITHOUT_CLASSIFICATION	// add conditions and more commands as soon as the need arises
WITHOUT_CLASSIFICATION	// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.
WITHOUT_CLASSIFICATION	// followLinks should be true by default, but if this ever // changes we will need this line.
WITHOUT_CLASSIFICATION	//testing drive letter search from root:
WITHOUT_CLASSIFICATION	//if this is our context we assume there must be something here:
WITHOUT_CLASSIFICATION	// This path should contain the class files for these testcases:
WITHOUT_CLASSIFICATION	// A special parent loader which is not the system class loader:
WITHOUT_CLASSIFICATION	// A special parent loader which is not the system class loader:
WITHOUT_CLASSIFICATION	// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:
WITHOUT_CLASSIFICATION	// The intended result URLs:
WITHOUT_CLASSIFICATION	// JDK 1.4: return Collections.list(e);
WITHOUT_CLASSIFICATION	// override allowed on <available>
WITHOUT_CLASSIFICATION	// ensure <tstamp>'s new prefix attribute is working
WITHOUT_CLASSIFICATION	// ensure <tstamp> follows the immutability rule
WITHOUT_CLASSIFICATION	// ensure <condition> follows the immutability rule
WITHOUT_CLASSIFICATION	// ensure <checksum> follows the immutability rule
WITHOUT_CLASSIFICATION	// ensure <exec> follows the immutability rule
WITHOUT_CLASSIFICATION	// ensure <pathconvert> follows the immutability rule
WITHOUT_CLASSIFICATION	/*             * throw in drive letters             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	/*             * Start with simple absolute file names.             */
WITHOUT_CLASSIFICATION	/*             * drive letters are not used, just to be considered as normal             * part of a name             */
WITHOUT_CLASSIFICATION	/*         * Now test some relative file name magic.         */
WITHOUT_CLASSIFICATION	// fail, because buildfile contains two targets with the same name
WITHOUT_CLASSIFICATION	// overriding target from imported buildfile is allowed
WITHOUT_CLASSIFICATION	// the buildfile to use
WITHOUT_CLASSIFICATION	// call a target
WITHOUT_CLASSIFICATION	//class-BFT
WITHOUT_CLASSIFICATION	// override allowed on <available>
WITHOUT_CLASSIFICATION	// ignore event
WITHOUT_CLASSIFICATION	// Check it's a read-only map.
WITHOUT_CLASSIFICATION	// Check it's a read-only map.
WITHOUT_CLASSIFICATION	/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */
WITHOUT_CLASSIFICATION	// addConfigured(Hashtable) should come before addConfigured(Map)
WITHOUT_CLASSIFICATION	// INVALID extension point
WITHOUT_CLASSIFICATION	// INVALID extension point
WITHOUT_CLASSIFICATION	// Valid extension point
WITHOUT_CLASSIFICATION	// Valid extension point, more derived than Map above, but *after* it!
WITHOUT_CLASSIFICATION	// IntrospectionHelperTest
WITHOUT_CLASSIFICATION	// make sure we do not get a NPE
WITHOUT_CLASSIFICATION	// use an anonymous subclass since ProjectComponent is abstract
WITHOUT_CLASSIFICATION	// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------
WITHOUT_CLASSIFICATION	/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/
WITHOUT_CLASSIFICATION	// check defaults
WITHOUT_CLASSIFICATION	// check defaults
WITHOUT_CLASSIFICATION	// check build.compiler provides defaults
WITHOUT_CLASSIFICATION	// setUserProperty to override system properties
WITHOUT_CLASSIFICATION	// check attribute overrides build.compiler
WITHOUT_CLASSIFICATION	// check attribute overrides build.compiler
WITHOUT_CLASSIFICATION	// some database keys, see #getProperties(int)
WITHOUT_CLASSIFICATION	// keys used in properties.
WITHOUT_CLASSIFICATION	//neither
WITHOUT_CLASSIFICATION	/*     * PR 11100     */
WITHOUT_CLASSIFICATION	// simple test to ensure that the caching does work...
WITHOUT_CLASSIFICATION	// 2nd run..
WITHOUT_CLASSIFICATION	// the driver must still be cached.
WITHOUT_CLASSIFICATION	// look for the driver path...
WITHOUT_CLASSIFICATION	//file time checks for java1.2+
WITHOUT_CLASSIFICATION	//only test on java1.5+
WITHOUT_CLASSIFICATION	// AntLikeTasksAtTopLevelTest
WITHOUT_CLASSIFICATION	//file length checks rely on touch generating a zero byte file
WITHOUT_CLASSIFICATION	// no-op: not a real business error
WITHOUT_CLASSIFICATION	//dont look for much text here as it is vendor and version dependent
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	/*     * PR 11100     */
WITHOUT_CLASSIFICATION	/*     * PR 38973     */
WITHOUT_CLASSIFICATION	/*     * PR 11100     */
WITHOUT_CLASSIFICATION	/*     * PR 16213     */
WITHOUT_CLASSIFICATION	/*     * PR 38973     */
WITHOUT_CLASSIFICATION	/*     * PR 21996     */
WITHOUT_CLASSIFICATION	/*     * PR 10504     */
WITHOUT_CLASSIFICATION	/*     * PR 20969     */
WITHOUT_CLASSIFICATION	// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.
WITHOUT_CLASSIFICATION	// should get no output at all
WITHOUT_CLASSIFICATION	// should get no output at all
WITHOUT_CLASSIFICATION	// should get no output at all
WITHOUT_CLASSIFICATION	// should get no output at all
WITHOUT_CLASSIFICATION	//this call should succeed as unless overrides if
WITHOUT_CLASSIFICATION	// test that the watchdog ends the process
WITHOUT_CLASSIFICATION	// test that the watchdog ends the process
WITHOUT_CLASSIFICATION	// and a little shorter
WITHOUT_CLASSIFICATION	// test that the watchdog ends the process
WITHOUT_CLASSIFICATION	// target must be specified
WITHOUT_CLASSIFICATION	// Should fail since a recursion will occur...
WITHOUT_CLASSIFICATION	// a rather convoluted equals() test
WITHOUT_CLASSIFICATION	// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());
WITHOUT_CLASSIFICATION	// allow this as imported in targets are only tested when a target is run
WITHOUT_CLASSIFICATION	// deactivate this test as imports within targets are not allowed
WITHOUT_CLASSIFICATION	// Running on Windows or something, so skip it.
WITHOUT_CLASSIFICATION	// remove log file from testSpawn
WITHOUT_CLASSIFICATION	// this is guaranteed by FileUtils#createTempFile
WITHOUT_CLASSIFICATION	// let's be nice with the next generation of developers
WITHOUT_CLASSIFICATION	//executeTarget("setup"); //commented out for performance while target is empty
WITHOUT_CLASSIFICATION	// target // file // exptected string
WITHOUT_CLASSIFICATION	// END class ManifestClassPathTest
WITHOUT_CLASSIFICATION	//      assertTrue("return code is invalid: " + retCode, retCode!=0);
WITHOUT_CLASSIFICATION	// test a process that runs and failed
WITHOUT_CLASSIFICATION	// process should abort
WITHOUT_CLASSIFICATION	// I assume that starting this takes less than TIME_OUT/2 ms...
WITHOUT_CLASSIFICATION	// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout
WITHOUT_CLASSIFICATION	// now stop the watchdog.
WITHOUT_CLASSIFICATION	// wait for the thread to die, should be the end of the process
WITHOUT_CLASSIFICATION	// process should be dead and well finished
WITHOUT_CLASSIFICATION	// We have to compare the decompressed content instead:
WITHOUT_CLASSIFICATION	//no point in setting a message
WITHOUT_CLASSIFICATION	// this is guaranteed by FileUtils#createTempFile
WITHOUT_CLASSIFICATION	// make the spawned process run 4 seconds
WITHOUT_CLASSIFICATION	// this loop runs parallel to the build
WITHOUT_CLASSIFICATION	// security
WITHOUT_CLASSIFICATION	// time of the build in milli seconds
WITHOUT_CLASSIFICATION	// Nothing specified -> Fail
WITHOUT_CLASSIFICATION	// Only property specified -> Fail
WITHOUT_CLASSIFICATION	// Only file specified -> Fail
WITHOUT_CLASSIFICATION	// file does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	// resource doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	// resource does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	// class doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	// class does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	// All three specified but class missing -> null
WITHOUT_CLASSIFICATION	// Specified property-name is "" -> true
WITHOUT_CLASSIFICATION	// Specified file is "" -> invalid files do not exist
WITHOUT_CLASSIFICATION	// Specified file is "" actually a directory, so it should pass
WITHOUT_CLASSIFICATION	// Specified resource is "" -> can such a thing exist?
WITHOUT_CLASSIFICATION	/*     * returns non null IBM JDK 1.3 Linux     */
WITHOUT_CLASSIFICATION	// Specified dir is "" -> this is the current directory and should // always exist
WITHOUT_CLASSIFICATION	// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...
WITHOUT_CLASSIFICATION	// Specified dir is "../this_dir_should_never_exist" -> null
WITHOUT_CLASSIFICATION	// Invalid type specified
WITHOUT_CLASSIFICATION	// Core class that exists in system classpath is ignored
WITHOUT_CLASSIFICATION	// Core class that exists in system classpath is not ignored with ignoresystemclass="false"
WITHOUT_CLASSIFICATION	// Core class that exists in system classpath is not ignored with default ignoresystemclasses value
WITHOUT_CLASSIFICATION	// Class is found in specified classpath
WITHOUT_CLASSIFICATION	// File is not found in specified filepath
WITHOUT_CLASSIFICATION	// test when file begins with basedir twice
WITHOUT_CLASSIFICATION	// test for searching parents
WITHOUT_CLASSIFICATION	// test for not searching parents
WITHOUT_CLASSIFICATION	// Output the default excludes
WITHOUT_CLASSIFICATION	// adding something to the excludes'
WITHOUT_CLASSIFICATION	// removing something from the defaults
WITHOUT_CLASSIFICATION	//CVS missing
WITHOUT_CLASSIFICATION	// target must be specified
WITHOUT_CLASSIFICATION	// We try to delete the directory created in CopydirTest
WITHOUT_CLASSIFICATION	// check that both arrays have the same size
WITHOUT_CLASSIFICATION	//instance variable to allow cleanup
WITHOUT_CLASSIFICATION	//ignored
WITHOUT_CLASSIFICATION	// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..
WITHOUT_CLASSIFICATION	// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.
WITHOUT_CLASSIFICATION	//printProperties(p.getProperties());
WITHOUT_CLASSIFICATION	// Every key identified by the Properties must have been loaded.
WITHOUT_CLASSIFICATION	// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.
WITHOUT_CLASSIFICATION	// Substitute .xml with .properties
WITHOUT_CLASSIFICATION	// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory
WITHOUT_CLASSIFICATION	// Output an empty String
WITHOUT_CLASSIFICATION	// Output 'OUTPUT OF ECHO'
WITHOUT_CLASSIFICATION	/*          * @param message         */
WITHOUT_CLASSIFICATION	// make sure that the parsing does not break
WITHOUT_CLASSIFICATION	// where the name contains <>
WITHOUT_CLASSIFICATION	// where only an address is supplied
WITHOUT_CLASSIFICATION	// Tests property element, using XML schema properties as an example.
WITHOUT_CLASSIFICATION	// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g
WITHOUT_CLASSIFICATION	// execute
WITHOUT_CLASSIFICATION	// override some of the code so we can test the handling of the // return code only.
WITHOUT_CLASSIFICATION	// ask ant to update the properties...
WITHOUT_CLASSIFICATION	// to override
WITHOUT_CLASSIFICATION	// just to be sure
WITHOUT_CLASSIFICATION	// just to be sure
WITHOUT_CLASSIFICATION	// read in the file
WITHOUT_CLASSIFICATION	// found the property we set - it's good.
WITHOUT_CLASSIFICATION	// else
WITHOUT_CLASSIFICATION	// else
WITHOUT_CLASSIFICATION	// ReplaceRegExpTest
WITHOUT_CLASSIFICATION	// test for 10 consecutives transform
WITHOUT_CLASSIFICATION	//java keywords are not special
WITHOUT_CLASSIFICATION	//underscores go in front of invalid start chars
WITHOUT_CLASSIFICATION	//underscores at the front get an underscore too
WITHOUT_CLASSIFICATION	//non java char at start => underscore then the the _hex value
WITHOUT_CLASSIFICATION	//and paths are stripped
WITHOUT_CLASSIFICATION	/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */
WITHOUT_CLASSIFICATION	// byte - byte compare
WITHOUT_CLASSIFICATION	// avoid endless loop
WITHOUT_CLASSIFICATION	// those would fail because of the way BuildFileTest captures output
WITHOUT_CLASSIFICATION	//To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// father and child pattern test
WITHOUT_CLASSIFICATION	// redo the test, but the 2 include patterns are inverted
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// On junit3 this is a FAILURE, on junit4 this is an ERROR
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// mandatory constructor
WITHOUT_CLASSIFICATION	// check that a suite generates no errors
WITHOUT_CLASSIFICATION	// check that having no suite generates no errors
WITHOUT_CLASSIFICATION	// check that something which is not a testcase generates no errors // at first even though this is incorrect.
WITHOUT_CLASSIFICATION	// check that an invalid suite generates an error.
WITHOUT_CLASSIFICATION	// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());
WITHOUT_CLASSIFICATION	// On junit3 this is a FAILURE, on junit4 this is an ERROR
WITHOUT_CLASSIFICATION	/*          * @param event the build event that is being logged.         */
WITHOUT_CLASSIFICATION	// check that an exception in the constructor is noticed
WITHOUT_CLASSIFICATION	// the test runner that wrap the dummy formatter that interests us
WITHOUT_CLASSIFICATION	// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.
WITHOUT_CLASSIFICATION	// dummy formatter just to catch the error
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// byte - byte compare
WITHOUT_CLASSIFICATION	/*          * @param event the build event that is being logged.         */
WITHOUT_CLASSIFICATION	// get the fileset and its basedir
WITHOUT_CLASSIFICATION	// get the fileset and its basedir
WITHOUT_CLASSIFICATION	// get the fileset and its basedir
WITHOUT_CLASSIFICATION	// Set up a SOSGet task
WITHOUT_CLASSIFICATION	// Set up a SOSGet task
WITHOUT_CLASSIFICATION	// Set up a SOSCheckin task
WITHOUT_CLASSIFICATION	// Set up a SOSCheckin task
WITHOUT_CLASSIFICATION	// Set up a SOSCheckout task
WITHOUT_CLASSIFICATION	// Set up a sosCheckout task
WITHOUT_CLASSIFICATION	// Set up a sosCheckout task
WITHOUT_CLASSIFICATION	// We have extra elements
WITHOUT_CLASSIFICATION	// give it some time to display
WITHOUT_CLASSIFICATION	// Set up a VSSGet task
WITHOUT_CLASSIFICATION	// Set up a VSSLabel task
WITHOUT_CLASSIFICATION	// Set up a VSSLabel task
WITHOUT_CLASSIFICATION	// Set up a VSSHistory task
WITHOUT_CLASSIFICATION	// Set up a VSSHistory task
WITHOUT_CLASSIFICATION	// Set up a Timestamp
WITHOUT_CLASSIFICATION	// Get today's date
WITHOUT_CLASSIFICATION	// Set up a VSSCheckIn task
WITHOUT_CLASSIFICATION	// Set up a VSSCheckOut task
WITHOUT_CLASSIFICATION	// Set up a VSSAdd task
WITHOUT_CLASSIFICATION	// Set up a VSSCp task
WITHOUT_CLASSIFICATION	// Set up a VSSCreate task
WITHOUT_CLASSIFICATION	// Count the number of empty strings
WITHOUT_CLASSIFICATION	// ran Ant tests with -ea and this would fail spuriously
WITHOUT_CLASSIFICATION	// now to the expected failures
WITHOUT_CLASSIFICATION	// catalog <--> catalog
WITHOUT_CLASSIFICATION	// catalog1 --> catalog2 --> catalog3 --> catalog1
WITHOUT_CLASSIFICATION	// catalog2 --> catalog1 --> catalog
WITHOUT_CLASSIFICATION	//check that dir and src are incompatible
WITHOUT_CLASSIFICATION	//check that fullpath and prefix are incompatible
WITHOUT_CLASSIFICATION	// check that reference zipfilesets cannot have specific attributes
WITHOUT_CLASSIFICATION	// check that a reference zipfileset gets the same attributes as the original
WITHOUT_CLASSIFICATION	//check that dir and src are incompatible
WITHOUT_CLASSIFICATION	// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //
WITHOUT_CLASSIFICATION	//check that dir and src are incompatible
WITHOUT_CLASSIFICATION	//check that fullpath and prefix are incompatible
WITHOUT_CLASSIFICATION	// try a netware-volume length path, see how it is handled
WITHOUT_CLASSIFICATION	// actually tests constructor as well as setPath
WITHOUT_CLASSIFICATION	// check that reference tarfilesets cannot have specific attributes
WITHOUT_CLASSIFICATION	// try a multi-part netware-volume length path w/forward slash, see how it is handled
WITHOUT_CLASSIFICATION	// try a multi-part netware-volume length path, see how it is handled
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// try a netware-volume length path w/forward slash, see how it is handled
WITHOUT_CLASSIFICATION	// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 (with Path "/a")
WITHOUT_CLASSIFICATION	// This class acts as a custom Ant task also // and uses these variables/methods in that mode
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).
WITHOUT_CLASSIFICATION	// Grant extra permissions to read and write the user.* properties and read to the // java.home property
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")
WITHOUT_CLASSIFICATION	// check that a reference tarfileset gets the same attributes as the original
WITHOUT_CLASSIFICATION	// was expected
WITHOUT_CLASSIFICATION	// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.
WITHOUT_CLASSIFICATION	// Was expected, test passes
WITHOUT_CLASSIFICATION	// Was expected, test passes
WITHOUT_CLASSIFICATION	// Was expected, test passes
WITHOUT_CLASSIFICATION	/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */
WITHOUT_CLASSIFICATION	//        assertEquals("with classpath", "java", s[0]);
WITHOUT_CLASSIFICATION	// only the second iteration would pass because of PR 27218
WITHOUT_CLASSIFICATION	//mix element types
WITHOUT_CLASSIFICATION	//implicit composite
WITHOUT_CLASSIFICATION	// a --> b --> c --- def //               \-- ghi
WITHOUT_CLASSIFICATION	// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //
WITHOUT_CLASSIFICATION	// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //
WITHOUT_CLASSIFICATION	// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid
WITHOUT_CLASSIFICATION	// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //
WITHOUT_CLASSIFICATION	// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //
WITHOUT_CLASSIFICATION	// The following will be used as types and tasks
WITHOUT_CLASSIFICATION	// share the setup for testing the depend task
WITHOUT_CLASSIFICATION	// Test for path relative to project base directory
WITHOUT_CLASSIFICATION	//class-MockCache
WITHOUT_CLASSIFICATION	//  =====================  attributes  =====================
WITHOUT_CLASSIFICATION	//class-MockCache
WITHOUT_CLASSIFICATION	//  =====================  constructors, factories  =====================
WITHOUT_CLASSIFICATION	//  =====================  JUnit stuff  =====================
WITHOUT_CLASSIFICATION	// project reference is set in super.setUp()
WITHOUT_CLASSIFICATION	// init the testclasses path object
WITHOUT_CLASSIFICATION	/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */
WITHOUT_CLASSIFICATION	// =======  testcases for the attributes and nested elements of the selector  =====
WITHOUT_CLASSIFICATION	// do the actions
WITHOUT_CLASSIFICATION	// do the checks - the buildfile stores the fileset as property
WITHOUT_CLASSIFICATION	// must be empty according to the Mock* implementations
WITHOUT_CLASSIFICATION	// don't catch the JUnit exceptions
WITHOUT_CLASSIFICATION	// no check for 1<=kind<=3 - only internal use therefore check it // while development
WITHOUT_CLASSIFICATION	// readable form of parameter kind
WITHOUT_CLASSIFICATION	// setup the "Ant project"
WITHOUT_CLASSIFICATION	// setup the selector
WITHOUT_CLASSIFICATION	// get the cache, so we can check our things
WITHOUT_CLASSIFICATION	// the test
WITHOUT_CLASSIFICATION	// MockCache doesnt create a file - therefore no cleanup needed
WITHOUT_CLASSIFICATION	// add the test classes to its classpath
WITHOUT_CLASSIFICATION	// let the selector do its checks
WITHOUT_CLASSIFICATION	// extract the algorithm name (and config) from the selectors output
WITHOUT_CLASSIFICATION	// '<' and '>' are only used if the algorithm has properties
WITHOUT_CLASSIFICATION	// return the clean value
WITHOUT_CLASSIFICATION	// initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	// initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	// Configure the selector
WITHOUT_CLASSIFICATION	// Configure the selector
WITHOUT_CLASSIFICATION	// does the selection
WITHOUT_CLASSIFICATION	// evaluate correctness
WITHOUT_CLASSIFICATION	// evaluate correctness
WITHOUT_CLASSIFICATION	// same logic as on algorithm, no testcases created
WITHOUT_CLASSIFICATION	// same logic as on algorithm, no testcases created
WITHOUT_CLASSIFICATION	// given cache must be empty
WITHOUT_CLASSIFICATION	// cache must return a stored value
WITHOUT_CLASSIFICATION	// test the iterator
WITHOUT_CLASSIFICATION	// clear the cache
WITHOUT_CLASSIFICATION	// must not be a directory
WITHOUT_CLASSIFICATION	// get the Hashvalues
WITHOUT_CLASSIFICATION	// Assert !=null and equality
WITHOUT_CLASSIFICATION	//if-isFile //for
WITHOUT_CLASSIFICATION	// ==============  testcases for the comparator implementations  ==============
WITHOUT_CLASSIFICATION	//not yet supported see note in selector
WITHOUT_CLASSIFICATION	//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();
WITHOUT_CLASSIFICATION	// really "2"
WITHOUT_CLASSIFICATION	// Configure the selector - only defaults are used
WITHOUT_CLASSIFICATION	//                     + "  <emptyElement></emptyElement>"
WITHOUT_CLASSIFICATION	/* ============ ResourceFactory interface ====================== */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	//class-BFT
WITHOUT_CLASSIFICATION	// do the actions
WITHOUT_CLASSIFICATION	// don't catch the JUnit exceptions
WITHOUT_CLASSIFICATION	// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //
WITHOUT_CLASSIFICATION	// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //
WITHOUT_CLASSIFICATION	// // *****  make some files dirty  ***** //
WITHOUT_CLASSIFICATION	// these files are made dirty --> 3+4 with different content
WITHOUT_CLASSIFICATION	// AccessObject to the test-Ant-environment
WITHOUT_CLASSIFICATION	// give some values (via property file) to that environment
WITHOUT_CLASSIFICATION	// call the target for making the files dirty
WITHOUT_CLASSIFICATION	// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)
WITHOUT_CLASSIFICATION	// // *****  Check the result  ***** //
WITHOUT_CLASSIFICATION	// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.
WITHOUT_CLASSIFICATION	// f2name shouldn't be selected: only timestamp has changed!
WITHOUT_CLASSIFICATION	// info text // list of files // expected result // result
WITHOUT_CLASSIFICATION	// cleanup the environment
WITHOUT_CLASSIFICATION	// cleanup the environment
WITHOUT_CLASSIFICATION	// RuleBasedCollator not yet supported - see Selector:375 note
WITHOUT_CLASSIFICATION	//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid
WITHOUT_CLASSIFICATION	// first and second run
WITHOUT_CLASSIFICATION	// make dirty
WITHOUT_CLASSIFICATION	// third run
WITHOUT_CLASSIFICATION	// the directories to check
WITHOUT_CLASSIFICATION	// do the checks
WITHOUT_CLASSIFICATION	//class-MockProject
WITHOUT_CLASSIFICATION	//class-ModifiedSelectorTest
WITHOUT_CLASSIFICATION	// First read in zero bytes
WITHOUT_CLASSIFICATION	// Now read in the string
WITHOUT_CLASSIFICATION	// Make sure that the counts are the same
WITHOUT_CLASSIFICATION	// LineOrientedOutputStreamTest
WITHOUT_CLASSIFICATION	// make sure that elapsed time in set via date works
WITHOUT_CLASSIFICATION	// make sure that elapsed time in ms works
WITHOUT_CLASSIFICATION	// should be new moon
WITHOUT_CLASSIFICATION	// Try a silly case
WITHOUT_CLASSIFICATION	// and a little longer
WITHOUT_CLASSIFICATION	/*             * throw in drive letters             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	/*             * Start with simple absolute file names.             */
WITHOUT_CLASSIFICATION	/*             * Start with simple absolute file names.             */
WITHOUT_CLASSIFICATION	/*         * Now test some relative file name magic.         */
WITHOUT_CLASSIFICATION	/*         * Now test some relative file name magic.         */
WITHOUT_CLASSIFICATION	// implies lastModified == 0
WITHOUT_CLASSIFICATION	/* ============ FileNameMapper interface ======================= */
WITHOUT_CLASSIFICATION	// Windows adds the drive letter in uppercase, unless you run Cygwin
WITHOUT_CLASSIFICATION	/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */
WITHOUT_CLASSIFICATION	// number of milliseconds in a day
WITHOUT_CLASSIFICATION	// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000
WITHOUT_CLASSIFICATION	/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */
WITHOUT_CLASSIFICATION	/*             * throw in NetWare volume names             */
WITHOUT_CLASSIFICATION	/*             * throw in NetWare volume names             */
WITHOUT_CLASSIFICATION	/*             * drive letters must be considered just normal filenames.             */
WITHOUT_CLASSIFICATION	// Passed test 
WITHOUT_CLASSIFICATION	// Expected exception caught
WITHOUT_CLASSIFICATION	// Expected exception caught
WITHOUT_CLASSIFICATION	// null parent dir
WITHOUT_CLASSIFICATION	//preserve case on Cygwin when using 1.4 toURI:
WITHOUT_CLASSIFICATION	// OK, Java 1.3.
WITHOUT_CLASSIFICATION	//get a time
WITHOUT_CLASSIFICATION	//add some time. We assume no OS has a granularity this bad
WITHOUT_CLASSIFICATION	/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */
WITHOUT_CLASSIFICATION	//check that older is up to date with a newer dest
WITHOUT_CLASSIFICATION	//check that older is up to date with a newer dest
WITHOUT_CLASSIFICATION	// This just tests that the function does not blow up
WITHOUT_CLASSIFICATION	// java.home is bogus
WITHOUT_CLASSIFICATION	// could still be OS/2
WITHOUT_CLASSIFICATION	// 27224 = magic (a random port which is unlikely to be in use)
WITHOUT_CLASSIFICATION	// order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	// state engine: false=envelope, true=message
WITHOUT_CLASSIFICATION	// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)
WITHOUT_CLASSIFICATION	// sb.append( response + "\r\n" );
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// wait for connection
WITHOUT_CLASSIFICATION	//throw new IllegalStateException("Command unrecognized: " //    + response);
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// while
WITHOUT_CLASSIFICATION	// CRC manually calculated, sorry // CRC // mode // link length // uid, gid
WITHOUT_CLASSIFICATION	// CRC manually calculated, sorry // CRC // mode // link length // uid, gid
WITHOUT_CLASSIFICATION	// CRC // mode // link length // uid, gid
WITHOUT_CLASSIFICATION	// CRC // mode // link length // uid, gid
WITHOUT_CLASSIFICATION	// CRC // mode // link // uid, gid
WITHOUT_CLASSIFICATION	// bad CRC // mode // link // uid, gid
WITHOUT_CLASSIFICATION	//if we got here, all was well
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	// Filter out messages based on priority
WITHOUT_CLASSIFICATION	// Print out the name of the task if we're in one
WITHOUT_CLASSIFICATION	// shouldn't be possible
WITHOUT_CLASSIFICATION	// Set up PRIMITIVE_TYPE_MAP
WITHOUT_CLASSIFICATION	// check of add[Configured](Class) pattern
WITHOUT_CLASSIFICATION	// not really user settable properties on tasks/project components
WITHOUT_CLASSIFICATION	// hide addTask for TaskContainers
WITHOUT_CLASSIFICATION	// use wrappers for primitive classes, e.g. int and // Integer are treated identically
WITHOUT_CLASSIFICATION	// Check if a create of this property is already present // add takes preference over create for CB purposes
WITHOUT_CLASSIFICATION	/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */
WITHOUT_CLASSIFICATION	// If a helper cannot be found, or if the helper is for another // classloader, create a new IH
WITHOUT_CLASSIFICATION	// Ignore attribute from unknown uri's
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// Element doesn't handle text content
WITHOUT_CLASSIFICATION	// Not whitespace - fail
WITHOUT_CLASSIFICATION	// Only whitespace - ignore
WITHOUT_CLASSIFICATION	// Class doesn't have a String constructor but a decent factory method
WITHOUT_CLASSIFICATION	// char and Character get special treatment - take the first character
WITHOUT_CLASSIFICATION	// simplest case - setAttribute expects String
WITHOUT_CLASSIFICATION	// First try with Project.
WITHOUT_CLASSIFICATION	// EnumeratedAttributes have their own helper class
WITHOUT_CLASSIFICATION	// resolve relative paths through Project
WITHOUT_CLASSIFICATION	/** Version to use for addXXX and addConfiguredXXX */
WITHOUT_CLASSIFICATION	// Well, no matching constructor.
WITHOUT_CLASSIFICATION	// OK, try without.
WITHOUT_CLASSIFICATION	// the method called to add/create the nested element
WITHOUT_CLASSIFICATION	// DO NOTHING
WITHOUT_CLASSIFICATION	// ADD or ADD_CONFIGURED
WITHOUT_CLASSIFICATION	// the method called to set the attribute
WITHOUT_CLASSIFICATION	// add configured replaces the add method
WITHOUT_CLASSIFICATION	// maintain a sorted list of targets
WITHOUT_CLASSIFICATION	// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean
WITHOUT_CLASSIFICATION	// Already present
WITHOUT_CLASSIFICATION	// higher derived
WITHOUT_CLASSIFICATION	// print the stacktrace in the build file it is always useful... // better have too much info than not enough.
WITHOUT_CLASSIFICATION	// specify output in UTF8 otherwise accented characters will blow // up everything
WITHOUT_CLASSIFICATION	/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */
WITHOUT_CLASSIFICATION	// -------------------------------------------------- BuildLogger interface
WITHOUT_CLASSIFICATION	// Shouldn't happen
WITHOUT_CLASSIFICATION	// LF is always end of line (i.e. CRLF or single LF)
WITHOUT_CLASSIFICATION	// CR without LF - send buffer then add char
WITHOUT_CLASSIFICATION	// add into buffer
WITHOUT_CLASSIFICATION	// either end of buffer or a line separator char
WITHOUT_CLASSIFICATION	// check adapter
WITHOUT_CLASSIFICATION	//can throw the same exception, if there is no this(Project) ctor.
WITHOUT_CLASSIFICATION	//now we instantiate
WITHOUT_CLASSIFICATION	//set up project references.
WITHOUT_CLASSIFICATION	/** Our current message output status. Follows Project.MSG_XXX. */
WITHOUT_CLASSIFICATION	/* null */
WITHOUT_CLASSIFICATION	// expect the worst
WITHOUT_CLASSIFICATION	//this is the list of lu
WITHOUT_CLASSIFICATION	// cycle through given args
WITHOUT_CLASSIFICATION	// set the flag to display the targets and quit
WITHOUT_CLASSIFICATION	// eat up next arg if present, default to build.xml
WITHOUT_CLASSIFICATION	// we don't have any more args to recognize!
WITHOUT_CLASSIFICATION	// if it's no other arg, it may be the target
WITHOUT_CLASSIFICATION	// if buildFile was not specified on the command line,
WITHOUT_CLASSIFICATION	// but -find then search for it
WITHOUT_CLASSIFICATION	// make sure buildfile exists
WITHOUT_CLASSIFICATION	// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category
WITHOUT_CLASSIFICATION	// Load the property files specified by -propertyfile
WITHOUT_CLASSIFICATION	// ensure that -D properties take precedence
WITHOUT_CLASSIFICATION	// check if the target file exists in the current directory
WITHOUT_CLASSIFICATION	// change to parent directory
WITHOUT_CLASSIFICATION	// refresh our file handle
WITHOUT_CLASSIFICATION	// use a system manager that prevents from System.exit()
WITHOUT_CLASSIFICATION	//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());
WITHOUT_CLASSIFICATION	// set the thread priorities
WITHOUT_CLASSIFICATION	//we cannot set the priority here.
WITHOUT_CLASSIFICATION	// set user-define properties
WITHOUT_CLASSIFICATION	//proxy setup if enabled
WITHOUT_CLASSIFICATION	// make sure that we have a target to execute
WITHOUT_CLASSIFICATION	// Add the default listener
WITHOUT_CLASSIFICATION	// find the target with the longest name
WITHOUT_CLASSIFICATION	// split the targets in top-level and sub-targets depending // on the presence of a description
WITHOUT_CLASSIFICATION	// shouldn't need to check but...
WITHOUT_CLASSIFICATION	// now, start printing the targets and their descriptions
WITHOUT_CLASSIFICATION	// got a bit annoyed that I couldn't find a pad function
WITHOUT_CLASSIFICATION	/*<String,String>*/
WITHOUT_CLASSIFICATION	//At least one constructor is guaranteed to be there, but check anyway.
WITHOUT_CLASSIFICATION	// is the zip file in the cache
WITHOUT_CLASSIFICATION	// store the token just read for next time
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// add the types of the parent project
WITHOUT_CLASSIFICATION	// ignore path elements which are not valid relative to the // project
WITHOUT_CLASSIFICATION	// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments
WITHOUT_CLASSIFICATION	// we need to search the components of the path to see if we can // find the class we want.
WITHOUT_CLASSIFICATION	// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)
WITHOUT_CLASSIFICATION	// we need to search the components of the path to see if // we can find the class we want.
WITHOUT_CLASSIFICATION	// try and load from this loader if the parent either didn't find // it or wasn't consulted.
WITHOUT_CLASSIFICATION	// this loader was first but it didn't find it - try the parent
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	// Delegate to the parent:
WITHOUT_CLASSIFICATION	// Note: could cause overlaps in case ClassLoader.this.parent has matches.
WITHOUT_CLASSIFICATION	// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:
WITHOUT_CLASSIFICATION	// Normal case.
WITHOUT_CLASSIFICATION	// Inverted.
WITHOUT_CLASSIFICATION	// already defined
WITHOUT_CLASSIFICATION	// define the package now
WITHOUT_CLASSIFICATION	// ioe.printStackTrace();
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// {tasks, types}
WITHOUT_CLASSIFICATION	// add the parsed namespaces of the parent project
WITHOUT_CLASSIFICATION	// we need to search the components of the path to see if // we can find the class we want.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// don't have to check for public, since // getConstructor finds public constructors only.
WITHOUT_CLASSIFICATION	// set default value, can be changed by the user
WITHOUT_CLASSIFICATION	//too bad
WITHOUT_CLASSIFICATION	//must have same validity; then if they are valid they must also be the same:
WITHOUT_CLASSIFICATION	// namespace that does not contain antlib
WITHOUT_CLASSIFICATION	// Already processed
WITHOUT_CLASSIFICATION	//there to stop error messages being "null"
WITHOUT_CLASSIFICATION	//if this is left out, bad things happen. like all build files break //on the first element encountered.
WITHOUT_CLASSIFICATION	// a fishing expedition :- ignore errors if antlib not present
WITHOUT_CLASSIFICATION	//class of problem
WITHOUT_CLASSIFICATION	//running under an IDE that doesn't set ANT_HOME
WITHOUT_CLASSIFICATION	//look up the name
WITHOUT_CLASSIFICATION	//we are defined, so it is an instantiation problem
WITHOUT_CLASSIFICATION	//start with instantiating the class.
WITHOUT_CLASSIFICATION	//here we successfully loaded the class or failed.
WITHOUT_CLASSIFICATION	//success: proceed with more steps
WITHOUT_CLASSIFICATION	//hey, there is nothing wrong with us
WITHOUT_CLASSIFICATION	/*<Thread,Task>*/
WITHOUT_CLASSIFICATION	/*<ThreadGroup,Task>*/
WITHOUT_CLASSIFICATION	// If the listeners already has this listener, do nothing
WITHOUT_CLASSIFICATION	// we need to build the hashtable dynamically
WITHOUT_CLASSIFICATION	// sanity check
WITHOUT_CLASSIFICATION	//try the current classloader
WITHOUT_CLASSIFICATION	// throw further
WITHOUT_CLASSIFICATION	// only the first build exception is reported
WITHOUT_CLASSIFICATION	// Make sure we exist
WITHOUT_CLASSIFICATION	// Currently visiting this node, so have a cycle
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire
WITHOUT_CLASSIFICATION	// sanity check ourselves, if we've been asked to build nothing // then we should complain
WITHOUT_CLASSIFICATION	// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.
WITHOUT_CLASSIFICATION	// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.
WITHOUT_CLASSIFICATION	// no warning, this is not changing anything
WITHOUT_CLASSIFICATION	// Check for old id behaviour
WITHOUT_CLASSIFICATION	// Inform IH to clear the cache
WITHOUT_CLASSIFICATION	// register this as the current task on the current thread.
WITHOUT_CLASSIFICATION	// Make sure that
WITHOUT_CLASSIFICATION	// ignore this if the object does not have // a set project method or the method // is private/protected.
WITHOUT_CLASSIFICATION	//override facility for subclasses to put custom hashtables in
WITHOUT_CLASSIFICATION	// --------------------  Hook management  --------------------
WITHOUT_CLASSIFICATION	// --------------------  Methods to override  --------------------
WITHOUT_CLASSIFICATION	// If next has handled the property
WITHOUT_CLASSIFICATION	// try to get it from the project or keys // Backward compatibility
WITHOUT_CLASSIFICATION	// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.
WITHOUT_CLASSIFICATION	// user (CLI) properties take precedence
WITHOUT_CLASSIFICATION	// -------------------- Getting properties  --------------------
WITHOUT_CLASSIFICATION	// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).
WITHOUT_CLASSIFICATION	//search for the next instance of $ from the 'prev' position
WITHOUT_CLASSIFICATION	//if we are at the end of the string, we tack on a $ //then move past it
WITHOUT_CLASSIFICATION	//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal
WITHOUT_CLASSIFICATION	//backwards compatibility two $ map to one mode
WITHOUT_CLASSIFICATION	//new behaviour: $X maps to $X for all values of X!='$'
WITHOUT_CLASSIFICATION	//property found, extract its name or bail on a typo
WITHOUT_CLASSIFICATION	//no more $ signs found //if there is any tail to the file, append it
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	// The children are added to after this cloning
WITHOUT_CLASSIFICATION	// Make sure the dependency is not empty string
WITHOUT_CLASSIFICATION	// Make sure that depends attribute does not // end in a ,
WITHOUT_CLASSIFICATION	// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();
WITHOUT_CLASSIFICATION	//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }
WITHOUT_CLASSIFICATION	// --------------------  Parse method  --------------------
WITHOUT_CLASSIFICATION	// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app
WITHOUT_CLASSIFICATION	// First, try the system property
WITHOUT_CLASSIFICATION	// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.
WITHOUT_CLASSIFICATION	// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces
WITHOUT_CLASSIFICATION	// try next method
WITHOUT_CLASSIFICATION	// -------------------- Static utils, used by most helpers ----------------
WITHOUT_CLASSIFICATION	// reflect these into the target
WITHOUT_CLASSIFICATION	// id attribute must be set externally
WITHOUT_CLASSIFICATION	// needed since project properties are not accessible
WITHOUT_CLASSIFICATION	/*<UnknownElement>*/
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	/*<String,String>*/
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// reflect these into the target
WITHOUT_CLASSIFICATION	// id attribute must be set externally
WITHOUT_CLASSIFICATION	// Attributes
WITHOUT_CLASSIFICATION	// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task
WITHOUT_CLASSIFICATION	// plain impossible to get here, maybeConfigure should // have thrown an exception.
WITHOUT_CLASSIFICATION	// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made
WITHOUT_CLASSIFICATION	// Do the runtime
WITHOUT_CLASSIFICATION	// UnknownElement always has an associated target
WITHOUT_CLASSIFICATION	//return elementName;
WITHOUT_CLASSIFICATION	// Are the names the same ?
WITHOUT_CLASSIFICATION	// Are attributes the same ?
WITHOUT_CLASSIFICATION	// Are the sub elements the same ?
WITHOUT_CLASSIFICATION	// hidden constructor
WITHOUT_CLASSIFICATION	//create the file
WITHOUT_CLASSIFICATION	//do some writing to it
WITHOUT_CLASSIFICATION	//calendar stuff.
WITHOUT_CLASSIFICATION	//not included, do nothing
WITHOUT_CLASSIFICATION	// not included, to nothing
WITHOUT_CLASSIFICATION	/*<RuntimeConfigurable>*/
WITHOUT_CLASSIFICATION	/*<String>*/
WITHOUT_CLASSIFICATION	// Configure the object
WITHOUT_CLASSIFICATION	// Most likely an UnknownElement
WITHOUT_CLASSIFICATION	// Children (this is a shadow of UnknownElement#children)
WITHOUT_CLASSIFICATION	// poly type
WITHOUT_CLASSIFICATION	// Text
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// store the token just read for next time
WITHOUT_CLASSIFICATION	// a task container - anything could happen - just add the // child to the container
WITHOUT_CLASSIFICATION	// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.
WITHOUT_CLASSIFICATION	// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing
WITHOUT_CLASSIFICATION	// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.
WITHOUT_CLASSIFICATION	// we are on a dos style system so this path could be a drive // spec. We look at the next token
WITHOUT_CLASSIFICATION	// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// ignore ";" and get the next token
WITHOUT_CLASSIFICATION	// this path could be a drive spec, so look at the next token
WITHOUT_CLASSIFICATION	// it indeed is a drive spec, get the next bit
WITHOUT_CLASSIFICATION	// implicit else: ignore the ':' since we have either a // UNIX or a relative path
WITHOUT_CLASSIFICATION	// Miscellaneous typical temporary files
WITHOUT_CLASSIFICATION	// CVS
WITHOUT_CLASSIFICATION	// SCCS
WITHOUT_CLASSIFICATION	// Visual SourceSafe
WITHOUT_CLASSIFICATION	// Subversion
WITHOUT_CLASSIFICATION	// set in/excludes to reasonable defaults if needed:
WITHOUT_CLASSIFICATION	// if no basedir and no includes, nothing to do:
WITHOUT_CLASSIFICATION	//skip abs. paths not under basedir, if set:
WITHOUT_CLASSIFICATION	//skip non-abs. paths if basedir == null:
WITHOUT_CLASSIFICATION	// we are going to scan everything anyway
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// will be caught and redirected to Ant's logging system
WITHOUT_CLASSIFICATION	// will be caught and redirected to Ant's logging system
WITHOUT_CLASSIFICATION	//removing base from path yields no change; path not child of base
WITHOUT_CLASSIFICATION	/* package-private */
WITHOUT_CLASSIFICATION	// do the "singleton" initialization
WITHOUT_CLASSIFICATION	// Add the explicit resource collections to the archive.
WITHOUT_CLASSIFICATION	// EOL was "\r\n"
WITHOUT_CLASSIFICATION	// don't have to check for interface, since then // taskClass would be abstract too.
WITHOUT_CLASSIFICATION	// ignore this if the class being used as a task does not have // a set location method.
WITHOUT_CLASSIFICATION	// ignore this if the class being used as a task does not have // a set project method.
WITHOUT_CLASSIFICATION	// put in the newroots map the include patterns without // wildcard tokens
WITHOUT_CLASSIFICATION	// only scan directories that can include matched files or // directories
WITHOUT_CLASSIFICATION	// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.
WITHOUT_CLASSIFICATION	// adapt currentelement to the case we've // actually found
WITHOUT_CLASSIFICATION	// I am the only one so I have to close the reader
WITHOUT_CLASSIFICATION	// I am the only one so I have to close the reader
WITHOUT_CLASSIFICATION	// get parameters
WITHOUT_CLASSIFICATION	// Calculate the EOL string per the current config
WITHOUT_CLASSIFICATION	// assume (eol == CrLf.LF || eol == CrLf.UNIX)
WITHOUT_CLASSIFICATION	// Add/Remove tabs
WITHOUT_CLASSIFICATION	// Add missing EOF character
WITHOUT_CLASSIFICATION	// Mask, block from being edited, all characters in constants.
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// EOL
WITHOUT_CLASSIFICATION	// EOL was "\n"
WITHOUT_CLASSIFICATION	// EOL was "\r\r\n"
WITHOUT_CLASSIFICATION	// EOL was "\r"
WITHOUT_CLASSIFICATION	// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)
WITHOUT_CLASSIFICATION	// if source is EOF but last character was NOT ctrl-z, return ctrl-z
WITHOUT_CLASSIFICATION	// Return current look-ahead
WITHOUT_CLASSIFICATION	// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"
WITHOUT_CLASSIFICATION	// Instance initializer: Executes just after the super() call in this // class's constructor.
WITHOUT_CLASSIFICATION	// Return copy so that the call must call setEof() to change the state // of fixCRLF
WITHOUT_CLASSIFICATION	// Return copy so that the call must call setEol() to change the state // of fixCRLF
WITHOUT_CLASSIFICATION	// Return copy so that the caller must call setTab() to change the state // of fixCRLF.
WITHOUT_CLASSIFICATION	// If I'm removing an EOF character, do so first so that the other // filters don't see that character.
WITHOUT_CLASSIFICATION	// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.
WITHOUT_CLASSIFICATION	// If filtering Java source, prevent changes to whitespace in // character and string literals.
WITHOUT_CLASSIFICATION	// Works like clone() but doesn't show up in the Javadocs
WITHOUT_CLASSIFICATION	// getConstants is a static method, no need to // pass in the object
WITHOUT_CLASSIFICATION	//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read
WITHOUT_CLASSIFICATION	//replace the last 0s by the chars contained in s
WITHOUT_CLASSIFICATION	// line started with comment
WITHOUT_CLASSIFICATION	// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------
WITHOUT_CLASSIFICATION	// write everything up to the from
WITHOUT_CLASSIFICATION	// write the replacement to
WITHOUT_CLASSIFICATION	// search again
WITHOUT_CLASSIFICATION	// write the remaining characters
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------
WITHOUT_CLASSIFICATION	//Remove start and end quotes if field is a String
WITHOUT_CLASSIFICATION	// default buffer size
WITHOUT_CLASSIFICATION	/* Stateless */
WITHOUT_CLASSIFICATION	// singletons - since all state is in the context
WITHOUT_CLASSIFICATION	// we are in an imported file.
WITHOUT_CLASSIFICATION	// top level file
WITHOUT_CLASSIFICATION	// ?? OK ??
WITHOUT_CLASSIFICATION	// use default if not file or file not found
WITHOUT_CLASSIFICATION	// Set the location of the implicit target associated with the project tag
WITHOUT_CLASSIFICATION	// Ignore attributes from unknown uris
WITHOUT_CLASSIFICATION	// Ignore attributes from unknown uris
WITHOUT_CLASSIFICATION	// What's the difference between id and name ?
WITHOUT_CLASSIFICATION	// no further processing
WITHOUT_CLASSIFICATION	// set explicitly before starting ?
WITHOUT_CLASSIFICATION	// Default for baseDir is the location of the build file.
WITHOUT_CLASSIFICATION	// check whether the user has specified an absolute path
WITHOUT_CLASSIFICATION	// Check if this target is in the current build file
WITHOUT_CLASSIFICATION	// If the name has not already been defined define it
WITHOUT_CLASSIFICATION	// In an impored file (and not completely // ignoring the project tag)
WITHOUT_CLASSIFICATION	/* UnknownElement is used for tasks and data types - with               delayed eval */
WITHOUT_CLASSIFICATION	// Nested element
WITHOUT_CLASSIFICATION	// Task included in a target ( including the default one ).
WITHOUT_CLASSIFICATION	// container.addTask(task); // This is a nop in UE: task.init();
WITHOUT_CLASSIFICATION	// **   simple name specified   == path in list + name
WITHOUT_CLASSIFICATION	// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// use default if not file or file not found
WITHOUT_CLASSIFICATION	// check whether the user has specified an absolute path
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Start handling SAX events
WITHOUT_CLASSIFICATION	// Let parent resume handling SAX events
WITHOUT_CLASSIFICATION	// implicit target must be first on dependency list
WITHOUT_CLASSIFICATION	// take care of dependencies
WITHOUT_CLASSIFICATION	// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.
WITHOUT_CLASSIFICATION	//XXX task.setTaskType(tag);
WITHOUT_CLASSIFICATION	// task can contain other tasks - no other nested elements possible
WITHOUT_CLASSIFICATION	// taskcontainer nested element can contain other tasks - no other // nested elements possible
WITHOUT_CLASSIFICATION	// Should not happen
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// initialize the above 3 arrays
WITHOUT_CLASSIFICATION	// #8031: first try Java 1.4.
WITHOUT_CLASSIFICATION	// Fine, Java 1.3 or earlier, do it by hand.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Bad URI, pass this on.
WITHOUT_CLASSIFICATION	// Unexpected target exception? Should not happen.
WITHOUT_CLASSIFICATION	// Reflection problems? Should not happen, debug.
WITHOUT_CLASSIFICATION	// Fallback method for Java 1.3 or earlier.
WITHOUT_CLASSIFICATION	// Ignore malformed exception
WITHOUT_CLASSIFICATION	// if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	// record the fact that it's escaped
WITHOUT_CLASSIFICATION	// we saw some non-ascii character
WITHOUT_CLASSIFICATION	// get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	// for each byte
WITHOUT_CLASSIFICATION	// for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	// firstly check if the tools jar is already in the classpath
WITHOUT_CLASSIFICATION	// just check whether this throws an exception
WITHOUT_CLASSIFICATION	// couldn't find compiler - try to find tools.jar // based on java.home setting
WITHOUT_CLASSIFICATION	// Found in java.home as given
WITHOUT_CLASSIFICATION	// add any jars in the directory
WITHOUT_CLASSIFICATION	// now update the class.path property
WITHOUT_CLASSIFICATION	// overlay specified properties file (if any), which overrides project // settings
WITHOUT_CLASSIFICATION	// ignore because properties file is not required
WITHOUT_CLASSIFICATION	// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;
WITHOUT_CLASSIFICATION	// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;
WITHOUT_CLASSIFICATION	// private static final int FG_BLACK = 30;
WITHOUT_CLASSIFICATION	// private static final int FG_YELLOW = 33;
WITHOUT_CLASSIFICATION	// private static final int FG_WHITE = 37;
WITHOUT_CLASSIFICATION	//Ignore - we will use the defaults.
WITHOUT_CLASSIFICATION	//Ignore - We do not want this to stop the build.
WITHOUT_CLASSIFICATION	// Fall through
WITHOUT_CLASSIFICATION	// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist
WITHOUT_CLASSIFICATION	// Use the logger config
WITHOUT_CLASSIFICATION	// Since task log category includes target, we don't really // need this message
WITHOUT_CLASSIFICATION	// Driver doesn't understand the URL
WITHOUT_CLASSIFICATION	// It's a task - append the target
WITHOUT_CLASSIFICATION	// finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	// Doesn't make sense for c-l. Use the logger config
WITHOUT_CLASSIFICATION	// Could not get the required information
WITHOUT_CLASSIFICATION	// Create a ZipFileSet for this file, and pass it up.
WITHOUT_CLASSIFICATION	// now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	// If no webxml file is specified, it's an error.
WITHOUT_CLASSIFICATION	// One cannot RMIC an interface for "classic" RMI (JRMP)
WITHOUT_CLASSIFICATION	// otherwise perform a timestamp comparison - at least
WITHOUT_CLASSIFICATION	// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.
WITHOUT_CLASSIFICATION	/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */
WITHOUT_CLASSIFICATION	// no source file generated, nothing to move
WITHOUT_CLASSIFICATION	// not the requested type
WITHOUT_CLASSIFICATION	// **   full-pathname specified == path in list // **   simple name specified   == path in list
WITHOUT_CLASSIFICATION	// we only get here if an exception has been thrown
WITHOUT_CLASSIFICATION	// **   full-pathname specified == parent dir of path in list
WITHOUT_CLASSIFICATION	// not the requested type
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//the rest of the method treats single jar like //a nested path with one file
WITHOUT_CLASSIFICATION	// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines
WITHOUT_CLASSIFICATION	// scan base dirs to build up compile lists only if a // specific classname is not given
WITHOUT_CLASSIFICATION	// **   simple name specified   == parent dir + name
WITHOUT_CLASSIFICATION	// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return
WITHOUT_CLASSIFICATION	// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.
WITHOUT_CLASSIFICATION	// must be "add"
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a srcdir and destdir
WITHOUT_CLASSIFICATION	// log options used
WITHOUT_CLASSIFICATION	//patch file into the fileset
WITHOUT_CLASSIFICATION	//set our parent dir
WITHOUT_CLASSIFICATION	// Compare the destination with the temp file
WITHOUT_CLASSIFICATION	// Eof has been reached
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// don't reposition when we've reached the end // of the stream
WITHOUT_CLASSIFICATION	// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr
WITHOUT_CLASSIFICATION	// keep searching for the first ^Z
WITHOUT_CLASSIFICATION	// Trailing characters are ^Zs // Construct new line and eofStr
WITHOUT_CLASSIFICATION	// permissible values for compression attribute
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	// shadow of the above if the value is altered in execute
WITHOUT_CLASSIFICATION	// For directories:
WITHOUT_CLASSIFICATION	// Renamed version of original file, if it exists
WITHOUT_CLASSIFICATION	// Add the files found in groupfileset to fileset
WITHOUT_CLASSIFICATION	// can also handle empty archives
WITHOUT_CLASSIFICATION	// quick exit if the target is up to date
WITHOUT_CLASSIFICATION	// Close the output stream.
WITHOUT_CLASSIFICATION	// we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	// delete a bogus ZIP file (but only if it's not the original one)
WITHOUT_CLASSIFICATION	// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.
WITHOUT_CLASSIFICATION	// Cf. PKZIP specification.
WITHOUT_CLASSIFICATION	// P // K
WITHOUT_CLASSIFICATION	// remainder zeros
WITHOUT_CLASSIFICATION	// Create.
WITHOUT_CLASSIFICATION	// we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	// initialResources is not empty
WITHOUT_CLASSIFICATION	// initialResources is not empty
WITHOUT_CLASSIFICATION	// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination
WITHOUT_CLASSIFICATION	// we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	// we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	// no emptyBehavior handling since the FileSet version // will take care of it.
WITHOUT_CLASSIFICATION	/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */
WITHOUT_CLASSIFICATION	// we will return initialResources anyway, no reason // to scan further.
WITHOUT_CLASSIFICATION	// we will return initialResources anyway, no reason // to scan further.
WITHOUT_CLASSIFICATION	// ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	// don't add directories we've already added. // no warning if we try, it is harmless in and of itself
WITHOUT_CLASSIFICATION	// A "refid" attribute for a node within a Path object.
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	// ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// duplicate equal to add, so we continue
WITHOUT_CLASSIFICATION	// Store data into a byte[]
WITHOUT_CLASSIFICATION	// may be altered in validate
WITHOUT_CLASSIFICATION	// set user-defined properties
WITHOUT_CLASSIFICATION	// set Java built-in properties separately, // b/c we won't inherit them.
WITHOUT_CLASSIFICATION	// set all properties from calling project
WITHOUT_CLASSIFICATION	// has been set explicitly
WITHOUT_CLASSIFICATION	// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?
WITHOUT_CLASSIFICATION	// help the gc
WITHOUT_CLASSIFICATION	// remove duplicate properties - last property wins // Needed for backward compatibility
WITHOUT_CLASSIFICATION	// Now add all references that are not defined in the // subproject, if inheritRefs is true
WITHOUT_CLASSIFICATION	// not Clonable
WITHOUT_CLASSIFICATION	// ignore this if the class being referenced does not have // a set project method.
WITHOUT_CLASSIFICATION	// basedir and ant.file get special treatment in execute()
WITHOUT_CLASSIFICATION	// don't re-set user properties, avoid the warning message
WITHOUT_CLASSIFICATION	// no user property
WITHOUT_CLASSIFICATION	// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.
WITHOUT_CLASSIFICATION	/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */
WITHOUT_CLASSIFICATION	// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this
WITHOUT_CLASSIFICATION	//validation logic
WITHOUT_CLASSIFICATION	//this isnt strictly needed, but by being fussy now, //we can change implementation details later
WITHOUT_CLASSIFICATION	//special case single jar handling with signedjar attribute set
WITHOUT_CLASSIFICATION	// single jar processing
WITHOUT_CLASSIFICATION	//return here.
WITHOUT_CLASSIFICATION	//set up our mapping policy
WITHOUT_CLASSIFICATION	//no mapper? use the identity policy
WITHOUT_CLASSIFICATION	//determine the destination filename via the mapper
WITHOUT_CLASSIFICATION	//we only like simple mappers.
WITHOUT_CLASSIFICATION	//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports
WITHOUT_CLASSIFICATION	//add -tsa operations if declared
WITHOUT_CLASSIFICATION	//JAR source is required
WITHOUT_CLASSIFICATION	//alias is required for signing
WITHOUT_CLASSIFICATION	// restore the lastModified attribute
WITHOUT_CLASSIFICATION	//we normally compare destination with source
WITHOUT_CLASSIFICATION	//but if no dest is specified, compare source to source
WITHOUT_CLASSIFICATION	//if, by any means, the destfile and source match,
WITHOUT_CLASSIFICATION	//we check the presence of signatures on lazy signing
WITHOUT_CLASSIFICATION	//unsigned or non-lazy self signings are always false
WITHOUT_CLASSIFICATION	//if they are different, the timestamps are used
WITHOUT_CLASSIFICATION	//just log this
WITHOUT_CLASSIFICATION	// fileutils
WITHOUT_CLASSIFICATION	// --- Fields --
WITHOUT_CLASSIFICATION	// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.
WITHOUT_CLASSIFICATION	// Error generated during parsing
WITHOUT_CLASSIFICATION	// Parser with specified options can't be built
WITHOUT_CLASSIFICATION	// I/O error
WITHOUT_CLASSIFICATION	// Set the prefix for this node to include its tag name.
WITHOUT_CLASSIFICATION	// Pass the container to the processing of this node,
WITHOUT_CLASSIFICATION	// now, iterate through children.
WITHOUT_CLASSIFICATION	// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.
WITHOUT_CLASSIFICATION	// The value of an id attribute of this node.
WITHOUT_CLASSIFICATION	// Is there an id attribute?
WITHOUT_CLASSIFICATION	// Now, iterate through the attributes adding them.
WITHOUT_CLASSIFICATION	/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */
WITHOUT_CLASSIFICATION	// ID has already been found above.
WITHOUT_CLASSIFICATION	// A "path" attribute for a node within a Path object.
WITHOUT_CLASSIFICATION	// A node identifying a new path
WITHOUT_CLASSIFICATION	// For the text node, add a property.
WITHOUT_CLASSIFICATION	// If the containing object was a String, then use it as the ID.
WITHOUT_CLASSIFICATION	// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.
WITHOUT_CLASSIFICATION	// Never include the "refid" attribute as part of the // attribute name.
WITHOUT_CLASSIFICATION	// Otherwise, return it appended unless property to hide it is set.
WITHOUT_CLASSIFICATION	/* Expose members for extensibility */
WITHOUT_CLASSIFICATION	// delegate this way around to support subclasses that // overwrite getFile
WITHOUT_CLASSIFICATION	//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.
WITHOUT_CLASSIFICATION	//convert the URI to a resource
WITHOUT_CLASSIFICATION	//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.
WITHOUT_CLASSIFICATION	//if we haven't already named an XML file, it gets antlib.xml
WITHOUT_CLASSIFICATION	//convert from a package to a path
WITHOUT_CLASSIFICATION	// Here if there is an error
WITHOUT_CLASSIFICATION	// Fall Through
WITHOUT_CLASSIFICATION	// log at a lower level
WITHOUT_CLASSIFICATION	// Ignore the problem
WITHOUT_CLASSIFICATION	//trick to evoke "basedir not set" if null:
WITHOUT_CLASSIFICATION	//no sources = nothing to compare; no targets = nothing to delete:
WITHOUT_CLASSIFICATION	// Members
WITHOUT_CLASSIFICATION	// Members
WITHOUT_CLASSIFICATION	// If we are a reference, create a Path from the reference
WITHOUT_CLASSIFICATION	// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.
WITHOUT_CLASSIFICATION	// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.
WITHOUT_CLASSIFICATION	// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows
WITHOUT_CLASSIFICATION	// may be altered in validateSetup // may be altered in validateSetup
WITHOUT_CLASSIFICATION	// validate our setup
WITHOUT_CLASSIFICATION	// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Get the list of path components in canonical form
WITHOUT_CLASSIFICATION	// Apply the path prefix map
WITHOUT_CLASSIFICATION	// Now convert the path and file separator characters from the // current os to the target os.
WITHOUT_CLASSIFICATION	// Place the result into the specified property, // unless setonempty == false
WITHOUT_CLASSIFICATION	// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.
WITHOUT_CLASSIFICATION	// Note I'm using "!=" to see if we got a new object back from // the apply method.
WITHOUT_CLASSIFICATION	// We applied one, so we're done
WITHOUT_CLASSIFICATION	// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.
WITHOUT_CLASSIFICATION	// override with pathsep=
WITHOUT_CLASSIFICATION	// override with dirsep=
WITHOUT_CLASSIFICATION	// Check if used by attributes
WITHOUT_CLASSIFICATION	// ? is there an xml api for this ?
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // ATTRIBUTES
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS
WITHOUT_CLASSIFICATION	//Validate mandatory attributes
WITHOUT_CLASSIFICATION	//the property attribute must have access to a property file
WITHOUT_CLASSIFICATION	//Make sure property exists in property file
WITHOUT_CLASSIFICATION	//Default is empty string
WITHOUT_CLASSIFICATION	// Avoid runtime problem on pre 1.4 when compiling post 1.4
WITHOUT_CLASSIFICATION	// end of finally
WITHOUT_CLASSIFICATION	//look for and print warnings
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // ATTRIBUTES
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS
WITHOUT_CLASSIFICATION	// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	// no errors so far
WITHOUT_CLASSIFICATION	// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.
WITHOUT_CLASSIFICATION	// plain impossible
WITHOUT_CLASSIFICATION	// We must check if the process was not stopped // before being here
WITHOUT_CLASSIFICATION	// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY
WITHOUT_CLASSIFICATION	// get the recorder entry
WITHOUT_CLASSIFICATION	// set the values on the recorder
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // INNER CLASSES
WITHOUT_CLASSIFICATION	// create a recorder entry
WITHOUT_CLASSIFICATION	// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.
WITHOUT_CLASSIFICATION	// Read the checksum from disk.
WITHOUT_CLASSIFICATION	// A separate directory was explicitly declared
WITHOUT_CLASSIFICATION	// Empty statement
WITHOUT_CLASSIFICATION	//can either be a property name string or a file
WITHOUT_CLASSIFICATION	// file is on wrong format, swallow
WITHOUT_CLASSIFICATION	// try to be smart, not to be fooled by a weird directory name
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// Close the output stream.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// File is Comparable, so sorting is trivial
WITHOUT_CLASSIFICATION	// Loop over the checksums and generate a total hash.
WITHOUT_CLASSIFICATION	// Add the digest for the file content
WITHOUT_CLASSIFICATION	// Add the file path
WITHOUT_CLASSIFICATION	// two characters form the hex value.
WITHOUT_CLASSIFICATION	// We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	// Check if the service is configured correctly
WITHOUT_CLASSIFICATION	// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge
WITHOUT_CLASSIFICATION	// time to write the manifest
WITHOUT_CLASSIFICATION	// encoding must be UTF8 as specified in the specs.
WITHOUT_CLASSIFICATION	// version-info blankline
WITHOUT_CLASSIFICATION	// header newline
WITHOUT_CLASSIFICATION	// If this is the same name specified in 'manifest', this // is the manifest to use
WITHOUT_CLASSIFICATION	// we add this to our group of fileset manifests
WITHOUT_CLASSIFICATION	// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute
WITHOUT_CLASSIFICATION	// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden
WITHOUT_CLASSIFICATION	// need to handle manifest as a special check
WITHOUT_CLASSIFICATION	// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.
WITHOUT_CLASSIFICATION	// no existing archive
WITHOUT_CLASSIFICATION	// Ignore close exception
WITHOUT_CLASSIFICATION	// we want to save this info if we are going to make another pass
WITHOUT_CLASSIFICATION	// couldn't find it - must be on path
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex
WITHOUT_CLASSIFICATION	// name newline
WITHOUT_CLASSIFICATION	// longest match comes first
WITHOUT_CLASSIFICATION	// META-INF would be skipped anyway, avoid index for // manifest-only jars.
WITHOUT_CLASSIFICATION	// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.
WITHOUT_CLASSIFICATION	/*protected*/
WITHOUT_CLASSIFICATION	// if the target file is not there, then it can't be up-to-date
WITHOUT_CLASSIFICATION	// if the source file isn't there, throw an exception
WITHOUT_CLASSIFICATION	// by default, messages are always displayed
WITHOUT_CLASSIFICATION	// need to keep the package private version for backwards compatibility
WITHOUT_CLASSIFICATION	// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing
WITHOUT_CLASSIFICATION	// add the main fileset to the list of filesets to process.
WITHOUT_CLASSIFICATION	// check if tar is out of date with respect to each // fileset
WITHOUT_CLASSIFICATION	// warn or GNU
WITHOUT_CLASSIFICATION	// don't add "" to the archive
WITHOUT_CLASSIFICATION	// '/' is appended for compatibility with the zip task.
WITHOUT_CLASSIFICATION	// we would end up adding "" to the archive
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// permissible values for compression attribute
WITHOUT_CLASSIFICATION	// override permissions if set explicitly
WITHOUT_CLASSIFICATION	// only override permissions if set explicitly
WITHOUT_CLASSIFICATION	// non-file resources
WITHOUT_CLASSIFICATION	// non-file resources
WITHOUT_CLASSIFICATION	//extend Comparison; retain for BC only
WITHOUT_CLASSIFICATION	//when writing to the log, we'll see what's happening:
WITHOUT_CLASSIFICATION	/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */
WITHOUT_CLASSIFICATION	//only set if successful to this point:
WITHOUT_CLASSIFICATION	// deal with the resource collections
WITHOUT_CLASSIFICATION	// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.
WITHOUT_CLASSIFICATION	// use this to create file and deal with non-writable files
WITHOUT_CLASSIFICATION	// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.
WITHOUT_CLASSIFICATION	// start any daemon threads
WITHOUT_CLASSIFICATION	// now run main threads in limited numbers... // start initial batch of threads
WITHOUT_CLASSIFICATION	// start the timeout thread
WITHOUT_CLASSIFICATION	// now find available running slots for the remaining threads
WITHOUT_CLASSIFICATION	// continue on outer while loop to get another // available slot
WITHOUT_CLASSIFICATION	// if we got here all slots in use, so sleep until // something happens
WITHOUT_CLASSIFICATION	// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!
WITHOUT_CLASSIFICATION	// are all threads finished
WITHOUT_CLASSIFICATION	// who would interrupt me at a time like this?
WITHOUT_CLASSIFICATION	// now did any of the threads throw an exception
WITHOUT_CLASSIFICATION	// return a bogus number
WITHOUT_CLASSIFICATION	// Should be safe to parse
WITHOUT_CLASSIFICATION	// Check name is "antlib"
WITHOUT_CLASSIFICATION	//include locally for screening purposes
WITHOUT_CLASSIFICATION	// try to find the executable
WITHOUT_CLASSIFICATION	// now try to resolve against the dir if given
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// throw further
WITHOUT_CLASSIFICATION	// only the first build exception is reported
WITHOUT_CLASSIFICATION	//include locally for screening purposes
WITHOUT_CLASSIFICATION	// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.
WITHOUT_CLASSIFICATION	// Quick fail if this is not a valid OS for the command
WITHOUT_CLASSIFICATION	// possibly altered in prepareExec
WITHOUT_CLASSIFICATION	//hand osfamily off to Os class, if set
WITHOUT_CLASSIFICATION	// this command will be executed only on the specified OS
WITHOUT_CLASSIFICATION	// default directory to the project's base directory
WITHOUT_CLASSIFICATION	// assume the worst
WITHOUT_CLASSIFICATION	//test for and handle a forced process death
WITHOUT_CLASSIFICATION	// show the command
WITHOUT_CLASSIFICATION	// close the output file if required
WITHOUT_CLASSIFICATION	// Same as regular <copy> task... see at end-of-file!
WITHOUT_CLASSIFICATION	// Override Task#init
WITHOUT_CLASSIFICATION	// Instantiate it
WITHOUT_CLASSIFICATION	// Default config of <mycopy> for our purposes.
WITHOUT_CLASSIFICATION	// Override Task#execute
WITHOUT_CLASSIFICATION	// The destination of the files to copy
WITHOUT_CLASSIFICATION	// The complete list of files to copy
WITHOUT_CLASSIFICATION	// Copy all the necessary out-of-date files
WITHOUT_CLASSIFICATION	// Do we need to perform further processing?
WITHOUT_CLASSIFICATION	// nope ;-)
WITHOUT_CLASSIFICATION	// Get rid of all files not listed in the source filesets.
WITHOUT_CLASSIFICATION	// Get rid of empty directories on the destination side
WITHOUT_CLASSIFICATION	// want to keep toDir itself
WITHOUT_CLASSIFICATION	// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.
WITHOUT_CLASSIFICATION	// Test here again to avoid method call for non-directories!
WITHOUT_CLASSIFICATION	// must match the default value of Ant#inheritAll
WITHOUT_CLASSIFICATION	// must match the default value of Ant#inheritRefs
WITHOUT_CLASSIFICATION	/*<TargetElement>*/
WITHOUT_CLASSIFICATION	// check if one of the builds failed in keep going mode
WITHOUT_CLASSIFICATION	//     REVISIT: Defaults to the target name that contains this task if not specified.
WITHOUT_CLASSIFICATION	// END class SubAnt
WITHOUT_CLASSIFICATION	// Child elements.
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// this command will be executed only on the specified OS
WITHOUT_CLASSIFICATION	// default directory to the project's base directory
WITHOUT_CLASSIFICATION	// assume the worst
WITHOUT_CLASSIFICATION	// show the command
WITHOUT_CLASSIFICATION	// close the output file if required
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// This directory may have become empty... // We need to re-query its children list!
WITHOUT_CLASSIFICATION	// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //
WITHOUT_CLASSIFICATION	// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.
WITHOUT_CLASSIFICATION	// cf. NB #47191
WITHOUT_CLASSIFICATION	// Should work whether or not redirector.inputStream == null:
WITHOUT_CLASSIFICATION	// #24918: send standard input to the process by default.
WITHOUT_CLASSIFICATION	// test if os match
WITHOUT_CLASSIFICATION	// exec command on system runtime
WITHOUT_CLASSIFICATION	// copy input and error to the output stream
WITHOUT_CLASSIFICATION	// starts pumping away the generated output/error
WITHOUT_CLASSIFICATION	// Wait for everything to finish
WITHOUT_CLASSIFICATION	// check its exit value
WITHOUT_CLASSIFICATION	// Inner class for continually pumping the input stream during // Process's runtime.
WITHOUT_CLASSIFICATION	// The size of buffers to be used
WITHOUT_CLASSIFICATION	// Attributes.
WITHOUT_CLASSIFICATION	// Attribute setters.
WITHOUT_CLASSIFICATION	// Nested element creators.
WITHOUT_CLASSIFICATION	// treat empty nested text as no text
WITHOUT_CLASSIFICATION	// if binary check if incompatible attributes are used
WITHOUT_CLASSIFICATION	// Sanity check our inputs.
WITHOUT_CLASSIFICATION	// Nothing to concatenate!
WITHOUT_CLASSIFICATION	// no need to do anything
WITHOUT_CLASSIFICATION	// Log using WARN so it displays in 'quiet' mode.
WITHOUT_CLASSIFICATION	// ensure that the parent dir of dest file exists
WITHOUT_CLASSIFICATION	// non-existing files are not allowed
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// Create a ZipFileSet for this file, and pass it up.
WITHOUT_CLASSIFICATION	// We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	// by default, messages are always displayed
WITHOUT_CLASSIFICATION	// close the output file if required
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Initialize to the size of the first text fragment, with // the hopes that it's the only one.
WITHOUT_CLASSIFICATION	// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.
WITHOUT_CLASSIFICATION	// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.
WITHOUT_CLASSIFICATION	//by default, we add the file.
WITHOUT_CLASSIFICATION	//a web.xml file was found. See if it is a duplicate or not
WITHOUT_CLASSIFICATION	//a second web.xml file, so skip it
WITHOUT_CLASSIFICATION	//check to see if we warn or not
WITHOUT_CLASSIFICATION	//no added file, yet
WITHOUT_CLASSIFICATION	//there is no web.xml file, so add it
WITHOUT_CLASSIFICATION	//and remember that we did
WITHOUT_CLASSIFICATION	//validation
WITHOUT_CLASSIFICATION	//discard most of really big resources
WITHOUT_CLASSIFICATION	//open up the resource
WITHOUT_CLASSIFICATION	// impossible since *our* processLine doesn't throw an IOException
WITHOUT_CLASSIFICATION	// There have been reports that 300 files could be compiled // so 250 is a conservative approach
WITHOUT_CLASSIFICATION	// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)
WITHOUT_CLASSIFICATION	//if we have a RedirectorElement, return a decoy
WITHOUT_CLASSIFICATION	// 0 --> srcIndex
WITHOUT_CLASSIFICATION	// srcIndex --> targetIndex
WITHOUT_CLASSIFICATION	// targets are already absolute file names
WITHOUT_CLASSIFICATION	// targetIndex --> end
WITHOUT_CLASSIFICATION	// 0 --> targetIndex
WITHOUT_CLASSIFICATION	// 0 --> srcIndex
WITHOUT_CLASSIFICATION	// contains AbstractFileSet // (both DirSet and FileSet)
WITHOUT_CLASSIFICATION	// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	// targets are already absolute file names
WITHOUT_CLASSIFICATION	// targetIndex --> srcIndex
WITHOUT_CLASSIFICATION	// srcIndex --> end
WITHOUT_CLASSIFICATION	// srcIndex --> end
WITHOUT_CLASSIFICATION	// no targetFilePos
WITHOUT_CLASSIFICATION	// fill in source file names
WITHOUT_CLASSIFICATION	/* this is skipEmpty == false */
WITHOUT_CLASSIFICATION	//if there is a new priority, and it is different, change it
WITHOUT_CLASSIFICATION	//catch permissions denial and keep going
WITHOUT_CLASSIFICATION	//-- XSLTLiaison
WITHOUT_CLASSIFICATION	// Write the properties file back out
WITHOUT_CLASSIFICATION	//Finally set the property
WITHOUT_CLASSIFICATION	// Try parsing the line into an integer.
WITHOUT_CLASSIFICATION	//-- XSLTProcess
WITHOUT_CLASSIFICATION	// check if liaison wants to log errors using us as logger
WITHOUT_CLASSIFICATION	// If we enter here, it means that the stylesheet is supplied // via style attribute
WITHOUT_CLASSIFICATION	/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */
WITHOUT_CLASSIFICATION	// if we have an in file and out then process them
WITHOUT_CLASSIFICATION	//-- make sure destination directory exists...
WITHOUT_CLASSIFICATION	// Process all the files marked for styling
WITHOUT_CLASSIFICATION	// Process all the directories marked for styling
WITHOUT_CLASSIFICATION	// only resource collections, there better be some
WITHOUT_CLASSIFICATION	//anything else is a classname
WITHOUT_CLASSIFICATION	//-- processXML
WITHOUT_CLASSIFICATION	// Param
WITHOUT_CLASSIFICATION	// New env var...append the previous one if we have it.
WITHOUT_CLASSIFICATION	// Mac
WITHOUT_CLASSIFICATION	//validation
WITHOUT_CLASSIFICATION	// If failed to process document, must delete target document, // or it will not attempt to process it the second time
WITHOUT_CLASSIFICATION	// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath
WITHOUT_CLASSIFICATION	// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up
WITHOUT_CLASSIFICATION	// If we are here we can set the stylesheet as a // resource
WITHOUT_CLASSIFICATION	// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file
WITHOUT_CLASSIFICATION	// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path
WITHOUT_CLASSIFICATION	// only 'name' and 'value' exist.
WITHOUT_CLASSIFICATION	// a value must be of a given type // say boolean|integer|string that are mostly used.
WITHOUT_CLASSIFICATION	// -- class Attribute
WITHOUT_CLASSIFICATION	// -- class Factory
WITHOUT_CLASSIFICATION	// error message strings
WITHOUT_CLASSIFICATION	//at this point there is one trailing space to remove, if the list is not empty.
WITHOUT_CLASSIFICATION	//now exit here if the property is already set
WITHOUT_CLASSIFICATION	//and add any files if also defined
WITHOUT_CLASSIFICATION	//add path URLs
WITHOUT_CLASSIFICATION	//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();
WITHOUT_CLASSIFICATION	// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish
WITHOUT_CLASSIFICATION	//Use the VM launcher instead of shell launcher on VMS
WITHOUT_CLASSIFICATION	/*     * Builds a command launcher for the OS and JVM we are running under.     */
WITHOUT_CLASSIFICATION	// Try using a JDK 1.3 launcher
WITHOUT_CLASSIFICATION	// Ignore and keep trying
WITHOUT_CLASSIFICATION	// OS/2
WITHOUT_CLASSIFICATION	// Windows XP/2000/NT
WITHOUT_CLASSIFICATION	// Windows 98/95 - need to use an auxiliary script
WITHOUT_CLASSIFICATION	// OpenVMS
WITHOUT_CLASSIFICATION	// Generic
WITHOUT_CLASSIFICATION	// Make sure we do not recurse forever
WITHOUT_CLASSIFICATION	// Just try to use what we got
WITHOUT_CLASSIFICATION	// Since we "look ahead" before adding, there's one last env var.
WITHOUT_CLASSIFICATION	// Just try to see how much we got
WITHOUT_CLASSIFICATION	// OS/2 - use same mechanism as Windows 2000
WITHOUT_CLASSIFICATION	// Determine if we're running under XP/2000/NT or 98/95
WITHOUT_CLASSIFICATION	// Windows 98/95
WITHOUT_CLASSIFICATION	// Windows XP/2000/NT/2003
WITHOUT_CLASSIFICATION	// On most systems one could use: /bin/sh -c env
WITHOUT_CLASSIFICATION	// Some systems have /bin/env, others /usr/bin/env, just try
WITHOUT_CLASSIFICATION	// rely on PATH
WITHOUT_CLASSIFICATION	// rely on PATH
WITHOUT_CLASSIFICATION	//noop default encoding used
WITHOUT_CLASSIFICATION	//By default, use the shell launcher for VMS //
WITHOUT_CLASSIFICATION	// add the process to the list of those to destroy if the VM exits //
WITHOUT_CLASSIFICATION	// #31928: forcibly kill it before continuing.
WITHOUT_CLASSIFICATION	// remove the process to the list of those to destroy if // the VM exits //
WITHOUT_CLASSIFICATION	//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure
WITHOUT_CLASSIFICATION	// Get key including "="
WITHOUT_CLASSIFICATION	// Nb: using default locale as key is a env name
WITHOUT_CLASSIFICATION	// Find the key in the current enviroment copy // and remove it.
WITHOUT_CLASSIFICATION	// Use the original casiness of the key
WITHOUT_CLASSIFICATION	// Add the key to the enviromnent copy
WITHOUT_CLASSIFICATION	// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")
WITHOUT_CLASSIFICATION	// further equivalence name of previous logical
WITHOUT_CLASSIFICATION	// new logical?
WITHOUT_CLASSIFICATION	// already got this logical from a higher order table
WITHOUT_CLASSIFICATION	/* the arguments: */
WITHOUT_CLASSIFICATION	// IllegalAccess, IllegalArgument, ClassCast
WITHOUT_CLASSIFICATION	// Locate the auxiliary script
WITHOUT_CLASSIFICATION	// Build the command
WITHOUT_CLASSIFICATION	// add the environment as logicals to the DCL script
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)
WITHOUT_CLASSIFICATION	// Use cmd.exe to change to the specified drive and // directory before running the command
WITHOUT_CLASSIFICATION	// Use cmd.exe to change to the specified directory before running // the command
WITHOUT_CLASSIFICATION	// need to set the project on unknown element
WITHOUT_CLASSIFICATION	//************************************************************************ //  protected and private methods //************************************************************************
WITHOUT_CLASSIFICATION	//Attempt complete directory renames, if any, first.
WITHOUT_CLASSIFICATION	// files to move
WITHOUT_CLASSIFICATION	//Is this file still available to be moved?
WITHOUT_CLASSIFICATION	// if this is the last time through the loop then // move will not occur, but that's what we want
WITHOUT_CLASSIFICATION	// maybe io error?
WITHOUT_CLASSIFICATION	// found a file
WITHOUT_CLASSIFICATION	// on an io error list() can return null
WITHOUT_CLASSIFICATION	// Whether *this VM* is 1.4+ (but also check executable != null).
WITHOUT_CLASSIFICATION	// ------------------------------------------ general Javadoc arguments
WITHOUT_CLASSIFICATION	// ---------------------------- javadoc2 arguments for default doclet
WITHOUT_CLASSIFICATION	// add the links arguments
WITHOUT_CLASSIFICATION	// should be impossible
WITHOUT_CLASSIFICATION	// is the href a valid URL
WITHOUT_CLASSIFICATION	// ok - just skip
WITHOUT_CLASSIFICATION	//return
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//validation logic
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Only try to move if this is the last mapped file // and one of the mappings isn't to itself
WITHOUT_CLASSIFICATION	// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).
WITHOUT_CLASSIFICATION	// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.
WITHOUT_CLASSIFICATION	// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"
WITHOUT_CLASSIFICATION	// add the group arguments
WITHOUT_CLASSIFICATION	// Javadoc 1.4 parameters
WITHOUT_CLASSIFICATION	// The tag element is not used as a fileset, // but specifies the tag directly.
WITHOUT_CLASSIFICATION	// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.
WITHOUT_CLASSIFICATION	// Not 1.4+.
WITHOUT_CLASSIFICATION	// Javadoc 1.2/1.3 parameters:
WITHOUT_CLASSIFICATION	// If using an external file, write the command line options to it
WITHOUT_CLASSIFICATION	// If using an external file, write the command line options to it
WITHOUT_CLASSIFICATION	/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */
WITHOUT_CLASSIFICATION	// are there any java files in this directory?
WITHOUT_CLASSIFICATION	// We don't need to care for duplicates here, // Path.list does it for us.
WITHOUT_CLASSIFICATION	// CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	//convert a class name into a resource
WITHOUT_CLASSIFICATION	//set the property
WITHOUT_CLASSIFICATION	// line feed
WITHOUT_CLASSIFICATION	// by default, remove matching empty dirs
WITHOUT_CLASSIFICATION	// delete the single file
WITHOUT_CLASSIFICATION	// delete the directory
WITHOUT_CLASSIFICATION	//add the files from the default fileset:
WITHOUT_CLASSIFICATION	// sort first to files, then dirs
WITHOUT_CLASSIFICATION	/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */
WITHOUT_CLASSIFICATION	//patch the redirector to save output to a file
WITHOUT_CLASSIFICATION	//verify special operations
WITHOUT_CLASSIFICATION	//JAR  is required
WITHOUT_CLASSIFICATION	//deal with jdk1.4.2 bug:
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	// finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	//validation
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// nonexistent resources could only occur if we already // deleted something from a fileset:
WITHOUT_CLASSIFICATION	//cache
WITHOUT_CLASSIFICATION	// no include pattern implicitly means includes="**"
WITHOUT_CLASSIFICATION	//Do not process this file
WITHOUT_CLASSIFICATION	// make sure facade knows about magic properties and fork setting
WITHOUT_CLASSIFICATION	// deal with the resources
WITHOUT_CLASSIFICATION	// Make a transaction for each resource
WITHOUT_CLASSIFICATION	// Make a transaction group for the outer command
WITHOUT_CLASSIFICATION	// Process all transactions
WITHOUT_CLASSIFICATION	// Catch any statements not followed by ;
WITHOUT_CLASSIFICATION	// Check and ignore empty statements
WITHOUT_CLASSIFICATION	/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */
WITHOUT_CLASSIFICATION	// dreaded backwards compatibility
WITHOUT_CLASSIFICATION	/*Throw an exception if cvs exited with error. (Iulian)*/
WITHOUT_CLASSIFICATION	// re-implement legacy behaviour:
WITHOUT_CLASSIFICATION	// Check if not real cvsroot => set it to null
WITHOUT_CLASSIFICATION	// Check if not real cvsrsh => set it to null
WITHOUT_CLASSIFICATION	// Check if not real tag => set it to null
WITHOUT_CLASSIFICATION	// close the output file if required
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//req // req
WITHOUT_CLASSIFICATION	// scan source directories and dest directory to build up // compile lists
WITHOUT_CLASSIFICATION	//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.
WITHOUT_CLASSIFICATION	//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.
WITHOUT_CLASSIFICATION	// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).
WITHOUT_CLASSIFICATION	// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //
WITHOUT_CLASSIFICATION	// we are chmodding the given directory
WITHOUT_CLASSIFICATION	// may be altered in validateAttributes
WITHOUT_CLASSIFICATION	// will be removed in validateAttributes
WITHOUT_CLASSIFICATION	// make sure we don't have an illegal set of options
WITHOUT_CLASSIFICATION	// deal with the single file
WITHOUT_CLASSIFICATION	// deal with the ResourceCollections
WITHOUT_CLASSIFICATION	// Step (1) - beware of the ZipFileSet
WITHOUT_CLASSIFICATION	// not a fileset or contains non-file resources
WITHOUT_CLASSIFICATION	// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.
WITHOUT_CLASSIFICATION	// a not-directory file resource // needs special treatment
WITHOUT_CLASSIFICATION	// do all the copy operations now...
WITHOUT_CLASSIFICATION	// restrict to out-of-date resources
WITHOUT_CLASSIFICATION	// clean up again, so this instance can be used a second // time
WITHOUT_CLASSIFICATION	// reuse the array created by the mapper
WITHOUT_CLASSIFICATION	// reuse the array created by the mapper
WITHOUT_CLASSIFICATION	//now patch in all system properties
WITHOUT_CLASSIFICATION	// is the keystore a file
WITHOUT_CLASSIFICATION	// must be a URL - just pass as is
WITHOUT_CLASSIFICATION	// Gump friendly - don't mess with the core loader if only classpath
WITHOUT_CLASSIFICATION	// Construct a new class loader
WITHOUT_CLASSIFICATION	// The param is "parentFirst"
WITHOUT_CLASSIFICATION	/*public*/
WITHOUT_CLASSIFICATION	//shield it from being closed by a filtering StreamPumper
WITHOUT_CLASSIFICATION	//shield it from being closed by a filtering StreamPumper
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// set read-only properties // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.
WITHOUT_CLASSIFICATION	// The core loader must be reverse //reverse=true;
WITHOUT_CLASSIFICATION	// This allows the core loader to load optional tasks // without delegating
WITHOUT_CLASSIFICATION	//wait for the StreamPumpers to finish
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// Normalize the reference directory (containing the jar)
WITHOUT_CLASSIFICATION	// Normalize the current file
WITHOUT_CLASSIFICATION	// No match, so bail out!
WITHOUT_CLASSIFICATION	// Finally assign the property with the manifest classpath
WITHOUT_CLASSIFICATION	// try to find a MAX_LINE_LENGTH byte section
WITHOUT_CLASSIFICATION	// continuation line
WITHOUT_CLASSIFICATION	// refresh attribute in case of multivalued attributes.
WITHOUT_CLASSIFICATION	// the merge file always wins
WITHOUT_CLASSIFICATION	// the merge file *always* wins, even for Class-Path
WITHOUT_CLASSIFICATION	// add in the warnings
WITHOUT_CLASSIFICATION	// This should be the manifest version
WITHOUT_CLASSIFICATION	// add it back
WITHOUT_CLASSIFICATION	// shouldn't happen - ignore
WITHOUT_CLASSIFICATION	// create a vector and add in the warnings for all the sections
WITHOUT_CLASSIFICATION	//off by default
WITHOUT_CLASSIFICATION	//set up logging
WITHOUT_CLASSIFICATION	//execute the get
WITHOUT_CLASSIFICATION	//dont do any progress, unless asked
WITHOUT_CLASSIFICATION	//set the timestamp to the file date.
WITHOUT_CLASSIFICATION	//set up the URL connection
WITHOUT_CLASSIFICATION	// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself
WITHOUT_CLASSIFICATION	// Find the longest prefix shared by the current file // and the reference directory.
WITHOUT_CLASSIFICATION	// We have a match! Add as many ../ as parent // directory traversed to get the relative path
WITHOUT_CLASSIFICATION	// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation
WITHOUT_CLASSIFICATION	// a continuation on the first line is a // continuation of the name - concatenate this // line and the name
WITHOUT_CLASSIFICATION	// required // required
WITHOUT_CLASSIFICATION	//modify the headers //NB: things like user authentication could go in here too.
WITHOUT_CLASSIFICATION	// prepare Java 1.1 style credentials
WITHOUT_CLASSIFICATION	//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing
WITHOUT_CLASSIFICATION	//connect to the remote site (may take some time)
WITHOUT_CLASSIFICATION	//next test for a 304 result (HTTP only)
WITHOUT_CLASSIFICATION	// test for 401 result (HTTP only)
WITHOUT_CLASSIFICATION	//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.
WITHOUT_CLASSIFICATION	//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.
WITHOUT_CLASSIFICATION	//successful download
WITHOUT_CLASSIFICATION	// this happens if the projecthelper was not registered with the project.
WITHOUT_CLASSIFICATION	// methods to register and unregister shutdown hooks
WITHOUT_CLASSIFICATION	// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)
WITHOUT_CLASSIFICATION	// wait to add shutdown hook as needed
WITHOUT_CLASSIFICATION	// it just won't be added as a shutdown hook... :(
WITHOUT_CLASSIFICATION	// shutdown already is in progress
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	// shutdown already is in progress
WITHOUT_CLASSIFICATION	// I don't think we can use File - different rules // for relative paths.
WITHOUT_CLASSIFICATION	// this happens if ant is used with a project // helper that doesn't set the import.
WITHOUT_CLASSIFICATION	// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).
WITHOUT_CLASSIFICATION	// whether or not this ProcessDestroyer has been registered as a // shutdown hook
WITHOUT_CLASSIFICATION	// whether or not this ProcessDestroyer is currently running as // shutdown hook
WITHOUT_CLASSIFICATION	// this should return quickly, since it basically is a NO-OP.
WITHOUT_CLASSIFICATION	// the thread didn't die in time // it should not kill any processes unexpectedly
WITHOUT_CLASSIFICATION	// if this list is empty, register the shutdown hook
WITHOUT_CLASSIFICATION	// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.
WITHOUT_CLASSIFICATION	// generate classpath, because kjc doesn't support sourcepath.
WITHOUT_CLASSIFICATION	// generate the clsspath
WITHOUT_CLASSIFICATION	// kjc don't have bootclasspath option.
WITHOUT_CLASSIFICATION	// Process the factory class
WITHOUT_CLASSIFICATION	// Process the factory path
WITHOUT_CLASSIFICATION	// Process the processor options
WITHOUT_CLASSIFICATION	//set up the javac options
WITHOUT_CLASSIFICATION	//then add the Apt options
WITHOUT_CLASSIFICATION	//finally invoke APT // Use reflection to be able to build on all JDKs:
WITHOUT_CLASSIFICATION	//rethrow build exceptions
WITHOUT_CLASSIFICATION	//cast everything else to a build exception
WITHOUT_CLASSIFICATION	// Call the compile() method
WITHOUT_CLASSIFICATION	// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	// jvc has no option for source-path so we // will add it to classpath.
WITHOUT_CLASSIFICATION	// Add the Classpath before the "internal" one.
WITHOUT_CLASSIFICATION	// Enable MS-Extensions and ...
WITHOUT_CLASSIFICATION	// ... do not display a Message about this.
WITHOUT_CLASSIFICATION	// Do not display Logo
WITHOUT_CLASSIFICATION	//add the files
WITHOUT_CLASSIFICATION	//run
WITHOUT_CLASSIFICATION	//as new versions of java come out, add them to this test
WITHOUT_CLASSIFICATION	//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early
WITHOUT_CLASSIFICATION	// does the modern compiler exist?
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath
WITHOUT_CLASSIFICATION	// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.
WITHOUT_CLASSIFICATION	// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"
WITHOUT_CLASSIFICATION	// If the buildfile specifies sourcepath="", then don't // output any sourcepath.
WITHOUT_CLASSIFICATION	// If the buildfile specifies sourcepath="", then don't // output any sourcepath.
WITHOUT_CLASSIFICATION	// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either
WITHOUT_CLASSIFICATION	// 1.5.0 doesn't support -source 1.1
WITHOUT_CLASSIFICATION	//Use the VM launcher instead of shell launcher on VMS //for java
WITHOUT_CLASSIFICATION	// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	// Gcj has no option for source-path so we // will add it to classpath.
WITHOUT_CLASSIFICATION	// Use reflection to be able to build on all JDKs >= 1.1:
WITHOUT_CLASSIFICATION	// no bootclasspath, therefore, get one from the java runtime
WITHOUT_CLASSIFICATION	// if the user has set JIKESPATH we should add the contents as well
WITHOUT_CLASSIFICATION	//reflection to avoid bootstrap/build problems
WITHOUT_CLASSIFICATION	//now verify that the class has an implementation
WITHOUT_CLASSIFICATION	//windows probing logic relies on the word 'windows' in //the OS
WITHOUT_CLASSIFICATION	//there are only four 9x platforms that we look for
WITHOUT_CLASSIFICATION	//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.
WITHOUT_CLASSIFICATION	// millis per second
WITHOUT_CLASSIFICATION	//get the host of a url
WITHOUT_CLASSIFICATION	//Java1.5: reachable = address.isReachable(timeout * 1000);
WITHOUT_CLASSIFICATION	//utterly implausible, but catered for anyway
WITHOUT_CLASSIFICATION	// load the parser class
WITHOUT_CLASSIFICATION	// may be altered in validate
WITHOUT_CLASSIFICATION	// Error messages
WITHOUT_CLASSIFICATION	// plain impossible
WITHOUT_CLASSIFICATION	// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it
WITHOUT_CLASSIFICATION	//assume this is an IOexception about un readability
WITHOUT_CLASSIFICATION	//any kind of fault: not reachable.
WITHOUT_CLASSIFICATION	//java1.4 or earlier
WITHOUT_CLASSIFICATION	// don't know the type, should throw exception instead?
WITHOUT_CLASSIFICATION	//pick a value that is good for everything
WITHOUT_CLASSIFICATION	//initial state is false.
WITHOUT_CLASSIFICATION	//every condition is xored against the previous one
WITHOUT_CLASSIFICATION	//validate
WITHOUT_CLASSIFICATION	//#now match the files
WITHOUT_CLASSIFICATION	// Intentionally left blank
WITHOUT_CLASSIFICATION	//private static final int GET_ENTRY = 0;
WITHOUT_CLASSIFICATION	// make sure attributes are reset when // working on a 'new' file.
WITHOUT_CLASSIFICATION	//We have ended changelog for that particular file //so we can save it
WITHOUT_CLASSIFICATION	//was -1
WITHOUT_CLASSIFICATION	//was -1
WITHOUT_CLASSIFICATION	//There were no revisions in this changelog //entry so lets move onto next file
WITHOUT_CLASSIFICATION	//Reset comment to empty here as we can accumulate multiple lines //in the processComment method
WITHOUT_CLASSIFICATION	// We want something of the form: -d ">=YYYY-MM-dd"
WITHOUT_CLASSIFICATION	// Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	//for now skip entries which are missing a date
WITHOUT_CLASSIFICATION	//Skip dates that are too early
WITHOUT_CLASSIFICATION	//Skip dates that are too late
WITHOUT_CLASSIFICATION	// validate the input parameters
WITHOUT_CLASSIFICATION	// build the rdiff command
WITHOUT_CLASSIFICATION	// if the two substrings are longer than the original, then name // contains address - so reset the name to null
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// support multiple packages
WITHOUT_CLASSIFICATION	// force command not to be null
WITHOUT_CLASSIFICATION	// run the cvs command
WITHOUT_CLASSIFICATION	// parse the rdiff
WITHOUT_CLASSIFICATION	// write the tag diff
WITHOUT_CLASSIFICATION	// parse the output of the command
WITHOUT_CLASSIFICATION	// it is a new file // set the revision but not the prevrevision
WITHOUT_CLASSIFICATION	// it is a modified file // set the revision and the prevrevision
WITHOUT_CLASSIFICATION	// it is a removed file
WITHOUT_CLASSIFICATION	/* special headers */
WITHOUT_CLASSIFICATION	// prepare for the auto select mechanism
WITHOUT_CLASSIFICATION	// try MIME format
WITHOUT_CLASSIFICATION	// SMTP auth only allowed with MIME mail
WITHOUT_CLASSIFICATION	// SSL only allowed with MIME mail
WITHOUT_CLASSIFICATION	// try UU format
WITHOUT_CLASSIFICATION	// try plain format
WITHOUT_CLASSIFICATION	// a valid mailer must be present by now
WITHOUT_CLASSIFICATION	// a valid message is required
WITHOUT_CLASSIFICATION	// an address to send from is required
WITHOUT_CLASSIFICATION	// at least one address to send to/cc/bcc is required
WITHOUT_CLASSIFICATION	// set the mimetype if not done already (and required)
WITHOUT_CLASSIFICATION	// set the character set if not done already (and required)
WITHOUT_CLASSIFICATION	// identify which files should be attached
WITHOUT_CLASSIFICATION	// let the user know what's going to happen
WITHOUT_CLASSIFICATION	// pass the params to the mailer
WITHOUT_CLASSIFICATION	// send the email
WITHOUT_CLASSIFICATION	// let the user know what happened
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	// Read message from a file
WITHOUT_CLASSIFICATION	// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java
WITHOUT_CLASSIFICATION	// shortcut for "<address>"
WITHOUT_CLASSIFICATION	// support "address (name)"
WITHOUT_CLASSIFICATION	// support "(name) address"
WITHOUT_CLASSIFICATION	// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource
WITHOUT_CLASSIFICATION	// Must be like "text/plain; charset=windows-1251"
WITHOUT_CLASSIFICATION	// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)
WITHOUT_CLASSIFICATION	// SMTP provider
WITHOUT_CLASSIFICATION	//create the message
WITHOUT_CLASSIFICATION	//set the sender
WITHOUT_CLASSIFICATION	// set the reply to addresses
WITHOUT_CLASSIFICATION	// Choosing character set of the mail message // First: looking it from MimeType
WITHOUT_CLASSIFICATION	// Assign/reassign message charset from MimeType
WITHOUT_CLASSIFICATION	// Next: looking if charset having explicit definition
WITHOUT_CLASSIFICATION	// Using default
WITHOUT_CLASSIFICATION	// Using javax.activation.DataSource paradigm
WITHOUT_CLASSIFICATION	// Assuming mime type in form "text/XXXX; charset=XXXXXX"
WITHOUT_CLASSIFICATION	// Skip 'charset='
WITHOUT_CLASSIFICATION	// Scanner to find our inputs // list of files to process
WITHOUT_CLASSIFICATION	// default srcDir to basedir
WITHOUT_CLASSIFICATION	// Require destDir
WITHOUT_CLASSIFICATION	// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....
WITHOUT_CLASSIFICATION	// File to convert // where to put the results
WITHOUT_CLASSIFICATION	// Build the full file names
WITHOUT_CLASSIFICATION	// Make sure we're not about to clobber something
WITHOUT_CLASSIFICATION	// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,
WITHOUT_CLASSIFICATION	//this.fork = s;
WITHOUT_CLASSIFICATION	//TODO: use ANTLR to parse the grammar file to do this.
WITHOUT_CLASSIFICATION	// if no output directory is specified, used the target's directory
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a from and to extension
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Error strings
WITHOUT_CLASSIFICATION	//validating
WITHOUT_CLASSIFICATION	//set the schema source for the doc
WITHOUT_CLASSIFICATION	//set the schema source for the doc
WITHOUT_CLASSIFICATION	//enable XSD
WITHOUT_CLASSIFICATION	//validate the parser type
WITHOUT_CLASSIFICATION	//couldnt use the xerces or jaxp calls
WITHOUT_CLASSIFICATION	//enable schema checking
WITHOUT_CLASSIFICATION	//turn off DTDs if desired
WITHOUT_CLASSIFICATION	//schema declarations go in next
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a srcdir and destdir
WITHOUT_CLASSIFICATION	//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);
WITHOUT_CLASSIFICATION	//this is almost implausible, but required handling
WITHOUT_CLASSIFICATION	//SchemaLocation
WITHOUT_CLASSIFICATION	//private Path extdirs;
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a srcdir
WITHOUT_CLASSIFICATION	// Keep jdk 1.1 compliant so others can use this
WITHOUT_CLASSIFICATION	// second CR -> EOL + possibly empty line
WITHOUT_CLASSIFICATION	// first CR in this line
WITHOUT_CLASSIFICATION	// LF -> EOL
WITHOUT_CLASSIFICATION	// any other char
WITHOUT_CLASSIFICATION	// Mac-style linebreak or EOF (or both)
WITHOUT_CLASSIFICATION	// variables to hold arguments
WITHOUT_CLASSIFICATION	// ?? Should this be the default for ant?
WITHOUT_CLASSIFICATION	// constants for the messages to suppress by flags and their corresponding properties
WITHOUT_CLASSIFICATION	// other implementation variables
WITHOUT_CLASSIFICATION	// classpath makes no sense
WITHOUT_CLASSIFICATION	// destDir
WITHOUT_CLASSIFICATION	// srcDir
WITHOUT_CLASSIFICATION	// copy the source and support files
WITHOUT_CLASSIFICATION	// compile the source files
WITHOUT_CLASSIFICATION	// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList
WITHOUT_CLASSIFICATION	// create a single array of arguments for the compiler
WITHOUT_CLASSIFICATION	// print nice output about what we are doing for the log
WITHOUT_CLASSIFICATION	// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath
WITHOUT_CLASSIFICATION	// path is mentioned in the message
WITHOUT_CLASSIFICATION	// verbose level logging for suppressed messages
WITHOUT_CLASSIFICATION	// error level logging for compiler errors
WITHOUT_CLASSIFICATION	// warning for all warning messages
WITHOUT_CLASSIFICATION	// info level for the rest.
WITHOUT_CLASSIFICATION	// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath
WITHOUT_CLASSIFICATION	// add our classpath to the mix
WITHOUT_CLASSIFICATION	// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));
WITHOUT_CLASSIFICATION	// XMLReader used to validation process
WITHOUT_CLASSIFICATION	// turn validation on
WITHOUT_CLASSIFICATION	// set the feature from the attribute list
WITHOUT_CLASSIFICATION	// Sets properties
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// quick exit if the target is up to date
WITHOUT_CLASSIFICATION	// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// to report sax parsing errors // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// then check it implements XMLReader
WITHOUT_CLASSIFICATION	// see if it is a SAX1 Parser
WITHOUT_CLASSIFICATION	// Validates property
WITHOUT_CLASSIFICATION	//for every file, we have a new instance of the validator
WITHOUT_CLASSIFICATION	// if this is not a valid file: just use the uri
WITHOUT_CLASSIFICATION	// Property
WITHOUT_CLASSIFICATION	/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */
WITHOUT_CLASSIFICATION	// get files from old methods - includes and nested include
WITHOUT_CLASSIFICATION	// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.
WITHOUT_CLASSIFICATION	// Pump streams asynchronously
WITHOUT_CLASSIFICATION	// A wild default for when the thread is interrupted
WITHOUT_CLASSIFICATION	// Wait for the process to finish
WITHOUT_CLASSIFICATION	// Wait for the end of output and error streams
WITHOUT_CLASSIFICATION	// Informative summary message in case of errors
WITHOUT_CLASSIFICATION	// die if cabarc fails
WITHOUT_CLASSIFICATION	// Use this to prepend a message to the properties file
WITHOUT_CLASSIFICATION	/* ========================================================================    *    * Constructors    */
WITHOUT_CLASSIFICATION	/* ========================================================================    *    * Methods    */
WITHOUT_CLASSIFICATION	// Create the PropertyFile
WITHOUT_CLASSIFICATION	// type may be null because it wasn't set
WITHOUT_CLASSIFICATION	// Default to string type // which means do nothing
WITHOUT_CLASSIFICATION	// Insert as a string by default
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// configure the transformer...
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// If only value is specified, the property is set to it // regardless of its previous value.
WITHOUT_CLASSIFICATION	// If only default is specified and the property did not // exist in the property file, the property is set to default.
WITHOUT_CLASSIFICATION	// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.
WITHOUT_CLASSIFICATION	// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.
WITHOUT_CLASSIFICATION	// Property type operations
WITHOUT_CLASSIFICATION	// Property types
WITHOUT_CLASSIFICATION	// resetting the stylesheet - reset transformer
WITHOUT_CLASSIFICATION	// do we need to reset templates as well
WITHOUT_CLASSIFICATION	// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.
WITHOUT_CLASSIFICATION	// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.
WITHOUT_CLASSIFICATION	// not initialized yet, so create the factory
WITHOUT_CLASSIFICATION	// specific attributes for the transformer
WITHOUT_CLASSIFICATION	// kept for backwards compatibility
WITHOUT_CLASSIFICATION	// configure factory attributes
WITHOUT_CLASSIFICATION	// use XMLCatalog as the entity resolver and URI resolver
WITHOUT_CLASSIFICATION	// configure output properties
WITHOUT_CLASSIFICATION	//copy the properties file
WITHOUT_CLASSIFICATION	/* load properties from file if specified, otherwise        use Ant's properties */
WITHOUT_CLASSIFICATION	// add ant properties
WITHOUT_CLASSIFICATION	//sort the list. Makes SCM and manual diffs easier.
WITHOUT_CLASSIFICATION	// create XML document
WITHOUT_CLASSIFICATION	// output properties
WITHOUT_CLASSIFICATION	// build the command line from what we got the format // as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	//create task ok, set this task as the default one
WITHOUT_CLASSIFICATION	// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// -reserved
WITHOUT_CLASSIFICATION	// -unreserved
WITHOUT_CLASSIFICATION	// -out
WITHOUT_CLASSIFICATION	// -ndata
WITHOUT_CLASSIFICATION	// -version
WITHOUT_CLASSIFICATION	// -nwarn
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// -version
WITHOUT_CLASSIFICATION	// -nwarn
WITHOUT_CLASSIFICATION	// type value
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// -ptime
WITHOUT_CLASSIFICATION	// Throws EjbcException if unsuccessful
WITHOUT_CLASSIFICATION	// -keep
WITHOUT_CLASSIFICATION	// -identical
WITHOUT_CLASSIFICATION	// Check for required attributes
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	// -replace
WITHOUT_CLASSIFICATION	// -recurse
WITHOUT_CLASSIFICATION	// type
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// -nwarn
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -ptime
WITHOUT_CLASSIFICATION	// -keep
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// Windows quoting of the value
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	/*         * Should choose either -ci or -nco.         */
WITHOUT_CLASSIFICATION	// -nco
WITHOUT_CLASSIFICATION	// -nco
WITHOUT_CLASSIFICATION	// Check the command line options
WITHOUT_CLASSIFICATION	// -ci
WITHOUT_CLASSIFICATION	// object selector
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// -master
WITHOUT_CLASSIFICATION	// -rm
WITHOUT_CLASSIFICATION	// -eltype
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// -version
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -rmall -force
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// -identical
WITHOUT_CLASSIFICATION	// Check for required attributes
WITHOUT_CLASSIFICATION	// Check for required attributes
WITHOUT_CLASSIFICATION	// -replace
WITHOUT_CLASSIFICATION	// -recurse
WITHOUT_CLASSIFICATION	// type
WITHOUT_CLASSIFICATION	// Returns list of EJBs for processing
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	// type-kind:type-name
WITHOUT_CLASSIFICATION	// -ignore
WITHOUT_CLASSIFICATION	// Return the type-selector
WITHOUT_CLASSIFICATION	// -full
WITHOUT_CLASSIFICATION	// -incremental
WITHOUT_CLASSIFICATION	// -nlabel
WITHOUT_CLASSIFICATION	// baseline_root_name
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -ptime
WITHOUT_CLASSIFICATION	// Check for required attributes
WITHOUT_CLASSIFICATION	// -replace
WITHOUT_CLASSIFICATION	// -replace
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// Check the command line options
WITHOUT_CLASSIFICATION	// Check the command line options
WITHOUT_CLASSIFICATION	// object selector
WITHOUT_CLASSIFICATION	// -ordinary
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// For debugging
WITHOUT_CLASSIFICATION	// -log logname
WITHOUT_CLASSIFICATION	// -graphical
WITHOUT_CLASSIFICATION	// -overwrite
WITHOUT_CLASSIFICATION	// -global
WITHOUT_CLASSIFICATION	// -rename
WITHOUT_CLASSIFICATION	// -obsolete
WITHOUT_CLASSIFICATION	// -noverwrite
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	// -ctime
WITHOUT_CLASSIFICATION	// -pbranch
WITHOUT_CLASSIFICATION	// File[] filesInDir = directory.listFiles();
WITHOUT_CLASSIFICATION	// -shared
WITHOUT_CLASSIFICATION	// type-name@vob
WITHOUT_CLASSIFICATION	// we have a file. create a stream for it
WITHOUT_CLASSIFICATION	// default directory to the project's base directory
WITHOUT_CLASSIFICATION	// assume the worst
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// create a data input stream from the jar // input stream
WITHOUT_CLASSIFICATION	// this iterator is exhausted. Can we pop one off the stack
WITHOUT_CLASSIFICATION	// we get the root classes and build up a set of // classes upon which they depend
WITHOUT_CLASSIFICATION	// now recover all the dependencies collected and add to the list.
WITHOUT_CLASSIFICATION	// pick up the last round of dependencies that were determined
WITHOUT_CLASSIFICATION	// right we have a good looking class file.
WITHOUT_CLASSIFICATION	/* int minorVersion = */
WITHOUT_CLASSIFICATION	/* int majorVersion = */
WITHOUT_CLASSIFICATION	/* int accessFlags = */
WITHOUT_CLASSIFICATION	/* int superClassIndex = */
WITHOUT_CLASSIFICATION	// read the dependency cache from the disk
WITHOUT_CLASSIFICATION	// try to read the dependency info from the map if it is // not out of date
WITHOUT_CLASSIFICATION	// not cached - so need to read directly from the class file
WITHOUT_CLASSIFICATION	// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list
WITHOUT_CLASSIFICATION	// now determine which jars each class depends upon
WITHOUT_CLASSIFICATION	// we need to add this jar to the list for this class.
WITHOUT_CLASSIFICATION	// write the dependency cache to the disk
WITHOUT_CLASSIFICATION	// need to delete the main class
WITHOUT_CLASSIFICATION	//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.
WITHOUT_CLASSIFICATION	// now check classpath file dependencies
WITHOUT_CLASSIFICATION	// if we have no info about the class - it may have been deleted already and we // are using cached info.
WITHOUT_CLASSIFICATION	// there was no class file. add this class to the list
WITHOUT_CLASSIFICATION	// break the classLocations into its components.
WITHOUT_CLASSIFICATION	// search the various source path entries
WITHOUT_CLASSIFICATION	// create a data input stream from the jar input stream
WITHOUT_CLASSIFICATION	// add null entries for any additional slots required.
WITHOUT_CLASSIFICATION	// end execute
WITHOUT_CLASSIFICATION	//in verbose mode we always log stuff
WITHOUT_CLASSIFICATION	//the simple action is to send the command line in as is
WITHOUT_CLASSIFICATION	// Throws EjbcException
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// The zero index is never present in the constant pool itself so // we add a null entry for it
WITHOUT_CLASSIFICATION	//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards
WITHOUT_CLASSIFICATION	//start at 1 because element 0 is the executable name
WITHOUT_CLASSIFICATION	//add to the list
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//set source and rebuild options
WITHOUT_CLASSIFICATION	//rebuild unless the dest file is newer than the source file
WITHOUT_CLASSIFICATION	//mark for a rebuild if the dest file is newer
WITHOUT_CLASSIFICATION	// Mono 1.0's wsdl doesn't deal with absolute paths
WITHOUT_CLASSIFICATION	//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.
WITHOUT_CLASSIFICATION	//mark for a rebuild if we are newer
WITHOUT_CLASSIFICATION	//conditionally compile
WITHOUT_CLASSIFICATION	// Errors
WITHOUT_CLASSIFICATION	//bail on no references
WITHOUT_CLASSIFICATION	//bail on no references
WITHOUT_CLASSIFICATION	//demand create pathlist
WITHOUT_CLASSIFICATION	//bail on no references listed
WITHOUT_CLASSIFICATION	//loop through all definitions
WITHOUT_CLASSIFICATION	//add those that are set, and a delimiter
WITHOUT_CLASSIFICATION	//set up response file options
WITHOUT_CLASSIFICATION	//if the refs are out of date, force a build.
WITHOUT_CLASSIFICATION	//bail out early if there were no files
WITHOUT_CLASSIFICATION	//now scan the hashtable and add the files
WITHOUT_CLASSIFICATION	//add the source file
WITHOUT_CLASSIFICATION	//now run
WITHOUT_CLASSIFICATION	//forcibly delete the output file in case of trouble
WITHOUT_CLASSIFICATION	//then rethrow the exception
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// end execute
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//rebuild unless the dest file is newer than the source file
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//determine directory: resourceDir if set, //the dir of the destFile if not
WITHOUT_CLASSIFICATION	//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope
WITHOUT_CLASSIFICATION	//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes
WITHOUT_CLASSIFICATION	//if there is no src dir here, set it
WITHOUT_CLASSIFICATION	//get dependencies list.
WITHOUT_CLASSIFICATION	//get any included source directories
WITHOUT_CLASSIFICATION	//add the files to the command
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MethodNameCheck ON
WITHOUT_CLASSIFICATION	/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */
WITHOUT_CLASSIFICATION	// ends with '.' or null
WITHOUT_CLASSIFICATION	/* Constants used for the "beantype" attribute */
WITHOUT_CLASSIFICATION	/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */
WITHOUT_CLASSIFICATION	/* Classpath used when the iAS ejbc is called */
WITHOUT_CLASSIFICATION	/* Options passed to the iAS ejbc */
WITHOUT_CLASSIFICATION	/* iAS installation directory (used if ejbc isn't on user's PATH) */
WITHOUT_CLASSIFICATION	/* Parser and handler used to process both EJB descriptor files */
WITHOUT_CLASSIFICATION	/* Value of the display-name element read from the standard EJB descriptor */
WITHOUT_CLASSIFICATION	/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */
WITHOUT_CLASSIFICATION	/* If the -classpath flag isn't specified, use the system classpath */
WITHOUT_CLASSIFICATION	/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */
WITHOUT_CLASSIFICATION	/* Construct a SAXParser used to process the descriptors */
WITHOUT_CLASSIFICATION	// SAXException or ParserConfigurationException may be thrown
WITHOUT_CLASSIFICATION	/* Build and populate an instance of the ejbc utility */
WITHOUT_CLASSIFICATION	/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */
WITHOUT_CLASSIFICATION	// Add one for the "\"
WITHOUT_CLASSIFICATION	/* Concatenate all of the command line arguments into a single String */
WITHOUT_CLASSIFICATION	/* If an iAS home directory is specified, prepend it to the commmand */
WITHOUT_CLASSIFICATION	/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */
WITHOUT_CLASSIFICATION	/* OPTIONAL COMMAND LINE PARAMETERS */
WITHOUT_CLASSIFICATION	/* No beantype flag is needed for an entity bean */
WITHOUT_CLASSIFICATION	/* REQUIRED COMMAND LINE PARAMETERS */
WITHOUT_CLASSIFICATION	/* Convert the List into an Array and return it */
WITHOUT_CLASSIFICATION	/* Inner classes follow */
WITHOUT_CLASSIFICATION	// End of EjbcException inner class
WITHOUT_CLASSIFICATION	// Tracks current element // Tracks current text data // "session" or "entity"
WITHOUT_CLASSIFICATION	/* Search the resource Map and (if not found) file Map */
WITHOUT_CLASSIFICATION	/* A new element has started, so reset the text being captured */
WITHOUT_CLASSIFICATION	/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */
WITHOUT_CLASSIFICATION	// End of EjbcHandler inner class
WITHOUT_CLASSIFICATION	/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */
WITHOUT_CLASSIFICATION	/* Check that the specified instance variables are valid */
WITHOUT_CLASSIFICATION	/* Check that the EJB "source" classes all exist */
WITHOUT_CLASSIFICATION	// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class
WITHOUT_CLASSIFICATION	/* Check the timestamp on the remote interface */
WITHOUT_CLASSIFICATION	/* Check the timestamp on the home interface */
WITHOUT_CLASSIFICATION	/* Check the timestamp of the primary key class */
WITHOUT_CLASSIFICATION	// List of all stubs & skels // Earliest mod time // Has each been found?
WITHOUT_CLASSIFICATION	/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */
WITHOUT_CLASSIFICATION	/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */
WITHOUT_CLASSIFICATION	/* Keep track of the oldest modification timestamp */
WITHOUT_CLASSIFICATION	// End of EjbInfo inner class
WITHOUT_CLASSIFICATION	// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package
WITHOUT_CLASSIFICATION	// End of Classname inner class
WITHOUT_CLASSIFICATION	// Stream to read and redirect to standard output
WITHOUT_CLASSIFICATION	// End of RedirectOutput inner class
WITHOUT_CLASSIFICATION	// add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	//clientname = ejbjarfile+client.jar
WITHOUT_CLASSIFICATION	// end of else
WITHOUT_CLASSIFICATION	// ejb jar file
WITHOUT_CLASSIFICATION	// ejb jar file
WITHOUT_CLASSIFICATION	//client jar file
WITHOUT_CLASSIFICATION	//client jar file
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	//classpath
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	/* GenIC options */
WITHOUT_CLASSIFICATION	/* other options */
WITHOUT_CLASSIFICATION	/* -------------------- */
WITHOUT_CLASSIFICATION	/* -------------------- */
WITHOUT_CLASSIFICATION	/* GenIC options setter */
WITHOUT_CLASSIFICATION	// -I- // ignore all errors // -Vd
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	/* -------------------- */
WITHOUT_CLASSIFICATION	/* other options setter */
WITHOUT_CLASSIFICATION	/* other methods */
WITHOUT_CLASSIFICATION	// the method deleteOnExit() do not work because the directory is not empty
WITHOUT_CLASSIFICATION	// create the generic jar first
WITHOUT_CLASSIFICATION	// GenIC call on generic jar
WITHOUT_CLASSIFICATION	// create the real jar
WITHOUT_CLASSIFICATION	// JOnAS-specific descriptor deployment
WITHOUT_CLASSIFICATION	// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator
WITHOUT_CLASSIFICATION	// extract path info
WITHOUT_CLASSIFICATION	// descriptorName is just a file without path
WITHOUT_CLASSIFICATION	/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */
WITHOUT_CLASSIFICATION	// no . found
WITHOUT_CLASSIFICATION	// try to find JOnAS specific convention name
WITHOUT_CLASSIFICATION	// else get standard baseName
WITHOUT_CLASSIFICATION	// jonasroot
WITHOUT_CLASSIFICATION	// java policy file
WITHOUT_CLASSIFICATION	// outputdir
WITHOUT_CLASSIFICATION	// work around a bug of GenIC 2.5
WITHOUT_CLASSIFICATION	// classpath
WITHOUT_CLASSIFICATION	// try to create the classpath for the correct ORB
WITHOUT_CLASSIFICATION	// keepgenerated
WITHOUT_CLASSIFICATION	// nocompil
WITHOUT_CLASSIFICATION	// novalidation
WITHOUT_CLASSIFICATION	// javac
WITHOUT_CLASSIFICATION	// javacopts
WITHOUT_CLASSIFICATION	// rmicopts
WITHOUT_CLASSIFICATION	// secpropag
WITHOUT_CLASSIFICATION	// verbose
WITHOUT_CLASSIFICATION	// input file to process by GenIC
WITHOUT_CLASSIFICATION	// calling GenIC task
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// the method deleteOnExit() do not work because the directory is not empty
WITHOUT_CLASSIFICATION	// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].
WITHOUT_CLASSIFICATION	// jonasroot
WITHOUT_CLASSIFICATION	// GenIC task // GenIC class (3 are supported for various // versions
WITHOUT_CLASSIFICATION	// javac
WITHOUT_CLASSIFICATION	// additionalargs
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// add the generated files to the ejbFiles
WITHOUT_CLASSIFICATION	// orb
WITHOUT_CLASSIFICATION	/* ----------------------------------------------------------------------------------- */
WITHOUT_CLASSIFICATION	/* ----------------------------------------------------------------------------------- */
WITHOUT_CLASSIFICATION	/* utilitary methods */
WITHOUT_CLASSIFICATION	// Create the parser using whatever parser the system dictates
WITHOUT_CLASSIFICATION	// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.
WITHOUT_CLASSIFICATION	// process the deployment descriptor in each tool
WITHOUT_CLASSIFICATION	// end of execute()
WITHOUT_CLASSIFICATION	// resolve relative to project basedir
WITHOUT_CLASSIFICATION	// Get the filename into a String object
WITHOUT_CLASSIFICATION	// Get the value of the <ejb-name> tag.  Only the first occurrence.
WITHOUT_CLASSIFICATION	// Then the toplink deployment descriptor
WITHOUT_CLASSIFICATION	// Setup a naming standard here?.
WITHOUT_CLASSIFICATION	// get all the files in the descriptor directory
WITHOUT_CLASSIFICATION	// If we still can't find it, complain
WITHOUT_CLASSIFICATION	// OK, properties file may be absolute
WITHOUT_CLASSIFICATION	// do we need to regenerate the file
WITHOUT_CLASSIFICATION	//weblogic.ejb.utils.DDCreator.main(args);
WITHOUT_CLASSIFICATION	// there was an exception - run with no exit to get proper error
WITHOUT_CLASSIFICATION	//weblogic.ejb.utils.DDCreator.main(newArgs);
WITHOUT_CLASSIFICATION	/* Attributes set by the Ant build file */
WITHOUT_CLASSIFICATION	// Create the zip entry and add it to the jar file
WITHOUT_CLASSIFICATION	//add it to list of files in jar
WITHOUT_CLASSIFICATION	// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.
WITHOUT_CLASSIFICATION	// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.
WITHOUT_CLASSIFICATION	// Weblogic will throw an error if the deployment descriptor does // not match the class files.
WITHOUT_CLASSIFICATION	// Create the file input stream, and buffer everything over // to the jar output stream
WITHOUT_CLASSIFICATION	// Close up the file input stream for the class file
WITHOUT_CLASSIFICATION	// register any DTDs supplied by the user
WITHOUT_CLASSIFICATION	// none to register for generic
WITHOUT_CLASSIFICATION	// Retrive the files to be added to JAR from EJB descriptor
WITHOUT_CLASSIFICATION	// Add any support classes specified in the build file
WITHOUT_CLASSIFICATION	// Determine the JAR filename (without filename extension)
WITHOUT_CLASSIFICATION	// First the regular deployment descriptor
WITHOUT_CLASSIFICATION	// now the vendor specific files, if any
WITHOUT_CLASSIFICATION	// add any dependent files
WITHOUT_CLASSIFICATION	// Check to see if we need a build and start doing the work!
WITHOUT_CLASSIFICATION	// Log that we are going to build...
WITHOUT_CLASSIFICATION	// Use helper method to write the jarfile
WITHOUT_CLASSIFICATION	// Log that the file is up to date...
WITHOUT_CLASSIFICATION	/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */
WITHOUT_CLASSIFICATION	// add in support classes if any
WITHOUT_CLASSIFICATION	// Work out what the base name is
WITHOUT_CLASSIFICATION	// nothing to add for generic tool.
WITHOUT_CLASSIFICATION	// clean the addedfiles set
WITHOUT_CLASSIFICATION	// Create the streams necessary to write the jarfile
WITHOUT_CLASSIFICATION	//get and clean up innerclass name
WITHOUT_CLASSIFICATION	// See if there are any inner classes for this class and add them in if there are
WITHOUT_CLASSIFICATION	// Loop through all the class files found and add them to the jar
WITHOUT_CLASSIFICATION	//assertions take up space too
WITHOUT_CLASSIFICATION	// link the file
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	//trim the META_INF\ off of the file name
WITHOUT_CLASSIFICATION	// end of writeJar
WITHOUT_CLASSIFICATION	// only generate a new ClassLoader if we have a classpath
WITHOUT_CLASSIFICATION	// register all the known DTDs
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// The the weblogic cmp deployment descriptor
WITHOUT_CLASSIFICATION	// try to determine it from publicId
WITHOUT_CLASSIFICATION	// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes
WITHOUT_CLASSIFICATION	// need to create a generic jar first.
WITHOUT_CLASSIFICATION	// Only go forward if the generic and the weblogic file both exist
WITHOUT_CLASSIFICATION	//open jar files
WITHOUT_CLASSIFICATION	//get the list of generic jar entries
WITHOUT_CLASSIFICATION	//get the list of weblogic jar entries
WITHOUT_CLASSIFICATION	//Cycle Through generic and make sure its in weblogic
WITHOUT_CLASSIFICATION	// File name/path match
WITHOUT_CLASSIFICATION	// Check files see if same
WITHOUT_CLASSIFICATION	//File are different see if its an object or an interface
WITHOUT_CLASSIFICATION	//Interface changed   rebuild jar.
WITHOUT_CLASSIFICATION	//Object class Changed   update it.
WITHOUT_CLASSIFICATION	// is it the manifest. If so ignore it
WITHOUT_CLASSIFICATION	//File other then class changed   rebuild
WITHOUT_CLASSIFICATION	// a file doesnt exist rebuild
WITHOUT_CLASSIFICATION	//Copy files from old weblogic jar
WITHOUT_CLASSIFICATION	// Use the entry from the generic jar
WITHOUT_CLASSIFICATION	//use fle from original weblogic jar
WITHOUT_CLASSIFICATION	// need to close files and perhaps rename output
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// if the implementation classes don;t exist regenerate
WITHOUT_CLASSIFICATION	// any problems - just regenerate
WITHOUT_CLASSIFICATION	// create a Java task to do the rebuild
WITHOUT_CLASSIFICATION	//weblogic.ejbc.main(args);
WITHOUT_CLASSIFICATION	/* Build and populate an instance of the ejbc utility */
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	//classpath
WITHOUT_CLASSIFICATION	/* Attributes set by the Ant build file */
WITHOUT_CLASSIFICATION	// Get the filename of vendor specific descriptor
WITHOUT_CLASSIFICATION	//trim the META_INF\ off of the file name
WITHOUT_CLASSIFICATION	// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.
WITHOUT_CLASSIFICATION	// run with no exit for better reporting
WITHOUT_CLASSIFICATION	//weblogic.ejbc.main(newArgs);
WITHOUT_CLASSIFICATION	/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */
WITHOUT_CLASSIFICATION	/* Add CMP descriptors to the list of EJB files */
WITHOUT_CLASSIFICATION	/* Only calculate the descriptor name once */
WITHOUT_CLASSIFICATION	// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator
WITHOUT_CLASSIFICATION	/* Find the end of the standard descriptor's relative path */
WITHOUT_CLASSIFICATION	/* Check to see if the standard name is used (there's no basename) */
WITHOUT_CLASSIFICATION	/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */
WITHOUT_CLASSIFICATION	//choose the right vendor DD
WITHOUT_CLASSIFICATION	// ejb jar file to verify
WITHOUT_CLASSIFICATION	//debug ?
WITHOUT_CLASSIFICATION	//set the classpath
WITHOUT_CLASSIFICATION	//list file
WITHOUT_CLASSIFICATION	//no TIE classes
WITHOUT_CLASSIFICATION	//root dir
WITHOUT_CLASSIFICATION	//compiling order
WITHOUT_CLASSIFICATION	//add the home class
WITHOUT_CLASSIFICATION	//build the home classes list.
WITHOUT_CLASSIFICATION	//remove .class extension
WITHOUT_CLASSIFICATION	//add the gen files to the collection
WITHOUT_CLASSIFICATION	//remove the .class
WITHOUT_CLASSIFICATION	// Get the Extensions document
WITHOUT_CLASSIFICATION	// We attempt to put in the MAP and Schema files of CMP beans
WITHOUT_CLASSIFICATION	// Add the Map file
WITHOUT_CLASSIFICATION	// Theres nothing else to see here...keep moving sonny
WITHOUT_CLASSIFICATION	// Set the options
WITHOUT_CLASSIFICATION	// Set the JvmArgs
WITHOUT_CLASSIFICATION	// Set the Environment variable
WITHOUT_CLASSIFICATION	// Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	//open jar files
WITHOUT_CLASSIFICATION	//get the list of generic jar entries
WITHOUT_CLASSIFICATION	//File are different see if its an object or an interface
WITHOUT_CLASSIFICATION	//Interface changed   rebuild jar.
WITHOUT_CLASSIFICATION	//Object class Changed   update it.
WITHOUT_CLASSIFICATION	// is it the manifest. If so ignore it
WITHOUT_CLASSIFICATION	//File other then class changed   rebuild
WITHOUT_CLASSIFICATION	// Update with changed Bean class
WITHOUT_CLASSIFICATION	// Use the entry from the generic jar
WITHOUT_CLASSIFICATION	// register all the DTDs, both the ones that are known and // any supplied by the user
WITHOUT_CLASSIFICATION	// Set the working directory
WITHOUT_CLASSIFICATION	// Set the Java class name
WITHOUT_CLASSIFICATION	// create the -generic.jar, if required
WITHOUT_CLASSIFICATION	// create the "undeployed" output .jar, if required
WITHOUT_CLASSIFICATION	// Only go forward if the generic and the websphere file both exist
WITHOUT_CLASSIFICATION	//get the list of websphere jar entries
WITHOUT_CLASSIFICATION	//Cycle Through generic and make sure its in websphere
WITHOUT_CLASSIFICATION	// File name/path match // Check files see if same
WITHOUT_CLASSIFICATION	// a file doesn't exist rebuild
WITHOUT_CLASSIFICATION	//Copy files from old websphere jar
WITHOUT_CLASSIFICATION	//use fle from original websphere jar
WITHOUT_CLASSIFICATION	// Specification Name must match
WITHOUT_CLASSIFICATION	// Available specification version must be >= required
WITHOUT_CLASSIFICATION	// Implementation Vendor ID must match
WITHOUT_CLASSIFICATION	// Implementation Vendor ID must match
WITHOUT_CLASSIFICATION	// Implementation version must be >= required
WITHOUT_CLASSIFICATION	// This available optional package satisfies the requirements
WITHOUT_CLASSIFICATION	// This available optional package satisfies the requirements
WITHOUT_CLASSIFICATION	//Reset list of sections
WITHOUT_CLASSIFICATION	// Extension Name must match
WITHOUT_CLASSIFICATION	//Add all the dependency data to manifest for dependencies
WITHOUT_CLASSIFICATION	// Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	// change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	//Add all the dependency data to manifest for "optional" //dependencies
WITHOUT_CLASSIFICATION	//add in something like //"Extension-List: javahelp java3d"
WITHOUT_CLASSIFICATION	//all methods static
WITHOUT_CLASSIFICATION	/*     * Gets the destination file     */
WITHOUT_CLASSIFICATION	/*     * Validates URL     */
WITHOUT_CLASSIFICATION	//Load default locale bundle files //using default file encoding scheme.
WITHOUT_CLASSIFICATION	//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception
WITHOUT_CLASSIFICATION	//So long as the line isn't empty and isn't a comment...
WITHOUT_CLASSIFICATION	//Legal Key-Value separators are :, = and white space.
WITHOUT_CLASSIFICATION	//Only if we do have a key is there going to be a value
WITHOUT_CLASSIFICATION	//Handle line continuations, if any
WITHOUT_CLASSIFICATION	//Has key already been loaded into resourceMap?
WITHOUT_CLASSIFICATION	//Make sure parent dirs exist, else, create them.
WITHOUT_CLASSIFICATION	//Check to see if dest file has to be recreated
WITHOUT_CLASSIFICATION	// is there a startToken // and there is still stuff following the startToken
WITHOUT_CLASSIFICATION	// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical
WITHOUT_CLASSIFICATION	// grab the token
WITHOUT_CLASSIFICATION	// If there is a white space or = or :, then // it isn't to be treated as a valid key.
WITHOUT_CLASSIFICATION	// find the replace string
WITHOUT_CLASSIFICATION	// generate the new line
WITHOUT_CLASSIFICATION	// set start position for next search
WITHOUT_CLASSIFICATION	// find next starttoken
WITHOUT_CLASSIFICATION	// deal with specified srcDir
WITHOUT_CLASSIFICATION	// deal with the filesets
WITHOUT_CLASSIFICATION	// remove any files that shouldn't be overwritten.
WITHOUT_CLASSIFICATION	// check that the password has been set
WITHOUT_CLASSIFICATION	// check for missing application on deploy & update
WITHOUT_CLASSIFICATION	// check for missing source on deploy & update
WITHOUT_CLASSIFICATION	// check for missing application on delete & undeploy
WITHOUT_CLASSIFICATION	// keys to optional attributes
WITHOUT_CLASSIFICATION	// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// keys to optional attributes
WITHOUT_CLASSIFICATION	// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc
WITHOUT_CLASSIFICATION	// required attributes
WITHOUT_CLASSIFICATION	// required attributes
WITHOUT_CLASSIFICATION	// required attributes
WITHOUT_CLASSIFICATION	// load command line with optional attributes
WITHOUT_CLASSIFICATION	// load command line with optional attributes
WITHOUT_CLASSIFICATION	// load command line with optional attributes
WITHOUT_CLASSIFICATION	// use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	// use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	// used by jpackage for JavaCC 3.x
WITHOUT_CLASSIFICATION	// check the target is a file
WITHOUT_CLASSIFICATION	// determine if the generated java file is up-to-date
WITHOUT_CLASSIFICATION	// Extract file's base-name
WITHOUT_CLASSIFICATION	// Replace the file's extension with '.java'
WITHOUT_CLASSIFICATION	// Change the directory
WITHOUT_CLASSIFICATION	// This default has been good enough until Ant 1.6.3, so stick // with it
WITHOUT_CLASSIFICATION	// first search for the "old" javah class in 1.4.2 tools.jar
WITHOUT_CLASSIFICATION	// assume older than 1.4.2 tools.jar
WITHOUT_CLASSIFICATION	//private CommandlineJava commandline = new CommandlineJava();
WITHOUT_CLASSIFICATION	// required attributes // Deprecated! // Use this going forward
WITHOUT_CLASSIFICATION	// optional attributes
WITHOUT_CLASSIFICATION	// execute the test and get the return code
WITHOUT_CLASSIFICATION	// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	/* int accessFlags = */
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// not necessary as JDepend would fail, but why loose // some time?
WITHOUT_CLASSIFICATION	// This bit turns <exclude> child tags into patters to ignore
WITHOUT_CLASSIFICATION	// JL: comment extracted from JUnitTask (and slightly modified)
WITHOUT_CLASSIFICATION	// if not set, auto-create the ClassPath from the project
WITHOUT_CLASSIFICATION	// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two
WITHOUT_CLASSIFICATION	// This is the new way - use classespath - code is the // same for now
WITHOUT_CLASSIFICATION	// read in all constant pool entries.
WITHOUT_CLASSIFICATION	// verify this is a valid class file.
WITHOUT_CLASSIFICATION	/* int version = */
WITHOUT_CLASSIFICATION	// read the constant pool.
WITHOUT_CLASSIFICATION	// read access flags and class index.
WITHOUT_CLASSIFICATION	//Be sure everything has been set.
WITHOUT_CLASSIFICATION	//Do the merge
WITHOUT_CLASSIFICATION	//Add this file to the addfiles Vector and add it //later at the top level of the output file.
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	// jlink output input1 ... inputN
WITHOUT_CLASSIFICATION	// To maintain compatibility with the command-line version, // we will only add files to be merged.
WITHOUT_CLASSIFICATION	/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */
WITHOUT_CLASSIFICATION	//Check to see that the file with name "name" exists.
WITHOUT_CLASSIFICATION	//META-INF not found in the name of the entry. Go ahead and process it.
WITHOUT_CLASSIFICATION	//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	/*     * Necessary in the case where you add a entry that     * is not compressed.     */
WITHOUT_CLASSIFICATION	//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.
WITHOUT_CLASSIFICATION	//It was the duplicate entry.
WITHOUT_CLASSIFICATION	/*     * Adds contents of a directory to the output.     */
WITHOUT_CLASSIFICATION	/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */
WITHOUT_CLASSIFICATION	// see if the file is in fact a .class file, and determine its actual name.
WITHOUT_CLASSIFICATION	/*     * Adds a file to the output stream.     */
WITHOUT_CLASSIFICATION	//Make sure file exists
WITHOUT_CLASSIFICATION	/*     * A convenience method that several other methods might call.     */
WITHOUT_CLASSIFICATION	//This entry already exists. So, go with the first one.
WITHOUT_CLASSIFICATION	/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */
WITHOUT_CLASSIFICATION	//Note, don't need to specify size or crc for compressed files.
WITHOUT_CLASSIFICATION	//use the systemclasspath as well, to include the ant jar
WITHOUT_CLASSIFICATION	/*     * Necessary in the case where you add a entry that     * is not compressed.     */
WITHOUT_CLASSIFICATION	//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix
WITHOUT_CLASSIFICATION	//private String compilerPath; //fully qualified name for the compiler executable
WITHOUT_CLASSIFICATION	// get all the files in the sourceDirectory
WITHOUT_CLASSIFICATION	//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)
WITHOUT_CLASSIFICATION	// apply transformation
WITHOUT_CLASSIFICATION	//end class
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	// now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	// finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	// Create an instance of the compiler, redirecting output to // the project log
WITHOUT_CLASSIFICATION	// compile the source files
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//demand create vector of filesets
WITHOUT_CLASSIFICATION	// make sure that we've got a destdir
WITHOUT_CLASSIFICATION	//bind to a compiler
WITHOUT_CLASSIFICATION	//if we are a webapp, hand off to the compiler, which had better handle it
WITHOUT_CLASSIFICATION	// make sure that we've got a srcdir
WITHOUT_CLASSIFICATION	// if the compiler does its own dependency stuff, we just call it right now
WITHOUT_CLASSIFICATION	//the remainder of this method is only for compilers that need their dependency work done
WITHOUT_CLASSIFICATION	// scan source directories and dest directory to build up both copy // lists and compile lists
WITHOUT_CLASSIFICATION	//        String srcFileDir=srcFile.getParent();
WITHOUT_CLASSIFICATION	//end inner class
WITHOUT_CLASSIFICATION	// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names
WITHOUT_CLASSIFICATION	// first char is more restrictive than the rest
WITHOUT_CLASSIFICATION	// this is the rest
WITHOUT_CLASSIFICATION	// If the first char is not a start of Java identifier or is _ // prepend a '_'.
WITHOUT_CLASSIFICATION	//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build
WITHOUT_CLASSIFICATION	//tomcat4.0 gets the old mangler
WITHOUT_CLASSIFICATION	//tomcat4.1 gets the new one
WITHOUT_CLASSIFICATION	// for all other possibilities
WITHOUT_CLASSIFICATION	// append the err and output streams to the log
WITHOUT_CLASSIFICATION	// acrobatic cast.
WITHOUT_CLASSIFICATION	// set the destination directory relative from the project if needed.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// sanity check
WITHOUT_CLASSIFICATION	// plain impossible
WITHOUT_CLASSIFICATION	// Quick return - no output do nothing.
WITHOUT_CLASSIFICATION	// append the err and output streams to the log
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// If style dir is not specified we have to retrieve // the stylesheet from the classloader
WITHOUT_CLASSIFICATION	// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem
WITHOUT_CLASSIFICATION	// xalan 2
WITHOUT_CLASSIFICATION	// xalan xsltc
WITHOUT_CLASSIFICATION	// jdk 1.5 xsltc
WITHOUT_CLASSIFICATION	// must be plain, ensured by TypeAttribute
WITHOUT_CLASSIFICATION	// pre JUnit 3.7
WITHOUT_CLASSIFICATION	// can be null if an error occurred in setUp
WITHOUT_CLASSIFICATION	// PlainJUnitResultFormatter
WITHOUT_CLASSIFICATION	// Snapshot of the system properties
WITHOUT_CLASSIFICATION	//add the timestamp
WITHOUT_CLASSIFICATION	//and the hostname.
WITHOUT_CLASSIFICATION	// Output properties
WITHOUT_CLASSIFICATION	// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.
WITHOUT_CLASSIFICATION	// XMLJUnitResultFormatter
WITHOUT_CLASSIFICATION	// Do we send output to the formatters ?
WITHOUT_CLASSIFICATION	//   Attributes for basetest
WITHOUT_CLASSIFICATION	// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.
WITHOUT_CLASSIFICATION	/* forkMode.getValue().equals(ForkMode.PER_BATCH) */
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// execute the test and get the return code
WITHOUT_CLASSIFICATION	// execute the test and get the return code
WITHOUT_CLASSIFICATION	// null watchdog means no timeout, you'd better not check with null
WITHOUT_CLASSIFICATION	// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// set the default values if not specified //@todo should be moved to the test class instead.
WITHOUT_CLASSIFICATION	// Create a temporary file to pass the test cases to run to // the runner (one test case per line)
WITHOUT_CLASSIFICATION	// #31885
WITHOUT_CLASSIFICATION	// ignored.
WITHOUT_CLASSIFICATION	// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)
WITHOUT_CLASSIFICATION	// make sure the test will be accepted as a TestCase
WITHOUT_CLASSIFICATION	// make sure the test annotation are accepted
WITHOUT_CLASSIFICATION	// will cause trouble in JDK 1.1 if omitted
WITHOUT_CLASSIFICATION	// local copy since LogOutputStream.task is private
WITHOUT_CLASSIFICATION	// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.
WITHOUT_CLASSIFICATION	// dummy output for the framed report // it's all done by extension...
WITHOUT_CLASSIFICATION	// conforming to NodeList interface
WITHOUT_CLASSIFICATION	// this should never happen
WITHOUT_CLASSIFICATION	// write the document
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//----- from now, the methods are all related to DOM tree manipulation
WITHOUT_CLASSIFICATION	// writers do not throw exceptions, so check for them.
WITHOUT_CLASSIFICATION	// create the dom tree
WITHOUT_CLASSIFICATION	// get all files and add them to the document
WITHOUT_CLASSIFICATION	// make sure that this is REALLY a testsuite.
WITHOUT_CLASSIFICATION	//wrong root element name // issue a warning.
WITHOUT_CLASSIFICATION	// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning
WITHOUT_CLASSIFICATION	// a missing . might imply no package at all. Don't get fooled.
WITHOUT_CLASSIFICATION	// modify the name attribute and set the package
WITHOUT_CLASSIFICATION	// don't filter AssertionFailure
WITHOUT_CLASSIFICATION	// JUnit 4 support:
WITHOUT_CLASSIFICATION	// check for a static suite method first, even when using // JUnit 4
WITHOUT_CLASSIFICATION	// check if there is a suite method
WITHOUT_CLASSIFICATION	// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.
WITHOUT_CLASSIFICATION	// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.
WITHOUT_CLASSIFICATION	// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.
WITHOUT_CLASSIFICATION	// OK, fall back to JUnit 3.
WITHOUT_CLASSIFICATION	// Let's use it!
WITHOUT_CLASSIFICATION	// Use JUnit 3.
WITHOUT_CLASSIFICATION	// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test
WITHOUT_CLASSIFICATION	// had an exception constructing suite
WITHOUT_CLASSIFICATION	// Add/overlay system properties on the properties from the Ant project
WITHOUT_CLASSIFICATION	// return the stack unfiltered
WITHOUT_CLASSIFICATION	// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.
WITHOUT_CLASSIFICATION	// To compile on pre-JDK 4 (even though this should always succeed):
WITHOUT_CLASSIFICATION	// pre-3.4
WITHOUT_CLASSIFICATION	// JUnitTestRunner
WITHOUT_CLASSIFICATION	//rethrow
WITHOUT_CLASSIFICATION	//wrap
WITHOUT_CLASSIFICATION	// sorted by newest Kaffe version first
WITHOUT_CLASSIFICATION	// pre Kaffe 1.1.5
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// we are going to scan everything anyway
WITHOUT_CLASSIFICATION	// only scan directories that can include matched files or // directories
WITHOUT_CLASSIFICATION	// avoid double scanning of directories, can only happen in fast mode
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// This default has been good enough until Ant 1.6.3, so stick // with it
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Rats. // should not happen
WITHOUT_CLASSIFICATION	// otherwise ExecuteJava has thrown an exception
WITHOUT_CLASSIFICATION	// No includes supplied, so set it to 'matches all'
WITHOUT_CLASSIFICATION	// always start from the current ftp working dir
WITHOUT_CLASSIFICATION	// put in the newroots vector the include patterns without // wildcard tokens
WITHOUT_CLASSIFICATION	// construct it
WITHOUT_CLASSIFICATION	// cool case, //we do not need to scan all the subdirs in the relative path
WITHOUT_CLASSIFICATION	//this should not happen, except if parent has been deleted by another process
WITHOUT_CLASSIFICATION	// we are already in the right path, so the second parameter // is false
WITHOUT_CLASSIFICATION	// hit a hidden file assume not a symlink
WITHOUT_CLASSIFICATION	// getRelativePath also finds about symlinks
WITHOUT_CLASSIFICATION	// warn that selectors are not supported
WITHOUT_CLASSIFICATION	// If we are doing a listing, we need the output stream created now.
WITHOUT_CLASSIFICATION	// get files from filesets
WITHOUT_CLASSIFICATION	// find first non cached dir
WITHOUT_CLASSIFICATION	// check if dir exists by trying to change into it.
WITHOUT_CLASSIFICATION	// could not change to it - try to create it
WITHOUT_CLASSIFICATION	// create a local temporary file
WITHOUT_CLASSIFICATION	// see if we should issue a chmod command
WITHOUT_CLASSIFICATION	// ignore it
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// ignore it
WITHOUT_CLASSIFICATION	// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows
WITHOUT_CLASSIFICATION	// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format
WITHOUT_CLASSIFICATION	// If we are sending files, then assume out of date. // If we are getting files, then throw an error
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.
WITHOUT_CLASSIFICATION	// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.
WITHOUT_CLASSIFICATION	// For a unix ftp server you can set the default mask for all files // created.
WITHOUT_CLASSIFICATION	// If the action is MK_DIR, then the specified remote // directory is the directory to create.
WITHOUT_CLASSIFICATION	// in this case we want to find how much time span there is between local // and remote
WITHOUT_CLASSIFICATION	//socks
WITHOUT_CLASSIFICATION	//this may be a java1.4 thingy only
WITHOUT_CLASSIFICATION	// simple one-shot execution
WITHOUT_CLASSIFICATION	// need nested read/write elements
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//here we'd parse the output from change -o into submit -i //in order to support default change.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>
WITHOUT_CLASSIFICATION	/* -n */
WITHOUT_CLASSIFICATION	//Remove any non-numerical chars - should leave the change number
WITHOUT_CLASSIFICATION	// this type of output might happen // Change 18 renamed change 20 and submitted.
WITHOUT_CLASSIFICATION	//Match "//" for begining of depot filespec
WITHOUT_CLASSIFICATION	// we need to escape the description in case there are /
WITHOUT_CLASSIFICATION	// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.
WITHOUT_CLASSIFICATION	//EoF
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */
WITHOUT_CLASSIFICATION	/* -a */
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* -n */
WITHOUT_CLASSIFICATION	/* -n */
WITHOUT_CLASSIFICATION	/* -f */
WITHOUT_CLASSIFICATION	/* -t */
WITHOUT_CLASSIFICATION	/* -v */
WITHOUT_CLASSIFICATION	//We have to create a unlocked label first
WITHOUT_CLASSIFICATION	//Now lock if required
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately
WITHOUT_CLASSIFICATION	//Read back the label spec from perforce, //Replace Options //Submit back to Perforce
WITHOUT_CLASSIFICATION	//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.
WITHOUT_CLASSIFICATION	//sync says "error:" when a file is up-to-date
WITHOUT_CLASSIFICATION	//sometimes there's "info1:
WITHOUT_CLASSIFICATION	//P4 runtime directives
WITHOUT_CLASSIFICATION	// Perforce task directives
WITHOUT_CLASSIFICATION	//P4 g-opts and cmd opts (rtfm)
WITHOUT_CLASSIFICATION	//Setters called by Ant
WITHOUT_CLASSIFICATION	//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)
WITHOUT_CLASSIFICATION	// reset error flags before executing the command
WITHOUT_CLASSIFICATION	//Check API for these - it's how CVS does it...
WITHOUT_CLASSIFICATION	/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */
WITHOUT_CLASSIFICATION	// private static final String PCLI_LVF_ARGS = "lvf -z -aw";
WITHOUT_CLASSIFICATION	// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is
WITHOUT_CLASSIFICATION	// default pvcs project is "/"
WITHOUT_CLASSIFICATION	// Create folders in workspace
WITHOUT_CLASSIFICATION	// Launch get on output captured from PCLI lvf
WITHOUT_CLASSIFICATION	// Extract the name of the directory from the filename
WITHOUT_CLASSIFICATION	// Change these through their GET and SET methods.
WITHOUT_CLASSIFICATION	// These fields deal with includes and excludes
WITHOUT_CLASSIFICATION	// Check all of the properties that are required.
WITHOUT_CLASSIFICATION	// Check to see if the target directory exists.
WITHOUT_CLASSIFICATION	// Search the items on this server.
WITHOUT_CLASSIFICATION	// Disconnect from the server.
WITHOUT_CLASSIFICATION	// Tell how many files were checked out.
WITHOUT_CLASSIFICATION	// Optional; logOn() connects if necessary.
WITHOUT_CLASSIFICATION	// Logon using specified user name and password.
WITHOUT_CLASSIFICATION	// We always display the ItemID (OBJECT_ID) and primary descriptor.
WITHOUT_CLASSIFICATION	//If a working directory was specified then add it to the command line
WITHOUT_CLASSIFICATION	// Checking for "\ // or           "/ // or           "X:\...
WITHOUT_CLASSIFICATION	// If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.
WITHOUT_CLASSIFICATION	// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.
WITHOUT_CLASSIFICATION	// We'll need this item type's primary descriptor.
WITHOUT_CLASSIFICATION	// Does this item type have a secondary descriptor? // If so, we'll need it.
WITHOUT_CLASSIFICATION	// Now, build an array of the property names.
WITHOUT_CLASSIFICATION	// Pre-fetch the item properties and cache them.
WITHOUT_CLASSIFICATION	// Now, search for items in the selected folder.
WITHOUT_CLASSIFICATION	// Free up the memory used by the cached items.
WITHOUT_CLASSIFICATION	// convert whatever separator char is in starteam to that of the target system.
WITHOUT_CLASSIFICATION	// If it ends with separator then strip it off
WITHOUT_CLASSIFICATION	// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName
WITHOUT_CLASSIFICATION	// only want to do this the first time
WITHOUT_CLASSIFICATION	// Process all items in this folder.
WITHOUT_CLASSIFICATION	// Process all subfolders recursively if recursion is on.
WITHOUT_CLASSIFICATION	// Get descriptors for this item type.
WITHOUT_CLASSIFICATION	// VERBOSE MODE ONLY
WITHOUT_CLASSIFICATION	// Show folder only if changed.
WITHOUT_CLASSIFICATION	// Show if the file is locked.
WITHOUT_CLASSIFICATION	// END VERBOSE ONLY
WITHOUT_CLASSIFICATION	// add -command CheckOutFile to the commandline
WITHOUT_CLASSIFICATION	// Finally, show the Item properties ... // Always show the ItemID.
WITHOUT_CLASSIFICATION	// Show the primary descriptor. // There should always be one.
WITHOUT_CLASSIFICATION	// Show the secondary descriptor, if there is one. // Some item types have one, some don't.
WITHOUT_CLASSIFICATION	// Change the item to be checked out to a StarTeam File.
WITHOUT_CLASSIFICATION	// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.
WITHOUT_CLASSIFICATION	// Begin SET and GET methods
WITHOUT_CLASSIFICATION	// Begin filter getters and setters
WITHOUT_CLASSIFICATION	// Check if need to set the loader
WITHOUT_CLASSIFICATION	// Now create the scriptRunner
WITHOUT_CLASSIFICATION	// find the script repository - it is stored in the project
WITHOUT_CLASSIFICATION	/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */
WITHOUT_CLASSIFICATION	// If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	// add -command CheckInFile to the commandline
WITHOUT_CLASSIFICATION	// add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	// add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	// add -command CheckInProject to the commandline
WITHOUT_CLASSIFICATION	// look for a recursive option
WITHOUT_CLASSIFICATION	// look for a recursive option
WITHOUT_CLASSIFICATION	// Look for a comment
WITHOUT_CLASSIFICATION	// soscmd Command options
WITHOUT_CLASSIFICATION	// soscmd Option flags
WITHOUT_CLASSIFICATION	// add -command GetFile to the commandline
WITHOUT_CLASSIFICATION	// look for a version attribute
WITHOUT_CLASSIFICATION	//add -revision xxxxx to the commandline
WITHOUT_CLASSIFICATION	// add -command GetProject to the commandline
WITHOUT_CLASSIFICATION	// look for a label option
WITHOUT_CLASSIFICATION	// make sure localDir exists, create it if it doesn't
WITHOUT_CLASSIFICATION	// This is the exit status
WITHOUT_CLASSIFICATION	// Use the OS VM launcher so we get environment variables
WITHOUT_CLASSIFICATION	// Get the path to the soscmd(.exe)
WITHOUT_CLASSIFICATION	// SOS server address is required
WITHOUT_CLASSIFICATION	// VSS Info is required
WITHOUT_CLASSIFICATION	// VSS project is required
WITHOUT_CLASSIFICATION	// -verbose
WITHOUT_CLASSIFICATION	// Disable Compression
WITHOUT_CLASSIFICATION	// If -soshome was not specified then we can look for nocache
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	// look for a recursive option
WITHOUT_CLASSIFICATION	// Look for a comment
WITHOUT_CLASSIFICATION	// -verbose
WITHOUT_CLASSIFICATION	// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "
WITHOUT_CLASSIFICATION	// add -command CheckOutProject to the commandline
WITHOUT_CLASSIFICATION	// add -command AddLabel to the commandline
WITHOUT_CLASSIFICATION	// a label is required
WITHOUT_CLASSIFICATION	// get the list of files in the dir
WITHOUT_CLASSIFICATION	// get a random number between 0 and the number of files
WITHOUT_CLASSIFICATION	// set the source to the file at that location
WITHOUT_CLASSIFICATION	// Empty block
WITHOUT_CLASSIFICATION	//System.exit(0);
WITHOUT_CLASSIFICATION	// build successfull!
WITHOUT_CLASSIFICATION	/*AbstractSshMessage*/
WITHOUT_CLASSIFICATION	// dir does not exist.
WITHOUT_CLASSIFICATION	// only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	// get I/O streams for remote scp
WITHOUT_CLASSIFICATION	// this indicates an error.
WITHOUT_CLASSIFICATION	// appears that the next token is not used and it's zero.
WITHOUT_CLASSIFICATION	// read a content of lfile
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// do nothing;
WITHOUT_CLASSIFICATION	// didn't receive any response
WITHOUT_CLASSIFICATION	// execute the command
WITHOUT_CLASSIFICATION	// wait for it to finish
WITHOUT_CLASSIFICATION	// ran out of time
WITHOUT_CLASSIFICATION	// completed successfully
WITHOUT_CLASSIFICATION	// user:password@host:/path notation
WITHOUT_CLASSIFICATION	// no password, will require passphrase
WITHOUT_CLASSIFICATION	// skip
WITHOUT_CLASSIFICATION	// send "C0644 filesize filename", where filename should not include '/'
WITHOUT_CLASSIFICATION	// send a content of lfile
WITHOUT_CLASSIFICATION	// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.
WITHOUT_CLASSIFICATION	// swallow if there was an error before so that // original error will be passed up
WITHOUT_CLASSIFICATION	// since filesize keeps on decreasing we have to store the // initial filesize
WITHOUT_CLASSIFICATION	// b may be 0 for success, //          1 for error, //          2 for fatal error,
WITHOUT_CLASSIFICATION	// like <exec> // like <exec> // like <exec>
WITHOUT_CLASSIFICATION	//log(message, Project.MSG_DEBUG);
WITHOUT_CLASSIFICATION	// we want this to have a false default, unlike for Checkin.
WITHOUT_CLASSIFICATION	// If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	// We try to update the status once to give StarTeam // another chance.
WITHOUT_CLASSIFICATION	// once we find a folder that isn't in the repository, // we know we can add it.
WITHOUT_CLASSIFICATION	// once we find a folder that isn't in the repository, // we know we can add it.
WITHOUT_CLASSIFICATION	// if a label has been supplied, use it to configure the view // otherwise use current view
WITHOUT_CLASSIFICATION	// if a date has been supplied use a view configured to the date.
WITHOUT_CLASSIFICATION	// if a date has been supplied use a view configured to the date.
WITHOUT_CLASSIFICATION	// otherwise, use this view configured as the tip.
WITHOUT_CLASSIFICATION	// otherwise, use this view configured as the tip.
WITHOUT_CLASSIFICATION	// For all Files in this folder, we need to check // if there have been modifications.
WITHOUT_CLASSIFICATION	// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.
WITHOUT_CLASSIFICATION	// handle the files so they appear first
WITHOUT_CLASSIFICATION	// now do it again for the directories so they appear last.
WITHOUT_CLASSIFICATION	// Create the new label and update the repository
WITHOUT_CLASSIFICATION	// write a Properties file in each directory:
WITHOUT_CLASSIFICATION	// Create an instance of the rmic, redirecting output to // the project log
WITHOUT_CLASSIFICATION	// CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// once we find a folder that isn't in the repository, // we know we can add it.
WITHOUT_CLASSIFICATION	//ATTRIBUTES settable from ant.
WITHOUT_CLASSIFICATION	// if a label has been supplied and it is a view label, use it // to configure the view
WITHOUT_CLASSIFICATION	// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot
WITHOUT_CLASSIFICATION	// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK
WITHOUT_CLASSIFICATION	// PR 31965 says that it can return null
WITHOUT_CLASSIFICATION	// no root local mapping has been specified.
WITHOUT_CLASSIFICATION	// Inspect everything in the root folder and then recursively
WITHOUT_CLASSIFICATION	// Tell user what he is doing
WITHOUT_CLASSIFICATION	// set the local folder.
WITHOUT_CLASSIFICATION	// set the local folder.
WITHOUT_CLASSIFICATION	// ATTRIBUTES
WITHOUT_CLASSIFICATION	// create a hashtable to group them by parent directory:
WITHOUT_CLASSIFICATION	// else lnk exists, do nothing
WITHOUT_CLASSIFICATION	// get an Iterator of file objects representing links (canonical):
WITHOUT_CLASSIFICATION	//iterate through the names, get the matching values
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.
WITHOUT_CLASSIFICATION	// either use default path or root local mapping, // which is now embedded in the root folder
WITHOUT_CLASSIFICATION	///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// fill up a Properties object with link and resource names:
WITHOUT_CLASSIFICATION	// find the resource of the existing link:
WITHOUT_CLASSIFICATION	// rename the resource, thus breaking the link:
WITHOUT_CLASSIFICATION	// delete the (now) broken link:
WITHOUT_CLASSIFICATION	// return the resource to its original name:
WITHOUT_CLASSIFICATION	// loop through the supplied file sets:
WITHOUT_CLASSIFICATION	// load included files as properties files:
WITHOUT_CLASSIFICATION	// -GL
WITHOUT_CLASSIFICATION	// -GL
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -O-
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -V
WITHOUT_CLASSIFICATION	// -W
WITHOUT_CLASSIFICATION	// -W
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -G
WITHOUT_CLASSIFICATION	// -GWS or -GWR
WITHOUT_CLASSIFICATION	//set to empty str if no local path return
WITHOUT_CLASSIFICATION	//make sure m_LocalDir exists, create it if it doesn't
WITHOUT_CLASSIFICATION	// Use the OS launcher so we get environment variables
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// -C
WITHOUT_CLASSIFICATION	// -C
WITHOUT_CLASSIFICATION	// -L Specify the new label on the command line (instead of being prompted)
WITHOUT_CLASSIFICATION	// -V Label an existing file or project version
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	// pre Kaffe 1.1.5
WITHOUT_CLASSIFICATION	// -GL
WITHOUT_CLASSIFICATION	// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -O-
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -V
WITHOUT_CLASSIFICATION	// -W
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -G
WITHOUT_CLASSIFICATION	// -GWS or -GWR
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned
WITHOUT_CLASSIFICATION	// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure
WITHOUT_CLASSIFICATION	// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// -C
WITHOUT_CLASSIFICATION	// -C
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// -VL
WITHOUT_CLASSIFICATION	// -B / -D / -F-
WITHOUT_CLASSIFICATION	// -O
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a localPath ...
WITHOUT_CLASSIFICATION	// -G-
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir...
WITHOUT_CLASSIFICATION	// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// pre Kaffe 1.1.2
WITHOUT_CLASSIFICATION	// only supported since Kaffe 1.1.2
WITHOUT_CLASSIFICATION	//handle the many different stub options.
WITHOUT_CLASSIFICATION	//default is compatibility
WITHOUT_CLASSIFICATION	//anything else
WITHOUT_CLASSIFICATION	//do nothing with the value? or go -v+stubVersion??
WITHOUT_CLASSIFICATION	//set the non-null stubOption
WITHOUT_CLASSIFICATION	// we know that name.endsWith(".class")
WITHOUT_CLASSIFICATION	// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.
WITHOUT_CLASSIFICATION	// JRMP with simple naming convention
WITHOUT_CLASSIFICATION	/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */
WITHOUT_CLASSIFICATION	// no package
WITHOUT_CLASSIFICATION	// no package
WITHOUT_CLASSIFICATION	// only stub, no tie
WITHOUT_CLASSIFICATION	/*                         * stub is derived from implementation,                         * tie from interface name.                         */
WITHOUT_CLASSIFICATION	//rely on RMIC being on the path
WITHOUT_CLASSIFICATION	//set up the args
WITHOUT_CLASSIFICATION	// Create an instance of the rmic
WITHOUT_CLASSIFICATION	//convert to lower case in the English locale,
WITHOUT_CLASSIFICATION	//handle default specially by choosing the sun or kaffe compiler
WITHOUT_CLASSIFICATION	//no match? ask for the non-lower-cased type
WITHOUT_CLASSIFICATION	//do the system assertions
WITHOUT_CLASSIFICATION	//do the system assertions
WITHOUT_CLASSIFICATION	//do the system assertions
WITHOUT_CLASSIFICATION	//now any inner assertions
WITHOUT_CLASSIFICATION	//now any inner assertions
WITHOUT_CLASSIFICATION	//now any inner assertions
WITHOUT_CLASSIFICATION	//catch invalidness
WITHOUT_CLASSIFICATION	//see if it is a package or a class
WITHOUT_CLASSIFICATION	//packages get a ... prefix
WITHOUT_CLASSIFICATION	//append the ... suffix if not there already
WITHOUT_CLASSIFICATION	//classes just get the classname
WITHOUT_CLASSIFICATION	//-- Fields ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	//-- Methods ---------------------------------------------------------------
WITHOUT_CLASSIFICATION	// Add all nested elements to our catalog
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()
WITHOUT_CLASSIFICATION	// Append the classpath of the nested catalog
WITHOUT_CLASSIFICATION	// Append the catalog path of the nested catalog
WITHOUT_CLASSIFICATION	// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp
WITHOUT_CLASSIFICATION	// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader
WITHOUT_CLASSIFICATION	// load the base class through this loader.
WITHOUT_CLASSIFICATION	// and find its actual loader
WITHOUT_CLASSIFICATION	// // Success!  The xml-commons resolver library is // available, so use it. //
WITHOUT_CLASSIFICATION	// // The xml-commons resolver library is not // available, so we can't use it. //
WITHOUT_CLASSIFICATION	// the following line seems to be necessary on Windows under JDK 1.2
WITHOUT_CLASSIFICATION	// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //
WITHOUT_CLASSIFICATION	// // for classpath lookup we ignore the base directory //
WITHOUT_CLASSIFICATION	// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //
WITHOUT_CLASSIFICATION	// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //
WITHOUT_CLASSIFICATION	// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //
WITHOUT_CLASSIFICATION	// Parse each catalog listed in nested <catalogpath> elements
WITHOUT_CLASSIFICATION	//-- XMLCatalog
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	// No includes supplied, so set it to 'matches all'
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* package-private for now */
WITHOUT_CLASSIFICATION	/* package-private for now */
WITHOUT_CLASSIFICATION	// special case in ZIPs, we do not want this thing included
WITHOUT_CLASSIFICATION	// first check if the archive needs to be scanned again
WITHOUT_CLASSIFICATION	//do not use a FileResource b/c it pulls File info from the filesystem:
WITHOUT_CLASSIFICATION	// spare scanning again and again
WITHOUT_CLASSIFICATION	/* cached DirectoryScanner instance for our own Project only */
WITHOUT_CLASSIFICATION	// SelectorContainer methods
WITHOUT_CLASSIFICATION	// WIN9x uses a bat file for executing commands
WITHOUT_CLASSIFICATION	// empty path return empty string
WITHOUT_CLASSIFICATION	//no command? no string
WITHOUT_CLASSIFICATION	// parse with a simple finite state machine
WITHOUT_CLASSIFICATION	//inherit doc
WITHOUT_CLASSIFICATION	//can't have zero-length token
WITHOUT_CLASSIFICATION	// we have another token, let's parse it.
WITHOUT_CLASSIFICATION	// should always be the case...
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */
WITHOUT_CLASSIFICATION	// ignore: don't trust anyone
WITHOUT_CLASSIFICATION	// last: don't trust the developer
WITHOUT_CLASSIFICATION	// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.
WITHOUT_CLASSIFICATION	// JDK 1.2+ seems to set java.home to the JRE directory.
WITHOUT_CLASSIFICATION	// Just keep the old version as well and let addExisting // sort it out.
WITHOUT_CLASSIFICATION	// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.
WITHOUT_CLASSIFICATION	// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.
WITHOUT_CLASSIFICATION	// Added for MacOS X
WITHOUT_CLASSIFICATION	//remove any null elements
WITHOUT_CLASSIFICATION	//create the list
WITHOUT_CLASSIFICATION	//fill it
WITHOUT_CLASSIFICATION	//convert to an array
WITHOUT_CLASSIFICATION	// properties are part of the vm options...
WITHOUT_CLASSIFICATION	//boot classpath
WITHOUT_CLASSIFICATION	//main classpath
WITHOUT_CLASSIFICATION	//now any assertions are added
WITHOUT_CLASSIFICATION	// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.
WITHOUT_CLASSIFICATION	// cloned system properties
WITHOUT_CLASSIFICATION	// classpath is "-classpath <classpath>" -> 2 args
WITHOUT_CLASSIFICATION	// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg
WITHOUT_CLASSIFICATION	// jar execution requires an additional -jar option
WITHOUT_CLASSIFICATION	/*<? extends EnumeratedAttribute>*/
WITHOUT_CLASSIFICATION	//end nested class
WITHOUT_CLASSIFICATION	// Add this PropertySet's nested PropertySets' property names.
WITHOUT_CLASSIFICATION	//make a copy...
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Gotta atleast put in the proper spelling :-P
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// If this TransformOperation has DrawOperation children // then Rotate the first child and return.
WITHOUT_CLASSIFICATION	// If this TransformOperation has DrawOperation children // then Rotate the first child and return.
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	// change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	//-- Fields ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	//-- Methods ---------------------------------------------------------------
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF
WITHOUT_CLASSIFICATION	// may be null if a system property has been added // after the project instance has been initialized
WITHOUT_CLASSIFICATION	// Add this PropertySet's property names.
WITHOUT_CLASSIFICATION	//map the names
WITHOUT_CLASSIFICATION	// Create one NameEntry in the appropriate pattern list for each // line in the file.
WITHOUT_CLASSIFICATION	// Get a FileReader
WITHOUT_CLASSIFICATION	//Ignore exception
WITHOUT_CLASSIFICATION	//-- ResourceLocation
WITHOUT_CLASSIFICATION	// Add base set of permissions
WITHOUT_CLASSIFICATION	/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */
WITHOUT_CLASSIFICATION	// None of the actions revoked, so all allowed.
WITHOUT_CLASSIFICATION	//default true:
WITHOUT_CLASSIFICATION	//default false:
WITHOUT_CLASSIFICATION	//default false:
WITHOUT_CLASSIFICATION	// The regular expression factory
WITHOUT_CLASSIFICATION	// temporary variable
WITHOUT_CLASSIFICATION	// This is included
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//- ApacheCatalog
WITHOUT_CLASSIFICATION	// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //
WITHOUT_CLASSIFICATION	// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //
WITHOUT_CLASSIFICATION	// debug // CatalogManager.getStaticManager().setVerbosity(4);
WITHOUT_CLASSIFICATION	// Pass in reference to ourselves so we can be called back.
WITHOUT_CLASSIFICATION	//-- ApacheCatalogResolver
WITHOUT_CLASSIFICATION	//sorted bag impl. borrowed from commons-collections TreeBag:
WITHOUT_CLASSIFICATION	/* now check each Resource in case the child only           lets through files from any children IT may have: */
WITHOUT_CLASSIFICATION	//?
WITHOUT_CLASSIFICATION	//not using the accessor in this case to avoid side effects
WITHOUT_CLASSIFICATION	/*package-private*/
WITHOUT_CLASSIFICATION	//new oata.util.ReaderInputStream(new InputStreamReader(
WITHOUT_CLASSIFICATION	//, encoding), encoding);
WITHOUT_CLASSIFICATION	//first the easy way, if all children are filesystem-only, return true:
WITHOUT_CLASSIFICATION	//preserve order-encountered using a list; enforce set logic manually:
WITHOUT_CLASSIFICATION	/* cached DirectoryScanner instance */
WITHOUT_CLASSIFICATION	//if no nested, natural order:
WITHOUT_CLASSIFICATION	//dummy
WITHOUT_CLASSIFICATION	//implement ResourceSelector; inherit doc
WITHOUT_CLASSIFICATION	// First, check that all elements are correctly configured
WITHOUT_CLASSIFICATION	//if either of them is missing, they are different
WITHOUT_CLASSIFICATION	// different size =>different files
WITHOUT_CLASSIFICATION	//same date if dest timestamp is within granularity of the srcfile
WITHOUT_CLASSIFICATION	// different dates => different files
WITHOUT_CLASSIFICATION	//here do a bulk comparison
WITHOUT_CLASSIFICATION	// At this point, we know we have a tie.
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// If you felt daring, you could cache the basedir absolute path
WITHOUT_CLASSIFICATION	// Sanity check. Ditch it if you want faster performance
WITHOUT_CLASSIFICATION	// Determine file whose out-of-dateness is to be checked
WITHOUT_CLASSIFICATION	// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering
WITHOUT_CLASSIFICATION	// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering
WITHOUT_CLASSIFICATION	// Sanity check
WITHOUT_CLASSIFICATION	// Sanity check
WITHOUT_CLASSIFICATION	// Determine file whose existence is to be checked
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */
WITHOUT_CLASSIFICATION	// Directory size never selected for
WITHOUT_CLASSIFICATION	/* You wish! */
WITHOUT_CLASSIFICATION	// check millis and only set it once.
WITHOUT_CLASSIFICATION	// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.
WITHOUT_CLASSIFICATION	// up to first '**'
WITHOUT_CLASSIFICATION	// up to first '**'
WITHOUT_CLASSIFICATION	// String is exhausted
WITHOUT_CLASSIFICATION	// String is exhausted
WITHOUT_CLASSIFICATION	// String is exhausted
WITHOUT_CLASSIFICATION	// String not exhausted, but pattern is. Failure.
WITHOUT_CLASSIFICATION	// String not exhausted, but pattern is. Failure.
WITHOUT_CLASSIFICATION	// up to last '**'
WITHOUT_CLASSIFICATION	// '**/**' situation, so skip one
WITHOUT_CLASSIFICATION	// No '*'s, so we make a shortcut
WITHOUT_CLASSIFICATION	// Pattern and string do not have the same size
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// String matches against pattern
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd
WITHOUT_CLASSIFICATION	// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Pattern contains only '*', which matches anything
WITHOUT_CLASSIFICATION	// Process characters before first star
WITHOUT_CLASSIFICATION	// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	// Process characters after last star
WITHOUT_CLASSIFICATION	// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.
WITHOUT_CLASSIFICATION	// Two stars next to each other, skip the first one.
WITHOUT_CLASSIFICATION	// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	/*++*/
WITHOUT_CLASSIFICATION	// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.
WITHOUT_CLASSIFICATION	// We know that dynselector must be non-null if no error message
WITHOUT_CLASSIFICATION	// Deal with if and unless properties first
WITHOUT_CLASSIFICATION	// -----  attributes  -----
WITHOUT_CLASSIFICATION	// ----- internal member variables -----
WITHOUT_CLASSIFICATION	// -----  constructors  -----
WITHOUT_CLASSIFICATION	// ----- configuration  -----
WITHOUT_CLASSIFICATION	// normal use inside Ant
WITHOUT_CLASSIFICATION	// set self as a BuildListener to delay cachefile saves
WITHOUT_CLASSIFICATION	// no reference to project - e.g. during normal JUnit tests
WITHOUT_CLASSIFICATION	// this is a *.* parameter for later use
WITHOUT_CLASSIFICATION	// specify the algorithm classname
WITHOUT_CLASSIFICATION	// use Algorithm defined via name
WITHOUT_CLASSIFICATION	// use Algorithm specified by classname
WITHOUT_CLASSIFICATION	// nothing specified - use default
WITHOUT_CLASSIFICATION	// else nothing to do
WITHOUT_CLASSIFICATION	// use Algorithm defined via name
WITHOUT_CLASSIFICATION	// // -----  Set the main attributes, pattern '*'  ----- //
WITHOUT_CLASSIFICATION	// use Algorithm specified by classname
WITHOUT_CLASSIFICATION	// nothing specified - use default
WITHOUT_CLASSIFICATION	// specify the cache classname
WITHOUT_CLASSIFICATION	// use Cache defined via name
WITHOUT_CLASSIFICATION	// use Cache specified by classname
WITHOUT_CLASSIFICATION	// specify the comparator classname
WITHOUT_CLASSIFICATION	// // -----  Set the special attributes, pattern '*.*'  ----- //
WITHOUT_CLASSIFICATION	// load the specified class
WITHOUT_CLASSIFICATION	// -----  the selection work  -----
WITHOUT_CLASSIFICATION	// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.
WITHOUT_CLASSIFICATION	// You can not compute a value for a directory
WITHOUT_CLASSIFICATION	// Get the values and do the comparison
WITHOUT_CLASSIFICATION	// Maybe update the cache
WITHOUT_CLASSIFICATION	// -----  attribute and nested element support  -----
WITHOUT_CLASSIFICATION	// the usual classloader
WITHOUT_CLASSIFICATION	// additional use the provided classpath
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// ----- 'beautiful' output -----
WITHOUT_CLASSIFICATION	// ----- BuildListener interface methods -----
WITHOUT_CLASSIFICATION	// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.
WITHOUT_CLASSIFICATION	// -----  member variables  -----
WITHOUT_CLASSIFICATION	// -----  member variables  -----
WITHOUT_CLASSIFICATION	// -----  Algorithm-Configuration  -----
WITHOUT_CLASSIFICATION	// -----  Algorithm-Configuration  -----
WITHOUT_CLASSIFICATION	// -----  Logic  -----
WITHOUT_CLASSIFICATION	// -----  Logic  -----
WITHOUT_CLASSIFICATION	// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint
WITHOUT_CLASSIFICATION	// Read the file
WITHOUT_CLASSIFICATION	// -----  member variables - configuration  -----
WITHOUT_CLASSIFICATION	// -----  member variables - internal use  -----
WITHOUT_CLASSIFICATION	// -----  Constructors  -----
WITHOUT_CLASSIFICATION	// -----  Cache-Configuration  -----
WITHOUT_CLASSIFICATION	// -----  Data Access
WITHOUT_CLASSIFICATION	// after loading the cache is up to date with the file
WITHOUT_CLASSIFICATION	// -----  additional  -----
WITHOUT_CLASSIFICATION	// swallow as this simply doesn't seem to be Kaffe
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// find the line breaks and pass other chars through in blocks
WITHOUT_CLASSIFICATION	// either end of buffer or a line separator char
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.
WITHOUT_CLASSIFICATION	// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.
WITHOUT_CLASSIFICATION	//log uptodateness of all targets:
WITHOUT_CLASSIFICATION	// CheckStyle:ParameterNumberCheck OFF - bc
WITHOUT_CLASSIFICATION	// this should not happen, because the lines are // returned with the end of line delimiter
WITHOUT_CLASSIFICATION	// CheckStyle:ParameterNumberCheck ON
WITHOUT_CLASSIFICATION	// two not existing files are equal
WITHOUT_CLASSIFICATION	// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?
WITHOUT_CLASSIFICATION	// don't want to compare directory contents for now
WITHOUT_CLASSIFICATION	//as far as we know
WITHOUT_CLASSIFICATION	//ignore release of an already-closed funnel
WITHOUT_CLASSIFICATION	// Write child elements and text
WITHOUT_CLASSIFICATION	// Write indent characters
WITHOUT_CLASSIFICATION	// Write element
WITHOUT_CLASSIFICATION	// steal default namespace
WITHOUT_CLASSIFICATION	// Write attributes
WITHOUT_CLASSIFICATION	// Write element close
WITHOUT_CLASSIFICATION	// relative path
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try
WITHOUT_CLASSIFICATION	// swallow as we've hit the max class version that // we have
WITHOUT_CLASSIFICATION	// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>
WITHOUT_CLASSIFICATION	// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.
WITHOUT_CLASSIFICATION	// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.
WITHOUT_CLASSIFICATION	// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.
WITHOUT_CLASSIFICATION	// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's
WITHOUT_CLASSIFICATION	// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.
WITHOUT_CLASSIFICATION	//In Java1.5, the apache stuff moved.
WITHOUT_CLASSIFICATION	//fall through.
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// are there any here that we forgot? // fall through
WITHOUT_CLASSIFICATION	//things like sun.reflection, sun.misc, sun.net
WITHOUT_CLASSIFICATION	//things like sun.reflection, sun.misc, sun.net
WITHOUT_CLASSIFICATION	//Strip '.' token
WITHOUT_CLASSIFICATION	//If it ended in a dot, throw an exception
WITHOUT_CLASSIFICATION	// Exact match
WITHOUT_CLASSIFICATION	// Exact match
WITHOUT_CLASSIFICATION	// Exact match
WITHOUT_CLASSIFICATION	// might read too much
WITHOUT_CLASSIFICATION	// would be imprecise
WITHOUT_CLASSIFICATION	//last character isn't a digit
WITHOUT_CLASSIFICATION	// write out the number of characters encoded in this line.
WITHOUT_CLASSIFICATION	// set the padding defaults
WITHOUT_CLASSIFICATION	// get the next 3 bytes (if we have them)
WITHOUT_CLASSIFICATION	// OK, Java 1.3.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// #8031: first try Java 1.4.
WITHOUT_CLASSIFICATION	// Reflection problems? Should not happen, debug.
WITHOUT_CLASSIFICATION	// CheckStyle:ParameterNumberCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ParameterNumberCheck ON
WITHOUT_CLASSIFICATION	// depending on the implementation the actual RE won't // get instantiated in the constructor.
WITHOUT_CLASSIFICATION	// terminate with a linefeed alone
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63
WITHOUT_CLASSIFICATION	// store the octets
WITHOUT_CLASSIFICATION	// store the octets
WITHOUT_CLASSIFICATION	// store the octets
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// magic property
WITHOUT_CLASSIFICATION	//only text nodes that are non null after property expansion are added
WITHOUT_CLASSIFICATION	//no need to synchronize, as Vector is always synchronized
WITHOUT_CLASSIFICATION	// do not close the stream
WITHOUT_CLASSIFICATION	//Empty
WITHOUT_CLASSIFICATION	//Empty
WITHOUT_CLASSIFICATION	//get some non-crypto-grade randomness from various places.
WITHOUT_CLASSIFICATION	// Cannot resolve it, so skip it.
WITHOUT_CLASSIFICATION	// plain component
WITHOUT_CLASSIFICATION	// make sure we are dealing with an absolute path
WITHOUT_CLASSIFICATION	//remove the initial separator; the root has it.
WITHOUT_CLASSIFICATION	// UNC drive
WITHOUT_CLASSIFICATION	// format: "DEVICE:[DIR.SUBDIR]FILE"
WITHOUT_CLASSIFICATION	// treat directories specified using .DIR syntax as files
WITHOUT_CLASSIFICATION	// add an extra slash for filesystems with drive-specifiers
WITHOUT_CLASSIFICATION	//do a check for the destination file existing
WITHOUT_CLASSIFICATION	// execute the script
WITHOUT_CLASSIFICATION	// do nothing by default
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	// now recover all the dependencies collected and add to the list.
WITHOUT_CLASSIFICATION	//inherit doc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	// do not close the stream
WITHOUT_CLASSIFICATION	// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...
WITHOUT_CLASSIFICATION	// not before the filesystem root and not after it, since root // already contains one
WITHOUT_CLASSIFICATION	// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar
WITHOUT_CLASSIFICATION	// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar
WITHOUT_CLASSIFICATION	// build the path stack info to compare
WITHOUT_CLASSIFICATION	// not the same device (would be "" on Linux/Unix)
WITHOUT_CLASSIFICATION	// no comparison possible
WITHOUT_CLASSIFICATION	// get index of parts which are equal
WITHOUT_CLASSIFICATION	// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths
WITHOUT_CLASSIFICATION	// fill it up path with parts which were not equal
WITHOUT_CLASSIFICATION	// can safely use '/' because Windows understands '/' as separator
WITHOUT_CLASSIFICATION	// base directory of the fileset
WITHOUT_CLASSIFICATION	// build the list of sources which are out of date with // respect to the target
WITHOUT_CLASSIFICATION	// code from Magesh moved from DefaultLogger and slightly modified
WITHOUT_CLASSIFICATION	//if you cannot read it, you won't be able to write it either
WITHOUT_CLASSIFICATION	// must be a zip of some sort
WITHOUT_CLASSIFICATION	// does the class have a package structure
WITHOUT_CLASSIFICATION	// check if the package structure is more than 1 level deep
WITHOUT_CLASSIFICATION	// class name has more than 1 package level 'com.company.Class'
WITHOUT_CLASSIFICATION	// class name has only 1 package level 'package.Class'
WITHOUT_CLASSIFICATION	// Add the class in dotted notation 'com.company.Class'
WITHOUT_CLASSIFICATION	// Add a class with no package 'Class'
WITHOUT_CLASSIFICATION	// force BCEL classes to load now
WITHOUT_CLASSIFICATION	// force BCEL classes to load now
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	// we get the root classes and build up a set of // classes upon which they depend
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// execute the script
WITHOUT_CLASSIFICATION	//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.
WITHOUT_CLASSIFICATION	// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry
WITHOUT_CLASSIFICATION	// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free
WITHOUT_CLASSIFICATION	// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class
WITHOUT_CLASSIFICATION	// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.
WITHOUT_CLASSIFICATION	// execute the script
WITHOUT_CLASSIFICATION	// translate \1 to $1 so that the Perl5Substitution will work
WITHOUT_CLASSIFICATION	// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible
WITHOUT_CLASSIFICATION	// no permission here
WITHOUT_CLASSIFICATION	// compute the compiler options based on the input options first
WITHOUT_CLASSIFICATION	// treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	// be strict about line separator
WITHOUT_CLASSIFICATION	// translate \1 to $(1) so that the Matcher will work
WITHOUT_CLASSIFICATION	// Do the substitution
WITHOUT_CLASSIFICATION	// replace \1 with the corresponding group
WITHOUT_CLASSIFICATION	/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */
WITHOUT_CLASSIFICATION	/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */
WITHOUT_CLASSIFICATION	/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */
WITHOUT_CLASSIFICATION	//        blockNo++;
WITHOUT_CLASSIFICATION	// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //
WITHOUT_CLASSIFICATION	/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */
WITHOUT_CLASSIFICATION	//        ch = 0;
WITHOUT_CLASSIFICATION	/* 20 is just a paranoia constant */
WITHOUT_CLASSIFICATION	// empty block at end of file
WITHOUT_CLASSIFICATION	/* sort the block and establish posn of original string */
WITHOUT_CLASSIFICATION	/* Now the block's CRC, so it is in a known place. */
WITHOUT_CLASSIFICATION	/* Now a single bit indicating randomisation. */
WITHOUT_CLASSIFICATION	/* Finally, block's contents proper. */
WITHOUT_CLASSIFICATION	/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	/* Decide how many coding tables to use */
WITHOUT_CLASSIFICATION	/* Generate an initial set of coding tables */
WITHOUT_CLASSIFICATION	/*          Iterate up to N_ITERS times to improve the tables.        */
WITHOUT_CLASSIFICATION	/* Compute MTF values for the selectors. */
WITHOUT_CLASSIFICATION	/* Assign actual codes for the tables. */
WITHOUT_CLASSIFICATION	/* Transmit the mapping table. */
WITHOUT_CLASSIFICATION	/* Now the selectors. */
WITHOUT_CLASSIFICATION	/* Now the coding tables. */
WITHOUT_CLASSIFICATION	/* And finally, the block data proper */
WITHOUT_CLASSIFICATION	/* Set group start & end marks. */
WITHOUT_CLASSIFICATION	/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */
WITHOUT_CLASSIFICATION	// unrolled version of the else-block
WITHOUT_CLASSIFICATION	/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */
WITHOUT_CLASSIFICATION	/*                  Increment the symbol frequencies for the selected table.                */
WITHOUT_CLASSIFICATION	/*              Recompute the tables based on the accumulated frequencies.            */
WITHOUT_CLASSIFICATION	// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);
WITHOUT_CLASSIFICATION	// inlined: bsW(1, 1);
WITHOUT_CLASSIFICATION	// inlined: bsW(1, 0);
WITHOUT_CLASSIFICATION	// inlined: bsW(1, 0);
WITHOUT_CLASSIFICATION	//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);
WITHOUT_CLASSIFICATION	// inlined: bsW(5, curr);
WITHOUT_CLASSIFICATION	// inlined: bsW(2, 2);
WITHOUT_CLASSIFICATION	/* 10 */
WITHOUT_CLASSIFICATION	// inlined: bsW(2, 3);
WITHOUT_CLASSIFICATION	/* 11 */
WITHOUT_CLASSIFICATION	// copy
WITHOUT_CLASSIFICATION	// start inline mainGTU
WITHOUT_CLASSIFICATION	// following could be done in a loop, but // unrolled it for performance:
WITHOUT_CLASSIFICATION	// while x > 0
WITHOUT_CLASSIFICATION	// Set up the 2-byte frequency table
WITHOUT_CLASSIFICATION	/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */
WITHOUT_CLASSIFICATION	// Complete the initial radix sort:
WITHOUT_CLASSIFICATION	/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */
WITHOUT_CLASSIFICATION	/*              The main sorting loop.        */
WITHOUT_CLASSIFICATION	/*                  Process big buckets, starting with the least full.            */
WITHOUT_CLASSIFICATION	// Step 1:
WITHOUT_CLASSIFICATION	// Step 3:
WITHOUT_CLASSIFICATION	// handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	// make maps
WITHOUT_CLASSIFICATION	/* directory with respect to       */
WITHOUT_CLASSIFICATION	// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte
WITHOUT_CLASSIFICATION	//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte
WITHOUT_CLASSIFICATION	//    4000 byte //    4000 byte //    4000 byte
WITHOUT_CLASSIFICATION	//    1024 byte //    1024 byte //     256 byte
WITHOUT_CLASSIFICATION	//    1040 byte //    2064 byte //    2064 byte
WITHOUT_CLASSIFICATION	//  262148 byte // ------------ //  333408 byte
WITHOUT_CLASSIFICATION	// Just print a message, like the previous versions of this class did
WITHOUT_CLASSIFICATION	// Variables used by setup* methods exclusively
WITHOUT_CLASSIFICATION	// currBlockNo++;
WITHOUT_CLASSIFICATION	// A bad CRC is considered a fatal error.
WITHOUT_CLASSIFICATION	/* Receive the mapping table */
WITHOUT_CLASSIFICATION	/* Now the selectors */
WITHOUT_CLASSIFICATION	/* Undo the MTF values for the selectors. */
WITHOUT_CLASSIFICATION	// nearly all times v is zero, 4 in most other cases
WITHOUT_CLASSIFICATION	/* Now the coding tables */
WITHOUT_CLASSIFICATION	// finally create the Huffman tables
WITHOUT_CLASSIFICATION	// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'
WITHOUT_CLASSIFICATION	// Inlined: // int zvec = bsR(zn);
WITHOUT_CLASSIFICATION	// Inlined: // int zvec = bsR(zn);
WITHOUT_CLASSIFICATION	/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */
WITHOUT_CLASSIFICATION	/* not a char and not EOF */
WITHOUT_CLASSIFICATION	// (with blockSize 900k) //      256 byte
WITHOUT_CLASSIFICATION	//     1024 byte
WITHOUT_CLASSIFICATION	// No need to keep track of Bcc'd addresses
WITHOUT_CLASSIFICATION	// Blindly trust the user doesn't set any invalid headers
WITHOUT_CLASSIFICATION	// RFC 822 s4.1: "Reply-To:" header is optional
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.
WITHOUT_CLASSIFICATION	// support "address (name)"
WITHOUT_CLASSIFICATION	// support "(name) address"
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//      256 byte //    18002 byte //    18002 byte
WITHOUT_CLASSIFICATION	//     6192 byte //     6192 byte //     6192 byte //       24 byte
WITHOUT_CLASSIFICATION	//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte
WITHOUT_CLASSIFICATION	//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============
WITHOUT_CLASSIFICATION	// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA
WITHOUT_CLASSIFICATION	// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)
WITHOUT_CLASSIFICATION	// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)
WITHOUT_CLASSIFICATION	// * * * * * Raw protocol methods below here * * * * *
WITHOUT_CLASSIFICATION	// make sure dot is on new line
WITHOUT_CLASSIFICATION	// raw supports <CRLF>.<CRLF>
WITHOUT_CLASSIFICATION	// Check that the response is one of the valid codes
WITHOUT_CLASSIFICATION	// deprecated, but email is byte-oriented
WITHOUT_CLASSIFICATION	// ensure always \r\n
WITHOUT_CLASSIFICATION	// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.
WITHOUT_CLASSIFICATION	// add extra dot
WITHOUT_CLASSIFICATION	// add extra dot
WITHOUT_CLASSIFICATION	// ensure always \r\n
WITHOUT_CLASSIFICATION	// UNDONE
WITHOUT_CLASSIFICATION	// create a TarEntry for the LongLink, the contents // of which are the entry's name
WITHOUT_CLASSIFICATION	// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.
WITHOUT_CLASSIFICATION	/* start of the central directory  */
WITHOUT_CLASSIFICATION	// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //
WITHOUT_CLASSIFICATION	// read in the name
WITHOUT_CLASSIFICATION	// remove trailing null terminator
WITHOUT_CLASSIFICATION	// Unexpected EOF!
WITHOUT_CLASSIFICATION	// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------
WITHOUT_CLASSIFICATION	/* method is STORED and we used RandomAccessFile */
WITHOUT_CLASSIFICATION	// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes
WITHOUT_CLASSIFICATION	// not specified
WITHOUT_CLASSIFICATION	// not specified
WITHOUT_CLASSIFICATION	// Size/CRC not required if RandomAccessFile is used
WITHOUT_CLASSIFICATION	/*     * Various ZIP constants     */
WITHOUT_CLASSIFICATION	//store method in local variable to prevent multiple method calls
WITHOUT_CLASSIFICATION	// bit3 set to signal, we use a data descriptor
WITHOUT_CLASSIFICATION	// bit3 set to signal, we use a data descriptor
WITHOUT_CLASSIFICATION	// compression method
WITHOUT_CLASSIFICATION	// compression method
WITHOUT_CLASSIFICATION	// last mod. time and date
WITHOUT_CLASSIFICATION	// file name length
WITHOUT_CLASSIFICATION	// extra field length
WITHOUT_CLASSIFICATION	// file name
WITHOUT_CLASSIFICATION	// extra field
WITHOUT_CLASSIFICATION	// version made by
WITHOUT_CLASSIFICATION	// version needed to extract // general purpose bit flag
WITHOUT_CLASSIFICATION	// last mod. time and date
WITHOUT_CLASSIFICATION	// requires version 2 as we are going to store length info // in the data descriptor
WITHOUT_CLASSIFICATION	// file name length
WITHOUT_CLASSIFICATION	// CRC // compressed length // uncompressed length
WITHOUT_CLASSIFICATION	// extra field length
WITHOUT_CLASSIFICATION	// file name
WITHOUT_CLASSIFICATION	// extra field
WITHOUT_CLASSIFICATION	// file comment length
WITHOUT_CLASSIFICATION	// disk number start
WITHOUT_CLASSIFICATION	// internal file attributes
WITHOUT_CLASSIFICATION	// external file attributes
WITHOUT_CLASSIFICATION	// relative offset of LFH
WITHOUT_CLASSIFICATION	// disk numbers
WITHOUT_CLASSIFICATION	// number of entries
WITHOUT_CLASSIFICATION	// length and location of CD
WITHOUT_CLASSIFICATION	// ZIP file comment
WITHOUT_CLASSIFICATION	// array not exhausted
WITHOUT_CLASSIFICATION	/* version made by                 */
WITHOUT_CLASSIFICATION	/* version needed to extract       */
WITHOUT_CLASSIFICATION	/* general purpose bit flag        */
WITHOUT_CLASSIFICATION	/* compression method              */
WITHOUT_CLASSIFICATION	/* last mod file time              */
WITHOUT_CLASSIFICATION	/* last mod file date              */
WITHOUT_CLASSIFICATION	/* crc-32                          */
WITHOUT_CLASSIFICATION	/* uncompressed size               */
WITHOUT_CLASSIFICATION	/* filename length                 */
WITHOUT_CLASSIFICATION	/* extra field length              */
WITHOUT_CLASSIFICATION	/* file comment length             */
WITHOUT_CLASSIFICATION	/* internal file attributes        */
WITHOUT_CLASSIFICATION	/* external file attributes        */
WITHOUT_CLASSIFICATION	/* relative offset of local header */
WITHOUT_CLASSIFICATION	// disk number
WITHOUT_CLASSIFICATION	// LFH offset,
WITHOUT_CLASSIFICATION	// data offset will be filled later
WITHOUT_CLASSIFICATION	/* end of central dir signature    */
WITHOUT_CLASSIFICATION	/* number of this disk             */
WITHOUT_CLASSIFICATION	/* number of the disk with the     */
WITHOUT_CLASSIFICATION	/* start of the central directory  */
WITHOUT_CLASSIFICATION	/* the central dir on this disk    */
WITHOUT_CLASSIFICATION	/* the central dir                 */
WITHOUT_CLASSIFICATION	/* size of the central directory   */
WITHOUT_CLASSIFICATION	/* offset of start of central      */
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"
WITHOUT_CLASSIFICATION	// // *****  initialize test environment (called "bed")  ***** //
WITHOUT_CLASSIFICATION	// THIS WILL FAIL. //compareBytes("abc", "utf-16");
WITHOUT_CLASSIFICATION	//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now
WITHOUT_CLASSIFICATION	//if there were no main targets, we list all subtargets //as it means nothing has a description
WITHOUT_CLASSIFICATION	// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.
WITHOUT_CLASSIFICATION	// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.
WITHOUT_CLASSIFICATION	// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.
WITHOUT_CLASSIFICATION	// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons
WITHOUT_CLASSIFICATION	// If we've been successful on an update, delete the // temporary file
WITHOUT_CLASSIFICATION	// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\
WITHOUT_CLASSIFICATION	/* version needed to extract       */
WITHOUT_CLASSIFICATION	/* general purpose bit flag        */
WITHOUT_CLASSIFICATION	/* compression method              */
WITHOUT_CLASSIFICATION	/* last mod file time              */
WITHOUT_CLASSIFICATION	/* last mod file date              */
WITHOUT_CLASSIFICATION	/* crc-32                          */
WITHOUT_CLASSIFICATION	/* compressed size                 */
WITHOUT_CLASSIFICATION	/* uncompressed size               */
WITHOUT_CLASSIFICATION	/* end of central dir signature    */
WITHOUT_CLASSIFICATION	/* number of this disk             */
WITHOUT_CLASSIFICATION	/* number of the disk with the     */
WITHOUT_CLASSIFICATION	/* total number of entries in      */
WITHOUT_CLASSIFICATION	/* total number of entries in      */
WITHOUT_CLASSIFICATION	/* the central dir on this disk    */
WITHOUT_CLASSIFICATION	/* the central dir                 */
WITHOUT_CLASSIFICATION	/* size of the central directory   */
WITHOUT_CLASSIFICATION	/* the starting disk number        */
WITHOUT_CLASSIFICATION	/* zipfile comment length          */
WITHOUT_CLASSIFICATION	/* local file header signature     */
WITHOUT_CLASSIFICATION	/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */
WITHOUT_CLASSIFICATION	// CRC will be added later
WITHOUT_CLASSIFICATION	/*<ZipExtraField>*/
WITHOUT_CLASSIFICATION	// initializes extra data to an empty byte array
WITHOUT_CLASSIFICATION	// MS-DOS read-only attribute
WITHOUT_CLASSIFICATION	// MS-DOS directory flag
WITHOUT_CLASSIFICATION	// A "location" attribute for a node within a // Path object.
WITHOUT_CLASSIFICATION	// Just use the same directory as the file itself. // This directory will exist
WITHOUT_CLASSIFICATION	// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.
WITHOUT_CLASSIFICATION	// // Static //
WITHOUT_CLASSIFICATION	//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...
WITHOUT_CLASSIFICATION	// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory
WITHOUT_CLASSIFICATION	// add dest dir to classpath so that previously compiled and // untouched classes are on classpath
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	// push the current iterator onto the stack and then // iterate through this directory.
WITHOUT_CLASSIFICATION	// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor
WITHOUT_CLASSIFICATION	// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].
WITHOUT_CLASSIFICATION	// Loop through the files seeing if any has been touched // more recently than the destination jar.
WITHOUT_CLASSIFICATION	// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file
WITHOUT_CLASSIFICATION	//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)
WITHOUT_CLASSIFICATION	// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"
WITHOUT_CLASSIFICATION	// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc
WITHOUT_CLASSIFICATION	//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup
WITHOUT_CLASSIFICATION	// If this TransformOperation has DrawOperation children // then Rotate the first child and return.
WITHOUT_CLASSIFICATION	// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task
WITHOUT_CLASSIFICATION	// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //
WITHOUT_CLASSIFICATION	// CRC // compressed length // uncompressed length
WITHOUT_CLASSIFICATION	// No further methods necessary. This is just an amalgamation of two other // interfaces.
WITHOUT_CLASSIFICATION	// // -----  The "Singleton"  ----- //
WITHOUT_CLASSIFICATION	// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent
WITHOUT_CLASSIFICATION	// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore
WITHOUT_CLASSIFICATION	// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');
WITHOUT_CLASSIFICATION	// CRC // Mode // SizDev // UID // GID
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.
WITHOUT_CLASSIFICATION	// now wait until the spawned process is finished
WITHOUT_CLASSIFICATION	// file doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	// we don't expect to find this
WITHOUT_CLASSIFICATION	// we don't expect to find this
WITHOUT_CLASSIFICATION	// ignore expected
WITHOUT_CLASSIFICATION	// keep track of what operating systems are supported here.
WITHOUT_CLASSIFICATION	// if we followed the symlink we just made we should // bypass the excludes.
WITHOUT_CLASSIFICATION	// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.
WITHOUT_CLASSIFICATION	/*             * throw in drive letters             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	// avoid multiple configurations
WITHOUT_CLASSIFICATION	// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------
WITHOUT_CLASSIFICATION	// make sure the cache is cleared.
WITHOUT_CLASSIFICATION	//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya
WITHOUT_CLASSIFICATION	// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------
WITHOUT_CLASSIFICATION	// All three specified and all three exist -> true
WITHOUT_CLASSIFICATION	// Specified class is "" -> can not exist
WITHOUT_CLASSIFICATION	// Core class that exists in system classpath is ignored, but found in specified classpath
WITHOUT_CLASSIFICATION	// File is not found in specified filepath
WITHOUT_CLASSIFICATION	//ignored
WITHOUT_CLASSIFICATION	// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory
WITHOUT_CLASSIFICATION	// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.
WITHOUT_CLASSIFICATION	//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");
WITHOUT_CLASSIFICATION	// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.
WITHOUT_CLASSIFICATION	// testNoCrash is the test invoked by the captureToSummary's junit task
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// We have extra elements
WITHOUT_CLASSIFICATION	// Set up a VSSHistory task
WITHOUT_CLASSIFICATION	// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise
WITHOUT_CLASSIFICATION	//check that dir and src are incompatible
WITHOUT_CLASSIFICATION	// ================  testcases for the cache implementations  ================
WITHOUT_CLASSIFICATION	// does the selection
WITHOUT_CLASSIFICATION	// ==============  testcases for the algorithm implementations  ==============
WITHOUT_CLASSIFICATION	// =====================  scenario tests  =====================
WITHOUT_CLASSIFICATION	// info text // list of files // expected result // result
WITHOUT_CLASSIFICATION	//  =====================  helper methods and classes  ====================
WITHOUT_CLASSIFICATION	// should be full moon
WITHOUT_CLASSIFICATION	// Try a silly case
WITHOUT_CLASSIFICATION	// java.home is bogus
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	// order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// boolean and Boolean get special treatment because we // have a nice method in Project
WITHOUT_CLASSIFICATION	// find the line breaks and pass other chars through in blocks
WITHOUT_CLASSIFICATION	// DataType can have a "no arg" constructor or take a single // Project argument.
WITHOUT_CLASSIFICATION	// all the names are the same: check if the class path of the loader // is the same
WITHOUT_CLASSIFICATION	/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */
WITHOUT_CLASSIFICATION	// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.
WITHOUT_CLASSIFICATION	// put back the original security manager //The following will never eval to true. (PD)
WITHOUT_CLASSIFICATION	// ignore path elements which are invalid // relative to the project
WITHOUT_CLASSIFICATION	// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// don't have to check for public, since // getConstructor finds public constructors only.
WITHOUT_CLASSIFICATION	//not a known type
WITHOUT_CLASSIFICATION	// Initialize the globalFileSet's project
WITHOUT_CLASSIFICATION	// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire
WITHOUT_CLASSIFICATION	// first build exception
WITHOUT_CLASSIFICATION	// Not been visited
WITHOUT_CLASSIFICATION	// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)
WITHOUT_CLASSIFICATION	/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).
WITHOUT_CLASSIFICATION	// check to what is in the classname
WITHOUT_CLASSIFICATION	//not included, do nothing
WITHOUT_CLASSIFICATION	//not included, do nothing
WITHOUT_CLASSIFICATION	// Attributes
WITHOUT_CLASSIFICATION	// make sure we aren't going to get the path separator next
WITHOUT_CLASSIFICATION	// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.
WITHOUT_CLASSIFICATION	// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.
WITHOUT_CLASSIFICATION	// Mac
WITHOUT_CLASSIFICATION	// set in/excludes to reasonable defaults if needed:
WITHOUT_CLASSIFICATION	// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.
WITHOUT_CLASSIFICATION	// avoid double scanning of directories, can only happen in fast mode
WITHOUT_CLASSIFICATION	// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);
WITHOUT_CLASSIFICATION	// if at EOF with no characters in the buffer, return EOF
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Works like clone() but doesn't show up in the Javadocs
WITHOUT_CLASSIFICATION	// ----------------------------------------- //  Predefined filters // -----------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------- // //      Filter classes // // --------------------------------------------
WITHOUT_CLASSIFICATION	// Execute the top-level target
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.
WITHOUT_CLASSIFICATION	//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle
WITHOUT_CLASSIFICATION	// convert the replyTo string into a vector of emailaddresses
WITHOUT_CLASSIFICATION	// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;
WITHOUT_CLASSIFICATION	// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.
WITHOUT_CLASSIFICATION	// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return
WITHOUT_CLASSIFICATION	// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	// use to scan own archive
WITHOUT_CLASSIFICATION	// collect filesets to pass them to getResourcesToAdd
WITHOUT_CLASSIFICATION	// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.
WITHOUT_CLASSIFICATION	/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */
WITHOUT_CLASSIFICATION	// ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */
WITHOUT_CLASSIFICATION	// may be altered in validate
WITHOUT_CLASSIFICATION	//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths
WITHOUT_CLASSIFICATION	//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)
WITHOUT_CLASSIFICATION	// Error messages
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.
WITHOUT_CLASSIFICATION	// An arbitrary attribute.
WITHOUT_CLASSIFICATION	// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.
WITHOUT_CLASSIFICATION	// Fall Through
WITHOUT_CLASSIFICATION	// Fall Through
WITHOUT_CLASSIFICATION	// Ignore the problem
WITHOUT_CLASSIFICATION	// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same
WITHOUT_CLASSIFICATION	// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator
WITHOUT_CLASSIFICATION	// END static class TemplateElement
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS
WITHOUT_CLASSIFICATION	//value and property are mutually exclusive attributes
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);
WITHOUT_CLASSIFICATION	// Create the directory, as it might not exist.
WITHOUT_CLASSIFICATION	// Calculate the total checksum // Convert the keys (source files) into a sorted array.
WITHOUT_CLASSIFICATION	// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization
WITHOUT_CLASSIFICATION	// We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	// We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */
WITHOUT_CLASSIFICATION	// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.
WITHOUT_CLASSIFICATION	// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump
WITHOUT_CLASSIFICATION	// preserve permissions
WITHOUT_CLASSIFICATION	// override permissions if set explicitly
WITHOUT_CLASSIFICATION	// Check if we can contact the URL
WITHOUT_CLASSIFICATION	// // Instance //
WITHOUT_CLASSIFICATION	//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name
WITHOUT_CLASSIFICATION	// Similar to a fileset, but doesn't allow dir attribute to be set
WITHOUT_CLASSIFICATION	// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted
WITHOUT_CLASSIFICATION	//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.
WITHOUT_CLASSIFICATION	// Do nothing if no resources (including nested text)
WITHOUT_CLASSIFICATION	// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments
WITHOUT_CLASSIFICATION	// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.
WITHOUT_CLASSIFICATION	// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */
WITHOUT_CLASSIFICATION	//at this point there is one trailing space to remove, if the list is not empty.
WITHOUT_CLASSIFICATION	// Ignore and keep trying
WITHOUT_CLASSIFICATION	// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).
WITHOUT_CLASSIFICATION	// Since we "look ahead" before adding, there's one last env var.
WITHOUT_CLASSIFICATION	//noop default encoding used
WITHOUT_CLASSIFICATION	// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment
WITHOUT_CLASSIFICATION	// Locate the auxiliary script
WITHOUT_CLASSIFICATION	// Build the command
WITHOUT_CLASSIFICATION	/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */
WITHOUT_CLASSIFICATION	//************************************************************************ //  protected and private methods //************************************************************************
WITHOUT_CLASSIFICATION	// ensure that parent dir of dest file exists!
WITHOUT_CLASSIFICATION	// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.
WITHOUT_CLASSIFICATION	// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements
WITHOUT_CLASSIFICATION	// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */
WITHOUT_CLASSIFICATION	//hand down
WITHOUT_CLASSIFICATION	// create intermediary directories - sometimes zip don't add them
WITHOUT_CLASSIFICATION	// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it
WITHOUT_CLASSIFICATION	/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */
WITHOUT_CLASSIFICATION	/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */
WITHOUT_CLASSIFICATION	//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.
WITHOUT_CLASSIFICATION	// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// classpath attributes go into a vector
WITHOUT_CLASSIFICATION	// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest
WITHOUT_CLASSIFICATION	//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't
WITHOUT_CLASSIFICATION	// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.
WITHOUT_CLASSIFICATION	// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed
WITHOUT_CLASSIFICATION	// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.
WITHOUT_CLASSIFICATION	// Create an instance of the compiler, redirecting output to // the project log
WITHOUT_CLASSIFICATION	// Setup the apt executable
WITHOUT_CLASSIFICATION	//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.
WITHOUT_CLASSIFICATION	//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// add dest dir to classpath so that previously compiled and // untouched classes are on classpath
WITHOUT_CLASSIFICATION	// add dest dir to classpath so that previously compiled and // untouched classes are on classpath
WITHOUT_CLASSIFICATION	// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.
WITHOUT_CLASSIFICATION	/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */
WITHOUT_CLASSIFICATION	// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!
WITHOUT_CLASSIFICATION	//The following is data used while processing stdout of CVS command
WITHOUT_CLASSIFICATION	// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// -branch
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream
WITHOUT_CLASSIFICATION	// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different
WITHOUT_CLASSIFICATION	// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility
WITHOUT_CLASSIFICATION	//error if both are empty, or both are set
WITHOUT_CLASSIFICATION	// hasCR is still true (for the second one)
WITHOUT_CLASSIFICATION	// should be the default, as it integrates better in ant.
WITHOUT_CLASSIFICATION	// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);
WITHOUT_CLASSIFICATION	// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation
WITHOUT_CLASSIFICATION	// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it
WITHOUT_CLASSIFICATION	/* ========================================================================    *    * Instance variables.    */
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// If only default is specified and the property previously // existed in the property file, it is unchanged.
WITHOUT_CLASSIFICATION	// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.
WITHOUT_CLASSIFICATION	// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.
WITHOUT_CLASSIFICATION	// build the command line from what we got the format // as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir and a label ...
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* -------------------- */
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// skip version info and general purpose byte
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir and a label ...
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	// we get the root classes and build up a set of // classes upon which they depend
WITHOUT_CLASSIFICATION	// read the constant pool in and resolve it
WITHOUT_CLASSIFICATION	/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */
WITHOUT_CLASSIFICATION	/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */
WITHOUT_CLASSIFICATION	// depFile exists and is newer than the class file // need to get dependency list from the map.
WITHOUT_CLASSIFICATION	// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.
WITHOUT_CLASSIFICATION	//always trigger file mode if commands are big enough
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix
WITHOUT_CLASSIFICATION	//now run the command of exe + settings + files
WITHOUT_CLASSIFICATION	/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */
WITHOUT_CLASSIFICATION	/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */
WITHOUT_CLASSIFICATION	/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */
WITHOUT_CLASSIFICATION	// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list
WITHOUT_CLASSIFICATION	/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */
WITHOUT_CLASSIFICATION	//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file
WITHOUT_CLASSIFICATION	// ejb jar file
WITHOUT_CLASSIFICATION	//client jar file
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)
WITHOUT_CLASSIFICATION	// class name (search in the classpath provided for the ejbjar element)
WITHOUT_CLASSIFICATION	// additionalargs
WITHOUT_CLASSIFICATION	// get all the files in the descriptor directory
WITHOUT_CLASSIFICATION	// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.
WITHOUT_CLASSIFICATION	// Since the descriptor read properly, everything should be o.k.
WITHOUT_CLASSIFICATION	// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!
WITHOUT_CLASSIFICATION	/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */
WITHOUT_CLASSIFICATION	// Get the filename of vendor specific descriptor
WITHOUT_CLASSIFICATION	// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.
WITHOUT_CLASSIFICATION	// Update with changed Bean class
WITHOUT_CLASSIFICATION	// need to close files and perhaps rename output
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.
WITHOUT_CLASSIFICATION	/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */
WITHOUT_CLASSIFICATION	//remove the .class
WITHOUT_CLASSIFICATION	// create the output .jar, if required
WITHOUT_CLASSIFICATION	// change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	// Available specification version must be >= required
WITHOUT_CLASSIFICATION	// Implementation version must be >= required
WITHOUT_CLASSIFICATION	//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)
WITHOUT_CLASSIFICATION	/*     * Validates URL     */
WITHOUT_CLASSIFICATION	// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop
WITHOUT_CLASSIFICATION	// iterator through all the files and process them.
WITHOUT_CLASSIFICATION	// keys to optional attributes
WITHOUT_CLASSIFICATION	// use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	// null watchdog means no timeout, you'd better not check with null
WITHOUT_CLASSIFICATION	/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */
WITHOUT_CLASSIFICATION	// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"
WITHOUT_CLASSIFICATION	// not necessary as JDepend would fail, but why loose // some time?
WITHOUT_CLASSIFICATION	// not necessary as JDepend would fail, but why loose // some time?
WITHOUT_CLASSIFICATION	// not necessary as JDepend would fail, but why loose // some time?
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.
WITHOUT_CLASSIFICATION	/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */
WITHOUT_CLASSIFICATION	// Quick return - no output do nothing.
WITHOUT_CLASSIFICATION	// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".
WITHOUT_CLASSIFICATION	//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.
WITHOUT_CLASSIFICATION	// ignored.
WITHOUT_CLASSIFICATION	/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */
WITHOUT_CLASSIFICATION	// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.
WITHOUT_CLASSIFICATION	// See wrapListener for reason:
WITHOUT_CLASSIFICATION	// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.
WITHOUT_CLASSIFICATION	// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.
WITHOUT_CLASSIFICATION	// sorted by newest Kaffe version first
WITHOUT_CLASSIFICATION	//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);
WITHOUT_CLASSIFICATION	// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves
WITHOUT_CLASSIFICATION	// ignore it
WITHOUT_CLASSIFICATION	// NumberFormatException or ArrayOutOfBondsException could happen here
WITHOUT_CLASSIFICATION	//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....
WITHOUT_CLASSIFICATION	// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone
WITHOUT_CLASSIFICATION	// Connect to the StarTeam server, and log on.
WITHOUT_CLASSIFICATION	// Simplest constructor, uses default encryption algorithm and compression level.
WITHOUT_CLASSIFICATION	// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.
WITHOUT_CLASSIFICATION	// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).
WITHOUT_CLASSIFICATION	// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.
WITHOUT_CLASSIFICATION	// If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	// Special setters for the sub-classes
WITHOUT_CLASSIFICATION	// Special setters for the sub-classes
WITHOUT_CLASSIFICATION	// Login info is required
WITHOUT_CLASSIFICATION	// Path to the SourceOffSite home directory /home/user/.sos
WITHOUT_CLASSIFICATION	// Check if source is a directory
WITHOUT_CLASSIFICATION	/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */
WITHOUT_CLASSIFICATION	// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc
WITHOUT_CLASSIFICATION	// only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	// only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	// since filesize keeps on decreasing we have to store the // initial filesize
WITHOUT_CLASSIFICATION	// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.
WITHOUT_CLASSIFICATION	// If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	// If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	// We try to update the status once to give StarTeam // another chance.
WITHOUT_CLASSIFICATION	// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.
WITHOUT_CLASSIFICATION	// once we find a folder that isn't in the repository, // anything below it can be deleted.
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// Not a .class file or the one we'd generate
WITHOUT_CLASSIFICATION	// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.
WITHOUT_CLASSIFICATION	// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //
WITHOUT_CLASSIFICATION	// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //
WITHOUT_CLASSIFICATION	// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //
WITHOUT_CLASSIFICATION	// record data about the last scanned resource
WITHOUT_CLASSIFICATION	// path containing one or more elements
WITHOUT_CLASSIFICATION	// just append beginToken and search further
WITHOUT_CLASSIFICATION	//create the command to run Java, including user specified options
WITHOUT_CLASSIFICATION	// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* now check each Resource in case the child only           lets through files from any children IT may have: */
WITHOUT_CLASSIFICATION	// Quick return: directories cannot be signed
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */
WITHOUT_CLASSIFICATION	// // -----  Set default values  ----- //
WITHOUT_CLASSIFICATION	// nothing specified - use default
WITHOUT_CLASSIFICATION	// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	//find the out-of-date targets:
WITHOUT_CLASSIFICATION	// write namespace declarations
WITHOUT_CLASSIFICATION	// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	//no need to synchronize, as Vector is always synchronized
WITHOUT_CLASSIFICATION	// Eliminate consecutive slashes after the drive spec:
WITHOUT_CLASSIFICATION	//if it does not, then the file is not up to date.
WITHOUT_CLASSIFICATION	// record destdir for later use in getResource
WITHOUT_CLASSIFICATION	// Check to see if it's an inner class 'com.company.Class$Inner'
WITHOUT_CLASSIFICATION	// treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	// treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);
WITHOUT_CLASSIFICATION	// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //
WITHOUT_CLASSIFICATION	// Following block contains unrolled code which could be shortened by // coding it in additional loops.
WITHOUT_CLASSIFICATION	/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */
WITHOUT_CLASSIFICATION	// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.
WITHOUT_CLASSIFICATION	//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============
WITHOUT_CLASSIFICATION	// The clean way would be to throw an exception. //throw new IOException("crc error");
WITHOUT_CLASSIFICATION	// make next blocks readable without error // (repair feature, not yet documented, not tested)
WITHOUT_CLASSIFICATION	/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */
WITHOUT_CLASSIFICATION	// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.
WITHOUT_CLASSIFICATION	// deprecated, but email is byte-oriented
WITHOUT_CLASSIFICATION	// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //
WITHOUT_CLASSIFICATION	// version needed to extract // general purpose bit flag
WITHOUT_CLASSIFICATION	// requires version 2 as we are going to store length info // in the data descriptor
WITHOUT_CLASSIFICATION	// file comment
WITHOUT_CLASSIFICATION	// swallow, throw the original exception instead
WITHOUT_CLASSIFICATION	/* compressed size                 */
WITHOUT_CLASSIFICATION	/* disk number start               */
WITHOUT_CLASSIFICATION	/* total number of entries in      */
WITHOUT_CLASSIFICATION	/* total number of entries in      */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
IMPLEMENTATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
IMPLEMENTATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
IMPLEMENTATION	// TODO support multiple signers
IMPLEMENTATION	// TODO: fetch this once as per vars above?
IMPLEMENTATION	// TODO: add and delete not currently supported // $NON-NLS-1$
IMPLEMENTATION	// Fix path to allow the use of UNC URLs
IMPLEMENTATION	/*         * Have we reached the reporting boundary?         * Need to allow for a margin of error, otherwise can miss the slot.         * Also need to check we've not hit the window already         */
IMPLEMENTATION	// TODO save hostname; save sample type (plain or http)
IMPLEMENTATION	// TODO Auto-generated constructor stub
IMPLEMENTATION	// REMIND: convert arg list Vectors here?
IMPLEMENTATION	// It is chunked transfer encoding, which we do not really support yet. // So we just read without blocking, because we do not know when to // stop reading, so we cannot block // TODO propery implement support for chunked transfer, i.e. to // know when we have read the whole request, and therefore allow // the reading to block
IMPLEMENTATION	// TODO somehow show progress
IMPLEMENTATION	// TODO ? perhaps note connection so it can be disconnected at end of test?
IMPLEMENTATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
IMPLEMENTATION	// TODO handle filenames
IMPLEMENTATION	// not yet handled
IMPLEMENTATION	// TODO - should check that error has been logged...
IMPLEMENTATION	// Set the overall status for the transaction sample // TODO: improve, e.g. by adding counts to the SampleResult class
IMPLEMENTATION	// TODO should this use setDone()? // TODO should this use setFirst()?
IMPLEMENTATION	// Should we exit at end of the test? (only applies to server, because host is non-null)
IMPLEMENTATION	// Don't allow override of Content-Length // TODO - what other headers are not allowed?
IMPLEMENTATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters // TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	//???
WITHOUT_CLASSIFICATION	/*     * Class to be used to create the Method.     * Will be non-null if either Class or Object was provided during construction.     *     *  Can be used instead of invokee, e.g. when using interfaces.    */
WITHOUT_CLASSIFICATION	// If invokee was provided, then clazz has been set up
WITHOUT_CLASSIFICATION	// Now eliminate any classpath entries that do not "match" the search
WITHOUT_CLASSIFICATION	/*     * Finds all classes that extend the classes in the listSuperClasses     * ArrayList, searching in the listAllClasses ArrayList.     *     * @param superClasses     *            the base classes to find subclasses for     * @param listAllClasses     *            the collection of classes to search in     * @param innerClasses     *            indicate whether to include inner classes in the search     * @return ArrayList of the subclasses     */
WITHOUT_CLASSIFICATION	/*     * Finds all classes that extend the class, searching in the listAllClasses     * ArrayList.     *     * @param theClass     *            the parent class     * @param listAllClasses     *            the collection of classes to search in     * @param listSubClasses     *            the collection of discovered subclasses     * @param innerClasses     *            indicates whether inners classes should be included in the     *            search     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// THREAD PROPERTIES
WITHOUT_CLASSIFICATION	// NUMBER OF THREADS
WITHOUT_CLASSIFICATION	// RAMP-UP
WITHOUT_CLASSIFICATION	// LOOP COUNT
WITHOUT_CLASSIFICATION	// mainPanel.add(threadPropsPanel, BorderLayout.NORTH); // add(mainPanel, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Sampler error action buttons
WITHOUT_CLASSIFICATION	// Defaults to continue
WITHOUT_CLASSIFICATION	/*     * ------------------------------------------------------------------------     * Fields     * ------------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Methods // -------------------------------------------
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*-------------------------------------------------------------------------     * Methods implemented from org.xml.sax.ContentHandler     *----------------------------------------------------------------------- */
WITHOUT_CLASSIFICATION	// An additional note on using HashSets to store URLs: I just // discovered that obtaining the hashCode of a java.net.URL implies // a domain-name resolution process. This means significant delays // can occur, even more so if the domain name is not resolvable. // Whether this can be a problem in practical situations I can't tell, // but // thought I'd keep a note just in case... // BTW, note that using a List and removing duplicates via scan // would not help, since URL.equals requires name resolution too. // The above problem has now been addressed with the URLString and // URLCollection classes.
WITHOUT_CLASSIFICATION	/*     * A dummy class to pass the pointer of URL.     */
WITHOUT_CLASSIFICATION	// Now parse the DOM tree
WITHOUT_CLASSIFICATION	// Clear maps
WITHOUT_CLASSIFICATION	// Defaults
WITHOUT_CLASSIFICATION	// If it was a HTTP GET request, then all parameters in the URL // has been handled by the sampler.setPath above, so we just need // to do parse the rest of the request if it is not a GET request
WITHOUT_CLASSIFICATION	// Check if it was a multipart http post request
WITHOUT_CLASSIFICATION	// Get the post data using the content encoding of the request
WITHOUT_CLASSIFICATION	// we start to iterate through the elements
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// synchronize with FixedQueueExecutor
WITHOUT_CLASSIFICATION	// JMSMessageID cannot be null
WITHOUT_CLASSIFICATION	//++ These are JMX file names and must not be changed //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+JMX file attribute names - do not change any values! // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This will only work with an Applet .class file. // Ideally, this should be upgraded to work with Objects (IE) // and archives (.jar and .zip) files as well.
WITHOUT_CLASSIFICATION	// Instantiate the sampler
WITHOUT_CLASSIFICATION	// OK, because find only returns correct element types
WITHOUT_CLASSIFICATION	// Property was found in a config element. Whether or not // it matched the value in the sampler, we're done with // this property -- don't look at lower-priority configs:
WITHOUT_CLASSIFICATION	// HashMap to save ssl connection between Jmeter proxy and browser
WITHOUT_CLASSIFICATION	// get the component parts // Assume domains must have at least 2 parts, e.g. apache.org // Don't try matching against *.org; however we don't check *.co.uk here
WITHOUT_CLASSIFICATION	// Check if we found an accept-charset attribute on the form
WITHOUT_CLASSIFICATION	/* The next line looks odd, but proxied HTTP requests look like:         * GET http://www.apache.org/foundation/ HTTP/1.1         * i.e. url starts with "http:", not "/"         * whereas HTTPS proxy requests look like:         * CONNECT www.google.co.uk:443 HTTP/1.1         * followed by         * GET /?gws_rd=cr HTTP/1.1         */
WITHOUT_CLASSIFICATION	/*         * A HTTP RESPONSE HEADER LOOKS ALOT LIKE:         *         * HTTP/1.0 200 OK Date: Wednesday, 02-Feb-94 23:04:12 GMT Server:         * NCSA/1.1 MIME-version: 1.0 Last-modified: Monday, 15-Nov-93 23:33:16         * GMT Content-Type: text/html Content-Length: 2345 \r\n         */
WITHOUT_CLASSIFICATION	// Count the retries as well in the time
WITHOUT_CLASSIFICATION	// for result
WITHOUT_CLASSIFICATION	// Make sure the sample start time and sample end time are recorded // in order not to confuse the statistics calculation methods: if //  an error occurs and an exception is thrown it is possible that // the result.sampleStart() or result.sampleEnd() won't be called
WITHOUT_CLASSIFICATION	// We've finished with the request, so we can add the LocalAddress to it for display
WITHOUT_CLASSIFICATION	// Handle the various methods
WITHOUT_CLASSIFICATION	// Set up the local address if one exists
WITHOUT_CLASSIFICATION	// a well-behaved browser is supposed to send 'Connection: close' // with the last request to an HTTP server. Instead, most browsers // leave it to the server to close the connection after their // timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	// encoding does not really matter here
WITHOUT_CLASSIFICATION	// Add any files // Cannot retrieve parts once added to the MultiPartEntity, so have to save them here.
WITHOUT_CLASSIFICATION	// We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	// In a post request which is not multipart, we only support // parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type // This is not obvious in GUI if you are not uploading any files, // but just sending the content of nameless parameters
WITHOUT_CLASSIFICATION	// We use the encoding which should be used according to the HTTP spec, which is UTF-8
WITHOUT_CLASSIFICATION	/*             * N.B. Revision 323346 introduced the ClassCast check, but then used iter.next()             * to fetch the item to be cast, thus skipping the element that did not cast.             * Reverted to work more like the original code, but with the check in place.             * Added a warning message so can track whether it is necessary             */
WITHOUT_CLASSIFICATION	// Don't break the world just because this failed:
WITHOUT_CLASSIFICATION	// if concurrent download emb. resources, add to a list for async gets later
WITHOUT_CLASSIFICATION	// Thread pool Executor to get resources  // use a LinkedBlockingQueue, note: max pool size doesn't effect
WITHOUT_CLASSIFICATION	// The following three can be discussed: should they be from the // first request or from the final one? I chose to do it this way // because that's what browsers do: they show the final URL of the // redirect chain in the location field.
WITHOUT_CLASSIFICATION	// Commons HttpClient only
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	// Check if target of merge is reasonable
WITHOUT_CLASSIFICATION	// We must ask the user if it is ok to close current project // i.e. it is OPEN
WITHOUT_CLASSIFICATION	// don't change name if merging
WITHOUT_CLASSIFICATION	// Allow for missing optional jars
WITHOUT_CLASSIFICATION	// Does not appear to be used externally; called by #loadProjectFile()
WITHOUT_CLASSIFICATION	// convertTree(tree);
WITHOUT_CLASSIFICATION	// If we are loading a new test plan, initialize the tree with the testplan node we are loading
WITHOUT_CLASSIFICATION	// These are handled specially by addToTree
WITHOUT_CLASSIFICATION	// Document doc = null;
WITHOUT_CLASSIFICATION	// write to file
WITHOUT_CLASSIFICATION	// Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	// Make the connection ready for sending post data
WITHOUT_CLASSIFICATION	/*     * @see org.apache.jmeter.gui.action.Command#getActionNames()     */
WITHOUT_CLASSIFICATION	// boolean toReturn = true;
WITHOUT_CLASSIFICATION	// don't automatically expand when merging
WITHOUT_CLASSIFICATION	//+JMX file attributes - do not change values! // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //-JMX file attributes
WITHOUT_CLASSIFICATION	// Called by JMeter#startGui()
WITHOUT_CLASSIFICATION	// no error as default
WITHOUT_CLASSIFICATION	// Helper method to simplify code
WITHOUT_CLASSIFICATION	// one builder for all requests in a thread
WITHOUT_CLASSIFICATION	// but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	// may well happen
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// Note: initialised with error = failure = false
WITHOUT_CLASSIFICATION	// HC3.1 does not have the method
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// means counting from end
WITHOUT_CLASSIFICATION	// No point continuing // Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	// create a parser:
WITHOUT_CLASSIFICATION	// doc =
WITHOUT_CLASSIFICATION	// if everything went fine then xml schema validation is valid
WITHOUT_CLASSIFICATION	// Only set message if error not yet flagged
WITHOUT_CLASSIFICATION	// Helper method to construct SAX error details
WITHOUT_CLASSIFICATION	/*         * Can be caused by: - failure to read XSD file - xml does not match XSD         */
WITHOUT_CLASSIFICATION	/*         * Can be caused by: - premature end of file - non-whitespace content         * after trailer         */
WITHOUT_CLASSIFICATION	// * Static int to signify the type of logical comparitor to assert
WITHOUT_CLASSIFICATION	// is the Sample the correct size?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Use the name of the test element, otherwise cannot enable/disable debug from the GUI
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// the signer certificate
WITHOUT_CLASSIFICATION	/*     * @param response @return     */
WITHOUT_CLASSIFICATION	// has the Sample lasted too long?
WITHOUT_CLASSIFICATION	// ensure the manager is initialised // we don't currently need to do anything further, as this sets the default https protocol
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ // These are the names of the get/set methods
WITHOUT_CLASSIFICATION	// no point in checking if we don't have anything to compare against
WITHOUT_CLASSIFICATION	// no error as default
WITHOUT_CLASSIFICATION	// create parser
WITHOUT_CLASSIFICATION	// String md5Result = DigestUtils.md5Hex(resultData);
WITHOUT_CLASSIFICATION	// evaluate result
WITHOUT_CLASSIFICATION	// package protected so can be accessed by test class
WITHOUT_CLASSIFICATION	// return with an error
WITHOUT_CLASSIFICATION	// These constants are used both for the JMX file and for the setters/getters // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// return with an error
WITHOUT_CLASSIFICATION	// flush
WITHOUT_CLASSIFICATION	/*         * Run tidy.         */
WITHOUT_CLASSIFICATION	// return with no error
WITHOUT_CLASSIFICATION	// write output to file
WITHOUT_CLASSIFICATION	// return with no error
WITHOUT_CLASSIFICATION	// check if filename defined
WITHOUT_CLASSIFICATION	// close file
WITHOUT_CLASSIFICATION	// open file
WITHOUT_CLASSIFICATION	//"" is not the same as no realm
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// no error as default
WITHOUT_CLASSIFICATION	// Mask should contain all types (but not NOT)
WITHOUT_CLASSIFICATION	// The string to check (Url or data)
WITHOUT_CLASSIFICATION	// Allow testing of failure codes
WITHOUT_CLASSIFICATION	// What are we testing against?
WITHOUT_CLASSIFICATION	// Assume it is the URL
WITHOUT_CLASSIFICATION	// Assume it is the URL
WITHOUT_CLASSIFICATION	// do it once outside loop
WITHOUT_CLASSIFICATION	// Not should always succeed against an empty result
WITHOUT_CLASSIFICATION	// Get the Matcher for this thread
WITHOUT_CLASSIFICATION	// should never happen...
WITHOUT_CLASSIFICATION	//+ JMX file attributes // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //- JMX file attributes
WITHOUT_CLASSIFICATION	// reset the bsh.Interpreter before each execution
WITHOUT_CLASSIFICATION	// script file name (if present)
WITHOUT_CLASSIFICATION	// parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	// script area
WITHOUT_CLASSIFICATION	// Don't let the input field shrink too much
WITHOUT_CLASSIFICATION	/*     * Send POST data from <code>Entry</code> to the open connection.     *     * @param connection     *            <code>URLConnection</code> where POST data should be sent     * @return a String show what was posted. Will not contain actual file upload content     * @exception IOException     *                if an I/O exception occurs     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// file panel //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Assume it is the URL
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// class attributes
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// doctype
WITHOUT_CLASSIFICATION	// doctype
WITHOUT_CLASSIFICATION	// Names for the fields // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// instance attributes
WITHOUT_CLASSIFICATION	// format (HMTL, XHTML, XML)
WITHOUT_CLASSIFICATION	// errors only
WITHOUT_CLASSIFICATION	// thresholds
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// Drop the last character:
WITHOUT_CLASSIFICATION	// store the operator
WITHOUT_CLASSIFICATION	// default
WITHOUT_CLASSIFICATION	// Put the check boxes in a column in a panel
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// Assume URL
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// USER_INPUT
WITHOUT_CLASSIFICATION	// initialize to empty string, this will fail the assertion
WITHOUT_CLASSIFICATION	// md5HexInput.addFocusListener(this);
WITHOUT_CLASSIFICATION	/*     * @return     */
WITHOUT_CLASSIFICATION	// Should Tidy be quiet?
WITHOUT_CLASSIFICATION	/*     * @param element     */
WITHOUT_CLASSIFICATION	// Should we download external DTDs?
WITHOUT_CLASSIFICATION	// Called by XPathAssertionGui
WITHOUT_CLASSIFICATION	// Report Tidy errors as Assertion failure?
WITHOUT_CLASSIFICATION	// Process tolerant settings
WITHOUT_CLASSIFICATION	// Show Tidy warnings ?
WITHOUT_CLASSIFICATION	// Called by XPathAssertionGui
WITHOUT_CLASSIFICATION	// Non-Tidy options
WITHOUT_CLASSIFICATION	// Tidy options
WITHOUT_CLASSIFICATION	// Called by XPathExtractorGui
WITHOUT_CLASSIFICATION	// Called by XPathExtractorGui
WITHOUT_CLASSIFICATION	/*             * samp.setDomain(this.getDomain()); samp.setPort(this.getPort());             */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// panel.add(signerCheckByFile);
WITHOUT_CLASSIFICATION	// Access needed from CSVDataSet
WITHOUT_CLASSIFICATION	// Store the resource keys
WITHOUT_CLASSIFICATION	// default (e.g. if test plan does not have definition)
WITHOUT_CLASSIFICATION	/*     *  N.B. this class is shared between threads (NoThreadClone) so all access to variables     *  needs to be protected by a lock (either sync. or volatile) to ensure safe publication.     */
WITHOUT_CLASSIFICATION	// This class is not cloned per thread, so this is shared
WITHOUT_CLASSIFICATION	// Used for per-thread/user numbers // Cannot be static, as random numbers are not to be shared between instances
WITHOUT_CLASSIFICATION	/*     * nextInt(n) returns values in the range [0,n),     * so n must be set to max-min+1     */
WITHOUT_CLASSIFICATION	// This can overflow
WITHOUT_CLASSIFICATION	// This is used as an error indicator
WITHOUT_CLASSIFICATION	// check for overflow too
WITHOUT_CLASSIFICATION	// Cannot use getThreadContext() as we are not cloned per thread
WITHOUT_CLASSIFICATION	// Use format to create number; if it fails, use the default
WITHOUT_CLASSIFICATION	// The original name of the property
WITHOUT_CLASSIFICATION	// variables are unlikely to contain spaces, so most likely a translation
WITHOUT_CLASSIFICATION	// reset the value
WITHOUT_CLASSIFICATION	// user-specified key
WITHOUT_CLASSIFICATION	// treat the same as EOF
WITHOUT_CLASSIFICATION	// i.e. EOF
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$       
WITHOUT_CLASSIFICATION	// N.B. Must be in this class for the TestBean code to work
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Allow for missing optional jars
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// These variable names must have .displayName properties and agree with the getXXX()/setXXX() methods // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These group names must have .displayName properties // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//if we found a TestPlan, then we are on our way to the TestFragment
WITHOUT_CLASSIFICATION	// only try to load the JMX test plan if there is one
WITHOUT_CLASSIFICATION	// filter the tree for a TestFragment.
WITHOUT_CLASSIFICATION	// ensure counts are updated correctly
WITHOUT_CLASSIFICATION	// These items are shared between threads in a group by the clone() method // They are initialised by testStarted() so don't need to be serialised
WITHOUT_CLASSIFICATION	// TODO ?? (JMeterTreeNode) selectedNode.clone();
WITHOUT_CLASSIFICATION	// Ensure global counters and lock are shared across threads in the group
WITHOUT_CLASSIFICATION	// Insert the subControllersAndSamplers into random list positions.
WITHOUT_CLASSIFICATION	// nodePath.add(selectedNode.getName());
WITHOUT_CLASSIFICATION	// We clone to avoid enabling existing node
WITHOUT_CLASSIFICATION	/*     * Returns the selection value as a int,     * with the value set to zero if it is out of range.     */
WITHOUT_CLASSIFICATION	// Set the selection once per iteration
WITHOUT_CLASSIFICATION	// Create a new list containing numElements null elements.
WITHOUT_CLASSIFICATION	// Replace subControllersAndSamplers with reordered copy.
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// Set the position when next is first called, and don't overwrite // until reInitialize is called.
WITHOUT_CLASSIFICATION	// setDone(true);
WITHOUT_CLASSIFICATION	// We've gone through the whole list and are now back at the start // point of our search.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // throughput.addActionListener(this);
WITHOUT_CLASSIFICATION	// start/end index default value for string getters and setters
WITHOUT_CLASSIFICATION	// implements UnsharedComponent
WITHOUT_CLASSIFICATION	// Although the default is not the same as for the string value, it is only used internally
WITHOUT_CLASSIFICATION	// Although the default is not the same as for the string value, it is only used internally
WITHOUT_CLASSIFICATION	// Prevent entry if nothing to do
WITHOUT_CLASSIFICATION	// These must not be static, otherwise Language change does not work // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// PERTHREAD FIELD
WITHOUT_CLASSIFICATION	// In case we are converting back from floating point, drop the decimal fraction // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TYPE FIELD
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// TEXT FIELD
WITHOUT_CLASSIFICATION	// Standalone
WITHOUT_CLASSIFICATION	// Embedded
WITHOUT_CLASSIFICATION	// JPanel loopPanel = new JPanel(new BorderLayout(5, 0));
WITHOUT_CLASSIFICATION	// Only replace default if it is provided
WITHOUT_CLASSIFICATION	// may be null for PUT // In an application/x-www-form-urlencoded request, we only support // parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// Should not happen
WITHOUT_CLASSIFICATION	// implements UnsharedComponent
WITHOUT_CLASSIFICATION	// Fetch some variables
WITHOUT_CLASSIFICATION	// LOOP LABEL // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX file attributes // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //- JMX file attributes
WITHOUT_CLASSIFICATION	// Checkbox // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*================= internal business =================*/
WITHOUT_CLASSIFICATION	// DROP-DOWN MENU
WITHOUT_CLASSIFICATION	// number of previous matches
WITHOUT_CLASSIFICATION	// reset previous result
WITHOUT_CLASSIFICATION	// e.g. DTD not reachable
WITHOUT_CLASSIFICATION	// this method assumes UTF-8 input data
WITHOUT_CLASSIFICATION	// Can happen for bad input document
WITHOUT_CLASSIFICATION	/*============= object properties ================*/
WITHOUT_CLASSIFICATION	/*     * Permissible values:     *  true - match against headers     *  false or absent - match against body (this was the original default)     *  URL - match against URL     *  These are passed to the setUseField() method     *     *  Do not change these values!    */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Will already have been logged by XPathUtil // fail the sample
WITHOUT_CLASSIFICATION	// Just in case // Clear any other remaining variables
WITHOUT_CLASSIFICATION	// What to match against. N.B. do not change the string value or test plans will break! // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOTE: responseData encoding is server specific //       Therefore we do byte -> unicode -> byte conversion //       to ensure UTF-8 encoding as required by XPathUtil // convert unicode String -> UTF-8 bytes // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ensure old value is not left defined
WITHOUT_CLASSIFICATION	// ensure old value is not left defined
WITHOUT_CLASSIFICATION	// Fetch some variables
WITHOUT_CLASSIFICATION	// Only replace default if it is provided
WITHOUT_CLASSIFICATION	//Note: match.groups() includes group 0
WITHOUT_CLASSIFICATION	// refname has already been set to the default (if present)
WITHOUT_CLASSIFICATION	// Number of refName_n variable sets to keep
WITHOUT_CLASSIFICATION	// Number of refName_n variable sets to keep
WITHOUT_CLASSIFICATION	// Save the count
WITHOUT_CLASSIFICATION	// Original match behaviour
WITHOUT_CLASSIFICATION	// Original match behaviour
WITHOUT_CLASSIFICATION	// < 0 means we save all the matches
WITHOUT_CLASSIFICATION	// remove any single matches
WITHOUT_CLASSIFICATION	// Remove any left-over variables
WITHOUT_CLASSIFICATION	// no need to process further
WITHOUT_CLASSIFICATION	// Remove the group count
WITHOUT_CLASSIFICATION	// How many groups are there?
WITHOUT_CLASSIFICATION	// remove the remaining _gn vars
WITHOUT_CLASSIFICATION	// trailing string is not empty
WITHOUT_CLASSIFICATION	// Contains Strings and Integers
WITHOUT_CLASSIFICATION	// remove the g0,g1...gn vars
WITHOUT_CLASSIFICATION	// add match as Integer
WITHOUT_CLASSIFICATION	// string is not empty
WITHOUT_CLASSIFICATION	// Allow for property not yet being set (probably only applies to Test cases)
WITHOUT_CLASSIFICATION	// Random match
WITHOUT_CLASSIFICATION	// for request Data
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // e.g. "Transfer-Encoding: chunked", which is processed automatically by the underlying protocol // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ pseudo-header for reporting Local Address // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // For handling caching // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //e.g. public, max-age=259200 //e.g. Date Header of response 
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$         //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Use format to create number; if it fails, use the default
WITHOUT_CLASSIFICATION	// < 0 means we save all the matches
WITHOUT_CLASSIFICATION	// Save the count
WITHOUT_CLASSIFICATION	// Remove any left-over variables
WITHOUT_CLASSIFICATION	// no need to process further
WITHOUT_CLASSIFICATION	// Random match
WITHOUT_CLASSIFICATION	// Next line
WITHOUT_CLASSIFICATION	// Next line
WITHOUT_CLASSIFICATION	// Used for per-thread/user storage of increment in Thread Group Main loop
WITHOUT_CLASSIFICATION	// So we know which button is selected
WITHOUT_CLASSIFICATION	// reset
WITHOUT_CLASSIFICATION	// Used for per-thread/user numbers
WITHOUT_CLASSIFICATION	// Cannot use getThreadContext() as not cloned per thread
WITHOUT_CLASSIFICATION	// get to 'path' part of the URL, preserving schema, auth, host if // present
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This class is not cloned per thread, so this is shared //@GuardedBy("this")
WITHOUT_CLASSIFICATION	/*     * Although the lock appears to be an instance lock, in fact the lock is     * shared between all threads in a thread group, but different thread groups     * have different locks - see the clone() method below     *     * The lock ensures that all the variables are processed together, which is     * important for functions such as __CSVRead and _StringFromFile.     */
WITHOUT_CLASSIFICATION	// Lock object must exist
WITHOUT_CLASSIFICATION	// ensure that clones share the same lock object
WITHOUT_CLASSIFICATION	// super.mergeIn(element);
WITHOUT_CLASSIFICATION	// Don't process the NAME column
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Verify for a ".." component at next iteration
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// paramTable.setRowSelectionAllowed(true); // paramTable.setColumnSelectionAllowed(true);
WITHOUT_CLASSIFICATION	// property values are strings
WITHOUT_CLASSIFICATION	// paramTable.setCellSelectionEnabled(true); // paramTable.setPreferredScrollableViewportSize(new Dimension(100, // 70));
WITHOUT_CLASSIFICATION	// Send the mail ...
WITHOUT_CLASSIFICATION	// Send the mail ...
WITHOUT_CLASSIFICATION	// create some properties and get the default Session
WITHOUT_CLASSIFICATION	// create a message
WITHOUT_CLASSIFICATION	// This can't happen (how should utf8 not be supported!?!), // so just throw an Error:
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// for request Data
WITHOUT_CLASSIFICATION	// //////////////////////////////////////////////////////////// // // setter/getter - JavaDoc-Comments not needed... // // ////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// -1 is the code for a failed sample. //
WITHOUT_CLASSIFICATION	// private void setSuccessCount(long count) // { // this.successCount = count; // }
WITHOUT_CLASSIFICATION	// private void setFailureCount(long count) // { // this.failureCount = count; // }
WITHOUT_CLASSIFICATION	// sends the result to the visualiser // updates the model used for sending e-mails
WITHOUT_CLASSIFICATION	// Actions
WITHOUT_CLASSIFICATION	// Action targets
WITHOUT_CLASSIFICATION	// public static final int THREAD_GROUP = 1;
WITHOUT_CLASSIFICATION	// This means no sample is saved
WITHOUT_CLASSIFICATION	// take copy so cannot get NPE
WITHOUT_CLASSIFICATION	// Gui components
WITHOUT_CLASSIFICATION	// private ButtonGroup actionButtons;
WITHOUT_CLASSIFICATION	// State variables
WITHOUT_CLASSIFICATION	// Target
WITHOUT_CLASSIFICATION	// Action
WITHOUT_CLASSIFICATION	// Duration
WITHOUT_CLASSIFICATION	// The property name to be used to look up the display string
WITHOUT_CLASSIFICATION	//For calculating throughput across all threads
WITHOUT_CLASSIFICATION	//For holding the ThrougputInfo objects for all ThreadGroups. Keyed by AbstractThreadGroup objects
WITHOUT_CLASSIFICATION	/*         * If previous time is zero, then target will be in the past.         * This is what we want, so first sample is run without a delay.        */
WITHOUT_CLASSIFICATION	// assume the sample will run as soon as the delay has expired
WITHOUT_CLASSIFICATION	// Calculate the delay based on the mode
WITHOUT_CLASSIFICATION	// N.B. we fetch the throughput each time, as it may vary during a test
WITHOUT_CLASSIFICATION	// Total number of threads
WITHOUT_CLASSIFICATION	// Active threads in this group
WITHOUT_CLASSIFICATION	// All threads - alternate calculation
WITHOUT_CLASSIFICATION	//All threads in this group - alternate calculation
WITHOUT_CLASSIFICATION	// no need to sync as one per instance
WITHOUT_CLASSIFICATION	// Add to cache
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	//Cannot happen
WITHOUT_CLASSIFICATION	// String in the panel // Do not make these static, otherwise language changes don't work // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// We did not replace the entry // so use the existing one
WITHOUT_CLASSIFICATION	// e.g. 0 // i.e. * 1
WITHOUT_CLASSIFICATION	// We're behind schedule -- try to catch up: // assume the sample will run immediately
WITHOUT_CLASSIFICATION	// For access from test code
WITHOUT_CLASSIFICATION	//Synchronize on the info object's MUTEX to ensure //Multiple threads don't update the scheduled time simultaneously
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	// For access from test code
WITHOUT_CLASSIFICATION	// Unique Barrier creation ensured by synchronized setup
WITHOUT_CLASSIFICATION	// must be defined
WITHOUT_CLASSIFICATION	// Instantiate requestview classes
WITHOUT_CLASSIFICATION	// Ensure transient object is created by the server
WITHOUT_CLASSIFICATION	// DELAY DEVIATION
WITHOUT_CLASSIFICATION	// Lazy init
WITHOUT_CLASSIFICATION	// use later
WITHOUT_CLASSIFICATION	// AVG DELAY
WITHOUT_CLASSIFICATION	// Prepare the Request tabbed pane
WITHOUT_CLASSIFICATION	// place raw tab in first position (first tab)
WITHOUT_CLASSIFICATION	// Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	// We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Create the panels for the regexp tab
WITHOUT_CLASSIFICATION	// go to first line
WITHOUT_CLASSIFICATION	// Construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	// Add regexp tester pane // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// private static final int LIMIT_STR_SIZE = 100; // private boolean isRoot;
WITHOUT_CLASSIFICATION	// if other node type, we will just skip it
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// NAME
WITHOUT_CLASSIFICATION	// description Panel
WITHOUT_CLASSIFICATION	// number Panel
WITHOUT_CLASSIFICATION	// information display Panel
WITHOUT_CLASSIFICATION	// boolean resized = true;
WITHOUT_CLASSIFICATION	// rounds!
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// NAME
WITHOUT_CLASSIFICATION	// Set up the table itself
WITHOUT_CLASSIFICATION	// everyone is free to swing on its side :) // add(infoPanel, BorderLayout.EAST);
WITHOUT_CLASSIFICATION	// Note: the resource string won't respond to locale-changes, // however this does not matter as it is only used when pasting to the clipboard
WITHOUT_CLASSIFICATION	// dimension of the SplineGraph is the same // resized = false;
WITHOUT_CLASSIFICATION	// Sample number (string) // Start Time // Thread Name // Label // Sample Time // Status // Bytes
WITHOUT_CLASSIFICATION	// dimension changed // resized = true;
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add the main panel and the graph
WITHOUT_CLASSIFICATION	// Column renderers
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// table.getTableHeader().setReorderingAllowed(false);
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Make a internal list of all results to allow reload data with filter or interval
WITHOUT_CLASSIFICATION	// Default checked // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set up footer of table which displays numerics of the graphs
WITHOUT_CLASSIFICATION	// Generate x-axis label and associated color
WITHOUT_CLASSIFICATION	// Set up the table with footer
WITHOUT_CLASSIFICATION	// Sampler selection
WITHOUT_CLASSIFICATION	// internal list of all results
WITHOUT_CLASSIFICATION	// Use for x-axis scale
WITHOUT_CLASSIFICATION	// we check the count to see if we have exceeded // the number of lines to parse. There's no way // to know where to stop in the file. Therefore // we use break to escape the while loop when // we've reached the count.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// reset colors index
WITHOUT_CLASSIFICATION	// List of value by sampler
WITHOUT_CLASSIFICATION	// We want to retain insertion order, so LinkedHashMap is necessary
WITHOUT_CLASSIFICATION	// canvas size
WITHOUT_CLASSIFICATION	// Draw the graph
WITHOUT_CLASSIFICATION	// Test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	// Calculate intermediate values (if needed)
WITHOUT_CLASSIFICATION	// log.debug("data["+s+"]["+idx+"]: " + data[s][idx]);
WITHOUT_CLASSIFICATION	// If clic on the Graph tab, make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	// if use dynamic graph size is checked, we disable the dimension fields
WITHOUT_CLASSIFICATION	// Force reload data
WITHOUT_CLASSIFICATION	// Not 'else if' because forceReloadData 
WITHOUT_CLASSIFICATION	// Reload data from file
WITHOUT_CLASSIFICATION	// Reload data form internal list of results
WITHOUT_CLASSIFICATION	// Calculate the test duration. Needs to xAxis Labels and getData.
WITHOUT_CLASSIFICATION	// Button
WITHOUT_CLASSIFICATION	// Button
WITHOUT_CLASSIFICATION	// Search field
WITHOUT_CLASSIFICATION	// checkboxes
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default: bold
WITHOUT_CLASSIFICATION	// default: circle
WITHOUT_CLASSIFICATION	// default option
WITHOUT_CLASSIFICATION	// Keep copies of the two editors needed
WITHOUT_CLASSIFICATION	// could be <HTML lang=""> // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Look for a case variation
WITHOUT_CLASSIFICATION	// ditto // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*         * To disable downloading and rendering of images and frames, enable the         * editor-kit. The Stream property can then be         */
WITHOUT_CLASSIFICATION	// Must be done before setContentType
WITHOUT_CLASSIFICATION	// now we create the compiled pattern and // add it to the arraylist
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// the child to be removed will always be 0 'cos as the nodes are // removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	// get the text response and image icon // to determine which is NOT null
WITHOUT_CLASSIFICATION	// Bug can generate RTE
WITHOUT_CLASSIFICATION	// number of nodes
WITHOUT_CLASSIFICATION	// number of non extreme nodes (_m-2)
WITHOUT_CLASSIFICATION	// the number of nodes is defined by the length of r
WITHOUT_CLASSIFICATION	// grab the nodes
WITHOUT_CLASSIFICATION	// computes interpolation coefficients
WITHOUT_CLASSIFICATION	// creation of the interpolation structure
WITHOUT_CLASSIFICATION	// local variables
WITHOUT_CLASSIFICATION	// local variables
WITHOUT_CLASSIFICATION	// initialize system structures (just to be safe)
WITHOUT_CLASSIFICATION	// initialize the diagonal of the system matrix (A) to 4
WITHOUT_CLASSIFICATION	// initialize the two minor diagonals of A to 1
WITHOUT_CLASSIFICATION	// initialize B
WITHOUT_CLASSIFICATION	// di (degree 0)
WITHOUT_CLASSIFICATION	// ci (degree 1)
WITHOUT_CLASSIFICATION	// bi (degree 2)
WITHOUT_CLASSIFICATION	// ai (degree 3)
WITHOUT_CLASSIFICATION	// intermediate arrays
WITHOUT_CLASSIFICATION	// Jacobi convergence test
WITHOUT_CLASSIFICATION	// init newX and oldX arrays to 0
WITHOUT_CLASSIFICATION	// main iteration
WITHOUT_CLASSIFICATION	// verify t belongs to the curve (range [0, _m-1])
WITHOUT_CLASSIFICATION	// silent error, consider the curve is constant outside its range
WITHOUT_CLASSIFICATION	// seek the good interval for t and get the piece of curve on it
WITHOUT_CLASSIFICATION	// the polynomial calculation is done by the (fast) Euler method
WITHOUT_CLASSIFICATION	// computes auto-scaling and absolute plots
WITHOUT_CLASSIFICATION	// shouldn't draw negative values
WITHOUT_CLASSIFICATION	// we want to return the context that is actually in the map // if it's the first put we will have a null result
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// Settings panes
WITHOUT_CLASSIFICATION	// the number of non extreme nodes is the number of intervals // minus 1, i.e. the length of r minus 2
WITHOUT_CLASSIFICATION	// the upper limit of the curve range belongs by definition // to the last interval
WITHOUT_CLASSIFICATION	// Jacobi system resolving // results are stored in _rS // computes the coefficients (di, ci, bi, ai) from the results
WITHOUT_CLASSIFICATION	// computes relative auto-scaled plots to fit in the specified area
WITHOUT_CLASSIFICATION	// computes the value of the curve at the pecified abscissa // and relative to the beginning of the right piece of Spline curve
WITHOUT_CLASSIFICATION	// return label
WITHOUT_CLASSIFICATION	// initialize GUI.
WITHOUT_CLASSIFICATION	// show the grid lines, to turn it off, set it to zero
WITHOUT_CLASSIFICATION	// Test mail button
WITHOUT_CLASSIFICATION	// reset the paint counter
WITHOUT_CLASSIFICATION	// Failures count
WITHOUT_CLASSIFICATION	// set the Y Axis to round
WITHOUT_CLASSIFICATION	// Does not need to be synch. because it is only accessed from the sampler thread // The ClientPool does access it in a different thread, but ClientPool is fully synch.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used by Request Panel //$NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#init()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#clearData()     */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// go to first line
WITHOUT_CLASSIFICATION	// Construct a multi-line string with all matches
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// Don't display Request headers label if rh is null or empty
WITHOUT_CLASSIFICATION	// //////////////////////////////////////////////////////////// // // Implementation of the ActionListener-Interface. // // ////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// //////////////////////////////////////////////////////////// // // Methods used to store and retrieve the MailerVisualizer. // // ////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// //////////////////////////////////////////////////////////// // // Methods to implement the ModelListener. // // ////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // don't set empty to keep cssJquery // cssJqueryField.setText(""); // $NON-NLS-1$ // $NON-NLS-1$ // don't set empty to keep attribute // this.attributeField.setText(""); // $NON-NLS-1$ // don't change impl // this.cssJqueryLabeledChoice.setText(HtmlExtractor.DEFAULT_EXTRACTOR);
WITHOUT_CLASSIFICATION	// Create the panels for the cssJquery tab
WITHOUT_CLASSIFICATION	// most current subclasses can process text
WITHOUT_CLASSIFICATION	// Could be SampleResult or AssertionResult
WITHOUT_CLASSIFICATION	// add a message when no request data (ex. Java request)
WITHOUT_CLASSIFICATION	// to save last select tab (raw/parsed)
WITHOUT_CLASSIFICATION	// Result column renderers
WITHOUT_CLASSIFICATION	// Response headers column renderers
WITHOUT_CLASSIFICATION	// Response fields column renderers
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// Add cssJquery tester pane // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. these are not multi-threaded, so don't make it static // ISO format $NON-NLS-1$
WITHOUT_CLASSIFICATION	// one space for blank header // $NON-NLS-1$  // one space for blank header  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// create tables // The object used for each row
WITHOUT_CLASSIFICATION	// Response Data // $NON-NLS-1$ // Request Data // $NON-NLS-1$ // Sampler result // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Create the panels for the other tabs
WITHOUT_CLASSIFICATION	// Clear all data before display a new
WITHOUT_CLASSIFICATION	// We are displaying a SampleResult
WITHOUT_CLASSIFICATION	// reset for reuse
WITHOUT_CLASSIFICATION	// reset for reuse
WITHOUT_CLASSIFICATION	// no need to change the foreground color
WITHOUT_CLASSIFICATION	// response message label
WITHOUT_CLASSIFICATION	// Done
WITHOUT_CLASSIFICATION	// Parsed response headers
WITHOUT_CLASSIFICATION	// Reset search
WITHOUT_CLASSIFICATION	// restore tabbed pane parsed if needed
WITHOUT_CLASSIFICATION	// restore last selected tab
WITHOUT_CLASSIFICATION	// Remove the other (parsed) tab if present
WITHOUT_CLASSIFICATION	// Cache for object-message, only used when parsing from a file because in text-area // property replacement might have been used
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	// Set up the 1st table Result with empty headers
WITHOUT_CLASSIFICATION	// quieten Findbugs // default - do nothing
WITHOUT_CLASSIFICATION	// Add styles to use for different types of status messages
WITHOUT_CLASSIFICATION	// Prepare the Results tabbed pane
WITHOUT_CLASSIFICATION	// Set up the 3rd table 
WITHOUT_CLASSIFICATION	// Set up the 2nd table 
WITHOUT_CLASSIFICATION	// Create the split pane
WITHOUT_CLASSIFICATION	// Create the split pane
WITHOUT_CLASSIFICATION	// Add search text extension
WITHOUT_CLASSIFICATION	// Maximum size that we will display
WITHOUT_CLASSIFICATION	// Add sample
WITHOUT_CLASSIFICATION	// Add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	// Add any assertion that failed as children of the sample node
WITHOUT_CLASSIFICATION	// Prepare the common tab
WITHOUT_CLASSIFICATION	// init right side with first render
WITHOUT_CLASSIFICATION	// to restore last tab used
WITHOUT_CLASSIFICATION	// drop-down list for renderer
WITHOUT_CLASSIFICATION	// if no results render in jmeter.properties, load Standard (default)
WITHOUT_CLASSIFICATION	// Instantiate render classes
WITHOUT_CLASSIFICATION	// preset to "Text" option
WITHOUT_CLASSIFICATION	// to restore last selected tab (better user-friendly)
WITHOUT_CLASSIFICATION	// Remove old right side
WITHOUT_CLASSIFICATION	// create and add a new right side
WITHOUT_CLASSIFICATION	// To display current sampler result before change
WITHOUT_CLASSIFICATION	// in the case the test uses a file, we set it locally and // prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// NAME
WITHOUT_CLASSIFICATION	// the child to be removed will always be 0 'cos as the nodes are // removed the nth node will become (n-1)th
WITHOUT_CLASSIFICATION	// Processes Assertions // display a SampleResult
WITHOUT_CLASSIFICATION	// Set the status for the node
WITHOUT_CLASSIFICATION	// NOOP state is held by component
WITHOUT_CLASSIFICATION	// TEXTAREA LABEL
WITHOUT_CLASSIFICATION	// TEXTAREA
WITHOUT_CLASSIFICATION	// define max scale y axis
WITHOUT_CLASSIFICATION	// if the title graph is empty, we can assume some default
WITHOUT_CLASSIFICATION	// replace _xAxisTitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	// Stroke and shape line settings
WITHOUT_CLASSIFICATION	// Lines colors
WITHOUT_CLASSIFICATION	// Define chart type (line)
WITHOUT_CLASSIFICATION	// Y Axis ruler
WITHOUT_CLASSIFICATION	// ~a tic every 50 px
WITHOUT_CLASSIFICATION	// Increment cannot be < 1
WITHOUT_CLASSIFICATION	// Manage legend placement
WITHOUT_CLASSIFICATION	// return new Dimension(width, 400);
WITHOUT_CLASSIFICATION	// int width = getWidth();
WITHOUT_CLASSIFICATION	// will always be within range of an int: as must be < width
WITHOUT_CLASSIFICATION	// Don't start yet if stop between samples
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// We want to retain insertion order, so LinkedHashMap is necessary
WITHOUT_CLASSIFICATION	// define max scale y axis
WITHOUT_CLASSIFICATION	// replace _xAxisTitle to null (don't display x axis title)
WITHOUT_CLASSIFICATION	// if the "Title of Graph" is empty, we can assume some default
WITHOUT_CLASSIFICATION	// Same ViewResultsTree
WITHOUT_CLASSIFICATION	// Needed by Visualizer interface
WITHOUT_CLASSIFICATION	// Educated guess
WITHOUT_CLASSIFICATION	// if the labels are too long, they'll be "squeezed" to make the chart viewable.
WITHOUT_CLASSIFICATION	// Y Axis
WITHOUT_CLASSIFICATION	//new Font("SansSerif", Font.PLAIN, 10)
WITHOUT_CLASSIFICATION	// enable embedded html resources
WITHOUT_CLASSIFICATION	// ----------- get/set methods ------------------- //
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// Column renderers
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	/*                 * Synch is needed because multiple threads can update the counts.                 */
WITHOUT_CLASSIFICATION	// SortFilterModel mySortedModel = // new SortFilterModel(myStatTableModel);
WITHOUT_CLASSIFICATION	// Search field
WITHOUT_CLASSIFICATION	// prepare highlighter to show text find with search command
WITHOUT_CLASSIFICATION	// new search?
WITHOUT_CLASSIFICATION	// save search position
WITHOUT_CLASSIFICATION	// Display not found message and reset search
WITHOUT_CLASSIFICATION	// add listener to intercept texttofind changes and reset search
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// Column renderers
WITHOUT_CLASSIFICATION	// checkboxes
WITHOUT_CLASSIFICATION	// Reset search
WITHOUT_CLASSIFICATION	/*                 * Synch is needed because multiple threads can update the counts.                 */
WITHOUT_CLASSIFICATION	// Buttons
WITHOUT_CLASSIFICATION	// when Enter is pressed, search start
WITHOUT_CLASSIFICATION	// default not visible
WITHOUT_CLASSIFICATION	// Search text in response data
WITHOUT_CLASSIFICATION	// DocumentListener method
WITHOUT_CLASSIFICATION	// DocumentListener method
WITHOUT_CLASSIFICATION	// DocumentListener method
WITHOUT_CLASSIFICATION	// desactivate or not specials regexp char
WITHOUT_CLASSIFICATION	// Label // count // Mean // Min // Max // Std Dev. // Error %age // Throughput // kB/sec // avg. pageSize
WITHOUT_CLASSIFICATION	// All rows have this class
WITHOUT_CLASSIFICATION	//Synch is needed because a clear can occur while add occurs
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// Add the main panel and the graph
WITHOUT_CLASSIFICATION	//    /** A button for adding new arguments to the table. */ //    private JButton add; // //    /** A button for removing arguments from the table. */ //    private JButton delete;
WITHOUT_CLASSIFICATION	// Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	//p.add(makeButtonPanel(), BorderLayout.SOUTH);
WITHOUT_CLASSIFICATION	//new Functor("setName"), // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// OK, because used in synchronised method
WITHOUT_CLASSIFICATION	// We have received one more sample
WITHOUT_CLASSIFICATION	// Set up the graph with header, footer, Y axis and graph display
WITHOUT_CLASSIFICATION	// Methods used in creating the GUI
WITHOUT_CLASSIFICATION	/*     * protected void initializeTableModel() { tableModel = new     * ObjectTableModel( new String[] { ArgumentsPanel.COLUMN_NAMES_0,     * ArgumentsPanel.COLUMN_NAMES_1, ENCODE_OR_NOT, INCLUDE_EQUALS }, new     * Functor[] { new Functor("getName"), new Functor("getValue"), new     * Functor("isAlwaysEncoded"), new Functor("isUseEquals") }, new Functor[] {     * new Functor("setName"), new Functor("setValue"), new     * Functor("setAlwaysEncoded"), new Functor("setUseEquals") }, new Class[] {     * String.class, String.class, Boolean.class, Boolean.class }); }     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Column renderers
WITHOUT_CLASSIFICATION	// Default checked // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default checked // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default checked // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The text field should expand horizontally, but have // a fixed height
WITHOUT_CLASSIFICATION	// This column actually consists of a row with two sub-columns // The first column contains the labels, and the second // column contains the fields.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// Sampler selection
WITHOUT_CLASSIFICATION	// canvas size
WITHOUT_CLASSIFICATION	// If clic on the Graph tab, make the graph (without apply interval or filter)
WITHOUT_CLASSIFICATION	// if use dynamic graph size is checked, we disable the dimension fields
WITHOUT_CLASSIFICATION	// Force reload data
WITHOUT_CLASSIFICATION	// Not 'else if' because forceReloadData 
WITHOUT_CLASSIFICATION	// Button
WITHOUT_CLASSIFICATION	// Button
WITHOUT_CLASSIFICATION	// Search field
WITHOUT_CLASSIFICATION	// checkboxes
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default: bold
WITHOUT_CLASSIFICATION	// default option
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default: normal
WITHOUT_CLASSIFICATION	// Label // count // Mean // median // 90% // Min // Max // Error %age // Throughpur // pageSize
WITHOUT_CLASSIFICATION	// API expects null, not empty array
WITHOUT_CLASSIFICATION	// API expects null, not empty array
WITHOUT_CLASSIFICATION	// Changing color for column
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// first lets draw the grid
WITHOUT_CLASSIFICATION	// draw the X axis
WITHOUT_CLASSIFICATION	// draw the Y axis
WITHOUT_CLASSIFICATION	// now draw the bar chart
WITHOUT_CLASSIFICATION	// we sort the objects
WITHOUT_CLASSIFICATION	// calculate the height
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// the test plan has to have more than 200 samples // for it to generate half way decent distribution // graph. the larger the sample, the better the // results.
WITHOUT_CLASSIFICATION	// if the height is less than one, we set it // to one pixel
WITHOUT_CLASSIFICATION	// draw a red line for 90% point
WITHOUT_CLASSIFICATION	// draw an orange line for 50% point
WITHOUT_CLASSIFICATION	//"<?xml "
WITHOUT_CLASSIFICATION	// Skip the leading bytes (if any)
WITHOUT_CLASSIFICATION	// there is also a javax.swing.text.Document class.
WITHOUT_CLASSIFICATION	// clear result tab on Ctrl-E
WITHOUT_CLASSIFICATION	// Must return a valid node, or may generate an NPE
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// Add the main panel and the graph
WITHOUT_CLASSIFICATION	// We have received one more sample
WITHOUT_CLASSIFICATION	// Set up the graph with header, footer, Y axis and graph display
WITHOUT_CLASSIFICATION	// Methods used in creating the GUI
WITHOUT_CLASSIFICATION	// These are not currently updated
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	// this.graph.clear();
WITHOUT_CLASSIFICATION	// compute the new Spline curve
WITHOUT_CLASSIFICATION	// do nothing, wait for the next pile to complete
WITHOUT_CLASSIFICATION	// made currentSample volatile
WITHOUT_CLASSIFICATION	// Find JMeter home dir from the initial classpath
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Java on Mac OS can add a second entry to the initial classpath // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// e.g. started from IDE with full classpath // Allow override $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Add standard jar locations to initial classpath
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// only accept jar files // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// usesUNC
WITHOUT_CLASSIFICATION	// ClassFinder needs the classpath
WITHOUT_CLASSIFICATION	// Ensure that directory URLs end in "/" // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ClassFinder needs this
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Make the addURL method visible
WITHOUT_CLASSIFICATION	// needed for ShutdownClient
WITHOUT_CLASSIFICATION	// If the -t flag is to "LAST", then the last loaded file (if any) is used
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Reset it
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // jmeter.log // $NON-NLS-1$ // sample result log file // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Properties to be sent to remote servers
WITHOUT_CLASSIFICATION	// should remote engines be stopped at end of non-GUI test?
WITHOUT_CLASSIFICATION	// Check option combinations
WITHOUT_CLASSIFICATION	// Also initialises JMeter logging
WITHOUT_CLASSIFICATION	/*             * The following is needed for HTTPClient.             * (originally tried doing this in HTTPSampler2,             * but it appears that it was done too late when running in GUI mode)             * Set the commons logging default to Avalon Logkit, if not already defined             */
WITHOUT_CLASSIFICATION	// Set some (hopefully!) useful properties
WITHOUT_CLASSIFICATION	// Start the server
WITHOUT_CLASSIFICATION	// most recent
WITHOUT_CLASSIFICATION	// Update classloader if necessary
WITHOUT_CLASSIFICATION	//bshinit,log);
WITHOUT_CLASSIFICATION	//Do what would be done earlier
WITHOUT_CLASSIFICATION	//Do what would be done earlier
WITHOUT_CLASSIFICATION	// Should not have any text arguments
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//for Httpclient //for Httpclient
WITHOUT_CLASSIFICATION	// Process command line property definitions // These can potentially occur multiple times
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Reset it
WITHOUT_CLASSIFICATION	// Set category
WITHOUT_CLASSIFICATION	// Set root level
WITHOUT_CLASSIFICATION	/*     * Checks for LAST or LASTsuffix.     * Returns the LAST name with .JMX replaced by suffix.     */
WITHOUT_CLASSIFICATION	// most recent // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// run test in batch mode
WITHOUT_CLASSIFICATION	// only add Summariser if it can not be shared with the ResultCollector
WITHOUT_CLASSIFICATION	// not Replaceable Controller
WITHOUT_CLASSIFICATION	// Not enabled
WITHOUT_CLASSIFICATION	// Not enabled
WITHOUT_CLASSIFICATION	// Not a TestElement
WITHOUT_CLASSIFICATION	// Not a ReplaceableController
WITHOUT_CLASSIFICATION	/*     * Listen to test and handle tidyup after non-GUI test completes.     * If running a remote test, then after waiting a few seconds for listeners to finish files,     * it calls ClientJMeterEngine.tidyRMI() to deal with the Naming Timer Thread.     */
WITHOUT_CLASSIFICATION	// keep track of remote tests
WITHOUT_CLASSIFICATION	//NOT YET USED private JMeter _parent;
WITHOUT_CLASSIFICATION	//_parent = unused;
WITHOUT_CLASSIFICATION	// it will be null unless remoteStop = true
WITHOUT_CLASSIFICATION	// Allow listeners to close files
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ 
WITHOUT_CLASSIFICATION	// Allow enough time for JVM to exit
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Replacement only needs to occur when starting the engine // @see StandardJMeterEngine.run()
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Deliberate use of deprecated ctor // Create non-GUI version to avoid headless problems
WITHOUT_CLASSIFICATION	// Remove the disabled items // For GUI runs this is done in Start.java
WITHOUT_CLASSIFICATION	// This cannot be a JMeter class variable, because properties // are not initialised until later.
WITHOUT_CLASSIFICATION	// This is a daemon thread, which should only reach here if there are other // non-daemon threads still active
WITHOUT_CLASSIFICATION	// Only accept commands from the local host
WITHOUT_CLASSIFICATION	// Needs to be public for tests
WITHOUT_CLASSIFICATION	// needs to be public for testing
WITHOUT_CLASSIFICATION	// Skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Because CollectionProperty.mergeIn will not prevent adding two // properties of the same name, we need to select the first value so // that this element's values prevail over defaults provided by // configuration // elements:
WITHOUT_CLASSIFICATION	// will only contain Argument or HTTPArgument
WITHOUT_CLASSIFICATION	//add(makeTitlePanel(), BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	// Force the table to be at least 70 pixels high
WITHOUT_CLASSIFICATION	// only contains Argument (or HTTPArgument)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current value // and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	/*     * Evaluate the condition, which can be:     * blank or LAST = was the last sampler OK?     * otherwise, evaluate the condition to see if it is not "false"     * If blank, only evaluate at the end of the loop     *     * Must only be called at start and end of loop     *     * @param loopEnd - are we at loop end?     * @return true means OK to continue     */
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	// Hide Window on ESC
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// change to false after the first insert
WITHOUT_CLASSIFICATION	// Do update on Enter
WITHOUT_CLASSIFICATION	/*     * In spite of the name, this is actually used to determine if the loop controller is repeatable.     *     * The value is only used in nextIsNull() when the loop end condition has been detected:     * If forever==true, then it calls resetLoopCount(), otherwise it calls setDone(true).     *     * Loop Controllers always set forever=true, so that they will be executed next time     * the parent invokes them.     *     * Thread Group sets the value false, so nextIsNull() sets done, and the Thread Group will not be repeated.     * However, it's not clear that a Thread Group could ever be repeated.     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// for unit test code @see TestIfController
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// If blank, only check previous sample when at end of loop // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// cnd may be null if next() called us // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Evaluation occurs when nbLoops is not yet evaluated  // or when nbLoops is equal to special value INFINITE_LOOP_COUNT
WITHOUT_CLASSIFICATION	// now evaluate the condition using JavaScript
WITHOUT_CLASSIFICATION	// We should only evalute the condition if it is the first // time ( first "iteration" ) we are called. // For subsequent calls, we are inside the IfControllerGroup, // so then we just pass the control to the next item inside the if control
WITHOUT_CLASSIFICATION	// If-test is false, need to re-initialize indexes
WITHOUT_CLASSIFICATION	// for getIterCount
WITHOUT_CLASSIFICATION	// Runtime is zero - no point staying around
WITHOUT_CLASSIFICATION	// ??
WITHOUT_CLASSIFICATION	/*     * This is needed for OnceOnly to work like other Loop Controllers     */
WITHOUT_CLASSIFICATION	// Only create the map if it is required
WITHOUT_CLASSIFICATION	// May be replaced by RandomOrderController
WITHOUT_CLASSIFICATION	// incrementCurrent();
WITHOUT_CLASSIFICATION	// must be a controller
WITHOUT_CLASSIFICATION	// must be a controller
WITHOUT_CLASSIFICATION	// can only match once
WITHOUT_CLASSIFICATION	// i.e. "true"
WITHOUT_CLASSIFICATION	// default true for compatibility
WITHOUT_CLASSIFICATION	///////////////// Transaction Controller - parent ////////////////
WITHOUT_CLASSIFICATION	// Check if transaction is done
WITHOUT_CLASSIFICATION	// This transaction is done
WITHOUT_CLASSIFICATION	// Sample the children of the transaction
WITHOUT_CLASSIFICATION	// If we do not get any sub samplers, the transaction is done
WITHOUT_CLASSIFICATION	////////////////////// Transaction Controller - additional sample //////////////////////////////
WITHOUT_CLASSIFICATION	// must be the start of the subtree
WITHOUT_CLASSIFICATION	// Assume success
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// Standalone
WITHOUT_CLASSIFICATION	// Embedded
WITHOUT_CLASSIFICATION	// This transaction is done
WITHOUT_CLASSIFICATION	// Assume success
WITHOUT_CLASSIFICATION	// Check if it is the start of a new transaction // must be the start of the subtree
WITHOUT_CLASSIFICATION	// We need to call the super.next, instead of this.next, which is done in GenericController, // because if we call this.next(), it will return the TransactionSampler, and we do not want that. // We need to get the next real sampler or controller
WITHOUT_CLASSIFICATION	// Must be the end of the controller
WITHOUT_CLASSIFICATION	// We have sampled one of our children
WITHOUT_CLASSIFICATION	// We must set res to null now, before sending the event for the transaction, // so that we can ignore that event in our sampleOccured method
WITHOUT_CLASSIFICATION	// Check if we are still sampling our children
WITHOUT_CLASSIFICATION	// Accumulate waiting time for later
WITHOUT_CLASSIFICATION	//log.warn("Constructor only intended for use in testing");
WITHOUT_CLASSIFICATION	// ensure name is available for debugging
WITHOUT_CLASSIFICATION	// It is the JMeterThread which knows how to sample a real sampler
WITHOUT_CLASSIFICATION	// Another subsample for the transaction
WITHOUT_CLASSIFICATION	// Set Response code of transaction
WITHOUT_CLASSIFICATION	// The transaction fails if any sub sample fails
WITHOUT_CLASSIFICATION	// Add the sub result to the transaction result
WITHOUT_CLASSIFICATION	// Add current time to total for later use (exclude pause time)
WITHOUT_CLASSIFICATION	// If selected, then generate parent sample, otherwise as per original controller
WITHOUT_CLASSIFICATION	// if selected, add duration of timers to total runtime
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// The Loop Controller panel can be displayed standalone or inside // another panel. For standalone, we want to display the TITLE, NAME, // etc. (everything). However, if we want to display it within another // panel, we just display the Loop Count fields (not the TITLE and // NAME).
WITHOUT_CLASSIFICATION	// The Loop Controller panel can be displayed standalone or inside // another panel. For standalone, we want to display the TITLE, NAME, // etc. (everything). However, if we want to display it within another // panel, we just display the Loop Count fields (not the TITLE and // NAME).
WITHOUT_CLASSIFICATION	// Standalone
WITHOUT_CLASSIFICATION	// Standalone
WITHOUT_CLASSIFICATION	// Embedded
WITHOUT_CLASSIFICATION	// Embedded
WITHOUT_CLASSIFICATION	// TEXT FIELD // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// LOOP LABEL // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// SECONDS LABEL // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TEXT FIELD // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This check-box defines whether to save  WorkBench content or not
WITHOUT_CLASSIFICATION	// FOREVER CHECKBOX // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Don't wrap this error - display it as is
WITHOUT_CLASSIFICATION	// Condition LABEL
WITHOUT_CLASSIFICATION	// limit the changes to client only test elements
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// TEXT FIELD // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Use expression instead of Javascript // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Evaluate All checkbox // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TEXT FIELD // This means exit if last sample failed // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//   Used by both StandardJMeterEngine and ClientJMeterEngine. //   In the latter case, only ResultCollectors are updated, //   as only these are relevant to the client, and updating //   other elements causes all sorts of problems. // skip certain processing for remote tests
WITHOUT_CLASSIFICATION	// Called by JMeter ListenToTest if remoteStop is true
WITHOUT_CLASSIFICATION	// Sent later
WITHOUT_CLASSIFICATION	// Should we create our own copy of the RMI registry?
WITHOUT_CLASSIFICATION	// Create this object using the specified port (0 means anonymous)
WITHOUT_CLASSIFICATION	// should perhaps be log.warn, but this causes the client-server test to fail
WITHOUT_CLASSIFICATION	// Throw an Exception to ensure caller knows ...
WITHOUT_CLASSIFICATION	// close window where another remote client might jump in
WITHOUT_CLASSIFICATION	// sets active = true
WITHOUT_CLASSIFICATION	// Mail on userlist reported NPE here - looks like only happens if there are network errors, but check anyway
WITHOUT_CLASSIFICATION	/*     * Called by:     * - ClientJMeterEngine.exe() which is called on remoteStop      */
WITHOUT_CLASSIFICATION	// Tidy up any objects we created
WITHOUT_CLASSIFICATION	// Help with garbage control
WITHOUT_CLASSIFICATION	// The list of current thread groups; may be setUp, main, or tearDown.
WITHOUT_CLASSIFICATION	// May be null if called from Unit test
WITHOUT_CLASSIFICATION	// May be null if called from Unit test
WITHOUT_CLASSIFICATION	// e.g. not yet started
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	// End of code to allow engine to be controlled remotely
WITHOUT_CLASSIFICATION	// Is testplan serialised?
WITHOUT_CLASSIFICATION	// Can't use for loop here because we remove elements
WITHOUT_CLASSIFICATION	// Deliberate use of deprecated method
WITHOUT_CLASSIFICATION	// we totally failed to stop the test
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	// Allow engine and threads to be stopped from outside a thread // e.g. from beanshell server // Assumes that there is only one instance of the engine // at any one time so it is not guaranteed to work ...
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need synch. here
WITHOUT_CLASSIFICATION	// else will be done by threadFinished()
WITHOUT_CLASSIFICATION	// no point continuing
WITHOUT_CLASSIFICATION	// TL - S&E
WITHOUT_CLASSIFICATION	// Merge in any additional test listeners // currently only used by the function parser
WITHOUT_CLASSIFICATION	// no longer needed
WITHOUT_CLASSIFICATION	// for each thread group, generate threads // hand each thread the sampler controller // and the listeners, and the timer
WITHOUT_CLASSIFICATION	//for each setup thread group
WITHOUT_CLASSIFICATION	//for each setup thread group
WITHOUT_CLASSIFICATION	//wait for all Setup Threads To Exit
WITHOUT_CLASSIFICATION	// The groups have all completed now                
WITHOUT_CLASSIFICATION	/*         * Here's where the test really starts. Run a Full GC now: it's no harm         * at all (just delays test start by a tiny amount) and hitting one too         * early in the test can impair results for short tests.         */
WITHOUT_CLASSIFICATION	// still running at this point, i.e. setUp was not cancelled // for each thread group
WITHOUT_CLASSIFICATION	//wait for all Test Threads To Exit
WITHOUT_CLASSIFICATION	// The groups have all completed now            
WITHOUT_CLASSIFICATION	// wait for Post threads to stop
WITHOUT_CLASSIFICATION	// ConcurrentHashMap does not need protecting
WITHOUT_CLASSIFICATION	// Will be null if StopTest thread has started
WITHOUT_CLASSIFICATION	// Needs to be run in a separate thread to allow RMI call to return OK
WITHOUT_CLASSIFICATION	// Allow RMI to complete
WITHOUT_CLASSIFICATION	// TL - all
WITHOUT_CLASSIFICATION	// don't add the timer
WITHOUT_CLASSIFICATION	// Should we match using regexes?
WITHOUT_CLASSIFICATION	// Created during class init; not modified thereafter 
WITHOUT_CLASSIFICATION	// ignore self
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// i.e. shutdown/stopped during main thread groups // re-enable for tearDown if necessary
WITHOUT_CLASSIFICATION	//ignore Setup and Post here.  We could have filtered the searcher. but then //future Thread Group objects wouldn't execute.
WITHOUT_CLASSIFICATION	// Must not convert TestElement.gui_class etc
WITHOUT_CLASSIFICATION	// end of thread groups // No TGs found
WITHOUT_CLASSIFICATION	// This should be enough to allow server to exit. // default is false
WITHOUT_CLASSIFICATION	// Remote exit // Called by RemoteJMeterEngineImpl.rexit() // and by notifyTestListenersOfEnd() iff exitAfterTest is true; // in turn that is called by the run() method and the StopTest class // also called
WITHOUT_CLASSIFICATION	// Classnames must contain this string [.functions.] // $NON-NLS-1$ // Classnames must not contain this string [.gui.] // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Check can cast for clone // Don't clone NoThreadClone unless honourNoThreadClone == false
WITHOUT_CLASSIFICATION	// clone will produce correct type
WITHOUT_CLASSIFICATION	// Dummy methods needed by Function interface
WITHOUT_CLASSIFICATION	// For use by FunctionHelper
WITHOUT_CLASSIFICATION	// For use by FunctionHelper
WITHOUT_CLASSIFICATION	// Handle escapes
WITHOUT_CLASSIFICATION	// found "${"
WITHOUT_CLASSIFICATION	// i.e. '\\'
WITHOUT_CLASSIFICATION	// save leading text
WITHOUT_CLASSIFICATION	// set to start of string
WITHOUT_CLASSIFICATION	// Function does not exist, so treat as per missing variable
WITHOUT_CLASSIFICATION	// variable, or function with no parameter list
WITHOUT_CLASSIFICATION	// ensure that setParameters() is called.
WITHOUT_CLASSIFICATION	// end of buffer
WITHOUT_CLASSIFICATION	// store the following character
WITHOUT_CLASSIFICATION	// Detect functionName() so this does not generate empty string as the parameter
WITHOUT_CLASSIFICATION	// Normal exit occurs here
WITHOUT_CLASSIFICATION	// Should not happen with StringReader
WITHOUT_CLASSIFICATION	// Dropped out, i.e. did not find closing ')'
WITHOUT_CLASSIFICATION	// Needed for serialisation testing
WITHOUT_CLASSIFICATION	// The default title for the Menu bar
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// Process escaped characters // Store the \
WITHOUT_CLASSIFICATION	// The application name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This is used to keep track of local (non-remote) tests // The name is chosen to be an unlikely host-name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Allow display/hide LoggerPanel
WITHOUT_CLASSIFICATION	// Transparent JButton with no border
WITHOUT_CLASSIFICATION	// Allow display/hide toolbar
WITHOUT_CLASSIFICATION	// file New operation may set to null, so just return app name
WITHOUT_CLASSIFICATION	// Allow display/hide Log Error/Fatal counter
WITHOUT_CLASSIFICATION	// TestStateListener implementation
WITHOUT_CLASSIFICATION	// enable drag&drop, install a custom transfer handler
WITHOUT_CLASSIFICATION	// add the toolbar
WITHOUT_CLASSIFICATION	// Check for file lists specifically
WITHOUT_CLASSIFICATION	// used by AbstractReportGui
WITHOUT_CLASSIFICATION	// helper method - also used by constructor
WITHOUT_CLASSIFICATION	// This stores the state of the TestElement
WITHOUT_CLASSIFICATION	// Ensure we use default bundle
WITHOUT_CLASSIFICATION	// Sampler error action buttons
WITHOUT_CLASSIFICATION	// are we saving the whole tree?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. originally called clear() // @see also Clearable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TEXTAREA
WITHOUT_CLASSIFICATION	// allow for windows / chars in filename // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// BeanInfo objects also contain locale-sensitive data -- flush them // away:
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // define AWT WM_CLASS string
WITHOUT_CLASSIFICATION	// throws HeadlessException
WITHOUT_CLASSIFICATION	// Defaults to continue
WITHOUT_CLASSIFICATION	// space between borders and text
WITHOUT_CLASSIFICATION	/** * Generates Configure pop-up dialogue for Listeners from all methods in SampleSaveConfiguration * with the signature "boolean saveXXX()". * There must be a corresponding "void setXXX(boolean)" method, and a property save_XXX which is * used to name the field on the dialogue. * */
WITHOUT_CLASSIFICATION	// Target server panel
WITHOUT_CLASSIFICATION	// Limit length of log content
WITHOUT_CLASSIFICATION	// If LOGGER_PANEL_MAX_LENGTH is 0, it means all log events are kept
WITHOUT_CLASSIFICATION	// The current node is now updated
WITHOUT_CLASSIFICATION	// Probably a missing jar
WITHOUT_CLASSIFICATION	// Forget about all GUIs we've created so far: we'll need to re-created // them all!
WITHOUT_CLASSIFICATION	// FIrst make sure we save the content of the current GUI (since we // will flush it away):
WITHOUT_CLASSIFICATION	// Should we allow directories?
WITHOUT_CLASSIFICATION	// Enable file revert action if a file is used
WITHOUT_CLASSIFICATION	// If saveWorkBench 
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*     * @see org.apache.jmeter.gui.action.Command#getActionNames()     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Now put the current GUI in place. [This code was copied from the // EditCommand action -- we can't just trigger the action because that // would populate the current node with the contents of the new GUI -- // which is empty.] // Fetch once // Probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	// strPathsOrJars - pathnames or jarfiles to search for classes // classNames - required parent class(es) or annotations // $NON-NLS-1$ // innerClasses - should we include inner classes? // contains - classname should contain this string // Ignore the classes which are specific to the reporting tool // $NON-NLS-1$ // notContains - classname should not contain this string // annotations - true if classnames are annotations
WITHOUT_CLASSIFICATION	// Whether to skip the delete confirmation dialogue // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Save parent node for later
WITHOUT_CLASSIFICATION	//Ignored
WITHOUT_CLASSIFICATION	// set the window visible immediately
WITHOUT_CLASSIFICATION	// N.B. this only reloads if necessary (ignores the reference)
WITHOUT_CLASSIFICATION	// Add this node
WITHOUT_CLASSIFICATION	// Add all the child nodes of the node we are adding
WITHOUT_CLASSIFICATION	// Ensure the dialog is only created when it is first needed // In turn this avoids scanning the templates until first needed
WITHOUT_CLASSIFICATION	// Make sure the file ends with proper extension
WITHOUT_CLASSIFICATION	// Check if the user is trying to save to an existing file
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Prevent instantiation
WITHOUT_CLASSIFICATION	// Prevent instantiation
WITHOUT_CLASSIFICATION	// VK_PLUS + CTRL_DOWN_MASK did not work...
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	// Do not save, user does not want to overwrite
WITHOUT_CLASSIFICATION	// Only update the stored copy of the tree for a full save // refetch, because convertSubTree affects it
WITHOUT_CLASSIFICATION	// package protected to allow access from test code
WITHOUT_CLASSIFICATION	// requires JMeterTreeNode
WITHOUT_CLASSIFICATION	// we can only move a single node
WITHOUT_CLASSIFICATION	// move to the parent
WITHOUT_CLASSIFICATION	// move as a child of the next sibling
WITHOUT_CLASSIFICATION	// Commented as per sebb  // http://mail-archives.apache.org/mod_mbox/jmeter-dev/201307.mbox/%3CCAOGo0VZ0z3GMbfsq_gSB%2Bp7nTUqLng6Gy2ecvYbD8_AKb-Dt5w%40mail.gmail.com%3E
WITHOUT_CLASSIFICATION	// So elements can only be added as children
WITHOUT_CLASSIFICATION	// select the node
WITHOUT_CLASSIFICATION	// We must ask the user if it is ok to close current project
WITHOUT_CLASSIFICATION	// Load the file for this recent file command
WITHOUT_CLASSIFICATION	// Get the preference for the recent files
WITHOUT_CLASSIFICATION	// Create the menu item
WITHOUT_CLASSIFICATION	// Use the index as the name, used when processing the action
WITHOUT_CLASSIFICATION	// Set the KeyStroke to use
WITHOUT_CLASSIFICATION	// Add the menu item
WITHOUT_CLASSIFICATION	// Add separator as the last item
WITHOUT_CLASSIFICATION	// Update menu items to reflect recent files
WITHOUT_CLASSIFICATION	// Update menu items to reflect recent files
WITHOUT_CLASSIFICATION	// Check if the new file is already in the recent list
WITHOUT_CLASSIFICATION	// Add the new file at the start of the list
WITHOUT_CLASSIFICATION	// Remove the last item from the list if it was a brand new file
WITHOUT_CLASSIFICATION	// Store the recent files
WITHOUT_CLASSIFICATION	// Assume no recent files
WITHOUT_CLASSIFICATION	// Update the menu items
WITHOUT_CLASSIFICATION	// Get the menu item
WITHOUT_CLASSIFICATION	// At least one recent file menu item is visible
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ // reduce font
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.action.AbstractAction#getActionNames()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.action.AbstractAction#doAction(java.awt.event.ActionEvent)     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// reset previous result
WITHOUT_CLASSIFICATION	// Hide Window on ESC
WITHOUT_CLASSIFICATION	// Do not save, user does not want to overwrite
WITHOUT_CLASSIFICATION	// Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	// Limit the length of the menu text if needed
WITHOUT_CLASSIFICATION	// If we are merging in another test plan, we know the test plan is dirty now
WITHOUT_CLASSIFICATION	// Only check if we have not found any differences so far
WITHOUT_CLASSIFICATION	// Do search on Enter
WITHOUT_CLASSIFICATION	// do search
WITHOUT_CLASSIFICATION	// Don't clear the plan
WITHOUT_CLASSIFICATION	// Get the file name of the current project
WITHOUT_CLASSIFICATION	// Check if the user has loaded any file
WITHOUT_CLASSIFICATION	// Check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	// Check if the user wants to revert
WITHOUT_CLASSIFICATION	// Close the current project
WITHOUT_CLASSIFICATION	// Reload the project
WITHOUT_CLASSIFICATION	// Spaces are not allowed in property names read from files
WITHOUT_CLASSIFICATION	// e.g. windows xp => windows
WITHOUT_CLASSIFICATION	// get the JComponent from the visualizer
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ jmeter.properties
WITHOUT_CLASSIFICATION	// Engine may be null if it has not correctly started
WITHOUT_CLASSIFICATION	// GuiPackage.getInstance().getMainFrame().showStoppingMessage(name);
WITHOUT_CLASSIFICATION	// Minimal dimensions for dialog box
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Don't clear the plan
WITHOUT_CLASSIFICATION	// Check if the user wants to drop any changes
WITHOUT_CLASSIFICATION	// Get the string given from the choose and check // the file extension.
WITHOUT_CLASSIFICATION	// Check if the user wants to create from template
WITHOUT_CLASSIFICATION	// Bottom buttons bar
WITHOUT_CLASSIFICATION	// center position and 50% of screen size
WITHOUT_CLASSIFICATION	// Created by XStream reading templates.xml
WITHOUT_CLASSIFICATION	/*         * N.B. Must use LinkedHashMap for field type         * XStream creates a plain HashMap if one uses Map as the field type.         */
WITHOUT_CLASSIFICATION	// templates i
WITHOUT_CLASSIFICATION	// field TemplateManager#templates  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// field Template#name  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// for relative links
WITHOUT_CLASSIFICATION	// i.e. no disabled icon found
WITHOUT_CLASSIFICATION	// Must therefore set the enabled icon so there is at least some // icon
WITHOUT_CLASSIFICATION	//        super(new JMeterTreeNode(new WorkBenchGui().createTestElement(), null)); //        TestElement tp = new TestPlanGui().createTestElement(); //        initTree(tp);
WITHOUT_CLASSIFICATION	//      super(new JMeterTreeNode(new WorkBench(), null)); //      TestElement tp = new TestPlan(); //      initTree(tp, new WorkBench());
WITHOUT_CLASSIFICATION	// The node can be added in non GUI mode at startup
WITHOUT_CLASSIFICATION	// Remove the workbench and testplan nodes
WITHOUT_CLASSIFICATION	// Insert the test plan node
WITHOUT_CLASSIFICATION	// endWindow = window;
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Check for file lists specifically
WITHOUT_CLASSIFICATION	// Check for file lists specifically
WITHOUT_CLASSIFICATION	// This check the state of the TestElement and if returns false it // disable the loaded node
WITHOUT_CLASSIFICATION	// Init the tree // Assumes this is only called from GUI mode
WITHOUT_CLASSIFICATION	// Let others know that the tree content has changed. // This should not be necessary, but without it, nodes are not shown when the user // uses the Close menu item
WITHOUT_CLASSIFICATION	// Container endWindow; // JPopupMenu pop;
WITHOUT_CLASSIFICATION	// Get the Main Frame.
WITHOUT_CLASSIFICATION	// Close any Main Menu that is open
WITHOUT_CLASSIFICATION	// updateMainMenu(((JMeterGUIComponent) // getCurrentNode().getUserObject()).createPopupMenu());
WITHOUT_CLASSIFICATION	// hold the nodes that should be removed on drop
WITHOUT_CLASSIFICATION	// only allow a drag&drop inside the current jvm
WITHOUT_CLASSIFICATION	// sort the selected tree path by row
WITHOUT_CLASSIFICATION	// if child and a parent are selected : only keep the parent
WITHOUT_CLASSIFICATION	// remove unneeded nodes
WITHOUT_CLASSIFICATION	// the tree accepts a jmx file 
WITHOUT_CLASSIFICATION	// the copy is disabled
WITHOUT_CLASSIFICATION	// Do not allow a drop on the drag source selections.
WITHOUT_CLASSIFICATION	// TestPlan and WorkBench are the only children of the root
WITHOUT_CLASSIFICATION	// Do not allow a non-leaf node to be moved into one of its children
WITHOUT_CLASSIFICATION	// re-use node association logic
WITHOUT_CLASSIFICATION	// deal with the jmx files
WITHOUT_CLASSIFICATION	// Get drop location and mode
WITHOUT_CLASSIFICATION	// drop mode == DropMode.ON
WITHOUT_CLASSIFICATION	// first copy the children as the call to copy.add will modify the collection we're iterating on
WITHOUT_CLASSIFICATION	// expand the destination node
WITHOUT_CLASSIFICATION	// If icon has not been defined, then use GUI_CLASS property
WITHOUT_CLASSIFICATION	// may be null during startup
WITHOUT_CLASSIFICATION	// Override in order to provide type safety
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// close.setPreferredSize(d);
WITHOUT_CLASSIFICATION	/*         * c.gridx = 1; c.gridy = 2; g.setConstraints(close, c);         * panel.add(close);         */
WITHOUT_CLASSIFICATION	// JFileChooser jfc = null;
WITHOUT_CLASSIFICATION	// for use by test code only
WITHOUT_CLASSIFICATION	// // Instance Variables //
WITHOUT_CLASSIFICATION	// // Constructors //
WITHOUT_CLASSIFICATION	// // Modifying //
WITHOUT_CLASSIFICATION	// // Override the implementations of the superclass, forwarding all methods // from the CellEditor interface to our delegate. //
WITHOUT_CLASSIFICATION	// // Implementing the TreeCellEditor Interface //
WITHOUT_CLASSIFICATION	// // Implementing the CellEditor Interface //
WITHOUT_CLASSIFICATION	// // Protected EditorDelegate class //
WITHOUT_CLASSIFICATION	// This won't work right if we remove components. But we don't, so I'm // not going to worry about it right now.
WITHOUT_CLASSIFICATION	// Datefields are not thread-safe // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// HELP MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// OPTIONS MENU //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Dummy constructor to allo JUnit tests to work
WITHOUT_CLASSIFICATION	// Do nothing; the current time will be returned
WITHOUT_CLASSIFICATION	/*     * Convert position in buffer to Calendar type Assumes that pos >=0 (which     * is true for getCaretPosition())     */
WITHOUT_CLASSIFICATION	// if beyond the end // then set to the end
WITHOUT_CLASSIFICATION	/*     * Update the current field. The addend is only expected to be +1/-1, but     * other values will work. N.B. the roll() method only supports changes by a     * single unit - up or down     */
WITHOUT_CLASSIFICATION	// JMenu reportMenu; // JMenuItem analyze;
WITHOUT_CLASSIFICATION	// Restore position
WITHOUT_CLASSIFICATION	// List for recent files menu items
WITHOUT_CLASSIFICATION	// Lists for remote engines menu items
WITHOUT_CLASSIFICATION	// If the Add menu already exists, remove it.
WITHOUT_CLASSIFICATION	// Insert the Add menu as the first menu item in the Edit menu.
WITHOUT_CLASSIFICATION	// Called by MainFrame#setEditMenu() which is called by EditCommand#doAction and GuiPackage#localeChanged
WITHOUT_CLASSIFICATION	// There was a NPE being thrown without the null check here.. JKB
WITHOUT_CLASSIFICATION	// If we are enabling the Edit-->Add menu item, then we also need to // enable the Edit menu. The Edit menu may already be enabled, but // there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	// show the classname to the user
WITHOUT_CLASSIFICATION	// This is used by the ChangeLanguage class to define the Locale
WITHOUT_CLASSIFICATION	// Also used by org.apache.jmeter.resources.PackageTest
WITHOUT_CLASSIFICATION	/*         * Note: the item name is used by ChangeLanguage to create a Locale for         * that language, so need to ensure that the language strings are valid         * If they exist, use the Locale language constants.         * Also, need to ensure that the names are valid resource entries too.         */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//Overrides superclass method
WITHOUT_CLASSIFICATION	// From the Java Look and Feel Guidelines: If all items in a menu // are disabled, then disable the menu. Makes sense.
WITHOUT_CLASSIFICATION	// Listener on model changes to maintain correct focusability
WITHOUT_CLASSIFICATION	// Add the recent files, which will also add a separator that is // visible when needed
WITHOUT_CLASSIFICATION	// override action behaviour
WITHOUT_CLASSIFICATION	// This is also used by LookAndFeelCommand
WITHOUT_CLASSIFICATION	// For testing only at present
WITHOUT_CLASSIFICATION	// Mostly delegates to model
WITHOUT_CLASSIFICATION	//Set default single model
WITHOUT_CLASSIFICATION	// Next two methods implement new API by delegation to model
WITHOUT_CLASSIFICATION	// Restore state display
WITHOUT_CLASSIFICATION	//Listen for enable changes
WITHOUT_CLASSIFICATION	//Empty override of superclass method
WITHOUT_CLASSIFICATION	//Convenience cast
WITHOUT_CLASSIFICATION	// Assume that the UI has not changed since the checkbos was created
WITHOUT_CLASSIFICATION	// Iterate state
WITHOUT_CLASSIFICATION	// Overrides of superclass methods
WITHOUT_CLASSIFICATION	// Fire ActionEvent
WITHOUT_CLASSIFICATION	// force the events to fire
WITHOUT_CLASSIFICATION	// Empty overrides of superclass methods
WITHOUT_CLASSIFICATION	// Send ItemEvent
WITHOUT_CLASSIFICATION	//Set internal state
WITHOUT_CLASSIFICATION	// Send ChangeEvent
WITHOUT_CLASSIFICATION	// derived from: http://www.coderanch.com/t/342563/GUI/java/TriState-CheckBox
WITHOUT_CLASSIFICATION	// Nimbus works - after a fashion - with this
WITHOUT_CLASSIFICATION	//            drawCross(g, x, y);
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$;
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// href="#"
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This won't work right if we remove components. But we don't, so I'm // not going to worry about it right now.
WITHOUT_CLASSIFICATION	/*     *  Predefined strings for makeMenu().     *  These are used as menu categories in the menuMap Hashmap,     *  and also for resource lookup in messages.properties    */
WITHOUT_CLASSIFICATION	// Needed for all but Nimbus // Nimbus works - after a fashion - with this // Nimbus works - after a fashion - with this // reset
WITHOUT_CLASSIFICATION	//        private void drawCross(Graphics g, int x, int y) { //            g.drawLine(x + (iconWidth - 4), y + 2, x + 3, y + (iconHeight - 5)); //            g.drawLine(x + (iconWidth - 4), y + 3, x + 3, y + (iconHeight - 4)); //            g.drawLine(x + 3, y + 2, x + (iconWidth - 4), y + (iconHeight - 5)); //            g.drawLine(x + 3, y + 3, x + (iconWidth - 4), y + (iconHeight - 4)); //        }
WITHOUT_CLASSIFICATION	// paintIcon
WITHOUT_CLASSIFICATION	// For use by test code only
WITHOUT_CLASSIFICATION	// MENU_ADD_xxx - controls which items are in the ADD menu // MENU_PARENT_xxx - controls which items are in the Insert Parent menu
WITHOUT_CLASSIFICATION	// if type is unknown
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // Don't try to instantiate these
WITHOUT_CLASSIFICATION	// No point instantiating class
WITHOUT_CLASSIFICATION	// Allow headless testing
WITHOUT_CLASSIFICATION	// Don't add it again
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Empty box //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Can't add a Workbench anywhere
WITHOUT_CLASSIFICATION	// Can't add a TestPlan anywhere
WITHOUT_CLASSIFICATION	// Force TestFragment to only be pastable under a Test Plan
WITHOUT_CLASSIFICATION	// allow everything else
WITHOUT_CLASSIFICATION	// Samplers and Controllers need not apply ... // but AbstractThreadGroup (Controller) is OK
WITHOUT_CLASSIFICATION	// AbstractThreadGroup is only allowed under a TestPlan
WITHOUT_CLASSIFICATION	// Includes thread group; anything goes
WITHOUT_CLASSIFICATION	// Samplers and Controllers need not apply ...
WITHOUT_CLASSIFICATION	// All other
WITHOUT_CLASSIFICATION	// Is any node an instance of one of the classes?
WITHOUT_CLASSIFICATION	// Is any node an instance of one of the classes, but not an exception?
WITHOUT_CLASSIFICATION	// Methods used for Test cases
WITHOUT_CLASSIFICATION	// all table cells are editable
WITHOUT_CLASSIFICATION	// Close action dialog box when tapping Escape key
WITHOUT_CLASSIFICATION	// Prepare dialog box
WITHOUT_CLASSIFICATION	// determine location on screen
WITHOUT_CLASSIFICATION	// must be CLOSE or SAVE_CLOSE COMMANDS
WITHOUT_CLASSIFICATION	// text backup
WITHOUT_CLASSIFICATION	// double click
WITHOUT_CLASSIFICATION	// view only
WITHOUT_CLASSIFICATION	// double (pressed) click
WITHOUT_CLASSIFICATION	// in main table (evt mousePressed because cell is editable) 
WITHOUT_CLASSIFICATION	// else do nothing (cell isn't a string to edit)
WITHOUT_CLASSIFICATION	// add the button to the button group
WITHOUT_CLASSIFICATION	// add the button
WITHOUT_CLASSIFICATION	// implicit return empty toolbar if icons == null
WITHOUT_CLASSIFICATION	// Get the standard toolbar properties
WITHOUT_CLASSIFICATION	// already reported by IconToolbarBean
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// in seconds
WITHOUT_CLASSIFICATION	// in seconds
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	//this.setPreferredSize(new Dimension(400,150));
WITHOUT_CLASSIFICATION	// i.e. bypass the Functors
WITHOUT_CLASSIFICATION	// Mainly needed for unit test Serialisable tests
WITHOUT_CLASSIFICATION	/*     * N.B. NoThreadClone is used to ensure that the testStarted() methods will share the same     * instance as the sampleOccured() methods, so the testStarted() method can fetch the     * Totals accumulator object for the samples to be stored in.     */
WITHOUT_CLASSIFICATION	/*     * Ensure that a report is not skipped if we are slightly late in checking     * the time.     */
WITHOUT_CLASSIFICATION	/*     * This map allows summarisers with the same name to contribute to the same totals.     */
WITHOUT_CLASSIFICATION	//@GuardedBy("accumulators") - needed to ensure consistency between this and instanceCount
WITHOUT_CLASSIFICATION	//@GuardedBy("accumulators") // number of active tests
WITHOUT_CLASSIFICATION	/*     * Cached copy of Totals for this instance.     * The variables do not need to be synchronised,     * as they are not shared between threads     * However the contents do need to be synchronized.     */
WITHOUT_CLASSIFICATION	//@GuardedBy("myTotals")
WITHOUT_CLASSIFICATION	// Name of the accumulator. Set up by testStarted().
WITHOUT_CLASSIFICATION	/*     * Constructor is initially called once for each occurrence in the test plan.     * For GUI, several more instances are created.     * Then clear is called at start of test.     * Called several times during test startup.     * The name will not necessarily have been set at this point.     */
WITHOUT_CLASSIFICATION	/*     * Contains the items needed to collect stats for a summariser     *     */
WITHOUT_CLASSIFICATION	// copy the data to minimise the synch time
WITHOUT_CLASSIFICATION	// stop double-reporting
WITHOUT_CLASSIFICATION	// Only if we have updated them
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // for intermediate use // output line buffer
WITHOUT_CLASSIFICATION	// Rate is effectively infinite
WITHOUT_CLASSIFICATION	// e.g. NullPointerException
WITHOUT_CLASSIFICATION	// Avalon only
WITHOUT_CLASSIFICATION	// Avalon only
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Only print final delta if there were some samples in the delta // and there has been at least one sample reported previously
WITHOUT_CLASSIFICATION	// rounded seconds // No point displaying decimals (less than 1% error) // decimal would be zero
WITHOUT_CLASSIFICATION	// fractional seconds // This will round
WITHOUT_CLASSIFICATION	/*     * The testStarted/testEnded methods are called at the start and end of a test.     *     * However, when a test is run on multiple nodes, there is no guarantee that all the     * testStarted() methods will be called before all the threadStart() or sampleOccurred()     * methods for other threads - nor that testEnded() will only be called after all     * sampleOccurred() calls. The ordering is only guaranteed within a single test.     *     */
WITHOUT_CLASSIFICATION	// We're not done yet
WITHOUT_CLASSIFICATION	// boolean autoScale = true;
WITHOUT_CLASSIFICATION	// setup drawing area
WITHOUT_CLASSIFICATION	// draw grid
WITHOUT_CLASSIFICATION	// draw axis
WITHOUT_CLASSIFICATION	// draw data lines
WITHOUT_CLASSIFICATION	/*     * Constructor is initially called once for each occurrence in the test plan     * For GUI, several more instances are created Then clear is called at start     * of test Called several times during test startup The name will not     * necessarily have been set at this point.     */
WITHOUT_CLASSIFICATION	// e.g. in non-GUI mode
WITHOUT_CLASSIFICATION	// This string is used to identify local test runs, so must not be a valid host name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Static variables
WITHOUT_CLASSIFICATION	// Lock used to guard static mutable variables
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	/*     * Keep track of the file writer and the configuration,     * as the instance used to close them is not the same as the instance that creates     * them. This means one cannot use the saved PrintWriter or use getSaveConfig()     */
WITHOUT_CLASSIFICATION	// Instance variables (guarded by volatile)
WITHOUT_CLASSIFICATION	// Unfortunately AbstractTestElement does not call super.clone()
WITHOUT_CLASSIFICATION	// successOnly and errorOnly cannot both be set
WITHOUT_CLASSIFICATION	// No need for the hook now
WITHOUT_CLASSIFICATION	// Only add the hook once
WITHOUT_CLASSIFICATION	// No point reading the file if there's no visualiser
WITHOUT_CLASSIFICATION	// probably Avalon format
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Only for use by CSVSaveService
WITHOUT_CLASSIFICATION	/*     * Constructor is initially called once for each occurrence in the test plan     * For GUI, several more instances are created Then clear is called at start     * of test Called several times during test startup The name will not     * necessarily have been set at this point.     */
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	// We are processing XML // Assume XStream
WITHOUT_CLASSIFICATION	// Ensure that the sample save config is not shared between copied nodes // N.B. clone only seems to be used for client-server tests
WITHOUT_CLASSIFICATION	// Find the name of the directory containing the file // and create it - if there is one
WITHOUT_CLASSIFICATION	// TODO Charset ? // Get the first line, and see if it is XML
WITHOUT_CLASSIFICATION	// Can't do it as a static initialisation, because SaveService // is being constructed when this is called
WITHOUT_CLASSIFICATION	// Write the EOL separately so we generate LF line ends on Unix and Windows // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Write the EOL separately so we generate LF line ends on Unix and Windows // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Added in version 1.1 // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// returns false if directory already exists, so need to check again
WITHOUT_CLASSIFICATION	// else if might have been created by another process so not a problem
WITHOUT_CLASSIFICATION	// returns false if the file did not contain the terminator
WITHOUT_CLASSIFICATION	// found the string
WITHOUT_CLASSIFICATION	// reads to end of line OR end of file
WITHOUT_CLASSIFICATION	// !saveAsXml
WITHOUT_CLASSIFICATION	// Truncate the file
WITHOUT_CLASSIFICATION	// should throw exception back to caller
WITHOUT_CLASSIFICATION	// Used by: MonitorHealthVisualizer.add(SampleResult res)
WITHOUT_CLASSIFICATION	//+ JMX property names; do not change
WITHOUT_CLASSIFICATION	//- JMX property names
WITHOUT_CLASSIFICATION	/*     * Constructor for use during startup (intended for non-GUI use) @param name     * of summariser     */
WITHOUT_CLASSIFICATION	/*     * This is called once for each occurrence in the test plan, before the     * start of the test. The super.clear() method clears the name (and all     * other properties), so it is called last.     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	//NOTUSED private static final String DATABASE = "db"; // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Only for use by CSVSaveService
WITHOUT_CLASSIFICATION	// Associate sample with file name
WITHOUT_CLASSIFICATION	// Mutable int to keep track of sample count
WITHOUT_CLASSIFICATION	// chunk the output if necessary
WITHOUT_CLASSIFICATION	// Should we save the sample?
WITHOUT_CLASSIFICATION	// finish processing samples
WITHOUT_CLASSIFICATION	// Needed to avoid Class cast error in Clear.java
WITHOUT_CLASSIFICATION	// may be the empty string
WITHOUT_CLASSIFICATION	// client log file
WITHOUT_CLASSIFICATION	/* * N.B. to add a new field, remember the following * - static _xyz * - instance xyz=_xyz * - clone s.xyz = xyz (perhaps) * - setXyz(boolean) * - saveXyz() * - update SampleSaveConfigurationConverter to add new fields to marshall() and shouldSerialiseMember() * - update SampleResultConverter and/or HTTPSampleConverter * - update CSVSaveService: CSV_XXXX, makeResultFromDelimitedString, printableFieldNamesToString, static{} * - update messages.properties to add save_xyz entry * - update jmeter.properties to add new property * - update listeners.xml to add new property, CSV and XML names etc. * - take screenshot sample_result_config.png * - update listeners.xml and component_reference.xml with new dimensions (might not change) * */
WITHOUT_CLASSIFICATION	// Not currently needed by any Remoteable classes // Anyway, would probably be too expensive in terms of network traffic //  // void testIterationStart(LoopIterationEvent event);
WITHOUT_CLASSIFICATION	// ensure output is flushed
WITHOUT_CLASSIFICATION	// server log file
WITHOUT_CLASSIFICATION	/** * Holds details of which sample attributes to save. * * The pop-up dialogue for this is created by the class SavePropertyDialog, which assumes: * For each field XXX * - methods have the signature "boolean saveXXX()" * - a corresponding "void setXXX(boolean)" method * - messages.properties contains the key save_XXX * * */
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// --------------------------------------------------------------------- // PROPERTY FILE CONSTANTS // ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Initialise values from properties
WITHOUT_CLASSIFICATION	// Save bytes read // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Save URL // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Save fileName for ResultSaver // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Save hostname for ResultSaver // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Don't save this, as it is derived from the time format
WITHOUT_CLASSIFICATION	// $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$ // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// Prepare for a pretty date
WITHOUT_CLASSIFICATION	/* Make transient as we don't want to save the SimpleDataFormat class     * Also, there's currently no way to change the value via the GUI, so changing it     * later means editting the JMX, or recreating the Listener.     */
WITHOUT_CLASSIFICATION	// Defaults from properties:
WITHOUT_CLASSIFICATION	// reversed compare allows for null
WITHOUT_CLASSIFICATION	// Don't save this, as not settable via GUI
WITHOUT_CLASSIFICATION	// Don't save this - only needed for processing CSV headers currently
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// optional processing instruction for line 2; e.g. // <?xml-stylesheet type="text/xsl" href="../extras/jmeter-results-detail-report_21.xsl"?> // $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$ // N.B. Remember to update the equals and hashCode methods when adding new variables.
WITHOUT_CLASSIFICATION	// Give access to initial configuration
WITHOUT_CLASSIFICATION	//is derived from properties only
WITHOUT_CLASSIFICATION	// We know we are comparing to another SampleSaveConfiguration
WITHOUT_CLASSIFICATION	///////////////////// Start of standard save/set access methods /////////////////////
WITHOUT_CLASSIFICATION	// as per 2.0 branch
WITHOUT_CLASSIFICATION	///////////////// End of standard field accessors /////////////////////
WITHOUT_CLASSIFICATION	// maintain relationship
WITHOUT_CLASSIFICATION	// Defaults to empty;
WITHOUT_CLASSIFICATION	// Used by old Save service
WITHOUT_CLASSIFICATION	// Used by SampleSaveConfigurationConverter.unmarshall()
WITHOUT_CLASSIFICATION	// Get appropriate sender class governed by the behaviour set in the JMeter property
WITHOUT_CLASSIFICATION	// Static fields are set by the server when the class is constructed
WITHOUT_CLASSIFICATION	// @GuardedBy("sampleStore")
WITHOUT_CLASSIFICATION	// Locate the statistical sample colector
WITHOUT_CLASSIFICATION	// store the new statistical result collector
WITHOUT_CLASSIFICATION	// add a new wrapper samplevent
WITHOUT_CLASSIFICATION	// Checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	// synchronized(sampleStore)
WITHOUT_CLASSIFICATION	// List of variable names to be saved in JTL files
WITHOUT_CLASSIFICATION	// The values. Entries may be null, but there will be the correct number.
WITHOUT_CLASSIFICATION	// The hostname cannot change during a run, so safe to cache it just once
WITHOUT_CLASSIFICATION	/*     * Only for Unit tests     */
WITHOUT_CLASSIFICATION	// Needs to be accessible from Test code
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//OK
WITHOUT_CLASSIFICATION	// variables maintained by server code // @GuardedBy("sampleStore") // maintain separate count of samples for speed
WITHOUT_CLASSIFICATION	/* The default used by {@link #setResponseData(String, String)} */
WITHOUT_CLASSIFICATION	/* empty arrays which can be returned instead of null */
WITHOUT_CLASSIFICATION	// Never return null
WITHOUT_CLASSIFICATION	// Never return null
WITHOUT_CLASSIFICATION	// Never return null
WITHOUT_CLASSIFICATION	// Never return null
WITHOUT_CLASSIFICATION	// e.g. text/html; charset=utf-8
WITHOUT_CLASSIFICATION	// TODO timeStamp == 0 means either not yet initialised or no stamp available (e.g. when loading a results file)
WITHOUT_CLASSIFICATION	// Allow for non-sample time
WITHOUT_CLASSIFICATION	// Don't return null if not set
WITHOUT_CLASSIFICATION	//@GuardedBy("this"")
WITHOUT_CLASSIFICATION	// (is this really the character set?) e.g. // ISO-8895-1, UTF-8
WITHOUT_CLASSIFICATION	// Allows override of sample size in case sampler does not want to store all the data
WITHOUT_CLASSIFICATION	// Allow read-only access from test code
WITHOUT_CLASSIFICATION	// How long between checks of nanotime; default 5000ms; set to <=0 to disable the thread
WITHOUT_CLASSIFICATION	// $NON-NLS-1$;
WITHOUT_CLASSIFICATION	// Make sure we start with a reasonable value
WITHOUT_CLASSIFICATION	// Allow testcode access to the settings
WITHOUT_CLASSIFICATION	// Allow test code to change the default useNanoTime setting
WITHOUT_CLASSIFICATION	// Allow test code to change the default useNanoTime and nanoThreadSleep settings
WITHOUT_CLASSIFICATION	// Helper method to get 1 ms resolution timing.
WITHOUT_CLASSIFICATION	// Helper method to maintain timestamp relationships
WITHOUT_CLASSIFICATION	/*     * For use by SaveService only.     *     * @param stamp -     *            this may be a start time or an end time     * @param elapsed     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//OK // TODO ??
WITHOUT_CLASSIFICATION	// Create unique object as marker for end of queue
WITHOUT_CLASSIFICATION	//OK //OK //OK //OK // files is created automatically, and applies per instance //OK
WITHOUT_CLASSIFICATION	//OK //OK //OK
WITHOUT_CLASSIFICATION	//OK //OK // Don't copy this; it is per instance resultFileName = res.resultFileName;
WITHOUT_CLASSIFICATION	// TODO ?? //OK //OK
WITHOUT_CLASSIFICATION	// N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	// N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	// Extract charset and store as DataEncoding // N.B. The meta tag: // <META http-equiv="content-type" content="text/html; charset=foobar"> // is now processed by HTTPSampleResult#getDataEncodingWithDefault // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// handle: ContentType: text/plain; charset=ISO-8859-1; format=flowed
WITHOUT_CLASSIFICATION	// Check for quoted string // $NON-NLS-1$ // remove quotes
WITHOUT_CLASSIFICATION	// List of types that are known to be binary
WITHOUT_CLASSIFICATION	// List of types that are known to be ascii, although they may appear to be binary
WITHOUT_CLASSIFICATION	/*     * Determine if content-type is known to be binary, i.e. not displayable as text.     *     * @param ct content type     * @return true if content-type is of type binary.     */
WITHOUT_CLASSIFICATION	/*     * Helper methods N.B. setStartTime must be called before setEndTime     *     * setStartTime is used by HTTPSampleResult to clone the parent sampler and     * allow the original start time to be kept     */
WITHOUT_CLASSIFICATION	// how many times we had to wait to queue a sample
WITHOUT_CLASSIFICATION	// Can now afford to wait a bit longer between checks
WITHOUT_CLASSIFICATION	// created by client 
WITHOUT_CLASSIFICATION	// created by server in readResolve method
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Note: this is an instance field (and is not transient), so is created by the JMeter client // and propagated to the server instance by RMI. // [a static field would be recreated on the server, and would pick up the server properties] // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// client        
WITHOUT_CLASSIFICATION	// client log file
WITHOUT_CLASSIFICATION	// server log file
WITHOUT_CLASSIFICATION	// Checking for and creating initial timestamp to check against
WITHOUT_CLASSIFICATION	// synchronized(sampleStore)
WITHOUT_CLASSIFICATION	// how long we had to wait (nanoSeconds)
WITHOUT_CLASSIFICATION	// for reading from CSV files // ignored currently
WITHOUT_CLASSIFICATION	// returns null if nothing on queue currently
WITHOUT_CLASSIFICATION	// Wait longer than a clock pulse (generally 10-15ms) // Catch an early clock pulse to reduce slop.
WITHOUT_CLASSIFICATION	// OK because sampleStore is of type ArrayList<SampleEvent>
WITHOUT_CLASSIFICATION	// Created by SampleSenderFactory
WITHOUT_CLASSIFICATION	//Strip the response data before writing, but only for a successful request.
WITHOUT_CLASSIFICATION	// we failed to add the element first time
WITHOUT_CLASSIFICATION	// server        
WITHOUT_CLASSIFICATION	// try to process as many as possible
WITHOUT_CLASSIFICATION	// Compute bytes before stripping
WITHOUT_CLASSIFICATION	// Configuration items, set up by readResolve
WITHOUT_CLASSIFICATION	// should be a user provided class name
WITHOUT_CLASSIFICATION	// Static fields are resolved on the server
WITHOUT_CLASSIFICATION	// instance fields are copied from the client instance
WITHOUT_CLASSIFICATION	// Set clonedSet;
WITHOUT_CLASSIFICATION	// Server-only work item
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Extended property name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// clonedSet = new HashSet();
WITHOUT_CLASSIFICATION	// Need to maintain our own elapsed timer to ensure more accurate aggregation
WITHOUT_CLASSIFICATION	// May be called by XStream
WITHOUT_CLASSIFICATION	// Copy data that is shared between samples (i.e. the key items):
WITHOUT_CLASSIFICATION	// Assume result is OK // because we add the sample count in later
WITHOUT_CLASSIFICATION	// Add Sample Counter
WITHOUT_CLASSIFICATION	// Add Error Counter
WITHOUT_CLASSIFICATION	// Overrides SampleResult
WITHOUT_CLASSIFICATION	// for reading CSV files
WITHOUT_CLASSIFICATION	// superclass is not typed
WITHOUT_CLASSIFICATION	// Ensure output follows version
WITHOUT_CLASSIFICATION	// Names of DataHolder entries for JTL processing // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Names of DataHolder entries for JMX processing // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Override wrapMapper in order to insert the Wrapper in the chain
WITHOUT_CLASSIFICATION	// Provide our own aliasing using strings rather than classes
WITHOUT_CLASSIFICATION	// Translate alias to classname and then delegate to wrapped class
WITHOUT_CLASSIFICATION	// Translate to alias and then delegate to wrapped class
WITHOUT_CLASSIFICATION	// superclass does not use types 
WITHOUT_CLASSIFICATION	// was type, but that caused FindBugs warning
WITHOUT_CLASSIFICATION	// This is needed to stop XStream keeping copies of each class
WITHOUT_CLASSIFICATION	// The XML header, with placeholder for encoding, since that is controlled by property // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default file name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Property name used to define file name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default to overall format, and then to version 2.2
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Define file format property names // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Define file format versions // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Holds the mappings from the saveservice properties file // Key: alias Entry: full class name // There may be multiple aliases which map to the same class
WITHOUT_CLASSIFICATION	// Holds the reverse mappings // Key: full class name Entry: primary alias
WITHOUT_CLASSIFICATION	// This is written to JMX files by ScriptWrapperConverter // read from properties file; written to JMX files
WITHOUT_CLASSIFICATION	// Must match _version property value in saveservice.properties // used to ensure saveservice.properties and SaveService are updated simultaneously // Expected version $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Internal information only // read from saveservice.properties file// $NON-NLS-1$ // Must match Revision id value in saveservice.properties,  // used to ensure saveservice.properties and SaveService are updated simultaneously // Expected value $NON-NLS-1$ // read from properties file// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Helper method to simplify alias creation from properties
WITHOUT_CLASSIFICATION	// Can have multiple aliases for same target classname
WITHOUT_CLASSIFICATION	// Load the alias properties
WITHOUT_CLASSIFICATION	// now create the aliases
WITHOUT_CLASSIFICATION	// Remove the leading "_"
WITHOUT_CLASSIFICATION	// For converters to use
WITHOUT_CLASSIFICATION	// Called by Save function
WITHOUT_CLASSIFICATION	// Get the OutputWriter to use
WITHOUT_CLASSIFICATION	// Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	// Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	// Ensure terminated properly
WITHOUT_CLASSIFICATION	// Used by Test code
WITHOUT_CLASSIFICATION	// Used by Test code
WITHOUT_CLASSIFICATION	// Get the InputReader to use
WITHOUT_CLASSIFICATION	// Used by ResultCollector.sampleOccurred(SampleEvent event)
WITHOUT_CLASSIFICATION	// Used by ResultCollector#recordStats()
WITHOUT_CLASSIFICATION	// Routines for TestSaveService
WITHOUT_CLASSIFICATION	// Allow test code to check for spurious class references
WITHOUT_CLASSIFICATION	//boolean OK = true;
WITHOUT_CLASSIFICATION	// don't bother checking class is present if it is to be updated
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Extract version digits from String of the form #Revision: n.mm # // (where # is actually $ above)
WITHOUT_CLASSIFICATION	// Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	// Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	// Check if we have a encoding to use from properties
WITHOUT_CLASSIFICATION	// We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	// We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	// We use the default character set encoding of the JRE
WITHOUT_CLASSIFICATION	// Used by ResultCollector when creating output files
WITHOUT_CLASSIFICATION	// Write XML header if we have the charset to use for encoding
WITHOUT_CLASSIFICATION	// We do not use getEncoding method of Writer, since that returns // the historical name
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// --------------------------------------------------------------------- // XML RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS // ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// Used by ScriptWrapperConverter
WITHOUT_CLASSIFICATION	// Shared with TestElementSaver // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Probably no point in converting this to return a SampleEvent
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Called by SaveService.loadTree(InputStream reader) if XStream loading fails
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// OK // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Do upgrade translation:
WITHOUT_CLASSIFICATION	// must always agree
WITHOUT_CLASSIFICATION	// Delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	// Create the property:
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Called by ResultCollector#loadExistingFile() if XStream loading fails
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// --------------------------------------------------------------------- // ADDITIONAL CSV RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS // ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used to enclose variable name labels, to distinguish from any of the // above labels // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Initial config from properties
WITHOUT_CLASSIFICATION	// Date formats to try if the time format does not parse as milliseconds
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ (for compatibility, this is the original default)
WITHOUT_CLASSIFICATION	// Enough to read the header column names // Get the first line, and see if it is the header
WITHOUT_CLASSIFICATION	// not a valid header
WITHOUT_CLASSIFICATION	// may change the format later // restart from beginning
WITHOUT_CLASSIFICATION	// may be updated
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This assumes the header names are all single words with no spaces // word followed by 0 or more repeats of (non-word char + word) // where the non-word char (\2) is the same // e.g. abc|def|ghi but not abd|def~ghi // $NON-NLS-1$ // last entries may be quoted strings
WITHOUT_CLASSIFICATION	// Save the name for error reporting
WITHOUT_CLASSIFICATION	// method is only ever called from one thread at a time // so it's OK to use a static DateFormat
WITHOUT_CLASSIFICATION	// can this happen?
WITHOUT_CLASSIFICATION	// Strip off the trailing delimiter
WITHOUT_CLASSIFICATION	// Map header names to set() methods
WITHOUT_CLASSIFICATION	// These entries must be in the same order as columns are saved/restored.
WITHOUT_CLASSIFICATION	// Both these are needed in the list even though they set the same // variable
WITHOUT_CLASSIFICATION	// Try // default // delimiter
WITHOUT_CLASSIFICATION	// now validate the // result
WITHOUT_CLASSIFICATION	// failed to recognise the header
WITHOUT_CLASSIFICATION	// We know the column names all exist, so create the config
WITHOUT_CLASSIFICATION	// Check if the line is a header
WITHOUT_CLASSIFICATION	// Check for Quoted variable names
WITHOUT_CLASSIFICATION	// they are always last
WITHOUT_CLASSIFICATION	// unknown column name
WITHOUT_CLASSIFICATION	// out of order
WITHOUT_CLASSIFICATION	// Don't add delimiter first time round
WITHOUT_CLASSIFICATION	// These methods handle parameters that could contain delimiters or // quotes:
WITHOUT_CLASSIFICATION	// These methods handle parameters that cannot contain delimiters or // quotes
WITHOUT_CLASSIFICATION	// Find the first non-null message
WITHOUT_CLASSIFICATION	// Need both sample and error count to be any use
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// did not find \n, put the character // back
WITHOUT_CLASSIFICATION	// Need to append something so delimiter is // added
WITHOUT_CLASSIFICATION	// =================================== CSV quote/unquote handling // ==============================
WITHOUT_CLASSIFICATION	/*     * Private versions of what might eventually be part of Commons-CSV or     * Commons-Lang/Io...     */
WITHOUT_CLASSIFICATION	// double the quote char
WITHOUT_CLASSIFICATION	// doubled quote => quote
WITHOUT_CLASSIFICATION	// State of the parser
WITHOUT_CLASSIFICATION	// Remove following \n if present
WITHOUT_CLASSIFICATION	// Do we have some data, or a trailing empty field? // we have some data // we've started a field // Just seen ""
WITHOUT_CLASSIFICATION	// while not EOF // EOF (or end of string) so collect any remaining data
WITHOUT_CLASSIFICATION	/* * This is not currently used by JMeter code. * As it uses Sun-specific code (the only such in JMeter), it has been commented out for now. */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// Delete any properties whose name converts to the empty string
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// rethrow other errors
WITHOUT_CLASSIFICATION	// mainly for TestElementConverter
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// Don't save empty comments - except for the TestPlan (to maintain compatibility)
WITHOUT_CLASSIFICATION	// Skip special properties if required
WITHOUT_CLASSIFICATION	// remap the class name
WITHOUT_CLASSIFICATION	// could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	// could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	// No need to check version, just process the attributes if present
WITHOUT_CLASSIFICATION	// Only decode strings if inVersion = 1.0
WITHOUT_CLASSIFICATION	// Names of properties that are handled specially
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Otherwise don't save anything - no point
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If we have a file, but no data, then read the file
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// Skip special properties if required
WITHOUT_CLASSIFICATION	// No need to check version, just process the attributes if present
WITHOUT_CLASSIFICATION	// could be null if it has been deleted via NameUpdater
WITHOUT_CLASSIFICATION	// Don't save empty comments
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Always decode
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// superclass does not use types
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Must be same as Header.HNAME - but that is built // later
WITHOUT_CLASSIFICATION	// N.B. These must agree with the new member names in SampleSaveConfiguration // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Additional member names which are currently not written out // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These are new fields; not saved unless true
WITHOUT_CLASSIFICATION	// These fields are not currently saved or restored
WITHOUT_CLASSIFICATION	// Save most things
WITHOUT_CLASSIFICATION	// Save the new fields - but only if they are not the default
WITHOUT_CLASSIFICATION	// Helper method to simplify marshall routine
WITHOUT_CLASSIFICATION	// Maintain backward compatibility (bytes was not in the JMX file)
WITHOUT_CLASSIFICATION	// Make sure decoding follows input file
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this") NOTE this also guards against possible window in checkForOpenFiles()
WITHOUT_CLASSIFICATION	// volatile needed to ensure safe publication
WITHOUT_CLASSIFICATION	// Cannot be instantiated
WITHOUT_CLASSIFICATION	// getParentFile() may not work on relative paths
WITHOUT_CLASSIFICATION	// checks for entries in use
WITHOUT_CLASSIFICATION	// tidy up any unused entries
WITHOUT_CLASSIFICATION	// Must first convert to absolute path names to ensure parents are available
WITHOUT_CLASSIFICATION	// read first line and forget
WITHOUT_CLASSIFICATION	// need to check if we are at EOF already
WITHOUT_CLASSIFICATION	// already at EOF
WITHOUT_CLASSIFICATION	// OK, we still have some data, restore it
WITHOUT_CLASSIFICATION	// If file encoding is specified, read using that encoding, otherwise use default platform encoding
WITHOUT_CLASSIFICATION	// If file encoding is specified, write using that encoding, otherwise use default platform encoding
WITHOUT_CLASSIFICATION	// package access for test code only
WITHOUT_CLASSIFICATION	// Some known attribute names, just for convenience:
WITHOUT_CLASSIFICATION	// Store the resource bundle as an attribute of the BeanDescriptor:
WITHOUT_CLASSIFICATION	// Localize the property names and descriptions:
WITHOUT_CLASSIFICATION	// we also provide the resource bundle
WITHOUT_CLASSIFICATION	// i is used below
WITHOUT_CLASSIFICATION	// Set the bean's property to the value we just obtained:
WITHOUT_CLASSIFICATION	// We can't assign null to primitive types.
WITHOUT_CLASSIFICATION	// Can occur running headless on Jenkins
WITHOUT_CLASSIFICATION	// value was not provided, and this is allowed
WITHOUT_CLASSIFICATION	// Not an expression (isn't or can't be), not null.
WITHOUT_CLASSIFICATION	// The known tags are assumed to be valid:
WITHOUT_CLASSIFICATION	// Was not a tag, so if we can't accept other values...
WITHOUT_CLASSIFICATION	// Delegate the final check to the typeEditor:
WITHOUT_CLASSIFICATION	// setAsText failed: not valid
WITHOUT_CLASSIFICATION	// setAsText succeeded: valid
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	/// final because called from ctor
WITHOUT_CLASSIFICATION	// Localize the bean name // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// not an expression (isn't or can't be), not null.
WITHOUT_CLASSIFICATION	// Provide an initial edit value if necessary -- this is an // heuristic that tries to provide the most convenient // initial edit value:
WITHOUT_CLASSIFICATION	//not interested in this method.
WITHOUT_CLASSIFICATION	// Not an expression (isn't or can't be), not null. // may throw IllegalArgumentExc.
WITHOUT_CLASSIFICATION	// not an expression (can't be or isn't), not null.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// so we can detect it
WITHOUT_CLASSIFICATION	// so we can detect it
WITHOUT_CLASSIFICATION	// Revert to the previous value:
WITHOUT_CLASSIFICATION	// ensure value is propagated to editor
WITHOUT_CLASSIFICATION	// Get and sort the property descriptors:
WITHOUT_CLASSIFICATION	// should be quicker to find the editors if they are registered.
WITHOUT_CLASSIFICATION	//  private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	// $NON-NLS-$
WITHOUT_CLASSIFICATION	// Obtain the propertyEditors:
WITHOUT_CLASSIFICATION	// Index is also used for accessing editors array
WITHOUT_CLASSIFICATION	// Don't get editors for hidden or non-read-write properties:
WITHOUT_CLASSIFICATION	// we check the class type above
WITHOUT_CLASSIFICATION	// Initialize the editor with the provided default value or null:
WITHOUT_CLASSIFICATION	// In case of BSF and JSR elements i want to add textAreaEditor as a listener to scriptLanguage ComboBox.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Some editors do tiny transformations (e.g. "true" to // "True",...): // may throw IllegalArgumentException
WITHOUT_CLASSIFICATION	// Initialize the GUI:
WITHOUT_CLASSIFICATION	// acceptsNull // acceptsExpressions // acceptsOther
WITHOUT_CLASSIFICATION	// Uninitialized -- set it to the defaults:
WITHOUT_CLASSIFICATION	// Now set the editors to the element's values:
WITHOUT_CLASSIFICATION	// for labels
WITHOUT_CLASSIFICATION	// for editors
WITHOUT_CLASSIFICATION	// for panels
WITHOUT_CLASSIFICATION	// if the displayName is the empty string, leave it like that.
WITHOUT_CLASSIFICATION	// might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	/*     * Map of translations for tags; only created if there is at least     * one tag and a ResourceBundle has been provided.     */
WITHOUT_CLASSIFICATION	// The minimum index of the tags in the combo box
WITHOUT_CLASSIFICATION	// The maximum index of the tags in the combo box
WITHOUT_CLASSIFICATION	// only for use from test code
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Add a 0-sized invisible component that will take all the vertical // space that nobody wants:
WITHOUT_CLASSIFICATION	// track where tags start ...
WITHOUT_CLASSIFICATION	// ... and where they end
WITHOUT_CLASSIFICATION	// Check if the entry index corresponds to a tag, if so return the tag // This also works if the tags were not translated
WITHOUT_CLASSIFICATION	// Not a tag entry, return the original value
WITHOUT_CLASSIFICATION	// will revert to last valid value if invalid
WITHOUT_CLASSIFICATION	// Replace a string with its translation, if one exists
WITHOUT_CLASSIFICATION	// not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	// not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	// A quick verification, just in case:
WITHOUT_CLASSIFICATION	// Get the beanInfo:
WITHOUT_CLASSIFICATION	// In other GUI component, clearGUI resets the value to defaults one as there is one GUI per Element // With TestBeanGUI as it's shared, its default values are only known here, we must call setValues with  // element (as it holds default values) // otherwise we will get values as computed by customizer reset and not default ones
WITHOUT_CLASSIFICATION	// Fetch data from screen fields
WITHOUT_CLASSIFICATION	// Copy all property values from the map into the element:
WITHOUT_CLASSIFICATION	// cannot be null
WITHOUT_CLASSIFICATION	// Copy all property values into the map:
WITHOUT_CLASSIFICATION	// handles hex as well
WITHOUT_CLASSIFICATION	// Some editors may need the descriptor
WITHOUT_CLASSIFICATION	// Create a button to trigger the file chooser:
WITHOUT_CLASSIFICATION	// Create a panel containing the combo and the button:
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// not sure if null is passed in but no harm in setting it
WITHOUT_CLASSIFICATION	// handles hex as well
WITHOUT_CLASSIFICATION	// configure(element); // super.clear(); // set name, enabled. // put the default values back into the // new element
WITHOUT_CLASSIFICATION	// Programming error. Don't // continue.
WITHOUT_CLASSIFICATION	// Programming error. Don't // continue.
WITHOUT_CLASSIFICATION	// We don't want to show expert beans in the menus unless we're // in expert mode:
WITHOUT_CLASSIFICATION	// may be impossible, but no harm in // checking ...
WITHOUT_CLASSIFICATION	//- JMX
WITHOUT_CLASSIFICATION	// Get a WrapperEditor to provide the field or combo -- we'll delegate // most methods to it:
WITHOUT_CLASSIFICATION	// acceptsNull // acceptsExpressions // acceptsOther // default
WITHOUT_CLASSIFICATION	// assume it's string
WITHOUT_CLASSIFICATION	//+ JMX attributes - do not change
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// There's only 1 test plan, so can cache the mode here
WITHOUT_CLASSIFICATION	//- JMX field names
WITHOUT_CLASSIFICATION	// create transient item
WITHOUT_CLASSIFICATION	// we set the classpath
WITHOUT_CLASSIFICATION	/* Action to be taken when a Sampler error occurs */
WITHOUT_CLASSIFICATION	/* Property name */
WITHOUT_CLASSIFICATION	// Thread-specific variables saved here to save recalculation
WITHOUT_CLASSIFICATION	// clone should never return null
WITHOUT_CLASSIFICATION	// clone should never return null
WITHOUT_CLASSIFICATION	/*             * Only samplers have the thread context set up by JMeterThread at             * present, so suppress the warning for now             */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.samplers.RemoteThreadsListener#threadFinished()     */
WITHOUT_CLASSIFICATION	// clone should never return null
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// this("Test Plan"); // setFunctionalMode(false); // setSerialized(false);
WITHOUT_CLASSIFICATION	// setFunctionalMode(false); // setSerialized(false);
WITHOUT_CLASSIFICATION	// log.warn("ThreadContext was not set up - should only happen in // JUnit testing..." // ,new Throwable("Debug"));
WITHOUT_CLASSIFICATION	// Default implementation
WITHOUT_CLASSIFICATION	// Moved from JMeter class
WITHOUT_CLASSIFICATION	// lifecycle methods
WITHOUT_CLASSIFICATION	// JMX property name: do not change
WITHOUT_CLASSIFICATION	// value is the correct class
WITHOUT_CLASSIFICATION	// value is of type Collection<JMeterProperty>
WITHOUT_CLASSIFICATION	// private static StringProperty defaultProperty = new StringProperty();
WITHOUT_CLASSIFICATION	// name cannot be null
WITHOUT_CLASSIFICATION	// Two null values -- return equal
WITHOUT_CLASSIFICATION	// empty collection, local var is here to allow SuppressWarnings
WITHOUT_CLASSIFICATION	// empty collection
WITHOUT_CLASSIFICATION	// empty collection
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// empty collection ok to cast, local var is here to allow SuppressWarnings
WITHOUT_CLASSIFICATION	// N.B. Other classes rely on this returning just the string.
WITHOUT_CLASSIFICATION	/*|| !ctx.isSamplingStarted()*/
WITHOUT_CLASSIFICATION	// synch is probably not needed as only called before run starts
WITHOUT_CLASSIFICATION	// this is only possible for 3rd party controllers by default
WITHOUT_CLASSIFICATION	// Called from multiple threads
WITHOUT_CLASSIFICATION	// Backward compatibility
WITHOUT_CLASSIFICATION	// check there is a GUI
WITHOUT_CLASSIFICATION	// check there is a GUI
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Expensive, so // do // once
WITHOUT_CLASSIFICATION	// i.e. "true"
WITHOUT_CLASSIFICATION	// NOOP        
WITHOUT_CLASSIFICATION	// based on this scheduler is enabled or disabled
WITHOUT_CLASSIFICATION	// Gives access to parent thread threadGroup
WITHOUT_CLASSIFICATION	// For access to stop methods.
WITHOUT_CLASSIFICATION	/*     * The following variables may be set/read from multiple threads.     */
WITHOUT_CLASSIFICATION	// may be set from a different thread
WITHOUT_CLASSIFICATION	// ensure that interrupt cannot overlap with shutdown
WITHOUT_CLASSIFICATION	// TL - IS
WITHOUT_CLASSIFICATION	/*     * See below for reason for this change. Just in case this causes problems,     * allow the change to be backed out     */
WITHOUT_CLASSIFICATION	// threadContext is not thread-safe, so keep within thread
WITHOUT_CLASSIFICATION	// Might be found by contoller.next()
WITHOUT_CLASSIFICATION	// prevent any further interrupts
WITHOUT_CLASSIFICATION	// make sure current interrupt is finished, prevent another starting yet
WITHOUT_CLASSIFICATION	// Allow any pending interrupt to complete (OK because currentSampler == null)
WITHOUT_CLASSIFICATION	// Find parent controllers of current sampler
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// Check if we are running a transaction
WITHOUT_CLASSIFICATION	// Find the package for the transaction
WITHOUT_CLASSIFICATION	// Check if the transaction is done
WITHOUT_CLASSIFICATION	// Get the transaction sample result
WITHOUT_CLASSIFICATION	// Check assertions for the transaction sample
WITHOUT_CLASSIFICATION	// Notify listeners with the transaction sample result
WITHOUT_CLASSIFICATION	// Transaction is done, we do not have a sampler to sample
WITHOUT_CLASSIFICATION	// recursive call
WITHOUT_CLASSIFICATION	// Check if we have a sampler to sample
WITHOUT_CLASSIFICATION	// Get the sampler ready to sample
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TestBeanHelper.prepare() is OK
WITHOUT_CLASSIFICATION	// check there is a GUI
WITHOUT_CLASSIFICATION	// check there is a GUI
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// Must not ignore this one // Make sure errors are output to the log file
WITHOUT_CLASSIFICATION	// Tell the monitor we are done // Remove the ThreadLocal entry
WITHOUT_CLASSIFICATION	// Perform the actual sample
WITHOUT_CLASSIFICATION	// If we got any results, then perform processing on the result
WITHOUT_CLASSIFICATION	// Do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	// Do not send subsamples to listeners which receive the transaction sample
WITHOUT_CLASSIFICATION	// Add the result as subsample of transaction if we are in a transaction
WITHOUT_CLASSIFICATION	// Check if thread or test should be stopped
WITHOUT_CLASSIFICATION	// Finish up
WITHOUT_CLASSIFICATION	// checks the scheduler to stop the iteration
WITHOUT_CLASSIFICATION	// Check if this instance is present in transaction listener list
WITHOUT_CLASSIFICATION	// Check for the same instance
WITHOUT_CLASSIFICATION	// listeners = controller.getListeners();
WITHOUT_CLASSIFICATION	// set the scheduler to start
WITHOUT_CLASSIFICATION	// call ThreadListener.threadStarted()
WITHOUT_CLASSIFICATION	// call ThreadListener.threadFinished()
WITHOUT_CLASSIFICATION	// probably not possible, but check anyway
WITHOUT_CLASSIFICATION	// Called by StandardJMeterEngine, TestAction and AccessLogSampler
WITHOUT_CLASSIFICATION	// delay between checks
WITHOUT_CLASSIFICATION	// Don't bother reporting stop test interruptions
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// fetch once; must be done under lock // (also protects against null)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// delay between checks
WITHOUT_CLASSIFICATION	// Used by DebugSampler
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// Only create the map if it is required
WITHOUT_CLASSIFICATION	// all implementations extend TestElement
WITHOUT_CLASSIFICATION	// All implementations extend TestElement
WITHOUT_CLASSIFICATION	// int
WITHOUT_CLASSIFICATION	// Number of active threads in this group
WITHOUT_CLASSIFICATION	// Copy our name into that of the controller // otherwise name reverts
WITHOUT_CLASSIFICATION	// 5 seconds
WITHOUT_CLASSIFICATION	//+ JMX entries - do not change the string values
WITHOUT_CLASSIFICATION	//- JMX entries
WITHOUT_CLASSIFICATION	// if true the Scheduler is enabled
WITHOUT_CLASSIFICATION	// set the start time for the Thread // Duration is in seconds
WITHOUT_CLASSIFICATION	// Force a sensible start time
WITHOUT_CLASSIFICATION	// Enables the scheduler
WITHOUT_CLASSIFICATION	// maximum pause to use
WITHOUT_CLASSIFICATION	// Fetch once; needs to stay constant
WITHOUT_CLASSIFICATION	// needs to be same time for all threads in the group
WITHOUT_CLASSIFICATION	// set start and end time
WITHOUT_CLASSIFICATION	// N.B. Context needs to be fetched in the correct thread
WITHOUT_CLASSIFICATION	// Store context from Root Thread to pass it to created threads
WITHOUT_CLASSIFICATION	// Copy in ThreadStarter thread context from calling Thread
WITHOUT_CLASSIFICATION	// needs to be constant for all threads
WITHOUT_CLASSIFICATION	// else start immediately
WITHOUT_CLASSIFICATION	// set the endtime for the Thread
WITHOUT_CLASSIFICATION	// Duration is in seconds, starting from when the threads start
WITHOUT_CLASSIFICATION	// ramp-up delay (except first)
WITHOUT_CLASSIFICATION	// no point continuing beyond the end time
WITHOUT_CLASSIFICATION	// Already waited
WITHOUT_CLASSIFICATION	// ThreadStarter is daemon, but we don't want sampler threads to be so too
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// return all the associated counts together
WITHOUT_CLASSIFICATION	// set stop flag // interrupt sampler if possible
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// set the start time for the Thread // Duration is in seconds
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	//@GuardedGy("this")
WITHOUT_CLASSIFICATION	// Currently only used by JMeterThread
WITHOUT_CLASSIFICATION	// Check if the property exists
WITHOUT_CLASSIFICATION	// Relative start-up time
WITHOUT_CLASSIFICATION	// NOT USED
WITHOUT_CLASSIFICATION	// Must be an old test plan
WITHOUT_CLASSIFICATION	// Initialise the gui field values
WITHOUT_CLASSIFICATION	// Maximum size to convert a document to text (default 10Mb)
WITHOUT_CLASSIFICATION	// -1 to disable the write limit
WITHOUT_CLASSIFICATION	// open the stream
WITHOUT_CLASSIFICATION	// close the stream
WITHOUT_CLASSIFICATION	/*     *     * The string is made private so the compiler can't propagate it into     * JMeterUtils. (Java compilers may make copies of final variables)     *     * This ensures that JMeterUtils always gets the correct     * version, even if JMeterUtils is not re-compiled during the build.     */
WITHOUT_CLASSIFICATION	// This assumes that the JMV treats a class file as a resource (not all do).
WITHOUT_CLASSIFICATION	// Convert to URL for manifest
WITHOUT_CLASSIFICATION	// default to plain version
WITHOUT_CLASSIFICATION	// Not instantiable
WITHOUT_CLASSIFICATION	// Allow reversion to original shared session context
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If we are using a single session // Otherwise
WITHOUT_CLASSIFICATION	/*             * Also set up HttpClient defaults             */
WITHOUT_CLASSIFICATION	/* * No point doing this on a per-connection basis, as there is currently no way to configure it. * So we leave it to the defaults set up in the SSL Context * */
WITHOUT_CLASSIFICATION	//          HttpsURLConnection secureConn = (HttpsURLConnection) conn; //          secureConn.setSSLSocketFactory(this.getContext().getSocketFactory());
WITHOUT_CLASSIFICATION	/*     *     * Creates new SSL context     * @return SSL context     * @throws GeneralSecurityException     */
WITHOUT_CLASSIFICATION	// Now wrap the default managers with our key manager
WITHOUT_CLASSIFICATION	// Get the default trust managers
WITHOUT_CLASSIFICATION	// Wrap the defaults in our custom trust manager
WITHOUT_CLASSIFICATION	// implementation moved to JmeterKeystore as only that has the keyType info
WITHOUT_CLASSIFICATION	//++ For TestBean implementations only // passed to file or script
WITHOUT_CLASSIFICATION	// file to source (overrides script)
WITHOUT_CLASSIFICATION	// script (if file not provided)
WITHOUT_CLASSIFICATION	// BSF/JSR223 language to use //-- For TestBean implementations only
WITHOUT_CLASSIFICATION	// can be the empty string
WITHOUT_CLASSIFICATION	// For use by the server script
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Save the actual socket
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Forward all the SSLSocket methods to the input socket
WITHOUT_CLASSIFICATION	// Also forward all the Socket methods.
WITHOUT_CLASSIFICATION	//                ScriptRuntime.call(cx, fun, global, args, global);
WITHOUT_CLASSIFICATION	// Must wrap non-scriptable objects before presenting to Rhino
WITHOUT_CLASSIFICATION	// includes JavaScriptException, rethrows Errors
WITHOUT_CLASSIFICATION	// superclass does not support types
WITHOUT_CLASSIFICATION	// Initialize context and global scope object
WITHOUT_CLASSIFICATION	// Read-only access after class has been initialised
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Re-throw Errors because we're supposed to let the JVM see it // Don't re-throw StackOverflows, because we know we've // corrected the situation by aborting the loop and // a long stacktrace would end up on the user's console
WITHOUT_CLASSIFICATION	// Calculate each time, as likely to be called for each add
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// likely a wrapped exception from a LiveConnect call. // Display its stack trace as a diagnostic
WITHOUT_CLASSIFICATION	// For n values in an aggregate sample the average value = (val/n) // So need to add n * (val/n) * (val/n) = val * val / n
WITHOUT_CLASSIFICATION	//load additionnal name conversion rules from plugins
WITHOUT_CLASSIFICATION	/*         * If we are creating a JSR223 element, add the cache key property.         *          * Note that this cannot be done in the JSR223BeanInfoSupport class         * because that causes problems with the group; its properties are         * not always set up before they are needed. This cause various         * issues with the GUI:         * - wrong field attributes (should not allow null)         * - sometimes GUI is completely mangled         * - field appears at start rather than at end.         * - the following warning is logged:         * jmeter.testbeans.gui.GenericTestBeanCustomizer:          * org.apache.jmeter.util.JSR223TestElement#cacheKey does not appear to have been configured         *          * Adding the group here solves these issues, and it's also         * possible to add the key just before the script panel         * to which it relates.         *          * It's not yet clear why this should be, but it looks as though         * createPropertyGroup does not work properly if it is called from         * any subclasses of this class.         *          */
WITHOUT_CLASSIFICATION	// names are Strings
WITHOUT_CLASSIFICATION	// no point dividing by 1
WITHOUT_CLASSIFICATION	// 1024=bytes per kb
WITHOUT_CLASSIFICATION	// account for multiple samples // not yet intialised
WITHOUT_CLASSIFICATION	// 1000 = millisecs/sec
WITHOUT_CLASSIFICATION	// Conversions for milli and nano seconds
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Use actual class name for log
WITHOUT_CLASSIFICATION	// Most subclasses will need these:
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	// we have a file, read and process it
WITHOUT_CLASSIFICATION	// we have a file, read and process it
WITHOUT_CLASSIFICATION	/*     * Wraps the socket in a slow SSL socket if necessary     */
WITHOUT_CLASSIFICATION	// What host am I running on?
WITHOUT_CLASSIFICATION	// Special flag for use in debugging resources
WITHOUT_CLASSIFICATION	// Provide Random numbers to whomever wants one
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// for java sockets // for Commons Httpclient sockets
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Done by finally block: fileReader.close();
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // For use in debugging: // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Are we the default language?
WITHOUT_CLASSIFICATION	// JMeter.fail("Could not read internal resource. " + // "Archive is broken.");
WITHOUT_CLASSIFICATION	// Keep existing settings
WITHOUT_CLASSIFICATION	// Don't change locale from en_GB to en
WITHOUT_CLASSIFICATION	// language change worked // Check if we at least found the correct language:
WITHOUT_CLASSIFICATION	// no need to reset Locale
WITHOUT_CLASSIFICATION	/*         * Reset Locale if necessary so other locales are properly handled         */
WITHOUT_CLASSIFICATION	// Special mode for debugging resource handling
WITHOUT_CLASSIFICATION	// Special mode for debugging resource handling
WITHOUT_CLASSIFICATION	// Can be returned by headless hosts
WITHOUT_CLASSIFICATION	// Can be returned by headless hosts
WITHOUT_CLASSIFICATION	// $NON-NLS-1$                
WITHOUT_CLASSIFICATION	// Redisplay.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// file to source (overrides script)
WITHOUT_CLASSIFICATION	// script (if file not provided)
WITHOUT_CLASSIFICATION	// Use actual class name for log
WITHOUT_CLASSIFICATION	// Most subclasses will need these:
WITHOUT_CLASSIFICATION	// End Method
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // reader = xmlFactory.newSAXParser().getXMLReader();
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Done
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// Empty value // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If not empty then script in ScriptText will be compiled and cached
WITHOUT_CLASSIFICATION	// LRUMap does not support generics (yet)
WITHOUT_CLASSIFICATION	// Add variables for access to context and variables
WITHOUT_CLASSIFICATION	// For use in debugging:
WITHOUT_CLASSIFICATION	// NOOP   
WITHOUT_CLASSIFICATION	// Also handles read(byte[])
WITHOUT_CLASSIFICATION	//-- For TestBean implementations only
WITHOUT_CLASSIFICATION	// ensure variables are not null
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // Set params as a single line // $NON-NLS-1$ // and set as an array //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// Overridden by non-TestBean implementations to return the property value instead
WITHOUT_CLASSIFICATION	// Overridden by non-TestBean implementations to return the property value instead
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	// now temp2 has the lowest of the three components
WITHOUT_CLASSIFICATION	// This sequence is borrowed from: // org.apache.commons.httpclient.protocol.ReflectionSocketFactory.createSocket
WITHOUT_CLASSIFICATION	// convert to telnet port
WITHOUT_CLASSIFICATION	// Prompt is unnecessary
WITHOUT_CLASSIFICATION	// Reset for other users
WITHOUT_CLASSIFICATION	// Tell server that we are done
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	//this.setDaemon(true);
WITHOUT_CLASSIFICATION	// Have we yet tried to load the truststore?
WITHOUT_CLASSIFICATION	// Ensure not null
WITHOUT_CLASSIFICATION	/*     * The password can be defined as a property; this dialogue is provided to allow it     * to be entered at run-time.     *     * However, this does not gain much, as the dialogue does not (yet) support hidden input ...     *    */
WITHOUT_CLASSIFICATION	// we've tried ...
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Should not happen
WITHOUT_CLASSIFICATION	// empty if not provided // use the system property to determine the type // otherwise use the name
WITHOUT_CLASSIFICATION	// Also handles write(byte[])
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	// Temporary copies, so can set the final ones
WITHOUT_CLASSIFICATION	// This class is not serialised // The interpreter instance for this class
WITHOUT_CLASSIFICATION	// Script file to initialize the Interpreter with
WITHOUT_CLASSIFICATION	// Logger to use during initialization and script run
WITHOUT_CLASSIFICATION	// Called from ctor, so must be private (or final, but it does not seem useful elsewhere)
WITHOUT_CLASSIFICATION	// Do this before starting the script
WITHOUT_CLASSIFICATION	// Check file so we can distinguish file error from script error
WITHOUT_CLASSIFICATION	// Cannot find the file locally, so try the bin directory
WITHOUT_CLASSIFICATION	// Programming error
WITHOUT_CLASSIFICATION	// Also programming error
WITHOUT_CLASSIFICATION	// For use by Unit Tests
WITHOUT_CLASSIFICATION	// configure the document builder factory
WITHOUT_CLASSIFICATION	// elements have empty nodeValue, but we are usually interested in their content
WITHOUT_CLASSIFICATION	// default empty array to prevent NPEs
WITHOUT_CLASSIFICATION	// No point checking an empty keystore
WITHOUT_CLASSIFICATION	/*         * Note: if is == null, the arrays will be empty         */
WITHOUT_CLASSIFICATION	// API expects null not empty array, see http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/X509KeyManager.html
WITHOUT_CLASSIFICATION	// i.e. is == null
WITHOUT_CLASSIFICATION	// i.e. is == null
WITHOUT_CLASSIFICATION	// number of samples in this entry
WITHOUT_CLASSIFICATION	// The following getters may appear not to be used - however they are invoked via the Functor class
WITHOUT_CLASSIFICATION	// No samples collected ...
WITHOUT_CLASSIFICATION	// Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	// Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// 1024=bytes per kb
WITHOUT_CLASSIFICATION	// We really should never get here // because eval will throw an exception // if xpath is invalid, but whatever, better // safe
WITHOUT_CLASSIFICATION	// No samples collected ...
WITHOUT_CLASSIFICATION	// Better behaviour when howLong=0 or lastTime=0
WITHOUT_CLASSIFICATION	// this is our first sample, set the start time to current timestamp
WITHOUT_CLASSIFICATION	// this is our first sample, set the start time to current timestamp
WITHOUT_CLASSIFICATION	// Always update the end time
WITHOUT_CLASSIFICATION	// = elapsed
WITHOUT_CLASSIFICATION	// Appears not to be used - however it is invoked via the Functor class
WITHOUT_CLASSIFICATION	// Only for use by test code
WITHOUT_CLASSIFICATION	// Code duplicated from getPageSize()
WITHOUT_CLASSIFICATION	/* A checkbox choosing whether or not only successes should be logged. */
WITHOUT_CLASSIFICATION	/* Overrides AbstractJMeterGuiComponent.configure(TestElement) */
WITHOUT_CLASSIFICATION	// keep track of classes created
WITHOUT_CLASSIFICATION	// (for instructional purposes only!)
WITHOUT_CLASSIFICATION	/*         * Perform the sampling         */
WITHOUT_CLASSIFICATION	// Start timing
WITHOUT_CLASSIFICATION	// Do something here ...
WITHOUT_CLASSIFICATION	/*             * Set up the sample result details             */
WITHOUT_CLASSIFICATION	// End timimg
WITHOUT_CLASSIFICATION	/*     * Helper method     */
WITHOUT_CLASSIFICATION	/*     * Helper method to set up the GUI screen     */
WITHOUT_CLASSIFICATION	// Standard setup
WITHOUT_CLASSIFICATION	// Add the standard title
WITHOUT_CLASSIFICATION	// Specific setup
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The name of the property used to hold our data //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// ...
WITHOUT_CLASSIFICATION	// Note: the file panel already includes the error logging checkbox, // so we don't have to add it explicitly.
WITHOUT_CLASSIFICATION	// Did sample succeed? // Sampler data
WITHOUT_CLASSIFICATION	/*     * Create a data input text field     *     * @return the panel for entering the data     */
WITHOUT_CLASSIFICATION	// Do something ...
WITHOUT_CLASSIFICATION	// Do something ...
WITHOUT_CLASSIFICATION	// A String property:
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// We have a default
WITHOUT_CLASSIFICATION	// Throwable wanted
WITHOUT_CLASSIFICATION	// Comment wanted
WITHOUT_CLASSIFICATION	// Common output function
WITHOUT_CLASSIFICATION	// Routine to perform the output (also used by __logn() function)
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	// N.B. if the string is not recognised, DEBUG is assumed
WITHOUT_CLASSIFICATION	// Thread method is potentially expensive
WITHOUT_CLASSIFICATION	// Allow variable to be omitted
WITHOUT_CLASSIFICATION	// vars can be null if run from TestPlan
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// @see TestRegexFunction for unit tests
WITHOUT_CLASSIFICATION	// Remove initial empty entry
WITHOUT_CLASSIFICATION	// $NON-NLS1$ // $NON-NLS1$
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// did we find BeanShell?
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Relatively expensive operation, so do it once
WITHOUT_CLASSIFICATION	// Pass in some variables
WITHOUT_CLASSIFICATION	// Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	// Execute the script
WITHOUT_CLASSIFICATION	/*     * Helper method for use by scripts     *     */
WITHOUT_CLASSIFICATION	// Can happen if called during test closedown
WITHOUT_CLASSIFICATION	// Parameters are stored here
WITHOUT_CLASSIFICATION	// For unit tests, see TestJexlFunction
WITHOUT_CLASSIFICATION	// String or Integer
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*             * N.B. Stop reading the file if we get a blank line: This allows             * for trailing comments in the file             */
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// Now evaluate the script, getting the result
WITHOUT_CLASSIFICATION	// two delimiters in a row; add an empty String
WITHOUT_CLASSIFICATION	// Lines in the file, split into columns
WITHOUT_CLASSIFICATION	// 0-based
WITHOUT_CLASSIFICATION	// name of the file
WITHOUT_CLASSIFICATION	// Catch the trailing delimiter
WITHOUT_CLASSIFICATION	/*         * the beginning of the line is a "delimiter" so that ,a,b,c returns ""         * "a" "b" "c"         */
WITHOUT_CLASSIFICATION	// will be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	// return JMeterContextService.getContext().getCurrentSampler().getName();
WITHOUT_CLASSIFICATION	// Added to support external testing
WITHOUT_CLASSIFICATION	// Only modified by static block so no need to synchronize subsequent read-only access
WITHOUT_CLASSIFICATION	// May be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	// @GuardedBy("this")
WITHOUT_CLASSIFICATION	// @GuardedBy("this")
WITHOUT_CLASSIFICATION	// @GuardedBy("this")
WITHOUT_CLASSIFICATION	// @GuardedBy("this")
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// desc.add("Use fully qualified host name: TRUE/FALSE (Default FALSE)"); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// We have a default
WITHOUT_CLASSIFICATION	// Throwable wanted
WITHOUT_CLASSIFICATION	// @GuardedBy("this") // needed for error messages
WITHOUT_CLASSIFICATION	// @GuardedBy("this") // Buffered reader
WITHOUT_CLASSIFICATION	/*             * DecimalFormat adds the number to the end of the format if there             * are no formatting characters, so we need a way to prevent this             * from messing up the file name.             *             */
WITHOUT_CLASSIFICATION	// @GuardedBy("this") // should we try to open the file?
WITHOUT_CLASSIFICATION	// Have we used myCurrent yet? // Set to 1 if start number is missing (to allow for end without start)
WITHOUT_CLASSIFICATION	// Low chances to be non numeric, we parse
WITHOUT_CLASSIFICATION	// Low chances to be non numeric, we parse
WITHOUT_CLASSIFICATION	/*         * To avoid re-opening the file repeatedly after an error, only try to         * open it in the first execute() call (It may be re=opened at EOF, but         * that will cause at most one failure.)         */
WITHOUT_CLASSIFICATION	// Don't process invalid numbers
WITHOUT_CLASSIFICATION	// Don't process invalid numbers (including "")
WITHOUT_CLASSIFICATION	// Has chances to be a var
WITHOUT_CLASSIFICATION	// for next time
WITHOUT_CLASSIFICATION	// EOF, re-open file
WITHOUT_CLASSIFICATION	// Did we open the file?
WITHOUT_CLASSIFICATION	// Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	// Are we processing a file // sequence?
WITHOUT_CLASSIFICATION	// there is no variable name
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ 
WITHOUT_CLASSIFICATION	/*     * This Map serves two purposes:     * - maps names to  containers     * - ensures only one container per file across all threads     * The key is the concatenation of the file name and the XPath string     */
WITHOUT_CLASSIFICATION	// File was not opened successfully // Are we processing a file sequence?
WITHOUT_CLASSIFICATION	// N.B. setParameters is called before the test proper is started, // and thus variables are not interpreted at this point // So defer the file open until later to allow variable file names to be // used.
WITHOUT_CLASSIFICATION	// varName keeps its value and sum has not taken  // into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	// Split string provided
WITHOUT_CLASSIFICATION	//@GuardedBy("fileContainers")
WITHOUT_CLASSIFICATION	// We don't have a local copy
WITHOUT_CLASSIFICATION	// Prevent separate instantiation
WITHOUT_CLASSIFICATION	/* The cache of file packs - for faster local access */
WITHOUT_CLASSIFICATION	// save the global copy
WITHOUT_CLASSIFICATION	// There's no global copy either
WITHOUT_CLASSIFICATION	// save our local copy
WITHOUT_CLASSIFICATION	// Parameter list
WITHOUT_CLASSIFICATION	/*             * All done, so return             */
WITHOUT_CLASSIFICATION	/*             * All done now ,so return the empty string - this allows the caller             * to append __CSVRead(file,next) to the last instance of             * __CSVRead(file,col)             *             * N.B. It is important not to read any further lines at this point,             * otherwise the wrong line can be retrieved when using multiple             * threads.             */
WITHOUT_CLASSIFICATION	/*         * Need to reset the containers for repeated runs; about the only way         * for functions to detect that a run is starting seems to be the         * setParameters() call.         */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// May be null if function is used on TestPlan
WITHOUT_CLASSIFICATION	// Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	// Parameter list
WITHOUT_CLASSIFICATION	// what column // is wanted?
WITHOUT_CLASSIFICATION	/*         * Need to reset the containers for repeated runs; about the only way         * for functions to detect that a run is starting seems to be the         * setParameters() call.         */
WITHOUT_CLASSIFICATION	/* The cache of file packs - used to improve thread access */
WITHOUT_CLASSIFICATION	//means platform default
WITHOUT_CLASSIFICATION	// empty encoding, return to platorm default
WITHOUT_CLASSIFICATION	/*     * Only needed locally     */
WITHOUT_CLASSIFICATION	/*     * This Map serves two purposes:     * - maps file names to  containers     * - ensures only one container per file across all threads     */
WITHOUT_CLASSIFICATION	/*     * Called by CSVRead(x,next) - sets the row to nil so the next row will be     * picked up the next time round     *     */
WITHOUT_CLASSIFICATION	/*     * called by CSVRead(file,alias)     */
WITHOUT_CLASSIFICATION	// First call
WITHOUT_CLASSIFICATION	// Already logged
WITHOUT_CLASSIFICATION	// Already logged
WITHOUT_CLASSIFICATION	// Save in case needed later
WITHOUT_CLASSIFICATION	// Not yet open
WITHOUT_CLASSIFICATION	// we have a variable name
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// For unit tests, see TestJexlFunction
WITHOUT_CLASSIFICATION	// Now evaluate the script, getting the result
WITHOUT_CLASSIFICATION	// name of the file
WITHOUT_CLASSIFICATION	// 0-based
WITHOUT_CLASSIFICATION	// Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	// Can be null if called from Config item testEnded() method
WITHOUT_CLASSIFICATION	//means no restriction
WITHOUT_CLASSIFICATION	// Only obtain and cast the return if needed
WITHOUT_CLASSIFICATION	// empty chars, return to null
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// should we return original value?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// Number of parameters expected - used to reject invalid calls
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// Has chances to be a var
WITHOUT_CLASSIFICATION	// there is no variable name
WITHOUT_CLASSIFICATION	// Default to milliseconds
WITHOUT_CLASSIFICATION	// probably does not need to be synch (always accessed through ThreadLocal?) // give access to Test code
WITHOUT_CLASSIFICATION	// vars will be null on Test Plan
WITHOUT_CLASSIFICATION	//MAXINT = 2,147,483,647
WITHOUT_CLASSIFICATION	// Not found
WITHOUT_CLASSIFICATION	// Only modified in class init
WITHOUT_CLASSIFICATION	// We have a 3rd parameter
WITHOUT_CLASSIFICATION	// Resolve any aliases
WITHOUT_CLASSIFICATION	//$NON_NLS-1$ //$NON_NLS-1$
WITHOUT_CLASSIFICATION	// Not synchronised, so can't be shared
WITHOUT_CLASSIFICATION	// Allow for empty name
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// vars will be null on TestPlan
WITHOUT_CLASSIFICATION	// varName keeps its value and sum has not taken  // into account non numeric or overflowing number
WITHOUT_CLASSIFICATION	// Values for creating tokens
WITHOUT_CLASSIFICATION	// divisor is a positive number // should never case NFE
WITHOUT_CLASSIFICATION	/*     * Convert to a shorter String for test purposes     *     * @return the string value     */
WITHOUT_CLASSIFICATION	// this may need mangling due to peeks
WITHOUT_CLASSIFICATION	// cached character == Integer.MAX_VALUE when invalid
WITHOUT_CLASSIFICATION	// Reached end of input arguments - perform final processing
WITHOUT_CLASSIFICATION	// Key is String or Integer
WITHOUT_CLASSIFICATION	// strip the null
WITHOUT_CLASSIFICATION	// variables used while parsing options.
WITHOUT_CLASSIFICATION	// Yes, so the second argument is missing
WITHOUT_CLASSIFICATION	// Keep track of token separator
WITHOUT_CLASSIFICATION	// should never get to here when stringIndex != 0
WITHOUT_CLASSIFICATION	// Long optional arg must have = as separator
WITHOUT_CLASSIFICATION	// non-null Comparators don't appear to be used at present
WITHOUT_CLASSIFICATION	// consume stray character
WITHOUT_CLASSIFICATION	// Are we about to start a new option?
WITHOUT_CLASSIFICATION	// strip the -
WITHOUT_CLASSIFICATION	// 2nd argument
WITHOUT_CLASSIFICATION	// its a long option
WITHOUT_CLASSIFICATION	// Parse the arguments that are not options
WITHOUT_CLASSIFICATION	// if it is a short option then parse it else ...
WITHOUT_CLASSIFICATION	// equivalent to new TreeMap((Comparator)null);
WITHOUT_CLASSIFICATION	//    private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	// Make sure the hashCode depends on the order as well
WITHOUT_CLASSIFICATION	// super-class does not use generics
WITHOUT_CLASSIFICATION	// super-class does not use generics
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// this occurs when id == 0 and user has not supplied a descriptor // for arguments
WITHOUT_CLASSIFICATION	// if get to an arg barrier then return to normal mode // else continue accumulating options
WITHOUT_CLASSIFICATION	// strip the - // -- sequence .. it can either mean a change of state // to STATE_NO_OPTIONS or else a long option
WITHOUT_CLASSIFICATION	// find order.indexOf(currentKey) using == rather than equals() // there may be multiple entries which compare equals (Bug 50898) // This will be slightly slower than the built-in method, // but replace() is not used frequently.
WITHOUT_CLASSIFICATION	// Used for the RuntimeException to short-circuit the traversal // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. The keys can be either JMeterTreeNode or TestElement
WITHOUT_CLASSIFICATION	// do nothing - means object is found
WITHOUT_CLASSIFICATION	// Just in case
WITHOUT_CLASSIFICATION	// short circuit traversal when found
WITHOUT_CLASSIFICATION	// saves current position in data List
WITHOUT_CLASSIFICATION	// end method
WITHOUT_CLASSIFICATION	// capture the output
WITHOUT_CLASSIFICATION	// helper method to allow input and output to be changed for chaining
WITHOUT_CLASSIFICATION	// ensure the application does not hang if it requests input
WITHOUT_CLASSIFICATION	// capture the intermediate output
WITHOUT_CLASSIFICATION	// not yet terminated
WITHOUT_CLASSIFICATION	// not yet terminated // N.B. proc.destroy() is called by the finally clause in the run() method
WITHOUT_CLASSIFICATION	// we are capturing output // Default charset is probably appropriate here.
WITHOUT_CLASSIFICATION	// The DNAME which is used if none is provided // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ (do not change) // $NON-NLS-1$ (Firefox and Windows) // $NON-NLS-1$ (Opera)
WITHOUT_CLASSIFICATION	// i.e. does keytool support -gencert and -ext ?
WITHOUT_CLASSIFICATION	// not instantiable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Create cert for CA using root (requires Java 7 for gencert)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// import the signed CA cert into the store (root already there) - both are needed to sign the domain certificates
WITHOUT_CLASSIFICATION	// Create the self-signed keypairs (requires Java 7 for -ext flag)
WITHOUT_CLASSIFICATION	//rem generate cert for DOMAIN using CA (requires Java7 for gencert) and import it
WITHOUT_CLASSIFICATION	// generate the request
WITHOUT_CLASSIFICATION	// Export the Root CA for Firefox/Chrome/IE
WITHOUT_CLASSIFICATION	// generate the certificate and store in output file
WITHOUT_CLASSIFICATION	// generate the keypair for the host
WITHOUT_CLASSIFICATION	// create the certificate //rem ku:c=dig,keyE means KeyUsage:criticial=digitalSignature,keyEncipherment
WITHOUT_CLASSIFICATION	// Copy for Opera
WITHOUT_CLASSIFICATION	// alias // subject
WITHOUT_CLASSIFICATION	// A temporary cache for the focus listener
WITHOUT_CLASSIFICATION	// get the certificate request
WITHOUT_CLASSIFICATION	// default charset
WITHOUT_CLASSIFICATION	// inport the certificate
WITHOUT_CLASSIFICATION	// Add the sub components
WITHOUT_CLASSIFICATION	// Register the handler for focus listening. This handler will // only notify the registered when the text changes from when // the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	// Add the sub components
WITHOUT_CLASSIFICATION	// Functor count = 0 is handled specially
WITHOUT_CLASSIFICATION	// Necessary to avoid NPE when testing serialisation
WITHOUT_CLASSIFICATION	// Necessary to avoid NPE when testing serialisation
WITHOUT_CLASSIFICATION	// if provided
WITHOUT_CLASSIFICATION	// Compare if the value has changed, since we received focus.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//@GuardedBy("this")
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// Register the handler for focus listening. This handler will // only notify the registered when the text changes from when // the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	// Register the handler for focus listening. This handler will // only notify the registered when the text changes from when // the focus is gained to when it is lost.
WITHOUT_CLASSIFICATION	// Add the sub components
WITHOUT_CLASSIFICATION	// Compare if the value has changed, since we received focus.
WITHOUT_CLASSIFICATION	// A temporary cache for the focus listener
WITHOUT_CLASSIFICATION	// used by TableEditor
WITHOUT_CLASSIFICATION	// used by TableEditor
WITHOUT_CLASSIFICATION	// We use 80% of height
WITHOUT_CLASSIFICATION	// private JMenu menu;
WITHOUT_CLASSIFICATION	// (Comment 16, Huw)
WITHOUT_CLASSIFICATION	// uninstantiable
WITHOUT_CLASSIFICATION	// treats last line specially // Last line // Allow for missing terminator
WITHOUT_CLASSIFICATION	// Constructors
WITHOUT_CLASSIFICATION	// NOTUSED Dimension dim = layoutSize(parent, false);
WITHOUT_CLASSIFICATION	// work out the total size
WITHOUT_CLASSIFICATION	// otherwise there's a vgap too many // Work out the anchor paint
WITHOUT_CLASSIFICATION	// do layout
WITHOUT_CLASSIFICATION	// closes reader as well
WITHOUT_CLASSIFICATION	// N.B time pattern is passed to java.text.SimpleDateFormat
WITHOUT_CLASSIFICATION	/*     * Predefined format patterns, selected by the property log_format_type (see     * jmeter.properties) The new-line is added later     */
WITHOUT_CLASSIFICATION	//$NON_NLS-1$ //$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$ //$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	// non-instantiable - static methods only
WITHOUT_CLASSIFICATION	// now set the individual categories (if any)
WITHOUT_CLASSIFICATION	// Further configuration
WITHOUT_CLASSIFICATION	// Make sure same hierarchy is used
WITHOUT_CLASSIFICATION	// This happens if the default log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// key is the type to collect (usually long), value = count of entries
WITHOUT_CLASSIFICATION	// We use a TreeMap because we need the entries to be sorted
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// For n values in an aggregate sample the average value = (val/n) // So need to add n * (val/n) * (val/n) = val * val / n
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	// Running values, updated for each sample
WITHOUT_CLASSIFICATION	// Set the top-level defaults //$NON_NLS-1$
WITHOUT_CLASSIFICATION	// This can happen if a log-target id-ref specifies a non-existent target
WITHOUT_CLASSIFICATION	/*     * Helper method to ensure that format is initialised if initializeLogging()     * has not yet been called.     */
WITHOUT_CLASSIFICATION	// If the name contains at least one set of paired single-quotes, reformat using DateFormat
WITHOUT_CLASSIFICATION	// remove the package prefix
WITHOUT_CLASSIFICATION	// e.g. Long.MAX_VALUE
WITHOUT_CLASSIFICATION	// e.g. Long.MIN_VALUE
WITHOUT_CLASSIFICATION	// use Math.round () instead of simple (long) to provide correct value rounding
WITHOUT_CLASSIFICATION	// ignored. May happen occasionally, but no harm done if so.
WITHOUT_CLASSIFICATION	// For n same values in sum of square is equal to n*val^2
WITHOUT_CLASSIFICATION	// no need to divide by 1
WITHOUT_CLASSIFICATION	// insert new value
WITHOUT_CLASSIFICATION	/*     * If non-null, then any object provided to invoke() is ignored.     */
WITHOUT_CLASSIFICATION	// Methondname must always be provided.
WITHOUT_CLASSIFICATION	/*     * If non-null, then any argument list passed to invoke() will be ignored.     */
WITHOUT_CLASSIFICATION	/*     * Argument types used to create the method.     * May be provided explicitly, or derived from the constructor argument list.     */
WITHOUT_CLASSIFICATION	/*     * This depends on the class or invokee and either args or types;     * it is set once by doCreateMethod(), which must be the only method to access it.    */
WITHOUT_CLASSIFICATION	// If class not provided, default to invokee class, else null
WITHOUT_CLASSIFICATION	// If types not provided, default to argument types, else null
WITHOUT_CLASSIFICATION	//////////////////////////////////////////
WITHOUT_CLASSIFICATION	/*     * Low level invocation routine.     *     * Should only be called after any defaults have been applied.     *     */
WITHOUT_CLASSIFICATION	// If invokee was provided, then clazz has been set up
WITHOUT_CLASSIFICATION	/*     * Low-level (recursive) routine to define the method - if not already defined.     * Synchronized to protect access to methodToInvoke.     */
WITHOUT_CLASSIFICATION	// static only
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Should never happen
WITHOUT_CLASSIFICATION	// Use constructor class if present // use invokee if provided // use argumenrs if provided
WITHOUT_CLASSIFICATION	// parent classes to check // are inner classes OK?
WITHOUT_CLASSIFICATION	// Potentially expensive; do it once
WITHOUT_CLASSIFICATION	// Potentially expensive; do it once
WITHOUT_CLASSIFICATION	// No need to check it again
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// No need to check it again
WITHOUT_CLASSIFICATION	// It does not contain a required string
WITHOUT_CLASSIFICATION	// It contains a banned string
WITHOUT_CLASSIFICATION	// are inner classes OK?
WITHOUT_CLASSIFICATION	// annotation classes to check
WITHOUT_CLASSIFICATION	// For each directory in the search path, add all the jars found there
WITHOUT_CLASSIFICATION	// Find all jars in the search path
WITHOUT_CLASSIFICATION	// Should only be called with classes that extend annotations
WITHOUT_CLASSIFICATION	// first get all the classes
WITHOUT_CLASSIFICATION	//subClassList);
WITHOUT_CLASSIFICATION	/*     * Returns the classpath entries that match the search list of jars and paths     */
WITHOUT_CLASSIFICATION	// find all jar files or paths that end with strPathOrJar
WITHOUT_CLASSIFICATION	// no need to look further
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$// $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// might throw an exception, assume this is ignorable
WITHOUT_CLASSIFICATION	/*     * Converts a class file from the text stored in a Jar file to a version     * that can be used in Class.forName().     *     * @param strClassName     *            the class name from a Jar file     * @return String the Java-style dotted version of the name     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-2$ // remove ".class"
WITHOUT_CLASSIFICATION	// Recursive call
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// we have a single character; could be a token // it is a token
WITHOUT_CLASSIFICATION	// Remove trailing splitter
WITHOUT_CLASSIFICATION	// Found splitChar at end of line
WITHOUT_CLASSIFICATION	// This is the new length
WITHOUT_CLASSIFICATION	// we saw a delimiter last time // so add the default
WITHOUT_CLASSIFICATION	// "<?xml "
WITHOUT_CLASSIFICATION	// EOF
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ add zero padding
WITHOUT_CLASSIFICATION	// @see TestJorphanUtils for unit tests
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ add zero padding
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This is the name of the HotSpot Diagnostic platform MBean (Sun Java 1.6) // See: http://download.oracle.com/javase/6/docs/jre/api/management/extension/com/sun/management/HotSpotDiagnosticMXBean.html
WITHOUT_CLASSIFICATION	// SingletonHolder idiom for lazy initialisation
WITHOUT_CLASSIFICATION	// These are needed for invoking the method
WITHOUT_CLASSIFICATION	// If we could not find the method, store the exception here
WITHOUT_CLASSIFICATION	// Only invoked by IODH class
WITHOUT_CLASSIFICATION	// get the platform beans
WITHOUT_CLASSIFICATION	// should never fail // See if we can actually find the object // Should never happen
WITHOUT_CLASSIFICATION	// Prevent useless dump attempts
WITHOUT_CLASSIFICATION	// the string so far
WITHOUT_CLASSIFICATION	// opened tags
WITHOUT_CLASSIFICATION	// don't do anything
WITHOUT_CLASSIFICATION	// java.util.Date d = null;
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Potentially expensive; do it once
WITHOUT_CLASSIFICATION	//-- JMX file attributes - do not change
WITHOUT_CLASSIFICATION	// Don't instantiate class
WITHOUT_CLASSIFICATION	//++ JMX file attributes - do not change
WITHOUT_CLASSIFICATION	// i.e. no filter
WITHOUT_CLASSIFICATION	// The test object, i.e. the instance of the class containing the test method // This is the same as testCase for JUnit3 tests // but different for JUnit4 tests which use a wrapper
WITHOUT_CLASSIFICATION	// The TestCase to run
WITHOUT_CLASSIFICATION	// the Method objects for setUp (@Before) and tearDown (@After) methods // Will be null if not provided or not required
WITHOUT_CLASSIFICATION	// The method name to be invoked
WITHOUT_CLASSIFICATION	/**     * Method should add the JUnit testXXX method to the list at     * the end, since the sequence matters.     * @param methodName     */
WITHOUT_CLASSIFICATION	// The wrapper used to invoke the method
WITHOUT_CLASSIFICATION	// Assume success
WITHOUT_CLASSIFICATION	// The name of the class containing the method
WITHOUT_CLASSIFICATION	// Do not use TestCase.run(TestResult) method, since it will // call setUp and tearDown. Doing that will result in calling // the setUp and tearDown method twice and the elapsed time // will include setup and teardown.
WITHOUT_CLASSIFICATION	// create a new TestResult
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Convert JUnit4 failure to Junit3 style
WITHOUT_CLASSIFICATION	// copy the original stack trace
WITHOUT_CLASSIFICATION	// we should log a warning, but allow the test to keep running
WITHOUT_CLASSIFICATION	// this should be externalized to the properties
WITHOUT_CLASSIFICATION	// probably should not happen
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// copy the original stack trace
WITHOUT_CLASSIFICATION	// if the string constructor is not null, we use it. // if the string constructor is null, we use the empty // constructor to get a new instance
WITHOUT_CLASSIFICATION	// first we see if the class declares a string // constructor. if it is doesn't we look for // empty constructor.
WITHOUT_CLASSIFICATION	// we have to check and make sure the constructor is // accessible. if we didn't it would throw an exception // and cause a NPE.
WITHOUT_CLASSIFICATION	// Must be final to create instance
WITHOUT_CLASSIFICATION	// NO NEED TO INITIALIZE WHEN getCreateOneInstancePerSample  // is true cause it will be done in sample
WITHOUT_CLASSIFICATION	// Convert JUnit4 AssertionError failures to JUnit3 style so // will be treated as failure rather than error.
WITHOUT_CLASSIFICATION	/*                             * Calling a method via reflection results in wrapping any                             * Exceptions in ITE; unwrap these here so runProtected can                             * allocate them correctly.                             */
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Generates expected Exception
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// Dummy to ensure there is a test to run
WITHOUT_CLASSIFICATION	// let bad input fail silently
WITHOUT_CLASSIFICATION	// Succeeds only if Before method - verifyTwo() - is run.
WITHOUT_CLASSIFICATION	// Fails to generate expected Exception
WITHOUT_CLASSIFICATION	//or if you have assertions enabled
WITHOUT_CLASSIFICATION	//should always fail
WITHOUT_CLASSIFICATION	//should not fail
WITHOUT_CLASSIFICATION	// Generate a test error
WITHOUT_CLASSIFICATION	// will generate Divide by zero error
WITHOUT_CLASSIFICATION	// will generate Divide by zero error
WITHOUT_CLASSIFICATION	// Normal test failure
WITHOUT_CLASSIFICATION	// Generate test error
WITHOUT_CLASSIFICATION	// equation for calculating the weight // w = (int)(33 * (used/max))
WITHOUT_CLASSIFICATION	// changed the logic for BEA Weblogic in the case a // user uses Tomcat's status servlet without any // modifications. Weblogic will return nothing for // the connector, therefore we need to check the size // of the list. Peter 12.22.04
WITHOUT_CLASSIFICATION	// int spare = cntr.getThreadInfo().getMaxSpareThreads();
WITHOUT_CLASSIFICATION	// loop to fetch desired connector
WITHOUT_CLASSIFICATION	// default : get first connector
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// CRLF blank line found
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// private MonitorModel DATA;
WITHOUT_CLASSIFICATION	// log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	// log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	// log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	// log.warn("Only for use in unit testing");
WITHOUT_CLASSIFICATION	// we check to see if the lastSelectedPath is null // after we clear, it would return null
WITHOUT_CLASSIFICATION	// this.DATA = null; // this.DATA = stat;
WITHOUT_CLASSIFICATION	// I18N: Contains fixed English text ...
WITHOUT_CLASSIFICATION	// DATA = model;
WITHOUT_CLASSIFICATION	// draw grid only when x is 1. If we didn't // the grid line would draw over the data // lines making it look bad.
WITHOUT_CLASSIFICATION	// optional connector name prefix
WITHOUT_CLASSIFICATION	// private List workerslist;
WITHOUT_CLASSIFICATION	// the equations
WITHOUT_CLASSIFICATION	// for now just swallow the exception
WITHOUT_CLASSIFICATION	// surl can be null if read from a file
WITHOUT_CLASSIFICATION	// let bad input fail silently
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// Add the main panel and the graph
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// let bad input fail silently
WITHOUT_CLASSIFICATION	// Should never happen
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// private boolean startDoc = false; // private boolean endDoc = false;
WITHOUT_CLASSIFICATION	// this.startDoc = true; // Reset all work variables so reusing the instance starts afresh.
WITHOUT_CLASSIFICATION	// this.startDoc = false; // this.endDoc = true;
WITHOUT_CLASSIFICATION	// let bad input fail silently
WITHOUT_CLASSIFICATION	// Note: the element is a ConfigTestElement, so cannot use FTPSampler access methods
WITHOUT_CLASSIFICATION	// N.B. Originally there was only one filename, and only get(RETR) was supported // To maintain backwards compatibility, the property name needs to remain the same // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Use binary mode file transfer? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// used for interrupting the sampler
WITHOUT_CLASSIFICATION	// Assume failure
WITHOUT_CLASSIFICATION	// should probably come from the setup dialog
WITHOUT_CLASSIFICATION	// Could not access file or other error
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// called by HttpRequestHdr
WITHOUT_CLASSIFICATION	// LF blank line found
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Are we uploading? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Should the file data be saved in the response? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// No need to close this // No need to close this
WITHOUT_CLASSIFICATION	// The value is not encoded
WITHOUT_CLASSIFICATION	// Let the GUI show that it will not be encoded
WITHOUT_CLASSIFICATION	// Get the filename
WITHOUT_CLASSIFICATION	// Set the values retrieved for the file upload
WITHOUT_CLASSIFICATION	// Find the first empty line of the multipart, it signals end of headers for multipart // Agents are supposed to terminate lines in CRLF:
WITHOUT_CLASSIFICATION	// regular expression used to match against embedded resource URLs
WITHOUT_CLASSIFICATION	// need to clear because the
WITHOUT_CLASSIFICATION	// OPTIONAL TASKS
WITHOUT_CLASSIFICATION	// 2 columns size
WITHOUT_CLASSIFICATION	// used by HttpTestSampleGui
WITHOUT_CLASSIFICATION	// WEB REQUEST PANEL
WITHOUT_CLASSIFICATION	// set this false to suppress some items for use in HTTP Request defaults
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Set false for AJP
WITHOUT_CLASSIFICATION	// Body data
WITHOUT_CLASSIFICATION	// Tabbed pane that contains parameters and raw body
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default changed in 2.3 and again in 2.4
WITHOUT_CLASSIFICATION	// Concurrent resources download // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// See modifyTestElement
WITHOUT_CLASSIFICATION	// Embedded URL match regex // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// WEB REQUEST PANEL
WITHOUT_CLASSIFICATION	/*             * Textfield uses \n (LF) to delimit lines; we need to send CRLF.             * Rather than change the way that arguments are processed by the             * samplers for raw data, it is easier to fix the data.             * On retrival, CRLF is converted back to LF for storage in the text field.             * See             */
WITHOUT_CLASSIFICATION	// If RAW data and Parameters match we allow switching
WITHOUT_CLASSIFICATION	// Convert CRLF to CR, see modifyTestElement
WITHOUT_CLASSIFICATION	// all sub-components with setFont(null) inherit this font
WITHOUT_CLASSIFICATION	// Only display the port number if it is meaningfully specified
WITHOUT_CLASSIFICATION	// WEB SERVER PANEL
WITHOUT_CLASSIFICATION	// autoRedirects and followRedirects cannot both be selected
WITHOUT_CLASSIFICATION	// Implementation
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// PROTOCOL
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// CONTENT_ENCODING
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If there is no data, then switching between Parameters and Raw should be // allowed with no further user interaction.
WITHOUT_CLASSIFICATION	// If there is data in the Raw panel, then the user should be  // prevented from switching (that would be easy to track).
WITHOUT_CLASSIFICATION	// If the Parameter data can be converted (i.e. no names), we  // warn the user that the Parameter data will be lost.
WITHOUT_CLASSIFICATION	// If the Parameter data cannot be converted to Raw, then the user should be // prevented from doing so raise an error dialog
WITHOUT_CLASSIFICATION	// Cached value
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// package-protected to allow access by unit-test cases
WITHOUT_CLASSIFICATION	// helper method to save the cache entry
WITHOUT_CLASSIFICATION	// invalid dates must be treated as expired
WITHOUT_CLASSIFICATION	// if no-cache is present, ensure that expiresDate remains null, which forces revalidation
WITHOUT_CLASSIFICATION	// the max-age directive overrides the Expires header,
WITHOUT_CLASSIFICATION	// No max-age && No expires
WITHOUT_CLASSIFICATION	// date or lastModified may be null or in bad format
WITHOUT_CLASSIFICATION	// else expiresDate computed in (expires!=null) condition is used
WITHOUT_CLASSIFICATION	// Helper method to deal with missing headers - Commons HttpClient
WITHOUT_CLASSIFICATION	// Apache HttpClient
WITHOUT_CLASSIFICATION	/*     * Is the sample result OK to cache?     * i.e is it in the 2xx range?     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX attributes, do not change values // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //-
WITHOUT_CLASSIFICATION	// i.e. not using Expires // Check that we are processing Expires/CacheControl
WITHOUT_CLASSIFICATION	// see https://developer.mozilla.org/en/HTTP_Caching_FAQ // see http://www.ietf.org/rfc/rfc2616.txt#13.2.4 
WITHOUT_CLASSIFICATION	// cache the value
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// echo back
WITHOUT_CLASSIFICATION	// Check if we have read all the headers
WITHOUT_CLASSIFICATION	// We know when to stop reading, so we can allow the read method to block
WITHOUT_CLASSIFICATION	// No divider was found
WITHOUT_CLASSIFICATION	// use null for no expiry
WITHOUT_CLASSIFICATION	// Store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	// Store session cookies as well as unexpired ones
WITHOUT_CLASSIFICATION	// Has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	// Has its own debug log; removes matching cookies
WITHOUT_CLASSIFICATION	// This means the cookie was wrong for the URL
WITHOUT_CLASSIFICATION	// This means the cookie was wrong for the URL
WITHOUT_CLASSIFICATION	// tweak diff HC3 vs HC4
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The headers and body are divided by a blank line (the \r is to allow for the CR before LF) // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If we know the content length, we can allow the reading of // the request to block until more data arrives. // If it is chunked transfer, we cannot allow the reading to // block, because we do not know when to stop reading, because // the chunked transfer is not properly supported yet
WITHOUT_CLASSIFICATION	// Check how much of the body we have already read as part of reading // the headers // We subtract two bytes for the crlf divider between header and body
WITHOUT_CLASSIFICATION	// The reqest has no body, or it has a transfer encoding we do not support. // In either case, we read any data available
WITHOUT_CLASSIFICATION	// We use multi-line mask so can prefix the line with ^ // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// use null for no expiry
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Needs to be package-protected to avoid problem with serialisation tests
WITHOUT_CLASSIFICATION	// start off with a merged object as a copy of the local object
WITHOUT_CLASSIFICATION	// iterate thru each of the other headers
WITHOUT_CLASSIFICATION	// find the same property in the local headers
WITHOUT_CLASSIFICATION	// we have a match
WITHOUT_CLASSIFICATION	// prefer values from the other object
WITHOUT_CLASSIFICATION	// the other object has an empty value, so remove this value from the merged object
WITHOUT_CLASSIFICATION	// use the other object's value
WITHOUT_CLASSIFICATION	// break out of the inner loop
WITHOUT_CLASSIFICATION	// the other object has a new value to be added to the merged
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	// finally, merge the names so it's clear they've been merged
WITHOUT_CLASSIFICATION	// Saves the error if one occurs
WITHOUT_CLASSIFICATION	// Listen on main socket
WITHOUT_CLASSIFICATION	// Pass request to new thread
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TODO Charset ? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TODO Charset ? // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Only used by GUI
WITHOUT_CLASSIFICATION	// Timeout occurred. Ignore, and keep looping until we're // told to stop running.
WITHOUT_CLASSIFICATION	// Ensure that there is always a collection available
WITHOUT_CLASSIFICATION	// default level // allow override by system properties
WITHOUT_CLASSIFICATION	//final int _ignored = 1;
WITHOUT_CLASSIFICATION	//++ JMX tag values // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Can't have two matching cookies
WITHOUT_CLASSIFICATION	// ensure that the initial cookies are copied to the per-thread instances
WITHOUT_CLASSIFICATION	//long max was used to represent a non-expiring cookie, but that caused problems
WITHOUT_CLASSIFICATION	// Used by GUI
WITHOUT_CLASSIFICATION	// Used by GUI
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //-- JMX tag values
WITHOUT_CLASSIFICATION	// only save unexpired cookies
WITHOUT_CLASSIFICATION	//flag - if all machines within a given domain can access the variable. //(from http://www.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	// ensure data is set up OK initially
WITHOUT_CLASSIFICATION	// do nothing, the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	// do nothing, the cookie manager has to accept changes.
WITHOUT_CLASSIFICATION	// Scan for any matching cookies
WITHOUT_CLASSIFICATION	// TODO Charset ?
WITHOUT_CLASSIFICATION	/*     * Remove all the cookies.     */
WITHOUT_CLASSIFICATION	// Used by HttpMirrorServer
WITHOUT_CLASSIFICATION	// No need to call clear
WITHOUT_CLASSIFICATION	// and as a string
WITHOUT_CLASSIFICATION	// Used for saving entries to a file
WITHOUT_CLASSIFICATION	// wait for server to stop
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// regular expression used to match against embedded resource URLs
WITHOUT_CLASSIFICATION	// OPTIONAL TASKS
WITHOUT_CLASSIFICATION	// Use this instead of getLabelResource() otherwise getDocAnchor() below does not work
WITHOUT_CLASSIFICATION	// flag - if all machines within a given domain can access the variable. //(from http://www.cookiecentral.com/faq/ 3.5)
WITHOUT_CLASSIFICATION	// Column numbers - must agree with order above
WITHOUT_CLASSIFICATION	// only http and https are supported
WITHOUT_CLASSIFICATION	// Obtain another URL with an explicit port:
WITHOUT_CLASSIFICATION	// Allow for old format file without mechanism support
WITHOUT_CLASSIFICATION	// this should never happen // anyway, we'll continue with url2 set to null.
WITHOUT_CLASSIFICATION	// For use by AJP
WITHOUT_CLASSIFICATION	// Allow for old format file without the extra columnns
WITHOUT_CLASSIFICATION	// Needs to be package protected for Unit test
WITHOUT_CLASSIFICATION	// Embedded URL match regex
WITHOUT_CLASSIFICATION	// does not apply to Java implementation
WITHOUT_CLASSIFICATION	// add a listener to activate or not concurrent dwn.
WITHOUT_CLASSIFICATION	// URL CONFIG
WITHOUT_CLASSIFICATION	// includes \n
WITHOUT_CLASSIFICATION	// Bottom (embedded resources, source address and optional tasks)
WITHOUT_CLASSIFICATION	// 2 column size
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// RETRIEVE IMAGES // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// go to 1st line
WITHOUT_CLASSIFICATION	// Download concurrent resources // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Is monitor // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// only contains HTTPFileArg elements
WITHOUT_CLASSIFICATION	// Use MD5 // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add a new field source ip address (for HC implementations only) //default: IP/Hostname
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //default: IP/Hostname
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Button for browsing webservice wsdl
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Web Methods
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// improve xml display
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// add the proxy elements
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// we only put HTTPFileArgs in it
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Permit dynamic resize of TextArea
WITHOUT_CLASSIFICATION	// We get the AuthManager and pass it to the WSDLHelper // once the sampler is updated to Axis, all of this stuff // should not be necessary. Now I just need to find the // time and motivation to do it.
WITHOUT_CLASSIFICATION	// if use proxy is checked, we enable // the text fields for the host and port
WITHOUT_CLASSIFICATION	// required for unit tests
WITHOUT_CLASSIFICATION	// Disable DELETE and BROWSE buttons if there are no rows in // the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE and BROWSE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// create the JTable that holds header per row
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	// all table cells are editable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight // (select) the appropriate one.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing // before deleting the row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing // before deleting the row.
WITHOUT_CLASSIFICATION	// Disable the DELETE and SAVE buttons if no rows remaining // after delete
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //--
WITHOUT_CLASSIFICATION	// Enable the DELETE and SAVE buttons if they are currently // disabled.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current // value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// Non-expiring
WITHOUT_CLASSIFICATION	// Disable the DELETE and SAVE buttons if no rows remaining // after delete.
WITHOUT_CLASSIFICATION	// preset to default impl
WITHOUT_CLASSIFICATION	// create the JTable that holds one cookie per row
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ Action command names //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// drop-down list for renderer
WITHOUT_CLASSIFICATION	// if no results render in jmeter.properties, load Standard (default)
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current value // and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// only contains Argument (or HTTPArgument)
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // removed expiration because it's just an annoyance for static cookies
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing // before deleting the row.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight // (select) the appropriate one.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight // (select) the appropriate one.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current // value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// Enable the DELETE and SAVE buttons if they are currently // disabled.
WITHOUT_CLASSIFICATION	// Enable the DELETE and SAVE buttons if they are currently // disabled.
WITHOUT_CLASSIFICATION	// Disable the DELETE and SAVE buttons if no rows remaining // after delete.
WITHOUT_CLASSIFICATION	// Button Panel
WITHOUT_CLASSIFICATION	// create the JTable that holds auth per row
WITHOUT_CLASSIFICATION	// Ignore non-HTTP samplers
WITHOUT_CLASSIFICATION	// && !isPathExtensionNoQuestionmark()
WITHOUT_CLASSIFICATION	// && !isPathExtensionNoEquals()
WITHOUT_CLASSIFICATION	// && !isPathExtensionNoEquals() && !isPathExtensionNoQuestionmark()
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// if ! isPathExtension()
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// all table cells are editable
WITHOUT_CLASSIFICATION	// Don't get tripped up by RE chars in the arg name
WITHOUT_CLASSIFICATION	// name="sessionid" value="value"
WITHOUT_CLASSIFICATION	/*     * -----------------------------------------------------------------------     * Methods     * -----------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	// return the current value (don't forget the prefix!)
WITHOUT_CLASSIFICATION	// increment the value
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// transient Perl5Compiler compiler = new Perl5Compiler(); // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// PreProcessors are cloned per-thread, so this will be saved per-thread // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ;sessionid=value // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//  value="value" name="sessionid" // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*     * ------------------------------------------------------------------------     * Constructors     * ------------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	/*     * ------------------------------------------------------------------------     * Methods implemented from interface org.apache.jmeter.config.Modifier     * ------------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	/*     * ------------------------------------------------------------------------     * Methods     * ------------------------------------------------------------------------     */
WITHOUT_CLASSIFICATION	// if a mask for this argument exists
WITHOUT_CLASSIFICATION	// values to be masked must be set in the WebApp to "*"
WITHOUT_CLASSIFICATION	// create instances needed for parsing
WITHOUT_CLASSIFICATION	// XMLReaderFactory.createXMLReader(vendorParseClass);
WITHOUT_CLASSIFICATION	// register content handler
WITHOUT_CLASSIFICATION	// register error handler
WITHOUT_CLASSIFICATION	// parse
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Constants and Data Members // -------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Constructors // -------------------------------------------
WITHOUT_CLASSIFICATION	// initalise pointer to first user
WITHOUT_CLASSIFICATION	// Use round robin allocation of user details
WITHOUT_CLASSIFICATION	// no entries in all users, therefore create an empty Map object
WITHOUT_CLASSIFICATION	// if parameter name exists in http request // then change its value with value obtained with regular expression
WITHOUT_CLASSIFICATION	// verify if regex groups exists
WITHOUT_CLASSIFICATION	// Note UserParameterXML accesses this variable // to obtain the Set data via method getParsedParameters()
WITHOUT_CLASSIFICATION	// cannot be first line either
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Constants and Data Members // -------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------- // Methods // -------------------------------------------
WITHOUT_CLASSIFICATION	// haven't got to reset paramname & paramvalue // but did it to keep the code looking correct
WITHOUT_CLASSIFICATION	/*     * These are used as GUI item names;     * LOWERBOUND, UPPERBOUND and INCREMENT are used in the focusLost() method     */
WITHOUT_CLASSIFICATION	// must create a new object, // or else end up with a set full of the same Map object
WITHOUT_CLASSIFICATION	/*-------------------------------------------------------------------------     * Methods (used by UserParameterXML to get XML parameters from XML file)     *----------------------------------------------------------------------- */
WITHOUT_CLASSIFICATION	// this.updateUI();
WITHOUT_CLASSIFICATION	// boolean pass = true;
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Next line
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// UTF-8 unsupported? You must be joking!
WITHOUT_CLASSIFICATION	// N.B. Since the tags are extracted from an HTML Form, any values must already have been encoded
WITHOUT_CLASSIFICATION	// The value is in the second group
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Cache of parsers - parsers must be re-usable
WITHOUT_CLASSIFICATION	// Is there a cached parser?
WITHOUT_CLASSIFICATION	// cache the parser
WITHOUT_CLASSIFICATION	// The Set is used to ignore duplicated binary files. // Using a LinkedHashSet to avoid unnecessary overhead in iterating // the elements in the set later on. As a side-effect, this will keep // them roughly in order, which should be a better model of browser // behaviour.
WITHOUT_CLASSIFICATION	/*     * A dummy class to pass the pointer of URL.     */
WITHOUT_CLASSIFICATION	// then we need to download the binary
WITHOUT_CLASSIFICATION	// we check the input tag type for image
WITHOUT_CLASSIFICATION	// Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	// Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// we check the input tag type for image
WITHOUT_CLASSIFICATION	// then we need to download the binary
WITHOUT_CLASSIFICATION	// Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	// Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// case Node.TEXT_NODE: // break;
WITHOUT_CLASSIFICATION	/*     * Helper method to get an attribute value, if it exists @param attrs list     * of attributs @param attname attribute name @return     */
WITHOUT_CLASSIFICATION	// Note there's 3 capturing groups per value
WITHOUT_CLASSIFICATION	// Number of capturing groups possibly containing Base HREFs:
WITHOUT_CLASSIFICATION	// Check for a BASE HREF:
WITHOUT_CLASSIFICATION	// Doesn't even look like a URL? // Maybe it isn't: Ignore the exception.
WITHOUT_CLASSIFICATION	//url.replace('+',' ');
WITHOUT_CLASSIFICATION	// No WARN message to avoid performance impact
WITHOUT_CLASSIFICATION	/*     * Private iterator used to unwrap the URL from the URLString class     *     */
WITHOUT_CLASSIFICATION	/*         * Unwraps the URLString class to return the URL         */
WITHOUT_CLASSIFICATION	// Noop
WITHOUT_CLASSIFICATION	// Try to ensure that more javascript code is processed OK ...
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Listen on main socket
WITHOUT_CLASSIFICATION	// Timeout occurred. Ignore, and keep looping until we're // told to stop running.
WITHOUT_CLASSIFICATION	/*     * A dummy class to pass the pointer of URL.     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// we check the input tag type for image
WITHOUT_CLASSIFICATION	// then we need to download the binary
WITHOUT_CLASSIFICATION	// Putting the string first means it works even if the attribute is null
WITHOUT_CLASSIFICATION	// Now look for URLs in the STYLE attribute
WITHOUT_CLASSIFICATION	// Now parse the DOM tree
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// a url is always in a Tag.
WITHOUT_CLASSIFICATION	// first we check to see if body tag has a // background set
WITHOUT_CLASSIFICATION	// look for applets
WITHOUT_CLASSIFICATION	// look for Objects
WITHOUT_CLASSIFICATION	// second, if the tag was a composite tag, // recursively parse its children.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ proxy.binary.filetype=binary
WITHOUT_CLASSIFICATION	/*     * Optionally number the requests     */
WITHOUT_CLASSIFICATION	// running number
WITHOUT_CLASSIFICATION	// Pass request to new proxy thread
WITHOUT_CLASSIFICATION	// Use default encoding
WITHOUT_CLASSIFICATION	// Tell the sampler to do a multipart post
WITHOUT_CLASSIFICATION	// Set the form data
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used by GUI
WITHOUT_CLASSIFICATION	// and as a string
WITHOUT_CLASSIFICATION	// Set the file uploads
WITHOUT_CLASSIFICATION	// Remove the header for content-type and content-length, since // those values will most likely be incorrect when the sampler // performs the multipart request, because the boundary string // will change
WITHOUT_CLASSIFICATION	// used when postData is pure xml (eg. an xml-rpc call) or for PUT
WITHOUT_CLASSIFICATION	// It is the most common post request, with parameter name and values // We also assume this if no content type is present, to be most backwards compatible, // but maybe we should only parse arguments if the content type is as expected //standard name=value postData
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Just put the whole postbody as the value of a parameter //used when postData is pure xml (ex. an xml-rpc call)
WITHOUT_CLASSIFICATION	// Although the spec says UTF-8 should be used for encoding URL parameters, // most browser use ISO-8859-1 for default if encoding is not known. // We use null for contentEncoding, then the url parameters will be added // with the value in the URL, and the "encode?" flag set to false
WITHOUT_CLASSIFICATION	// Set the content encoding
WITHOUT_CLASSIFICATION	// Check if the request itself tells us what the encoding is
WITHOUT_CLASSIFICATION	// Check if we know the encoding of the page
WITHOUT_CLASSIFICATION	// Check if we know the encoding of the form
WITHOUT_CLASSIFICATION	// Form encoding has priority over page encoding
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// wait for server to stop
WITHOUT_CLASSIFICATION	// Must agree with the order of entries in the drop-down // created in ProxyControlGui.createGroupingPanel() //private static final int GROUPING_NO_GROUPS = 0;
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //- JMX file attributes
WITHOUT_CLASSIFICATION	// Note: Windows user preferences are stored relative to: HKEY_CURRENT_USER\Software\JavaSoft\Prefs
WITHOUT_CLASSIFICATION	// Original numeric order (we now use strings)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Detect if user has pressed a new link
WITHOUT_CLASSIFICATION	// for ssl connection
WITHOUT_CLASSIFICATION	// Proxy configuration SSL
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// Keys for user preferences
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	// Should we match using regexes?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Whether to use dymanic key generation (if supported) // $NON-NLS-1$;
WITHOUT_CLASSIFICATION	// The alias to be used if dynamic host names are not possible // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If this is defined, it is assumed to be the alias of a user-supplied certificate; overrides dynamic mode // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// user-provided keystore // keystore generated by JMeter; single entry
WITHOUT_CLASSIFICATION	// Whether to use the redirect disabling feature (can be switched off if it does not work)
WITHOUT_CLASSIFICATION	// Although this field is mutable, it is only accessed within the synchronized method deliverSampler()
WITHOUT_CLASSIFICATION	// When was the last sample seen?
WITHOUT_CLASSIFICATION	// maintain original behaviour
WITHOUT_CLASSIFICATION	// Convert the old numeric types - just in case someone wants to reload the workbench
WITHOUT_CLASSIFICATION	// make sure we log the error
WITHOUT_CLASSIFICATION	// the url matches the last redirect
WITHOUT_CLASSIFICATION	// Save Location so resulting sample can be disabled
WITHOUT_CLASSIFICATION	// OK, because find only returns correct element types
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Package protected to allow test case access
WITHOUT_CLASSIFICATION	// Package protected to allow test case access
WITHOUT_CLASSIFICATION	// If no expressions are specified, we let the sample pass
WITHOUT_CLASSIFICATION	// Check that we have a content type
WITHOUT_CLASSIFICATION	// Check if the include pattern is matched
WITHOUT_CLASSIFICATION	// Check if the exclude pattern is matched
WITHOUT_CLASSIFICATION	// Not 100% sure, but I believe this can't happen, so // I'll log and throw an error:
WITHOUT_CLASSIFICATION	// Not 100% sure, but I believe this can't happen, so // I'll log and throw an error:
WITHOUT_CLASSIFICATION	// Look for elements directly within the HTTP proxy:
WITHOUT_CLASSIFICATION	// Look for arguments elements in the target controller or higher up:
WITHOUT_CLASSIFICATION	// Special case for the TestPlan's Arguments sub-element:
WITHOUT_CLASSIFICATION	// Remember this was first in its batch
WITHOUT_CLASSIFICATION	// Decent value for timers
WITHOUT_CLASSIFICATION	// Huh! don't store this one!
WITHOUT_CLASSIFICATION	// If we're not storing subsequent samplers, we'll need the // first sampler to do all the work...:
WITHOUT_CLASSIFICATION	// Find the last controller in the target to store the // sampler there:
WITHOUT_CLASSIFICATION	// There's a few properties which are excluded from this processing:
WITHOUT_CLASSIFICATION	// go on with next property.
WITHOUT_CLASSIFICATION	// Build the replacer from all the variables in the collection:
WITHOUT_CLASSIFICATION	// TL - TE
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$; // $NON-NLS-1$;
WITHOUT_CLASSIFICATION	// Assume we have already created the store
WITHOUT_CLASSIFICATION	// Assume we have already created the store
WITHOUT_CLASSIFICATION	// no CA key - probably the wrong store type. // cannot continue
WITHOUT_CLASSIFICATION	// store is faulty, we need to recreate it // if cert is not valid, flag up to recreate it
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// store is faulty, we need to recreate it // if cert is not valid, flag up to recreate it
WITHOUT_CLASSIFICATION	// message includes the file name
WITHOUT_CLASSIFICATION	// no existing file or not valid // Alphanum to avoid issues with command-line quoting // we use same password for both
WITHOUT_CLASSIFICATION	// no existing file or not valid // Alphanum to avoid issues with command-line quoting // we use same password for both
WITHOUT_CLASSIFICATION	// This should now work
WITHOUT_CLASSIFICATION	// This should now work
WITHOUT_CLASSIFICATION	// The subject may be either a host or a domain
WITHOUT_CLASSIFICATION	// reload to pick up new aliases // reloading is very quick compared with creating an entry currently
WITHOUT_CLASSIFICATION	// not a wildcard
WITHOUT_CLASSIFICATION	// This should only be called for a specific host
WITHOUT_CLASSIFICATION	// ensure Proxy threads cannot interfere with each other
WITHOUT_CLASSIFICATION	// reload after adding alias
WITHOUT_CLASSIFICATION	// safer to start afresh
WITHOUT_CLASSIFICATION	// the keystore for use by the Proxy
WITHOUT_CLASSIFICATION	// Allow list of headers to be overridden // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Use with SSL connection
WITHOUT_CLASSIFICATION	// For identifying log messages
WITHOUT_CLASSIFICATION	// keystore for SSL keys; fixed at config except for dynamic host key generation
WITHOUT_CLASSIFICATION	// Check which HTTPSampler class we should use
WITHOUT_CLASSIFICATION	// Now, parse initial request (in case it is a CONNECT request)
WITHOUT_CLASSIFICATION	// Should not happen, but if it does we don't want to continue 
WITHOUT_CLASSIFICATION	// Re-parse (now it's the http request over SSL)
WITHOUT_CLASSIFICATION	// most likely this is because of a certificate error
WITHOUT_CLASSIFICATION	// Now parse the DOM tree
WITHOUT_CLASSIFICATION	// we start to iterate through the elements
WITHOUT_CLASSIFICATION	// a url is always in a Tag.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// With ssl request, url is host:port (without https:// or path) // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*             * Create a Header Manager to ensure that the browsers headers are             * captured and sent to the server             */
WITHOUT_CLASSIFICATION	// Needed for HTTPSampler2
WITHOUT_CLASSIFICATION	// Needed for HTTPSampler2
WITHOUT_CLASSIFICATION	// Find the page encoding and possibly encodings for forms in the page // in the response from the web server
WITHOUT_CLASSIFICATION	// ignored, already processed
WITHOUT_CLASSIFICATION	// Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	// Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	// Generate result (if nec.) and populate it
WITHOUT_CLASSIFICATION	/*             * We don't want to store any cookies in the generated test plan             */
WITHOUT_CLASSIFICATION	// Always remove cookies // Always remove authorization // Remove additional headers
WITHOUT_CLASSIFICATION	// deliverSampler allows sampler to be null, but result must not be null
WITHOUT_CLASSIFICATION	// pick up any recent changes from other threads
WITHOUT_CLASSIFICATION	// the host has a key already
WITHOUT_CLASSIFICATION	// the host matches a domain; use its key
WITHOUT_CLASSIFICATION	// add the remaining parts
WITHOUT_CLASSIFICATION	// Check if alias is suitable here, rather than waiting for connection to fail
WITHOUT_CLASSIFICATION	// drop empty trailing content
WITHOUT_CLASSIFICATION	// We don't want this passed on to browser
WITHOUT_CLASSIFICATION	// We don't want this passed on to browser
WITHOUT_CLASSIFICATION	// Fix the content length
WITHOUT_CLASSIFICATION	// Get rid of the query and the ?
WITHOUT_CLASSIFICATION	//    Remaining implementations delegate to the wrapped key manager
WITHOUT_CLASSIFICATION	// Only check form tags
WITHOUT_CLASSIFICATION	// Find the action / form url
WITHOUT_CLASSIFICATION	// Just use the first one of the possible many charsets
WITHOUT_CLASSIFICATION	// NOTREAD // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// saved copy of first line for error reports
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// second, if the tag was a composite tag, // recursively parse its children.
WITHOUT_CLASSIFICATION	// Get rid of the query and the ?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// parse other header lines, looking for Content-Length
WITHOUT_CLASSIFICATION	// Save the last valid content length one
WITHOUT_CLASSIFICATION	// Keep the raw post data
WITHOUT_CLASSIFICATION	// will be host:port for CONNECT
WITHOUT_CLASSIFICATION	// SSL connection
WITHOUT_CLASSIFICATION	// Don't try to adjust the host name
WITHOUT_CLASSIFICATION	// it must be a proxied HTTPS request // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// JAVA Impl accepts URLs with unsafe characters so don't do anything
WITHOUT_CLASSIFICATION	/*     * Split line into name/value pairs and store in headers if relevant     * If name = "content-length", then return value as int, else return 0     */
WITHOUT_CLASSIFICATION	// Nothing to do
WITHOUT_CLASSIFICATION	// Get the boundary string for the multiparts from the content type
WITHOUT_CLASSIFICATION	// // Parsing Methods //
WITHOUT_CLASSIFICATION	// chop to "server.name:x/thing"
WITHOUT_CLASSIFICATION	// chop to "server.name:x/thing"
WITHOUT_CLASSIFICATION	// chop to server.name:xx // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// chop to server.name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Handle IPv6 urls
WITHOUT_CLASSIFICATION	// chop to server.name:xx
WITHOUT_CLASSIFICATION	// chop to server.name
WITHOUT_CLASSIFICATION	// Generate Error Body
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Prevent both redirect types from being selected
WITHOUT_CLASSIFICATION	// 300 codes tell client to do actions
WITHOUT_CLASSIFICATION	/*     * Use regexes to match the source data     */
WITHOUT_CLASSIFICATION	// Proxy can take some while to start up; show a wating cursor
WITHOUT_CLASSIFICATION	// This is applied to fields that should cause a restart when changed // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//- action names
WITHOUT_CLASSIFICATION	// Resource names for column headers // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used by itemListener // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// System.err.println("Enable Restart");
WITHOUT_CLASSIFICATION	/*     * Handles groupingMode. actionPerfomed is not suitable, as that seems to be     * activated whenever the Proxy is selected in the Test Plan     * Also handles samplerTypeName     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Drop the last character:
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate rows.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$  $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Default value // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // maintain original default
WITHOUT_CLASSIFICATION	// Default value // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Action listener will be added later
WITHOUT_CLASSIFICATION	// Ignore everything else
WITHOUT_CLASSIFICATION	// Note: position of these elements in the menu *must* match the // corresponding ProxyControl.GROUPING_* values. // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Stop action notifications while we shuffle this around:
WITHOUT_CLASSIFICATION	// Include request body if it is a post or put or patch
WITHOUT_CLASSIFICATION	// Reinstate action notifications:
WITHOUT_CLASSIFICATION	// never null
WITHOUT_CLASSIFICATION	// Set the current value:
WITHOUT_CLASSIFICATION	// never null
WITHOUT_CLASSIFICATION	// can share these
WITHOUT_CLASSIFICATION	/*         * Don't redirect the following:         * 300 = Multiple choice         * 304 = Not Modified         * 305 = Use Proxy         * 306 = (Unused)         */
WITHOUT_CLASSIFICATION	// get the start of the file
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Preserve original case
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Update the dataEncoding
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Extract the content-type if present // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Maximum connection retries
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Temporary copies, so can set the final ones
WITHOUT_CLASSIFICATION	// N.B. this needs to be done before opening the connection
WITHOUT_CLASSIFICATION	// Update follow redirects setting just for this connection
WITHOUT_CLASSIFICATION	// N.B. must be done after opening connection
WITHOUT_CLASSIFICATION	// works OK even if ContentEncoding is null
WITHOUT_CLASSIFICATION	// Normal InputStream is not available
WITHOUT_CLASSIFICATION	// N.B. this closes 'in'
WITHOUT_CLASSIFICATION	// Add all the headers from the HeaderManager
WITHOUT_CLASSIFICATION	// Get all the request properties, which are the headers set on the connection
WITHOUT_CLASSIFICATION	// Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	// value is a List of Strings
WITHOUT_CLASSIFICATION	// Count the retries as well in the time
WITHOUT_CLASSIFICATION	// Check cache for an entry with an Expires header in the future
WITHOUT_CLASSIFICATION	// Start with 0 so tries at least once, and retries at most MAX_CONN_RETRIES times
WITHOUT_CLASSIFICATION	// Attempt the connection:
WITHOUT_CLASSIFICATION	// we don't want interrupt to try disconnection again
WITHOUT_CLASSIFICATION	// try again
WITHOUT_CLASSIFICATION	// This should never happen, but...
WITHOUT_CLASSIFICATION	// Nice, we've got a connection. Finish sending the request:
WITHOUT_CLASSIFICATION	// Request sent. Now get the response:
WITHOUT_CLASSIFICATION	// Done with the sampling proper.
WITHOUT_CLASSIFICATION	// Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	// Cannot be null here
WITHOUT_CLASSIFICATION	// e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	// if either a file or path location is given, // get the file object. // we have a file
WITHOUT_CLASSIFICATION	// Set details from the actual response // Needs to be done before response can be stored
WITHOUT_CLASSIFICATION	// Sampling proper - establish the connection and read the response: // Repeatedly try to connect:
WITHOUT_CLASSIFICATION	// Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	// If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	// has been seen in a redirect // use header (if possible) if no message found
WITHOUT_CLASSIFICATION	// Don't process again
WITHOUT_CLASSIFICATION	// Save cache information
WITHOUT_CLASSIFICATION	/*     * Random class for generating random numbers.     */
WITHOUT_CLASSIFICATION	// return the absolutePath of the file
WITHOUT_CLASSIFICATION	/*     * The method will check to see if JMeter was started in NonGui mode. If it     * was, it will try to pick up the proxy host and port values if they were     * passed to JMeter.java.     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX file attribut names - do not change! //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// we check to see if the proxy host and port are set
WITHOUT_CLASSIFICATION	/*     * This method uses Apache soap util to create the proper DOM elements.     *     * @return Element     */
WITHOUT_CLASSIFICATION	//get filename or ""
WITHOUT_CLASSIFICATION	/* Note that the filename is also used as a key to the pool (if used)        ** Documents provided in the testplan are not currently pooled, as they may change        *  between samples.        */
WITHOUT_CLASSIFICATION	// we created the document
WITHOUT_CLASSIFICATION	// Must be local content - or not using pool
WITHOUT_CLASSIFICATION	/*         * Consider using Apache commons pool to create a pool of document         * builders or make sure XMLParserUtils creates builders efficiently.         */
WITHOUT_CLASSIFICATION	//Suppress messages to stdout
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// we don't want interrupt to try disconnection again // We don't want to continue using this connection, even if KeepAlive is set // May not exist
WITHOUT_CLASSIFICATION	// calling disconnect doesn't close the connection immediately, // but indicates we're through with it. The JVM should close // it when necessary. // we don't want interrupt to try disconnection again // Disconnect unless using KeepAlive
WITHOUT_CLASSIFICATION	// it's not set, lets check if the user passed // proxy host and port from command line
WITHOUT_CLASSIFICATION	// it's not set, lets check if the user passed // proxy host and port from command line
WITHOUT_CLASSIFICATION	// must be a "here" document
WITHOUT_CLASSIFICATION	/*     * Required to satisfy HTTPSamplerBase Should not be called, as we override     * sample()     */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //- JMX file attribut names - do not change!
WITHOUT_CLASSIFICATION	// Assume it will fail // ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	// set the response defaults
WITHOUT_CLASSIFICATION	// WARNING - could be large
WITHOUT_CLASSIFICATION	// if a blank HeaderManager exists, try to // get the SOAPHTTPConnection. After the first // request, there should be a connection object // stored with the cookie header info.
WITHOUT_CLASSIFICATION	// set the auth. thanks to KiYun Roe for contributing the patch // I cleaned up the patch slightly. 5-26-05
WITHOUT_CLASSIFICATION	// check the proxy
WITHOUT_CLASSIFICATION	// if use proxy is set, we try to pick up the // proxy host and port from either the text // fields or from JMeterUtil if they were passed // from command line
WITHOUT_CLASSIFICATION	// if for some reason the host is blank and the port is // zero, the sampler will fail silently
WITHOUT_CLASSIFICATION	// API uses raw types
WITHOUT_CLASSIFICATION	// It is not possible to access the actual HTTP response code, so we assume no data means failure
WITHOUT_CLASSIFICATION	// Scheme used for slow HTTP sockets. Cannot be set as a default, because must be set on an HttpClient instance.
WITHOUT_CLASSIFICATION	// We always want to override the HTTPS scheme, because we want to trust all certificates and hosts
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Done with the sampling proper.
WITHOUT_CLASSIFICATION	// Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	// If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	// Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	// Save cache information
WITHOUT_CLASSIFICATION	// condensed length (without \r) // Add \r for each header // Add \r for initial header // final \r\n before data
WITHOUT_CLASSIFICATION	// by not reading the response // for real, it improves the // performance on slow clients
WITHOUT_CLASSIFICATION	// reponse code doesn't really apply, since // the soap driver doesn't provide a // response code
WITHOUT_CLASSIFICATION	/*     * Create a set of default parameters from the ones initially created.     * This allows the defaults to be overridden if necessary from the properties file.     */
WITHOUT_CLASSIFICATION	// Set up HTTP scheme override if necessary
WITHOUT_CLASSIFICATION	// We always want to override the HTTPS scheme
WITHOUT_CLASSIFICATION	// Accessed from multiple threads
WITHOUT_CLASSIFICATION	// can throw IOException
WITHOUT_CLASSIFICATION	// perform the sample
WITHOUT_CLASSIFICATION	// Needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	// We've finished with the request, so we can add the LocalAddress to it for display
WITHOUT_CLASSIFICATION	// HTTP protocol violation, but avoids NPE
WITHOUT_CLASSIFICATION	// record some sizes to allow HTTPSampleResult.getBytes() with different options
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	// pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	// protocol://[user:pass@]host:[port]
WITHOUT_CLASSIFICATION	// Always create hash because we will always need it
WITHOUT_CLASSIFICATION	// Allow for null strings
WITHOUT_CLASSIFICATION	// otherwise proxy String fields may be null
WITHOUT_CLASSIFICATION	// No proxy, so don't check proxy fields
WITHOUT_CLASSIFICATION	// Lookup key - must agree with all the values used to create the HttpClient.
WITHOUT_CLASSIFICATION	// One-time init for this client
WITHOUT_CLASSIFICATION	// set retry count
WITHOUT_CLASSIFICATION	// Override the defualt schemes as necessary
WITHOUT_CLASSIFICATION	// Set up proxy details
WITHOUT_CLASSIFICATION	// save the agent for next time round
WITHOUT_CLASSIFICATION	// Use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	// reset in case was set previously
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. need to separate protocol from authority otherwise http://server would match https://erver // could use separate fields, but simpler to combine them
WITHOUT_CLASSIFICATION	// Method left empty here, but allows subclasses to override
WITHOUT_CLASSIFICATION	// header[0] is not the status line... // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// remove any port specification // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// no need to specify the port if it is the default
WITHOUT_CLASSIFICATION	// Get all the request headers
WITHOUT_CLASSIFICATION	// Helper class so we can generate request data without dumping entire file contents
WITHOUT_CLASSIFICATION	// encoding does not really matter here
WITHOUT_CLASSIFICATION	// Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	// Check if we should do a multipart/form-data or an // application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we use that as the // encoding of any parameter values
WITHOUT_CLASSIFICATION	// Write the request to our own stream
WITHOUT_CLASSIFICATION	// Create the parts // Add any parameters
WITHOUT_CLASSIFICATION	// We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ this is the default used by HttpClient
WITHOUT_CLASSIFICATION	// not multipart // Check if the header manager had a content type header // This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request // TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we set it as http parameter, so that // the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the post body
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	// Note: if "Encoded?" is not selected, arg.getEncodedValue is equivalent to arg.getValue
WITHOUT_CLASSIFICATION	// Note: if "Encoded?" is not selected, arg.getEncodedValue is equivalent to arg.getValue
WITHOUT_CLASSIFICATION	// Let StringEntity perform the encoding
WITHOUT_CLASSIFICATION	// It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Add the parameters
WITHOUT_CLASSIFICATION	// Use the default encoding for urls
WITHOUT_CLASSIFICATION	// The HTTPClient always urlencodes both name and value, // so if the argument is already encoded, we have to decode // it before adding it to the post request
WITHOUT_CLASSIFICATION	// The value is already encoded by the user // Must decode the value now, so that when the // httpclient encodes it, we end up with the same value // as the user had entered.
WITHOUT_CLASSIFICATION	// Add the parameter, httpclient will urlencode it
WITHOUT_CLASSIFICATION	// Buffer to hold the entity body
WITHOUT_CLASSIFICATION	// we provide the MIME type here
WITHOUT_CLASSIFICATION	// Check for local contentEncoding (charset) override; fall back to default for content body // we do this here rather so we can use the same charset to retrieve the data
WITHOUT_CLASSIFICATION	// Only create this if we are overriding whatever default there may be // If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the entity body
WITHOUT_CLASSIFICATION	// Check if we have any content to send for body
WITHOUT_CLASSIFICATION	// We get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null // no need for content-type here
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the entity body
WITHOUT_CLASSIFICATION	// If the request entity is repeatable, we can send it first to // our own stream, so we can return it
WITHOUT_CLASSIFICATION	// this probably cannot happen
WITHOUT_CLASSIFICATION	// Does not need to be synchronised, as all access is from same thread
WITHOUT_CLASSIFICATION	// don't try twice
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// may be the empty string
WITHOUT_CLASSIFICATION	// N.B. It's not po ssible to forward threadStarted() to the implementation class. // This is because Config items are not processed until later, and HTTPDefaults may define the implementation
WITHOUT_CLASSIFICATION	// Forward to sampler
WITHOUT_CLASSIFICATION	// Forward to sampler
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// force reopen on next sample
WITHOUT_CLASSIFICATION	// Content-length
WITHOUT_CLASSIFICATION	// Marker for query string attribute
WITHOUT_CLASSIFICATION	//+ JMX names - do not change // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// More general attributes not supported
WITHOUT_CLASSIFICATION	// Authorization
WITHOUT_CLASSIFICATION	// Host always
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// content-type
WITHOUT_CLASSIFICATION	// content-type
WITHOUT_CLASSIFICATION	// we need to use up the int now
WITHOUT_CLASSIFICATION	//int mark =
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Dummy
WITHOUT_CLASSIFICATION	// Methods needed by subclasses to get access to the implementation
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Help convert existing JMX files which use HTTPSampler[2] nodes
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)     */
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// KEY = TCPKEY or ERRKEY, Entry= Socket or String
WITHOUT_CLASSIFICATION	// superclass does not support types
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default value: false
WITHOUT_CLASSIFICATION	// default for concurrent pool (do not change)
WITHOUT_CLASSIFICATION	/* Shown as Parameter Name on the GUI */
WITHOUT_CLASSIFICATION	//- JMX names
WITHOUT_CLASSIFICATION	// Default concurrent pool size for download embedded resources
WITHOUT_CLASSIFICATION	// The default setting to be used (i.e. historic)
WITHOUT_CLASSIFICATION	// for Thread Pool for resources but no need to use a special value?
WITHOUT_CLASSIFICATION	// Use for ComboBox Source Address Type. Preserve order (specially with localization)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default value: 60 secs 
WITHOUT_CLASSIFICATION	// FILE_FIELD is kept for backward compatibility with old test plans // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Supported methods:
WITHOUT_CLASSIFICATION	// IMAGE_PARSER now really means EMBEDDED_PARSER // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// i.e. GET
WITHOUT_CLASSIFICATION	// Derive the mapping of content types to parsers
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Store MD5 hash instead of storing response // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Not synch, but it is not modified after creation
WITHOUT_CLASSIFICATION	// returns empty array for null
WITHOUT_CLASSIFICATION	////////////////////// Code ///////////////////////////
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Skip parameters with a blank name (allows use of optional variables in parameter lists)
WITHOUT_CLASSIFICATION	// If there is one file with no parameter name, the file will // be sent as post body.
WITHOUT_CLASSIFICATION	// We use multipart if we have been told so, or files are present // and the files should not be send as the post body
WITHOUT_CLASSIFICATION	// We know that URL arguments should always be encoded in UTF-8 according to spec
WITHOUT_CLASSIFICATION	// Parse the arguments in querystring, assuming specified encoding for values
WITHOUT_CLASSIFICATION	// Check if there are any difference between name and value and their encoded name and value
WITHOUT_CLASSIFICATION	// If there is no difference, we mark it as not needing encoding
WITHOUT_CLASSIFICATION	// private method to allow AsyncSample to reset the value without performing checks
WITHOUT_CLASSIFICATION	// private method to allow AsyncSample to reset the value without performing checks
WITHOUT_CLASSIFICATION	// allow use of relative file URLs
WITHOUT_CLASSIFICATION	// HTTP URLs must be absolute, allow file to be relative // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add the query string if it is a HTTP GET or DELETE request
WITHOUT_CLASSIFICATION	// Get the query string encoded in specified encoding // If no encoding is specified by user, we will get it // encoded in UTF-8, which is what the HTTP spec says
WITHOUT_CLASSIFICATION	// Already contains a prefix
WITHOUT_CLASSIFICATION	// If default port for protocol is used, we do not include port in URL
WITHOUT_CLASSIFICATION	// We use the encoding which should be used according to the HTTP spec, which is UTF-8
WITHOUT_CLASSIFICATION	// Check if the sampler has a specified content encoding
WITHOUT_CLASSIFICATION	// Encode the parameter value in the specified content encoding
WITHOUT_CLASSIFICATION	// records the existance of an equal sign
WITHOUT_CLASSIFICATION	// We do not know the content encoding of the query string
WITHOUT_CLASSIFICATION	// Append body if it is a post or put
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// need to handle four cases: // - string contains name=value // - string contains name= // - string contains name // - empty string
WITHOUT_CLASSIFICATION	// is there a separator? // case of name=value, name=
WITHOUT_CLASSIFICATION	// If we know the encoding, we can decode the argument value, // to make it easier to read for the user
WITHOUT_CLASSIFICATION	// If we do not know the encoding, we just use the encoded value // The browser has already done the encoding, so save the values as is
WITHOUT_CLASSIFICATION	// we have a name
WITHOUT_CLASSIFICATION	// we don't; use the default parser
WITHOUT_CLASSIFICATION	// Iterate through the URLs and download each image:
WITHOUT_CLASSIFICATION	// Get the URL matcher
WITHOUT_CLASSIFICATION	// don't fetch unless pattern compiles
WITHOUT_CLASSIFICATION	// For concurrent get resources
WITHOUT_CLASSIFICATION	// See catch clause below
WITHOUT_CLASSIFICATION	// There were some spaces in the URL
WITHOUT_CLASSIFICATION	// I don't think localMatcher can be null here, but check just in case
WITHOUT_CLASSIFICATION	// we have a pattern and the URL does not match, so skip it
WITHOUT_CLASSIFICATION	// default: serial download embedded resources
WITHOUT_CLASSIFICATION	// IF for download concurrent embedded resources
WITHOUT_CLASSIFICATION	// init with default value
WITHOUT_CLASSIFICATION	// sample all resources with threadpool
WITHOUT_CLASSIFICATION	// call normal shutdown (wait ending all tasks)
WITHOUT_CLASSIFICATION	// put a timeout if tasks couldn't terminate
WITHOUT_CLASSIFICATION	// add result to main sampleResult
WITHOUT_CLASSIFICATION	// did all the tasks finish?
WITHOUT_CLASSIFICATION	// Not intended to be instantiated
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// kill any remaining tasks
WITHOUT_CLASSIFICATION	/*     * @param res HTTPSampleResult to check     * @return parser class name (may be "") or null if entry does not exist     */
WITHOUT_CLASSIFICATION	// Browsers seem to tolerate Location headers with spaces, // replacing them automatically with %20. We want to emulate // this behaviour.
WITHOUT_CLASSIFICATION	// The redirect URL we got was not a valid URL
WITHOUT_CLASSIFICATION	// Only add sample if it is a sample of valid url redirect, i.e. that // we have actually sampled the URL
WITHOUT_CLASSIFICATION	// Now populate the any totalRes fields that need to // come from lastRes:
WITHOUT_CLASSIFICATION	/*     * Method to set files list to be uploaded.     *     * @param value     *   HTTPFileArgs object that stores file list to be uploaded.     */
WITHOUT_CLASSIFICATION	// no point saving an empty list
WITHOUT_CLASSIFICATION	/*     * Method to get files list to be uploaded.     */
WITHOUT_CLASSIFICATION	// Weed out the empty files
WITHOUT_CLASSIFICATION	// NOOP to provide based empty impl and avoid breaking existing implementations
WITHOUT_CLASSIFICATION	// may also happen if long value > int.max
WITHOUT_CLASSIFICATION	// for new test plans that don't have FILE/PARAM/MIME properties
WITHOUT_CLASSIFICATION	// Updated the property lists
WITHOUT_CLASSIFICATION	// We don't want to use CacheManager clone but the parent one, and CacheManager is Thread Safe
WITHOUT_CLASSIFICATION	// Non-instantiable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Implement these here, to avoid re-implementing for sub-classes // (previously these were implemented in all TestElements)
WITHOUT_CLASSIFICATION	// 8kB is the (max) size to have the latency ('the first packet') // Enough for MD5
WITHOUT_CLASSIFICATION	// OK, we have an old-style file definition // save it // Now deal with any additional file arguments
WITHOUT_CLASSIFICATION	// -1 means not defined
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Control reuse of cached SSL Context in subsequent iterations
WITHOUT_CLASSIFICATION	// e.g. *.apache.org // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// e.g. www.apache.org
WITHOUT_CLASSIFICATION	// Get hostname
WITHOUT_CLASSIFICATION	// N.B. These values are used in jmeter.properties (jmeter.httpsampler) - do not change // They can alse be used as the implementation name
WITHOUT_CLASSIFICATION	//+ JMX implementation attribute values (also displayed in GUI) - do not change // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //- JMX
WITHOUT_CLASSIFICATION	// Helper class (callback) for applying parameter definitions
WITHOUT_CLASSIFICATION	// get past separator
WITHOUT_CLASSIFICATION	// Put request does not use multipart, so no need for boundary
WITHOUT_CLASSIFICATION	// Get the encoding to use for the request
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// Create the content length we are going to write
WITHOUT_CLASSIFICATION	// We create the post body content now, so we know the size
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the put body
WITHOUT_CLASSIFICATION	// Keep the content, will be sent later
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Request sent. Now get the response:
WITHOUT_CLASSIFICATION	// Done with the sampling proper.
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	// e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	// Needs to be done after execute to pick up all the headers
WITHOUT_CLASSIFICATION	// HTTP protocol violation, but avoids NPE
WITHOUT_CLASSIFICATION	// record some sizes to allow HTTPSampleResult.getBytes() with different options
WITHOUT_CLASSIFICATION	// Handle the various methods
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Allows HTTPSamplerProxy to call threadFinished; subclasses can override if necessary
WITHOUT_CLASSIFICATION	// Allows HTTPSamplerProxy to call notifyFirstSampleAfterLoopRestart; subclasses can override if necessary
WITHOUT_CLASSIFICATION	// Provide access to HTTPSamplerBase methods
WITHOUT_CLASSIFICATION	// did not want to spoof the IP address
WITHOUT_CLASSIFICATION	// OK to set pre-emptive auth?
WITHOUT_CLASSIFICATION	// Needs to be accessible by HTTPSampler2
WITHOUT_CLASSIFICATION	// Set default parameters as needed
WITHOUT_CLASSIFICATION	// Process Commons HttpClient parameters file // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If the pre-emptive parameter is undefined, then we can set it as needed // otherwise we should do what the user requested.
WITHOUT_CLASSIFICATION	// Handle old-style JMeter properties
WITHOUT_CLASSIFICATION	// This must be done last, as must not be overridden
WITHOUT_CLASSIFICATION	// We do our own cookie handling
WITHOUT_CLASSIFICATION	// May generate IllegalArgumentException
WITHOUT_CLASSIFICATION	// HC3.1 does not have the method
WITHOUT_CLASSIFICATION	// Set any default request headers
WITHOUT_CLASSIFICATION	// Setup connection
WITHOUT_CLASSIFICATION	// will be null for HEAD
WITHOUT_CLASSIFICATION	// tmp inputstream needs to have a good counting
WITHOUT_CLASSIFICATION	// Pick up Actual path (after redirects)
WITHOUT_CLASSIFICATION	// Can be missing, e.g. on redirect
WITHOUT_CLASSIFICATION	// Exclude the COOKIE header, since cookie is reported separately in the sample
WITHOUT_CLASSIFICATION	// Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	// Save cache information
WITHOUT_CLASSIFICATION	// Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	// pick up headers if failed to execute the request
WITHOUT_CLASSIFICATION	// Set up the local address if one exists
WITHOUT_CLASSIFICATION	// Use special field ip source address (for pseudo 'ip spoofing')
WITHOUT_CLASSIFICATION	// Method left empty here, but allows subclasses to override
WITHOUT_CLASSIFICATION	// remove any port specification // $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Get all the request headers
WITHOUT_CLASSIFICATION	// add a \r\n
WITHOUT_CLASSIFICATION	// e.g. some kinds of invalid URL
WITHOUT_CLASSIFICATION	// already include the \r\n
WITHOUT_CLASSIFICATION	// last \r\n before response data
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*         *  We use the HostConfiguration as the key to retrieve the HttpClient,         *  so need to ensure that any items used in its equals/hashcode methods are         *  not changed after use, i.e.:         *  host, port, protocol, localAddress, proxy         *        */
WITHOUT_CLASSIFICATION	// All needed to ensure re-usablility
WITHOUT_CLASSIFICATION	// null means use the default
WITHOUT_CLASSIFICATION	// Dynamic proxy overrules static proxy
WITHOUT_CLASSIFICATION	// N.B. HostConfiguration.equals() includes proxy settings in the compare.
WITHOUT_CLASSIFICATION	// Set up any required Proxy credentials
WITHOUT_CLASSIFICATION	// Allow HttpClient to handle the redirects:
WITHOUT_CLASSIFICATION	// Set all the headers from the HeaderManager
WITHOUT_CLASSIFICATION	// header[0] is not the status line... // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Check if we should do a multipart/form-data or an // application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we use that as the // encoding of any parameter values
WITHOUT_CLASSIFICATION	// Write the request to our own stream
WITHOUT_CLASSIFICATION	// Create the parts // Add any parameters
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ this is the default used by HttpClient
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NT Includes other types of Credentials
WITHOUT_CLASSIFICATION	// We have credentials - should we set pre-emptive authentication?
WITHOUT_CLASSIFICATION	// We don't know how many entries will be skipped
WITHOUT_CLASSIFICATION	// Add any files
WITHOUT_CLASSIFICATION	// We do not know the char set of the file to be uploaded, so we set it to null
WITHOUT_CLASSIFICATION	// We do not know what the char set of the file is
WITHOUT_CLASSIFICATION	// Set the multipart for the post
WITHOUT_CLASSIFICATION	// .sendMultipartWithoutFileContent(bos);
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// We get the posted bytes using the encoding used to create it
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request // TODO: needs a multiple file upload scenerio
WITHOUT_CLASSIFICATION	// If getSendFileAsPostBody returned true, it's sure that file is not null
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we set it as http parameter, so that // the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the post body
WITHOUT_CLASSIFICATION	// It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Add the parameters
WITHOUT_CLASSIFICATION	// Use the default encoding for urls
WITHOUT_CLASSIFICATION	// The HTTPClient always urlencodes both name and value, // so if the argument is already encoded, we have to decode // it before adding it to the post request
WITHOUT_CLASSIFICATION	// The value is already encoded by the user // Must decode the value now, so that when the // httpclient encodes it, we end up with the same value // as the user had entered.
WITHOUT_CLASSIFICATION	// Add the parameter, httpclient will urlencode it
WITHOUT_CLASSIFICATION	// Check if we have any content to send for body
WITHOUT_CLASSIFICATION	// We get the posted bytes using the charset that was used to create them
WITHOUT_CLASSIFICATION	// Does not need to be synchronised, as all access is from same thread
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// For all the file multiparts, we must tell it to not include // the actual file content
WITHOUT_CLASSIFICATION	// For all the file multiparts, we must revert the hiding of // the actual file content
WITHOUT_CLASSIFICATION	// Check if the header manager had a content type header // This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	// Buffer to hold the put body, except file content
WITHOUT_CLASSIFICATION	// Should be true
WITHOUT_CLASSIFICATION	// Count the retries as well in the time
WITHOUT_CLASSIFICATION	// Request sent. Now get the response:
WITHOUT_CLASSIFICATION	// Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content
WITHOUT_CLASSIFICATION	// If a content encoding is specified, we set it as http parameter, so that // the post body will be encoded in the specified content encoding
WITHOUT_CLASSIFICATION	// If the request entity is repeatable, we can send it first to // our own stream, so we can return it
WITHOUT_CLASSIFICATION	// If the request entity is repeatable, we can send it first to // our own stream, so we can return it
WITHOUT_CLASSIFICATION	// Check if the header manager had a content type header // This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the put body
WITHOUT_CLASSIFICATION	// Check if we should send only placeholder text for the // file content, or the real file content
WITHOUT_CLASSIFICATION	// Can cause NPE in HttpClient 3.1 //((SimpleHttpConnectionManager)cl.getHttpConnectionManager()).shutdown();// Closes the connection // Revert to original method: // Closes the connection
WITHOUT_CLASSIFICATION	// Implemented by parent class
WITHOUT_CLASSIFICATION	// Take length from file
WITHOUT_CLASSIFICATION	// Use this to override file length
WITHOUT_CLASSIFICATION	// All the other headers are set up by HTTPSampler2.setupConnection()
WITHOUT_CLASSIFICATION	// No header provided
WITHOUT_CLASSIFICATION	// so we don't generate chunked encoding
WITHOUT_CLASSIFICATION	// will use chunked encoding
WITHOUT_CLASSIFICATION	// Some headers are set by executeMethod()
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Done with the sampling proper.
WITHOUT_CLASSIFICATION	// Now collect the results into the HTTPSampleResult:
WITHOUT_CLASSIFICATION	// e.g. text/html; charset=ISO-8859-1
WITHOUT_CLASSIFICATION	// If we redirected automatically, the URL may have changed
WITHOUT_CLASSIFICATION	// Store any cookies received in the cookie manager:
WITHOUT_CLASSIFICATION	// Save cache information
WITHOUT_CLASSIFICATION	// Follow redirects and download page resources if appropriate:
WITHOUT_CLASSIFICATION	// Buffer to hold the post body, except file content
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// will be null for HEAD
WITHOUT_CLASSIFICATION	// Pick up Actual path (after redirects)
WITHOUT_CLASSIFICATION	// Can be missing, e.g. on redirect
WITHOUT_CLASSIFICATION	// e.g. some kinds of invalid URL
WITHOUT_CLASSIFICATION	// Add any files
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// charset must agree with content-type below // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//contentLength > 0 ? contentLength : DEFAULT_INITIAL_BUFFER_SIZE);
WITHOUT_CLASSIFICATION	// first response
WITHOUT_CLASSIFICATION	// save the latency
WITHOUT_CLASSIFICATION	// Set up the defaults (may be overridden below)
WITHOUT_CLASSIFICATION	// NOTUSED private Class PARSERCLASS = null;
WITHOUT_CLASSIFICATION	// Was there an error?
WITHOUT_CLASSIFICATION	// N.B. Must be in this class for the TestBean code to work
WITHOUT_CLASSIFICATION	// Retrieve the formatted data using the same encoding used to create it
WITHOUT_CLASSIFICATION	// Write end of multipart
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Check if we should do a multipart/form-data or an // application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Get the encoding to use for the request
WITHOUT_CLASSIFICATION	// If there are no arguments, we can send a file as the body of the request
WITHOUT_CLASSIFICATION	// Keep the content, will be sent later
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Write the form data post body, which we have constructed // in the setHeaders. This contains the multipart start divider // and any form data, i.e. arguments
WITHOUT_CLASSIFICATION	// First write the start multipart file // TODO - charset?
WITHOUT_CLASSIFICATION	// Retrieve the formatted data using the same encoding used to create it // TODO - charset? // Write the actual file content
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content // $NON-NLS-1$ // Write the end of multipart file
WITHOUT_CLASSIFICATION	// we're sure that there is at least one file because of // getSendFileAsPostBody method's return value.
WITHOUT_CLASSIFICATION	// We just add placeholder text for file content // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Write the form section
WITHOUT_CLASSIFICATION	// First the multipart start divider
WITHOUT_CLASSIFICATION	// Add any parameters
WITHOUT_CLASSIFICATION	// End the previous multipart
WITHOUT_CLASSIFICATION	// End the previous multipart
WITHOUT_CLASSIFICATION	// Write multipart for parameter
WITHOUT_CLASSIFICATION	// If there are any files, we need to end the previous multipart
WITHOUT_CLASSIFICATION	// Write multipart for file
WITHOUT_CLASSIFICATION	// Add also the length of the file content
WITHOUT_CLASSIFICATION	// And the end of the file multipart
WITHOUT_CLASSIFICATION	// Add the end of multipart
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Check if we should do a multipart/form-data or an // application/x-www-form-urlencoded post request
WITHOUT_CLASSIFICATION	// Allow the mimetype of the file to control the content type
WITHOUT_CLASSIFICATION	// If none of the arguments have a name specified, we // just send all the values as the post body
WITHOUT_CLASSIFICATION	// If we have a file, but no data, then read the file
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// superclass does not support types
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// Just append all the parameter values, and use that as the post body
WITHOUT_CLASSIFICATION	// It is a normal post request, with parameter names and values
WITHOUT_CLASSIFICATION	// Set the content type
WITHOUT_CLASSIFICATION	// Create the content length we are going to write
WITHOUT_CLASSIFICATION	// We create the post body content now, so we know the size
WITHOUT_CLASSIFICATION	// Keep the content, will be sent later
WITHOUT_CLASSIFICATION	// Set the content length
WITHOUT_CLASSIFICATION	// Check if the header manager had a content type header // This allows the user to specify his own content-type for a POST request
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Now we just construct any multipart for the files // We only construct the file multipart start, we do not write // the actual file content
WITHOUT_CLASSIFICATION	// we're sure that there is one file because of // getSendFileAsPostBody method's return value.
WITHOUT_CLASSIFICATION	// Exception in progress
WITHOUT_CLASSIFICATION	// Write boundary end marker
WITHOUT_CLASSIFICATION	// get access to buffer
WITHOUT_CLASSIFICATION	// wrap read() methods to track output buffer
WITHOUT_CLASSIFICATION	// Preload the output so that can be read back as HTTP
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// 1k - the previous 100k made no sense (there's tons of buffers // elsewhere in the chain) and it caused OOM when many concurrent // uploads were being done. Could be fixed by increasing the evacuation // ratio in bin/jmeter[.bat], but this is better.
WITHOUT_CLASSIFICATION	// make sure buffer details // track the output
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Override all the super-class Socket methods.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// timeout to retrieve wsdl when server not response
WITHOUT_CLASSIFICATION	// NOTUSED String portname = pnode.getAttribute("name"); // used to check binding, but now it doesn't. it was // failing when wsdl did not using binding as expected
WITHOUT_CLASSIFICATION	// check soap12
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket()     */
WITHOUT_CLASSIFICATION	// Characters per second to emulate
WITHOUT_CLASSIFICATION	// in the rare case the WSDL is protected and requires // authentication, use the AuthManager to set the // authorization. Basic and Digest authorization are // pretty weak and don't provide real security.
WITHOUT_CLASSIFICATION	// get the node
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// get the soap:operation
WITHOUT_CLASSIFICATION	// there should only be one soap:operation node per operation
WITHOUT_CLASSIFICATION	// first we iterate through the bindings
WITHOUT_CLASSIFICATION	// now we iterate through the operations
WITHOUT_CLASSIFICATION	// if the first child is soap:operation // we add it to the array
WITHOUT_CLASSIFICATION	// new WSDLHelper("http://services.bio.ifi.lmu.de:1046/prothesaurus/services/BiologicalNameService?wsdl");
WITHOUT_CLASSIFICATION	// Remove quotes from charset name
WITHOUT_CLASSIFICATION	// get ../ or ../../ etc.
WITHOUT_CLASSIFICATION	// find index of path start
WITHOUT_CLASSIFICATION	// absolute URL
WITHOUT_CLASSIFICATION	// find path endIndex
WITHOUT_CLASSIFICATION	// install new path
WITHOUT_CLASSIFICATION	// This ensures tha HttpClient knows about the protocol
WITHOUT_CLASSIFICATION	// Now allow the URL handling to work.
WITHOUT_CLASSIFICATION	// not needed for HttpClient
WITHOUT_CLASSIFICATION	// Check if we have it in the cache
WITHOUT_CLASSIFICATION	// Perform the encoding
WITHOUT_CLASSIFICATION	// LRUMap does not support generics currently
WITHOUT_CLASSIFICATION	// We assume the argument value is encoded according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	// We assume the name is always encoded according to spec
WITHOUT_CLASSIFICATION	// The value is encoded in the specified encoding
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// skip expensive processing if it cannot apply // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Match /../[../] etc. // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// document or context-relative URL like: // '/path/to' // OR '../path/to' // OR '/path/to/../path/'
WITHOUT_CLASSIFICATION	// path is between idx='pathStartIndex' (inclusive) and // idx='pathEndIndex' (exclusive)
WITHOUT_CLASSIFICATION	// append '/' if this isn't the last token or it is but the original // path terminated w/ a '/'
WITHOUT_CLASSIFICATION	// This can't happen (how should utf8 not be supported!?!), // so just throw an Error:
WITHOUT_CLASSIFICATION	// Encode according to the HTTP spec, i.e. UTF-8
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// indicate that an error occured
WITHOUT_CLASSIFICATION	// we check the count to see if we have exceeded // the number of lines to parse. There's no way // to know where to stop in the file. Therefore // we use break to escape the while loop when // we've reached the count.
WITHOUT_CLASSIFICATION	// this.READER = new BufferedReader(new // FileReader(this.SOURCE)); // parse(this.READER,el);
WITHOUT_CLASSIFICATION	// we clean the line to get // rid of extra stuff
WITHOUT_CLASSIFICATION	// now we set request method
WITHOUT_CLASSIFICATION	// increment the current count
WITHOUT_CLASSIFICATION	// increment the current count
WITHOUT_CLASSIFICATION	// we filter the line first, before we try // to separate the URL into file and // parameters.
WITHOUT_CLASSIFICATION	// in the case when the filter is not set, we // parse all the lines
WITHOUT_CLASSIFICATION	// check the URL for "?" symbol
WITHOUT_CLASSIFICATION	// now that we have stripped the file, we can parse the parameters
WITHOUT_CLASSIFICATION	// if the string contains atleast one double // quote and checkMethod is true, go ahead // and tokenize the string.
WITHOUT_CLASSIFICATION	// we return the original string
WITHOUT_CLASSIFICATION	// convert the Parameters
WITHOUT_CLASSIFICATION	// avoid possible NPE when trimming the name
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// indicate that an error occured
WITHOUT_CLASSIFICATION	// read one line at a time using // BufferedReader
WITHOUT_CLASSIFICATION	// this.READER = new BufferedReader(new // FileReader(this.SOURCE)); // parse(this.READER,el);
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// we tokenize using double quotes. this means // for tomcat we should have 3 tokens if there // isn't any additional information in the logs
WITHOUT_CLASSIFICATION	// if checkMethod on the token is true // we tokenzie it using space and escape // the while loop. Only the first matching // token will be used
WITHOUT_CLASSIFICATION	// there should only be one token // that starts with slash character
WITHOUT_CLASSIFICATION	// do nothing. it's naive, but since // the utility is meant to parse access // logs the formatting should be correct
WITHOUT_CLASSIFICATION	// First have to release the cookie we were using so other // threads stuck in wait can move on
WITHOUT_CLASSIFICATION	// let notified threads move on and get lock on managersInUse
WITHOUT_CLASSIFICATION	// here is the core routine to find appropriate cookie manager and // check it's not being used.  If used, wait until whoever's using it gives // it up
WITHOUT_CLASSIFICATION	// no implementation at this time, since // we bypass the idea of having a console // tool to generate test plans. Instead // I decided to have a sampler that uses // the generator and parser directly
WITHOUT_CLASSIFICATION	// now we create the compiled pattern and // add it to the arraylist
WITHOUT_CLASSIFICATION	// we do a quick check to see if any // filters are set. If not we just // return false to be efficient.
WITHOUT_CLASSIFICATION	// double check this logic make sure it // makes sense
WITHOUT_CLASSIFICATION	// inclusion filter assumes most of // the files are not wanted, therefore // usefile is set to false unless it // matches.
WITHOUT_CLASSIFICATION	// exclusion filter assumes most of // the files are used, therefore // usefile is set to true, unless // it matches.
WITHOUT_CLASSIFICATION	// Request headers column renderers
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// Request headers column renderers
WITHOUT_CLASSIFICATION	// Request headers column renderers
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// clear results table before filling
WITHOUT_CLASSIFICATION	// Display with same order HTTP protocol
WITHOUT_CLASSIFICATION	// can be null - e.g. if URL was invalid
WITHOUT_CLASSIFICATION	// Display cookie in headers table (same location on http protocol)
WITHOUT_CLASSIFICATION	// Parsed request headers
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#init()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#clearData()     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // SOAP request (generally) //blank name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//blank name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// empty init // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Hint to background color on bottom tabs (grey, not blue)
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// The object used for each row
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Key // Value
WITHOUT_CLASSIFICATION	// Set up the 1st table Result with empty headers
WITHOUT_CLASSIFICATION	// Set up the 2nd table 
WITHOUT_CLASSIFICATION	// Set up the 3rd table 
WITHOUT_CLASSIFICATION	// Create the split pane
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // Concatenate query post if exists
WITHOUT_CLASSIFICATION	// add a message when no http sample //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// better ISO-8859-1 than UTF-8
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Find all the classes which implement the JavaSamplerClient // interface.
WITHOUT_CLASSIFICATION	// Remove the JavaConfig class from the list since it only // implements the interface for error conditions.
WITHOUT_CLASSIFICATION	// If a user has set parameters in one test, and then // selects a different test which supports the same // parameters, those parameters should have the same // values that they did in the original test.
WITHOUT_CLASSIFICATION	/* Implements JMeterGuiComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGuiComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	// Default (can be overridden by the script)
WITHOUT_CLASSIFICATION	// These are not useful yet, as have not found how to get updated values back //mgr.declareBean("ResponseCode", "200", String.class); // $NON-NLS-1$ //mgr.declareBean("ResponseMessage", "OK", String.class); // $NON-NLS-1$ //mgr.declareBean("IsSuccess", Boolean.TRUE, Boolean.class); // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#clearGui()     */
WITHOUT_CLASSIFICATION	/* Overrides AbstractJMeterGuiComponent.configure(TestElement) */
WITHOUT_CLASSIFICATION	// N.B. some engines (e.g. Javascript) cannot handle certain declareBean() calls // after the engine has been initialised, so create the engine last
WITHOUT_CLASSIFICATION	// Catch evaluation errors
WITHOUT_CLASSIFICATION	// reset the bsh.Interpreter before each execution
WITHOUT_CLASSIFICATION	// script file name (if present)
WITHOUT_CLASSIFICATION	// parameters to pass to script file (or script)
WITHOUT_CLASSIFICATION	// script area
WITHOUT_CLASSIFICATION	// Don't let the input field shrink too much
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JavaSamplerClient.setupTest(JavaSamplerContext) */
WITHOUT_CLASSIFICATION	/* Implements JavaSamplerClient.teardownTest(JavaSamplerContext) */
WITHOUT_CLASSIFICATION	/* Implements JavaSamplerClient.getDefaultParameters() */
WITHOUT_CLASSIFICATION	/*     * Ensure that the required class variables are cloned,     * as this is not currently done by the super-implementation.     */
WITHOUT_CLASSIFICATION	// Allow Sampler access // to test element name
WITHOUT_CLASSIFICATION	// Only set the default label if it has not been set
WITHOUT_CLASSIFICATION	// failed to initialise the class
WITHOUT_CLASSIFICATION	// but we do trap this error to make tests work better
WITHOUT_CLASSIFICATION	// No point continuing // Mainly for bsh.EvalError
WITHOUT_CLASSIFICATION	/* Implements TestStateListener.testStarted() */
WITHOUT_CLASSIFICATION	/* Implements TestStateListener.testStarted(String) */
WITHOUT_CLASSIFICATION	/* Implements TestStateListener.testEnded(String) */
WITHOUT_CLASSIFICATION	/*     * Implementation notes:     *     * All of the methods in this class are currently read-only. If update     * methods are included in the future, they should be defined so that a     * single instance of JavaSamplerContext can be associated with each thread.     * Therefore, no synchronization should be needed. The same instance should     * be used for the call to setupTest, all calls to runTest, and the call to     * teardownTest.     */
WITHOUT_CLASSIFICATION	// TestStateListener implementation
WITHOUT_CLASSIFICATION	// Set default values //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// log.info(getLabel()+" "+getFilename());
WITHOUT_CLASSIFICATION	// assume text output - script can override if necessary
WITHOUT_CLASSIFICATION	// Set response data
WITHOUT_CLASSIFICATION	// script can also use setResponseData() so long as it returns null
WITHOUT_CLASSIFICATION	// Set if we were successful or not
WITHOUT_CLASSIFICATION	// private static final String LABEL_DEFAULT = "JavaTest";
WITHOUT_CLASSIFICATION	/*     * Utility method to set up all the values     */
WITHOUT_CLASSIFICATION	// default to name of element
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Record sample start time.
WITHOUT_CLASSIFICATION	// Record sample start time.
WITHOUT_CLASSIFICATION	// Generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	// Generate a random-ish offset value using the current time.
WITHOUT_CLASSIFICATION	// Execute the sample. In this case sleep for the // specified time, if any
WITHOUT_CLASSIFICATION	// Record end time and populate the results.
WITHOUT_CLASSIFICATION	// The name of the sampler
WITHOUT_CLASSIFICATION	// should not happen
WITHOUT_CLASSIFICATION	// Only do the calculation if it is needed
WITHOUT_CLASSIFICATION	// Execute the sample. In this case sleep for the // specified time.
WITHOUT_CLASSIFICATION	// String used to indicate a null value
WITHOUT_CLASSIFICATION	// key: name (lowercase) from java.sql.Types; entry: corresponding int value
WITHOUT_CLASSIFICATION	// read-only after class init
WITHOUT_CLASSIFICATION	// based on e291. Getting the Name of a JDBC Type from javaalmanac.com // http://javaalmanac.com/egs/java.sql/JdbcInt2Str.html
WITHOUT_CLASSIFICATION	//Get all fields in java.sql.Types and store the corresponding int values
WITHOUT_CLASSIFICATION	// Query types (used to communicate with GUI) // N.B. These must not be changed, as they are used in the JMX files // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Based on query return value, get results
WITHOUT_CLASSIFICATION	// User provided incorrect query type
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// As a connection is held by only one thread, we cannot already have a  // preparedStatementMap put by another thread
WITHOUT_CLASSIFICATION	// Save the value in the variable if present
WITHOUT_CLASSIFICATION	// Save the value in the variable if present
WITHOUT_CLASSIFICATION	// in case
WITHOUT_CLASSIFICATION	// can't have an output parameter type null
WITHOUT_CLASSIFICATION	// PreparedStatementMap is associated to one connection so  //  2 threads cannot use the same PreparedStatement map at the same time
WITHOUT_CLASSIFICATION	// thrown by Derby JDBC (at least) if there are no "?" markers in statement
WITHOUT_CLASSIFICATION	// save the current count
WITHOUT_CLASSIFICATION	// LRUMap is not generic
WITHOUT_CLASSIFICATION	// i starts at 1
WITHOUT_CLASSIFICATION	/*     *  The datasource is set up by testStarted and cleared by testEnded.     *  These are called from different threads, so access must be synchronized.     *  The same instance is called in each case.    */
WITHOUT_CLASSIFICATION	// Remove any additional values from previous sample
WITHOUT_CLASSIFICATION	// call to TestBeanHelper.prepare() is intentional
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Get the previous count
WITHOUT_CLASSIFICATION	// Keep a record of the pre-thread pools so that they can be disposed of at the end of a test
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// i.e. if we want per thread pooling // pool will be created later
WITHOUT_CLASSIFICATION	/*     * Utility routine to get the connection from the pool.     * Purpose:     * - allows JDBCSampler to be entirely independent of the pooling classes     * - allows the pool storage mechanism to be changed if necessary     */
WITHOUT_CLASSIFICATION	/*     * Set up the DataSource - maxPool is a parameter, so the same code can     * also be used for setting up the per-thread pools.    */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// log is required to ensure errors are available
WITHOUT_CLASSIFICATION	// used to hold per-thread singleton connection pools
WITHOUT_CLASSIFICATION	/*     * Wrapper class to allow getConnection() to be implemented for both shared     * and per-thread pools.     *     */
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// i.e. shared pool
WITHOUT_CLASSIFICATION	// make sure setting the new isolation mode is done in an auto committed transaction
WITHOUT_CLASSIFICATION	// Will use default isolation
WITHOUT_CLASSIFICATION	// Assume we will be successful
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// use latency to measure connection time
WITHOUT_CLASSIFICATION	// The environment is supposed to use String keys only
WITHOUT_CLASSIFICATION	// WebsphereMQ does not allow corr. id. to be set using setStringProperty() // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*     * We use a LinkedBlockingQueue (rather than a ConcurrentLinkedQueue) because it has a     * poll-with-wait method that avoids the need to use a polling loop.     */
WITHOUT_CLASSIFICATION	// Using onMessage Listener
WITHOUT_CLASSIFICATION	// Allow for short/negative times
WITHOUT_CLASSIFICATION	// Allow for short/negative times
WITHOUT_CLASSIFICATION	// called from threadFinished() thread
WITHOUT_CLASSIFICATION	//GuardedBy("this")
WITHOUT_CLASSIFICATION	//GuardedBy("this")
WITHOUT_CLASSIFICATION	// There was an object in map, destroy the temporary and return one in map (oldCtx)
WITHOUT_CLASSIFICATION	// else No object in Map, ctx is the one
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //--
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //$NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// renamed from clear
WITHOUT_CLASSIFICATION	// (TestElement) // el.getProperty(JMSSampler.JMS_PROPERTIES).getObjectValue());
WITHOUT_CLASSIFICATION	// (TestElement) // el.getProperty(JMSSampler.JNDI_PROPERTIES).getObjectValue());
WITHOUT_CLASSIFICATION	// Button group resources
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Button group resources
WITHOUT_CLASSIFICATION	// These are the names of properties used to define the labels // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// These are the names of properties used to define the labels // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Button group resources when Bytes Message is selected
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Button group resources
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Button group resources
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//--
WITHOUT_CLASSIFICATION	//++ These names are used in the JMX files, and must not be changed
WITHOUT_CLASSIFICATION	// Cache for file. Only used by sample() in a single thread
WITHOUT_CLASSIFICATION	// Cache for bytes-message, only used when parsing from a file 
WITHOUT_CLASSIFICATION	// Allow shorthand names
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Assume it will fail // ditto $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// Not found
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// in the case the test uses a file, we set it locally and // prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	// in the case the test uses a file, we set it locally and // prevent loading the file repeatedly
WITHOUT_CLASSIFICATION	// Allow for the old JMX file which used the local language string
WITHOUT_CLASSIFICATION	// ------------- get/set properties ----------------------//
WITHOUT_CLASSIFICATION	// These static variables are only used to convert existing files
WITHOUT_CLASSIFICATION	// will be the 3rd option, which is not checked specifically
WITHOUT_CLASSIFICATION	// Note: originally the code did use the ClientPool to "share" subscribers, however since the // key was "this" and each sampler is unique - nothing was actually shared.
WITHOUT_CLASSIFICATION	// Default wait (ms) for a message if timeouts are not enabled // This is the maximum time the sampler can be blocked.
WITHOUT_CLASSIFICATION	// No need to synch/ - only used by sampler and ClientPool (which does its own synch)
WITHOUT_CLASSIFICATION	// This will be null if initialization succeeds.
WITHOUT_CLASSIFICATION	// If true, start/stop subscriber for each sample
WITHOUT_CLASSIFICATION	// Don't change the string, as it is used in JMX files // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// run threadStarted only if Destination setup on each sample
WITHOUT_CLASSIFICATION	// If so, we need to start collection here
WITHOUT_CLASSIFICATION	// run threadFinished only if Destination setup on each sample (stop Listen queue)
WITHOUT_CLASSIFICATION	// MapNames are Strings
WITHOUT_CLASSIFICATION	// Disabled thread start if listen on sample choice
WITHOUT_CLASSIFICATION	// Don't start yet if stop between samples
WITHOUT_CLASSIFICATION	// listen on sample 
WITHOUT_CLASSIFICATION	// Can be null if init fails
WITHOUT_CLASSIFICATION	// listen on sample
WITHOUT_CLASSIFICATION	// so we break the loops in SampleWithListener and SampleWithReceive
WITHOUT_CLASSIFICATION	// Assume failure
WITHOUT_CLASSIFICATION	//--
WITHOUT_CLASSIFICATION	// ------------- get/set properties ----------------------//
WITHOUT_CLASSIFICATION	//++ These are JMX names, and must not be changed // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Convert the old test plan entry (which is the language dependent string) to the resource name
WITHOUT_CLASSIFICATION	// This was the old value that was checked for // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default to be applied
WITHOUT_CLASSIFICATION	//++ These are JMX file attribute names and must not be changed // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. Cannot change value, as that is used in JMX files // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Is Destination setup static? else dynamic // $NON-NLS-1$ // default to maintain compatibility
WITHOUT_CLASSIFICATION	//-- End of JMX file attribute names
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// // Member variables //
WITHOUT_CLASSIFICATION	// ** These constants are used in the JMX files, and so must not be changed **
WITHOUT_CLASSIFICATION	// msgId not available until after send() is called // Note: there is only one admin object which is shared between all threads // interlock with Receiver
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This used to be request.wait(timeout_ms), where 0 means forever // However 0 means return immediately for the latch
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*     * N.B. These entry indexes MUST agree with the SearchControls SCOPE_LEVELS, i.e.     *      * javax.naming.directory.SearchControls.OBJECT_SCOPE, ONELEVEL_SCOPE, SUBTREE_SCOPE     *      * These have the values 0,1,2 so can be used as indexes in the array     * as well as the value for the search itself.     *      * N.B. Although the strings are used to set and get the options, language change     * does not currently cause a problem, because that always saves the current settings first,     * and then recreates all the GUI classes.     */
WITHOUT_CLASSIFICATION	// Names for the cards // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// e.g unbind
WITHOUT_CLASSIFICATION	// Take note of when buttong are changed so can change panel
WITHOUT_CLASSIFICATION	//private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	//$NON-NLS$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Only contains LDAPArgument entries
WITHOUT_CLASSIFICATION	//    /** //     * Resize the table columns to appropriate widths. //     * //     * @param _table //     *            the table to resize columns for //     */ //    private void sizeColumns(JTable _table) { //    }
WITHOUT_CLASSIFICATION	//sizeColumns(table);
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// Enable DELETE (which may already be enabled, but it won't hurt)
WITHOUT_CLASSIFICATION	// Highlight (select) the appropriate row.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Disable DELETE if there are no rows in the table to delete.
WITHOUT_CLASSIFICATION	// Table still contains one or more rows, so highlight (select) // the appropriate one.
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// MAIN PANEL
WITHOUT_CLASSIFICATION	// Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current value // and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we must cancel the editing before // deleting the row
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set if we were successful or not
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// count limit // time limit // attributes (null = all) // return object ? // dereference links?
WITHOUT_CLASSIFICATION	/*     * The following strings are used in the test plan, and the values must not be changed     * if test plans are to be upwardly compatible.     */
WITHOUT_CLASSIFICATION	// For In build test case using this counter // create the new entry in the server
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// replace (update) attribute //$NON-NLS-1$ //$NON-NLS-2$ // add mobile phone number attribute //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// These are values for the TEST attribute above // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // end of TEST values
WITHOUT_CLASSIFICATION	// the createTest() method creates an extra context which needs to be closed
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//log.warn("DEBUG",ex); // e.g. javax.naming.SizeLimitExceededException: [LDAP: error code 4 - Sizelimit Exceeded]; remaining name '' //                                                123456789012345678901 // TODO: tidy this up
WITHOUT_CLASSIFICATION	/*     *   Write out search results in a stable order (including order of all subelements which might     * be reordered like attributes and their values) so that simple textual comparison can be done,     * unless the number of results exceeds {@link #MAX_SORTED_RESULTS} in which case just stream     * the results out without sorting.     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// read all sortedResults into memory so we can guarantee ordering
WITHOUT_CLASSIFICATION	// must be done prior to sorting
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// show what we did manage to retrieve
WITHOUT_CLASSIFICATION	// If there's anything left ...
WITHOUT_CLASSIFICATION	// assume it's senstive data
WITHOUT_CLASSIFICATION	// Ensure any remaining contexts are closed
WITHOUT_CLASSIFICATION	// Parent folder (or single message file)
WITHOUT_CLASSIFICATION	// == ServerName from mail sampler
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*         * Perform the sampling         */
WITHOUT_CLASSIFICATION	// Start timing
WITHOUT_CLASSIFICATION	//-
WITHOUT_CLASSIFICATION	// RFC 822 uses ascii per default
WITHOUT_CLASSIFICATION	// Use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	// special value
WITHOUT_CLASSIFICATION	// Did sample succeed?
WITHOUT_CLASSIFICATION	// Create empty properties
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Get session
WITHOUT_CLASSIFICATION	// Get the store
WITHOUT_CLASSIFICATION	// Get folder
WITHOUT_CLASSIFICATION	// Get directory
WITHOUT_CLASSIFICATION	// Don't save headers - they are already in the raw message
WITHOUT_CLASSIFICATION	// Save raw message
WITHOUT_CLASSIFICATION	// Javadoc for the API says this is OK
WITHOUT_CLASSIFICATION	// Avoid double-call if addSubResult was called.
WITHOUT_CLASSIFICATION	// Close connection
WITHOUT_CLASSIFICATION	// not been set by any child samples
WITHOUT_CLASSIFICATION	// Gui Components
WITHOUT_CLASSIFICATION	// Labels - don't make these static, else language change will not work
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	/*     * Helper method to set up the GUI screen     */
WITHOUT_CLASSIFICATION	// Store the content-type // RFC 822 uses ascii per default // Parse the content-type
WITHOUT_CLASSIFICATION	// No need to log normally, as we set the status // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // may be null
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // may be null
WITHOUT_CLASSIFICATION	// Used to separate attachment file names in JMX fields - do not change!
WITHOUT_CLASSIFICATION	//-JMX file attribute names
WITHOUT_CLASSIFICATION	// Process address lists
WITHOUT_CLASSIFICATION	// needed for measuring sending time
WITHOUT_CLASSIFICATION	// calculate message size
WITHOUT_CLASSIFICATION	// Set up the sample result details
WITHOUT_CLASSIFICATION	// Perform the sampling
WITHOUT_CLASSIFICATION	// username / password incorrect
WITHOUT_CLASSIFICATION	// SSL not supported, startTLS not supported, other messagingException
WITHOUT_CLASSIFICATION	// general exception
WITHOUT_CLASSIFICATION	// process the sampler result
WITHOUT_CLASSIFICATION	// throws ME
WITHOUT_CLASSIFICATION	// throws IOE, ME
WITHOUT_CLASSIFICATION	// throws IOE, ME
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// part is only needed if we // don't send an .eml-file
WITHOUT_CLASSIFICATION	// getAllHeaders() is not yet genericised // throws ME
WITHOUT_CLASSIFICATION	// throws ME // throws IOE, ME
WITHOUT_CLASSIFICATION	// API not yet generic // throws ME
WITHOUT_CLASSIFICATION	// we have at least one potential address
WITHOUT_CLASSIFICATION	// local vars
WITHOUT_CLASSIFICATION	// ensure correctly set on initial display // ensure correctly set on initial display
WITHOUT_CLASSIFICATION	/*         * Server Settings         */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*         * E-Mail Settings         */
WITHOUT_CLASSIFICATION	/*         * Auth Settings         */
WITHOUT_CLASSIFICATION	/*         * Security Settings         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc) Message Settings         */
WITHOUT_CLASSIFICATION	/*         * Add the header panel         */
WITHOUT_CLASSIFICATION	/*         * Additional Settings         */
WITHOUT_CLASSIFICATION	/*tfMailFrom.setEnabled(true);            tfMailTo.setEnabled(true);            tfMailToCC.setEnabled(true);            tfMailToBCC.setEnabled(true);            tfSubject.setEnabled(true);*/
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Use the actual class so the name must be correct.
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Standard setup
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// local vars
WITHOUT_CLASSIFICATION	// Add the standard title
WITHOUT_CLASSIFICATION	// must follow the checkbox setting
WITHOUT_CLASSIFICATION	// not compatible
WITHOUT_CLASSIFICATION	// not compatible // must follow the checkbox setting
WITHOUT_CLASSIFICATION	// ensure correctly set on initial display
WITHOUT_CLASSIFICATION	// Might be NullProperty
WITHOUT_CLASSIFICATION	// case we are measuring real time of spedition
WITHOUT_CLASSIFICATION	// set properties using JAF
WITHOUT_CLASSIFICATION	// handle body and attachments
WITHOUT_CLASSIFICATION	// i.e. mailBody is empty
WITHOUT_CLASSIFICATION	// set from field and subject
WITHOUT_CLASSIFICATION	/*synchronousMode==true*/
WITHOUT_CLASSIFICATION	// listener cannot be null here
WITHOUT_CLASSIFICATION	// OK, it has been supplied
WITHOUT_CLASSIFICATION	// Empty arrays are immutable
WITHOUT_CLASSIFICATION	/* Implements JMeterGuiComponent.createTestElement() */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//http://api.mongodb.org/java/2.7.2/com/mongodb/Mongo.html
WITHOUT_CLASSIFICATION	//http://api.mongodb.org/java/2.7.2/com/mongodb/Mongo.html
WITHOUT_CLASSIFICATION	//http://api.mongodb.org/java/2.7.2/com/mongodb/MongoOptions.html/
WITHOUT_CLASSIFICATION	//http://api.mongodb.org/java/2.7.2/com/mongodb/MongoOptions.html/
WITHOUT_CLASSIFICATION	// Mongo is Thread Safe
WITHOUT_CLASSIFICATION	//there is no harm in trying to clear up
WITHOUT_CLASSIFICATION	/*    * Helper    */
WITHOUT_CLASSIFICATION	// + JMX names, do not change their values
WITHOUT_CLASSIFICATION	// - JMX names
WITHOUT_CLASSIFICATION	// default charset is deliberate here
WITHOUT_CLASSIFICATION	// N.B. this will be a config element, so we cannot use the getXXX() methods
WITHOUT_CLASSIFICATION	// Default to original behaviour, i.e. re-use connection
WITHOUT_CLASSIFICATION	// N.B. this will be a config element, so we cannot use the setXXX() methods
WITHOUT_CLASSIFICATION	/* Overrides AbstractJMeterGuiComponent.configure(TestElement) */
WITHOUT_CLASSIFICATION	// element.setProperty(TCPSampler.FILENAME, filename.getText());
WITHOUT_CLASSIFICATION	//        element.setProperty(TCPSampler.NODELAY, setNoDelay.isSelected());
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Don't use default for saving tristates //        element.setProperty(TCPSampler.CLOSE_CONNECTION, closeConnection.isSelected(), TCPSampler.CLOSE_CONNECTION_DEFAULT);
WITHOUT_CLASSIFICATION	// 5 columns size
WITHOUT_CLASSIFICATION	// 3 columns size
WITHOUT_CLASSIFICATION	// mainPanel.add(createFilenamePanel());
WITHOUT_CLASSIFICATION	//-- JMX file constants - do not change
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ 
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ 
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ key for HashMap
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ key for HashMap
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Entry tends to be ignored ...
WITHOUT_CLASSIFICATION	// Set if we were successful or not
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ JMX file constants - do not change //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// If set, this is the regex that is used to extract the status from the // response // NOT implemented yet private static final String STATUS_REGEX = // JMeterUtils.getPropDefault("tcp.status.regex","");
WITHOUT_CLASSIFICATION	// Are we processing the first sample?
WITHOUT_CLASSIFICATION	// used for handling interrupt
WITHOUT_CLASSIFICATION	// Not in cache, so create new one and cache it
WITHOUT_CLASSIFICATION	// Do stuff we cannot do as part of threadStarted()
WITHOUT_CLASSIFICATION	// Use the test element name for the label
WITHOUT_CLASSIFICATION	// Calculate response time
WITHOUT_CLASSIFICATION	// Reset the status code if the message contains one
WITHOUT_CLASSIFICATION	// Cannot do this as part of threadStarted() because the Config elements have not been processed.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// fetch in case gets nulled later
WITHOUT_CLASSIFICATION	// NOOP
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// the data implementation
WITHOUT_CLASSIFICATION	// Preserve sign on first byte
WITHOUT_CLASSIFICATION	// do we need to close byte array (or flush it?)
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// Process command line property definitions (can occur multiple times)
WITHOUT_CLASSIFICATION	//private ImageIcon runningIcon = JMeterUtils.getImage("thread.enabled.gif");
WITHOUT_CLASSIFICATION	//private Set hosts = new HashSet();
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.createTestElement() */
WITHOUT_CLASSIFICATION	/* Implements JMeterGUIComponent.modifyTestElement(TestElement) */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Set it
WITHOUT_CLASSIFICATION	// Reset it
WITHOUT_CLASSIFICATION	// Reset it
WITHOUT_CLASSIFICATION	// Set category
WITHOUT_CLASSIFICATION	// Set root level
WITHOUT_CLASSIFICATION	// The default title for the Menu bar
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Probably a missing // jar
WITHOUT_CLASSIFICATION	// Programming error: // bail out.
WITHOUT_CLASSIFICATION	// Programming error: // bail out.
WITHOUT_CLASSIFICATION	// $NON-NSL-1$
WITHOUT_CLASSIFICATION	// editMenu.setEnabled(false);
WITHOUT_CLASSIFICATION	// If we are enabling the Edit-->Remove menu item, then we also need to // enable the Edit menu. The Edit menu may already be enabled, but // there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// file New operation may set to null, so just return app name
WITHOUT_CLASSIFICATION	// FIrst make sure we save the content of the current GUI (since we // will flush it away):
WITHOUT_CLASSIFICATION	// Forget about all GUIs we've created so far: we'll need to re-created // them all!
WITHOUT_CLASSIFICATION	// BeanInfo objects also contain locale-sensitive data -- flush them // away:
WITHOUT_CLASSIFICATION	// Now put the current GUI in place. [This code was copied from the // EditCommand action -- we can't just trigger the action because that // would populate the current node with the contents of the new GUI -- // which is empty.] // Fetch once // Probably caused by unit testing on headless system
WITHOUT_CLASSIFICATION	// JMenu reportMenu; // JMenuItem analyze;
WITHOUT_CLASSIFICATION	// If the Add menu already exists, remove it.
WITHOUT_CLASSIFICATION	// Insert the Add menu as the first menu item in the Edit menu.
WITHOUT_CLASSIFICATION	// There was a NPE being thrown without the null check here.. JKB
WITHOUT_CLASSIFICATION	// If we are enabling the Edit-->Add menu item, then we also need to // enable the Edit menu. The Edit menu may already be enabled, but // there's no harm it trying to enable it again.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// HELP MENU // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// OPTIONS MENU // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/*     * Strings used to set up and process actions in this menu The strings need     * to agree with the those in the Action routines     */
WITHOUT_CLASSIFICATION	// RUN MENU // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// EDIT MENU // $NON-NLS-1$ // From the Java Look and Feel Guidelines: If all items in a menu // are disabled, then disable the menu. Makes sense.
WITHOUT_CLASSIFICATION	// FILE MENU // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set default SAVE menu item to disabled since the default node that // is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // file_merge.setAccelerator( // KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK));
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// MENU_ADD_xxx - controls which items are in the ADD menu // MENU_PARENT_xxx - controls which items are in the Insert Parent menu
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//  private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$ // $NON-NLS-1$ // $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	// Don't try to instantiate these
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// JFileChooser jfc = null;
WITHOUT_CLASSIFICATION	//private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// same code as for default JMeter class
WITHOUT_CLASSIFICATION	// Avoid NPE in resetPage()
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)     */
WITHOUT_CLASSIFICATION	// don't change name if merging
WITHOUT_CLASSIFICATION	// Allow for missing optional jars
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// Clear the name of the test plan file
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-2$  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// can't be null - this is checked by canAddTo
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Save parent node for later
WITHOUT_CLASSIFICATION	// So elements can only be added as children
WITHOUT_CLASSIFICATION	// can't be null - this is checked by canAddTo
WITHOUT_CLASSIFICATION	// log.info("classname:: " + strClassName);
WITHOUT_CLASSIFICATION	// Match all
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// special handling
WITHOUT_CLASSIFICATION	// convertTree(tree);
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// Not implemented: public static final String SAVE = "save_as"; // Not implemented: public static final String SAVE_ALL = "save_all"; // Not implemented: public static final String SAVE_TO_PREVIOUS = "save";
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-1$ 
WITHOUT_CLASSIFICATION	// get the JComponent from the visualizer
WITHOUT_CLASSIFICATION	// Get the string given from the choose and check // the file extension.
WITHOUT_CLASSIFICATION	// i.e. no disabled icon found
WITHOUT_CLASSIFICATION	// Must therefore set the enabled icon so there is at least some // icon
WITHOUT_CLASSIFICATION	// put the gui object back // to the way it was.
WITHOUT_CLASSIFICATION	// This check the state of the TestElement and if returns false it // disable the loaded node
WITHOUT_CLASSIFICATION	// Container endWindow; // JPopupMenu pop;
WITHOUT_CLASSIFICATION	// endWindow = window;
WITHOUT_CLASSIFICATION	// Get the Main Frame.
WITHOUT_CLASSIFICATION	// Close any Main Menu that is open
WITHOUT_CLASSIFICATION	//transient private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	// boolean enabled = true;
WITHOUT_CLASSIFICATION	// If icon has not been defined, then use GUI_CLASS property //
WITHOUT_CLASSIFICATION	// mkdir() returns false if the directory was not created; could be because it exists
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// There's only 1 test plan, so can cache the mode here
WITHOUT_CLASSIFICATION	//    private static final Logger log = LoggingManager.getLoggerForClass();
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// called from ctor, so must not be overridable
WITHOUT_CLASSIFICATION	// if the directory already exists and is a directory, // we just renamed to "archive.date"
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// return the pagesize divided by 1024 to get kilobytes
WITHOUT_CLASSIFICATION	// we add the entry
WITHOUT_CLASSIFICATION	// we should make this configurable eventually
WITHOUT_CLASSIFICATION	//private static ReportPlan plan;
WITHOUT_CLASSIFICATION	// now add the samples to the HashMap
WITHOUT_CLASSIFICATION	//Iterator itr = data.iterator();
WITHOUT_CLASSIFICATION	// duplicates
WITHOUT_CLASSIFICATION	// incompatable (blee/all)
WITHOUT_CLASSIFICATION	// Check that optional args work woth long options
WITHOUT_CLASSIFICATION	// "-T3","-a"
WITHOUT_CLASSIFICATION	// "-T3","-a"
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// result.setResponseData - not set
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// "-T","-a"
WITHOUT_CLASSIFICATION	// "-Dstupid=idiot","are","--all","--all","here"
WITHOUT_CLASSIFICATION	// Check // delimiters // are // allowed
WITHOUT_CLASSIFICATION	// Check // delimiters // are // allowed
WITHOUT_CLASSIFICATION	// Should // not // detect // trailing // option
WITHOUT_CLASSIFICATION	// should // detect // trailing // option
WITHOUT_CLASSIFICATION	// "-Dstupid=idiot","are","--all","here"
WITHOUT_CLASSIFICATION	// Check // "-" // is // allowed // in // arg2
WITHOUT_CLASSIFICATION	// "-Dstupid="
WITHOUT_CLASSIFICATION	// "-Dstupid=","-c"
WITHOUT_CLASSIFICATION	// "-Dstupid","-c"
WITHOUT_CLASSIFICATION	// Canonical form
WITHOUT_CLASSIFICATION	// Test optional arguments
WITHOUT_CLASSIFICATION	// OK // should treat B as separate // Should have no arg
WITHOUT_CLASSIFICATION	// Convert between eclipse jar name and build.properties name
WITHOUT_CLASSIFICATION	// remove docs-only jars
WITHOUT_CLASSIFICATION	// assume default charset is OK here //      <classpathentry kind="lib" path="lib/geronimo-jms_1.1_spec-1.1.1.jar"/> //      <classpathentry kind="lib" path="lib/activation-1.1.1.jar"/> //      <classpathentry kind="lib" path="lib/jtidy-r938.jar"/>
WITHOUT_CLASSIFICATION	// special handling
WITHOUT_CLASSIFICATION	// This would be done by the run command
WITHOUT_CLASSIFICATION	//testLog.setPriority(org.apache.log.Priority.DEBUG);
WITHOUT_CLASSIFICATION	// Not present
WITHOUT_CLASSIFICATION	// wrong
WITHOUT_CLASSIFICATION	//Wrong
WITHOUT_CLASSIFICATION	// LoggingManager.setPriority("DEBUG","jmeter");
WITHOUT_CLASSIFICATION	// Restart file
WITHOUT_CLASSIFICATION	// Check random number
WITHOUT_CLASSIFICATION	// This would be done by the run // command
WITHOUT_CLASSIFICATION	// Test CSV file with a header line
WITHOUT_CLASSIFICATION	// Test CSV file with a header line
WITHOUT_CLASSIFICATION	// Test CSV file with a header line and recycle is true
WITHOUT_CLASSIFICATION	// read 1st line // read 5 lines + restart to file begin // line 2 // line 3 // line 4 // line 5 // return to 2nd line (first line is names)
WITHOUT_CLASSIFICATION	// needs to be initialised
WITHOUT_CLASSIFICATION	// etc...
WITHOUT_CLASSIFICATION	/*             * GenericController sub_1 = new GenericController();             * sub_1.addTestElement(new IfController("3==3"));             * controller.addTestElement(sub_1); controller.addTestElement(new             * IfController("false==true"));             */
WITHOUT_CLASSIFICATION	/*             * IfController controller = new IfController("12==12");             * controller.initialize();             */
WITHOUT_CLASSIFICATION	// Should not enter the loop
WITHOUT_CLASSIFICATION	// Test with SimpleController as first item
WITHOUT_CLASSIFICATION	// Should not enter the loop next time
WITHOUT_CLASSIFICATION	// Should not enter the loop next time // But should continue to the end of the loop
WITHOUT_CLASSIFICATION	// Get next sample and its name
WITHOUT_CLASSIFICATION	// Match by name
WITHOUT_CLASSIFICATION	// should not run any children // should match the default entry
WITHOUT_CLASSIFICATION	// Selection controller with two sub-controllers, but each has only 1 // child
WITHOUT_CLASSIFICATION	/*         * Controller         * + Before         * + Switch (cond)         * + + zero         * + + Controller sub_1         * + + + one         * + + two         * + + Controller sub_2         * + + + three         * + After         */
WITHOUT_CLASSIFICATION	/*         * Test:          * Before          * Selection Controller         *  - zero (default)         *  - simple controller 1         *  - - one         *  - - two         *  - simple controller 2         *  - - three         *  - - four         *  - five         *  - six         * After         *          * cond  = Switch condition          * exp[] = expected results         */
WITHOUT_CLASSIFICATION	/*         * N.B. Requires ApacheJMeter_functions.jar to be on the classpath,         * otherwise the function cannot be resolved.        */
WITHOUT_CLASSIFICATION	// While (blank), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	//          log.info("testBlankPrevOK");
WITHOUT_CLASSIFICATION	// While (LAST), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	// While (LAST), previous sample OK - should loop until false
WITHOUT_CLASSIFICATION	//          log.info("testLASTPrevOK");
WITHOUT_CLASSIFICATION	// Dummy for testing functions
WITHOUT_CLASSIFICATION	//          log.info("testOtherPrevOK");
WITHOUT_CLASSIFICATION	// While (blank), previous sample failed - should run once
WITHOUT_CLASSIFICATION	//          log.info("testBlankPrevFailed");
WITHOUT_CLASSIFICATION	// Run entire test again
WITHOUT_CLASSIFICATION	// Should not enter the loop
WITHOUT_CLASSIFICATION	// While LAST, previous sample failed - should not run
WITHOUT_CLASSIFICATION	//          log.info("testLastPrevFailed");
WITHOUT_CLASSIFICATION	// While False, previous sample failed - should not run
WITHOUT_CLASSIFICATION	//          log.info("testFalsePrevFailed");
WITHOUT_CLASSIFICATION	// Should behave the same for blank and LAST because success on input
WITHOUT_CLASSIFICATION	// Should be OK
WITHOUT_CLASSIFICATION	// e.printStackTrace();
WITHOUT_CLASSIFICATION	// Set up the test plan
WITHOUT_CLASSIFICATION	// OnlyOnce samples
WITHOUT_CLASSIFICATION	// Outer sample
WITHOUT_CLASSIFICATION	// Inner loop
WITHOUT_CLASSIFICATION	// Sample in inner loop
WITHOUT_CLASSIFICATION	// Compute the expected sample names
WITHOUT_CLASSIFICATION	// Outer only once + ("three" + ("four" + "five" + "six" + "seven") * innerLoopCount) * outerLoopCount;  
WITHOUT_CLASSIFICATION	// The only once samples
WITHOUT_CLASSIFICATION	// The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	// Execute the test pan
WITHOUT_CLASSIFICATION	// Outer sample
WITHOUT_CLASSIFICATION	// Inner loop
WITHOUT_CLASSIFICATION	// Inner loop
WITHOUT_CLASSIFICATION	// Sample in inner loop
WITHOUT_CLASSIFICATION	// Compute the expected sample names
WITHOUT_CLASSIFICATION	// Compute the expected sample names
WITHOUT_CLASSIFICATION	// The only once samples
WITHOUT_CLASSIFICATION	// The only once samples
WITHOUT_CLASSIFICATION	// The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	// Execute the test pan
WITHOUT_CLASSIFICATION	// Execute the test pan
WITHOUT_CLASSIFICATION	// Test plan with OnlyOnceController inside inner loop // Set up the test plan
WITHOUT_CLASSIFICATION	// OnlyOnce inside inner loop
WITHOUT_CLASSIFICATION	// Outer only once + ("three" + "only once five and six" + ("four" + "seven") * innerLoopCount) * outerLoopCount;  
WITHOUT_CLASSIFICATION	// Test skipped for now as behaviour is not yet properly defined
WITHOUT_CLASSIFICATION	// InterleaveController in inner loop
WITHOUT_CLASSIFICATION	// OnlyOnce inside InterleaveController
WITHOUT_CLASSIFICATION	// Samples inside InterleaveController        
WITHOUT_CLASSIFICATION	// Sample in inner loop        
WITHOUT_CLASSIFICATION	// Outer only once + ("three" + "only once five and six" + "eight in interleave only once" + ("four" + "interleave" + "eleven") * innerLoopCount) * outerLoopCount;  
WITHOUT_CLASSIFICATION	// Escaped dollar commma and backslash with no variable reference
WITHOUT_CLASSIFICATION	// Escaped dollar commma and backslash with variable reference
WITHOUT_CLASSIFICATION	// N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	// N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	// Escaped dollar commma and backslash with missing variable reference
WITHOUT_CLASSIFICATION	// Escaped dollar commma and backslash with missing function reference
WITHOUT_CLASSIFICATION	//log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	//log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	// Set up the non-wild variables
WITHOUT_CLASSIFICATION	// Should not clear this?
WITHOUT_CLASSIFICATION	// Check when match fails
WITHOUT_CLASSIFICATION	//extractor.setDefaultValue("default");
WITHOUT_CLASSIFICATION	// Now rerun with match fail
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This would be done by the run // command
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// Has child, but child is empty
WITHOUT_CLASSIFICATION	// Has no child
WITHOUT_CLASSIFICATION	// No text
WITHOUT_CLASSIFICATION	// Test fragment
WITHOUT_CLASSIFICATION	// Now get its text
WITHOUT_CLASSIFICATION	// No text, but using fragment mode
WITHOUT_CLASSIFICATION	// There aren't any
WITHOUT_CLASSIFICATION	// Try to get data from subresult // Needed for addSubResult()
WITHOUT_CLASSIFICATION	// Get data from both
WITHOUT_CLASSIFICATION	// get data from child
WITHOUT_CLASSIFICATION	// Create the StringFromFile function and set its parameters.
WITHOUT_CLASSIFICATION	// Create the SplitFile function and set its parameters.
WITHOUT_CLASSIFICATION	// Create the BeanShell function and set its parameters.
WITHOUT_CLASSIFICATION	// Reset files
WITHOUT_CLASSIFICATION	// Check some initial variables
WITHOUT_CLASSIFICATION	// Check source works
WITHOUT_CLASSIFICATION	// Check persistence
WITHOUT_CLASSIFICATION	// Check that bsh has read the file
WITHOUT_CLASSIFICATION	// Restarts
WITHOUT_CLASSIFICATION	// Test that only loops twice
WITHOUT_CLASSIFICATION	// Function objects to be tested
WITHOUT_CLASSIFICATION	// Helper class used to implement co-routine between two threads
WITHOUT_CLASSIFICATION	// Allow other thread to start
WITHOUT_CLASSIFICATION	// open as *A
WITHOUT_CLASSIFICATION	// open as *B
WITHOUT_CLASSIFICATION	// col2 line 1
WITHOUT_CLASSIFICATION	// *A next
WITHOUT_CLASSIFICATION	// col 1, line 2, *A
WITHOUT_CLASSIFICATION	// *B next
WITHOUT_CLASSIFICATION	// col2, line 2, *B
WITHOUT_CLASSIFICATION	// XPathFileContainer tests
WITHOUT_CLASSIFICATION	// assertEquals("Expected 4 lines",4,f.size());
WITHOUT_CLASSIFICATION	/*     * The suite() method creates separate test suites for each of the types of     * test. The suitexxx() methods create a list of items to be tested, and     * create a new test instance for each.     *      * Each test type has its own constructor, which saves the item to be tested     *      * Note that the suite() method must be static, and the methods to run the     * tests must be instance methods so that they can pick up the item value     * which was saved by the constructor.     *      */
WITHOUT_CLASSIFICATION	// Use same XPath for both threads
WITHOUT_CLASSIFICATION	//String s = 
WITHOUT_CLASSIFICATION	// prevent accidental use of is below
WITHOUT_CLASSIFICATION	// wrap-round check
WITHOUT_CLASSIFICATION	// no wrap-round check
WITHOUT_CLASSIFICATION	// Perform a sum and check the results
WITHOUT_CLASSIFICATION	// trailing space
WITHOUT_CLASSIFICATION	// Test with output variable name
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// Test with empty output variable name
WITHOUT_CLASSIFICATION	// not full test plans
WITHOUT_CLASSIFICATION	// start in new state
WITHOUT_CLASSIFICATION	//suite.addTest(new TestLoad("checkGuiPackage"));
WITHOUT_CLASSIFICATION	// Save the method name
WITHOUT_CLASSIFICATION	// Constructor for TestElement tests
WITHOUT_CLASSIFICATION	// Save the method name
WITHOUT_CLASSIFICATION	// Save the method name
WITHOUT_CLASSIFICATION	// Save the method name
WITHOUT_CLASSIFICATION	// Constructor for Serializable tests
WITHOUT_CLASSIFICATION	// Constructor for GUI tests
WITHOUT_CLASSIFICATION	// Constructor for Function tests
WITHOUT_CLASSIFICATION	// Only show classpath once
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// used by TestAnchorModifier // used by TestAnchorModifier // used by TestSaveService
WITHOUT_CLASSIFICATION	/*     * Use a suite to allow the tests to be generated at run-time     */
WITHOUT_CLASSIFICATION	// The Locale used to instantiate the GUI objects
WITHOUT_CLASSIFICATION	// Needs to be done before any GUI classes are instantiated
WITHOUT_CLASSIFICATION	// Restore the original Locale
WITHOUT_CLASSIFICATION	/*     * Extract titles from component_reference.xml     */
WITHOUT_CLASSIFICATION	// Not a true GUI component
WITHOUT_CLASSIFICATION	// Add titles that don't need to be documented //guiTitles.put("Root", Boolean.FALSE);
WITHOUT_CLASSIFICATION	/*     * Extract titles from functions.xml     */
WITHOUT_CLASSIFICATION	// first time
WITHOUT_CLASSIFICATION	// We don't mind if this is left over // Ditto, not a sampler
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - create the suite of tests     */
WITHOUT_CLASSIFICATION	/*     * Test Functions - create the suite of tests     */
WITHOUT_CLASSIFICATION	// JMeterGUIComponent item = (JMeterGUIComponent) iter.next();
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - run the test     */
WITHOUT_CLASSIFICATION	// So we can detect extra entries
WITHOUT_CLASSIFICATION	// Is this a work in progress or an internal GUI component? // Will be "" for internal components
WITHOUT_CLASSIFICATION	// Skip the example samplers ...
WITHOUT_CLASSIFICATION	// Record in log as well
WITHOUT_CLASSIFICATION	// Record in log as well
WITHOUT_CLASSIFICATION	/*     * run the function test     */
WITHOUT_CLASSIFICATION	// For detecting extra entries
WITHOUT_CLASSIFICATION	/*     * Check that function descriptions are OK     */
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - run for all components     */
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - not run for TestBeanGui items     */
WITHOUT_CLASSIFICATION	/*     * Test serializable elements - create the suite of tests     */
WITHOUT_CLASSIFICATION	/*     * Test serializable elements - test the object     */
WITHOUT_CLASSIFICATION	/*     * Test TestElements - implement the test case     */
WITHOUT_CLASSIFICATION	// Don't try to instantiate remote server
WITHOUT_CLASSIFICATION	// Try with a parameter-less constructor first
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// no luck. Ignore this class
WITHOUT_CLASSIFICATION	// We won't test restricted-access classes.
WITHOUT_CLASSIFICATION	// not thrown, so need to check here
WITHOUT_CLASSIFICATION	// Only dump it once
WITHOUT_CLASSIFICATION	// [sebb] assertEquals(item2, // clonedItem.getProperty(item2.getName()));
WITHOUT_CLASSIFICATION	// Used by findTestFile
WITHOUT_CLASSIFICATION	// JMeterUtils assumes Unix-style separators
WITHOUT_CLASSIFICATION	// Used to be done in initializeProperties
WITHOUT_CLASSIFICATION	// needed for scripts
WITHOUT_CLASSIFICATION	// Display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	// Helper method to find a file
WITHOUT_CLASSIFICATION	// Add the offset
WITHOUT_CLASSIFICATION	// Add the offset
WITHOUT_CLASSIFICATION	// Helper method to find a test path
WITHOUT_CLASSIFICATION	// number of samples taken
WITHOUT_CLASSIFICATION	// same as above
WITHOUT_CLASSIFICATION	// not same
WITHOUT_CLASSIFICATION	// This is needed in order to set up the cookie policy
WITHOUT_CLASSIFICATION	// This should be ignored, as there is no value
WITHOUT_CLASSIFICATION	// starts empty
WITHOUT_CLASSIFICATION	// should not be stored
WITHOUT_CLASSIFICATION	// Test session cookie is returned
WITHOUT_CLASSIFICATION	// Test Old cookie is not returned
WITHOUT_CLASSIFICATION	// Test multi-cookie header handling
WITHOUT_CLASSIFICATION	// Test duplicate cookie handling
WITHOUT_CLASSIFICATION	// Assumes some kind of list is used
WITHOUT_CLASSIFICATION	// Test cookie matching
WITHOUT_CLASSIFICATION	// Defaults to caller URL
WITHOUT_CLASSIFICATION	// ensure policy is picked up
WITHOUT_CLASSIFICATION	//assertEquals("/",man.get(0).getPath());
WITHOUT_CLASSIFICATION	// Cookies are ignored
WITHOUT_CLASSIFICATION	// Cookies again ignored
WITHOUT_CLASSIFICATION	// Show that maxlong now saved as 0
WITHOUT_CLASSIFICATION	// Shutdown the http server
WITHOUT_CLASSIFICATION	// Wait up to 1 second
WITHOUT_CLASSIFICATION	// Already failed
WITHOUT_CLASSIFICATION	// succeeded
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http get
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Check that the request and response matches
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Check that the request and response matches
WITHOUT_CLASSIFICATION	// Check that the request and response matches
WITHOUT_CLASSIFICATION	// Check that the request and response matches
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http get, with // a pause in the middle of transmitting the header
WITHOUT_CLASSIFICATION	// Write the start of the headers, and then sleep, so that the mirror // thread will have to block to wait for more data to appear
WITHOUT_CLASSIFICATION	// Write the rest of the headers
WITHOUT_CLASSIFICATION	// The content sent
WITHOUT_CLASSIFICATION	// The content sent
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http post
WITHOUT_CLASSIFICATION	// Construct body
WITHOUT_CLASSIFICATION	// Construct body
WITHOUT_CLASSIFICATION	// Write the headers and body
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http post, with // a pause after transmitting the headers
WITHOUT_CLASSIFICATION	// Write the headers, and then sleep
WITHOUT_CLASSIFICATION	// Write the body
WITHOUT_CLASSIFICATION	// Write the body
WITHOUT_CLASSIFICATION	// Check that the request and response matches       
WITHOUT_CLASSIFICATION	// $sid$
WITHOUT_CLASSIFICATION	// Arguments args = sampler.getArguments();
WITHOUT_CLASSIFICATION	// No entry; check it is still present
WITHOUT_CLASSIFICATION	// Test https works too
WITHOUT_CLASSIFICATION	// These are some of the special characters
WITHOUT_CLASSIFICATION	// Can't instantiate
WITHOUT_CLASSIFICATION	// List of parsers to test. Should probably be derived automatically
WITHOUT_CLASSIFICATION	// Dummy as the file has no entries
WITHOUT_CLASSIFICATION	// Dummy as the file has no entries
WITHOUT_CLASSIFICATION	// Relative filenames
WITHOUT_CLASSIFICATION	// Identify subtests
WITHOUT_CLASSIFICATION	// This is OK
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// A HTTP GET request, with encoding not known 
WITHOUT_CLASSIFICATION	//            private TestData(String f, String b, String s) { //                this(f, b, s, null); //            }
WITHOUT_CLASSIFICATION	// Does the order matter?
WITHOUT_CLASSIFICATION	// Convert both to Sets
WITHOUT_CLASSIFICATION	// Get expected results as a List
WITHOUT_CLASSIFICATION	// A HTTP GET request
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// A HTTP POST request
WITHOUT_CLASSIFICATION	// A HTTP GET request, with encoding not known
WITHOUT_CLASSIFICATION	// A HTTP POST request, with content-type text/plain
WITHOUT_CLASSIFICATION	// A HTTP GET request, with UTF-8 encoding 
WITHOUT_CLASSIFICATION	// When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	// When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	// When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	// A HTTP POST request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	// A HTTP POST request, with unknown encoding
WITHOUT_CLASSIFICATION	// A HTTP POST request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	// A HTTP GET request, with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	// A HTTP GET request, with UTF-8 encoding
WITHOUT_CLASSIFICATION	// A HTTP POST request, with encoding not known
WITHOUT_CLASSIFICATION	// Check arguments // We should have one argument, with the value equal to the post body
WITHOUT_CLASSIFICATION	// A HTTP POST request, with content-type text/plain; charset=UTF-8 // The encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	// A HTTP POST request, with content-type text/plain; charset=UTF-8 // The encoding should be picked up from the header we send with the request
WITHOUT_CLASSIFICATION	// Use null for url to simulate that HttpRequestHdr do not // know the encoding for the page. Specify contentEncoding, so the // request is "sent" using that encoding
WITHOUT_CLASSIFICATION	// Use null for url to simulate that HttpRequestHdr do not // know the encoding for the page. Specify contentEncoding, so the // request is "sent" using that encoding
WITHOUT_CLASSIFICATION	// Use null for url and contentEncoding, to simulate that HttpRequestHdr do not // know the encoding for the page
WITHOUT_CLASSIFICATION	// Use null for url and contentEncoding, to simulate that HttpRequestHdr do not // know the encoding for the page
WITHOUT_CLASSIFICATION	// A HTTP POST request, with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, simple values,
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, simple values,
WITHOUT_CLASSIFICATION	// no space after :
WITHOUT_CLASSIFICATION	// spaces after :
WITHOUT_CLASSIFICATION	// Assume there's at least one file
WITHOUT_CLASSIFICATION	// Title multipart
WITHOUT_CLASSIFICATION	// Description multipart
WITHOUT_CLASSIFICATION	// File upload multipart
WITHOUT_CLASSIFICATION	// Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8
WITHOUT_CLASSIFICATION	// Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8
WITHOUT_CLASSIFICATION	// No filters
WITHOUT_CLASSIFICATION	// Empty filters
WITHOUT_CLASSIFICATION	// Non empty filters
WITHOUT_CLASSIFICATION	// Simple inclusion and exclusion filter
WITHOUT_CLASSIFICATION	// Allow all but images
WITHOUT_CLASSIFICATION	//        throw new UnsupportedOperationException("For test purposes only");
WITHOUT_CLASSIFICATION	// This must be the original (Java) HTTP sampler
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, with value that will change // if they are url encoded // Values are similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	// Most browsers use ISO-8859-1 as default encoding, even if spec says UTF-8 // TODO - charset?
WITHOUT_CLASSIFICATION	// Create the test file content
WITHOUT_CLASSIFICATION	// create a temporary file to make sure we always have a file to give to the PostWriter  // Whereever we are or Whatever the current path is.
WITHOUT_CLASSIFICATION	// delete temporay file
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending UTF-8 data with ISO-8859-1 content encoding
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending a HTTPSampler with form parameters, and only     * the filename of a file.     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending file content as the only content of the post body     */
WITHOUT_CLASSIFICATION	// Check using default encoding
WITHOUT_CLASSIFICATION	// Check using a different encoding
WITHOUT_CLASSIFICATION	// File content is sent as binary, so the content encoding should not change the file data
WITHOUT_CLASSIFICATION	// If we have both file as body, and form data, then only form data will be sent
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending only a file multipart.     */
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending only a formdata, as a multipart/form-data request.     */
WITHOUT_CLASSIFICATION	// Tell sampler to do multipart, even if we have no files to upload
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1, with values that need to be urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1, with values that need to be urlencoded
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending only a formdata, as urlencoded data     */
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that needs to be urlencoded
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// delete temporay file
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Check that other encoding is not the current encoding // TODO - charset?
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that would have been urlencoded // if it was not sent as multipart
WITHOUT_CLASSIFICATION	// Test sending parameters which are urlencoded beforehand // The values must be URL encoded with UTF-8 encoding, because that // is what the HTTPArgument assumes // %C3%85 in UTF-8 is the same as %C5 in ISO-8859-1, which is the same as &Aring;
WITHOUT_CLASSIFICATION	// HTTPSampler uses ISO-8859-1 as default encoding // HTTPSampler uses ISO-8859-1 as default encoding
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'     */
WITHOUT_CLASSIFICATION	// Create the multiparts
WITHOUT_CLASSIFICATION	// Join the two multiparts
WITHOUT_CLASSIFICATION	// The encoding used for http headers and control information
WITHOUT_CLASSIFICATION	// replace all backslash with double backslash
WITHOUT_CLASSIFICATION	// Different from TestHTTPMirrorThread port and standard mirror server
WITHOUT_CLASSIFICATION	// additional ctor for processing tests which use int parameters
WITHOUT_CLASSIFICATION	// This is used to emulate @before class and @after class
WITHOUT_CLASSIFICATION	// Add parameterised tests. For simplicity we assune each has cases 0-10
WITHOUT_CLASSIFICATION	// Shutdown mirror server
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that will change when urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	// Replace the variables in the sampler
WITHOUT_CLASSIFICATION	// Replace the variables in the sampler
WITHOUT_CLASSIFICATION	// ensure only values are used
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that would have been urlencoded // if it was not sent as multipart
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that will change when urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses
WITHOUT_CLASSIFICATION	// Replace the variables in the sampler
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, where user defined variables are used // to set the value for form data
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, where user defined variables are used // to set the value for form data
WITHOUT_CLASSIFICATION	// Replace the variables in the sampler
WITHOUT_CLASSIFICATION	// ensure only values are used
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded, and // where we tell the sampler to urlencode the parameter values
WITHOUT_CLASSIFICATION	// Test sending data with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	// Test sending data with ISO-8859-1 encoding
WITHOUT_CLASSIFICATION	// Test sending data with UTF-8 encoding
WITHOUT_CLASSIFICATION	// Test sending data with UTF-8 encoding
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that changes when urlencoded
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check the request
WITHOUT_CLASSIFICATION	// Check request headers
WITHOUT_CLASSIFICATION	// Check post body from the result query string
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	// Check response headers
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with + as part of the value, // where the value is set in sampler as not urluencoded, but the  // isalwaysencoded flag of the argument is set to false. // This mimics the HTTPConstants.addNonEncodedArgument, which the // Proxy server calls in some cases
WITHOUT_CLASSIFICATION	// Test sending simple HTTP get // Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending simple HTTP get // Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Check request headers
WITHOUT_CLASSIFICATION	// Check post body from the result query string
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	// Check response headers
WITHOUT_CLASSIFICATION	// Check response headers
WITHOUT_CLASSIFICATION	// Check post body which was sent to the mirror server, and // sent back by the mirror server
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	// Skip the blank line with crlf dividing headers and body
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Check method
WITHOUT_CLASSIFICATION	// Check method
WITHOUT_CLASSIFICATION	// Check that the query string is empty
WITHOUT_CLASSIFICATION	// No body should have been sent
WITHOUT_CLASSIFICATION	// No body should have been sent
WITHOUT_CLASSIFICATION	// Check the Request URI sent to the mirror server, and // sent back by the mirror server
WITHOUT_CLASSIFICATION	// We should have a query string part
WITHOUT_CLASSIFICATION	// We should not have a query string part
WITHOUT_CLASSIFICATION	// Check path
WITHOUT_CLASSIFICATION	// Check query
WITHOUT_CLASSIFICATION	// Is it only the parameter values which are encoded in the specified // content encoding, the rest of the query is encoded in UTF-8 // Therefore we compare the whole query using UTF-8
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us // We assume the headers are in ISO_8859_1, and the body can be in any content encoding.
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us // We assume the headers are in ISO_8859_1, and the body can be in any content encoding. // Therefore we get the data sent in ISO_8859_1, to be able to determine the end of the // header part, and then we just construct a byte array to hold the body part, not taking // encoding of the body into consideration, because it can contain file data, which is // sent as raw byte data
WITHOUT_CLASSIFICATION	// No divider was found
WITHOUT_CLASSIFICATION	// Set the form data
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Join the two multiparts
WITHOUT_CLASSIFICATION	// The encoding used for http headers and control information
WITHOUT_CLASSIFICATION	// replace all backslash with double backslash
WITHOUT_CLASSIFICATION	// The value is in the first group, group 0 is the whole match
WITHOUT_CLASSIFICATION	// The headers and body are divided by a blank line
WITHOUT_CLASSIFICATION	// Header may contain ;charset= , regexp extracts it so computed boundary is wrong
WITHOUT_CLASSIFICATION	// String domain = "localhost";
WITHOUT_CLASSIFICATION	// Set the file upload data
WITHOUT_CLASSIFICATION	// Parse arguments singly
WITHOUT_CLASSIFICATION	// Parse arguments all at once
WITHOUT_CLASSIFICATION	// test cases for making Url, and exercise method // addArgument(String name,String value,String metadata)
WITHOUT_CLASSIFICATION	// test cases for making Url, and exercise method // parseArguments(String queryString)
WITHOUT_CLASSIFICATION	// Ignore empty file specs
WITHOUT_CLASSIFICATION	// Ignore trailing empty spec
WITHOUT_CLASSIFICATION	// Ignore leading empty spec
WITHOUT_CLASSIFICATION	// Show that can bypass encoding:
WITHOUT_CLASSIFICATION	// The sample does not use a valid encoding
WITHOUT_CLASSIFICATION	// by default, name/value are encoded on fetch 
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Try a real encoded argument
WITHOUT_CLASSIFICATION	// Trailing file
WITHOUT_CLASSIFICATION	// Trailing directory
WITHOUT_CLASSIFICATION	// file exclf inclf exclp inclp
WITHOUT_CLASSIFICATION	// odd chars
WITHOUT_CLASSIFICATION	// invalid
WITHOUT_CLASSIFICATION	// '12345'
WITHOUT_CLASSIFICATION	// Check illegal array lengths
WITHOUT_CLASSIFICATION	// current default language properties file
WITHOUT_CLASSIFICATION	// messages.properties
WITHOUT_CLASSIFICATION	// Read resource into ResourceBundle and store in List
WITHOUT_CLASSIFICATION	// Read resource file saving the keys
WITHOUT_CLASSIFICATION	// Only relevant for messages
WITHOUT_CLASSIFICATION	// Store the key
WITHOUT_CLASSIFICATION	// Helper method to construct resource name
WITHOUT_CLASSIFICATION	// check that there aren't any extra entries
WITHOUT_CLASSIFICATION	/*     * perform the checks on the resources     *      */
WITHOUT_CLASSIFICATION	// holds keys from file
WITHOUT_CLASSIFICATION	// Look for duplicate keys in the file
WITHOUT_CLASSIFICATION	// Must be the default resource file
WITHOUT_CLASSIFICATION	// Check all the keys are in the default props file
WITHOUT_CLASSIFICATION	// Also Check key is in default
WITHOUT_CLASSIFICATION	// Better error than NPE
WITHOUT_CLASSIFICATION	// Fix up Windows paths
WITHOUT_CLASSIFICATION	/*     * Use a suite to ensure that the default is done first    */
WITHOUT_CLASSIFICATION	// load the default resource
WITHOUT_CLASSIFICATION	// Don't try to check the default language
WITHOUT_CLASSIFICATION	// e.g. "/org/apache/jmeter/resources/messages"
WITHOUT_CLASSIFICATION	// Check that calls to getResString use a valid property key name
WITHOUT_CLASSIFICATION	// leading comment
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// \u00e7 = LATIN SMALL LETTER C WITH CEDILLA // \u00e9 = LATIN SMALL LETTER E WITH ACUTE
WITHOUT_CLASSIFICATION	// Change the original back again
WITHOUT_CLASSIFICATION	// a and b should be equal
WITHOUT_CLASSIFICATION	// a and b should not be equal
WITHOUT_CLASSIFICATION	// Needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	// Needs to be greater than the minimum to allow for boundary errors
WITHOUT_CLASSIFICATION	// Re-increment
WITHOUT_CLASSIFICATION	// Re-increment
WITHOUT_CLASSIFICATION	// N.B. This needs to divert the log for SampleResult
WITHOUT_CLASSIFICATION	// temp test case for exploring settings
WITHOUT_CLASSIFICATION	// Don't use nanoThread
WITHOUT_CLASSIFICATION	// This test tries to emulate a http sample, with two // subsamples, representing images that are downloaded for the // page representing the first sample.
WITHOUT_CLASSIFICATION	// Sample that will get two sub results, simulates a web page load 
WITHOUT_CLASSIFICATION	// Sample with no sub results, simulates an image download
WITHOUT_CLASSIFICATION	// Sample with no sub results, simulates an image download 
WITHOUT_CLASSIFICATION	// Now add the subsamples to the sample
WITHOUT_CLASSIFICATION	// TimeMillis has granularity of 10-20
WITHOUT_CLASSIFICATION	// Check that calculator gets the correct statistics from the sample
WITHOUT_CLASSIFICATION	// Allow for some margin of error // Check that the throughput uses the time elapsed for the sub results
WITHOUT_CLASSIFICATION	// check default
WITHOUT_CLASSIFICATION	// check null changes nothing
WITHOUT_CLASSIFICATION	// check no charset
WITHOUT_CLASSIFICATION	// Check unquoted charset
WITHOUT_CLASSIFICATION	// Check quoted charset
WITHOUT_CLASSIFICATION	// This is what JOrphanUtils.split() does
WITHOUT_CLASSIFICATION	// These tests should agree with those for JOrphanUtils.split() as far as possible
WITHOUT_CLASSIFICATION	// \u00e7 = LATIN SMALL LETTER C WITH CEDILLA // \u00e9 = LATIN SMALL LETTER E WITH ACUTE
WITHOUT_CLASSIFICATION	// Blank line
WITHOUT_CLASSIFICATION	// Empty strings at EOF
WITHOUT_CLASSIFICATION	// testLoadAndSave test files
WITHOUT_CLASSIFICATION	// GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean // GraphAccumVisualizer obsolete, BSFSamplerGui now a TestBean // GraphAccumVisualizer now obsolete // CTT changed to use intProp for mode
WITHOUT_CLASSIFICATION	// Test files for testLoad; output will generally be different in size and line count
WITHOUT_CLASSIFICATION	// Did a test fail?
WITHOUT_CLASSIFICATION	// Make sure all the data is flushed out
WITHOUT_CLASSIFICATION	// Test non-empty parameters
WITHOUT_CLASSIFICATION	// Unrecognised files are ignored
WITHOUT_CLASSIFICATION	// Does not open file
WITHOUT_CLASSIFICATION	// Does not open file
WITHOUT_CLASSIFICATION	// Re-read 1st line
WITHOUT_CLASSIFICATION	// Re-read 1st line
WITHOUT_CLASSIFICATION	// should not be able to write to it ...
WITHOUT_CLASSIFICATION	// does not remove the entry
WITHOUT_CLASSIFICATION	// removes all entries
WITHOUT_CLASSIFICATION	// test code, intentional
WITHOUT_CLASSIFICATION	// Check "Undefined" does not become a "reserved word":
WITHOUT_CLASSIFICATION	// errorDetected()
WITHOUT_CLASSIFICATION	// errorDetected()
WITHOUT_CLASSIFICATION	// Programming error. Don't continue.
WITHOUT_CLASSIFICATION	// Check that all keys in the bundle are also in the default bundle:
WITHOUT_CLASSIFICATION	// Will throw MissingResourceException if key is not there.
WITHOUT_CLASSIFICATION	// Check that all necessary keys are there:
WITHOUT_CLASSIFICATION	// displayName is always mandatory:
WITHOUT_CLASSIFICATION	// Skip the rest of this test for alpha/experimental beans:
WITHOUT_CLASSIFICATION	// Check for property- and group-related texts:
WITHOUT_CLASSIFICATION	// Skip non-editable properties, that is: // Ignore hidden, read-only, and write-only properties
WITHOUT_CLASSIFICATION	// Ignore TestElement properties which don't have an explicit // editor:
WITHOUT_CLASSIFICATION	// Done -- we're working with an editable property.
WITHOUT_CLASSIFICATION	//throw new Error("No default bundle for class " + className);
WITHOUT_CLASSIFICATION	// String sampleLog = "C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	// String sampleLog = "C:/eclipse3/workspace/jmeter-21/bin/testfiles/sample_log1.jtl";
WITHOUT_CLASSIFICATION	// tweak.
WITHOUT_CLASSIFICATION	// tweak.
WITHOUT_CLASSIFICATION	// Test needs to run in this package in order to give access to AbstractTestElement.addProperty() 
WITHOUT_CLASSIFICATION	// This test should work whether or not all Nulls are equal
WITHOUT_CLASSIFICATION	// do not check hashcodes; unequal objects may have equal hashcodes
WITHOUT_CLASSIFICATION	// Give access to the method for test code
WITHOUT_CLASSIFICATION	// Give access to the method for test code
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//p.add(makeButtonPanel(), BorderLayout.SOUTH);
WITHOUT_CLASSIFICATION	// Assume this thread only // 1 per second // Should delay for 1 second // 1 per milli-second // Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// 10 per second // Should delay for 1 second // 10 per milli-second // Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	// 1000 per milli-second // Should delay for 1 milli-second
WITHOUT_CLASSIFICATION	// Not sure we can test anything else here
WITHOUT_CLASSIFICATION	// Use old style
WITHOUT_CLASSIFICATION	// probably needed to avoid NPEs with GUIs
WITHOUT_CLASSIFICATION	// tree1.add("a3");
WITHOUT_CLASSIFICATION	// No duplicates when adding
WITHOUT_CLASSIFICATION	// add duplicates
WITHOUT_CLASSIFICATION	// as above, but with aggregate sample instead
WITHOUT_CLASSIFICATION	// add duplicates as per bug
WITHOUT_CLASSIFICATION	//assertEquals("t2",f2.invoke());
WITHOUT_CLASSIFICATION	//assertEquals("1a:aa.",f1a.invoke());
WITHOUT_CLASSIFICATION	// can't call invoke using super class
WITHOUT_CLASSIFICATION	// OK (currently) to invoke using sub-class 
WITHOUT_CLASSIFICATION	// Args will be provided later
WITHOUT_CLASSIFICATION	// should use original object
WITHOUT_CLASSIFICATION	// Check how Class definition behaves
WITHOUT_CLASSIFICATION	// logprop("java.class.path");
WITHOUT_CLASSIFICATION	// don't call isHeadless() here, as it has a side effect. // --
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Send different event wether we are merging a test plan into another test plan, // or loading a testplan from scratch
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//Ignored
WITHOUT_CLASSIFICATION	//Ignored
WITHOUT_CLASSIFICATION	// private static final String ROOTDN = "rootDn"; // private static final String TEST = "tesT"; // private static String testValue="NNNN";
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Test ignore trailing split characters // Ignore adjacent delimiters
WITHOUT_CLASSIFICATION	// Tests for split(String,String,boolean)
WITHOUT_CLASSIFICATION	// Test leading split characters
WITHOUT_CLASSIFICATION	// Test leading split characters
WITHOUT_CLASSIFICATION	// Empty string
WITHOUT_CLASSIFICATION	// Tests for split(String,String,String)
WITHOUT_CLASSIFICATION	// Empty default
WITHOUT_CLASSIFICATION	// Empty delimiter
WITHOUT_CLASSIFICATION	// Multiple delimiters
WITHOUT_CLASSIFICATION	// Delimiter same as splitter
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Node node = tidy.parseDOM(new // ByteArrayInputStream(response.getResponseData()), null);
WITHOUT_CLASSIFICATION	// Values for TEST_FIELD // N.B. we cannot change the text value as it is in test plans // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// In case parse fails // $NON-NLS-1$ // In case parse fails // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // Make it easier to enter a Tab // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The Loop Controller panel can be displayed standalone or inside // another panel. For standalone, we want to display the TITLE, NAME, // etc. (everything). However, if we want to display it within another // panel, we just display the Loop Count fields (not the TITLE and // NAME).
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // don't set empty to keep regexp // regexpField.setText(""); // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// This 'other value' regex is deliberately weak, even accepting an empty string, to be useful when reporting malformed data. // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Condition LABEL // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If the -j  or -l flag is set to LAST or LAST.log|LAST.jtl, then the last loaded file name is used to // generate the log file name by removing .JMX and replacing it with .log|.jtl
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current value // and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ i.e. boolean saveXXX() // $NON-NLS-1$ i.e. void setXXX(boolean) // $NON-NLS-1$ e.g. save_XXX property
WITHOUT_CLASSIFICATION	// Keep the '\' unless it is one of the escapable chars '$' ',' or '\' // N.B. This method is used to parse function parameters, so must treat ',' as special
WITHOUT_CLASSIFICATION	// en // fr // de // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // ja // zh_CN // zh_TW
WITHOUT_CLASSIFICATION	//@GuardedBy("LOCK") // Keep track of how many instances are active
WITHOUT_CLASSIFICATION	// sampleOccurred is called from multiple threads; not safe to write from multiple threads. // also decouples the file IO from sample generation
WITHOUT_CLASSIFICATION	// File name sequence number //@GuardedBy("LOCK")
WITHOUT_CLASSIFICATION	// Instance fields are constructed by the client when the instance is create in the test plan // and the field values are then transferred to the server copy by RMI serialisation/deserialisation
WITHOUT_CLASSIFICATION	// process special keys // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If there are some recent files, we must make the separator visisble // The separator is the last item in the list
WITHOUT_CLASSIFICATION	// put the gui object back // to the way it was.
WITHOUT_CLASSIFICATION	// Make sure decoding // follows input file
WITHOUT_CLASSIFICATION	// Save (Selection) As // Save TestPlan As // Save
WITHOUT_CLASSIFICATION	// Y // Y // Y // Y // sp // M // M // / // D // D // / // H // H // : // M // M // : // S // S // end
WITHOUT_CLASSIFICATION	//OK // TODO ??
WITHOUT_CLASSIFICATION	// Support original property name // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// allow for windows / chars in filename // $NON-NLS-1$ // $NON-NLS-2$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// updateMainMenu(((JMeterGUIComponent) // getCurrentNode().getUserObject()).createPopupMenu());
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, simple values, // with \r\n as end of line, which is according to spec, // and with more headers in each multipart
WITHOUT_CLASSIFICATION	// two jars same version // two jars same version
WITHOUT_CLASSIFICATION	// Test plan with OnlyOnceController inside inner loop // Set up the test plan
WITHOUT_CLASSIFICATION	// The following used to be jacks_password, but the Arguments class uses // HashMap for which the order is not defined.
WITHOUT_CLASSIFICATION	// myRow = f.nextRow(); // assertEquals(3,myRow); // assertEquals(0,f.getNextRow());
WITHOUT_CLASSIFICATION	// Is this a work in progress ? // No, // not // a // work // in // progress // ...
WITHOUT_CLASSIFICATION	// Assumes some kind of list is use // If not using a list that retains the order, then the asserts would need to change
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that will change when urlencoded, and where // we tell the sampler to urlencode the parameter value
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// pick up headers if failed to execute the request // httpMethod can be null if method is unexpected
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Resource keys cannot contain spaces, and are forced to lower case // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Nulls cannot be written using PrettyPrintWriter - they cause an NPE // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// default is 1 // default is 0
WITHOUT_CLASSIFICATION	// N.B. JVMs other than Sun may return different instances each time // so we cache the value here (and avoid having to fetch it every time)
WITHOUT_CLASSIFICATION	// Programming error. Don't // continue.
WITHOUT_CLASSIFICATION	//+ JMX attributes - do not change // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //- JMX
WITHOUT_CLASSIFICATION	// Note: this is only used to implement TestIterationListener#testIterationStart // Since this is a frequent event, it makes sense to create the list once rather than scanning each time // The memory used will be released when the thread finishes
WITHOUT_CLASSIFICATION	// We only check the length of the result. Comparing the // actual result (out.toByteArray==original) will usually // fail, because the order of the properties within each // test element may change. Comparing the lengths should be // enough to detect most problem cases...
WITHOUT_CLASSIFICATION	// Assume this thread only // 1 per second // Initialise
WITHOUT_CLASSIFICATION	// Test ignore trailing split characters // Ignore adjacent delimiters
WITHOUT_CLASSIFICATION	// write a OK reponse to browser, to engage SSL exchange // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// We use the page encoding where the form resides, as the // default encoding for the form
WITHOUT_CLASSIFICATION	//+ action names // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set up list of potential targets and // enable listener
WITHOUT_CLASSIFICATION	// .equals caused // NPE
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// record headers size to allow HTTPSampleResult.getBytes() with different options // $NON-NLS-1$ $NON-NLS-2$ // add 2 for a '\r\n' at end of headers (before data) 
WITHOUT_CLASSIFICATION	// a well-bahaved browser is supposed to send 'Connection: close' // with the last request to an HTTP server. Instead, most browsers // leave it to the server to close the connection after their // timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// one space for blank header // $NON-NLS-1$  // one space for blank header  // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// a well-behaved browser is supposed to send 'Connection: close' // with the last request to an HTTP server. Instead, most browsers // leave it to the server to close the connection after their // timeout period. Leave it to the JMeter user to decide.
WITHOUT_CLASSIFICATION	// Process Apache HttpClient parameters file // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// In a post request which is not multipart, we only support // parameters, no file upload is allowed
WITHOUT_CLASSIFICATION	// Embedded URLs must match this RE (if provided) // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Mark Walsh 2002-08-03, modified to also parse a parameter name value // string, where string contains only the parameter name and no equal sign.
WITHOUT_CLASSIFICATION	// Check if the header manager had a content type header // This allows the user to specify his own content-type for a PUT request
WITHOUT_CLASSIFICATION	// If the Multipart is repeatable, we can send it first to // our own stream, without the actual file content, so we can return it
WITHOUT_CLASSIFICATION	// headerManager was set, so let's set the connection // to use it.
WITHOUT_CLASSIFICATION	// we call parse with 1 to get only one. // this also means if we change the implementation // to use 2, it would use every other entry and // so on. Not that it is really useful, but a // person could use it that way if they have a // huge gigabyte log file and they only want to // use a quarter of the entries.
WITHOUT_CLASSIFICATION	// the document should only have one service node // if it doesn't it may not work!
WITHOUT_CLASSIFICATION	// new WSDLHelper("http://localhost/WSTest/WSTest.asmx?WSDL"); // new WSDLHelper("http://localhost/AxisWSDL.xml"); //new WSDLHelper("http://localhost:8080/WSMyUpper.wsdl"); //new WSDLHelper("http://localhost:8080/test.wsdl");
WITHOUT_CLASSIFICATION	// read one line at a time using // BufferedReader
WITHOUT_CLASSIFICATION	// There's little point saving the manager between invocations // as we need to reset most of the beans anyway
WITHOUT_CLASSIFICATION	// / Only do the calculation if // it is needed
WITHOUT_CLASSIFICATION	// A CallableStatement can return more than 1 ResultSets // plus a number of update counts.
WITHOUT_CLASSIFICATION	//++ Do not change these strings; they are used in JMX files to record the button settings // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Timeouts not active // How much left
WITHOUT_CLASSIFICATION	// needs to be accessible from test code // Only contains LDAPArgument entries
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// The default is false, so we can remove the property to simplify JMX files // This also allows HTTPDefaults to work for this checkbox
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//++ For TestBean implementations only // passed to file or script
WITHOUT_CLASSIFICATION	// put a warning if tika-app.jar missing (or some dependencies in only tika-core|parsers packages are using) // $NON-NLS-1$ $NON-NLS-2$ 
WITHOUT_CLASSIFICATION	// Resource keys cannot contain spaces, and are forced to lower case // $NON-NLS-1$ // $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Can occur at run-time // could be caused by the bsh Exceptions: // EvalError, ParseException or TargetError
WITHOUT_CLASSIFICATION	// errorLogging and successOnlyLogging are mutually exclusive // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// A TestBean is a Java Bean. Just define some properties and they will // automagically show up in the GUI. // A String property:
WITHOUT_CLASSIFICATION	// Only try to format if there is a // number
WITHOUT_CLASSIFICATION	// Requires Java 7 // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$ // don't match the empty category
WITHOUT_CLASSIFICATION	// If a table cell is being edited, we should accept the current // value and stop the editing before adding a new row.
WITHOUT_CLASSIFICATION	// Read the header part, we will be looking for a content-length // header, so we know how much we should read. // We assume headers are in ISO_8859_1 // If we do not find such a header, we will just have to read until // we have to block to read more, until we support chunked transfer
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Request validation // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // No point trying these
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX file attributes // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// this is not the result of a redirect // so break the chain
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$  // $NON-NLS-2$
WITHOUT_CLASSIFICATION	//+ JMX attributes - do not change the values // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Did sample succeed?
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// Requires JavaMail 1.4.2+
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// No need to log normally, as we set the status // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// No need to log normally, as we set the status // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// not been set by any child samples
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// throws ME
WITHOUT_CLASSIFICATION	// throws ME
WITHOUT_CLASSIFICATION	/*tfMailFrom.setEnabled(false);            tfMailTo.setEnabled(false);            tfMailToCC.setEnabled(false);            tfMailToBCC.setEnabled(false);            tfSubject.setEnabled(false);*/
WITHOUT_CLASSIFICATION	//++JMX attribute names - do not change the values! // These were moved from SMTPSampler, which is why the prefix is still SMTSampler // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //--JMX attribute names
WITHOUT_CLASSIFICATION	// For completeness
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // default is not in range of a byte
WITHOUT_CLASSIFICATION	// Programming error: // bail out.
WITHOUT_CLASSIFICATION	// If we are disabling the Edit-->Remove menu item and the // Edit-->Add menu item is disabled, then we also need to disable // the Edit menu. // The Java Look and Feel Guidelines say to disable a menu if all // menu items are disabled.
WITHOUT_CLASSIFICATION	// Set default SAVE menu item to disabled since the default node that // is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	// we add the entry
WITHOUT_CLASSIFICATION	// we should make this configurable eventually
WITHOUT_CLASSIFICATION	// we clean up the ResultCollector to make sure there's // no slow leaks
WITHOUT_CLASSIFICATION	// just like the aggregate listener, we use the sample label to represent // a row. in this case, we use it as a key.
WITHOUT_CLASSIFICATION	// Check that optional args work woth long options
WITHOUT_CLASSIFICATION	// Separate argument
WITHOUT_CLASSIFICATION	// assume default charset is OK here //      <apache-bsf.version>2.4.0</apache-bsf.version>
WITHOUT_CLASSIFICATION	// Used to be 'dábale', but caused trouble on Gump. Reasons // unknown.
WITHOUT_CLASSIFICATION	// This would be done by the run command
WITHOUT_CLASSIFICATION	// result.setResponseData - not set
WITHOUT_CLASSIFICATION	// Expected results established using the DDA // algorithm (see // http://www.siggraph.org/education/materials/HyperGraph/scanline/outprims/drawline.htm): // 0/1 vs. 1/1 -> 0 is // closer to 33.33 // 0/2 vs. 1/2 -> 50.0 is closer to // 33.33 // 1/3 vs. 2/3 -> 33.33 is // closer to 33.33 // 1/4 vs. 2/4 -> 25.0 is closer to // 33.33 // 1/5 vs. 2/5 -> 40.0 is closer to // 33.33 // 2/6 vs. 3/6 -> 33.33 is // closer to 33.33
WITHOUT_CLASSIFICATION	/*             * GenericController controller = new GenericController();             * GenericController sub_1 = new GenericController();             * sub_1.addTestElement(new IfController("10<100"));             * sub_1.addTestElement(new IfController("true==false"));             * controller.addTestElement(sub_1); controller.addTestElement(new             * IfController("false==false"));             *              * IfController sub_2 = new IfController(); sub_2.setCondition( "10<10000");             * GenericController sub_3 = new GenericController();             *              * sub_2.addTestElement(new IfController( " \"a\".equals(\"a\")" ) );             * sub_3.addTestElement(new IfController("2>100"));             * sub_3.addTestElement(new IfController("false==true"));             * sub_2.addTestElement(sub_3); sub_2.addTestElement(new             * IfController("2==3")); controller.addTestElement(sub_2);             */
WITHOUT_CLASSIFICATION	// Get next sample and its name
WITHOUT_CLASSIFICATION	// Match by name
WITHOUT_CLASSIFICATION	// Match by name
WITHOUT_CLASSIFICATION	/*         *  Simple test with single Selection controller         *  Generic Controller         *  + Sampler "before"         *  + Switch Controller         *  + + Sampler "zero"         *  + + Sampler "one"         *  + + Sampler "two"         *  + + Sampler "three"         *  + Sampler "after"         */
WITHOUT_CLASSIFICATION	/*         * Generic Controller         * - before         * - While Controller ${VAR}         * - - one         * - - two         * - - Simple Controller         * - - - three         * - - - four         * - after         */
WITHOUT_CLASSIFICATION	// OnlyOnce samples
WITHOUT_CLASSIFICATION	// OnlyOnce samples
WITHOUT_CLASSIFICATION	// Outer sample
WITHOUT_CLASSIFICATION	// Sample in inner loop
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// The outer sample and the inner loop samples
WITHOUT_CLASSIFICATION	// OnlyOnce inside inner loop
WITHOUT_CLASSIFICATION	// Test to show current problem with InterleaveController // I am not sure if the expected order of the samples // below are correct, because I am not sure if it is // properly defined how the InterleaveController and // OnlyOnceController should function.
WITHOUT_CLASSIFICATION	// N.B. Backslashes are removed before dollar, comma and backslash
WITHOUT_CLASSIFICATION	//log.debug("domain property = " + element.getProperty("domain"));
WITHOUT_CLASSIFICATION	// Check old values don't hang around: // fewer matches
WITHOUT_CLASSIFICATION	// same as Parent
WITHOUT_CLASSIFICATION	// Create the CSVRead function and set its parameters.
WITHOUT_CLASSIFICATION	// Check init file functioning
WITHOUT_CLASSIFICATION	// Restarts
WITHOUT_CLASSIFICATION	// col 1, line 1, *A
WITHOUT_CLASSIFICATION	// col2, line 1, *B
WITHOUT_CLASSIFICATION	// Check blank lines are treated as EOF
WITHOUT_CLASSIFICATION	// myRow = f.nextRow(); // assertEquals(0,myRow); // assertEquals(1,f.getNextRow());
WITHOUT_CLASSIFICATION	// Use different XPath for both threads
WITHOUT_CLASSIFICATION	// wrap-round check
WITHOUT_CLASSIFICATION	// Perform a sum and check the results
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	// template // match number // ALL separator
WITHOUT_CLASSIFICATION	/*     * Extract titles from component_reference.xml     */
WITHOUT_CLASSIFICATION	/*     * Test GUI elements - create the suite of tests     */
WITHOUT_CLASSIFICATION	// Skip report packages as implementation is incomplete // Skip report GUI as implementation is incomplete // No, not a work in progress ...
WITHOUT_CLASSIFICATION	/*     * Test TestElements - create the suite     */
WITHOUT_CLASSIFICATION	// Events often have this constructor
WITHOUT_CLASSIFICATION	// no luck. Ignore this class
WITHOUT_CLASSIFICATION	/*     * If not running under AllTests.java, make sure that the properties (and     * log file) are set up correctly.     *      * N.B. In order for this to work correctly, the JUnit test must be started     * in the bin directory, and all the JMeter jars (plus any others needed at     * run-time) need to be on the classpath.     *      */
WITHOUT_CLASSIFICATION	// Display actual encoding used (will differ if file.encoding is not recognised)
WITHOUT_CLASSIFICATION	// Test New cookie is returned
WITHOUT_CLASSIFICATION	// ensure policy is picked up
WITHOUT_CLASSIFICATION	// ensure policy is picked up
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Write to the socket
WITHOUT_CLASSIFICATION	// Headers
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Read the response
WITHOUT_CLASSIFICATION	// Close the connection
WITHOUT_CLASSIFICATION	// The content sent
WITHOUT_CLASSIFICATION	// Write the headers, and then sleep
WITHOUT_CLASSIFICATION	// Connect to the http server, and do a simple http post with utf-8 // encoding of the body, which caused problems when reader/writer // classes were used in the HttpMirrorThread
WITHOUT_CLASSIFICATION	// The response includes the headers from the mirror server, // we want to skip those, to only keep the content mirrored. // Look for the first CRLFCRLF section
WITHOUT_CLASSIFICATION	// Can't instantiate
WITHOUT_CLASSIFICATION	// Test if can instantiate parser using property name
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments
WITHOUT_CLASSIFICATION	// Check arguments // We should have one argument, with the value equal to the post body
WITHOUT_CLASSIFICATION	// Use null for url and contentEncoding, to simulate that HttpRequestHdr do not // know the encoding for the page
WITHOUT_CLASSIFICATION	// Use null for url and contentEncoding, to simulate that HttpRequestHdr do not // know the encoding for the page
WITHOUT_CLASSIFICATION	// When the encoding is not known, the argument will get the encoded value, and the "encode?" set to false
WITHOUT_CLASSIFICATION	// A HTTP POST request, multipart/form-data, simple values, // with \n as end of line, which should also be handled, // and with more headers in each multipart
WITHOUT_CLASSIFICATION	// Create the test file content
WITHOUT_CLASSIFICATION	// create a temporary file to make sure we always have a file to give to the PostWriter  // Whereever we are or Whatever the current path is.
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.sendPostData(URLConnection, HTTPSampler)'     * This method test sending a request which contains both formdata and file content     */
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data with default encoding
WITHOUT_CLASSIFICATION	// Test sending data as ISO-8859-1
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8
WITHOUT_CLASSIFICATION	/*     * Test method for 'org.apache.jmeter.protocol.http.sampler.postWriter.setHeaders(URLConnection, HTTPSampler)'     */
WITHOUT_CLASSIFICATION	// Create the multiparts
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values that have been urlencoded
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, with values similar to __VIEWSTATE parameter that .net uses, // with values urlencoded, but the always encode set to false for the arguments // This is how the HTTP Proxy server adds arguments to the sampler
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, where user defined variables are used // to set the value for form data
WITHOUT_CLASSIFICATION	// Test sending data as UTF-8, where user defined variables are used // to set the value for form data
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check URL
WITHOUT_CLASSIFICATION	// Check request headers
WITHOUT_CLASSIFICATION	// Find the data sent to the mirror server, which the mirror server is sending back to us
WITHOUT_CLASSIFICATION	// Check post body which was sent to the mirror server, and // sent back by the mirror server
WITHOUT_CLASSIFICATION	// Check post body which was sent to the mirror server, and // sent back by the mirror server
WITHOUT_CLASSIFICATION	// Check method, path and query sent
WITHOUT_CLASSIFICATION	// Cannot check the query string of the result, because the mirror server // replies without including query string in URL
WITHOUT_CLASSIFICATION	// Show that can bypass encoding:
WITHOUT_CLASSIFICATION	// set the required variables
WITHOUT_CLASSIFICATION	// test invalid byte arrays
WITHOUT_CLASSIFICATION	// Ensure properties files don't use special characters
WITHOUT_CLASSIFICATION	/*                     * Now check for invalid message format: if string contains {0}                     * and ' there may be a problem, so do a format with dummy                     * parameters and check if there is a { in the output. A bit                     * crude, but should be enough for now.                     */
WITHOUT_CLASSIFICATION	// Original and clone should be equal
WITHOUT_CLASSIFICATION	// Change the original
WITHOUT_CLASSIFICATION	// Check sample increments OK
WITHOUT_CLASSIFICATION	// Check sample increments OK
WITHOUT_CLASSIFICATION	// Check sample increments OK
WITHOUT_CLASSIFICATION	// Check sample increments OK
WITHOUT_CLASSIFICATION	/*             * Parent elapsed total should be no smaller than the sum of the individual samples.             * It may be greater by the timer granularity.             */
WITHOUT_CLASSIFICATION	// Test files for testLoadAndSave; output will generally be different in size but same number of lines
WITHOUT_CLASSIFICATION	// Note this test will fail if a property is added or // removed to any of the components used in the test // files. The way to solve this is to appropriately change // the test file.
WITHOUT_CLASSIFICATION	// test code, intentional
WITHOUT_CLASSIFICATION	// test code, intentional
WITHOUT_CLASSIFICATION	// test code, intentional
WITHOUT_CLASSIFICATION	//        p.add(makeMainPanel(), BorderLayout.CENTER); // Force a minimum table height of 70 pixels
WITHOUT_CLASSIFICATION	// Check reflexive
WITHOUT_CLASSIFICATION	// This is not a requirement
WITHOUT_CLASSIFICATION	// This is not a requirement
WITHOUT_CLASSIFICATION	//assertEquals("t1",f1.invoke());
WITHOUT_CLASSIFICATION	//assertEquals("1a:aa.",f1.invoke());// N.B. returns different result from before
WITHOUT_CLASSIFICATION	// ++ // GUI tests throw the error // testArgumentCreation(org.apache.jmeter.config.gui.ArgumentsPanel$Test)java.lang.NoClassDefFoundError // at java.lang.Class.forName0(Native Method) // at java.lang.Class.forName(Class.java:141) // at // java.awt.GraphicsEnvironment.getLocalGraphicsEnvironment(GraphicsEnvironment.java:62) // // Try to find out why this is ...
WITHOUT_CLASSIFICATION	/*     * Externally callable suite() method for use by JUnit Allows tests to be     * run directly under JUnit, rather than using the startup code in the rest     * of the module. No parameters can be passed in, so it is less flexible.     */
WITHOUT_CLASSIFICATION	/*                     * TestSuite only finds testXXX() methods, and does not look                     * for suite() methods.                     *                      * To provide more compatibilty with stand-alone tests,                     * where JUnit does look for a suite() method, check for it                     * first here.                     *                      */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ // modal dialog box
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // return unknown action names for display error msg
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set up some objects for the script to play with //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // Previously mis-spelt as theadName //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// for omitted file names //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// desc.add("Use fully qualified host name: TRUE/FALSE (Default FALSE)"); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Names of JUnit3 methods //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Leave header as is // headerBuf.append(conn.getHeaderField(0).substring(0, 8)); // headerBuf.append(" "); // headerBuf.append(conn.getResponseCode()); // headerBuf.append(" "); // headerBuf.append(conn.getResponseMessage()); //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Otherwise, the response is scanned for these strings //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Allow access to context and variables directly //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$  //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$  //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// These names must agree case-wise with the variable and property names //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add variables for access to context and variables //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Identifiers //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ default: normal
WITHOUT_CLASSIFICATION	//$NON-NLS-1$  // Test can't have a duration more than 2^31 secs (cast from long to int)
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: normal //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 16 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Change Cancel label to Close //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Default for writing//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Only encode strings if outVersion = 1.0 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Element tags. Must be unique. Keep sorted. //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//+ JMX field names - do not change values //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// regex //$NON-NLS-1$ // template //$NON-NLS-1$ // which match //$NON-NLS-1$ // between text //$NON-NLS-1$ // default text //$NON-NLS-1$ // output variable name //$NON-NLS-1$ // input variable //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // Previously mis-spelt as theadName //$NON-NLS-1$ //$NON-NLS-1$ (may be null) //$NON-NLS-1$ (may be null) //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Function name //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Process __CSVRead(filename,*ALIAS) //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// if argument is 'next' - go to the next line //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // We have a default
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // $NON-NLS1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // Previously mis-spelt as theadName //$NON-NLS-1$ //$NON-NLS-1$ (may be null) //$NON-NLS-1$ (may be null) //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Ensure that these are set, even if no paramters are provided //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // change the classname drop down
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Don't make these static, otherwise language change does not work //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// NOTUSED Font plainText = new Font("plain", Font.PLAIN, 9); // These must not be static, otherwise Language change does not work //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ // Check if it is form data //$NON-NLS-1$ // Get the form field name //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Check if it is a file being uploaded //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // See TestElementPropertyConverter
WITHOUT_CLASSIFICATION	// Look for special Response Length header //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Look for special Response Length header //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	// Look for special Cookie request //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Check if we have found a content-length header //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Look for special Sleep request //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Cookie //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// list of parsers //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Obtain message formats: //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// independent frame to // allow it to be overlaid // by the main frame //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Needed by AbstractTestElement. // Also TestElementConverter and TestElementPropertyConverter for handling empty comments //$NON-NLS-1$ // N.B. Comments originally only applied to Test Plans, hence the name - which can now not be easily changed
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$        
WITHOUT_CLASSIFICATION	// value to return at EOF //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Add variables for access to context and variables //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 16 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 3.0f //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ default: bottom //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 10 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Tabbed results: fill table //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ $NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set the title for the first tab //$NON-NLS-1$ // Add the other tabs if not present // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Fields table //$NON-NLS-1$ //not sure needs I18N? //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // select last tab 
WITHOUT_CLASSIFICATION	// setup bottom tabs, first Raw, second Parsed //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// can be specified in jmeter.properties //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// should header be saved with the data? //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Label // count // Mean // median // 90% // Min // Max // Error %age //$NON-NLS-1$ // Throughput //$NON-NLS-1$ // pageSize   //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 10 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // default: bottom //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: sans serif //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// default: 10 //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add local system properties, if the file is found //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add local JMeter properties, if the file is found //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1
WITHOUT_CLASSIFICATION	//$NON-NLS-1$;
WITHOUT_CLASSIFICATION	//$NON-NLS-1$;
WITHOUT_CLASSIFICATION	// Hide Window on ESC //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Do search on Enter //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // file_merge.setAccelerator( // KeyStroke.getKeyStroke(KeyEvent.VK_O, KeyEvent.CTRL_MASK)); // Set default SAVE menu item to disabled since the default node that // is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // Set default SAVE menu item to disabled since the default node that // is selected is ROOT, which does not allow items to be inserted.
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Search MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// No, must be CSV //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ (Flash Media Manifest)
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Attributes for TestElement and TestElementProperty // Must all be unique //$NON-NLS-1$ // Also used by PropertyConverter classes // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//NOT USED protected   static final String TAG_URL               = "requestUrl";       //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// samplerData attributes. Must be unique. Keep sorted by string value. // Ensure the Listener documentation is updated when new attributes are added //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// N.B. Originally the response code was saved with the code "rs" // but retrieved with the code "rc". Changed to always use "rc", but // allow for "rs" when restoring values. //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Needs to be visible to test cases //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ //$NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // Add variables for access to context and variables
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$  //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // $NON-NLS1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // Ensure variable has been provided
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// otherwise we use "text/xml" as the default //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Could time this // res.sampleEnd(); // if sampleEnd() is not called, elapsed time will remain zero // TODO distinguish errors better //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ - all threads // All threads
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //-- End of names used in JMX files
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Package access for use by Test code //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set the title for the first tab //$NON-NLS-1$ // Remove the other tabs if present // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//    public final static String CONNECTION = "MongoSourceElement.connection"; //$NON-NLS-1$ //    public final static String SOURCE = "MongoSourceElement.source"; //$NON-NLS-1$ // //    public final static String AUTO_CONNECT_RETRY = "MongoSourceElement.autoConnectRetry"; //$NON-NLS-1$ //    public final static String CONNECTIONS_PER_HOST = "MongoSourceElement.connectionsPerHost"; //$NON-NLS-1$ //    public final static String CONNECT_TIMEOUT = "MongoSourceElement.connectTimeout"; //$NON-NLS-1$ //    public final static String CONTINUE_ON_INSERT_ERROR = "MongoSourceElement.continueOnInsertError"; //$NON-NLS-1$ //    public final static String MAX_AUTO_CONNECT_RETRY_TIME = "MongoSourceElement.maxAutoConnectRetryTime"; //$NON-NLS-1$ //    public final static String MAX_WAIT_TIME = "MongoSourceElement.maxWaitTime"; //$NON-NLS-1$ //    public final static String SOCKET_TIMEOUT = "MongoSourceElement.socketTimeout"; //$NON-NLS-1$ //    public final static String SOCKET_KEEP_ALIVE = "MongoSourceElement.socketKeepAlive"; //$NON-NLS-1$ //    public final static String THREADS_ALLOWED_TO_BLOCK_MULTIPLIER = "MongoSourceElement.threadsAllowedToBlockForConnectionMultiplier"; //$NON-NLS-1$ // //    public final static String FSYNC = "MongoSourceElement.fsync"; //$NON-NLS-1$ //    public final static String SAFE = "MongoSourceElement.safe"; //$NON-NLS-1$ //    public final static String WAIT_FOR_JOURNALING = "MongoSourceElement.waitForJournaling"; //$NON-NLS-1$ //    public final static String WRITE_OPERATION_NUMBER_OF_SERVERS = "MongoSourceElement.writeOperationNumberOfServers"; //$NON-NLS-1$ //    public final static String WRITE_OPERATION_TIMEOUT = "MongoSourceElement.writeOperationTimeout"; //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.http.conn.ssl.SSLSocketFactory#createLayeredSocket(java.net.Socket, java.lang.String, int, boolean)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.protocol.http.util.accesslog.LogFilter#excPattern(java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc) A new instance is created for each thread group, and the     * clone() method is then called to create copies for each thread in a     * thread group. This means that the lock object is common to a thread     * group; separate thread groups have separate locks. If this is not     * intended, the lock object could be made static.     *     * @see java.lang.Object#clone()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#setSamplerResult(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#getPanel()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#getLabel()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.SamplerResultTab#clearData()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.log.LogTarget#processEvent(org.apache.log.LogEvent)     */
WITHOUT_CLASSIFICATION	// This is required so that // @see org.apache.jmeter.gui.tree.JMeterTreeModel.getNodesOfType() // can find the Clearable nodes - the userObject has to implement the interface.
WITHOUT_CLASSIFICATION	// N.B. originally called clear() // @see also JMeterGUIComponent
WITHOUT_CLASSIFICATION	// For unit tests, @see TestCSVSaveService
WITHOUT_CLASSIFICATION	// @see getStaticLabel
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see javax.swing.JTabbedPane#setSelectedIndex(int)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see jodd.lagarto.EmptyTagVisitor#script(jodd.lagarto.Tag,         * java.lang.CharSequence)         */
WITHOUT_CLASSIFICATION	/*         * (non-Javadoc)         *          * @see jodd.lagarto.EmptyTagVisitor#tag(jodd.lagarto.Tag)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.parser.HTMLParser#isReusable()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see org.xml.sax.helpers.DefaultHandler#error(org.xml.sax.SAXParseException)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see org.xml.sax.helpers.DefaultHandler#fatalError(org.xml.sax.SAXParseException)         */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testEnded(java.lang.String)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)     */
WITHOUT_CLASSIFICATION	// @see mergeFileProperties // Must be private, as the file list needs special handling // $NON-NLS-1$ // MIMETYPE is kept for backward compatibility with old test plans // $NON-NLS-1$ // FILE_NAME is kept for backward compatibility with old test plans // $NON-NLS-1$
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.http.conn.ssl.SSLSocketFactory#createSocket(org.apache.http.params.HttpParams)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#setSamplerResult(java.lang.Object)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.visualizers.request.RequestView#getLabel()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.AbstractJMeterGuiComponent#clearGui()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.util.LocaleChangeListener#localeChanged(org.apache.jmeter.util.LocaleChangeEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see java.lang.Runnable#run()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#configure(org.apache.jorphan.collections.HashTree)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#runReport()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#stopReport()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#reset()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.engine.ReportEngine#exit()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#getLabelResource()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#createPopupMenu()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#getMenuCategories()     */
WITHOUT_CLASSIFICATION	/*     * @see org.apache.jmeter.report.gui.action.Command#getActionNames()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#getFileName()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#getPageTitle()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#isSuccessful()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#pageStarted()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#pageEnded()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#setFileName(java.lang.String)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#setPageTitle(java.lang.String)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.report.writers.PageSummary#setSuccessful(boolean)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#createTestElement()     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.gui.JMeterGUIComponent#modifyTestElement(org.apache.jmeter.testelement.TestElement)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.testelement.TestStateListener#testEnded()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.testelement.TestStateListener#testEnded(java.lang.String)     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.testelement.TestStateListener#testStarted()     */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *     * @see org.apache.jmeter.testelement.TestStateListener#testStarted(java.lang.String)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.apache.jmeter.protocol.http.sampler.HTTPSamplerBase#testIterationStart(org.apache.jmeter.engine.event.LoopIterationEvent)     */
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// 
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // so we can add them again in init
WITHOUT_CLASSIFICATION	// independent frame to // allow it to be overlaid // by the main frame //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$;
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$
WITHOUT_CLASSIFICATION	// RUN MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// EDIT MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// FILE MENU //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// protected fields: JMeterToolBar class can be use to create another toolbar (plugin, etc.)     //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// reuse documentation //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// The following are used to set the Result details on return from // the script: //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add SamplerData for consistency with BeanShell Sampler //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Add alias for original StringFromFile name (had only one underscore) //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Functions are wrapped in ${ and } //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// The headers are written using ISO_8859_1 encoding //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ // We only support chunked transfer encoding
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ resource name
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Allow Headers to override Host setting //$NON-NLS-1$ //Host
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// revert
WITHOUT_CLASSIFICATION	// revert to previous behaviour //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Not a real sampler
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// If we still can't find it, just try using all of the text
WITHOUT_CLASSIFICATION	// method called by add is synchronized //this is a different model from the one used by the result collector
WITHOUT_CLASSIFICATION	// We are displaying an AssertionResult
WITHOUT_CLASSIFICATION	// /** // * Creates one of the fields used to display the graph's current // * values. // * // * @param color the color used to draw the value. By convention // * this is the same color that is used to draw the // * graph for this value and in the choose panel. // * @param length the number of digits which the field should be // * able to display // * // * @return a text field configured to display one of the // * current graph values // */ // private JTextField createInfoField(Color color, int length) // { // JTextField field = new JTextField(length); // field.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0)); // field.setEditable(false); // field.setForeground(color); // field.setBackground(getBackground()); // // // The text field should expand horizontally, but have // // a fixed height // field.setMaximumSize(new Dimension( // field.getMaximumSize().width, // field.getPreferredSize().height)); // return field; // }
WITHOUT_CLASSIFICATION	/*     * Allow functions etc to register for testStopped notification.     * Only used by the function parser so far.     * The list is merged with the testListeners and then cleared.     */
WITHOUT_CLASSIFICATION	// Insert the workbench node
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // Look and Feel prefix // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ enable/disable // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// we stay within the same parent node
WITHOUT_CLASSIFICATION	// we stay within the same parent node
WITHOUT_CLASSIFICATION	// Get the preference for the recent files
WITHOUT_CLASSIFICATION	// Get the preference for the recent files
WITHOUT_CLASSIFICATION	// Find and set the file for this recent file command
WITHOUT_CLASSIFICATION	// Check if LAF is a built-in one
WITHOUT_CLASSIFICATION	// Using index 0 is voluntary as child is removed in next step and added to new parent
WITHOUT_CLASSIFICATION	// or a treenode from the same tree
WITHOUT_CLASSIFICATION	// Extract transfer data.
WITHOUT_CLASSIFICATION	// Insert a clone of the node, the original one will be removed by the exportDone method // the children are not cloned but moved to the cloned node // working on the original node would be harder as  //    you'll have to deal with the insertion index offset if you re-order a node inside a parent
WITHOUT_CLASSIFICATION	/*     * The following array must agree with dateFormat     *     * It is used to translate the positions in the buffer to the values used by     * the Calendar class for the field id.     *     * Current format: MM/DD/YYYY HH:MM:SS 01234567890123456789 ^buffer     * positions     */
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON_NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// Used by SampleSaveConfigurationConverter.unmarshall()
WITHOUT_CLASSIFICATION	// Note that sampleStarted() and sampleStopped() is not made to appear // in synch with sampleOccured() when replaying held samples. // For now this is not critical since sampleStarted() and sampleStopped() // is not used, but it may become an issue in the future. Then these // events must also be stored so that replay of all events may occur and // in the right order. Each stored event must then be tagged with something // that lets you distinguish between occured, started and ended.
WITHOUT_CLASSIFICATION	// Allow TestResultWrapper to feed back the samples // This is effectively the same as saver.fromXML(InputStream) except we get to provide the DataHolder // Don't know why there is no method for this in the XStream class
WITHOUT_CLASSIFICATION	//OK
WITHOUT_CLASSIFICATION	// N.B. default charset is used deliberately here
WITHOUT_CLASSIFICATION	// Catch errors and rethrow as ConversionException so we get location details
WITHOUT_CLASSIFICATION	// Version information for test plan header // This is written to JMX files by ScriptWrapperConverter // Also to JTL files by ResultCollector // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// For converters to use
WITHOUT_CLASSIFICATION	// Get the OutputWriter to use
WITHOUT_CLASSIFICATION	// Use deprecated method, to avoid duplicating code
WITHOUT_CLASSIFICATION	// Get the InputReader to use
WITHOUT_CLASSIFICATION	// Get the InputReader to use
WITHOUT_CLASSIFICATION	//  Normal output //  ---- Debugging information ---- //  required-type       : org.apache.jorphan.collections.ListedHashTree //  cause-message       : WebServiceSampler : WebServiceSampler //  class               : org.apache.jmeter.save.ScriptWrapper //  message             : WebServiceSampler : WebServiceSampler //  line number         : 929 //  path                : /jmeterTestPlan/hashTree/hashTree/hashTree[4]/hashTree[5]/WebServiceSampler //  cause-exception     : com.thoughtworks.xstream.alias.CannotResolveClassException //  -------------------------------
WITHOUT_CLASSIFICATION	// --------------------------------------------------------------------- // XML RESULT FILE CONSTANTS AND FIELD NAME CONSTANTS // ---------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$ // $NON-NLS-1$
WITHOUT_CLASSIFICATION	// $NON-NLS-1$
WITHOUT_CLASSIFICATION	// It is the sub sampler of the transaction that will be sampled
WITHOUT_CLASSIFICATION	// N.B. This is only called at the start and end of a thread, so there is not // necessary to cache the search results, thus saving memory
WITHOUT_CLASSIFICATION	// If parent is OK, but child failed, add a message and flag the parent as failed
WITHOUT_CLASSIFICATION	//    private static Configuration getConfiguration(AssertionResult assResult) { //        DefaultConfiguration config = new DefaultConfiguration(ASSERTION_RESULT_TAG_NAME, "JMeter Save Service"); // //        config.setAttribute(FAILURE_MESSAGE, assResult.getFailureMessage()); //        config.setAttribute(ERROR, "" + assResult.isError()); //        config.setAttribute(FAILURE, "" + assResult.isFailure()); //        return config; //    }
WITHOUT_CLASSIFICATION	// see if this works // it did not, let's try some other formats
WITHOUT_CLASSIFICATION	// Both these are needed in the list even though they set the same // variable
WITHOUT_CLASSIFICATION	/*     * Class to handle generating the delimited string. - adds the delimiter     * if not the first call - quotes any strings that require it     */
WITHOUT_CLASSIFICATION	/*     * <p> Returns a <code>String</code> value for a character-delimited column     * value enclosed in the quote character, if required. </p>     *      * <p> If the value contains a special character, then the String value is     * returned enclosed in the quote character. </p>     *      * <p> Any quote characters in the value are doubled up. </p>     *      * <p> If the value does not contain any special characters, then the String     * value is returned unchanged. </p>     *      * <p> N.B. The list of special characters includes the quote character.     * </p>     *      * @param input the input column String, may be null (without enclosing     * delimiters)     *      * @param specialChars special characters; second one must be the quote     * character     *      * @return the input String, enclosed in quote characters if the value     * contains a special character, <code>null</code> for null string input     */
WITHOUT_CLASSIFICATION	// read first line and forget
WITHOUT_CLASSIFICATION	// read first line and forget
WITHOUT_CLASSIFICATION	// Obtain a value of the appropriate type for this property.
WITHOUT_CLASSIFICATION	// use negative condition so missing (null) value is treated as FALSE
WITHOUT_CLASSIFICATION	// the DEFAULT class // Convert int to Integer etc:
WITHOUT_CLASSIFICATION	// might be null (e.g. in testing)
WITHOUT_CLASSIFICATION	/*     * True iff we're currently processing an event triggered by the user     * selecting the "Edit" option. Used to prevent reverting the combo to     * non-editable during processing of secondary events.     */
WITHOUT_CLASSIFICATION	// Programming error. Don't // continue.
WITHOUT_CLASSIFICATION	// Creation of the customizer and GUI initialization is delayed until // the // first // configure call. We don't need all that just to find out the static // label, menu // categories, etc!
WITHOUT_CLASSIFICATION	/** * <p> * Super-class for TestElements that can be applied to main sample, sub-samples or both. * [Assertions use a different class because they use a different value for the {@link #getScopeName()} constant] * </p> * * <p> * Their corresponding GUI classes need to add the ScopePanel to the GUI * using the AbstractXXXGui methods: * <ul> * <li>createScopePanel()</li> * <li>saveScopeSettings()</li> * <li>showScopeSettings()</li> * </ul> * </p> */
WITHOUT_CLASSIFICATION	// TestBeanHelper.prepare() is OK
WITHOUT_CLASSIFICATION	// Trigger end of loop condition on all parent controllers of current sampler
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// OK to call TestBeanHelper.prepare()
WITHOUT_CLASSIFICATION	// Original (rather odd) behaviour // start at the end
WITHOUT_CLASSIFICATION	// Property names to preload into JMeter variables:
WITHOUT_CLASSIFICATION	// List of active threads
WITHOUT_CLASSIFICATION	// set the endtime for the Thread // Duration is in seconds
WITHOUT_CLASSIFICATION	// N.B. we don't wait for the thread to complete, as that would prevent parallel TGs
WITHOUT_CLASSIFICATION	// For example: // jar:file:/JMeter/lib/ext/ApacheJMeter_core.jar!/org/apache/jmeter/util/JMeterVersion.class // or if using an IDE         // file:/workspaces/JMeter/build/core/org/apache/jmeter/util/JMeterVersion.class
WITHOUT_CLASSIFICATION	// For use by the server script
WITHOUT_CLASSIFICATION	// Override so we can intercept the stream
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// TODO - charset?
WITHOUT_CLASSIFICATION	// API expects null not empty array, see http://docs.oracle.com/javase/6/docs/api/javax/net/ssl/X509KeyManager.html
WITHOUT_CLASSIFICATION	// the copying thread won't generally detect EOF
WITHOUT_CLASSIFICATION	// N.B. It seems that Opera needs a chain in order to accept server keys signed by the intermediate CA // Opera does not seem to like server keys signed by the root (self-signed) cert.
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Needs to be volatile as may be referenced from multiple threads // TODO see if this can be made final somehow
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON_NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
