IMPLEMENTATION	// TODO: Also check REG_ANCHORINDEX vs. anchor
IMPLEMENTATION	// skip header bytes // maybe should check if they're valid or not?
IMPLEMENTATION	// need to add static block here
IMPLEMENTATION	/**    * Parse the attribute type.    * [54] AttType ::= StringType | TokenizedType | EnumeratedType    * [55] StringType ::= 'CDATA'    * [56] TokenizedType ::= 'ID' | 'IDREF' | 'IDREFS' | 'ENTITY' | 'ENTITIES' |    *                        'NMTOKEN' | 'NMTOKENS'    * [57] EnumeratedType ::= NotationType | Enumeration    * *TODO: validate the type!!    */
IMPLEMENTATION	// this convention may change...
IMPLEMENTATION	// Need some format checking here
IMPLEMENTATION	// implement the recursion for getClassImpl()
IMPLEMENTATION	// Need to calculate this... just fudging here for now.
IMPLEMENTATION	// Need to calculate this... just fudging here for now.
IMPLEMENTATION	// Need to calculate this... just fudging here for now.
IMPLEMENTATION	/**    * Parse the XML declaration.    * <pre>    * [25] XMLDecl ::= '&lt;?xml' VersionInfo EncodingDecl? SDDecl? S? '?&gt;'    * [26] VersionInfo ::= S 'version' Eq ('"1.0"' | "'1.0'")    * [33] SDDecl ::= S 'standalone' Eq "'" ('yes' | 'no') "'"    *               | S 'standalone' Eq '"' ("yes" | "no") '"'    * [78] EncodingDecl ::= S 'encoding' Eq QEncoding    * </pre>    * <p>([80] to [82] are also significant.)    * <p>(The <code>&lt;?xml</code> and whitespace have already been read.)    * <p>TODO: validate value of standalone.    * @see #parseTextDecl    * @see #checkEncoding    */
IMPLEMENTATION	/**    * Parse an element-content model.    * [42] elements ::= (choice | seq) ('?' | '*' | '+')?    * [44] cps ::= S? %cp S?    * [45] choice ::= '(' S? %ctokplus (S? '|' S? %ctoks)* S? ')'    * [46] ctokplus ::= cps ('|' cps)+    * [47] ctoks ::= cps ('|' cps)*    * [48] seq ::= '(' S? %stoks (S? ',' S? %stoks)* S? ')'    * [49] stoks ::= cps (',' cps)*    * *NOTE: the opening '(' and S have already been read.    * *TODO: go over parameter entity boundaries more carefully.    */
IMPLEMENTATION	/** * An output stream that compresses into the BZip2 format (without the file * header chars) into another stream. TODO: Update to BZip2 1.0.1 * * @author <a href="mailto:keiron@aftexsw.com">Keiron Liddle</a> */
IMPLEMENTATION	/*		Debug utils are static so that they are reachable by code that doesn't		necessarily have an interpreter reference (e.g. tracing in utils).		In the future we may want to allow debug/trace to be turned on on		a per interpreter basis, in which case we'll need to use the parent 		reference in some way to determine the scope of the command that 		turns it on or off.	*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*			Doing instanceof?  Next node is a type.		*/
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ParentDirectoryRenderer class
WITHOUT_CLASSIFICATION	//{{{ TableMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ mouseClicked() method
WITHOUT_CLASSIFICATION	// install man page
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	// set proxy authentication
WITHOUT_CLASSIFICATION	//{{{ autodetect() method
WITHOUT_CLASSIFICATION	// file does not begin with UTF-8-Y // signature. reset stream, read as // UTF-8.
WITHOUT_CLASSIFICATION	// Determine whether we are dealing // with a one-, two-, three-, or four- // byte sequence.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ insideCompoundEdit() method
WITHOUT_CLASSIFICATION	// 1-byte sequence: 000000000xxxxxxx = 0xxxxxxx
WITHOUT_CLASSIFICATION	// null object ref is not instance of any type
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getDocument() method
WITHOUT_CLASSIFICATION	//{{{ getParentElement() method
WITHOUT_CLASSIFICATION	//{{{ getAttributes() method
WITHOUT_CLASSIFICATION	//{{{ ensureCapacity() method
WITHOUT_CLASSIFICATION	//{{{ RootElement constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ getEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ getElementIndex() method
WITHOUT_CLASSIFICATION	// No super method, try to invoke regular method // could be a superfluous "super." which is legal.
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Local Variables. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadClass() method
WITHOUT_CLASSIFICATION	//{{{ getZipFile() method
WITHOUT_CLASSIFICATION	/* Defer to whoever loaded us (such as JShell,			 * Echidna, etc) */
WITHOUT_CLASSIFICATION	// remember that this class doesn't exist for // future reference
WITHOUT_CLASSIFICATION	//{{{ getResourceAsStream() method
WITHOUT_CLASSIFICATION	//{{{ getResource() method
WITHOUT_CLASSIFICATION	//{{{ getResourceAsPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ dump() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ JARClassLoader constructor
WITHOUT_CLASSIFICATION	//{{{ finalize() method
WITHOUT_CLASSIFICATION	//{{{ activate() method
WITHOUT_CLASSIFICATION	//{{{ deactivate() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ _loadClass() method
WITHOUT_CLASSIFICATION	//{{{ ServiceListHandler constructor
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getElementCount() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ getElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ getCachedServices() method
WITHOUT_CLASSIFICATION	//{{{ isLeaf() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ pushElement() method
WITHOUT_CLASSIFICATION	//{{{ peekElement() method
WITHOUT_CLASSIFICATION	//{{{ popElement() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getLabel() method
WITHOUT_CLASSIFICATION	//{{{ OptionGroup constructor
WITHOUT_CLASSIFICATION	//{{{ OptionGroup constructor
WITHOUT_CLASSIFICATION	//{{{ addOptionGroup() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	//{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	//{{{ getMembers() method
WITHOUT_CLASSIFICATION	//{{{ getMember() method
WITHOUT_CLASSIFICATION	//{{{ getMemberIndex() method
WITHOUT_CLASSIFICATION	//{{{ getMemberCount() method
WITHOUT_CLASSIFICATION	//{{{ setSort() method
WITHOUT_CLASSIFICATION	//{{{ insertionSort() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getLabel() method
WITHOUT_CLASSIFICATION	//{{{ removeFromBus() method
WITHOUT_CLASSIFICATION	//{{{ addToBus() method
WITHOUT_CLASSIFICATION	//{{{ getComponents() method
WITHOUT_CLASSIFICATION	//{{{ send() method
WITHOUT_CLASSIFICATION	// can't create new instances
WITHOUT_CLASSIFICATION	//{{{ EditAction constructor
WITHOUT_CLASSIFICATION	//{{{ getMouseOverText() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ isToggle() method
WITHOUT_CLASSIFICATION	//{{{ isSelected() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ noRepeat() method
WITHOUT_CLASSIFICATION	//{{{ noRecord() method
WITHOUT_CLASSIFICATION	//{{{ noRememberLast() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Wrapper class
WITHOUT_CLASSIFICATION	//{{{ setInterval() method
WITHOUT_CLASSIFICATION	//{{{ stop() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	// might come in handy useful some time
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Animator class
WITHOUT_CLASSIFICATION	//{{{ AbbrevEditor constructor
WITHOUT_CLASSIFICATION	//{{{ getAbbrev() method
WITHOUT_CLASSIFICATION	//{{{ setAbbrev() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //{{{ KEY_RELEASED...
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* on some Windows versions, connections to localhost			 * fail if the network is not running. To avoid			 * confusing newbies with weird error messages, log			 * errors that occur while starting the server			 * as NOTICE, not ERROR */
WITHOUT_CLASSIFICATION	//{{{ run() method
WITHOUT_CLASSIFICATION	//{{{ handleClient() method
WITHOUT_CLASSIFICATION	//{{{ handleClient() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// no background mode, and opening a new view
WITHOUT_CLASSIFICATION	// no background mode, and reusing existing view
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ handleClient() method
WITHOUT_CLASSIFICATION	// un-iconify using JDK 1.3 API
WITHOUT_CLASSIFICATION	//{{{ isOK() method
WITHOUT_CLASSIFICATION	//{{{ getPort method
WITHOUT_CLASSIFICATION	//{{{ stopServer() method
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	// Reset the timeout
WITHOUT_CLASSIFICATION	//{{{ BeanShellAction constructor
WITHOUT_CLASSIFICATION	/* Some characters that we like to use in action names		 * ('.', '-') are not allowed in BeanShell identifiers. */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ isSelected() method
WITHOUT_CLASSIFICATION	//{{{ noRepeat() method
WITHOUT_CLASSIFICATION	//{{{ noRecord() method
WITHOUT_CLASSIFICATION	//{{{ noRememberLast() method
WITHOUT_CLASSIFICATION	// so that in the future we don't see streams of // exceptions
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	/* Runtime runtime = Runtime.getRuntime();		int freeMemory = (int)(runtime.freeMemory() / 1024);		int totalMemory = (int)(runtime.totalMemory() / 1024);		int usedMemory = (totalMemory - freeMemory);		Log.log(Log.DEBUG,this,"Java heap: " + usedMemory + "Kb / "			+ totalMemory + "Kb, " + (usedMemory * 100 / totalMemory)			+ "%"); */
WITHOUT_CLASSIFICATION	// save list of open files
WITHOUT_CLASSIFICATION	// flush log
WITHOUT_CLASSIFICATION	//{{{ ActionListHandler constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ pushElement() method
WITHOUT_CLASSIFICATION	//{{{ paste() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ copy() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ peekElement() method
WITHOUT_CLASSIFICATION	//{{{ popElement() method
WITHOUT_CLASSIFICATION	// protected members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ paste() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setRegister() method
WITHOUT_CLASSIFICATION	//{{{ setRegister() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	/* to avoid data loss, only do this if the above			 * completed successfully */
WITHOUT_CLASSIFICATION	//{{{ clearRegister() method
WITHOUT_CLASSIFICATION	//{{{ getRegisters() method
WITHOUT_CLASSIFICATION	//{{{ getRegisterStatusPrompt() method
WITHOUT_CLASSIFICATION	//{{{ saveRegisters() method
WITHOUT_CLASSIFICATION	//{{{ loadRegisters() method
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,Registers.class,fnf);
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ Register interface
WITHOUT_CLASSIFICATION	//{{{ ClipboardRegister class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	// remove trailing \n
WITHOUT_CLASSIFICATION	//{{{ StringRegister class
WITHOUT_CLASSIFICATION	//{{{ RegistersHandler class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ EBMessage constructor
WITHOUT_CLASSIFICATION	//{{{ EBMessage constructor
WITHOUT_CLASSIFICATION	//{{{ getSource() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Deprecated methods
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ setBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getTextArea() method
WITHOUT_CLASSIFICATION	// only do this if we are the current edit pane
WITHOUT_CLASSIFICATION	// Only do this after all I/O requests are complete
WITHOUT_CLASSIFICATION	// avoid a race condition // see bug #834338
WITHOUT_CLASSIFICATION	//{{{ prevBuffer() method
WITHOUT_CLASSIFICATION	//{{{ nextBuffer() method
WITHOUT_CLASSIFICATION	//{{{ recentBuffer() method
WITHOUT_CLASSIFICATION	//{{{ focusOnTextArea() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLabel() method
WITHOUT_CLASSIFICATION	//{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	//{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	//{{{ ActionSet constructor
WITHOUT_CLASSIFICATION	//{{{ setLabel() method
WITHOUT_CLASSIFICATION	//{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ addAction() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ removeAction() method
WITHOUT_CLASSIFICATION	//{{{ removeAllActions() method
WITHOUT_CLASSIFICATION	//{{{ getAction() method
WITHOUT_CLASSIFICATION	//{{{ getActionCount() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getActions() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ getActionNames() method
WITHOUT_CLASSIFICATION	//{{{ getActionNames() method
WITHOUT_CLASSIFICATION	//{{{ getCacheableActionNames() method
WITHOUT_CLASSIFICATION	//{{{ contains() method
WITHOUT_CLASSIFICATION	//{{{ size() method
WITHOUT_CLASSIFICATION	//{{{ initKeyBindings() method
WITHOUT_CLASSIFICATION	//actions.clear();
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ dragAndDropCallback() method
WITHOUT_CLASSIFICATION	//{{{ initTextArea() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ initBufferSwitcher() method
WITHOUT_CLASSIFICATION	//{{{ MyFocusManager class
WITHOUT_CLASSIFICATION	//{{{ MyFocusTraversalPolicy class
WITHOUT_CLASSIFICATION	//{{{ MouseWheelHandler class
WITHOUT_CLASSIFICATION	//{{{ TextAreaTransferHandler class
WITHOUT_CLASSIFICATION	/* I assume that there can be only one drag operation at the time */
WITHOUT_CLASSIFICATION	/* if user drops into the same			selection where they started, do			nothing. */
WITHOUT_CLASSIFICATION	/* if user drops into a selection,				replace selection */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* otherwise just insert the text */
WITHOUT_CLASSIFICATION	// correctly handle text flavor + file list flavor // + text area read only, do an or of all flags
WITHOUT_CLASSIFICATION	//{{{ DropHandler class
WITHOUT_CLASSIFICATION	//textArea.getBuffer().beginCompoundEdit();
WITHOUT_CLASSIFICATION	//textArea.getBuffer().endCompoundEdit();
WITHOUT_CLASSIFICATION	//textArea.getBuffer().endCompoundEdit();
WITHOUT_CLASSIFICATION	//{{{ TextAreaSelection class
WITHOUT_CLASSIFICATION	//{{{ showBufferSwitcher() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Path name methods
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ canonPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// get rid of mixed paths on Windows
WITHOUT_CLASSIFICATION	// also get rid of trailing spaces on Windows
WITHOUT_CLASSIFICATION	// do the same on OS X
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ resolveSymlinks() method
WITHOUT_CLASSIFICATION	//{{{ isAbsolutePath() method
WITHOUT_CLASSIFICATION	// not sure if this is correct for OpenVMS.
WITHOUT_CLASSIFICATION	// nice and simple
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ saveCaretInfo() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ concatPath() method
WITHOUT_CLASSIFICATION	// Make all child paths relative.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getFileExtension() method
WITHOUT_CLASSIFICATION	//{{{ getFileName() method
WITHOUT_CLASSIFICATION	//{{{ getFileNameNoExtension() method
WITHOUT_CLASSIFICATION	//{{{ getFileParent() method
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ getFileProtocol() method
WITHOUT_CLASSIFICATION	//{{{ getProtocolOfURL() method
WITHOUT_CLASSIFICATION	//{{{ isURL() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// C:\AUTOEXEC.BAT
WITHOUT_CLASSIFICATION	// /etc/passwd
WITHOUT_CLASSIFICATION	// D:\WINDOWS, or doesn't contain : at all
WITHOUT_CLASSIFICATION	// If backups is 1, create ~ file
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//Selection[] selection = (Selection[])buffer.getProperty(Buffer.SELECTION);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* if backup file was created less than			 * 'backupTimeDistance' ago, we do not			 * create the backup */
WITHOUT_CLASSIFICATION	// If backups > 1, move old ~n~ files, create ~1~ file
WITHOUT_CLASSIFICATION	/* delete a backup created using above method */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ fileToClass() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ classToFile() method
WITHOUT_CLASSIFICATION	/*			Treat lhs and rhs as arbitrary objects and do the operation.			(including NULL and VOID represented by their Primitive types)		*/
WITHOUT_CLASSIFICATION	//{{{ Text methods
WITHOUT_CLASSIFICATION	//{{{ getLeadingWhiteSpace() method
WITHOUT_CLASSIFICATION	// FALL THROUGH TO DEFAULT CASE!!!
WITHOUT_CLASSIFICATION	/*		object is a non-null and non-void Primitive type	*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Bsh scripted object
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ getLeadingWhiteSpaceWidth() method
WITHOUT_CLASSIFICATION	//{{{ getVirtualWidth() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getOffsetOfVirtualColumn() method
WITHOUT_CLASSIFICATION	//{{{ createWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ createWhiteSpace() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ globToRE() method
WITHOUT_CLASSIFICATION	//{{{ escapesToChars() method
WITHOUT_CLASSIFICATION	//{{{ charsToEscapes() method
WITHOUT_CLASSIFICATION	//{{{ charsToEscapes() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ compareVersions() method
WITHOUT_CLASSIFICATION	//{{{ compareStrings() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//_i--;
WITHOUT_CLASSIFICATION	//_j--;
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ stringsEqual() method
WITHOUT_CLASSIFICATION	//{{{ objectsEqual() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isVMS() method
WITHOUT_CLASSIFICATION	//{{{ isMacOSLF() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ hasScreenMenuBar
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isJava14() method
WITHOUT_CLASSIFICATION	//{{{ isJava15() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	// for debugging, make jEdit think its using a different // version of Java than it really is.
WITHOUT_CLASSIFICATION	//{{{ Some constants
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ charsToEntities() method
WITHOUT_CLASSIFICATION	//{{{ formatFileSize() method
WITHOUT_CLASSIFICATION	//{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	//{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	//{{{ getLongestPrefix() method
WITHOUT_CLASSIFICATION	/*delcaredOnly*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Sorting methods
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	//{{{ Compare interface
WITHOUT_CLASSIFICATION	//{{{ StringCompare class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ StringICaseCompare class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Java object
WITHOUT_CLASSIFICATION	//{{{ MenuItemCompare class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Map types to assignable forms, need to keep this fast...
WITHOUT_CLASSIFICATION	//{{{ buildToVersion() method
WITHOUT_CLASSIFICATION	// First 2 chars are the major version number
WITHOUT_CLASSIFICATION	// Second 2 are the minor number
WITHOUT_CLASSIFICATION	// Then the pre-release status
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Finally the bug fix release
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ 1. Check whether tools.jar is in the system classpath:
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG, MiscUtilities.class, //	"- is not in system classpath."); //}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ 2. Check whether it is in the jEdit user settings jars folder:
WITHOUT_CLASSIFICATION	// jEdit will load it automatically
WITHOUT_CLASSIFICATION	// jEdit will load it automatically
WITHOUT_CLASSIFICATION	//{{{ 3. Check whether it is in jEdit's system jars folder:
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ 4. Check whether it is in <java.home>/lib:
WITHOUT_CLASSIFICATION	//{{{ Load it, if not yet done:
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getEncodings() method
WITHOUT_CLASSIFICATION	//{{{ isSupportedEncoding() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ compareChars()
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ maybeReload() method
WITHOUT_CLASSIFICATION	// On Windows and MacOS, path names are case insensitive
WITHOUT_CLASSIFICATION	//{{{ Input/output methods
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	// unwrap any primitives
WITHOUT_CLASSIFICATION	/*onlystatic*/
WITHOUT_CLASSIFICATION	/*onlystatic*/
WITHOUT_CLASSIFICATION	/*onlystatic*/
WITHOUT_CLASSIFICATION	// no field, try property acces
WITHOUT_CLASSIFICATION	// not a field, try property access
WITHOUT_CLASSIFICATION	// shouldn't happen
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getExpandOnInput() method
WITHOUT_CLASSIFICATION	//{{{ setExpandOnInput() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ expandAbbrev() method
WITHOUT_CLASSIFICATION	//{{{ Figure out some minor things
WITHOUT_CLASSIFICATION	// we reuse the 'pp' vector to save time
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	// positional parameters will be inserted where $1, $2, $3, ... // occurs in the expansion
WITHOUT_CLASSIFICATION	//{{{ Handle abbrevs of the form abbrev#pos1#pos2#pos3#...
WITHOUT_CLASSIFICATION	// have to check again since above might set // NEW_FILE flag
WITHOUT_CLASSIFICATION	//{{{ reload() method
WITHOUT_CLASSIFICATION	// For `reload' command
WITHOUT_CLASSIFICATION	// Only on initial load
WITHOUT_CLASSIFICATION	//{{{ Do some stuff once loading is finished
WITHOUT_CLASSIFICATION	// if reloading a file, clear dirty flag
WITHOUT_CLASSIFICATION	// view text areas temporarily blank out while a buffer is // being loaded, to indicate to the user that there is no // data available yet.
WITHOUT_CLASSIFICATION	// theoretically a segment could // have seg.offset != 0 but // SegmentBuffer never does that
WITHOUT_CLASSIFICATION	/* do nothing */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setMode() method
WITHOUT_CLASSIFICATION	//{{{ setMode() method
WITHOUT_CLASSIFICATION	//{{{ setMode() method
WITHOUT_CLASSIFICATION	/* This protects against stupid people (like me)		 * doing stuff like buffer.setMode(jEdit.getMode(...)); */
WITHOUT_CLASSIFICATION	// this must be in reverse order so that modes from the user // catalog get checked first!
WITHOUT_CLASSIFICATION	//{{{ markTokens() method
WITHOUT_CLASSIFICATION	//{{{ Indentation
WITHOUT_CLASSIFICATION	//{{{ removeTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	// blank line
WITHOUT_CLASSIFICATION	// no whitespace
WITHOUT_CLASSIFICATION	//{{{ shiftIndentLeft() method
WITHOUT_CLASSIFICATION	//{{{ shiftIndentRight() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getVirtualWidth() method
WITHOUT_CLASSIFICATION	//{{{ getOffsetOfVirtualColumn() method
WITHOUT_CLASSIFICATION	//{{{ getOpenParenIndent() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// the first element of pp is the abbrev itself
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //{{{ Handle ordinary abbrevs
WITHOUT_CLASSIFICATION	//{{{ Maybe show add abbrev dialog
WITHOUT_CLASSIFICATION	//{{{ getGlobalAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ setGlobalAbbrevs() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getModeAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ setModeAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ addGlobalAbbrev() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ addModeAbbrev() method
WITHOUT_CLASSIFICATION	// only load global abbrevs if user abbrevs file could not be loaded
WITHOUT_CLASSIFICATION	//{{{ countNewlines() method
WITHOUT_CLASSIFICATION	// try mode-specific abbrevs first
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ expandAbbrev() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ saveAbbrevs() method
WITHOUT_CLASSIFICATION	//{{{ saveAbbrevs() method
WITHOUT_CLASSIFICATION	// write global abbrevs
WITHOUT_CLASSIFICATION	// write mode abbrevs
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// number of positional parameters in abbreviation expansion
WITHOUT_CLASSIFICATION	//{{{ Expansion constructor
WITHOUT_CLASSIFICATION	//{{{ Handle backslash
WITHOUT_CLASSIFICATION	// $n is 1-indexed, but vector // contents is zero indexed
WITHOUT_CLASSIFICATION	// $key will be $key, for // example
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ insertAtColumn() method
WITHOUT_CLASSIFICATION	//{{{ insertIndented() method
WITHOUT_CLASSIFICATION	// obtain the leading indent for later use
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//{{{ stop() method
WITHOUT_CLASSIFICATION	//{{{ getClassName() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	// this one only finds public (and in interfaces, etc.)
WITHOUT_CLASSIFICATION	// try declaredField
WITHOUT_CLASSIFICATION	//{{{ createMenuItems() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ createMenuItems() method
WITHOUT_CLASSIFICATION	//{{{ createBrowserMenuItems() method
WITHOUT_CLASSIFICATION	//{{{ Deprecated methods
WITHOUT_CLASSIFICATION	//{{{ createOptionPanes() method
WITHOUT_CLASSIFICATION	//{{{ getJAR() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// package-private members
WITHOUT_CLASSIFICATION	//{{{ Deferred class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// package-private members
WITHOUT_CLASSIFICATION	//{{{ JAR class
WITHOUT_CLASSIFICATION	//{{{ getVersion() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBuild() method
WITHOUT_CLASSIFICATION	// (major).(minor).(<99 = preX, 99 = final).(bug fix)
WITHOUT_CLASSIFICATION	//{{{ main() method
WITHOUT_CLASSIFICATION	//{{{ Check for Java 1.3 or later
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Miscellaneous methods
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getNext() method
WITHOUT_CLASSIFICATION	// MacOS users expect the app to keep running after all windows // are closed
WITHOUT_CLASSIFICATION	//{{{ getPrev() method
WITHOUT_CLASSIFICATION	//{{{ setWaitSocket() method
WITHOUT_CLASSIFICATION	//{{{ getIndex() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Parse command line
WITHOUT_CLASSIFICATION	// open initial view?
WITHOUT_CLASSIFICATION	// script to run
WITHOUT_CLASSIFICATION	//{{{ We need these initializations very early on
WITHOUT_CLASSIFICATION	//{{{ Try connecting to another running jEdit instance
WITHOUT_CLASSIFICATION	// block until its closed
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Initialize settings directory
WITHOUT_CLASSIFICATION	// Write a warning message:
WITHOUT_CLASSIFICATION	//{{{ Get things rolling
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Initialize server
WITHOUT_CLASSIFICATION	//{{{ Do more stuff
WITHOUT_CLASSIFICATION	// Buffer sort
WITHOUT_CLASSIFICATION	//{{{ Initialize Java 1.4-specific code
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Activate plugins that must be activated at startup
WITHOUT_CLASSIFICATION	//{{{ Load macros and run startup scripts, after plugins and settings are loaded
WITHOUT_CLASSIFICATION	//{{{ Run script specified with -run= parameter
WITHOUT_CLASSIFICATION	// Open files, create the view and hide the splash screen.
WITHOUT_CLASSIFICATION	//{{{ Property methods
WITHOUT_CLASSIFICATION	//{{{ getProperties() method
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	//{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	//{{{ getIntegerProperty() method
WITHOUT_CLASSIFICATION	//{{{ getDoubleProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Not found, fall through to next class
WITHOUT_CLASSIFICATION	// Now, on with the hunt...
WITHOUT_CLASSIFICATION	// Quick check catches public fields include those in interfaces
WITHOUT_CLASSIFICATION	//{{{ getFontProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getFontProperty() method
WITHOUT_CLASSIFICATION	//{{{ getColorProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setColorProperty() method
WITHOUT_CLASSIFICATION	//{{{ setProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setTemporaryProperty() method
WITHOUT_CLASSIFICATION	//{{{ setBooleanProperty() method
WITHOUT_CLASSIFICATION	//{{{ setIntegerProperty() method
WITHOUT_CLASSIFICATION	//{{{ setDoubleProperty() method
WITHOUT_CLASSIFICATION	//{{{ setFontProperty() method
WITHOUT_CLASSIFICATION	//{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	//{{{ resetProperty() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	// give all text areas the same font
WITHOUT_CLASSIFICATION	//defaults.put("TextField.font",font);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Enable/Disable tooltips
WITHOUT_CLASSIFICATION	// we do this here instead of adding buffers to the bus.
WITHOUT_CLASSIFICATION	//{{{ getPluginJARs() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPlugin() method
WITHOUT_CLASSIFICATION	//{{{ Plugin management methods
WITHOUT_CLASSIFICATION	//{{{ getNotLoadedPluginJARs() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ _getLineManager() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPlugin(String, boolean) method
WITHOUT_CLASSIFICATION	//{{{ getPlugins() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addPluginJAR() method
WITHOUT_CLASSIFICATION	// backwards compatibility...
WITHOUT_CLASSIFICATION	//{{{ addPluginJARsFromDirectory() method
WITHOUT_CLASSIFICATION	// remove this when 4.1 plugin API is deprecated
WITHOUT_CLASSIFICATION	//{{{ removePluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ Action methods
WITHOUT_CLASSIFICATION	//{{{ getActionContext() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addActionSet() method
WITHOUT_CLASSIFICATION	//{{{ removeActionSet() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getAction() method
WITHOUT_CLASSIFICATION	//{{{ getBuiltInActionSet() method
WITHOUT_CLASSIFICATION	//{{{ getActionSets() method
WITHOUT_CLASSIFICATION	//{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getActions() method
WITHOUT_CLASSIFICATION	//{{{ getActionNames() method
WITHOUT_CLASSIFICATION	//{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	//{{{ Edit mode methods
WITHOUT_CLASSIFICATION	//{{{ reloadModes() method
WITHOUT_CLASSIFICATION	/* Try to guess the eventual size to avoid unnecessary		 * copying */
WITHOUT_CLASSIFICATION	//{{{ Load the global catalog
WITHOUT_CLASSIFICATION	//{{{ Load user catalog
WITHOUT_CLASSIFICATION	// create dummy catalog
WITHOUT_CLASSIFICATION	//{{{ getMode() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ getModes() method
WITHOUT_CLASSIFICATION	//{{{ Buffer creation methods
WITHOUT_CLASSIFICATION	//{{{ openFiles() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ openTemporary() method
WITHOUT_CLASSIFICATION	//{{{ commitTemporary() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Buffer constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// if loadAutosave is false, we loaded an // autosave file, so we set 'dirty' to true
WITHOUT_CLASSIFICATION	// note that we don't use setDirty(), // because a) that would send an unnecessary // message, b) it would also set the // AUTOSAVE_DIRTY flag, which will make // the autosave thread write out a // redundant autosave file
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ Renderer class
WITHOUT_CLASSIFICATION	//{{{ keyPressed() method
WITHOUT_CLASSIFICATION	/* int */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// send full range of events to avoid breaking plugins
WITHOUT_CLASSIFICATION	//{{{ newFile() method
WITHOUT_CLASSIFICATION	// don't want 'New File' to create a read only buffer // if current file is on SQL VFS or something
WITHOUT_CLASSIFICATION	// return the newly created 'untitled-1'
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Find the highest Untitled-n file
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Buffer management methods
WITHOUT_CLASSIFICATION	//{{{ closeBuffer() method
WITHOUT_CLASSIFICATION	// send some EditBus messages
WITHOUT_CLASSIFICATION	//EditBus.send(new BufferUpdate(Buffer.this, //	view,BufferUpdate.MARKERS_CHANGED));
WITHOUT_CLASSIFICATION	//{{{ keyTyped() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ insertFile() method
WITHOUT_CLASSIFICATION	// this returns false if initial sanity // checks (if the file is a directory, etc) // fail
WITHOUT_CLASSIFICATION	//{{{ checkFileStatus() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ autosave() method
WITHOUT_CLASSIFICATION	//{{{ saveAs() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	// files[] should have length 1, since the dialog type is // SAVE_DIALOG
WITHOUT_CLASSIFICATION	// Once save is complete, do a few other things
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	/* fall through */
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	// \t handled above
WITHOUT_CLASSIFICATION	/* eg, foo<C+b>, will insert foobar, */
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isFocusTraversable() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Getters/setter methods for various buffer meta-data
WITHOUT_CLASSIFICATION	//{{{ getLastModified() method
WITHOUT_CLASSIFICATION	//{{{ setLastModified() method
WITHOUT_CLASSIFICATION	//{{{ getVFS() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ _closeBuffer() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getSymlinkPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isClosed() method
WITHOUT_CLASSIFICATION	//{{{ getDirectory() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isLoaded() method
WITHOUT_CLASSIFICATION	//{{{ isPerformingIO() method
WITHOUT_CLASSIFICATION	//{{{ isNewFile() method
WITHOUT_CLASSIFICATION	//{{{ setNewFile() method
WITHOUT_CLASSIFICATION	//{{{ isUntitled() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// zero it here so that BufferTabs doesn't have any problems
WITHOUT_CLASSIFICATION	//{{{ saveAllBuffers() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ reloadAllBuffers() method
WITHOUT_CLASSIFICATION	// save caret info. Buffer.load() will load it.
WITHOUT_CLASSIFICATION	//{{{ _getBuffer() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getBuffers() method
WITHOUT_CLASSIFICATION	//{{{ getBufferCount() method
WITHOUT_CLASSIFICATION	//{{{ getFirstBuffer() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLastBuffer() method
WITHOUT_CLASSIFICATION	//{{{ checkBufferStatus() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isDirty() method
WITHOUT_CLASSIFICATION	//{{{ isReadOnly() method
WITHOUT_CLASSIFICATION	//{{{ isEditable() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setDirty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setReadOnly() method
WITHOUT_CLASSIFICATION	// fixes dirty flag not being reset on // save/insert/undo/redo/undo
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* fall through */
WITHOUT_CLASSIFICATION	//{{{ View methods
WITHOUT_CLASSIFICATION	//{{{ getInputHandler() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isTemporary() method
WITHOUT_CLASSIFICATION	//{{{ getIcon() method
WITHOUT_CLASSIFICATION	//{{{ Thread safety
WITHOUT_CLASSIFICATION	//{{{ readLock() method
WITHOUT_CLASSIFICATION	//{{{ readUnlock() method
WITHOUT_CLASSIFICATION	//{{{ writeLock() method
WITHOUT_CLASSIFICATION	//{{{ writeUnlock() method
WITHOUT_CLASSIFICATION	//{{{ Line offset methods
WITHOUT_CLASSIFICATION	//{{{ getLength() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	// no need to lock since this just returns a value and that's it
WITHOUT_CLASSIFICATION	//{{{ getLineCount() method
WITHOUT_CLASSIFICATION	//{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLineStartOffset() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLineLength() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ invalidateCachedScreenLineCounts() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Text getters and setters
WITHOUT_CLASSIFICATION	//{{{ getLineText() method
WITHOUT_CLASSIFICATION	//{{{ getLineText() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	/* otherwise it will be delivered later */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Undo
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ isTransactionInProgress() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ beginCompoundEdit() method
WITHOUT_CLASSIFICATION	//{{{ endCompoundEdit() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ insideCompoundEdit() method
WITHOUT_CLASSIFICATION	//{{{ Buffer events
WITHOUT_CLASSIFICATION	//{{{ addBufferChangeListener() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ removeBufferChangeListener() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBufferChangeListeners() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getIndentSize() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getTabSize() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Now try buffer.<property>
WITHOUT_CLASSIFICATION	//{{{ initProxy() method
WITHOUT_CLASSIFICATION	// For backwards compatibility
WITHOUT_CLASSIFICATION	// First try the buffer-local properties
WITHOUT_CLASSIFICATION	// Now try mode.<mode>.<property>
WITHOUT_CLASSIFICATION	// Try returning it as an integer first
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ newView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// set proxy host
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ newView() method
WITHOUT_CLASSIFICATION	//{{{ newView() method
WITHOUT_CLASSIFICATION	//{{{ newView() method
WITHOUT_CLASSIFICATION	// set proxy port
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// show tip of the day
WITHOUT_CLASSIFICATION	// set non proxy hosts list
WITHOUT_CLASSIFICATION	//{{{ closeView() method
WITHOUT_CLASSIFICATION	//{{{ getViews() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getViewCount() method
WITHOUT_CLASSIFICATION	//{{{ getFirstView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getLastView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getActiveView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// eg user just closed a view and didn't focus another
WITHOUT_CLASSIFICATION	//{{{ Miscellaneous methods
WITHOUT_CLASSIFICATION	//{{{ isMainThread() method
WITHOUT_CLASSIFICATION	//{{{ isBackgroundMode() method
WITHOUT_CLASSIFICATION	//{{{ showMemoryStatusDialog() method
WITHOUT_CLASSIFICATION	//{{{ getJEditHome() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getSettingsDirectory() method
WITHOUT_CLASSIFICATION	//{{{ getJARCacheDirectory() method
WITHOUT_CLASSIFICATION	//{{{ backupSettingsFile() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ exit() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ saveSettings() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Wait for pending I/O requests
WITHOUT_CLASSIFICATION	// Close dialog, view.close() call need a view...
WITHOUT_CLASSIFICATION	// Send EditorExitRequested
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Close all buffers
WITHOUT_CLASSIFICATION	// If we are running in background mode and // reallyExit was not specified, then return here.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Save settings in case user kills the backgrounded // jEdit process
WITHOUT_CLASSIFICATION	// Save view properties here
WITHOUT_CLASSIFICATION	// Stop autosave timer
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Send EditorExiting
WITHOUT_CLASSIFICATION	// Save settings
WITHOUT_CLASSIFICATION	// Close activity log stream
WITHOUT_CLASSIFICATION	// Byebye...
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ getEditServer() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addMode() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadMode() method
WITHOUT_CLASSIFICATION	/* package-private */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addPluginProps() method
WITHOUT_CLASSIFICATION	//{{{ removePluginProps() method
WITHOUT_CLASSIFICATION	//{{{ pluginError() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//{{{ setActiveView() method
WITHOUT_CLASSIFICATION	// buffer link list
WITHOUT_CLASSIFICATION	// makes openTemporary() thread-safe
WITHOUT_CLASSIFICATION	// view link list
WITHOUT_CLASSIFICATION	//{{{ usage() method
WITHOUT_CLASSIFICATION	//{{{ version() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ initMisc() method
WITHOUT_CLASSIFICATION	//{{{ makeServerScript() method
WITHOUT_CLASSIFICATION	// Add our protocols to java.net.URL's list
WITHOUT_CLASSIFICATION	/* Determine installation directory.		 * If the jedit.home property is set, use that.		 * Then, look for jedit.jar in the classpath.		 * If that fails, assume this is the web start version. */
WITHOUT_CLASSIFICATION	// Set the User-Agent string used by the java.net HTTP handler
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// check if web start
WITHOUT_CLASSIFICATION	// use user.dir as last resort
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	// Add an EditBus component that will reload edit modes and // macros if they are changed from within the editor
WITHOUT_CLASSIFICATION	//{{{ initSiteProperties() method
WITHOUT_CLASSIFICATION	//{{{ initSystemProperties() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// site properties are loaded as default properties, overwriting // jEdit's system properties
WITHOUT_CLASSIFICATION	//{{{ initResources() method
WITHOUT_CLASSIFICATION	//{{{ initPlugins() method
WITHOUT_CLASSIFICATION	//{{{ initUserProperties() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ initPLAF() method
WITHOUT_CLASSIFICATION	// give all Swing components our colors
WITHOUT_CLASSIFICATION	//defaults.put(prefix + ".inactiveForeground",foreground);
WITHOUT_CLASSIFICATION	//{{{ runStartupScripts() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// null not supported?
WITHOUT_CLASSIFICATION	//{{{ FirewallAuthenticator class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ finishStartup() method
WITHOUT_CLASSIFICATION	// Start I/O threads
WITHOUT_CLASSIFICATION	// Start edit server
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Report any plugin errors
WITHOUT_CLASSIFICATION	//{{{ showPluginErrorDialog() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// in one case not a single AWT class will // have been touched (splash screen off + // -nogui -nobackground switches on command // line)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addBufferToList() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Can't happen
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getNotLoadedPluginJARs() method
WITHOUT_CLASSIFICATION	//{{{ gotoMarker() method
WITHOUT_CLASSIFICATION	// Handle line number
WITHOUT_CLASSIFICATION	// Handle marker
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// default value
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Sort buffer list
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ removeViewFromList() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// fixes the hang that can occur if we 'save as' to a new // filename which requires re-sorting
WITHOUT_CLASSIFICATION	//{{{ addViewToList() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ initKeyBindings() method
WITHOUT_CLASSIFICATION	//{{{ getProperties() method
WITHOUT_CLASSIFICATION	//{{{ closeView() method
WITHOUT_CLASSIFICATION	/* exit does editor event & save */
WITHOUT_CLASSIFICATION	//{{{ loadModeCatalog() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadSystemProps() method
WITHOUT_CLASSIFICATION	//{{{ loadSiteProps() method
WITHOUT_CLASSIFICATION	//{{{ loadUserProps() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ saveUserProps() method
WITHOUT_CLASSIFICATION	//{{{ loadPluginProps() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//{{{ setProperty() method
WITHOUT_CLASSIFICATION	//{{{ addPluginProps() method
WITHOUT_CLASSIFICATION	//{{{ removePluginProps() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setTemporaryProperty() method
WITHOUT_CLASSIFICATION	//{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	//{{{ resetProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getDefaultProperty() method
WITHOUT_CLASSIFICATION	//{{{ loadProps() method
WITHOUT_CLASSIFICATION	//{{{ Mode constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	//{{{ setTokenMarker() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getProperty() method
WITHOUT_CLASSIFICATION	//{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setProperty() method
WITHOUT_CLASSIFICATION	//{{{ unsetProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ accept() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ evalSelection() method
WITHOUT_CLASSIFICATION	//{{{ showEvaluateDialog() method
WITHOUT_CLASSIFICATION	//{{{ showEvaluateLinesDialog() method
WITHOUT_CLASSIFICATION	//{{{ _runScript() method
WITHOUT_CLASSIFICATION	//{{{ _runScript() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBooleanProperty() method
WITHOUT_CLASSIFICATION	// user cancelled???
WITHOUT_CLASSIFICATION	//{{{ getStringProperty() method
WITHOUT_CLASSIFICATION	//{{{ setStringProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setBooleanProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getIntegerProperty() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ setIntegerProperty() method
WITHOUT_CLASSIFICATION	// will be cached from now on...
WITHOUT_CLASSIFICATION	//{{{ getRegexpProperty() method
WITHOUT_CLASSIFICATION	//{{{ getRuleSetAtOffset() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//{{{ eval() method
WITHOUT_CLASSIFICATION	//{{{ _eval() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//{{{ cacheBlock() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ eval() method
WITHOUT_CLASSIFICATION	//{{{ eval() method
WITHOUT_CLASSIFICATION	// never called
WITHOUT_CLASSIFICATION	//{{{ runCachedBlock() method
WITHOUT_CLASSIFICATION	//{{{ isScriptRunning() method
WITHOUT_CLASSIFICATION	//{{{ getNameSpace() method
WITHOUT_CLASSIFICATION	//{{{ Deprecated functions
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//{{{ resetClassManager() method
WITHOUT_CLASSIFICATION	//{{{ setupDefaultVariables() method
WITHOUT_CLASSIFICATION	//{{{ resetDefaultVariables() method
WITHOUT_CLASSIFICATION	//{{{ unwrapException() method
WITHOUT_CLASSIFICATION	//{{{ handleException() method
WITHOUT_CLASSIFICATION	//{{{ createInterpreter() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// garbage collected
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// clean up old listeners
WITHOUT_CLASSIFICATION	//System.err.println("cleaned up weak ref: "+deadref);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getKeywordMapAtOffset() method
WITHOUT_CLASSIFICATION	//{{{ getContextSensitiveProperty() method
WITHOUT_CLASSIFICATION	// remove duplicates
WITHOUT_CLASSIFICATION	// remove duplicates
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Used to store property values
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// clean up old listeners
WITHOUT_CLASSIFICATION	//System.err.println("cleaned up weak ref: "+deadref);
WITHOUT_CLASSIFICATION	// clear the static caches in BshClassManager
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// garbage collected
WITHOUT_CLASSIFICATION	//{{{ User interface
WITHOUT_CLASSIFICATION	//{{{ Groups
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Common layers
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Layers for top group
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Layers for bottom group
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getDockableWindowManager() method
WITHOUT_CLASSIFICATION	//{{{ getToolBar() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	//{{{ showWaitCursor() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// still needed even though glass pane // has a wait cursor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ hideWaitCursor() method
WITHOUT_CLASSIFICATION	//{{{ getStatus() method
WITHOUT_CLASSIFICATION	//{{{ getActionBar() method
WITHOUT_CLASSIFICATION	//{{{ getSearchBar() method
WITHOUT_CLASSIFICATION	//{{{ quickIncrementalSearch() method
WITHOUT_CLASSIFICATION	//{{{ quickHyperSearch() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getInputHandler() method
WITHOUT_CLASSIFICATION	//{{{ Input handling
WITHOUT_CLASSIFICATION	//{{{ getKeyEventInterceptor() method
WITHOUT_CLASSIFICATION	//{{{ setKeyEventInterceptor() method
WITHOUT_CLASSIFICATION	//{{{ setInputHandler() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getMacroRecorder() method
WITHOUT_CLASSIFICATION	//{{{ setMacroRecorder() method
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) FormalParameters */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Gather all of the methods of class and parents
WITHOUT_CLASSIFICATION	//{{{ toggleWordWrap() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* boolean */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Buffers, edit panes, split panes
WITHOUT_CLASSIFICATION	//{{{ splitHorizontally() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*	Type, name and expression syntax follows.*/
WITHOUT_CLASSIFICATION	//{{{ splitVertically() method
WITHOUT_CLASSIFICATION	//{{{ split() method
WITHOUT_CLASSIFICATION	//{{{ unsplit() method
WITHOUT_CLASSIFICATION	//{{{ unsplitCurrent() method
WITHOUT_CLASSIFICATION	// find first split pane parenting current edit pane
WITHOUT_CLASSIFICATION	// Succeeded.  Cache the resolved method.
WITHOUT_CLASSIFICATION	// Is the method public or are we in accessibility mode?
WITHOUT_CLASSIFICATION	// Yes, it is.
WITHOUT_CLASSIFICATION	// Found at least one matching method but couldn't use
WITHOUT_CLASSIFICATION	// ignore and move on
WITHOUT_CLASSIFICATION	// No, it is not.
WITHOUT_CLASSIFICATION	// Is this a class?
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Type */
WITHOUT_CLASSIFICATION	/*ignore*/
WITHOUT_CLASSIFICATION	/* 			Find an appropriate constructor.			use declared here to see package and private as well			(there are no inherited constructors to worry about) 		*/
WITHOUT_CLASSIFICATION	// get rid of any edit pane that is a child // of the current edit pane's parent splitter
WITHOUT_CLASSIFICATION	//{{{ nextTextArea() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Pull out the method signatures with matching names
WITHOUT_CLASSIFICATION	// method matches name 
WITHOUT_CLASSIFICATION	/*        This method should parallel findMostSpecificMethod()    */
WITHOUT_CLASSIFICATION	//{{{ prevTextArea() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getSplitPane() method
WITHOUT_CLASSIFICATION	//{{{ setBuffer() method
WITHOUT_CLASSIFICATION	//{{{ goToBuffer() method
WITHOUT_CLASSIFICATION	/* ignore zero-height splits, etc */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getTextArea() method
WITHOUT_CLASSIFICATION	//{{{ getEditPane() method
WITHOUT_CLASSIFICATION	//{{{ getEditPanes() method
WITHOUT_CLASSIFICATION	//{{{ getViewConfig() method
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) FormalParameter */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* fall through */
WITHOUT_CLASSIFICATION	/*bcm*/
WITHOUT_CLASSIFICATION	/*bcm*/
WITHOUT_CLASSIFICATION	/*shouldn't happen*/
WITHOUT_CLASSIFICATION	// why so cute?
WITHOUT_CLASSIFICATION	// add interpereter and namespace to args list
WITHOUT_CLASSIFICATION	/*@bgen(jjtree)*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree)*/
WITHOUT_CLASSIFICATION	/*this originally handled postfix array dimensions...void VariableDeclaratorId() #VariableDeclaratorId :{ Token t; }{  t=<IDENTIFIER> { jjtThis.name = t.image; }  ( "[" "]" { jjtThis.addUndefinedDimension(); } )*}*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*	Gather modifiers for a class, method, or field.	I lookahead is true then we are being called as part of a lookahead and we	should not enforce any rules.  Otherwise we validate based on context	(field, method, class)*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ClassDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) MethodDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) PackageDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ImportDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) VariableDeclarator */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ReturnType */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) PrimitiveType */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) AmbiguousName */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Assignment */
WITHOUT_CLASSIFICATION	// This production is to determine lookahead only.
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) CastExpression */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) PrimaryExpression */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) PrimarySuffix */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Literal */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// leave these on the stack for Arguments() to handle
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) AllocationExpression */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ArrayDimensions */
WITHOUT_CLASSIFICATION	/* * Statement syntax follows. */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Block */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) #FormalComment( retainComments) */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) SwitchStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) SwitchLabel */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) WhileStatement */
WITHOUT_CLASSIFICATION	/*	Do statement is just a While statement with a special hook to execute	at least once.*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ForStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) EnhancedForStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) TypedVariableDeclaration */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) StatementExpressionList */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ReturnStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ThrowStatement */
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) TryStatement */
WITHOUT_CLASSIFICATION	// All core AWT listeners
WITHOUT_CLASSIFICATION	// All listeners in javax.swing.event as of Swing 1.1
WITHOUT_CLASSIFICATION	// handleEvent gets all events
WITHOUT_CLASSIFICATION	/*squeltch*/
WITHOUT_CLASSIFICATION	// send to specific event handler
WITHOUT_CLASSIFICATION	// Listener interfaces
WITHOUT_CLASSIFICATION	// Listener interfaces
WITHOUT_CLASSIFICATION	// used for the delayed evaluation...
WITHOUT_CLASSIFICATION	// Token was accepted
WITHOUT_CLASSIFICATION	/*paramTypes*/
WITHOUT_CLASSIFICATION	/*returnType*/
WITHOUT_CLASSIFICATION	// BSHType will cache the type for us
WITHOUT_CLASSIFICATION	// Hashtable implements Map
WITHOUT_CLASSIFICATION	// BSHFormalParameters will cache the type for us
WITHOUT_CLASSIFICATION	// Hashtable implements Map
WITHOUT_CLASSIFICATION	// Arrays incomplete... need to use the array setter
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Hypothetical question: can you have a RE that matches 1 times, // 3 times, 5 times, but not 2 times or 4 times?  Does having // the subexpression back-reference operator allow that?
WITHOUT_CLASSIFICATION	//{{{ isClosed() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Possible positions for the next repeat to match at
WITHOUT_CLASSIFICATION	// Declare variables used in loop
WITHOUT_CLASSIFICATION	// try next repeat at all possible positions
WITHOUT_CLASSIFICATION	// add all items in current to doables array
WITHOUT_CLASSIFICATION	// Find new doablesLast
WITHOUT_CLASSIFICATION	// if none of the possibilities worked out, break out of do/while
WITHOUT_CLASSIFICATION	// reassign where the next repeat can match
WITHOUT_CLASSIFICATION	// increment how many repeats we've successfully found
WITHOUT_CLASSIFICATION	// If there aren't enough repeats, then fail
WITHOUT_CLASSIFICATION	// We're greedy, but ease off until a true match is found 
WITHOUT_CLASSIFICATION	// else did not match rest of the tokens, try again on smaller sample
WITHOUT_CLASSIFICATION	// does this get all?
WITHOUT_CLASSIFICATION	// If we fall out, no matches.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ isPlainView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// clone() separates a single match from the chain
WITHOUT_CLASSIFICATION	// chain results to doneIndex
WITHOUT_CLASSIFICATION	// Find new doneIndexLast
WITHOUT_CLASSIFICATION	// matches after a newline
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// position in REToken.newline
WITHOUT_CLASSIFICATION	// Don't match at all if REG_NOTBOL is set.
WITHOUT_CLASSIFICATION	// value for end
WITHOUT_CLASSIFICATION	// closer to end
WITHOUT_CLASSIFICATION	// Allocate more space in the buffer.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// value for end
WITHOUT_CLASSIFICATION	// Big enough for a \r\n pair // lookBehind[0] = most recent // lookBehind[1] = second most recent
WITHOUT_CLASSIFICATION	// this.index is index of next pos relative to charAt(0)
WITHOUT_CLASSIFICATION	// set flag that next should fail next time?
WITHOUT_CLASSIFICATION	// move read position [index] clicks from 'charAt(0)'
WITHOUT_CLASSIFICATION	// If we have buffered replace data, use it.
WITHOUT_CLASSIFICATION	// This is prone to infinite loops if replace string turns out empty.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// closer to end
WITHOUT_CLASSIFICATION	// Allocate more space in the buffer.
WITHOUT_CLASSIFICATION	// this.index is index of next pos relative to charAt(0)
WITHOUT_CLASSIFICATION	// set flag that next should fail next time?
WITHOUT_CLASSIFICATION	// move read position [index] clicks from 'charAt(0)'
WITHOUT_CLASSIFICATION	// convert the byte read into a char
WITHOUT_CLASSIFICATION	// Error conditions from GNU regcomp(3) manual
WITHOUT_CLASSIFICATION	// Package scope constructor is used by RE.getMatchEnumeration()
WITHOUT_CLASSIFICATION	//else
WITHOUT_CLASSIFICATION	//else
WITHOUT_CLASSIFICATION	// no match
WITHOUT_CLASSIFICATION	// doesn't happen
WITHOUT_CLASSIFICATION	// need to deep clone?
WITHOUT_CLASSIFICATION	// cut off alternates
WITHOUT_CLASSIFICATION	// cut off alternates
WITHOUT_CLASSIFICATION	// Anchor position refers to the index into the source input // at which the matching operation began. // This is also useful for the ANCHORINDEX option.
WITHOUT_CLASSIFICATION	// Offset in source text where match was tried.  This is zero-based; // the actual position in the source text is given by (offset + anchor).
WITHOUT_CLASSIFICATION	// Package scope; used by RE. // used while matching to mark current match position in input // start positions (relative to offset) for each (sub)exp. // end positions for the same // other possibility (to avoid having to use arrays)
WITHOUT_CLASSIFICATION	// position in newline
WITHOUT_CLASSIFICATION	// assume for now that next can only be one character
WITHOUT_CLASSIFICATION	// Overrides REToken.chain() to optimize for strings
WITHOUT_CLASSIFICATION	// Note that there is some debate over whether '_' should be included
WITHOUT_CLASSIFICATION	// The RE constructor uses this to look up the constant for a string
WITHOUT_CLASSIFICATION	// Array indices correspond to constants defined above.
WITHOUT_CLASSIFICATION	// This is the number of subexpressions in this regular expression, // with a minimum value of zero.  Returned by getNumSubs()
WITHOUT_CLASSIFICATION	// The localized strings are kept in a separate file
WITHOUT_CLASSIFICATION	// This String will be returned by getVersion()
WITHOUT_CLASSIFICATION	// Retrieves a message from the ResourceBundle
WITHOUT_CLASSIFICATION	// internal constructor used for alternation
WITHOUT_CLASSIFICATION	// Subexpression index of this token.
WITHOUT_CLASSIFICATION	// For use by subclasses
WITHOUT_CLASSIFICATION	// The meat of construction
WITHOUT_CLASSIFICATION	// Number of subexpressions in this token.
WITHOUT_CLASSIFICATION	// linked list of tokens (sort of -- some closed loops can exist)
WITHOUT_CLASSIFICATION	// Precalculate these so we don't pay for the math every time we // need to access them.
WITHOUT_CLASSIFICATION	// This is the case of {x,}
WITHOUT_CLASSIFICATION	// This is used for {x,y} calculations
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Buffer a token so we can create a TokenRepeated, etc.
WITHOUT_CLASSIFICATION	// read the next character unit (including backslash escapes)
WITHOUT_CLASSIFICATION	// make everything up to here be a branch. create vector if nec.
WITHOUT_CLASSIFICATION	// LIST OPERATOR: //  [...] | [^...]
WITHOUT_CLASSIFICATION	// Check for initial caret, negation
WITHOUT_CLASSIFICATION	// Check for leading right bracket literal
WITHOUT_CLASSIFICATION	// Create a new RETokenOneOf
WITHOUT_CLASSIFICATION	//{{{ setWaitSocket() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// find end of subexpression
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// not a comment // subexpression
WITHOUT_CLASSIFICATION	//{{{ getNext() method
WITHOUT_CLASSIFICATION	// START OF LINE OPERATOR //  ^
WITHOUT_CLASSIFICATION	// END OF LINE OPERATOR //  $
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Read string of digits
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// BACKREFERENCE OPERATOR //  \1 \2 ... \9 // not available if RE_NO_BK_REFS is set
WITHOUT_CLASSIFICATION	// Check for stingy matching on RETokenRepeated
WITHOUT_CLASSIFICATION	// START OF STRING OPERATOR //  \A if RE_STRING_ANCHORS is set
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// WORD END OPERATOR  //  \> if ????
WITHOUT_CLASSIFICATION	// NON-WORD BREAK OPERATOR // \B if ????
WITHOUT_CLASSIFICATION	// NON-DIGIT OPERATOR //  \D
WITHOUT_CLASSIFICATION	// NEWLINE ESCAPE //  \n
WITHOUT_CLASSIFICATION	// RETURN ESCAPE //  \r
WITHOUT_CLASSIFICATION	// WHITESPACE OPERATOR //  \s if RE_CHAR_CLASS_ESCAPES is set
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// ALPHANUMERIC OPERATOR //  \w
WITHOUT_CLASSIFICATION	// NON-ALPHANUMERIC OPERATOR //  \W
WITHOUT_CLASSIFICATION	// END OF STRING OPERATOR //  \Z
WITHOUT_CLASSIFICATION	// not a special character
WITHOUT_CLASSIFICATION	// end while
WITHOUT_CLASSIFICATION	// Add final buffered token and an EndSub marker
WITHOUT_CLASSIFICATION	// compact the Vector
WITHOUT_CLASSIFICATION	// Trivial case
WITHOUT_CLASSIFICATION	// Overrides REToken.setUncle
WITHOUT_CLASSIFICATION	// to deal with empty subexpressions
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// handle pathological case of zero-length match
WITHOUT_CLASSIFICATION	/* Implements abstract method REToken.match() */
WITHOUT_CLASSIFICATION	// Note the start of this subexpression
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Read string of digits
WITHOUT_CLASSIFICATION	// Find longest match of them all to observe leftmost longest
WITHOUT_CLASSIFICATION	// Append character to buffer if needed
WITHOUT_CLASSIFICATION	//{{{ getPrev() method
WITHOUT_CLASSIFICATION	/* Helper function for constructor */
WITHOUT_CLASSIFICATION	// didn't match up
WITHOUT_CLASSIFICATION	// Precondition: input[index-1] == '{', minMax != null
WITHOUT_CLASSIFICATION	// This constructor is used for convenience when we know the set beforehand, // e.g. \d --> new RETokenOneOf("0123456789",false, ..) //      \D --> new RETokenOneOf("0123456789",true, ..)
WITHOUT_CLASSIFICATION	// We know min and max now, and they are valid.
WITHOUT_CLASSIFICATION	// return the index following the '}'
WITHOUT_CLASSIFICATION	// Cast input appropriately or throw exception
WITHOUT_CLASSIFICATION	// do we lose index info?
WITHOUT_CLASSIFICATION	// match was successful
WITHOUT_CLASSIFICATION	// Add tryMatch to list of possibilities.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	// set contents of mymatch equal to newMatch
WITHOUT_CLASSIFICATION	// try each one that matched
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ View constructor
WITHOUT_CLASSIFICATION	// index+1 works for [^abc] lists, not for generic lookahead (--> index)
WITHOUT_CLASSIFICATION	// If we have buffered replace data, use it.
WITHOUT_CLASSIFICATION	// check if input is at a valid position
WITHOUT_CLASSIFICATION	// handled by RE
WITHOUT_CLASSIFICATION	// true for the constant defined syntaxes
WITHOUT_CLASSIFICATION	// Values for constants are bit indexes
WITHOUT_CLASSIFICATION	// impl.
WITHOUT_CLASSIFICATION	// single line mode (/s)
WITHOUT_CLASSIFICATION	// Define syntaxes
WITHOUT_CLASSIFICATION	/* P1003.2/D11.2, section 4.20.7.1, lines 5078ff.  */
WITHOUT_CLASSIFICATION	/* Differs from RE_SYNTAX_POSIX_EXTENDED in that RE_CONTEXT_INVALID_OPS	 replaces RE_CONTEXT_INDEP_OPS and RE_NO_BK_REFS is added. */
WITHOUT_CLASSIFICATION	/* There is no official Perl spec, but here's a "best guess" */
WITHOUT_CLASSIFICATION	// except for '{', apparently
WITHOUT_CLASSIFICATION	// \d,\D,\w,\W,\s,\S
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// UNDONE
WITHOUT_CLASSIFICATION	// XXX
WITHOUT_CLASSIFICATION	// Unexpected EOF!
WITHOUT_CLASSIFICATION	// Per Patrick Beard:
WITHOUT_CLASSIFICATION	/*     * always: in the range 0 .. 9.     * The current block size is 100000 * this number.     */
WITHOUT_CLASSIFICATION	/*     * index of the last char in the block, so     * the block size == last + 1.     */
WITHOUT_CLASSIFICATION	/*     * index in zptr[] of original string after sorting.     */
WITHOUT_CLASSIFICATION	//throw new CCoruptionError();
WITHOUT_CLASSIFICATION	// throw new IOException("Invalid block size");
WITHOUT_CLASSIFICATION	/*         * not a char and not EOF         */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*         * A bad CRC is considered a fatal error.         */
WITHOUT_CLASSIFICATION	//        currBlockNo++;
WITHOUT_CLASSIFICATION	/*         * Now the selectors         */
WITHOUT_CLASSIFICATION	/*         * Now the coding tables         */
WITHOUT_CLASSIFICATION	/*         * Create the Huffman decoding tables         */
WITHOUT_CLASSIFICATION	/*         * Receive the mapping table         */
WITHOUT_CLASSIFICATION	/* XXX */
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	/*     * If you are ever unlucky/improbable enough     * to get a stack overflow whilst sorting,     * increase the following constant and try     * again.  In practice I have never seen the     * stack go above 27 elems, so the following     * limit seems very generous.     */
WITHOUT_CLASSIFICATION	/*     * Knuth's increments seem to work better     * than Incerpi-Sedgewick here.  Possibly     * because the number of elems to sort is     * usually small, typically <= 20.     */
WITHOUT_CLASSIFICATION	/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */
WITHOUT_CLASSIFICATION	//        ch = 0;
WITHOUT_CLASSIFICATION	/*     * index in zptr[] of original string after sorting.     */
WITHOUT_CLASSIFICATION	/*         * The back end needs a place to store the MTF values         * whilst it calculates the coding tables.  We could         * put them in the zptr array.  However, these values         * will fit in a short, so we overlay szptr at the         * start of zptr, in the hope of reducing the number         * of cache misses induced by the multiple traversals         * of the MTF values when calculating coding tables.         * Seems to improve compression speed by about 1%.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	//throw new CError();
WITHOUT_CLASSIFICATION	//    szptr = zptr;
WITHOUT_CLASSIFICATION	//        blockNo++;
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	/*         * sort the block and establish posn of original string         */
WITHOUT_CLASSIFICATION	/*         * Now the block's CRC, so it is in a known place.         */
WITHOUT_CLASSIFICATION	/*         * Now a single bit indicating randomisation.         */
WITHOUT_CLASSIFICATION	/*         * Finally, block's contents proper.         */
WITHOUT_CLASSIFICATION	/*         * Now another magic 48-bit number, 0x177245385090, to         * indicate the end of the last block.  (sqrt(pi), if         * you want to know.  I did want to use e, but it contains         * too much repetition -- 27 18 28 18 28 46 -- for me         * to feel statistically comfortable.  Call me paranoid.)         */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*         * In the various block-sized structures, live data runs         * from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,         * set up the overshoot area for block.         */
WITHOUT_CLASSIFICATION	/*             * Use simpleSort(), since the full sorting mechanism             * has quite a large constant overhead.             */
WITHOUT_CLASSIFICATION	/*             * Now ftab contains the first loc of every small bucket.             * Calculate the running order, from smallest to largest             * big bucket.             */
WITHOUT_CLASSIFICATION	/*             * The main sorting loop.             */
WITHOUT_CLASSIFICATION	/*                 * Process big buckets, starting with the least full.                 */
WITHOUT_CLASSIFICATION	//{{{ close() method
WITHOUT_CLASSIFICATION	// handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	/*         * Decide how many coding tables to use         */
WITHOUT_CLASSIFICATION	/*             * Generate an initial set of coding tables             */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*         * Iterate up to N_ITERS times to improve the tables.         */
WITHOUT_CLASSIFICATION	/*                 * Set group start & end marks.                 */
WITHOUT_CLASSIFICATION	/*                 * Calculate the cost of this group as coded                 * by each of the coding tables.                 */
WITHOUT_CLASSIFICATION	// run jEditLauncher installation
WITHOUT_CLASSIFICATION	/*                 * Increment the symbol frequencies for the selected table.                 */
WITHOUT_CLASSIFICATION	/*             * Recompute the tables based on the accumulated frequencies.             */
WITHOUT_CLASSIFICATION	/*             * Compute MTF values for the selectors.             */
WITHOUT_CLASSIFICATION	/*         * Assign actual codes for the tables.         */
WITHOUT_CLASSIFICATION	/*             * Transmit the mapping table.             */
WITHOUT_CLASSIFICATION	/*         * Now the selectors.         */
WITHOUT_CLASSIFICATION	/*                     * 11                     */
WITHOUT_CLASSIFICATION	/*         * And finally, the block data proper         */
WITHOUT_CLASSIFICATION	/*                 * copy 1                 */
WITHOUT_CLASSIFICATION	/*                 * copy 2                 */
WITHOUT_CLASSIFICATION	// ( (this.assemLen + numToWrite ) < this.recordBuf.length )
WITHOUT_CLASSIFICATION	// // When we get here we have EITHER: //   o An empty "assemble" buffer. //   o No bytes to write (numToWrite == 0) //
WITHOUT_CLASSIFICATION	//in.close();
WITHOUT_CLASSIFICATION	// Pass 1: compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	// Pass 2: redistribute free space
WITHOUT_CLASSIFICATION	// synchronized
WITHOUT_CLASSIFICATION	// on by default
WITHOUT_CLASSIFICATION	// create app start script
WITHOUT_CLASSIFICATION	// Delete existing copy
WITHOUT_CLASSIFICATION	// Write simple script
WITHOUT_CLASSIFICATION	// Make it executable
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	/* XXX */
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	/* new JEditLauncherOSTask(installer) */
WITHOUT_CLASSIFICATION	// install user-selected packages
WITHOUT_CLASSIFICATION	// do operating system specific stuff (creating startup // scripts, installing man pages, etc.)
WITHOUT_CLASSIFICATION	//System.err.println(fileName);
WITHOUT_CLASSIFICATION	// label == null means no configurable options
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ getPosition() method
WITHOUT_CLASSIFICATION	//{{{ Marker constructor
WITHOUT_CLASSIFICATION	//{{{ setShortcut() method
WITHOUT_CLASSIFICATION	//{{{ createPosition() method
WITHOUT_CLASSIFICATION	//{{{ removePosition() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// forget the cached Position instance
WITHOUT_CLASSIFICATION	//{{{ setPosition() method
WITHOUT_CLASSIFICATION	//{{{ isPerspectiveDirty() method
WITHOUT_CLASSIFICATION	//{{{ setPerspectiveDirty() method
WITHOUT_CLASSIFICATION	//{{{ loadPerspective() method
WITHOUT_CLASSIFICATION	//{{{ savePerspective() method
WITHOUT_CLASSIFICATION	// backgrounded
WITHOUT_CLASSIFICATION	//{{{ input() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ PerspectiveHandler class
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ showRunScriptDialog() method
WITHOUT_CLASSIFICATION	//{{{ message() method
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	// save dockable window geometry, and close 'em
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ input() method
WITHOUT_CLASSIFICATION	// only executed if above loop falls // through, ie there is no handler for // this file
WITHOUT_CLASSIFICATION	//{{{ confirm() method
WITHOUT_CLASSIFICATION	//{{{ confirm() method
WITHOUT_CLASSIFICATION	//{{{ loadMacros() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ registerHandler() method
WITHOUT_CLASSIFICATION	//{{{ getHandlers() method
WITHOUT_CLASSIFICATION	//{{{ getHandlerForFileName() method
WITHOUT_CLASSIFICATION	//{{{ getHandler() method
WITHOUT_CLASSIFICATION	//{{{ getMacroHierarchy() method
WITHOUT_CLASSIFICATION	//{{{ getMacroActionSet() method
WITHOUT_CLASSIFICATION	//{{{ getMacro() method
WITHOUT_CLASSIFICATION	//{{{ Macro class
WITHOUT_CLASSIFICATION	//{{{ Macro constructor
WITHOUT_CLASSIFICATION	//{{{ getPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getHandler() method
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ macroNameToLabel() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ loadMacros() method
WITHOUT_CLASSIFICATION	//{{{ recordTemporaryMacro() method
WITHOUT_CLASSIFICATION	//{{{ recordMacro() method
WITHOUT_CLASSIFICATION	//{{{ stopRecording() method
WITHOUT_CLASSIFICATION	//{{{ runTemporaryMacro() method
WITHOUT_CLASSIFICATION	/* I already wrote a comment expaining this in			 * Macro.invoke(). */
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ recordMacro() method
WITHOUT_CLASSIFICATION	/* do nothing! */
WITHOUT_CLASSIFICATION	//{{{ try to merge with an existing menu first
WITHOUT_CLASSIFICATION	//{{{ addMacro() method
WITHOUT_CLASSIFICATION	// ignore if already added. // see comment in loadMacros().
WITHOUT_CLASSIFICATION	// setting the message to 'null' causes the status bar to check // if a recording is in progress
WITHOUT_CLASSIFICATION	//{{{ Recorder class
WITHOUT_CLASSIFICATION	//{{{ Recorder constructor
WITHOUT_CLASSIFICATION	//{{{ record() method
WITHOUT_CLASSIFICATION	//{{{ record() method
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ recordInput() method
WITHOUT_CLASSIFICATION	//{{{ recordInput() method
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ accept() method
WITHOUT_CLASSIFICATION	//{{{ createMacro() method
WITHOUT_CLASSIFICATION	//{{{ Handler class
WITHOUT_CLASSIFICATION	// setting the message to 'null' causes the status bar to // check if a recording is in progress
WITHOUT_CLASSIFICATION	//{{{ flushInput() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getLabel() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ Handler constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ createMacro() method
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ BeanShellHandler class
WITHOUT_CLASSIFICATION	//{{{ BeanShellHandler constructor
WITHOUT_CLASSIFICATION	// Remove '.bsh'
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Some predefined icons
WITHOUT_CLASSIFICATION	//{{{ Icon methods
WITHOUT_CLASSIFICATION	//{{{ setIconPath() method
WITHOUT_CLASSIFICATION	//{{{ loadIcon() method
WITHOUT_CLASSIFICATION	// check if there is a cached version first
WITHOUT_CLASSIFICATION	// get the icon
WITHOUT_CLASSIFICATION	//{{{ getEditorIcon() method
WITHOUT_CLASSIFICATION	//{{{ getPluginIcon() method
WITHOUT_CLASSIFICATION	//{{{ Menus, tool bars
WITHOUT_CLASSIFICATION	//{{{ loadMenuBar() method
WITHOUT_CLASSIFICATION	//{{{ loadMenuBar() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ message() method
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	//{{{ input() method
WITHOUT_CLASSIFICATION	//{{{ input() method
WITHOUT_CLASSIFICATION	//{{{ confirm() method
WITHOUT_CLASSIFICATION	//{{{ inputProperty() method
WITHOUT_CLASSIFICATION	//{{{ loadMenu() method
WITHOUT_CLASSIFICATION	//{{{ loadMenu() method
WITHOUT_CLASSIFICATION	//{{{ loadToolBar() method
WITHOUT_CLASSIFICATION	//{{{ loadPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ loadPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ loadToolBar() method
WITHOUT_CLASSIFICATION	//{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	//{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	//{{{ loadMenuItem() method
WITHOUT_CLASSIFICATION	//{{{ inputProperty() method
WITHOUT_CLASSIFICATION	//{{{ loadToolButton() method
WITHOUT_CLASSIFICATION	//{{{ loadToolButton() method
WITHOUT_CLASSIFICATION	//{{{ prettifyMenuLabel() method
WITHOUT_CLASSIFICATION	//{{{ showVFSFileDialog() method
WITHOUT_CLASSIFICATION	//{{{ Canned dialog boxes
WITHOUT_CLASSIFICATION	//{{{ Colors and styles
WITHOUT_CLASSIFICATION	//{{{ parseColor() method
WITHOUT_CLASSIFICATION	//{{{ parseColor() method
WITHOUT_CLASSIFICATION	//{{{ parseStyle() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ parseStyle() method
WITHOUT_CLASSIFICATION	//{{{ loadStyles() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ loadStyles() method
WITHOUT_CLASSIFICATION	// start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	//{{{ Loading, saving window geometry
WITHOUT_CLASSIFICATION	//{{{ loadGeometry() method
WITHOUT_CLASSIFICATION	//{{{ adjustForScreenBounds() method
WITHOUT_CLASSIFICATION	// Make sure the window is displayed in visible region
WITHOUT_CLASSIFICATION	//{{{ ComponentHandler class
WITHOUT_CLASSIFICATION	//{{{ componentMoved() method
WITHOUT_CLASSIFICATION	//{{{ componentResized() method
WITHOUT_CLASSIFICATION	//{{{ WindowHandler class
WITHOUT_CLASSIFICATION	//{{{ windowOpened() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ saveGeometry() method
WITHOUT_CLASSIFICATION	//{{{ getExtendedState() method
WITHOUT_CLASSIFICATION	//{{{ setExtendedState() method
WITHOUT_CLASSIFICATION	//{{{ centerOnScreen() method
WITHOUT_CLASSIFICATION	//{{{ hideSplashScreen() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ createMultilineLabel() method
WITHOUT_CLASSIFICATION	//{{{ requestFocus() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ isMiddleButton() method
WITHOUT_CLASSIFICATION	//{{{ isPopupTrigger() method
WITHOUT_CLASSIFICATION	//{{{ isAncestorOf() method
WITHOUT_CLASSIFICATION	//System.err.println("x overflow");
WITHOUT_CLASSIFICATION	//{{{ isRightButton() method
WITHOUT_CLASSIFICATION	//{{{ getComponentParent() method
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ advanceSplashProgress() method
WITHOUT_CLASSIFICATION	//{{{ getParentDialog() method
WITHOUT_CLASSIFICATION	//{{{ showSplashScreen() method
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ AbstractOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	// Only show class decs in CLASSES
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getComponent() method
WITHOUT_CLASSIFICATION	// final in 4.2
WITHOUT_CLASSIFICATION	// final in 4.2
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// ALL
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ addSeparator() method
WITHOUT_CLASSIFICATION	//cons.insets = new Insets(1,0,1,0);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ addSeparator() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getEntry() method
WITHOUT_CLASSIFICATION	//{{{ setEntry() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getHistory() method
WITHOUT_CLASSIFICATION	//{{{ getBufferHistory() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,BufferHistory.class,fnf);
WITHOUT_CLASSIFICATION	/* to avoid data loss, only do this if the above			 * completed successfully */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ addEntry() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*				Try to squeltch the native code stack trace if the exception				was caused by a reflective call back into the bsh interpreter				(e.g. eval() or source()			*/
WITHOUT_CLASSIFICATION	// classExists caches info for us
WITHOUT_CLASSIFICATION	// classExists caches info for us
WITHOUT_CLASSIFICATION	// classExists caches the tests for us
WITHOUT_CLASSIFICATION	/*					Note: do *not* change this to 					BshClassManager plainClassForName() or equivalent.					This class must not touch any other bsh classes.				*/
WITHOUT_CLASSIFICATION	/*			Child is array initializer.  Evaluate it and fill in the 			dimensions it returns.  Initialized arrays are always fully defined			(no undefined dimensions to worry about).  			The syntax uses the undefinedDimension count.			e.g. int [][] { 1, 2 };		*/
WITHOUT_CLASSIFICATION	// fill in definedDimensions [] lengths
WITHOUT_CLASSIFICATION	// Evaluate the defined dimensions of the array
WITHOUT_CLASSIFICATION	// unsafe caching of types
WITHOUT_CLASSIFICATION	// first label
WITHOUT_CLASSIFICATION	// get the first label
WITHOUT_CLASSIFICATION	// while more labels or blocks and haven't hit return control
WITHOUT_CLASSIFICATION	// if label is default or equals switchVal
WITHOUT_CLASSIFICATION	// eval it
WITHOUT_CLASSIFICATION	// should check to disallow continue here?
WITHOUT_CLASSIFICATION	// skip nodes until next label
WITHOUT_CLASSIFICATION	// binaryOperation can return Primitive or wrapper type 
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ activatePlugin() method
WITHOUT_CLASSIFICATION	/* private */
WITHOUT_CLASSIFICATION	//{{{ removeEntry() method
WITHOUT_CLASSIFICATION	// XXX //e.printStackTrace();
WITHOUT_CLASSIFICATION	// Delegate to the static method
WITHOUT_CLASSIFICATION	// Create the class static namespace
WITHOUT_CLASSIFICATION	// Evaluate any inner class class definitions in the block  // effectively recursively call this method for contained classes first
WITHOUT_CLASSIFICATION	/*override*/
WITHOUT_CLASSIFICATION	/*override*/
WITHOUT_CLASSIFICATION	// Generate the type for our class
WITHOUT_CLASSIFICATION	// if debug, write out the class file to debugClasses directory
WITHOUT_CLASSIFICATION	// Define the new class in the classloader
WITHOUT_CLASSIFICATION	//bcm.doneDefiningClass( fqClassName );
WITHOUT_CLASSIFICATION	// import the unq name into parent
WITHOUT_CLASSIFICATION	//classStaticNameSpace.importClass( fqClassName.replace('$','.') );
WITHOUT_CLASSIFICATION	/*strictJava*/
WITHOUT_CLASSIFICATION	// evaluate the static portion of the block in the static space
WITHOUT_CLASSIFICATION	// Set the static bsh This callback 
WITHOUT_CLASSIFICATION	/*strict*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	// value error shouldn't happen
WITHOUT_CLASSIFICATION	/*declaringNameSpace*/
WITHOUT_CLASSIFICATION	//{{{ getFile() method
WITHOUT_CLASSIFICATION	// Also cache it in the static namespace... //classStaticNameSpace.cacheClass( name, genClass );
WITHOUT_CLASSIFICATION	// Give the static space its class static import // important to do this after all classes are defined
WITHOUT_CLASSIFICATION	// look for the specially named super delegate method
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	// make all buttons the same size
WITHOUT_CLASSIFICATION	// cancel button goes on far left
WITHOUT_CLASSIFICATION	// prev and next buttons are on the right
WITHOUT_CLASSIFICATION	// calculate size for current page
WITHOUT_CLASSIFICATION	//{{{ getPath() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getCachePath() method
WITHOUT_CLASSIFICATION	//{{{ getZipFile() method
WITHOUT_CLASSIFICATION	//{{{ getClassLoader() method
WITHOUT_CLASSIFICATION	//{{{ getActions() method
WITHOUT_CLASSIFICATION	//{{{ getActionSet() method
WITHOUT_CLASSIFICATION	//{{{ getBrowserActionSet() method
WITHOUT_CLASSIFICATION	//{{{ checkDependencies() method
WITHOUT_CLASSIFICATION	//{{{ getDependentPlugins() method
WITHOUT_CLASSIFICATION	//{{{ getPlugin() method
WITHOUT_CLASSIFICATION	// recursive call
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// package-private members // package-private, not private, for speedy access by inner classes
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// for thread safety
WITHOUT_CLASSIFICATION	//{{{ activateIfNecessary() method
WITHOUT_CLASSIFICATION	// 4.1 plugin
WITHOUT_CLASSIFICATION	// 4.2 plugin
WITHOUT_CLASSIFICATION	// if at least one property listed here is true, // load the plugin
WITHOUT_CLASSIFICATION	//{{{ deactivatePlugin() method
WITHOUT_CLASSIFICATION	// see if this is a 4.1-style plugin
WITHOUT_CLASSIFICATION	//{{{ getDockablesURI() method
WITHOUT_CLASSIFICATION	//{{{ getServicesURI() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Static methods
WITHOUT_CLASSIFICATION	//{{{ getPluginCache() method
WITHOUT_CLASSIFICATION	// returns false with outdated cache
WITHOUT_CLASSIFICATION	//{{{ setPluginCache() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ PluginJAR constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ uninit() method
WITHOUT_CLASSIFICATION	//{{{ getClasses() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Check if a plugin with the same name // is already loaded
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ actionsPresentButNotCoreClass() method
WITHOUT_CLASSIFICATION	//{{{ loadCache() method
WITHOUT_CLASSIFICATION	//{{{ generateCache() method
WITHOUT_CLASSIFICATION	//{{{ startPlugin() method
WITHOUT_CLASSIFICATION	// old plugins expected jEdit 4.1-style // behavior, where a PropertiesChanged // was sent after plugins were started
WITHOUT_CLASSIFICATION	// buffers retain a reference to the fold handler in // question... and the easiest way to handle fold // handler loading is this...
WITHOUT_CLASSIFICATION	// == null before loaded
WITHOUT_CLASSIFICATION	//{{{ startPluginLater() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ breakPlugin() method
WITHOUT_CLASSIFICATION	// but we want properties to hang around
WITHOUT_CLASSIFICATION	//{{{ PluginCacheEntry class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ read() method
WITHOUT_CLASSIFICATION	/* read() and write() must be kept perfectly in sync...		 * its a very simple file format. doing it this way is		 * faster than serializing since serialization calls		 * reflection, etc. */
WITHOUT_CLASSIFICATION	//{{{ readStringArray() method
WITHOUT_CLASSIFICATION	//{{{ readURI() method
WITHOUT_CLASSIFICATION	//{{{ write() method
WITHOUT_CLASSIFICATION	//{{{ readBooleanArray() method
WITHOUT_CLASSIFICATION	//{{{ readMap() method
WITHOUT_CLASSIFICATION	//{{{ writeStringArray() method
WITHOUT_CLASSIFICATION	//{{{ writeBooleanArray() method
WITHOUT_CLASSIFICATION	//{{{ writeMap() method
WITHOUT_CLASSIFICATION	//{{{ Roster constructor
WITHOUT_CLASSIFICATION	//{{{ addRemove() method
WITHOUT_CLASSIFICATION	//{{{ addInstall() method
WITHOUT_CLASSIFICATION	//{{{ getOperation() method
WITHOUT_CLASSIFICATION	//{{{ getOperationCount() method
WITHOUT_CLASSIFICATION	//{{{ isEmpty() method
WITHOUT_CLASSIFICATION	//{{{ performOperationsInWorkThread() method
WITHOUT_CLASSIFICATION	//{{{ performOperationsInAWTThread() method
WITHOUT_CLASSIFICATION	// add the JARs before checking deps since dep check might // require all JARs to be present
WITHOUT_CLASSIFICATION	// now activate the plugins
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Operation interface
WITHOUT_CLASSIFICATION	//{{{ addOperation() method
WITHOUT_CLASSIFICATION	//{{{ getDownloadDir() method
WITHOUT_CLASSIFICATION	//{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	//{{{ Remove constructor
WITHOUT_CLASSIFICATION	//{{{ Remove class
WITHOUT_CLASSIFICATION	//{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	// close JAR file and all JARs that depend on this
WITHOUT_CLASSIFICATION	// remove cache file
WITHOUT_CLASSIFICATION	// move JAR first
WITHOUT_CLASSIFICATION	//{{{ unloadPluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	//{{{ Install class
WITHOUT_CLASSIFICATION	//{{{ Install constructor
WITHOUT_CLASSIFICATION	// catch those hooligans passing null urls
WITHOUT_CLASSIFICATION	//{{{ getMaximum() method
WITHOUT_CLASSIFICATION	//{{{ runInWorkThread() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	// check if download failed
WITHOUT_CLASSIFICATION	// if download OK, remove existing version
WITHOUT_CLASSIFICATION	/* even if installDirectory is different */
WITHOUT_CLASSIFICATION	//{{{ download() method
WITHOUT_CLASSIFICATION	// do nothing, user clicked 'Stop'
WITHOUT_CLASSIFICATION	//{{{ copy() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ construct() method
WITHOUT_CLASSIFICATION	//{{{ menuSelected() method
WITHOUT_CLASSIFICATION	//{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	//{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	//{{{ ShowRecentMenuItem class
WITHOUT_CLASSIFICATION	// allocate the array to store the initializers // description of the array // The other dimensions default to zero and are assigned when  // the values are set.
WITHOUT_CLASSIFICATION	// Evaluate the initializers
WITHOUT_CLASSIFICATION	// unwrap primitive to the wrapper type
WITHOUT_CLASSIFICATION	// don't deal with object types here... unless above
WITHOUT_CLASSIFICATION	// store the value in the array
WITHOUT_CLASSIFICATION	// I think this can happen
WITHOUT_CLASSIFICATION	// Supply any defaulted attributes.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////// // Constants. ////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// // Constants for element content type. //
WITHOUT_CLASSIFICATION	// // Constants for the entity type. //
WITHOUT_CLASSIFICATION	// // Constants for attribute type. //
WITHOUT_CLASSIFICATION	// // Constants for supported encodings. //
WITHOUT_CLASSIFICATION	// // Constants for attribute default value. //
WITHOUT_CLASSIFICATION	// Read the version.
WITHOUT_CLASSIFICATION	// Try reading an encoding declaration.
WITHOUT_CLASSIFICATION	// Try reading a standalone declaration
WITHOUT_CLASSIFICATION	// Read an optional version.
WITHOUT_CLASSIFICATION	// Read the encoding.
WITHOUT_CLASSIFICATION	// 8-bit encodings
WITHOUT_CLASSIFICATION	// 16-bit encodings
WITHOUT_CLASSIFICATION	// 32-bit encodings
WITHOUT_CLASSIFICATION	// Read the document type name.
WITHOUT_CLASSIFICATION	// Read the ExternalIDs.
WITHOUT_CLASSIFICATION	// Look for a declaration subset.
WITHOUT_CLASSIFICATION	// loop until the subset ends
WITHOUT_CLASSIFICATION	// end of subset
WITHOUT_CLASSIFICATION	// Read the external subset, if any
WITHOUT_CLASSIFICATION	// Loop until we end up back at '>'
WITHOUT_CLASSIFICATION	// No external subset.
WITHOUT_CLASSIFICATION	// Read the element type name.
WITHOUT_CLASSIFICATION	// Determine the current content type.
WITHOUT_CLASSIFICATION	// Read the element type name.
WITHOUT_CLASSIFICATION	// // Flags for parsing context. //
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Major syntactic productions. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//skip all white, PIs, and comments //if this doesn't throw an exception...
WITHOUT_CLASSIFICATION	// Expand general entities in // default values of attributes. // (Do this after the doctypeDecl // event!). // expandAttributeDefaultValues();
WITHOUT_CLASSIFICATION	// This is the (global) counter for the // array of specified attributes.
WITHOUT_CLASSIFICATION	// Read the attributes, if any. // After this loop, we should be just // in front of the closing delimiter.
WITHOUT_CLASSIFICATION	// See if it was specified.
WITHOUT_CLASSIFICATION	// I guess not...
WITHOUT_CLASSIFICATION	// Figure out if this is a start tag // or an empty element, and dispatch an // event accordingly.
WITHOUT_CLASSIFICATION	// Restore the previous state.
WITHOUT_CLASSIFICATION	// Read the attribute name.
WITHOUT_CLASSIFICATION	// Parse '='
WITHOUT_CLASSIFICATION	// Handle delimiters
WITHOUT_CLASSIFICATION	// Found "&"
WITHOUT_CLASSIFICATION	// Found "<"
WITHOUT_CLASSIFICATION	// Found "<!"
WITHOUT_CLASSIFICATION	// Found "<!-"
WITHOUT_CLASSIFICATION	// Found "<!["
WITHOUT_CLASSIFICATION	// Found "</"
WITHOUT_CLASSIFICATION	// Found "<" followed by something else
WITHOUT_CLASSIFICATION	// Read the content model.
WITHOUT_CLASSIFICATION	// Parse the first content particle
WITHOUT_CLASSIFICATION	// Check for end or for a separator.
WITHOUT_CLASSIFICATION	// Register the separator.
WITHOUT_CLASSIFICATION	// Parse the rest of the content model.
WITHOUT_CLASSIFICATION	// Check for the occurrence indicator.
WITHOUT_CLASSIFICATION	// Check for PCDATA alone.
WITHOUT_CLASSIFICATION	// Parse mixed content.
WITHOUT_CLASSIFICATION	// Read the attribute type.
WITHOUT_CLASSIFICATION	// Read the default value.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Note that the attribute has been // specified.
WITHOUT_CLASSIFICATION	// Read the first token.
WITHOUT_CLASSIFICATION	// Read the remaining tokens.
WITHOUT_CLASSIFICATION	// no surrogates needed
WITHOUT_CLASSIFICATION	// > 16 bits, surrogate needed
WITHOUT_CLASSIFICATION	// too big for surrogate
WITHOUT_CLASSIFICATION	// Check for a parameter entity.
WITHOUT_CLASSIFICATION	// Read the entity name, and prepend // '%' if necessary.
WITHOUT_CLASSIFICATION	// Read the entity value.
WITHOUT_CLASSIFICATION	// Internal entity.
WITHOUT_CLASSIFICATION	// Read the external IDs
WITHOUT_CLASSIFICATION	// Check for NDATA declaration.
WITHOUT_CLASSIFICATION	// Finish the declaration.
WITHOUT_CLASSIFICATION	// Read the external identifiers.
WITHOUT_CLASSIFICATION	// Register the notation.
WITHOUT_CLASSIFICATION	// Start with a little cheat -- in most // cases, the entire sequence of // character data will already be in // the readBuffer; if not, fall through to // the normal approach.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // High-level reading and scanning methods. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// else fall through...
WITHOUT_CLASSIFICATION	// else fall through...
WITHOUT_CLASSIFICATION	// OK, do it by the book.
WITHOUT_CLASSIFICATION	// Read the first character.
WITHOUT_CLASSIFICATION	// Find the delimiter.
WITHOUT_CLASSIFICATION	// Read the literal.
WITHOUT_CLASSIFICATION	// Literals never have line ends
WITHOUT_CLASSIFICATION	// References may be allowed
WITHOUT_CLASSIFICATION	// check the next character
WITHOUT_CLASSIFICATION	// Return the value.
WITHOUT_CLASSIFICATION	// public id
WITHOUT_CLASSIFICATION	// system id
WITHOUT_CLASSIFICATION	// Expand buffer if necessary.
WITHOUT_CLASSIFICATION	// Skip whitespace at the start.
WITHOUT_CLASSIFICATION	// Skip whitespace at the end.
WITHOUT_CLASSIFICATION	// Start copying to the left.
WITHOUT_CLASSIFICATION	// Normalise all other whitespace to // a single space.
WITHOUT_CLASSIFICATION	// Generate a hash code.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// error
WITHOUT_CLASSIFICATION	// Get the bucket.
WITHOUT_CLASSIFICATION	// Stop when we hit a null index.
WITHOUT_CLASSIFICATION	// If they're the same length, // check for a match. // If the loop finishes, 'index' will // contain the current bucket // position.
WITHOUT_CLASSIFICATION	// Stop if there are no more tuples.
WITHOUT_CLASSIFICATION	// That's it, we have a match!
WITHOUT_CLASSIFICATION	// Not found -- we'll have to add it.
WITHOUT_CLASSIFICATION	// Do we have to grow the bucket?
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // XML query routines. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// // Elements //
WITHOUT_CLASSIFICATION	// Try looking up the element
WITHOUT_CLASSIFICATION	// Make a new one if necessary.
WITHOUT_CLASSIFICATION	// Insert the content model, if any.
WITHOUT_CLASSIFICATION	// Insert the attributes, if any.
WITHOUT_CLASSIFICATION	// Save the element info.
WITHOUT_CLASSIFICATION	// Create a new hashtable if necessary.
WITHOUT_CLASSIFICATION	// Check that the attribute doesn't // already exist!
WITHOUT_CLASSIFICATION	// Use CONTENT_UNDECLARED to avoid overwriting // existing element declaration.
WITHOUT_CLASSIFICATION	// // Entities //
WITHOUT_CLASSIFICATION	// // Notations. //
WITHOUT_CLASSIFICATION	// // Location. //
WITHOUT_CLASSIFICATION	// As long as there's nothing in the // read buffer, try reading more data // (for an external entity) or popping // the entity stack (for either).
WITHOUT_CLASSIFICATION	// Normal condition.
WITHOUT_CLASSIFICATION	// Push the existing status.
WITHOUT_CLASSIFICATION	// Create a new read buffer. // (Note the four-character margin)
WITHOUT_CLASSIFICATION	// Flush any remaining data.
WITHOUT_CLASSIFICATION	// Make the URL absolute.
WITHOUT_CLASSIFICATION	// See if the application wants to // redirect the system ID and/or // supply its own character stream.
WITHOUT_CLASSIFICATION	// Start the entity.
WITHOUT_CLASSIFICATION	// Figure out what we're reading from.
WITHOUT_CLASSIFICATION	// There's an explicit character stream.
WITHOUT_CLASSIFICATION	// We have to open our own stream // to the URL.
WITHOUT_CLASSIFICATION	// Set the new status
WITHOUT_CLASSIFICATION	// If we get to here, there must be // an InputStream available.
WITHOUT_CLASSIFICATION	// Attempt to detect the encoding.
WITHOUT_CLASSIFICATION	// Read an XML or text declaration.
WITHOUT_CLASSIFICATION	// Read the XML/Encoding declaration.
WITHOUT_CLASSIFICATION	// Read the first four bytes for // autodetection.
WITHOUT_CLASSIFICATION	// Look for a known signature.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// UCS-4 must begin with "<!XML" // 0x00 0x00 0x3c 0x00: UCS-4, unusual (2143)
WITHOUT_CLASSIFICATION	// UCS-2 with a byte-order marker. // 0xfe 0xff: UCS-2, big-endian (12)
WITHOUT_CLASSIFICATION	// UCS-2 without a BOM must begin with "<?XML" // 0x00 0x3c 0x00 0x3f: UCS-2, big-endian, no byte-order mark
WITHOUT_CLASSIFICATION	// UCS-2 without a BOM must begin with "<?XML" // 0x3c 0x00 0x3f 0x00: UCS-2, little-endian, no byte-order mark
WITHOUT_CLASSIFICATION	// Some kind of 8-bit encoding with "<?XML" // 0x3c 0x3f 0x78 0x6d: UTF-8 or other 8-bit markup (read ENCODING)
WITHOUT_CLASSIFICATION	// Push the existing status
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Don't bother if there is no input.
WITHOUT_CLASSIFICATION	// Push it onto the stack.
WITHOUT_CLASSIFICATION	// Throw an EOFException if there // is nothing else to pop.
WITHOUT_CLASSIFICATION	// Read the character
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// See if we have any overflow.
WITHOUT_CLASSIFICATION	// Special situation -- we're taking // input from a character stream.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Filter out all carriage returns // if we've seen any.
WITHOUT_CLASSIFICATION	// Reset the position.
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// 2-byte sequence: 00000yyyyyxxxxxx = 110yyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	// 3-byte sequence: zzzzyyyyyyxxxxxx = 1110zzzz 10yyyyyy 10xxxxxx
WITHOUT_CLASSIFICATION	// 4-byte sequence: 11101110wwwwzzzzyy + 110111yyyyxxxxxx //     = 11110uuu 10uuzzzz 10yyyyyy 10xxxxxx // (uuuuu = wwww + 1)
WITHOUT_CLASSIFICATION	// Otherwise, the 8th bit may not be set in UTF-8
WITHOUT_CLASSIFICATION	// How many characters have we read?
WITHOUT_CLASSIFICATION	// Take a character from the buffer // or from the actual input stream.
WITHOUT_CLASSIFICATION	// Check for the correct bits at the // start.
WITHOUT_CLASSIFICATION	// Return the significant bits.
WITHOUT_CLASSIFICATION	// No errors; first line
WITHOUT_CLASSIFICATION	// Set up the buffers for data and names
WITHOUT_CLASSIFICATION	// Set up the DTD hash tables
WITHOUT_CLASSIFICATION	// Set up the variables for the current // element context.
WITHOUT_CLASSIFICATION	// Set up the input variables
WITHOUT_CLASSIFICATION	// // The current XML handler interface. //
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// // Hashtables for DTD information on elements, entities, and notations. //
WITHOUT_CLASSIFICATION	// // Element type currently in force. //
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// // Base external identifiers for resolution. //
WITHOUT_CLASSIFICATION	// // Stack of entity names, to help detect recursion. //
WITHOUT_CLASSIFICATION	// // Are we in a context where PEs are allowed? //
WITHOUT_CLASSIFICATION	// // Symbol table, for internalising names. //
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//app.setServicesProvider(delegate);
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	// // Utility flag: have we noticed a CR while reading the last // data chunk?  If so, we will have to go back and normalise // CR/LF. //
WITHOUT_CLASSIFICATION	// Set type/creator codes for files
WITHOUT_CLASSIFICATION	//{{{ osok() method
WITHOUT_CLASSIFICATION	// According to Slava this is better
WITHOUT_CLASSIFICATION	//{{{ showInFinder() method
WITHOUT_CLASSIFICATION	//{{{ runScript() method
WITHOUT_CLASSIFICATION	//{{{ ScriptRunner class
WITHOUT_CLASSIFICATION	//{{{ openSelection() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	//Remember to make this an option later //NSApplication.sharedApplication().hide(jEdit.getPlugin("MacOSPlugin"));
WITHOUT_CLASSIFICATION	//SwingUtilities.invokeLater(new ScriptRunner(path)); //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ getSettings() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ Handlers
WITHOUT_CLASSIFICATION	//{{{ handleAbout() method
WITHOUT_CLASSIFICATION	//{{{ handleFileCodes() method
WITHOUT_CLASSIFICATION	// Set type/creator on save
WITHOUT_CLASSIFICATION	// Fail silently, since we may be using UFS
WITHOUT_CLASSIFICATION	// Add type/creator to local buffer property list on open
WITHOUT_CLASSIFICATION	// This will happen when a new file is created
WITHOUT_CLASSIFICATION	//{{{ handleOpenFile() method
WITHOUT_CLASSIFICATION	//{{{ handleOpenFile() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ handlePreferences() method
WITHOUT_CLASSIFICATION	//{{{ handleQuit() method
WITHOUT_CLASSIFICATION	//{{{ Delegate methods
WITHOUT_CLASSIFICATION	//{{{ applicationDockMenu() method
WITHOUT_CLASSIFICATION	// notify clients with -wait
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Buffers
WITHOUT_CLASSIFICATION	// Recent Buffers
WITHOUT_CLASSIFICATION	// Recent Directories
WITHOUT_CLASSIFICATION	// Macros
WITHOUT_CLASSIFICATION	//{{{ applicationOpenFiles() method
WITHOUT_CLASSIFICATION	//{{{ applicationShouldTerminate() method
WITHOUT_CLASSIFICATION	//{{{ Services
WITHOUT_CLASSIFICATION	//{{{ openFile() method
WITHOUT_CLASSIFICATION	//{{{ insertSelection() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ construct() method
WITHOUT_CLASSIFICATION	//{{{ menuSelected() method
WITHOUT_CLASSIFICATION	//{{{ Dock Menu
WITHOUT_CLASSIFICATION	//{{{ BufferMenu class
WITHOUT_CLASSIFICATION	//item.setImage(NSWorkspace.sharedWorkspace().iconForFile( //	buffs[i].getPath()));
WITHOUT_CLASSIFICATION	//{{{ MacrosMenu class
WITHOUT_CLASSIFICATION	//{{{ RecentMenu class
WITHOUT_CLASSIFICATION	//{{{ RecentDirMenu class
WITHOUT_CLASSIFICATION	//{{{ MacroAction class
WITHOUT_CLASSIFICATION	//{{{ NewViewAction class
WITHOUT_CLASSIFICATION	//{{{ ShowFileAction class
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ construct() method
WITHOUT_CLASSIFICATION	//{{{ menuSelected() method
WITHOUT_CLASSIFICATION	//{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	//{{{ menuDeselected() method
WITHOUT_CLASSIFICATION	//{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	//{{{ ShowRecentDirMenuItem class
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ menuCanceled() method
WITHOUT_CLASSIFICATION	//{{{ ShowFileAction class
WITHOUT_CLASSIFICATION	//{{{ ShowBufferMenuItem class
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ ShowDirAction class
WITHOUT_CLASSIFICATION	//{{{ accept() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ accept() method
WITHOUT_CLASSIFICATION	//{{{ createMacro() method
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ runMacro() method
WITHOUT_CLASSIFICATION	//{{{ Handler constructor
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - serializable
WITHOUT_CLASSIFICATION	// End BeanShell Modification - serializable
WITHOUT_CLASSIFICATION	// should normally be
WITHOUT_CLASSIFICATION	// Do the for init
WITHOUT_CLASSIFICATION	// do *not* invoke special override for block... (see above)
WITHOUT_CLASSIFICATION	// put it back
WITHOUT_CLASSIFICATION	// default impl
WITHOUT_CLASSIFICATION	//{{{ stringToSelection() method
WITHOUT_CLASSIFICATION	/*declaringNameSpace*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Begin Method components
WITHOUT_CLASSIFICATION	// Arguments
WITHOUT_CLASSIFICATION	// Scripted method body
WITHOUT_CLASSIFICATION	// Java Method
WITHOUT_CLASSIFICATION	// End method components
WITHOUT_CLASSIFICATION	/*paramNames*/
WITHOUT_CLASSIFICATION	/*method.block*/
WITHOUT_CLASSIFICATION	/*modifiers*/
WITHOUT_CLASSIFICATION	/*		Note: bshmethod needs to re-evaluate arg types here		This is broken.	*/
WITHOUT_CLASSIFICATION	/*		Note: bshmethod needs to re-evaluate the method return type here.		This is broken.	*/
WITHOUT_CLASSIFICATION	/*isNative*/
WITHOUT_CLASSIFICATION	// is this a syncrhonized method?
WITHOUT_CLASSIFICATION	// ???
WITHOUT_CLASSIFICATION	// Cardinality (number of args) mismatch
WITHOUT_CLASSIFICATION	// Make the local namespace for the method invocation
WITHOUT_CLASSIFICATION	// set the method parameters in the local namespace
WITHOUT_CLASSIFICATION	/*override*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Set typed variable
WITHOUT_CLASSIFICATION	// getAssignable would catch this for typed param
WITHOUT_CLASSIFICATION	// Push the new namespace on the call stack
WITHOUT_CLASSIFICATION	// save the callstack including the called method, just for error mess
WITHOUT_CLASSIFICATION	// Get back to caller namespace
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// return type is a class
WITHOUT_CLASSIFICATION	// Point to return statement point if we had one. // (else it was implicit return? What's the case here?)
WITHOUT_CLASSIFICATION	// The token.image text of the name... never changes.
WITHOUT_CLASSIFICATION	// null value means no value
WITHOUT_CLASSIFICATION	// check for easy mistake
WITHOUT_CLASSIFICATION	// Need to scrape a value from the last line?
WITHOUT_CLASSIFICATION	// I/O error
WITHOUT_CLASSIFICATION	// read results...
WITHOUT_CLASSIFICATION	// bad postURL
WITHOUT_CLASSIFICATION	// ?
WITHOUT_CLASSIFICATION	//  first node will either be PrimitiveType or AmbiguousName
WITHOUT_CLASSIFICATION	// Ease debugging... // XThis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	/*				If equals() is not explicitly defined we must override the 				default implemented by the This object protocol for scripted				object.  To support XThis equals() must test for equality with 				the generated proxy object, not the scripted bsh This object;				otherwise callers from outside in Java will not see a the 				proxy object as equal to itself.			*/
WITHOUT_CLASSIFICATION	/*leave null*/
WITHOUT_CLASSIFICATION	/*leave null*/
WITHOUT_CLASSIFICATION	// XThis.this refers to the enclosing class instance
WITHOUT_CLASSIFICATION	// return cached type if available
WITHOUT_CLASSIFICATION	/*    * Ordinals for various reasons why an Error of this type can be thrown.    */
WITHOUT_CLASSIFICATION	// put it back
WITHOUT_CLASSIFICATION	// return cached type if available
WITHOUT_CLASSIFICATION	//  first node will either be PrimitiveType or AmbiguousName
WITHOUT_CLASSIFICATION	// finaly block
WITHOUT_CLASSIFICATION	/*    * Constructors of various flavors follow.    */
WITHOUT_CLASSIFICATION	// unwrap the target error
WITHOUT_CLASSIFICATION	// If the param is typed check assignability
WITHOUT_CLASSIFICATION	// Get catch block
WITHOUT_CLASSIFICATION	// If we have an exception, find a catch
WITHOUT_CLASSIFICATION	// Found match, execute catch block
WITHOUT_CLASSIFICATION	// set a typed variable (directly in the block)
WITHOUT_CLASSIFICATION	// set an untyped variable directly in the block
WITHOUT_CLASSIFICATION	// put cbNameSpace on the top of the stack
WITHOUT_CLASSIFICATION	// handled target
WITHOUT_CLASSIFICATION	// evaluate finally block
WITHOUT_CLASSIFICATION	// exception fell through, throw it upward...
WITHOUT_CLASSIFICATION	// Note: no way to mutate the Throwable message, must maintain our own
WITHOUT_CLASSIFICATION	// freeze the callstack for the stack trace.
WITHOUT_CLASSIFICATION	// Users should not normally see this.
WITHOUT_CLASSIFICATION	/*type*/
WITHOUT_CLASSIFICATION	/*type*/
WITHOUT_CLASSIFICATION	// check this.value
WITHOUT_CLASSIFICATION	/*strictjava*/
WITHOUT_CLASSIFICATION	// See notes in getThis()
WITHOUT_CLASSIFICATION	//Log.log(Log.ERROR,this,io);
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Prepare to execute the block. // We must create a new BlockNameSpace to hold the catch // parameter and swap it on the stack after initializing it.
WITHOUT_CLASSIFICATION	// Begin instance data // Note: if we add something here we should reset it in the clear() method.
WITHOUT_CLASSIFICATION	//|| ( getParent()!=null && getParent().classStatic != null ) 
WITHOUT_CLASSIFICATION	// End instance data
WITHOUT_CLASSIFICATION	// Begin constructors
WITHOUT_CLASSIFICATION	// Note: in this case parent must have a class manager.
WITHOUT_CLASSIFICATION	// Register for notification of classloader change
WITHOUT_CLASSIFICATION	// End constructors
WITHOUT_CLASSIFICATION	// if localscoping switch follow strictJava, else recurse
WITHOUT_CLASSIFICATION	/*recurse*/
WITHOUT_CLASSIFICATION	// primitives should have been wrapped
WITHOUT_CLASSIFICATION	// Locate the variable definition if it exists.
WITHOUT_CLASSIFICATION	// Found an existing variable here (or above if recurse allowed)
WITHOUT_CLASSIFICATION	// No previous variable definition found here (or above if recurse)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// nameSpaceChanged() on new variable addition
WITHOUT_CLASSIFICATION	/*modifiers*/
WITHOUT_CLASSIFICATION	/*recurse*/
WITHOUT_CLASSIFICATION	// If we are disconnected from root we need to handle the def imports
WITHOUT_CLASSIFICATION	/*interp*/
WITHOUT_CLASSIFICATION	/*interp*/
WITHOUT_CLASSIFICATION	//Interpreter.debug("No class manager namespace:" +this);
WITHOUT_CLASSIFICATION	// try parent
WITHOUT_CLASSIFICATION	// Change import precedence if we are a class body/instance
WITHOUT_CLASSIFICATION	// Change import precedence if we are a class body/instance // Get imported first.
WITHOUT_CLASSIFICATION	//checkVariableModifiers( name, modifiers );
WITHOUT_CLASSIFICATION	/*		Get variables declared in this namespace.	*/
WITHOUT_CLASSIFICATION	// Setting a typed variable is always a local operation.
WITHOUT_CLASSIFICATION	// does the variable already exist?
WITHOUT_CLASSIFICATION	// Is it typed?
WITHOUT_CLASSIFICATION	// else set it and return
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//checkMethodModifiers( method );
WITHOUT_CLASSIFICATION	// Vector
WITHOUT_CLASSIFICATION	/*declaredOnly*/
WITHOUT_CLASSIFICATION	// Change import precedence if we are a class body/instance // Get import first.
WITHOUT_CLASSIFICATION	// m contains either BshMethod or Vector of BshMethod
WITHOUT_CLASSIFICATION	// unwrap 
WITHOUT_CLASSIFICATION	// Apply most specific signature matching
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Try object imports
WITHOUT_CLASSIFICATION	// Try static imports
WITHOUT_CLASSIFICATION	/*object*/
WITHOUT_CLASSIFICATION	/* 			Here we catch any EvalError from the interpreter because we are			using it as a tool to load the command, not as part of the			execution path.		*/
WITHOUT_CLASSIFICATION	// Look for the loaded command 
WITHOUT_CLASSIFICATION	//cacheCount++; // debug
WITHOUT_CLASSIFICATION	// Check the cache
WITHOUT_CLASSIFICATION	// Unqualified (simple, non-compound) name
WITHOUT_CLASSIFICATION	// Unqualified name check imported
WITHOUT_CLASSIFICATION	// Try imported class
WITHOUT_CLASSIFICATION	// if found as imported also cache it
WITHOUT_CLASSIFICATION	// Not found
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Try absolute
WITHOUT_CLASSIFICATION	// Cache unqualified names to prevent import check again
WITHOUT_CLASSIFICATION	// Try explicitly imported class, e.g. import foo.Bar;
WITHOUT_CLASSIFICATION	/*				Found the full name in imported classes.			*/
WITHOUT_CLASSIFICATION	// Try to make the full imported name
WITHOUT_CLASSIFICATION	// Handle imported inner class case
WITHOUT_CLASSIFICATION	/* not a class */
WITHOUT_CLASSIFICATION	// If found cache the full name in the BshClassManager
WITHOUT_CLASSIFICATION	/*			Try imported packages, e.g. "import foo.bar.*;"			in reverse order of import...			(give later imports precedence...)		*/
WITHOUT_CLASSIFICATION	/*			Try super import if available			Note: we do this last to allow explicitly imported classes			and packages to take priority.  This method will also throw an			error indicating ambiguity if it exists...		*/
WITHOUT_CLASSIFICATION	/*		For serialization.		Don't serialize non-serializable objects.	*/
WITHOUT_CLASSIFICATION	/*arbitrary flag*/
WITHOUT_CLASSIFICATION	// volatile, transient
WITHOUT_CLASSIFICATION	// default
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* --- Begin static members --- */
WITHOUT_CLASSIFICATION	/* --- End static members --- */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// End constructors
WITHOUT_CLASSIFICATION	/* --- End instance data --- */
WITHOUT_CLASSIFICATION	/* 			Create the root "bsh" system object if it doesn't exist.		*/
WITHOUT_CLASSIFICATION	/*onlyStatic*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// bsh
WITHOUT_CLASSIFICATION	// bsh.system
WITHOUT_CLASSIFICATION	// alias
WITHOUT_CLASSIFICATION	// bsh.help
WITHOUT_CLASSIFICATION	// bsh.cwd
WITHOUT_CLASSIFICATION	// applets can't see sys props
WITHOUT_CLASSIFICATION	// bsh.interactive
WITHOUT_CLASSIFICATION	/*BshClassManager*/
WITHOUT_CLASSIFICATION	// init the callstack.  
WITHOUT_CLASSIFICATION	// try to sync up the console
WITHOUT_CLASSIFICATION	// this helps a little
WITHOUT_CLASSIFICATION	// sanity check during development
WITHOUT_CLASSIFICATION	// reinit the callstack
WITHOUT_CLASSIFICATION	// begin source and eval
WITHOUT_CLASSIFICATION	/*, CallStack callstack */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// nodes remember from where they were sourced
WITHOUT_CLASSIFICATION	// non-interactive, return control now
WITHOUT_CLASSIFICATION	// show extra "expecting..." info
WITHOUT_CLASSIFICATION	// add the source file info and throw again
WITHOUT_CLASSIFICATION	// failsafe, set the Line as the origin of the error.
WITHOUT_CLASSIFICATION	// failsafe, set the Line as the origin of the error.
WITHOUT_CLASSIFICATION	// end source and eval
WITHOUT_CLASSIFICATION	// End ConsoleInterface
WITHOUT_CLASSIFICATION	// map null to Primtive.NULL coming in...
WITHOUT_CLASSIFICATION	// optimization for common case
WITHOUT_CLASSIFICATION	/*			We jump through some hoops here to handle arbitrary cases like			unset("bsh.foo");		*/
WITHOUT_CLASSIFICATION	//lhs.assign( null, false );
WITHOUT_CLASSIFICATION	// end primary set and get methods
WITHOUT_CLASSIFICATION	/*	Methods for interacting with Parser */
WITHOUT_CLASSIFICATION	// Default is c:\windows under win98, $HOME under Unix
WITHOUT_CLASSIFICATION	// squeltch security exception, filenotfoundexception
WITHOUT_CLASSIFICATION	// if relative, fix up to bsh.cwd
WITHOUT_CLASSIFICATION	// set transient fields
WITHOUT_CLASSIFICATION	// ug
WITHOUT_CLASSIFICATION	// evaluate the expression
WITHOUT_CLASSIFICATION	// Order of body and condition is swapped for do / while
WITHOUT_CLASSIFICATION	// has body, else just for side effects
WITHOUT_CLASSIFICATION	// no body?
WITHOUT_CLASSIFICATION	//initCallStack( namespace );
WITHOUT_CLASSIFICATION	// null callstack, one will be created for us 
WITHOUT_CLASSIFICATION	/*declaringInterpreter*/
WITHOUT_CLASSIFICATION	// Find the bsh method
WITHOUT_CLASSIFICATION	// leave null
WITHOUT_CLASSIFICATION	// a default equals() testing for equality with the This reference
WITHOUT_CLASSIFICATION	// Call script "invoke( String methodName, Object [] args );
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ RecentHandler class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// These do not change during evaluation
WITHOUT_CLASSIFICATION	// For evaluation
WITHOUT_CLASSIFICATION	// number of times eval hit 'this.caller'
WITHOUT_CLASSIFICATION	//   //  End mutable instance variables. // ---------------------------------------------------------
WITHOUT_CLASSIFICATION	//{{{ updateTitle() method
WITHOUT_CLASSIFICATION	// Begin Cached result structures // These are optimizations 
WITHOUT_CLASSIFICATION	// End Cached result structures
WITHOUT_CLASSIFICATION	/*autoalloc*/
WITHOUT_CLASSIFICATION	// switch namespace and special var visibility
WITHOUT_CLASSIFICATION	// Resolved the variable
WITHOUT_CLASSIFICATION	/*				Keep adding parts until we have a class 			*/
WITHOUT_CLASSIFICATION	// not a class (or variable per above)
WITHOUT_CLASSIFICATION	/*			If we didn't find a class or variable name (or prefix) above			there are two possibilities:			- If we are a simple name then we can pass as a void variable 			reference.			- If we are compound then we must fail at this point.		*/
WITHOUT_CLASSIFICATION	/*			--------------------------------------------------------			After this point we're definitely evaluating relative to			a base object.			--------------------------------------------------------		*/
WITHOUT_CLASSIFICATION	/*			Do some basic validity checks.		*/
WITHOUT_CLASSIFICATION	// previous round produced null
WITHOUT_CLASSIFICATION	// previous round produced void
WITHOUT_CLASSIFICATION	// Class qualified 'this' reference from inner class. // e.g. 'MyOuterClass.this'
WITHOUT_CLASSIFICATION	// find the enclosing class instance space of the class name
WITHOUT_CLASSIFICATION	//&& thisNameSpace.getParent().classInstance != null
WITHOUT_CLASSIFICATION	// static field?
WITHOUT_CLASSIFICATION	// inner class?
WITHOUT_CLASSIFICATION	/* 			Some kind of field access?		*/
WITHOUT_CLASSIFICATION	// length access on array? 
WITHOUT_CLASSIFICATION	/* not a field */
WITHOUT_CLASSIFICATION	// if we get here we have failed
WITHOUT_CLASSIFICATION	/*			Some duplication for "super".  See notes for "this" above			If we're in an enclsing class instance and have a superclass			instance our super is the superclass instance.		*/
WITHOUT_CLASSIFICATION	// Allow getSuper() to through BlockNameSpace to the method's super
WITHOUT_CLASSIFICATION	// super is now the closure's super or class instance
WITHOUT_CLASSIFICATION	// get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	// get the previous context (see notes for this class)
WITHOUT_CLASSIFICATION	// early return
WITHOUT_CLASSIFICATION	// "var" means untyped, return null class
WITHOUT_CLASSIFICATION	/* Try straightforward class name first */
WITHOUT_CLASSIFICATION	/* 				Try toObject() which knows how to work through inner classes				and see what we end up with 			*/
WITHOUT_CLASSIFICATION	// Null interpreter and callstack references. // class only resolution should not require them.
WITHOUT_CLASSIFICATION	// couldn't resolve it
WITHOUT_CLASSIFICATION	/*	*/
WITHOUT_CLASSIFICATION	// Simple (non-compound) variable assignment e.g. x=5;
WITHOUT_CLASSIFICATION	// Interpreter.debug("Simple var LHS...");
WITHOUT_CLASSIFICATION	// Field e.g. foo.bar=5;
WITHOUT_CLASSIFICATION	/*autoallocthis*/
WITHOUT_CLASSIFICATION	// found a non-backslash char.
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// Finished eval and its a class.
WITHOUT_CLASSIFICATION	// e.g. this.x=5;  or someThisType.x=5;
WITHOUT_CLASSIFICATION	// dissallow assignment to magic fields
WITHOUT_CLASSIFICATION	// Superclass method invocation? (e.g. super.foo())
WITHOUT_CLASSIFICATION	// Find target object or class identifier
WITHOUT_CLASSIFICATION	// if we've got an object, resolve the method
WITHOUT_CLASSIFICATION	// It's a class
WITHOUT_CLASSIFICATION	// try static method
WITHOUT_CLASSIFICATION	// cache the fact that this is a static method invocation on this class
WITHOUT_CLASSIFICATION	// return null; ???
WITHOUT_CLASSIFICATION	/*, ReflectError, InvocationTargetException*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// If defined, invoke it
WITHOUT_CLASSIFICATION	// Look for a BeanShell command
WITHOUT_CLASSIFICATION	// should try to print usage here if nothing found
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// end compound name routines
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*checkonly*/
WITHOUT_CLASSIFICATION	/*fromValue*/
WITHOUT_CLASSIFICATION	/*checkOnly*/
WITHOUT_CLASSIFICATION	// This should not happen with checkOnly true
WITHOUT_CLASSIFICATION	// assignment to loose type, void type, or exactly same type
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getEditPanes() method
WITHOUT_CLASSIFICATION	// must be null in checkOnly
WITHOUT_CLASSIFICATION	// Cannot cast from arbitrary object to primitive
WITHOUT_CLASSIFICATION	// Casting to reference type
WITHOUT_CLASSIFICATION	// primitive to wrapper type
WITHOUT_CLASSIFICATION	// Primitive (not null or void) to Object.class type
WITHOUT_CLASSIFICATION	// box it
WITHOUT_CLASSIFICATION	// If type already assignable no cast necessary // We do this last to allow various errors above to be caught. // e.g cast Primitive.Void to Object would pass this
WITHOUT_CLASSIFICATION	// Currently unused, but we'll probably need it later.
WITHOUT_CLASSIFICATION	/*		Note: it may see like with the new 1.3 scoping this test could be		removed, but it cannot.  When recurse is false we still need to set the		variable in our parent, not here.	*/
WITHOUT_CLASSIFICATION	// set the var here in the block namespace
WITHOUT_CLASSIFICATION	// set the var in the enclosing (parent) namespace
WITHOUT_CLASSIFICATION	/*strict?*/
WITHOUT_CLASSIFICATION	// super.variables.containsKey( name ) not any faster, I checked
WITHOUT_CLASSIFICATION	//e.printStackTrace();
WITHOUT_CLASSIFICATION	// ClassPathException is a type of UtilEvalError
WITHOUT_CLASSIFICATION	/*		The interpretation of an ambiguous name is context sensitive.		We disallow a generic eval( ).	*/
WITHOUT_CLASSIFICATION	// Should never come here
WITHOUT_CLASSIFICATION	// Read all the backslashes
WITHOUT_CLASSIFICATION	// Both numeric wrapper types?  // Try numeric style promotion wrapper cast
WITHOUT_CLASSIFICATION	// // Begin methods which simply delegate to our parent (enclosing scope)  //
WITHOUT_CLASSIFICATION	// Here, we have seen an odd number of backslash's followed by a 'u'
WITHOUT_CLASSIFICATION	// assign doesn't need the pre-value
WITHOUT_CLASSIFICATION	//{{{ getSplitConfig() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// evaluate each child
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/* Determines whether the current node was actually closed and     pushed.  This should only be called in the final user action of a     node scope.  */
WITHOUT_CLASSIFICATION	/* Call this to reinitialize the node stack.  It is called     automatically by the parser's ReInit() method. */
WITHOUT_CLASSIFICATION	/* Returns the root node of the AST.  It only makes sense to call     this after a successful parse. */
WITHOUT_CLASSIFICATION	/* Pushes a node on to the stack. */
WITHOUT_CLASSIFICATION	/* Returns the node on the top of the stack, and remove it from the     stack.  */
WITHOUT_CLASSIFICATION	/* Returns the node currently on the top of the stack. */
WITHOUT_CLASSIFICATION	/* Returns the number of children on the stack in the current node     scope. */
WITHOUT_CLASSIFICATION	/* A conditional node is constructed if its condition is true.  All     the nodes that have been pushed since the node was opened are     made children of the the conditional node, which is then pushed     on to the stack.  If the condition is false the node is not     constructed and they are left on the stack. */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	/*ignore*/
WITHOUT_CLASSIFICATION	// try scripted class
WITHOUT_CLASSIFICATION	// end HandlerBase implementation
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// classloader wants no leading slash
WITHOUT_CLASSIFICATION	// classloader wants no leading slash
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*offset*/
WITHOUT_CLASSIFICATION	/*len*/
WITHOUT_CLASSIFICATION	// may have been axed previously
WITHOUT_CLASSIFICATION	// no args method
WITHOUT_CLASSIFICATION	/*	Note: this class is final because we may test == Primitive.class in places.	If we need to change that search for those tests.*/
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// special primitive types
WITHOUT_CLASSIFICATION	// keep track of the original types
WITHOUT_CLASSIFICATION	// Unwrap primitives
WITHOUT_CLASSIFICATION	// returns Object covering both Long and Boolean return types
WITHOUT_CLASSIFICATION	// arithmetic
WITHOUT_CLASSIFICATION	// bitwise
WITHOUT_CLASSIFICATION	// bitwise
WITHOUT_CLASSIFICATION	// returns Object covering both Integer and Boolean return types
WITHOUT_CLASSIFICATION	// returns Object covering both Double and Boolean return types
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	// returns Object covering both Long and Boolean return types
WITHOUT_CLASSIFICATION	// arithmetic
WITHOUT_CLASSIFICATION	// arithmetic
WITHOUT_CLASSIFICATION	// can't shift floating-point values
WITHOUT_CLASSIFICATION	// can't shift floats
WITHOUT_CLASSIFICATION	// ++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	// Promote character to Number type for these purposes
WITHOUT_CLASSIFICATION	// arbitrary
WITHOUT_CLASSIFICATION	// map voids to nulls for the outside world
WITHOUT_CLASSIFICATION	/*fromValue*/
WITHOUT_CLASSIFICATION	/*checkOnly*/
WITHOUT_CLASSIFICATION	/*			Lots of preconditions checked here...			Once things are running smoothly we might comment these out			(That's what assertions are for).		*/
WITHOUT_CLASSIFICATION	// unwrap primitives
WITHOUT_CLASSIFICATION	/*    */
WITHOUT_CLASSIFICATION	// non boolean primitive, get appropriate flavor of zero
WITHOUT_CLASSIFICATION	/*fromType*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// unwrap, etc.
WITHOUT_CLASSIFICATION	// Trying to cast null to primitive type?
WITHOUT_CLASSIFICATION	// can only cast boolean to boolean
WITHOUT_CLASSIFICATION	// Do numeric cast
WITHOUT_CLASSIFICATION	// first promote char to Number type to avoid duplicating code
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - public, extend EvalError
WITHOUT_CLASSIFICATION	// End BeanShell Modification - public, extend EvalError
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - sourceFile
WITHOUT_CLASSIFICATION	// End BeanShell Modification - sourceFile
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	// End BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	// End BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	// End BeanShell Modification - super constructor args
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - moved body to overloaded getMessage()
WITHOUT_CLASSIFICATION	/*strict*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	// End BeanShell Modification - moved body to overloaded getMessage()
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - added debug param
WITHOUT_CLASSIFICATION	// End BeanShell Modification - added debug param
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - added sourceFile info
WITHOUT_CLASSIFICATION	// End BeanShell Modification - added sourceFile info
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - made conditional on debug
WITHOUT_CLASSIFICATION	// End BeanShell Modification - made conditional on debug
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - override error methods and toString
WITHOUT_CLASSIFICATION	// copied from generated getMessage()
WITHOUT_CLASSIFICATION	// End BeanShell Modification - override error methods and toString
WITHOUT_CLASSIFICATION	// skip CR
WITHOUT_CLASSIFICATION	// Test it
WITHOUT_CLASSIFICATION	// for inner classes
WITHOUT_CLASSIFICATION	// Force the class public for now...
WITHOUT_CLASSIFICATION	// Generate the bsh instance 'This' reference holder field
WITHOUT_CLASSIFICATION	// Generate the static bsh static reference holder field
WITHOUT_CLASSIFICATION	// Generate the fields
WITHOUT_CLASSIFICATION	// Generate the constructors
WITHOUT_CLASSIFICATION	// Don't generate private constructors
WITHOUT_CLASSIFICATION	// If no other constructors, generate a default constructor
WITHOUT_CLASSIFICATION	/*index*/
WITHOUT_CLASSIFICATION	// Generate the delegate methods
WITHOUT_CLASSIFICATION	// Don't generate private /*or loosely return typed */ methods
WITHOUT_CLASSIFICATION	/*|| returnType == null*/
WITHOUT_CLASSIFICATION	// map loose return type to Object
WITHOUT_CLASSIFICATION	// Generate method body
WITHOUT_CLASSIFICATION	/*	 * The split config is recorded in a simple RPN "language".	 */
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Get the instance field
WITHOUT_CLASSIFICATION	// Generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	// Push the boolean constant 'true' (for declaredOnly)
WITHOUT_CLASSIFICATION	//{{{ restoreSplitConfig() method
WITHOUT_CLASSIFICATION	// Generate code to push arguments as an object array
WITHOUT_CLASSIFICATION	// Invoke the method This.invokeMethod( name, Class [] sig, boolean )
WITHOUT_CLASSIFICATION	// Generate code to unwrap bsh Primitive types
WITHOUT_CLASSIFICATION	// Generate code to return the value
WITHOUT_CLASSIFICATION	// Create this constructor method
WITHOUT_CLASSIFICATION	/*isStatic*/
WITHOUT_CLASSIFICATION	// Generate the code implementing the alternate constructor switch
WITHOUT_CLASSIFICATION	// Generate code to invoke the ClassGeneratorUtil initInstance() method
WITHOUT_CLASSIFICATION	// push 'this' 
WITHOUT_CLASSIFICATION	// Push the class/constructor name as a constant
WITHOUT_CLASSIFICATION	// Push arguments as an object array
WITHOUT_CLASSIFICATION	// invoke the initInstance() method
WITHOUT_CLASSIFICATION	// push super class name // use superClassName var?
WITHOUT_CLASSIFICATION	// push class static This object
WITHOUT_CLASSIFICATION	// push args
WITHOUT_CLASSIFICATION	// push this constructor index number onto stack
WITHOUT_CLASSIFICATION	// invoke the ClassGeneratorUtil getConstructorsArgs() method
WITHOUT_CLASSIFICATION	// store ConstructorArgs in consArgsVar
WITHOUT_CLASSIFICATION	//{{{ toggleLineSeparator() method
WITHOUT_CLASSIFICATION	// Get the ConstructorArgs selector field from ConstructorArgs
WITHOUT_CLASSIFICATION	// push ConstructorArgs 
WITHOUT_CLASSIFICATION	// start switch
WITHOUT_CLASSIFICATION	/*max*/
WITHOUT_CLASSIFICATION	/*min*/
WITHOUT_CLASSIFICATION	// generate switch body
WITHOUT_CLASSIFICATION	// default branch always invokes no args super // push 'this' 
WITHOUT_CLASSIFICATION	// done with switch
WITHOUT_CLASSIFICATION	//cv.visitLineNumber( index, labels[index] ); // push this before args
WITHOUT_CLASSIFICATION	// Unload the arguments from the ConstructorArgs object
WITHOUT_CLASSIFICATION	// invoke the iterator method on the ConstructorArgs // push the ConstructorArgs
WITHOUT_CLASSIFICATION	// if it's an object type we must do a check cast
WITHOUT_CLASSIFICATION	// invoke the constructor for this branch
WITHOUT_CLASSIFICATION	// Maybe combine this with generateMethod()
WITHOUT_CLASSIFICATION	// map loose return to Object
WITHOUT_CLASSIFICATION	// Add method body
WITHOUT_CLASSIFICATION	// Push vars
WITHOUT_CLASSIFICATION	//long
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// use default super constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*modifiers*/
WITHOUT_CLASSIFICATION	// use default super constructor
WITHOUT_CLASSIFICATION	// Make a tmp namespace to hold the original constructor args for // use in eval of the parameters node
WITHOUT_CLASSIFICATION	// evaluate the args
WITHOUT_CLASSIFICATION	// find the matching super() constructor for the args
WITHOUT_CLASSIFICATION	// find the matching this() constructor for the args
WITHOUT_CLASSIFICATION	// Are we choosing ourselves recursively through a this() reference?
WITHOUT_CLASSIFICATION	// Get the static This reference from the proto-instance
WITHOUT_CLASSIFICATION	// Get the instance initializer block from the static This 
WITHOUT_CLASSIFICATION	/*override*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Create the instance namespace
WITHOUT_CLASSIFICATION	// Set the instance This reference on the instance
WITHOUT_CLASSIFICATION	// Give the instance space its object import
WITHOUT_CLASSIFICATION	// invoke the constructor method from the instanceThis 
WITHOUT_CLASSIFICATION	// Find the constructor (now in the instance namespace)
WITHOUT_CLASSIFICATION	// if args, we must have constructor
WITHOUT_CLASSIFICATION	// Evaluate the constructor
WITHOUT_CLASSIFICATION	/*overrideNameSpace*/
WITHOUT_CLASSIFICATION	/*callerInfo*/
WITHOUT_CLASSIFICATION	// unwrap Primitive.Null to null
WITHOUT_CLASSIFICATION	// right?
WITHOUT_CLASSIFICATION	// unsafe caching of type here
WITHOUT_CLASSIFICATION	// Begin Child node structure evaluated by insureNodesParsed
WITHOUT_CLASSIFICATION	// index of the first throws clause child node
WITHOUT_CLASSIFICATION	// End Child node structure evaluated by insureNodesParsed
WITHOUT_CLASSIFICATION	// there is always a paramsNode
WITHOUT_CLASSIFICATION	// skip throws
WITHOUT_CLASSIFICATION	// skip throws
WITHOUT_CLASSIFICATION	// Unsafe caching of type here. // null (none), Void.TYPE, or a Class
WITHOUT_CLASSIFICATION	// Install an *instance* of this method in the namespace. // See notes in BshMethod 
WITHOUT_CLASSIFICATION	// validate that the throws names are class names
WITHOUT_CLASSIFICATION	// if strictJava mode, check for loose parameters and return type
WITHOUT_CLASSIFICATION	// do nothing - ch already contains correct character
WITHOUT_CLASSIFICATION	// get next character
WITHOUT_CLASSIFICATION	// get next character
WITHOUT_CLASSIFICATION	// check the next two characters
WITHOUT_CLASSIFICATION	// type is either a class name or a primitive type
WITHOUT_CLASSIFICATION	// args is either constructor arguments or array dimensions
WITHOUT_CLASSIFICATION	// Look for scripted class object
WITHOUT_CLASSIFICATION	/* force class*/
WITHOUT_CLASSIFICATION	// Try regular class
WITHOUT_CLASSIFICATION	/*force class*/
WITHOUT_CLASSIFICATION	// Is an inner class style object allocation
WITHOUT_CLASSIFICATION	// No need to wrap this debug
WITHOUT_CLASSIFICATION	// Is it an inner class?
WITHOUT_CLASSIFICATION	// work through to class 'this'
WITHOUT_CLASSIFICATION	/*interfaces*/
WITHOUT_CLASSIFICATION	/*superClass*/
WITHOUT_CLASSIFICATION	/*isInterface*/
WITHOUT_CLASSIFICATION	// statical import fields from the interface so that code inside // can refer to the fields directly (e.g. HEIGHT)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	/* all printable ASCII characters */
WITHOUT_CLASSIFICATION	//SwingUtilities.updateComponentTreeUI(getRootPane()); //}}}
WITHOUT_CLASSIFICATION	//{{{ loadToolBars() method
WITHOUT_CLASSIFICATION	//{{{ createEditPane() method
WITHOUT_CLASSIFICATION	//{{{ setEditPane() method
WITHOUT_CLASSIFICATION	// repaint the gutter so that the border color // reflects the focus state
WITHOUT_CLASSIFICATION	//{{{ handleBufferUpdate() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// zeros
WITHOUT_CLASSIFICATION	// First node is the expression on which to sync
WITHOUT_CLASSIFICATION	// Do the actual synchronization
WITHOUT_CLASSIFICATION	/*filter*/
WITHOUT_CLASSIFICATION	/*				Evaluate block in two passes: 				First do class declarations then do everything else.			*/
WITHOUT_CLASSIFICATION	// filter nodes
WITHOUT_CLASSIFICATION	// statement or embedded block evaluated a return statement
WITHOUT_CLASSIFICATION	// make sure we put the namespace back when we leave.
WITHOUT_CLASSIFICATION	/*		Our children are a prefix expression and any number of suffixes.		<p>		We don't eval() any nodes until the suffixes have had an		opportunity to work through them.  This lets the suffixes decide		how to interpret an ambiguous name (e.g. for the .class operation).	*/
WITHOUT_CLASSIFICATION	/*			If the result is a Node eval() it to an object or LHS			(as determined by toLHS)		*/
WITHOUT_CLASSIFICATION	// Some arbitrary kind of node
WITHOUT_CLASSIFICATION	// return LHS or value object as determined by toLHS
WITHOUT_CLASSIFICATION	// Type node is passed down the chain for array initializers // which need it under some circumstances
WITHOUT_CLASSIFICATION	// import the package we're in by default...
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// field access
WITHOUT_CLASSIFICATION	/*		Field access, .length on array, or a method invocation		Must handle toLHS case for each.	*/
WITHOUT_CLASSIFICATION	// .length on array
WITHOUT_CLASSIFICATION	// Property style access to Hashtable or Map
WITHOUT_CLASSIFICATION	// ++ and -- must be cast back the original type
WITHOUT_CLASSIFICATION	// Method invocation // (LHS or non LHS evaluation can both encounter method calls)
WITHOUT_CLASSIFICATION	/*key*/
WITHOUT_CLASSIFICATION	//public SimpleNode getParent() { return (SimpleNode)parent; }
WITHOUT_CLASSIFICATION	/*		Override this method if you want to customize how the node dumps		out its children.	*/
WITHOUT_CLASSIFICATION	//  ---- BeanShell specific stuff hereafter ----  //
WITHOUT_CLASSIFICATION	// If this is a unary increment of decrement (either pre or postfix) // then we need an LHS to which to assign the result.  Otherwise // just do the unary operation for the value.
WITHOUT_CLASSIFICATION	// resolve superclass if any
WITHOUT_CLASSIFICATION	// Get interfaces
WITHOUT_CLASSIFICATION	// Get the class body BSHBlock
WITHOUT_CLASSIFICATION	/*		type = VARIABLE;		this.varName = varName;		this.nameSpace = nameSpace;*/
WITHOUT_CLASSIFICATION	// Set the variable in namespace according to localVar flag
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// pass along target error
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// General case - performe the instanceof based on assignability
WITHOUT_CLASSIFICATION	/*			Look ahead and short circuit evaluation of the rhs if:				we're a boolean AND and the lhs is false.		*/
WITHOUT_CLASSIFICATION	/*			Look ahead and short circuit evaluation of the rhs if:				we're a boolean AND and the lhs is false.		*/
WITHOUT_CLASSIFICATION	// end stuff that was tacked on for boolean short-circuiting.
WITHOUT_CLASSIFICATION	/*			Are both the lhs and rhs either wrappers or primitive values?			do binary op		*/
WITHOUT_CLASSIFICATION	// Special case for EQ on two wrapper objects
WITHOUT_CLASSIFICATION	/*  					Don't auto-unwrap wrappers (preserve identity semantics)					FALL THROUGH TO OBJECT OPERATIONS BELOW.				*/
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// lazy instantiation
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// fix for the bug where key events in JTextComponents // inside views are also handled by the input handler
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ WindowHandler class
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ handleEditPaneUpdate() method
WITHOUT_CLASSIFICATION	//{{{ updateGutterBorders() method
WITHOUT_CLASSIFICATION	//{{{ _preprocessKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ CaretHandler class
WITHOUT_CLASSIFICATION	//{{{ FocusHandler class
WITHOUT_CLASSIFICATION	// walk up hierarchy, looking for an EditPane
WITHOUT_CLASSIFICATION	//{{{ ScrollHandler class
WITHOUT_CLASSIFICATION	// People have reported hangs with JDK 1.4; might be // caused by modal dialogs being displayed from // windowActivated()
WITHOUT_CLASSIFICATION	//{{{ ViewConfig class
WITHOUT_CLASSIFICATION	// dockables
WITHOUT_CLASSIFICATION	// this constructor keys the hash table
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getAction() method
WITHOUT_CLASSIFICATION	//{{{ getActionNames() method
WITHOUT_CLASSIFICATION	//{{{ addActionSet() method
WITHOUT_CLASSIFICATION	//{{{ removeActionSet() method
WITHOUT_CLASSIFICATION	//{{{ getActionSets() method
WITHOUT_CLASSIFICATION	//{{{ getActionSetForAction() method
WITHOUT_CLASSIFICATION	//{{{ loadServices() method
WITHOUT_CLASSIFICATION	//{{{ invokeAction() method
WITHOUT_CLASSIFICATION	//{{{ unloadServices() method
WITHOUT_CLASSIFICATION	//{{{ registerService() method
WITHOUT_CLASSIFICATION	// this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ registerService() method
WITHOUT_CLASSIFICATION	//{{{ unregisterService() method
WITHOUT_CLASSIFICATION	//{{{ getServiceTypes() method
WITHOUT_CLASSIFICATION	//{{{ getServiceNames() method
WITHOUT_CLASSIFICATION	//{{{ getService() method
WITHOUT_CLASSIFICATION	// unknown service - <clazz,name> not in table
WITHOUT_CLASSIFICATION	//{{{ Descriptor class
WITHOUT_CLASSIFICATION	// avoid re-running script if it gives // us null
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// this constructor keys the hash table
WITHOUT_CLASSIFICATION	// this constructor is the value of the hash table
WITHOUT_CLASSIFICATION	// lazy instantiation
WITHOUT_CLASSIFICATION	// avoid re-running script if it gives // us null
WITHOUT_CLASSIFICATION	//{{{ EditServer constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ IOProgressMonitor constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	//{{{ ErrorListCellRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ getListCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ ErrorEntry class
WITHOUT_CLASSIFICATION	//{{{ ErrorListDialog constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ EditPane constructor
WITHOUT_CLASSIFICATION	//{{{ close() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ handleBufferUpdate() method
WITHOUT_CLASSIFICATION	//{{{ isX11() method
WITHOUT_CLASSIFICATION	// Set up the right-click popup menu
WITHOUT_CLASSIFICATION	//{{{ getScreenBounds() method
WITHOUT_CLASSIFICATION	// use old property name for backwards compatibility
WITHOUT_CLASSIFICATION	//{{{ getScreenBounds() method
WITHOUT_CLASSIFICATION	//{{{ loadBufferSwitcher() method
WITHOUT_CLASSIFICATION	// Don't add duplicates
WITHOUT_CLASSIFICATION	/* When closing the last buffer, the BufferUpdate.CLOSED			 * handler doesn't call setBuffer(), because null buffers			 * are not supported. Instead, it waits for the subsequent			 * 'Untitled' file creation. */
WITHOUT_CLASSIFICATION	//shadow size
WITHOUT_CLASSIFICATION	//shadow size
WITHOUT_CLASSIFICATION	//{{{ isDOSDerived() method
WITHOUT_CLASSIFICATION	// Pick screen with largest intersection
WITHOUT_CLASSIFICATION	//{{{ isOS2() method
WITHOUT_CLASSIFICATION	// Make adjustments for some OS's
WITHOUT_CLASSIFICATION	//{{{ isWindows() method
WITHOUT_CLASSIFICATION	// Yay, we're finally there
WITHOUT_CLASSIFICATION	//{{{ getMarkers() method
WITHOUT_CLASSIFICATION	//{{{ isWindows9x() method
WITHOUT_CLASSIFICATION	//{{{ isUnix() method
WITHOUT_CLASSIFICATION	//{{{ isWindowsNT() method
WITHOUT_CLASSIFICATION	//{{{ indentLines() method
WITHOUT_CLASSIFICATION	//{{{ isMacOS() method
WITHOUT_CLASSIFICATION	// Do it
WITHOUT_CLASSIFICATION	//{{{ indentLines() method
WITHOUT_CLASSIFICATION	//{{{ Get properties
WITHOUT_CLASSIFICATION	//{{{ indentLine() method
WITHOUT_CLASSIFICATION	//{{{ indentLine() method
WITHOUT_CLASSIFICATION	//{{{ getCurrentIndentForLine() method
WITHOUT_CLASSIFICATION	//{{{ getIdealIndentForLine() method
WITHOUT_CLASSIFICATION	//{{{ Get indent attributes of previous line
WITHOUT_CLASSIFICATION	//{{{ getFile() method
WITHOUT_CLASSIFICATION	//{{{ createPosition() method
WITHOUT_CLASSIFICATION	//{{{ Deprecated methods
WITHOUT_CLASSIFICATION	//{{{ markTokens() method
WITHOUT_CLASSIFICATION	//{{{ Handle brackets
WITHOUT_CLASSIFICATION	//{{{ Get indent attributes for current line
WITHOUT_CLASSIFICATION	//{{{ putBooleanProperty() method
WITHOUT_CLASSIFICATION	// Additional bracket indent // For lining up closing // and opening brackets
WITHOUT_CLASSIFICATION	//{{{ Handle regexps
WITHOUT_CLASSIFICATION	//{{{ Deep indenting
WITHOUT_CLASSIFICATION	//{{{ isFoldStart() method
WITHOUT_CLASSIFICATION	// no parenthesis on previous line (prevLineParenWeight == 0) so the normal indenting rules are used
WITHOUT_CLASSIFICATION	//{{{ getRootElements() method
WITHOUT_CLASSIFICATION	// If the previous line matches indentNextLine or indentNextLines, // add a level of indent
WITHOUT_CLASSIFICATION	//{{{ getLineParenWeight() method
WITHOUT_CLASSIFICATION	//{{{ getParagraphElement() method
WITHOUT_CLASSIFICATION	//{{{ putProperty() method
WITHOUT_CLASSIFICATION	//{{{ isFoldEnd() method
WITHOUT_CLASSIFICATION	// for backwards compatibility
WITHOUT_CLASSIFICATION	//{{{ setFoldHandler() method
WITHOUT_CLASSIFICATION	//{{{ getDefaultRootElement() method
WITHOUT_CLASSIFICATION	//{{{ invalidateCachedFoldLevels() method
WITHOUT_CLASSIFICATION	//{{{ getCurrentIdentForLine() method
WITHOUT_CLASSIFICATION	//{{{ Folding methods
WITHOUT_CLASSIFICATION	//{{{ Position methods
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ getFoldAtLine() method
WITHOUT_CLASSIFICATION	//{{{ Marker methods
WITHOUT_CLASSIFICATION	//{{{ getFoldHandler() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ commitTemporary() method
WITHOUT_CLASSIFICATION	//{{{ getMarker() method
WITHOUT_CLASSIFICATION	// notify clients with -wait
WITHOUT_CLASSIFICATION	//Log.log(Log.ERROR,this,io);
WITHOUT_CLASSIFICATION	//{{{ close() method
WITHOUT_CLASSIFICATION	// don't sort markers while buffer is being loaded
WITHOUT_CLASSIFICATION	//{{{ getMarkerStatusPrompt() method
WITHOUT_CLASSIFICATION	//{{{ checkFileForLoad() method
WITHOUT_CLASSIFICATION	//{{{ addOrRemoveMarker() method
WITHOUT_CLASSIFICATION	//{{{ getMarkerInRange() method
WITHOUT_CLASSIFICATION	//{{{ addMarker() method
WITHOUT_CLASSIFICATION	// this must be called before any EditBus messages are sent
WITHOUT_CLASSIFICATION	//{{{ getMarkerAtLine() method
WITHOUT_CLASSIFICATION	//{{{ resetCachedProperties() method
WITHOUT_CLASSIFICATION	//{{{ removeMarker() method
WITHOUT_CLASSIFICATION	/* Magic: UNTITLED is only set if newFile param to		 * constructor is set, NEW_FILE is also set if file		 * doesn't exist on disk.		 *		 * This is so that we can tell apart files created		 * with jEdit.newFile(), and those that just don't		 * exist on disk.		 *		 * Why do we need to tell the difference between the		 * two? jEdit.addBufferToList() checks if the only		 * opened buffer is an untitled buffer, and if so,		 * replaces it with the buffer to add. We don't want		 * this behavior to occur with files that don't		 * exist on disk; only untitled ones.		 */
WITHOUT_CLASSIFICATION	//{{{ removeAllMarkers() method
WITHOUT_CLASSIFICATION	// Display
WITHOUT_CLASSIFICATION	//{{{ Flags
WITHOUT_CLASSIFICATION	//{{{ finishSaving() method
WITHOUT_CLASSIFICATION	//{{{ setFlag() method
WITHOUT_CLASSIFICATION	//{{{ setPath() method
WITHOUT_CLASSIFICATION	//{{{ getFlag() method
WITHOUT_CLASSIFICATION	//{{{ checkFileForSave() method
WITHOUT_CLASSIFICATION	//{{{ Flag values
WITHOUT_CLASSIFICATION	//{{{ recoverAutosave() method
WITHOUT_CLASSIFICATION	// this method might get called at startup
WITHOUT_CLASSIFICATION	//{{{ fireTransactionComplete() method
WITHOUT_CLASSIFICATION	//{{{ finishLoading() method
WITHOUT_CLASSIFICATION	// Create marker positions
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ setTokenMarker() method
WITHOUT_CLASSIFICATION	// if we don't do this, the autosave file won't be // deleted after a save as
WITHOUT_CLASSIFICATION	// Need to reset properties that were cached defaults, // since the defaults might have changed.
WITHOUT_CLASSIFICATION	// on a reload, the fold handler doesn't change, but // we still need to re-collapse folds. // don't do this on initial fold handler creation
WITHOUT_CLASSIFICATION	// show this message when all I/O requests are // complete
WITHOUT_CLASSIFICATION	/* if we save a file with the same name as one				 * that's already open, we presume that we can				 * close the existing file, since the user				 * would have confirmed the overwrite in the				 * 'save as' dialog box anyway */
WITHOUT_CLASSIFICATION	/* can't happen? */
WITHOUT_CLASSIFICATION	/* can't happen? */
WITHOUT_CLASSIFICATION	/* if we saved over an already open file using				 * 'save a copy as', then reload the existing				 * buffer */
WITHOUT_CLASSIFICATION	//{{{ Update this buffer for the new path
WITHOUT_CLASSIFICATION	// this ensures that undo can clear // the dirty flag properly when all // edits up to a save are undone
WITHOUT_CLASSIFICATION	// if user adds mode buffer-local property
WITHOUT_CLASSIFICATION	// new message type introduced in 4.0pre4
WITHOUT_CLASSIFICATION	//{{{ parseBufferLocalProperties() method
WITHOUT_CLASSIFICATION	//{{{ parseBufferLocalProperties() method
WITHOUT_CLASSIFICATION	// first line for last 10 lines, make sure not to overlap // with the first 10
WITHOUT_CLASSIFICATION	// use the low-level property setting code // so that if we have a buffer-local // property with the same value as a default, // later changes in the default don't affect // the buffer-local property
WITHOUT_CLASSIFICATION	// don't do this on initial token marker
WITHOUT_CLASSIFICATION	//{{{ getPriorNonEmptyLine() method
WITHOUT_CLASSIFICATION	// didn't find a line that contains non-whitespace chars // so return index of prior whitespace line
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ Event firing methods
WITHOUT_CLASSIFICATION	//{{{ getListener() method
WITHOUT_CLASSIFICATION	//{{{ fireFoldLevelChanged() method
WITHOUT_CLASSIFICATION	//{{{ fireContentInserted() method
WITHOUT_CLASSIFICATION	//{{{ fireContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ firePreContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ fireFoldHandlerChanged() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// end HandlerBase implementation
WITHOUT_CLASSIFICATION	// so you the avid code reader should use MODES as the // DOCTYPE instead, but we still let old catalogs through // to avoid annoying users.
WITHOUT_CLASSIFICATION	// older jEdit versions used a DOCTYPE of CATALOG, which // is incorrect since the DOCTYPE must be the name of the // root element, which is MODES.
WITHOUT_CLASSIFICATION	// 1 because we've already 'seen' the first bracket
WITHOUT_CLASSIFICATION	//{{{ findMatchingBracket() method
WITHOUT_CLASSIFICATION	// to avoid slowdown with large files; only scan 10000 lines either way
WITHOUT_CLASSIFICATION	//{{{ Forward search
WITHOUT_CLASSIFICATION	//{{{ getTokenAtOffset() method
WITHOUT_CLASSIFICATION	// corresponding character // false - backwards, true - forwards
WITHOUT_CLASSIFICATION	//}}} //{{{ Backward search
WITHOUT_CLASSIFICATION	// Get the syntax token at 'offset' // only tokens with the same type will be checked for // the corresponding bracket
WITHOUT_CLASSIFICATION	// Nothing found
WITHOUT_CLASSIFICATION	//{{{ Go on to next line
WITHOUT_CLASSIFICATION	//{{{ Go on to previous line
WITHOUT_CLASSIFICATION	//{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	//{{{ findWordStart() method
WITHOUT_CLASSIFICATION	//{{{ findWordStart() method
WITHOUT_CLASSIFICATION	//{{{ findWordStart() method
WITHOUT_CLASSIFICATION	//{{{ the character under the cursor changes how we behave.
WITHOUT_CLASSIFICATION	//{{{ Whitespace...
WITHOUT_CLASSIFICATION	//{{{ Whitespace...
WITHOUT_CLASSIFICATION	// only select other whitespace in this case
WITHOUT_CLASSIFICATION	// only select other whitespace in this case
WITHOUT_CLASSIFICATION	// word char or symbol; stop
WITHOUT_CLASSIFICATION	//}}} //{{{ Word character...
WITHOUT_CLASSIFICATION	// word char; keep going
WITHOUT_CLASSIFICATION	// whitespace; include in word if eating
WITHOUT_CLASSIFICATION	// whitespace; include in word if eating
WITHOUT_CLASSIFICATION	//}}} //{{{ Symbol...
WITHOUT_CLASSIFICATION	//{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	//{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	//{{{ findWordEnd() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	// whitespace; include in word if eating
WITHOUT_CLASSIFICATION	//}}} //{{{ Symbol...
WITHOUT_CLASSIFICATION	// align everything to paragraph's leading indent
WITHOUT_CLASSIFICATION	// if we see whitespace, set flag.
WITHOUT_CLASSIFICATION	//{{{ tabsToSpaces() method
WITHOUT_CLASSIFICATION	//{{{ spacesToTabs() method
WITHOUT_CLASSIFICATION	//{{{ createEncodingMenu() method
WITHOUT_CLASSIFICATION	//{{{ format() method
WITHOUT_CLASSIFICATION	//{{{ BrowserCommandsMenu constructor
WITHOUT_CLASSIFICATION	//{{{ getStringCase() method
WITHOUT_CLASSIFICATION	// set rename to false if > 1 file selected
WITHOUT_CLASSIFICATION	//{{{ toTitleCase() method
WITHOUT_CLASSIFICATION	/* all good */
WITHOUT_CLASSIFICATION	//{{{ formatParagraph() method
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	// show 'close' item if at least one selected // file is currently open
WITHOUT_CLASSIFICATION	// this will disable most operations if // files of multiple types are selected
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ createMenuItem() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getIconForFile() method
WITHOUT_CLASSIFICATION	//{{{ FileCellRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ getIconForFile() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getEntryWidth() method
WITHOUT_CLASSIFICATION	//{{{ ExpansionToggleBorder class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ ExpansionToggleBorder constructor
WITHOUT_CLASSIFICATION	//{{{ isExpansionToggle() method
WITHOUT_CLASSIFICATION	//setColumnSelectionAllowed(true); //setCellSelectionEnabled(false);
WITHOUT_CLASSIFICATION	//{{{ paintBorder() method
WITHOUT_CLASSIFICATION	//{{{ VFSDirectoryEntryTable constructor
WITHOUT_CLASSIFICATION	//{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	//{{{ isBorderOpaque() method
WITHOUT_CLASSIFICATION	//{{{ selectFile() method
WITHOUT_CLASSIFICATION	/* TableColumn col1 = getColumnModel().getColumn(0);		col1.setMinWidth(20);		col1.setMaxWidth(20);		col1.setPreferredWidth(20); */
WITHOUT_CLASSIFICATION	//{{{ setDirectory() method
WITHOUT_CLASSIFICATION	//{{{ getExpandedDirectories() method
WITHOUT_CLASSIFICATION	//{{{ doTypeSelect() method
WITHOUT_CLASSIFICATION	//{{{ doTypeSelect() method
WITHOUT_CLASSIFICATION	//{{{ scrollRectToVisible() method
WITHOUT_CLASSIFICATION	//{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ toggleExpanded() method
WITHOUT_CLASSIFICATION	// avoid scrolling to the right
WITHOUT_CLASSIFICATION	//{{{ setSelectedRow() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ run() method
WITHOUT_CLASSIFICATION	//{{{ expand() method
WITHOUT_CLASSIFICATION	//{{{ resizeColumnsAppropriately() method
WITHOUT_CLASSIFICATION	//{{{ delete() method
WITHOUT_CLASSIFICATION	//{{{ ClearTypeSelect class
WITHOUT_CLASSIFICATION	//{{{ getExtendedAttribute() method
WITHOUT_CLASSIFICATION	//{{{ Request types
WITHOUT_CLASSIFICATION	//{{{ rename() method
WITHOUT_CLASSIFICATION	//{{{ BrowserIORequest constructor
WITHOUT_CLASSIFICATION	/* fireTableRowsInserted(startIndex + 1,				startIndex + list.size() + 1); */
WITHOUT_CLASSIFICATION	//{{{ listDirectory() method
WITHOUT_CLASSIFICATION	// allow user to change name // case
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ mkdir() method
WITHOUT_CLASSIFICATION	/* fireTableRowsUpdated(startIndex,startIndex); */
WITHOUT_CLASSIFICATION	//{{{ VFSDirectoryEntryTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ setRoot() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ collapse() method
WITHOUT_CLASSIFICATION	//{{{ addExtendedAttributes() method
WITHOUT_CLASSIFICATION	/* fireTableRowsUpdated(index,index);		fireTableRowsDeleted(index + 1,lastIndex); */
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ removeExtendedAttributes() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	//{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ showFilePopup() method
WITHOUT_CLASSIFICATION	// this vfs has an extended attribute which is not // in the list. add it to the end with a ref count // of 1
WITHOUT_CLASSIFICATION	// this vfs has an extended attribute which is not // in the list ???
WITHOUT_CLASSIFICATION	// we no longer have any // dirs using this extended // attribute
WITHOUT_CLASSIFICATION	//{{{ BrowserView constructor
WITHOUT_CLASSIFICATION	// how deeply we are nested
WITHOUT_CLASSIFICATION	//{{{ clearExpansionState() method
WITHOUT_CLASSIFICATION	//{{{ ExtendedAttribute class
WITHOUT_CLASSIFICATION	//{{{ focusOnFileView() method
WITHOUT_CLASSIFICATION	/* reference counter allows us to remove a column from		 * the table when no directory using this column is		 * visible */
WITHOUT_CLASSIFICATION	//{{{ updateFileView() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ loadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ selectNone() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ saveExpansionState() method
WITHOUT_CLASSIFICATION	//{{{ directoryLoaded() method
WITHOUT_CLASSIFICATION	//{{{ getBrowser() method
WITHOUT_CLASSIFICATION	//{{{ If reloading root, update parent directory list
WITHOUT_CLASSIFICATION	// for the parent directory right-click; on the click we select // the clicked item, but when the popup goes away we select the // currently showing directory.
WITHOUT_CLASSIFICATION	//{{{ getTable() method
WITHOUT_CLASSIFICATION	//{{{ getParentDirectoryList() method
WITHOUT_CLASSIFICATION	// we use SwingUtilities.invokeLater() // so that the action is executed before // the popup is hidden.
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	// so that it doesn't resize...
WITHOUT_CLASSIFICATION	// because this method is called for *every* VFS update, // we don't want to scan the tree all the time. So we // use the following algorithm to determine if the path // might be part of the tree: // - if the path starts with the browser's current directory, //   we do the tree scan // - if the browser's directory is 'favorites:' -- we have to //   do the tree scan, as every path can appear under the //   favorites list // - if the browser's directory is 'roots:' and path is on //   the local filesystem, do a tree scan
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	/* nothing */
WITHOUT_CLASSIFICATION	//{{{ doComplete() method
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	//{{{ VFSFileNameField constructor
WITHOUT_CLASSIFICATION	//{{{ VFSFileChooserDialog constructor
WITHOUT_CLASSIFICATION	// fix for bug #765507 // we don't type complete in save dialog // boxes. Press TAB to do an explicit // complete
WITHOUT_CLASSIFICATION	// fix for bug #765507 // we don't type complete in save dialog // boxes. Press TAB to do an explicit // complete
WITHOUT_CLASSIFICATION	//{{{ goToParent() method
WITHOUT_CLASSIFICATION	//{{{ BrowserHandler class
WITHOUT_CLASSIFICATION	//{{{ BackspaceAction class
WITHOUT_CLASSIFICATION	/* browser.getBrowserView().getTable().addKeyListener(new KeyHandler()); */
WITHOUT_CLASSIFICATION	//String filename = filenameField.getText();
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ doFileExistsWarning() method
WITHOUT_CLASSIFICATION	//{{{ filesSelected() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ getActionContext() method
WITHOUT_CLASSIFICATION	//{{{ getMode() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ filesActivated() method
WITHOUT_CLASSIFICATION	// non-existent file
WITHOUT_CLASSIFICATION	// user pressed enter when the vfs table or // file name field has focus, with nothing // selected.
WITHOUT_CLASSIFICATION	//{{{ progressUpdate() method
WITHOUT_CLASSIFICATION	//{{{ WorkThreadListener class
WITHOUT_CLASSIFICATION	//{{{ statusUpdate() method
WITHOUT_CLASSIFICATION	//{{{ GetFileTypeRequest class
WITHOUT_CLASSIFICATION	// because its preferred size can be quite wide, we // don't want it to make the browser way too big, // so set the preferred width to 0.
WITHOUT_CLASSIFICATION	//{{{ Browser types
WITHOUT_CLASSIFICATION	//{{{ browseDirectoryInNewWindow() method
WITHOUT_CLASSIFICATION	//{{{ VFSBrowser constructor
WITHOUT_CLASSIFICATION	//{{{ VFSBrowser constructor
WITHOUT_CLASSIFICATION	//{{{ browseDirectory() method
WITHOUT_CLASSIFICATION	// see VFSBrowser.browseDirectory()
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	// unknown value??!!!
WITHOUT_CLASSIFICATION	//{{{ isMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ newFile() method
WITHOUT_CLASSIFICATION	//{{{ getDirectory() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedFiles() method
WITHOUT_CLASSIFICATION	//{{{ setDirectory() method
WITHOUT_CLASSIFICATION	//{{{ delete() method
WITHOUT_CLASSIFICATION	//{{{ rename() method
WITHOUT_CLASSIFICATION	//{{{ mkdir() method
WITHOUT_CLASSIFICATION	//{{{ directoryLoaded() method
WITHOUT_CLASSIFICATION	//{{{ filesSelected() method
WITHOUT_CLASSIFICATION	// used by FTP plugin to clear directory cache
WITHOUT_CLASSIFICATION	//{{{ isHorizontalLayout() method
WITHOUT_CLASSIFICATION	//{{{ setShowHiddenFiles() method
WITHOUT_CLASSIFICATION	//{{{ getShowHiddenFiles() method
WITHOUT_CLASSIFICATION	//{{{ locateFile() method
WITHOUT_CLASSIFICATION	//{{{ getFilenameFilter() method
WITHOUT_CLASSIFICATION	// if a directory is selected, create new dir in there. // if a file is selected, create new dir inside its parent.
WITHOUT_CLASSIFICATION	//{{{ setFilenameFilter() method
WITHOUT_CLASSIFICATION	//{{{ getDirectoryField() method
WITHOUT_CLASSIFICATION	// path is the currently viewed directory in the browser
WITHOUT_CLASSIFICATION	//{{{ rootDirectory() method
WITHOUT_CLASSIFICATION	//{{{ addBrowserListener() method
WITHOUT_CLASSIFICATION	//{{{ reloadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ searchInDirectory() method
WITHOUT_CLASSIFICATION	//{{{ searchInDirectory() method
WITHOUT_CLASSIFICATION	//{{{ removeBrowserListener() method
WITHOUT_CLASSIFICATION	//{{{ getBrowserView() method
WITHOUT_CLASSIFICATION	//{{{ pathsEqual() method
WITHOUT_CLASSIFICATION	//{{{ updateFilenameFilter() method
WITHOUT_CLASSIFICATION	//{{{ endRequest() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ maybeReloadDirectory() method
WITHOUT_CLASSIFICATION	/* We do this stuff because the browser is not able to handle	 * more than one request yet */
WITHOUT_CLASSIFICATION	// close if this buffer is currently // visible in the view.
WITHOUT_CLASSIFICATION	// if a file is selected in OPEN_DIALOG or // SAVE_DIALOG mode, just let the listener(s) // handle it
WITHOUT_CLASSIFICATION	//{{{ updatePopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ createMenuBar() method
WITHOUT_CLASSIFICATION	//{{{ startRequest() method
WITHOUT_CLASSIFICATION	//{{{ createToolBar() method
WITHOUT_CLASSIFICATION	//Log.log(Log.WARNING,this,"VFS update: request already in progress");
WITHOUT_CLASSIFICATION	//{{{ CommandsMenuButton class
WITHOUT_CLASSIFICATION	// dump stack trace for debugging purposes
WITHOUT_CLASSIFICATION	// save a file -> sends vfs update. if a VFS file dialog box // is shown from the same event frame as the save, the // VFSUpdate will be delivered before the directory is loaded, // and before the path is set.
WITHOUT_CLASSIFICATION	//{{{ updateFilterEnabled() method
WITHOUT_CLASSIFICATION	//{{{ PluginsMenuButton class
WITHOUT_CLASSIFICATION	//{{{ CommandsMenuButton constructor
WITHOUT_CLASSIFICATION	/* we're in a modal dialog */
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ PluginsMenuButton constructor
WITHOUT_CLASSIFICATION	//{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ FavoritesMenuButton class
WITHOUT_CLASSIFICATION	//{{{ old API
WITHOUT_CLASSIFICATION	//{{{ DirectoryLoadedAWTRequest class
WITHOUT_CLASSIFICATION	//{{{ new API
WITHOUT_CLASSIFICATION	//{{{ FavoritesMenuButton constructor
WITHOUT_CLASSIFICATION	// This is the new, canonical path
WITHOUT_CLASSIFICATION	// there was an error
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,BufferHistory.class,fnf);
WITHOUT_CLASSIFICATION	/* to avoid data loss, only do this if the above			 * completed successfully */
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	// if any directories are selected, add // them, otherwise add current directory
WITHOUT_CLASSIFICATION	// ensure consistent history; // eg we don't want both // foo/ and foo
WITHOUT_CLASSIFICATION	// to notify listeners that any existing // selection has been deactivated
WITHOUT_CLASSIFICATION	// turns out under some circumstances this // method can switch the current buffer in // BROWSER mode.
WITHOUT_CLASSIFICATION	// in any case, this is only needed for the // directory chooser (why?), so we add a // check. otherwise poor Rick will go insane.
WITHOUT_CLASSIFICATION	//{{{ BrowserActionContext class
WITHOUT_CLASSIFICATION	// in the future we will want something better, // eg. having an 'evt' object passed to // EditAction.invoke().
WITHOUT_CLASSIFICATION	// for now, since all browser actions are // written in beanshell we set the 'browser' // variable directly.
WITHOUT_CLASSIFICATION	// I guess ideally all browsers // should have views, but since they // don't, we just use the active view // in that case, since some actions // depend on a view being there and // I don't want to add checks to // them all
WITHOUT_CLASSIFICATION	//{{{ getListModel() method
WITHOUT_CLASSIFICATION	//{{{ changed() method
WITHOUT_CLASSIFICATION	// compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	// strings might be equal!
WITHOUT_CLASSIFICATION	// no duplicates, check for all-whitespace string
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ read() method
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ run() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ KillRingHandler class
WITHOUT_CLASSIFICATION	// we don't want duplicate // entries in the kill ring
WITHOUT_CLASSIFICATION	//{{{ RingListModel class
WITHOUT_CLASSIFICATION	// we don't want duplicate entries // in the kill ring
WITHOUT_CLASSIFICATION	// True if a \n was read after a \r. Usually // means this is a DOS/Windows file
WITHOUT_CLASSIFICATION	//{{{ BufferIORequest constructor
WITHOUT_CLASSIFICATION	//{{{ Constants
WITHOUT_CLASSIFICATION	// auto-detect encoding within the gzip stream.
WITHOUT_CLASSIFICATION	// do not reset the stream and just treat it // like a normal UTF-8 file.
WITHOUT_CLASSIFICATION	/* we guess an initial size for the array */
WITHOUT_CLASSIFICATION	// only true if the file size is known
WITHOUT_CLASSIFICATION	// if the file size is not known, start with a resonable // default buffer size
WITHOUT_CLASSIFICATION	// Number of characters in 'buf' array. // InputStream.read() doesn't always fill the // array (eg, the file size is not a multiple of // IOBUFSIZE, or it is a GZipped file, etc)
WITHOUT_CLASSIFICATION	// A \r was read, hence a MacOS file
WITHOUT_CLASSIFICATION	// Was the previous read character a \r? // If we read a \n and this is true, we assume // we have a DOS/Windows file
WITHOUT_CLASSIFICATION	// If we read a \r and // lastWasCR is also true, // it is probably a Mac file // (\r\r in stream)
WITHOUT_CLASSIFICATION	// Number of lines read. Every 100 lines, we update the // progress bar
WITHOUT_CLASSIFICATION	// Offset of previous line, relative to // the start of the I/O buffer (NOT // relative to the start of the document)
WITHOUT_CLASSIFICATION	// Look for line endings.
WITHOUT_CLASSIFICATION	// Otherwise set a flag, // so that \n knows that last // was a \r
WITHOUT_CLASSIFICATION	// This is i+1 to take the // trailing \n into account
WITHOUT_CLASSIFICATION	// Insert a line
WITHOUT_CLASSIFICATION	// If lastWasCR is true, // we just read a \r followed // by a \n. We specify that // this is a Windows file, // but take no further // action and just ignore // the \r.
WITHOUT_CLASSIFICATION	// Bump lastLine so // that the next line // doesn't erronously // pick up the \r
WITHOUT_CLASSIFICATION	// Otherwise, we found a \n // that follows some other // character, hence we have // a Unix file
WITHOUT_CLASSIFICATION	// If we find some other // character that follows // a \r, so it is not a // Windows file, and probably // a Mac file
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ write() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	// For `reload' command
WITHOUT_CLASSIFICATION	//{{{ autosave() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ beginCompoundEdit() method
WITHOUT_CLASSIFICATION	//{{{ endCompoundEdit() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	// Chop trailing newline and/or ^Z (if any)
WITHOUT_CLASSIFICATION	// Add remaining stuff from buffer
WITHOUT_CLASSIFICATION	// the entire save operation can be aborted...
WITHOUT_CLASSIFICATION	// to avoid having to deal with read/write locks and such, // we insert the loaded data into the buffer in the // post-load cleanup runnable, which runs in the AWT thread.
WITHOUT_CLASSIFICATION	/* DOS ^Z */
WITHOUT_CLASSIFICATION	//{{{ readMarkers() method
WITHOUT_CLASSIFICATION	// add a line marker at the end for proper offset manager // operation
WITHOUT_CLASSIFICATION	// used in insert()
WITHOUT_CLASSIFICATION	// the entire save operation can be aborted...
WITHOUT_CLASSIFICATION	/* if the VFS supports renaming files, we first			 * save to #<filename>#save#, then rename that			 * to <filename>, so that if the save fails,			 * data will not be lost.			 *			 * as of 4.1pre7 we now call vfs.getTwoStageSaveName()			 * instead of constructing the path directly			 * since some VFS's might not allow # in filenames.			 */
WITHOUT_CLASSIFICATION	//buffer.readLock();
WITHOUT_CLASSIFICATION	// Only backup once per session
WITHOUT_CLASSIFICATION	// this must be after the stream is created or // we deadlock with SSHTools.
WITHOUT_CLASSIFICATION	// We only save markers to VFS's that support deletion. // Otherwise, we will accumilate stale marks files.
WITHOUT_CLASSIFICATION	// Can't use buffer.getName() here because // it is not changed until the save is // complete
WITHOUT_CLASSIFICATION	//buffer.readUnlock();
WITHOUT_CLASSIFICATION	//{{{ writeMarkers() method
WITHOUT_CLASSIFICATION	// buffer has been saved while we // were waiting.
WITHOUT_CLASSIFICATION	//{{{ setLimit() method
WITHOUT_CLASSIFICATION	// not supported by Java...
WITHOUT_CLASSIFICATION	//{{{ UndoManager constructor
WITHOUT_CLASSIFICATION	/* we don't do this in Buffer.insert() so that				   we can insert multiple files at once */
WITHOUT_CLASSIFICATION	//{{{ clear() method
WITHOUT_CLASSIFICATION	/* nothing done between begin/end calls */
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ bufferSaved() method
WITHOUT_CLASSIFICATION	//{{{ Remove class
WITHOUT_CLASSIFICATION	//{{{ Remove constructor
WITHOUT_CLASSIFICATION	//{{{ Remove constructor
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ undo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ redo() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	// queue of undos. last is most recent, first is oldest
WITHOUT_CLASSIFICATION	//{{{ Insert class
WITHOUT_CLASSIFICATION	// queue of redos. first is most recent, last is oldest
WITHOUT_CLASSIFICATION	//{{{ addEdit() method
WITHOUT_CLASSIFICATION	//{{{ Insert constructor
WITHOUT_CLASSIFICATION	//{{{ getMergeEdit() method
WITHOUT_CLASSIFICATION	//{{{ Insert constructor
WITHOUT_CLASSIFICATION	//{{{ getLastEdit() method
WITHOUT_CLASSIFICATION	//{{{ Edit class
WITHOUT_CLASSIFICATION	//{{{ CompoundEdit class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	//{{{ createPosition() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ finalize() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	/* get all positions from offset to the end, inclusive */
WITHOUT_CLASSIFICATION	/* get all positions from offset to the end, inclusive */
WITHOUT_CLASSIFICATION	//{{{ PosTopHalf class
WITHOUT_CLASSIFICATION	//{{{ unref() method
WITHOUT_CLASSIFICATION	//{{{ PosTopHalf constructor
WITHOUT_CLASSIFICATION	//{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	//{{{ getOffset() method
WITHOUT_CLASSIFICATION	//{{{ compareTo() method
WITHOUT_CLASSIFICATION	//{{{ PosBottomHalf class
WITHOUT_CLASSIFICATION	//{{{ getStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ PosBottomHalf constructor
WITHOUT_CLASSIFICATION	//{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	//{{{ ref() method
WITHOUT_CLASSIFICATION	//{{{ LineElement constructor
WITHOUT_CLASSIFICATION	//{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	//{{{ getDocument() method
WITHOUT_CLASSIFICATION	//{{{ getEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ getParentElement() method
WITHOUT_CLASSIFICATION	//{{{ getAttributes() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getLength() method
WITHOUT_CLASSIFICATION	//{{{ getLineCount() method
WITHOUT_CLASSIFICATION	//{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	// copy text after gap
WITHOUT_CLASSIFICATION	//{{{ getElementIndex() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineCount() method
WITHOUT_CLASSIFICATION	//{{{ getElementCount() method
WITHOUT_CLASSIFICATION	//{{{ _setContent() method
WITHOUT_CLASSIFICATION	//{{{ getElement() method
WITHOUT_CLASSIFICATION	// limitations...
WITHOUT_CLASSIFICATION	//{{{ isLeaf() method
WITHOUT_CLASSIFICATION	//{{{ moveGapStart() method
WITHOUT_CLASSIFICATION	//{{{ ExplicitFoldHandler constructor
WITHOUT_CLASSIFICATION	// limitations...
WITHOUT_CLASSIFICATION	// copy text before gap
WITHOUT_CLASSIFICATION	//{{{ moveGapEnd() method
WITHOUT_CLASSIFICATION	//{{{ setFirstInvalidFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ DummyFoldHandler constructor
WITHOUT_CLASSIFICATION	//{{{ setScreenLineCount() method
WITHOUT_CLASSIFICATION	//{{{ LineManager constructor
WITHOUT_CLASSIFICATION	//{{{ getFirstInvalidFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ isScreenLineCountValid() method
WITHOUT_CLASSIFICATION	//{{{ getLineContext() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ getFoldHandler() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	//{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	//{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	//{{{ Update line info and line context arrays
WITHOUT_CLASSIFICATION	//{{{ setLineContext() method
WITHOUT_CLASSIFICATION	//{{{ Update line info and line context arrays
WITHOUT_CLASSIFICATION	//{{{ setFirstInvalidLineContext() method
WITHOUT_CLASSIFICATION	//{{{ getFirstInvalidLineContext() method
WITHOUT_CLASSIFICATION	//moveGap(-1,0,"contentInserted");
WITHOUT_CLASSIFICATION	//{{{ invalidateScreenLineCounts() method
WITHOUT_CLASSIFICATION	//{{{ setLineEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ _contentInserted() method
WITHOUT_CLASSIFICATION	/* Having all the info packed into an int is not very OO and makes the	 * code somewhat more complicated, but it saves a lot of memory.	 *	 * The new document model has just 12 bytes of overhead per line.	 * LineContext instances are now internalized, so only a few should	 * actually be in the heap.	 *	 * In the old document model there were 5 objects per line, for a	 * total of about 100 bytes, plus a cached token list, which used	 * another 100 or so bytes. */
WITHOUT_CLASSIFICATION	//moveGap(-1,0,"contentRemoved");
WITHOUT_CLASSIFICATION	//{{{ registerFoldHandler() method
WITHOUT_CLASSIFICATION	//{{{ moveGap() method
WITHOUT_CLASSIFICATION	//{{{ unregisterFoldHandler() method
WITHOUT_CLASSIFICATION	// Default implementation... subclasses can extend this.
WITHOUT_CLASSIFICATION	//{{{ getFoldHandlers() method
WITHOUT_CLASSIFICATION	//{{{ hashCode() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ stop() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ getIcon() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLevel() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	// if 'temp' is true, hide search bar after user is done with it
WITHOUT_CLASSIFICATION	//{{{ getFoldModes() method
WITHOUT_CLASSIFICATION	// empty line. inherit previous line's fold level
WITHOUT_CLASSIFICATION	//{{{ FoldHandler() constructor
WITHOUT_CLASSIFICATION	//{{{ getExpansion() method
WITHOUT_CLASSIFICATION	//{{{ Static initializer
WITHOUT_CLASSIFICATION	//{{{ AnimatedIcon constructor
WITHOUT_CLASSIFICATION	//{{{ getFrames() method
WITHOUT_CLASSIFICATION	//{{{ setExpansion() method
WITHOUT_CLASSIFICATION	//{{{ getRate() method
WITHOUT_CLASSIFICATION	//{{{ getField() method
WITHOUT_CLASSIFICATION	//{{{ setFrames() method
WITHOUT_CLASSIFICATION	//{{{ getAbbrevField() method
WITHOUT_CLASSIFICATION	//{{{ setIcon() method
WITHOUT_CLASSIFICATION	//{{{ setRate() method
WITHOUT_CLASSIFICATION	//{{{ getBeforeCaretTextArea() method
WITHOUT_CLASSIFICATION	//{{{ goToActionBar() method
WITHOUT_CLASSIFICATION	//{{{ getAfterCaretTextArea() method
WITHOUT_CLASSIFICATION	//{{{ ActionBar constructor
WITHOUT_CLASSIFICATION	/* construct a BeanShell snippet instead of				 * invoking directly so that user can record				 * property changes in macros. */
WITHOUT_CLASSIFICATION	//{{{ getCompletions() method
WITHOUT_CLASSIFICATION	//{{{ complete() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	// protected members
WITHOUT_CLASSIFICATION	//{{{ isOK() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	//{{{ DocumentHandler class
WITHOUT_CLASSIFICATION	//{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	//{{{ ActionTextField class
WITHOUT_CLASSIFICATION	//{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	//{{{ setModel() method
WITHOUT_CLASSIFICATION	//{{{ TipOfTheDay constructor
WITHOUT_CLASSIFICATION	//{{{ CompletionPopup class
WITHOUT_CLASSIFICATION	//{{{ CompletionList class
WITHOUT_CLASSIFICATION	//{{{ CompletionPopup constructor
WITHOUT_CLASSIFICATION	// we need this public not protected
WITHOUT_CLASSIFICATION	// Recursively adds our key listener to sub-components
WITHOUT_CLASSIFICATION	//{{{ nextTip() method
WITHOUT_CLASSIFICATION	//{{{ SelectLineRange constructor
WITHOUT_CLASSIFICATION	//{{{ createFieldPanel() method
WITHOUT_CLASSIFICATION	//{{{ CloseDialog constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ getCompletions() method
WITHOUT_CLASSIFICATION	//{{{ getCompletions() method
WITHOUT_CLASSIFICATION	// only set if all buffers saved/closed
WITHOUT_CLASSIFICATION	// so that we don't see the same tip again if the user // clicks 'Next Tip'
WITHOUT_CLASSIFICATION	//{{{ completeWord() method
WITHOUT_CLASSIFICATION	// do nothing //}}}
WITHOUT_CLASSIFICATION	//{{{ completeWord() method
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ CompleteWord constructor
WITHOUT_CLASSIFICATION	//}}} //{{{ show popup if > 1
WITHOUT_CLASSIFICATION	//{{{ if there is only one competion, insert in buffer
WITHOUT_CLASSIFICATION	// attempting to expand non-word char
WITHOUT_CLASSIFICATION	// figure out what constitutes a word character and what // doesn't
WITHOUT_CLASSIFICATION	//{{{ getNonAlphaNumericWordChars() method
WITHOUT_CLASSIFICATION	//{{{ getWordToComplete() method
WITHOUT_CLASSIFICATION	// build a list of unique words in all visible buffers
WITHOUT_CLASSIFICATION	// only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	// only complete current buffer's keyword map
WITHOUT_CLASSIFICATION	//{{{ try to find matching keywords
WITHOUT_CLASSIFICATION	//{{{ loop through all lines of current buffer
WITHOUT_CLASSIFICATION	// check for match at start of line
WITHOUT_CLASSIFICATION	// check for match inside line
WITHOUT_CLASSIFICATION	// '+ 1' so that findWordEnd() doesn't pick up the space at the start
WITHOUT_CLASSIFICATION	//{{{ insertSelected() method
WITHOUT_CLASSIFICATION	//{{{ Completion class
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ setMessageAndClear() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ statusUpdate() method
WITHOUT_CLASSIFICATION	//{{{ progressUpdate() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	//{{{ updateCaption() method
WITHOUT_CLASSIFICATION	//{{{ ThreadProgress constructor
WITHOUT_CLASSIFICATION	//{{{ WorkThreadHandler class
WITHOUT_CLASSIFICATION	//{{{ StatusBar constructor
WITHOUT_CLASSIFICATION	//{{{ ThreadProgress class
WITHOUT_CLASSIFICATION	//System.err.println("value: " + thread.getProgressValue());
WITHOUT_CLASSIFICATION	//{{{ setMessageComponent() method
WITHOUT_CLASSIFICATION	//{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	//{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	//{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	//{{{ TextAreaDialog constructor
WITHOUT_CLASSIFICATION	//{{{ WorkThreadListener implementation
WITHOUT_CLASSIFICATION	// so if view is closed in the meantime...
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	// don't obscure existing message
WITHOUT_CLASSIFICATION	//{{{ updateCaretStatus() method
WITHOUT_CLASSIFICATION	//{{{ setMessage() method
WITHOUT_CLASSIFICATION	/* can happen when switching buffers sometimes */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	// hopefully another caret update will come?
WITHOUT_CLASSIFICATION	//{{{ ToolTipLabel class
WITHOUT_CLASSIFICATION	// see above
WITHOUT_CLASSIFICATION	//{{{ updateMiscStatus() method
WITHOUT_CLASSIFICATION	//{{{ updateBufferStatus() method
WITHOUT_CLASSIFICATION	//{{{ MemoryStatus class
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	/* package-private for speed */
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ MemoryStatus constructor
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//Font font = UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	//{{{ Clock class
WITHOUT_CLASSIFICATION	//MemoryStatus.this.getBorder().getBorderInsets(this);
WITHOUT_CLASSIFICATION	/* FontRenderContext frc = new FontRenderContext(				null,false,false);			Rectangle2D bounds = getFont()				.getStringBounds(getTime(),frc);			Dimension dim = new Dimension((int)bounds.getWidth(),				(int)bounds.getHeight());			setPreferredSize(dim);			setMaximumSize(dim); */
WITHOUT_CLASSIFICATION	//{{{ Clock constructor
WITHOUT_CLASSIFICATION	//{{{ getTime() method
WITHOUT_CLASSIFICATION	//{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ MemoryStatus constructor
WITHOUT_CLASSIFICATION	//{{{ setSelectAllOnFocus() method
WITHOUT_CLASSIFICATION	//Font font = UIManager.getFont("Label.font");
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//MemoryStatus.this.getBorder().getBorderInsets(this);
WITHOUT_CLASSIFICATION	//{{{ Clock constructor
WITHOUT_CLASSIFICATION	/* FontRenderContext frc = new FontRenderContext(				null,false,false);			Rectangle2D bounds = getFont()				.getStringBounds(getTime(),frc);			Dimension dim = new Dimension((int)bounds.getWidth(),				(int)bounds.getHeight());			setPreferredSize(dim);			setMaximumSize(dim); */
WITHOUT_CLASSIFICATION	//{{{ getTime() method
WITHOUT_CLASSIFICATION	//{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	//{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	//{{{ HistoryTextField constructor
WITHOUT_CLASSIFICATION	//{{{ setInstantPopups() method
WITHOUT_CLASSIFICATION	//{{{ getInstantPopups() method
WITHOUT_CLASSIFICATION	//{{{ getSelectAllOnFocus() method
WITHOUT_CLASSIFICATION	//{{{ setEnterAddsToHistory() method
WITHOUT_CLASSIFICATION	//{{{ getEnterAddsToHistory() method
WITHOUT_CLASSIFICATION	//{{{ getModel() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ setModel() method
WITHOUT_CLASSIFICATION	//{{{ historyPrevious() method
WITHOUT_CLASSIFICATION	//{{{ addCurrentToHistory() method
WITHOUT_CLASSIFICATION	//{{{ processMouseEvent() method
WITHOUT_CLASSIFICATION	//{{{ setText() method
WITHOUT_CLASSIFICATION	//{{{ mouseMoved() method
WITHOUT_CLASSIFICATION	//{{{ fireActionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ doBackwardSearch() method
WITHOUT_CLASSIFICATION	// have to do this because setText() sets index to -1
WITHOUT_CLASSIFICATION	//{{{ doForwardSearch() method
WITHOUT_CLASSIFICATION	// down arrow
WITHOUT_CLASSIFICATION	// have to do this because setText() sets index to -1
WITHOUT_CLASSIFICATION	//{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	//{{{ historyNext() method
WITHOUT_CLASSIFICATION	//{{{ ColorWellButton constructor
WITHOUT_CLASSIFICATION	//{{{ HistoryBorder class
WITHOUT_CLASSIFICATION	// according to krisk this looks better on OS X...
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ Renderer class
WITHOUT_CLASSIFICATION	/* we don't handle key pressed A+ */
WITHOUT_CLASSIFICATION	//{{{ getSelectedColor() method
WITHOUT_CLASSIFICATION	//{{{ ColorPickerDialog class
WITHOUT_CLASSIFICATION	//{{{ setSelectedColor() method
WITHOUT_CLASSIFICATION	//}}} //{{{ KEY_TYPED...
WITHOUT_CLASSIFICATION	//{{{ ColorWell class
WITHOUT_CLASSIFICATION	//{{{ KEY_PRESSED...
WITHOUT_CLASSIFICATION	/* they're too troublesome */
WITHOUT_CLASSIFICATION	// get rid of keys we never need to handle
WITHOUT_CLASSIFICATION	// need to let \b through so that backspace will work // in HistoryTextFields
WITHOUT_CLASSIFICATION	/* case KeyEvent.VK_SEPARATOR: */
WITHOUT_CLASSIFICATION	//{{{ updateButtons() method
WITHOUT_CLASSIFICATION	// if the last key was a numeric keypad key // and NumLock is off, filter it out
WITHOUT_CLASSIFICATION	//{{{ PasteFromListDialog constructor
WITHOUT_CLASSIFICATION	//{{{ numericKeypadKey() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedClipText()
WITHOUT_CLASSIFICATION	//{{{ showClipText() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ reload() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ Renderer class
WITHOUT_CLASSIFICATION	//{{{ InputHandler constructor
WITHOUT_CLASSIFICATION	//{{{ selectAll() method
WITHOUT_CLASSIFICATION	//{{{ valueChanged() method
WITHOUT_CLASSIFICATION	//{{{ isPrefixActive() method
WITHOUT_CLASSIFICATION	// for ABI compatibility
WITHOUT_CLASSIFICATION	// is it a header?
WITHOUT_CLASSIFICATION	//{{{ FilesChangedDialog constructor
WITHOUT_CLASSIFICATION	//{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	// remove empty category branches
WITHOUT_CLASSIFICATION	//{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	// selected a header; skip to the next row
WITHOUT_CLASSIFICATION	//{{{ getLastAction() method
WITHOUT_CLASSIFICATION	//{{{ TreeHandler class
WITHOUT_CLASSIFICATION	//{{{ handleKey() method
WITHOUT_CLASSIFICATION	//{{{ removeKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ removeAllKeyBindings() method
WITHOUT_CLASSIFICATION	//{{{ getLastActionCount() method
WITHOUT_CLASSIFICATION	//{{{ getRepeatCount() method
WITHOUT_CLASSIFICATION	//{{{ setRepeatCount() method
WITHOUT_CLASSIFICATION	//{{{ readNextChar() method
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ invokeAction() method
WITHOUT_CLASSIFICATION	//{{{ invokeAction() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ setModel() method
WITHOUT_CLASSIFICATION	//{{{ setModel() method
WITHOUT_CLASSIFICATION	//{{{ selectAll() method
WITHOUT_CLASSIFICATION	//{{{ readNextChar() method
WITHOUT_CLASSIFICATION	/* value */
WITHOUT_CLASSIFICATION	//{{{ resetLastActionCount() method
WITHOUT_CLASSIFICATION	// If repeat was true originally, clear it // Otherwise it might have been set by the action, etc
WITHOUT_CLASSIFICATION	// remember the last executed action
WITHOUT_CLASSIFICATION	//{{{ invokeReadNextChar() method
WITHOUT_CLASSIFICATION	// remember old values, in case action changes them
WITHOUT_CLASSIFICATION	// first of all, if this action set a // readNextChar, do not clear the repeat
WITHOUT_CLASSIFICATION	// execute the action
WITHOUT_CLASSIFICATION	//{{{ getValues() method
WITHOUT_CLASSIFICATION	// stop people doing dumb stuff like C+ENTER 100 C+n
WITHOUT_CLASSIFICATION	// stop people doing dumb stuff like C+ENTER 100 C+n
WITHOUT_CLASSIFICATION	//{{{ invokeLastAction() method
WITHOUT_CLASSIFICATION	// this might be a bit slow if __char__ occurs a lot
WITHOUT_CLASSIFICATION	//{{{ userInput() method
WITHOUT_CLASSIFICATION	//{{{ JCheckBoxList constructor
WITHOUT_CLASSIFICATION	//{{{ JCheckBoxList constructor
WITHOUT_CLASSIFICATION	//{{{ getSelectedValue() method
WITHOUT_CLASSIFICATION	//{{{ getCheckedValues() method
WITHOUT_CLASSIFICATION	/* hasFocus */
WITHOUT_CLASSIFICATION	//{{{ getCellRenderer() method
WITHOUT_CLASSIFICATION	//{{{ DummyRenderer class
WITHOUT_CLASSIFICATION	//{{{ LabelRenderer class
WITHOUT_CLASSIFICATION	//{{{ AboutDialog constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ pushElement() method
WITHOUT_CLASSIFICATION	//{{{ peekElement() method
WITHOUT_CLASSIFICATION	//{{{ popElement() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ Constants
WITHOUT_CLASSIFICATION	//{{{ createDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ AboutPanel class
WITHOUT_CLASSIFICATION	//{{{ cacheDockableWindows() method
WITHOUT_CLASSIFICATION	//{{{ Static part of class
WITHOUT_CLASSIFICATION	//{{{ getCachedDockableNames() method
WITHOUT_CLASSIFICATION	//{{{ loadDockableWindows() method
WITHOUT_CLASSIFICATION	//{{{ registerDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ unloadDockableWindows() method
WITHOUT_CLASSIFICATION	//{{{ getRegisteredDockableWindows() method
WITHOUT_CLASSIFICATION	//{{{ getCachedDockableActionFlags() method
WITHOUT_CLASSIFICATION	//{{{ DockableListHandler class
WITHOUT_CLASSIFICATION	//{{{ OpenAction class
WITHOUT_CLASSIFICATION	//{{{ DockableListHandler constructor
WITHOUT_CLASSIFICATION	//{{{ Factory class
WITHOUT_CLASSIFICATION	//{{{ Factory constructor
WITHOUT_CLASSIFICATION	//{{{ OpenAction constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ invoke() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ isSelected() method
WITHOUT_CLASSIFICATION	//{{{ Static initializer
WITHOUT_CLASSIFICATION	//{{{ showDockableWindow() method
WITHOUT_CLASSIFICATION	// make default be true for the next // action
WITHOUT_CLASSIFICATION	//{{{ Instance part of class
WITHOUT_CLASSIFICATION	//{{{ ToggleAction class
WITHOUT_CLASSIFICATION	//{{{ removeDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ ToggleAction constructor
WITHOUT_CLASSIFICATION	//{{{ DockableWindowManager constructor
WITHOUT_CLASSIFICATION	//{{{ FloatAction class
WITHOUT_CLASSIFICATION	/* an error occurred */
WITHOUT_CLASSIFICATION	//{{{ FloatAction constructor
WITHOUT_CLASSIFICATION	//{{{ floatDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ closeCurrentArea() method
WITHOUT_CLASSIFICATION	// create a copy of this dockable window and float it
WITHOUT_CLASSIFICATION	//{{{ toggleDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ addDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ getDockableTitle() method
WITHOUT_CLASSIFICATION	//{{{ hideDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ getDockableWindow() method
WITHOUT_CLASSIFICATION	//{{{ isDockableWindowVisible() method
WITHOUT_CLASSIFICATION	//{{{ getDockable() method
WITHOUT_CLASSIFICATION	//System.err.println(comp.getClass());
WITHOUT_CLASSIFICATION	//{{{ isDockableWindowDocked() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ addEntry() method
WITHOUT_CLASSIFICATION	//{{{ getTopDockingArea() method
WITHOUT_CLASSIFICATION	// we don't care
WITHOUT_CLASSIFICATION	//{{{ close() method
WITHOUT_CLASSIFICATION	//{{{ createPopupMenu() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getLeftDockingArea() method
WITHOUT_CLASSIFICATION	//{{{ getAllPluginEntries() method
WITHOUT_CLASSIFICATION	//{{{ setResizePos() method
WITHOUT_CLASSIFICATION	//{{{ getBottomDockingArea() method
WITHOUT_CLASSIFICATION	//{{{ getRightDockingArea() method
WITHOUT_CLASSIFICATION	//{{{ finishResizing() method
WITHOUT_CLASSIFICATION	//{{{ paintChildren() method
WITHOUT_CLASSIFICATION	//{{{ DockableLayout class
WITHOUT_CLASSIFICATION	// don't show menu items to dock into a plain view
WITHOUT_CLASSIFICATION	//{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	/* nothing to do */
WITHOUT_CLASSIFICATION	//{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	//{{{ Lay out dependent buttons
WITHOUT_CLASSIFICATION	//{{{ removeLayoutComponent() method
WITHOUT_CLASSIFICATION	//{{{ maximumLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	//{{{ Lay out docking areas
WITHOUT_CLASSIFICATION	//{{{ Lay out independent buttons
WITHOUT_CLASSIFICATION	// I'm lazy
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Lay out independent buttons
WITHOUT_CLASSIFICATION	//{{{ Lay out dependent buttons
WITHOUT_CLASSIFICATION	//{{{ Lay out docking areas
WITHOUT_CLASSIFICATION	//{{{ Position tool bars if they are managed by us
WITHOUT_CLASSIFICATION	//{{{ Position center (edit pane, or split pane)
WITHOUT_CLASSIFICATION	//{{{ adjustDockingAreasToFit() method
WITHOUT_CLASSIFICATION	//{{{ getLayoutAlignmentX() method
WITHOUT_CLASSIFICATION	//{{{ getLayoutAlignmentY() method
WITHOUT_CLASSIFICATION	//{{{ invalidateLayout() method
WITHOUT_CLASSIFICATION	// only set if open
WITHOUT_CLASSIFICATION	// only for docked
WITHOUT_CLASSIFICATION	//{{{ Entry constructor
WITHOUT_CLASSIFICATION	//{{{ Entry constructor
WITHOUT_CLASSIFICATION	// get the title here, not in the factory constructor, // since the factory might be created before a plugin's // props are loaded
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ isOK() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	// eg, trying to bind C+n C+p if C+n already bound
WITHOUT_CLASSIFICATION	//{{{ GrabKeyDialog constructor
WITHOUT_CLASSIFICATION	//{{{ GrabKeyDialog constructor
WITHOUT_CLASSIFICATION	//{{{ Instance variables // this is a bad hack
WITHOUT_CLASSIFICATION	// show "remove" button
WITHOUT_CLASSIFICATION	// create a panel with a BoxLayout. Can't use Box here // because Box doesn't have setBorder().
WITHOUT_CLASSIFICATION	//{{{ updateAssignedTo() method
WITHOUT_CLASSIFICATION	//{{{ getSymbolicName() method
WITHOUT_CLASSIFICATION	// create a temporary (synthetic) prefix // KeyBinding, that won't be saved
WITHOUT_CLASSIFICATION	//{{{ getKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ InputPane class
WITHOUT_CLASSIFICATION	// eg, trying to bind C+e if C+e is a prefix
WITHOUT_CLASSIFICATION	// ask whether to remove the old shortcut
WITHOUT_CLASSIFICATION	//{{{ KeyBinding class
WITHOUT_CLASSIFICATION	// we don't need two identical shortcuts
WITHOUT_CLASSIFICATION	//{{{ canClose() method
WITHOUT_CLASSIFICATION	// check whether the other shortcut is the alt. shortcut
WITHOUT_CLASSIFICATION	// check whether this shortcut already exists
WITHOUT_CLASSIFICATION	// check whether shortcut is a prefix to others
WITHOUT_CLASSIFICATION	// can't override prefix shortcuts
WITHOUT_CLASSIFICATION	// ask whether to override that other shortcut
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// Pass 1: compute preferred row heights / column widths
WITHOUT_CLASSIFICATION	// Pass 2: redistribute free space
WITHOUT_CLASSIFICATION	// Pass 3: layout components
WITHOUT_CLASSIFICATION	// synchronized
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ addOptionGroup() method
WITHOUT_CLASSIFICATION	//{{{ addOptionPane() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ valueChanged() method
WITHOUT_CLASSIFICATION	// in case saved geometry is too small
WITHOUT_CLASSIFICATION	//{{{ OptionsDialog constructor
WITHOUT_CLASSIFICATION	//{{{ OptionsDialog constructor
WITHOUT_CLASSIFICATION	// Save settings to disk
WITHOUT_CLASSIFICATION	/* This will fire the PROPERTIES_CHANGED event */
WITHOUT_CLASSIFICATION	// register the Options dialog as a TreeSelectionListener. // this is done before the initial selection to ensure that the // first selected OptionPane is displayed on startup.
WITHOUT_CLASSIFICATION	// get rid of this dialog if necessary
WITHOUT_CLASSIFICATION	//{{{ updateSize() method
WITHOUT_CLASSIFICATION	//{{{ OptionTreeModel class
WITHOUT_CLASSIFICATION	//{{{ selectPane() method
WITHOUT_CLASSIFICATION	//{{{ selectPane() method
WITHOUT_CLASSIFICATION	//{{{ PaneNameRenderer class
WITHOUT_CLASSIFICATION	// this model may not be changed by the TableCellEditor
WITHOUT_CLASSIFICATION	//{{{ BufferOptions constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ Line separator
WITHOUT_CLASSIFICATION	// returns false if no such pane exists; calling with null // param selects first option pane found
WITHOUT_CLASSIFICATION	//setFont(new Font("Dialog",Font.BOLD,10));
WITHOUT_CLASSIFICATION	// wait for it to be painted to ensure progress is updated // continuously
WITHOUT_CLASSIFICATION	//{{{ Max line length
WITHOUT_CLASSIFICATION	//{{{ Encoding
WITHOUT_CLASSIFICATION	//{{{ GZipped setting
WITHOUT_CLASSIFICATION	//{{{ Tab size
WITHOUT_CLASSIFICATION	//{{{ Edit mode
WITHOUT_CLASSIFICATION	//{{{ FontSelector constructor
WITHOUT_CLASSIFICATION	//{{{ Fold mode
WITHOUT_CLASSIFICATION	//{{{ Indent size
WITHOUT_CLASSIFICATION	//{{{ Wrap mode
WITHOUT_CLASSIFICATION	//{{{ FontSelector constructor
WITHOUT_CLASSIFICATION	//{{{ Soft tabs
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog class
WITHOUT_CLASSIFICATION	//{{{ Buttons
WITHOUT_CLASSIFICATION	//{{{ isAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	//{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	//{{{ updateText() method
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ updatePreview() method
WITHOUT_CLASSIFICATION	// if the buffer count becomes 0, then it is guaranteed to // become 1 very soon, so don't do anything in that case.
WITHOUT_CLASSIFICATION	//{{{ FontSelectorDialog constructor
WITHOUT_CLASSIFICATION	/* fonts = getToolkit().getFontList(); */
WITHOUT_CLASSIFICATION	//{{{ getSelectedFont() method
WITHOUT_CLASSIFICATION	// for SPACE or S+SPACE we pass the // key typed since international // keyboards sometimes produce a // KEY_PRESSED SPACE but not a // KEY_TYPED SPACE, eg if you have to // do a "<space> to insert ".
WITHOUT_CLASSIFICATION	/* Log.log(Log.ERROR,this,"Using deprecated Toolkit.getFontList()"); */
WITHOUT_CLASSIFICATION	//{{{ getFontList() method
WITHOUT_CLASSIFICATION	//{{{ addTranslation() method
WITHOUT_CLASSIFICATION	//{{{ createTextFieldAndListPanel() method
WITHOUT_CLASSIFICATION	/* on MacOS, A+ can be user input */
WITHOUT_CLASSIFICATION	//{{{ translateKeyEvent() method
WITHOUT_CLASSIFICATION	/* on MacOS, A+ can be user input */
WITHOUT_CLASSIFICATION	//{{{ getSymbolicModifierName() method
WITHOUT_CLASSIFICATION	//{{{ parseKey() method
WITHOUT_CLASSIFICATION	//{{{ setModifierMapping() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	/* M+ discarded by key event workaround! */
WITHOUT_CLASSIFICATION	/* == C+ */
WITHOUT_CLASSIFICATION	/* == A+ */
WITHOUT_CLASSIFICATION	/* == M+ */
WITHOUT_CLASSIFICATION	//{{{ DockableWindowCompare class
WITHOUT_CLASSIFICATION	//{{{ register() method
WITHOUT_CLASSIFICATION	/* == S+ */
WITHOUT_CLASSIFICATION	// removing last component, so remove border
WITHOUT_CLASSIFICATION	//{{{ Key class
WITHOUT_CLASSIFICATION	//{{{ Create button
WITHOUT_CLASSIFICATION	//{{{ PanelWindowContainer constructor
WITHOUT_CLASSIFICATION	//{{{ setDimension() method
WITHOUT_CLASSIFICATION	//{{{ Button box setup
WITHOUT_CLASSIFICATION	//{{{ isVisible() method
WITHOUT_CLASSIFICATION	//{{{ unregister() method
WITHOUT_CLASSIFICATION	//{{{ showMostRecent() method
WITHOUT_CLASSIFICATION	//{{{ getCurrent() method
WITHOUT_CLASSIFICATION	//{{{ show() method
WITHOUT_CLASSIFICATION	//{{{ sortDockables() method
WITHOUT_CLASSIFICATION	//{{{ getDimension() method
WITHOUT_CLASSIFICATION	//{{{ MenuMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ getDockables() method
WITHOUT_CLASSIFICATION	//{{{ getWrappedDimension() method
WITHOUT_CLASSIFICATION	// remember the most recent dockable
WITHOUT_CLASSIFICATION	//{{{ DockBorder class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ paintBorder() method
WITHOUT_CLASSIFICATION	//{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	//{{{ isBorderOpaque() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	//{{{ getWrappedDimension() method
WITHOUT_CLASSIFICATION	//{{{ removeLayoutComponent() method //}}}
WITHOUT_CLASSIFICATION	//{{{ DockBorder constructor
WITHOUT_CLASSIFICATION	//{{{ RotatedTextIcon class
WITHOUT_CLASSIFICATION	//{{{ paintHorizBorder() method
WITHOUT_CLASSIFICATION	//{{{ getIconHeight() method
WITHOUT_CLASSIFICATION	//{{{ paintVertBorder() method
WITHOUT_CLASSIFICATION	//{{{ RotatedTextIcon constructor
WITHOUT_CLASSIFICATION	//{{{ updateColors() method
WITHOUT_CLASSIFICATION	//}}} //{{{ Counterclockwise rotation
WITHOUT_CLASSIFICATION	//height = (int)glyphs.getLogicalBounds().getHeight();
WITHOUT_CLASSIFICATION	//{{{ paintIcon() method
WITHOUT_CLASSIFICATION	//{{{ getIconWidth() method
WITHOUT_CLASSIFICATION	//{{{ DockablePanel constructor
WITHOUT_CLASSIFICATION	//{{{ No rotation
WITHOUT_CLASSIFICATION	//{{{ ButtonLayout class
WITHOUT_CLASSIFICATION	//}}} //{{{ Clockwise rotation
WITHOUT_CLASSIFICATION	// nothing 'cept close box
WITHOUT_CLASSIFICATION	//{{{ addLayoutComponent() method //}}}
WITHOUT_CLASSIFICATION	//{{{ setBounds() method
WITHOUT_CLASSIFICATION	//{{{ getWindowContainer() method
WITHOUT_CLASSIFICATION	//{{{ DockablePanel class
WITHOUT_CLASSIFICATION	//{{{ ResizeMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ showDockable() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ mouseMoved() method
WITHOUT_CLASSIFICATION	//{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	// collapsed
WITHOUT_CLASSIFICATION	//{{{ Top...
WITHOUT_CLASSIFICATION	//{{{ Top...
WITHOUT_CLASSIFICATION	//}}} //{{{ Left...
WITHOUT_CLASSIFICATION	//}}} //{{{ Left...
WITHOUT_CLASSIFICATION	//}}} //{{{ Bottom...
WITHOUT_CLASSIFICATION	//}}} //{{{ Bottom...
WITHOUT_CLASSIFICATION	//}}} //{{{ Right...
WITHOUT_CLASSIFICATION	//}}} //{{{ Right...
WITHOUT_CLASSIFICATION	// can't happen?
WITHOUT_CLASSIFICATION	//{{{ mouseExited() method
WITHOUT_CLASSIFICATION	//{{{ getCursor() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ getDockableWindowManager() method
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ register() method
WITHOUT_CLASSIFICATION	//{{{ unregister() method
WITHOUT_CLASSIFICATION	//{{{ show() method
WITHOUT_CLASSIFICATION	//{{{ isVisible() method
WITHOUT_CLASSIFICATION	//{{{ FloatingWindowContainer constructor
WITHOUT_CLASSIFICATION	//{{{ LogViewer constructor
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ getAbbrev() method
WITHOUT_CLASSIFICATION	//{{{ getExpansion() method
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ addKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ removeKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ checkForExistingAbbrev() method
WITHOUT_CLASSIFICATION	//{{{ LogList class
WITHOUT_CLASSIFICATION	//{{{ setEnabled() method
WITHOUT_CLASSIFICATION	//{{{ RolloverButton constructor
WITHOUT_CLASSIFICATION	//{{{ RolloverButton constructor
WITHOUT_CLASSIFICATION	//{{{ updateUI() method
WITHOUT_CLASSIFICATION	//{{{ setBorderPainted() method
WITHOUT_CLASSIFICATION	//{{{ DefaultInputHandler constructor
WITHOUT_CLASSIFICATION	//{{{ isOpaque() method
WITHOUT_CLASSIFICATION	//{{{ revalidate() method
WITHOUT_CLASSIFICATION	//{{{ DefaultInputHandler constructor
WITHOUT_CLASSIFICATION	//{{{ paint() method
WITHOUT_CLASSIFICATION	//{{{ EditAbbrevDialog constructor
WITHOUT_CLASSIFICATION	//{{{ EditAbbrevDialog constructor
WITHOUT_CLASSIFICATION	// user asks to remove non-existent
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	/* to avoid data loss, only do this if the above			 * completed successfully */
WITHOUT_CLASSIFICATION	//{{{ removeAllKeyBindings() method
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	//{{{ clear() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getModel() method
WITHOUT_CLASSIFICATION	/* case KeyEvent.VK_SEPARATOR: */
WITHOUT_CLASSIFICATION	//{{{ isPrefixActive() method
WITHOUT_CLASSIFICATION	//{{{ handleKey() method
WITHOUT_CLASSIFICATION	//{{{ getKeyBinding() method
WITHOUT_CLASSIFICATION	//{{{ getSymbolicModifierName() method
WITHOUT_CLASSIFICATION	//{{{ _addKeyBinding() method
WITHOUT_CLASSIFICATION	// Don't beep if the user presses some // key we don't know about unless a // prefix is active. Otherwise it will // beep when caps lock is pressed, etc.
WITHOUT_CLASSIFICATION	//{{{ saveHistory() method
WITHOUT_CLASSIFICATION	// F10 should be passed on, but C+e F10 // shouldn't
WITHOUT_CLASSIFICATION	//{{{ getSize() method
WITHOUT_CLASSIFICATION	//{{{ parseKeyStroke() method
WITHOUT_CLASSIFICATION	//{{{ HistoryModel constructor
WITHOUT_CLASSIFICATION	// Stores prefix name in bindings hashtable
WITHOUT_CLASSIFICATION	//{{{ setCurrentBindings() method
WITHOUT_CLASSIFICATION	//{{{ loadHistory() method
WITHOUT_CLASSIFICATION	//{{{ addItem() method
WITHOUT_CLASSIFICATION	//{{{ ToolBarManager constructor
WITHOUT_CLASSIFICATION	//{{{ getItem() method
WITHOUT_CLASSIFICATION	//{{{ getElementAt() method
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,HistoryModel.class,fnf);
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ addToolBar() method
WITHOUT_CLASSIFICATION	//{{{ removeToolBar() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ HelpSearchPanel constructor
WITHOUT_CLASSIFICATION	// See if we should place this toolbar before any others
WITHOUT_CLASSIFICATION	// select the appropriate tree node.
WITHOUT_CLASSIFICATION	// Place the toolbar at the bottom of the group
WITHOUT_CLASSIFICATION	//{{{ ResultIcon class
WITHOUT_CLASSIFICATION	// EnhancedDialog implementation
WITHOUT_CLASSIFICATION	// we later use this to compute a relative ranking
WITHOUT_CLASSIFICATION	// end EnhancedDialog implementation
WITHOUT_CLASSIFICATION	// what to do?
WITHOUT_CLASSIFICATION	//{{{ ResultRenderer class
WITHOUT_CLASSIFICATION	// multiple files w/ word bonus
WITHOUT_CLASSIFICATION	//{{{ Result class
WITHOUT_CLASSIFICATION	//{{{ ResultCompare class
WITHOUT_CLASSIFICATION	// turn the rankings into relative rankings, from 1 to 4
WITHOUT_CLASSIFICATION	//{{{ gotoURL() method
WITHOUT_CLASSIFICATION	//{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	//{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	//{{{ HelpViewer constructor
WITHOUT_CLASSIFICATION	//{{{ getBaseURL() method
WITHOUT_CLASSIFICATION	/* don't show loading msg because we won't				   receive a propertyChanged */
WITHOUT_CLASSIFICATION	//{{{ queueTOCReload() method
WITHOUT_CLASSIFICATION	//{{{ getShortURL() method
WITHOUT_CLASSIFICATION	//{{{ Instance members
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ getFile() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	// reset default cursor so that the hand cursor doesn't // stick around
WITHOUT_CLASSIFICATION	// the TOC pane looks up user's guide URLs relative to the // doc directory...
WITHOUT_CLASSIFICATION	//{{{ HelpIndex constructor
WITHOUT_CLASSIFICATION	//{{{ indexJAR() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() class
WITHOUT_CLASSIFICATION	/* //{{{ HelpIndex constructor	public HelpIndex(String fileListPath, String wordIndexPath)	{		this();	} //}}} */
WITHOUT_CLASSIFICATION	//{{{ LinkHandler class
WITHOUT_CLASSIFICATION	//{{{ HelpFile class
WITHOUT_CLASSIFICATION	//{{{ hyperlinkUpdate() method
WITHOUT_CLASSIFICATION	//{{{ indexEditorHelp() method
WITHOUT_CLASSIFICATION	//{{{ PropertyChangeHandler class
WITHOUT_CLASSIFICATION	/*  || lname.endsWith(".txt") */
WITHOUT_CLASSIFICATION	//{{{ ignoreWord() method
WITHOUT_CLASSIFICATION	//{{{ indexDirectory() method
WITHOUT_CLASSIFICATION	// how much an occurrence in the title is worth
WITHOUT_CLASSIFICATION	//{{{ indexStream() method
WITHOUT_CLASSIFICATION	//{{{ indexURL() method
WITHOUT_CLASSIFICATION	//{{{ lookupWord() method
WITHOUT_CLASSIFICATION	//{{{ addWord() method
WITHOUT_CLASSIFICATION	// the word
WITHOUT_CLASSIFICATION	//{{{ Word class
WITHOUT_CLASSIFICATION	//{{{ HelpTOCPanel constructor
WITHOUT_CLASSIFICATION	// files it occurs in
WITHOUT_CLASSIFICATION	//{{{ createTOC() method
WITHOUT_CLASSIFICATION	//{{{ HelpNode class
WITHOUT_CLASSIFICATION	//{{{ selectNode() method
WITHOUT_CLASSIFICATION	// so that HelpViewer constructor doesn't try to expand
WITHOUT_CLASSIFICATION	//{{{ createNode() method
WITHOUT_CLASSIFICATION	//{{{ loadTOC() method
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipLocation() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ processMouseEvent() method
WITHOUT_CLASSIFICATION	//{{{ TOCHandler constructor
WITHOUT_CLASSIFICATION	//{{{ Private members // used to mark words to ignore (see constructor for the list)
WITHOUT_CLASSIFICATION	//{{{ TOCHandler class
WITHOUT_CLASSIFICATION	//{{{ HelpNode constructor
WITHOUT_CLASSIFICATION	//ToolTipManager ttm = ToolTipManager.sharedInstance();
WITHOUT_CLASSIFICATION	//{{{ TOCTree constructor
WITHOUT_CLASSIFICATION	//{{{ TOCTree class
WITHOUT_CLASSIFICATION	/* case MouseEvent.MOUSE_ENTERED:				toolTipInitialDelay = ttm.getInitialDelay();				toolTipReshowDelay = ttm.getReshowDelay();				ttm.setInitialDelay(200);				ttm.setReshowDelay(0);				super.processMouseEvent(evt);				break;			case MouseEvent.MOUSE_EXITED:				ttm.setInitialDelay(toolTipInitialDelay);				ttm.setReshowDelay(toolTipReshowDelay);				super.processMouseEvent(evt);				break; */
WITHOUT_CLASSIFICATION	//{{{ cellRectIsVisible() method
WITHOUT_CLASSIFICATION	//{{{ TOCCellRenderer class
WITHOUT_CLASSIFICATION	//{{{ PluginCompare class
WITHOUT_CLASSIFICATION	//{{{ VFS methods
WITHOUT_CLASSIFICATION	//{{{ getFileVFS() method
WITHOUT_CLASSIFICATION	//{{{ getUrlVFS() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ runInAWTThread() method
WITHOUT_CLASSIFICATION	//{{{ runInWorkThread() method
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	// in new api, protocol always equals name
WITHOUT_CLASSIFICATION	//{{{ getVFSByName() method
WITHOUT_CLASSIFICATION	//{{{ getFilesystems() method
WITHOUT_CLASSIFICATION	//{{{ waitForRequests() method
WITHOUT_CLASSIFICATION	//{{{ getVFSForProtocol() method
WITHOUT_CLASSIFICATION	//{{{ getVFSs() method
WITHOUT_CLASSIFICATION	//{{{ getVFSForPath() method
WITHOUT_CLASSIFICATION	// we were the first to add an update; // add update sending runnable to AWT // thread
WITHOUT_CLASSIFICATION	//{{{ registerVFS() method
WITHOUT_CLASSIFICATION	//{{{ errorOccurred() method
WITHOUT_CLASSIFICATION	//{{{ I/O request methods
WITHOUT_CLASSIFICATION	//{{{ sendVFSUpdate() method
WITHOUT_CLASSIFICATION	//{{{ getIOThreadPool() method
WITHOUT_CLASSIFICATION	// the vfs browser has what you might call // a design flaw, it doesn't update properly // unless the vfs update for a parent arrives // before any updates for the children. sorting // the list alphanumerically guarantees this.
WITHOUT_CLASSIFICATION	//{{{ getRequestCount() method
WITHOUT_CLASSIFICATION	// don't send two updates // for the same path
WITHOUT_CLASSIFICATION	// if we are already in the AWT thread, take a shortcut
WITHOUT_CLASSIFICATION	//{{{ SendVFSUpdatesSafely class
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	//{{{ UrlVFS constructor
WITHOUT_CLASSIFICATION	//{{{ _canonPath() method
WITHOUT_CLASSIFICATION	//{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	// Check for backup.directory, and create that // directory if it doesn't exist
WITHOUT_CLASSIFICATION	//{{{ FileVFS method
WITHOUT_CLASSIFICATION	//{{{ LocalDirectoryEntry class
WITHOUT_CLASSIFICATION	//{{{ getFileSeparator() method
WITHOUT_CLASSIFICATION	//{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	//{{{ Check if file is valid
WITHOUT_CLASSIFICATION	//{{{ _rename() method
WITHOUT_CLASSIFICATION	// use system default short format
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _delete() method
WITHOUT_CLASSIFICATION	//{{{ _backup() method
WITHOUT_CLASSIFICATION	// do some platforms throw exceptions if the file does not exist // when we ask for the canonical path?
WITHOUT_CLASSIFICATION	// this is needed because on OS X renaming to a non-existent // directory causes problems
WITHOUT_CLASSIFICATION	// Fetch properties
WITHOUT_CLASSIFICATION	//{{{ _mkdir() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	//{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	//{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	//{{{ _delete() method
WITHOUT_CLASSIFICATION	//{{{ setPermissions() method
WITHOUT_CLASSIFICATION	//{{{ _saveComplete() method
WITHOUT_CLASSIFICATION	//{{{ addToFavorites() method
WITHOUT_CLASSIFICATION	//{{{ Permission preservation code
WITHOUT_CLASSIFICATION	//{{{ getPermissions() method
WITHOUT_CLASSIFICATION	//{{{ FavoritesVFS constructor
WITHOUT_CLASSIFICATION	//{{{ saveFavorites() method
WITHOUT_CLASSIFICATION	//{{{ loadFavorites() method
WITHOUT_CLASSIFICATION	// don't want it to show "0 bytes" for size, // etc.
WITHOUT_CLASSIFICATION	//{{{ listRoots() method
WITHOUT_CLASSIFICATION	//{{{ getFavorites() method
WITHOUT_CLASSIFICATION	//{{{ FileRootsVFS constructor
WITHOUT_CLASSIFICATION	//{{{ FavoritesEntry class
WITHOUT_CLASSIFICATION	// JDK 1.4 adds methods to obtain a drive letter label and // list the desktop on Windows
WITHOUT_CLASSIFICATION	// Make sure people don't do stupid things like putting files in /Volumes
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	//{{{ getFileName() method
WITHOUT_CLASSIFICATION	//{{{ getParentOfPath() method
WITHOUT_CLASSIFICATION	//{{{ insert() method
WITHOUT_CLASSIFICATION	//{{{ reloadDirectory() method
WITHOUT_CLASSIFICATION	//{{{ getFileSeparator() method
WITHOUT_CLASSIFICATION	//{{{ _canonPath() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _getDirectoryEntry() method
WITHOUT_CLASSIFICATION	// don't want it to show "0 bytes" for size, // etc.
WITHOUT_CLASSIFICATION	//{{{ showBrowseDialog() method
WITHOUT_CLASSIFICATION	//{{{ RootsEntry class
WITHOUT_CLASSIFICATION	// so an empty cd drive is not reported as a file
WITHOUT_CLASSIFICATION	// REMIND: calling isDirectory() on a floppy drive // displays stupid I/O error dialog box on Windows
WITHOUT_CLASSIFICATION	// reasonable defaults (?)
WITHOUT_CLASSIFICATION	// to prevent windows looking for a disk in the floppy drive
WITHOUT_CLASSIFICATION	//{{{ Capabilities
WITHOUT_CLASSIFICATION	// this ensures that getFileParent("protocol:"), for // example, is "protocol:" and not "".
WITHOUT_CLASSIFICATION	//{{{ Extended attributes
WITHOUT_CLASSIFICATION	//{{{ getCapabilities() method
WITHOUT_CLASSIFICATION	//{{{ VFS constructor
WITHOUT_CLASSIFICATION	//{{{ VFS constructor
WITHOUT_CLASSIFICATION	//{{{ VFS constructor
WITHOUT_CLASSIFICATION	// don't want getFileName("roots:") to return ""
WITHOUT_CLASSIFICATION	//{{{ getExtendedAttributes() method
WITHOUT_CLASSIFICATION	// this makes HyperSearch much faster
WITHOUT_CLASSIFICATION	//{{{ getTwoStageSaveName() method
WITHOUT_CLASSIFICATION	// ignore last character of path to properly handle // paths like /foo/bar/
WITHOUT_CLASSIFICATION	/* When doing a 'save as', the path to save to (path)		 * will not be the same as the buffer's previous path		 * (buffer.getPath()). In that case, we want to create		 * a backup of the new path, even if the old path was		 * backed up as well (BACKED_UP property set) */
WITHOUT_CLASSIFICATION	//{{{ createVFSSession() method
WITHOUT_CLASSIFICATION	// A method name that starts with _ requires a session object
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ getExtendedAttribute() method
WITHOUT_CLASSIFICATION	//{{{ _createInputStream() method
WITHOUT_CLASSIFICATION	//{{{ _createOutputStream() method
WITHOUT_CLASSIFICATION	//{{{ _listDirectory() method
WITHOUT_CLASSIFICATION	//{{{ _delete() method
WITHOUT_CLASSIFICATION	//{{{ _rename() method
WITHOUT_CLASSIFICATION	//{{{ _mkdir() method
WITHOUT_CLASSIFICATION	//{{{ _backup() method
WITHOUT_CLASSIFICATION	//{{{ _saveComplete() method
WITHOUT_CLASSIFICATION	//{{{ _endVFSSession() method
WITHOUT_CLASSIFICATION	//{{{ DirectoryEntry class
WITHOUT_CLASSIFICATION	//{{{ File types
WITHOUT_CLASSIFICATION	//{{{ getDefaultColorFor() method
WITHOUT_CLASSIFICATION	//{{{ DirectoryEntry constructor
WITHOUT_CLASSIFICATION	//{{{ DirectoryEntry constructor
WITHOUT_CLASSIFICATION	//{{{ ColorEntry class
WITHOUT_CLASSIFICATION	// maintain backwards compatibility
WITHOUT_CLASSIFICATION	//{{{ DirectoryEntryCompare class
WITHOUT_CLASSIFICATION	//{{{ getColor() method
WITHOUT_CLASSIFICATION	// skip autosave files
WITHOUT_CLASSIFICATION	//{{{ DirectoryProvider constructor
WITHOUT_CLASSIFICATION	// resolve symlinks to avoid loops
WITHOUT_CLASSIFICATION	//{{{ loadColors() method
WITHOUT_CLASSIFICATION	//{{{ ActionListeners
WITHOUT_CLASSIFICATION	// skip backup files
WITHOUT_CLASSIFICATION	// for filtering out backups
WITHOUT_CLASSIFICATION	// skip marker files
WITHOUT_CLASSIFICATION	//current.addSeparator();
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ old API
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ paint() method
WITHOUT_CLASSIFICATION	//{{{ paint() method
WITHOUT_CLASSIFICATION	//{{{ ActionListeners
WITHOUT_CLASSIFICATION	//current.addSeparator();
WITHOUT_CLASSIFICATION	// We build a set of lists, each list contains plugin menu // items that begin with a given letter.
WITHOUT_CLASSIFICATION	//{{{ addToLetterMap() method
WITHOUT_CLASSIFICATION	// Sort each letter
WITHOUT_CLASSIFICATION	// if less than 20 items, put them directly in the menu
WITHOUT_CLASSIFICATION	//{{{ MarkersMenuItem class
WITHOUT_CLASSIFICATION	// Collect blocks of up to maxItems of consecutive letters
WITHOUT_CLASSIFICATION	//{{{ MarkersMenuItem constructor
WITHOUT_CLASSIFICATION	//{{{ EnhancedMenuItem constructor
WITHOUT_CLASSIFICATION	//{{{ EnhancedCheckBoxMenuItem constructor
WITHOUT_CLASSIFICATION	//{{{ Model class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ menuSelected() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ updateEveryTime() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ getShortcut() method
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ finalize() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ paint() method
WITHOUT_CLASSIFICATION	//{{{ ViewUpdate constructor
WITHOUT_CLASSIFICATION	//{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	//{{{ createMacrosMenu() method
WITHOUT_CLASSIFICATION	//{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	//{{{ ActionListener...
WITHOUT_CLASSIFICATION	//{{{ ActionListener...
WITHOUT_CLASSIFICATION	//{{{ EnhancedMenu constructor
WITHOUT_CLASSIFICATION	//{{{ MouseListener...
WITHOUT_CLASSIFICATION	//{{{ MouseListener...
WITHOUT_CLASSIFICATION	//{{{ EditBusStub class
WITHOUT_CLASSIFICATION	//{{{ getWhat() method
WITHOUT_CLASSIFICATION	/* EnhancedMenu has a reference to EditBusStub, but not the other	 * way around. So when the EnhancedMenu is being garbage collected	 * its finalize() method removes the EditBusStub from the edit bus. */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ getPluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ setSelectedRow() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getDockable() method
WITHOUT_CLASSIFICATION	//{{{ getWhat() method
WITHOUT_CLASSIFICATION	//{{{ getWhat() method
WITHOUT_CLASSIFICATION	//{{{ getWhat() method
WITHOUT_CLASSIFICATION	//{{{ getMenuName() method
WITHOUT_CLASSIFICATION	//{{{ Message types
WITHOUT_CLASSIFICATION	//{{{ Message types
WITHOUT_CLASSIFICATION	//{{{ Message types
WITHOUT_CLASSIFICATION	//{{{ DockableWindowUpdate constructor
WITHOUT_CLASSIFICATION	//{{{ BufferUpdate constructor
WITHOUT_CLASSIFICATION	//{{{ PluginUpdate constructor
WITHOUT_CLASSIFICATION	//{{{ isExiting() method
WITHOUT_CLASSIFICATION	//{{{ BrowserColorsOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ DynamicMenuChanged constructor
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ SelectionHandler class
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ BrowserColorsModel class
WITHOUT_CLASSIFICATION	//{{{ BrowserColorsModel constructor
WITHOUT_CLASSIFICATION	//{{{ BrowserColorsModel constructor
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ moveUp() method
WITHOUT_CLASSIFICATION	//{{{ moveUp() method
WITHOUT_CLASSIFICATION	//{{{ moveDown() method
WITHOUT_CLASSIFICATION	//{{{ moveDown() method
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer class
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	// protected members
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer class
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ ColorRenderer constructor
WITHOUT_CLASSIFICATION	/* Text color */
WITHOUT_CLASSIFICATION	//{{{ TextAreaOptionPane constructor
WITHOUT_CLASSIFICATION	/* Multiple selection color */
WITHOUT_CLASSIFICATION	/* Font */
WITHOUT_CLASSIFICATION	/* Fractional font metrics */
WITHOUT_CLASSIFICATION	/* Background color */
WITHOUT_CLASSIFICATION	/* Line highlight */
WITHOUT_CLASSIFICATION	/* Caret color, caret blink, block caret */
WITHOUT_CLASSIFICATION	/* Wrap guide */
WITHOUT_CLASSIFICATION	/* Selection color */
WITHOUT_CLASSIFICATION	// Skip certain actions this way
WITHOUT_CLASSIFICATION	/* Structure highlight */
WITHOUT_CLASSIFICATION	/* Electric borders */
WITHOUT_CLASSIFICATION	/* EOL markers */
WITHOUT_CLASSIFICATION	//{{{ EditingOptionPane constructor
WITHOUT_CLASSIFICATION	/* Anti-aliasing */
WITHOUT_CLASSIFICATION	// redraw the whole table because a second shortcut // might have changed, too
WITHOUT_CLASSIFICATION	//{{{ selectMode() method
WITHOUT_CLASSIFICATION	//{{{ saveMode() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ updateButtons() method
WITHOUT_CLASSIFICATION	//{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	//{{{ ModeProperties class
WITHOUT_CLASSIFICATION	// don't do anything if the user didn't change // any settings
WITHOUT_CLASSIFICATION	//{{{ ModeProperties constructor
WITHOUT_CLASSIFICATION	//{{{ ModeProperties constructor
WITHOUT_CLASSIFICATION	//{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	// need to call Mode.init() if the file name or first line // globs change
WITHOUT_CLASSIFICATION	// Old API
WITHOUT_CLASSIFICATION	//{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	//{{{ PluginOptions constructor
WITHOUT_CLASSIFICATION	// initialize the Plugins branch of the options tree
WITHOUT_CLASSIFICATION	//{{{ createOptionTreeModel() method
WITHOUT_CLASSIFICATION	//{{{ Ceate icons list
WITHOUT_CLASSIFICATION	// Query plugins for option panes
WITHOUT_CLASSIFICATION	//{{{ NoPluginsPane class
WITHOUT_CLASSIFICATION	// only add the Plugins branch if there are OptionPanes
WITHOUT_CLASSIFICATION	/* Show toolbar */
WITHOUT_CLASSIFICATION	//{{{ getDefaultGroup() method
WITHOUT_CLASSIFICATION	//{{{ ToolBarOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ Create buttons
WITHOUT_CLASSIFICATION	//}}} ///}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// protected members
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ ListHandler class
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ ToolBarEditDialog constructor
WITHOUT_CLASSIFICATION	//{{{ ButtonCompare class
WITHOUT_CLASSIFICATION	//{{{ IconListEntry class
WITHOUT_CLASSIFICATION	//{{{ Button class
WITHOUT_CLASSIFICATION	//{{{ ToolBarEditDialog constructor
WITHOUT_CLASSIFICATION	//{{{ ButtonCellRenderer class
WITHOUT_CLASSIFICATION	//{{{ IconCellRenderer class
WITHOUT_CLASSIFICATION	// Icon selection
WITHOUT_CLASSIFICATION	//{{{ ToolBarEditDialog class
WITHOUT_CLASSIFICATION	//{{{ updateList() method
WITHOUT_CLASSIFICATION	// Icon selection
WITHOUT_CLASSIFICATION	//{{{ updateList() method
WITHOUT_CLASSIFICATION	//{{{ getSelection() method
WITHOUT_CLASSIFICATION	//{{{ getSelection() method
WITHOUT_CLASSIFICATION	//{{{ StyleOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	// start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	// start at 1 not 0 to skip Token.NULL
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ createStyleTableScroller() method
WITHOUT_CLASSIFICATION	//{{{ StyleTableModel class
WITHOUT_CLASSIFICATION	//{{{ createStyleTableModel() method
WITHOUT_CLASSIFICATION	// for sorting
WITHOUT_CLASSIFICATION	//{{{ StyleTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ StyleTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ addStyleChoice() method
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer class
WITHOUT_CLASSIFICATION	//{{{ StyleChoice class
WITHOUT_CLASSIFICATION	//{{{ StyleEditor class
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ StyleEditor constructor
WITHOUT_CLASSIFICATION	//{{{ getStyle() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getTableCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	/* Text color */
WITHOUT_CLASSIFICATION	/* Background color */
WITHOUT_CLASSIFICATION	/* Structure highlight */
WITHOUT_CLASSIFICATION	//{{{ addStyleChoice() method
WITHOUT_CLASSIFICATION	//{{{ StyleChoice class
WITHOUT_CLASSIFICATION	// for sorting
WITHOUT_CLASSIFICATION	// for sorting
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer class
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ StyleRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ StyleEditor constructor
WITHOUT_CLASSIFICATION	//{{{ getStyle() method
WITHOUT_CLASSIFICATION	/* Text font */
WITHOUT_CLASSIFICATION	//{{{ GutterOptionPane constructor
WITHOUT_CLASSIFICATION	/* Line numbering */
WITHOUT_CLASSIFICATION	/* Number alignment */
WITHOUT_CLASSIFICATION	/* Border width */
WITHOUT_CLASSIFICATION	/* Marker highlight */
WITHOUT_CLASSIFICATION	/* gutterBorderWidth = new JTextField(jEdit.getProperty(			"view.gutter.borderWidth"));		addComponent(jEdit.getProperty("options.gutter.borderWidth"),			gutterBorderWidth); */
WITHOUT_CLASSIFICATION	/* Current line highlight */
WITHOUT_CLASSIFICATION	/* unfocused border color */
WITHOUT_CLASSIFICATION	/* Highlight interval and color */
WITHOUT_CLASSIFICATION	/* Fold marker color */
WITHOUT_CLASSIFICATION	/* Focused border color */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	/* Background color */
WITHOUT_CLASSIFICATION	/* Status bar visible */
WITHOUT_CLASSIFICATION	//{{{ StatusBarOptionPane constructor
WITHOUT_CLASSIFICATION	/* Edit mode */
WITHOUT_CLASSIFICATION	/* Wrap */
WITHOUT_CLASSIFICATION	/* Foreground color */
WITHOUT_CLASSIFICATION	/* Fold mode */
WITHOUT_CLASSIFICATION	/* Caret status */
WITHOUT_CLASSIFICATION	/* Memory status */
WITHOUT_CLASSIFICATION	/* Multi select */
WITHOUT_CLASSIFICATION	/* Encoding */
WITHOUT_CLASSIFICATION	/* Overwrite */
WITHOUT_CLASSIFICATION	/* Memory background color */
WITHOUT_CLASSIFICATION	/* Rect select */
WITHOUT_CLASSIFICATION	/* Line seperator */
WITHOUT_CLASSIFICATION	//{{{ MouseOptionPane constructor
WITHOUT_CLASSIFICATION	/* Memory foreground color */
WITHOUT_CLASSIFICATION	/* Clock */
WITHOUT_CLASSIFICATION	/* Non word character selection behavior */
WITHOUT_CLASSIFICATION	/* Text drag and drop */
WITHOUT_CLASSIFICATION	/* Middle mouse button click pastes % register */
WITHOUT_CLASSIFICATION	/* Gutter mouse actions */
WITHOUT_CLASSIFICATION	//{{{ FirewallOptionPane constructor
WITHOUT_CLASSIFICATION	// checkbox
WITHOUT_CLASSIFICATION	// checkbox
WITHOUT_CLASSIFICATION	// proxy host
WITHOUT_CLASSIFICATION	// proxy host
WITHOUT_CLASSIFICATION	// proxy port
WITHOUT_CLASSIFICATION	// proxy port
WITHOUT_CLASSIFICATION	// proxy username
WITHOUT_CLASSIFICATION	// proxy password
WITHOUT_CLASSIFICATION	// no proxy for
WITHOUT_CLASSIFICATION	//{{{ DockingOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ WindowTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ createWindowTableScroller() method
WITHOUT_CLASSIFICATION	//{{{ WindowTableModel constructor
WITHOUT_CLASSIFICATION	//{{{ createWindowModel() method
WITHOUT_CLASSIFICATION	//{{{ DockPositionCellRenderer class
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ WindowTableModel class
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ WindowCompare class
WITHOUT_CLASSIFICATION	//{{{ WindowCompare class
WITHOUT_CLASSIFICATION	//{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ createOptionTreeModel() method
WITHOUT_CLASSIFICATION	//{{{ getDefaultGroup() method
WITHOUT_CLASSIFICATION	//{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	//{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	//{{{ GlobalOptions constructor
WITHOUT_CLASSIFICATION	//{{{ AutosaveBackupOptionPane constructor
WITHOUT_CLASSIFICATION	// initialize the jEdit branch of the options tree
WITHOUT_CLASSIFICATION	/* Backup on every save */
WITHOUT_CLASSIFICATION	/* Autosave interval */
WITHOUT_CLASSIFICATION	/* Install location */
WITHOUT_CLASSIFICATION	/* Backup count */
WITHOUT_CLASSIFICATION	/* Download mirror */
WITHOUT_CLASSIFICATION	/* Backup directory */
WITHOUT_CLASSIFICATION	//{{{ DownloadMirrorsThread class
WITHOUT_CLASSIFICATION	/* Backup filename prefix */
WITHOUT_CLASSIFICATION	/* Update mirror list */
WITHOUT_CLASSIFICATION	/* Backup suffix */
WITHOUT_CLASSIFICATION	// Insert code to update the plugin managers list here later
WITHOUT_CLASSIFICATION	/* Download source */
WITHOUT_CLASSIFICATION	/* Delete downloaded files */
WITHOUT_CLASSIFICATION	//{{{ MirrorModel class
WITHOUT_CLASSIFICATION	//{{{ AbbrevsOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ SingleSelectionModel class
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ remove() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ TableMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ Renderer class
WITHOUT_CLASSIFICATION	//{{{ SelectionHandler class
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ edit() method
WITHOUT_CLASSIFICATION	//{{{ toHashtable() method
WITHOUT_CLASSIFICATION	//{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ toHashtable() method
WITHOUT_CLASSIFICATION	//{{{ AbbrevsModel class
WITHOUT_CLASSIFICATION	//{{{ AbbrevsModel constructor
WITHOUT_CLASSIFICATION	//{{{ AbbrevsModel constructor
WITHOUT_CLASSIFICATION	//{{{ AbbrevCompare class
WITHOUT_CLASSIFICATION	//{{{ Abbrev class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ AbbrevCompare class
WITHOUT_CLASSIFICATION	/* Ignore case when sorting */
WITHOUT_CLASSIFICATION	//{{{ BrowserOptionPane constructor
WITHOUT_CLASSIFICATION	/* Show menu bar */
WITHOUT_CLASSIFICATION	/* Default directory */
WITHOUT_CLASSIFICATION	/* split VFSFileDialog horizontally */
WITHOUT_CLASSIFICATION	/* Show tool bar */
WITHOUT_CLASSIFICATION	/* Show icons */
WITHOUT_CLASSIFICATION	/* Mix files and directories */
WITHOUT_CLASSIFICATION	/* Show hidden files */
WITHOUT_CLASSIFICATION	/* Beep on search auto wrap */
WITHOUT_CLASSIFICATION	//{{{ ViewOptionPane constructor
WITHOUT_CLASSIFICATION	/* Double-click close */
WITHOUT_CLASSIFICATION	/* Show full path */
WITHOUT_CLASSIFICATION	//{{{ AppearanceOptionPane constructor
WITHOUT_CLASSIFICATION	/* View dock layout */
WITHOUT_CLASSIFICATION	/* Show search bar */
WITHOUT_CLASSIFICATION	/* Primary Metal L&F font */
WITHOUT_CLASSIFICATION	/* Show buffer switcher */
WITHOUT_CLASSIFICATION	/* Menu spillover count */
WITHOUT_CLASSIFICATION	/* Look and feel */
WITHOUT_CLASSIFICATION	/* History count */
WITHOUT_CLASSIFICATION	/* Secondary Metal L&F font */
WITHOUT_CLASSIFICATION	/* Use jEdit colors in all text components */
WITHOUT_CLASSIFICATION	/* Show tip of the day */
WITHOUT_CLASSIFICATION	/* Show splash screen */
WITHOUT_CLASSIFICATION	/* Decorate frames with look and feel (JDK 1.4 only) */
WITHOUT_CLASSIFICATION	/* Decorate dialogs with look and feel (JDK 1.4 only) */
WITHOUT_CLASSIFICATION	//{{{ PrintOptionPane constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _init() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ _save() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ getEntry() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	/* Font */
WITHOUT_CLASSIFICATION	/* Line numbering */
WITHOUT_CLASSIFICATION	/* Tab size */
WITHOUT_CLASSIFICATION	/* Header */
WITHOUT_CLASSIFICATION	/* Persistent markers */
WITHOUT_CLASSIFICATION	/* Footer */
WITHOUT_CLASSIFICATION	//{{{ GeneralOptionPane constructor
WITHOUT_CLASSIFICATION	/* Color */
WITHOUT_CLASSIFICATION	/* Auto detect encoding */
WITHOUT_CLASSIFICATION	/* Line separator */
WITHOUT_CLASSIFICATION	/* Sort recent file list */
WITHOUT_CLASSIFICATION	/* Force 1.3 print dialog */
WITHOUT_CLASSIFICATION	/* Default file encoding */
WITHOUT_CLASSIFICATION	/* Check mod status on focus */
WITHOUT_CLASSIFICATION	/* Create the plugin table */
WITHOUT_CLASSIFICATION	/* Recent file list size */
WITHOUT_CLASSIFICATION	/* Save caret positions */
WITHOUT_CLASSIFICATION	/* Sort buffers by names */
WITHOUT_CLASSIFICATION	/* Session management */
WITHOUT_CLASSIFICATION	/* Confirm save all */
WITHOUT_CLASSIFICATION	/* Sort buffers */
WITHOUT_CLASSIFICATION	/* Two-stage save */
WITHOUT_CLASSIFICATION	//{{{ ManagePanel constructor
WITHOUT_CLASSIFICATION	/* Strip trailing EOL */
WITHOUT_CLASSIFICATION	/* Create button panel */
WITHOUT_CLASSIFICATION	//{{{ showListConfirm() method
WITHOUT_CLASSIFICATION	//{{{ PluginTableModel class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ unloadPluginJAR() method
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ Mirror class
WITHOUT_CLASSIFICATION	//{{{ setSortType() method
WITHOUT_CLASSIFICATION	//{{{ unloadPluginJARWithDialog() method
WITHOUT_CLASSIFICATION	//{{{ loadExtraJARsIfNecessary() method
WITHOUT_CLASSIFICATION	//{{{ HelpButton class
WITHOUT_CLASSIFICATION	//{{{ transitiveClosure() method
WITHOUT_CLASSIFICATION	//{{{ TextRenderer class
WITHOUT_CLASSIFICATION	//{{{ EntryCompare class
WITHOUT_CLASSIFICATION	//{{{ HideLibrariesButton class
WITHOUT_CLASSIFICATION	//{{{ MirrorCompare class
WITHOUT_CLASSIFICATION	//{{{ RemoveButton class
WITHOUT_CLASSIFICATION	//{{{ MirrorList constructor
WITHOUT_CLASSIFICATION	//{{{ finished() method
WITHOUT_CLASSIFICATION	//{{{ PluginList constructor
WITHOUT_CLASSIFICATION	//{{{ addPlugin() method
WITHOUT_CLASSIFICATION	//{{{ addPluginSet() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	// end HandlerBase implementation
WITHOUT_CLASSIFICATION	//{{{ dump() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ finished() method
WITHOUT_CLASSIFICATION	//{{{ Dependency class
WITHOUT_CLASSIFICATION	// after the entire list is loaded, fill out plugin field // in dependencies
WITHOUT_CLASSIFICATION	//{{{ PluginSet class
WITHOUT_CLASSIFICATION	//branch.satisfyDependencies(roster,installDirectory, //	downloadSource);
WITHOUT_CLASSIFICATION	//{{{ Plugin class
WITHOUT_CLASSIFICATION	//String installed; //String installedVersion;
WITHOUT_CLASSIFICATION	//{{{ Branch class
WITHOUT_CLASSIFICATION	// Force the install tab to refresh for possible // change of mirror
WITHOUT_CLASSIFICATION	// only used if what is "plugin"
WITHOUT_CLASSIFICATION	//{{{ getPluginList() method
WITHOUT_CLASSIFICATION	//{{{ getInstance() method
WITHOUT_CLASSIFICATION	//{{{ showPluginManager() method
WITHOUT_CLASSIFICATION	/* Setup panes */
WITHOUT_CLASSIFICATION	//{{{ PluginManager constructor
WITHOUT_CLASSIFICATION	//{{{ updatePluginList() method
WITHOUT_CLASSIFICATION	/* Create the buttons */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ getColumnCount() method
WITHOUT_CLASSIFICATION	//{{{ getRowCount() method
WITHOUT_CLASSIFICATION	//{{{ getColumnName() method
WITHOUT_CLASSIFICATION	//{{{ getColumnClass() method
WITHOUT_CLASSIFICATION	//{{{ getValueAt() method
WITHOUT_CLASSIFICATION	//{{{ clear() method
WITHOUT_CLASSIFICATION	//{{{ isCellEditable() method
WITHOUT_CLASSIFICATION	//{{{ setValueAt() method
WITHOUT_CLASSIFICATION	//{{{ sort() method
WITHOUT_CLASSIFICATION	//{{{ HeaderMouseHandler class
WITHOUT_CLASSIFICATION	//{{{ PluginTableModel class
WITHOUT_CLASSIFICATION	//{{{ setSortType() method
WITHOUT_CLASSIFICATION	//{{{ EntryCompare class
WITHOUT_CLASSIFICATION	//{{{ PluginInfoBox class
WITHOUT_CLASSIFICATION	//{{{ ListUpdater class
WITHOUT_CLASSIFICATION	/* Create buttons */
WITHOUT_CLASSIFICATION	//{{{ InstallPanel constructor
WITHOUT_CLASSIFICATION	/* Setup the table */
WITHOUT_CLASSIFICATION	//{{{ updateModel() method
WITHOUT_CLASSIFICATION	/* Create description */
WITHOUT_CLASSIFICATION	//{{{ SizeLabel class
WITHOUT_CLASSIFICATION	//{{{ formatSize() method
WITHOUT_CLASSIFICATION	//{{{ setSelectAll() method
WITHOUT_CLASSIFICATION	//{{{ SelectallButton class
WITHOUT_CLASSIFICATION	//{{{ isDownloadingList() method
WITHOUT_CLASSIFICATION	//{{{ InstallButton class
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Constructor
WITHOUT_CLASSIFICATION	//{{{ Variables
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ WindowHandler class
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ PluginManagerProgress constructor
WITHOUT_CLASSIFICATION	//{{{ TextRenderer
WITHOUT_CLASSIFICATION	//{{{ RosterThread class
WITHOUT_CLASSIFICATION	//{{{ endDocument() method
WITHOUT_CLASSIFICATION	//{{{ setValue() method
WITHOUT_CLASSIFICATION	//{{{ BufferPrintable constructor
WITHOUT_CLASSIFICATION	//{{{ done() method
WITHOUT_CLASSIFICATION	// progress value as of start of current task
WITHOUT_CLASSIFICATION	// Change any white text to black
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	//buffer.readLock();
WITHOUT_CLASSIFICATION	//buffer.readUnlock();
WITHOUT_CLASSIFICATION	//{{{ printPage() method
WITHOUT_CLASSIFICATION	//{{{ print() method
WITHOUT_CLASSIFICATION	//{{{ print() method
WITHOUT_CLASSIFICATION	//{{{ print() method
WITHOUT_CLASSIFICATION	//{{{ print() method
WITHOUT_CLASSIFICATION	//{{{ calculate tab size
WITHOUT_CLASSIFICATION	//{{{ nextTabStop() method
WITHOUT_CLASSIFICATION	//{{{ determine line number width
WITHOUT_CLASSIFICATION	//{{{ paintHeader() method
WITHOUT_CLASSIFICATION	// the +1's ensure that 99 gets 3 digits, 103 gets 4 digits, // and so on.
WITHOUT_CLASSIFICATION	//no need to always keep the same job name for every printout.
WITHOUT_CLASSIFICATION	// now that we know how many chars there are, get the width.
WITHOUT_CLASSIFICATION	//{{{ getPrintJob() method
WITHOUT_CLASSIFICATION	//{{{ paintFooter() method
WITHOUT_CLASSIFICATION	//{{{ getPrintJob() method
WITHOUT_CLASSIFICATION	//{{{ PrintTabExpander class
WITHOUT_CLASSIFICATION	//{{{ getPageFormat() method
WITHOUT_CLASSIFICATION	//{{{ PrintTabExpander constructor
WITHOUT_CLASSIFICATION	//{{{ getPageFormat() method
WITHOUT_CLASSIFICATION	//format.setOrientation(PageFormat.PORTRAIT);
WITHOUT_CLASSIFICATION	//{{{ pageSetup() method
WITHOUT_CLASSIFICATION	//{{{ pageSetup() method
WITHOUT_CLASSIFICATION	//for backwards compatibility, the color variable is stored also as a property
WITHOUT_CLASSIFICATION	//for backwards compatibility, the color variable is stored also as a property
WITHOUT_CLASSIFICATION	//convert from PrintRequestAttributeSet to the pageFormat
WITHOUT_CLASSIFICATION	//{{{ savePrintSpec() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ update() method
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//doesnt exist?? //pf.setOrientation(PageFormat.REVERSE_PORTRAIT); //then just do the next best thing
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	// if 'temp' is true, hide search bar after user is done with it
WITHOUT_CLASSIFICATION	//{{{ getField() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getSelection() method
WITHOUT_CLASSIFICATION	//{{{ Occur constructor
WITHOUT_CLASSIFICATION	//{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	// cached for speed
WITHOUT_CLASSIFICATION	//{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	//{{{ goTo() method
WITHOUT_CLASSIFICATION	//{{{ Create the timer used by incremental search
WITHOUT_CLASSIFICATION	//{{{ HyperSearchResult constructor
WITHOUT_CLASSIFICATION	//{{{ addOccur() method
WITHOUT_CLASSIFICATION	//{{{ bufferOpened() method
WITHOUT_CLASSIFICATION	//{{{ bufferOpened() method
WITHOUT_CLASSIFICATION	//{{{ getFirstFile() method
WITHOUT_CLASSIFICATION	//{{{ pathEquals() method
WITHOUT_CLASSIFICATION	//{{{ getFileCount() method
WITHOUT_CLASSIFICATION	//{{{ Occur class
WITHOUT_CLASSIFICATION	//{{{ getNextFile() method
WITHOUT_CLASSIFICATION	// not supported for arbitriary filesets
WITHOUT_CLASSIFICATION	// -1 so that the last isn't checked
WITHOUT_CLASSIFICATION	// not found at all.
WITHOUT_CLASSIFICATION	//{{{ getFiles() method
WITHOUT_CLASSIFICATION	//{{{ invalidateCachedList() method
WITHOUT_CLASSIFICATION	//{{{ SearchBar constructor
WITHOUT_CLASSIFICATION	//{{{ setHyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ getDirectory() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ setDirectory() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ DocumentHandler class
WITHOUT_CLASSIFICATION	//{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	//{{{ insertUpdate() method
WITHOUT_CLASSIFICATION	//{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	//{{{ removeUpdate() method
WITHOUT_CLASSIFICATION	//{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	//{{{ changedUpdate() method
WITHOUT_CLASSIFICATION	// not found at all.
WITHOUT_CLASSIFICATION	//{{{ find() method
WITHOUT_CLASSIFICATION	// close button only there if 'temp' is true
WITHOUT_CLASSIFICATION	//{{{ If nothing entered, show search and replace dialog box
WITHOUT_CLASSIFICATION	//}}} //{{{ HyperSearch
WITHOUT_CLASSIFICATION	//}}} //{{{ Incremental search
WITHOUT_CLASSIFICATION	// on enter, start search from end // of current match to find next one
WITHOUT_CLASSIFICATION	// not found. start from // beginning
WITHOUT_CLASSIFICATION	// inform user search restarted
WITHOUT_CLASSIFICATION	// beep if beep property set
WITHOUT_CLASSIFICATION	//{{{ incrementalSearch() method
WITHOUT_CLASSIFICATION	/* For example, if the current fileset is a directory,		 * C+g will find the next match within that fileset.		 * This can be annoying if you have just done an		 * incremental search and want the next occurrence		 * in the current buffer. */
WITHOUT_CLASSIFICATION	//{{{ timerIncrementalSearch() method
WITHOUT_CLASSIFICATION	// on insert, start search from beginning of // current match. This will continue to highlight // the current match until another match is found
WITHOUT_CLASSIFICATION	// on backspace, restart from beginning
WITHOUT_CLASSIFICATION	// on backspace, restart from beginning
WITHOUT_CLASSIFICATION	// don't beep if not found. // subsequent beeps are very // annoying when backspacing an // invalid search string.
WITHOUT_CLASSIFICATION	//{{{ DirectoryListSet constructor
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ KeyHandler class
WITHOUT_CLASSIFICATION	//{{{ focusOnDefaultComponent() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	// on insert, start search from beginning of // current match. This will continue to highlight // the current match until another match is found
WITHOUT_CLASSIFICATION	// don't beep if not found. // subsequent beeps are very // annoying when backspacing an // invalid search string.
WITHOUT_CLASSIFICATION	//{{{ setRecursive() method
WITHOUT_CLASSIFICATION	// reverse regexp search // not supported yet, so // 'simulate' with restart
WITHOUT_CLASSIFICATION	// reverse regexp search // not supported yet, so // 'simulate' with restart
WITHOUT_CLASSIFICATION	//{{{ getTreeModel() method
WITHOUT_CLASSIFICATION	//{{{ getFileFilter() method
WITHOUT_CLASSIFICATION	//{{{ _getFiles() method
WITHOUT_CLASSIFICATION	//{{{ setFileFilter() method
WITHOUT_CLASSIFICATION	//{{{ isRecursive() method
WITHOUT_CLASSIFICATION	//{{{ getTree() method
WITHOUT_CLASSIFICATION	//{{{ HyperSearchResults constructor
WITHOUT_CLASSIFICATION	//{{{ searchDone() method
WITHOUT_CLASSIFICATION	//{{{ visitBuffers() method
WITHOUT_CLASSIFICATION	//{{{ searchStarted() method
WITHOUT_CLASSIFICATION	// BufferUpdate.CLOSED
WITHOUT_CLASSIFICATION	//{{{ updateMultiStatus() method
WITHOUT_CLASSIFICATION	//{{{ searchFailed() method
WITHOUT_CLASSIFICATION	// collapse all nodes, as suggested on user mailing list...
WITHOUT_CLASSIFICATION	//{{{ goToSelectedNode() method
WITHOUT_CLASSIFICATION	// do nothing if clicked "foo (showing n occurrences in m files)"
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ Getters and setters
WITHOUT_CLASSIFICATION	//{{{ showPopupMenu method
WITHOUT_CLASSIFICATION	//{{{ ResultCellRenderer class
WITHOUT_CLASSIFICATION	//{{{ RemoveTreeNodeAction class
WITHOUT_CLASSIFICATION	//{{{ ResultVisitor interface
WITHOUT_CLASSIFICATION	//{{{ RemoveAllTreeNodesAction class
WITHOUT_CLASSIFICATION	//{{{ ResultCellRenderer constructor
WITHOUT_CLASSIFICATION	//{{{ getRegexp() method
WITHOUT_CLASSIFICATION	//{{{ getTreeCellRendererComponent() method
WITHOUT_CLASSIFICATION	//{{{ BufferLoadedVisitor class
WITHOUT_CLASSIFICATION	//{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ BufferClosedVisitor class
WITHOUT_CLASSIFICATION	//{{{ Match class
WITHOUT_CLASSIFICATION	//{{{ setReverseSearch() method
WITHOUT_CLASSIFICATION	//{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ getBeanShellReplace() method
WITHOUT_CLASSIFICATION	//{{{ setRegexp() method
WITHOUT_CLASSIFICATION	//{{{ getReverseSearch() method
WITHOUT_CLASSIFICATION	//{{{ setAutoWrap() method
WITHOUT_CLASSIFICATION	//{{{ setBeanShellReplace() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ find() method
WITHOUT_CLASSIFICATION	//{{{ find() method
WITHOUT_CLASSIFICATION	//{{{ find() method
WITHOUT_CLASSIFICATION	// beep if beep property set
WITHOUT_CLASSIFICATION	//{{{ setSearchFileSet() method
WITHOUT_CLASSIFICATION	//{{{ getAutoWrap() method
WITHOUT_CLASSIFICATION	//{{{ setSearchMatcher() method
WITHOUT_CLASSIFICATION	// start search from beginning
WITHOUT_CLASSIFICATION	//{{{ getSearchMatcher() method
WITHOUT_CLASSIFICATION	//{{{ Actions
WITHOUT_CLASSIFICATION	//{{{ getSearchFileSet() method
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	//{{{ getSmartCaseReplace() method
WITHOUT_CLASSIFICATION	//{{{ hyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ hyperSearch() method
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	// component that will parent any dialog boxes
WITHOUT_CLASSIFICATION	// Wait for the buffer to load
WITHOUT_CLASSIFICATION	// the start and end flags will be wrong with reverse search enabled, // but they are only used by the regexp matcher, which doesn't // support reverse search yet. // // REMIND: fix flags when adding reverse regexp search.
WITHOUT_CLASSIFICATION	// make sure end of match is visible
WITHOUT_CLASSIFICATION	// make sure start of match is visible
WITHOUT_CLASSIFICATION	//{{{ replace() method
WITHOUT_CLASSIFICATION	//{{{ replace() method
WITHOUT_CLASSIFICATION	// so that Replace and Find continues from // the right location
WITHOUT_CLASSIFICATION	//{{{ replaceAll() method
WITHOUT_CLASSIFICATION	// Wait for buffer to finish loading
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ handleMessage() method
WITHOUT_CLASSIFICATION	//{{{ record() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ ok() method
WITHOUT_CLASSIFICATION	//{{{ cancel() method
WITHOUT_CLASSIFICATION	//{{{ Constants
WITHOUT_CLASSIFICATION	//{{{ preloadSearchDialog() method
WITHOUT_CLASSIFICATION	/* Don't do this when playing a macro, cos it's annoying */
WITHOUT_CLASSIFICATION	//{{{ handleError() method
WITHOUT_CLASSIFICATION	// Tags plugin likes to call this method at times other than // startup; so we need to fire a SearchSettingsChanged to // notify the search bar and so on.
WITHOUT_CLASSIFICATION	//{{{ regexpBeanShellReplace() method
WITHOUT_CLASSIFICATION	//{{{ initReplace() method
WITHOUT_CLASSIFICATION	// only record this if doing a find next
WITHOUT_CLASSIFICATION	//{{{ regexpReplace() method
WITHOUT_CLASSIFICATION	//{{{ replaceInSelection() method
WITHOUT_CLASSIFICATION	//{{{ showSearchDialog() method
WITHOUT_CLASSIFICATION	//{{{ _replace() method
WITHOUT_CLASSIFICATION	//{{{ literalBeanShellReplace() method
WITHOUT_CLASSIFICATION	//{{{ replaceOne() method
WITHOUT_CLASSIFICATION	//{{{ replaceOne() method
WITHOUT_CLASSIFICATION	//{{{ getColumnOnOtherLine() method
WITHOUT_CLASSIFICATION	//{{{ getSearchDialog() method
WITHOUT_CLASSIFICATION	// might be already selected, see above.
WITHOUT_CLASSIFICATION	/* this property is only loaded and saved if				 * the 'current buffer' file set is selected.				 * otherwise, it defaults to on. */
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ save() method
WITHOUT_CLASSIFICATION	//{{{ load() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ createFieldPanel() method
WITHOUT_CLASSIFICATION	//{{{ updateEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getFileFilter() method
WITHOUT_CLASSIFICATION	//{{{ SearchDialog constructor
WITHOUT_CLASSIFICATION	// fields
WITHOUT_CLASSIFICATION	// search settings
WITHOUT_CLASSIFICATION	/* replaceBtn = new JButton(jEdit.getProperty("search.replaceBtn"));		replaceBtn.setMnemonic(jEdit.getProperty("search.replaceBtn.mnemonic")			.charAt(0));		grid.add(replaceBtn);		replaceBtn.addActionListener(actionHandler); */
WITHOUT_CLASSIFICATION	// multifile settings
WITHOUT_CLASSIFICATION	//{{{ createSearchSettingsPanel() method
WITHOUT_CLASSIFICATION	// buttons
WITHOUT_CLASSIFICATION	//{{{ closeOrKeepDialog() method
WITHOUT_CLASSIFICATION	/* replaceBtn, */
WITHOUT_CLASSIFICATION	/* replaceBtn, */
WITHOUT_CLASSIFICATION	/* replaceBtn, */
WITHOUT_CLASSIFICATION	/* replaceBtn, */
WITHOUT_CLASSIFICATION	// prevents us from handling SearchSettingsChanged // as a result of below
WITHOUT_CLASSIFICATION	//{{{ createMultiFilePanel() method
WITHOUT_CLASSIFICATION	// source is directory or filter field
WITHOUT_CLASSIFICATION	//{{{ createButtonsPanel() method
WITHOUT_CLASSIFICATION	//{{{ synchronizeMultiFileSettings() method
WITHOUT_CLASSIFICATION	//{{{ ReplaceActionHandler class
WITHOUT_CLASSIFICATION	// source is directory or filter field
WITHOUT_CLASSIFICATION	//{{{ SettingsActionHandler class
WITHOUT_CLASSIFICATION	//{{{ MyJRadioButton class
WITHOUT_CLASSIFICATION	//{{{ MultiFileActionHandler class
WITHOUT_CLASSIFICATION	//{{{ ButtonActionHandler class
WITHOUT_CLASSIFICATION	//{{{ AllBufferSet constructor
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ getCode() method
WITHOUT_CLASSIFICATION	//{{{ run() method
WITHOUT_CLASSIFICATION	//{{{ getFirstFile() method
WITHOUT_CLASSIFICATION	//{{{ getNextFile() method
WITHOUT_CLASSIFICATION	//{{{ getFiles() method
WITHOUT_CLASSIFICATION	//{{{ getFileCount() method
WITHOUT_CLASSIFICATION	//{{{ _getFiles() method
WITHOUT_CLASSIFICATION	//{{{ searchInSelection() method
WITHOUT_CLASSIFICATION	// just as if Enter was pressed in another // text field
WITHOUT_CLASSIFICATION	// just as if Enter was pressed in another // text field
WITHOUT_CLASSIFICATION	// to minimise synchronization and stuff like that, we only // show a status message at most twice a second
WITHOUT_CLASSIFICATION	//{{{ HyperSearchRequest constructor
WITHOUT_CLASSIFICATION	//{{{ match() method
WITHOUT_CLASSIFICATION	// initially zero, so that we always show the first message
WITHOUT_CLASSIFICATION	//{{{ BoyerMooreSearchMatcher constructor
WITHOUT_CLASSIFICATION	//{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ doHyperSearch() method
WITHOUT_CLASSIFICATION	//{{{ nextMatch() method
WITHOUT_CLASSIFICATION	// position variable for pattern test position
WITHOUT_CLASSIFICATION	/*	 *  a good introduction to the Boyer-Moore fast string matching	 *  algorithm may be found on Moore's website at:	 *	 *   http://www.cs.utexas.edu/users/moore/best-ideas/string-searching/	 *	 */
WITHOUT_CLASSIFICATION	// pattern test
WITHOUT_CLASSIFICATION	// position variable for pattern start
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ nextMatch() method
WITHOUT_CLASSIFICATION	// heuristic #2
WITHOUT_CLASSIFICATION	// last possible start position of a match with this pattern; // this is negative if the pattern is longer than the text // causing the search loop below to immediately fail //int last_anchor = reverseSearch //	? offset + pattern.length - 1 //	: length - pattern.length;
WITHOUT_CLASSIFICATION	// the search works by starting the anchor (first character // of the pattern) at the initial offset. as long as the // anchor is far enough from the enough of the text for the // pattern to match, and until the pattern matches, we // compare the pattern to the text from the last character // to the first character in reverse order. where a character // in the pattern mismatches, we use the two heuristics // based on the mismatch character and its position in the // pattern to determine the furthest we can move the anchor // without missing any potential pattern matches.
WITHOUT_CLASSIFICATION	// character mismatch, determine how many characters to skip
WITHOUT_CLASSIFICATION	// go back to the while loop
WITHOUT_CLASSIFICATION	// heuristic #1
WITHOUT_CLASSIFICATION	// MISMATCH: return -1 as defined by API
WITHOUT_CLASSIFICATION	// skip the greater of the two distances provided by the // heuristics
WITHOUT_CLASSIFICATION	// Boyer-Moore helper methods
WITHOUT_CLASSIFICATION	// MATCH: return the position of its first character
WITHOUT_CLASSIFICATION	// leave the table cleanly-initialized for an empty pattern
WITHOUT_CLASSIFICATION	// Boyer-Moore member fields
WITHOUT_CLASSIFICATION	/*	 *  the 'skip' array is used to determine for each index in the	 *  hashed alphabet how many characters can be skipped if	 *  a mismatch occurs on a characater hashing to that index.	 */
WITHOUT_CLASSIFICATION	//{{{ generateSkipArray() method
WITHOUT_CLASSIFICATION	// initialize the skip array to all zeros
WITHOUT_CLASSIFICATION	/*	 *  to avoid our skip table having a length of 2 ^ 16, we hash each	 *  character of the input into a character in the alphabet [\x00-\xFF]	 *  using the lower 8 bits of the character's value (resulting in	 *  a more reasonable skip table of length 2 ^ 8).	 *	 *  the result of this is that more than one character can hash to the	 *  same index, but since the skip table encodes the position of	 *  occurence of the character furthest into the string with a particular	 *  index (whether or not it is the only character with that index), an	 *  index collision only means that that this heuristic will give a	 *  sub-optimal skip (i.e. a complete skip table could use the differences	 *  between colliding characters to maximal effect, at the expense of	 *  building a table that is over 2 orders of magnitude larger and very	 *  sparse).	 */
WITHOUT_CLASSIFICATION	//{{{ getSkipIndex() method
WITHOUT_CLASSIFICATION	//{{{ generateSuffixArray() method
WITHOUT_CLASSIFICATION	//{{{ RESearchMatcher constructor
WITHOUT_CLASSIFICATION	// never mind
WITHOUT_CLASSIFICATION	//{{{ stringToToken() method
WITHOUT_CLASSIFICATION	//{{{ createToken() method
WITHOUT_CLASSIFICATION	//{{{ addToken() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ getLineContext() method
WITHOUT_CLASSIFICATION	//{{{ setLineContext() method
WITHOUT_CLASSIFICATION	//{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	// unless we are matching to the end of the buffer, // $ should not match on the end of the substring
WITHOUT_CLASSIFICATION	// unless we are matching from the start of the buffer, // ^ should not match on the beginning of the substring
WITHOUT_CLASSIFICATION	//{{{ lookup() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ Token types
WITHOUT_CLASSIFICATION	//{{{ getTokens() method
WITHOUT_CLASSIFICATION	// Special:
WITHOUT_CLASSIFICATION	//{{{ getNonAlphaNumericChars() method
WITHOUT_CLASSIFICATION	//{{{ Token constructor
WITHOUT_CLASSIFICATION	//{{{ handleToken() method
WITHOUT_CLASSIFICATION	//{{{ regionMatches() method
WITHOUT_CLASSIFICATION	//{{{ TokenMarker constructor
WITHOUT_CLASSIFICATION	//{{{ getParserRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ getKeywords() method
WITHOUT_CLASSIFICATION	//{{{ KeywordMap constructor
WITHOUT_CLASSIFICATION	//{{{ KeywordMap constructor
WITHOUT_CLASSIFICATION	//{{{ addRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ getStringMapKey() method
WITHOUT_CLASSIFICATION	//{{{ getSegmentMapKey() method
WITHOUT_CLASSIFICATION	//{{{ Keyword class
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ markTokens() method
WITHOUT_CLASSIFICATION	//{{{ check if we have to stop parsing
WITHOUT_CLASSIFICATION	//{{{ getMainRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ Set up some instance variables // this is to avoid having to pass around lots and lots of // parameters.
WITHOUT_CLASSIFICATION	//{{{ getRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ See if the rule's start or end sequence matches here
WITHOUT_CLASSIFICATION	//{{{ getRuleSets() method
WITHOUT_CLASSIFICATION	//{{{ Main parser loop
WITHOUT_CLASSIFICATION	// stop checking rules if there was a match
WITHOUT_CLASSIFICATION	//{{{ check for end of delegate
WITHOUT_CLASSIFICATION	//{{{ Mark all remaining characters
WITHOUT_CLASSIFICATION	//{{{ check every rule
WITHOUT_CLASSIFICATION	//{{{ check if current character is a word separator
WITHOUT_CLASSIFICATION	//{{{ checkDelegateEnd() method
WITHOUT_CLASSIFICATION	//{{{ Unwind any NO_LINE_BREAK parent delegates
WITHOUT_CLASSIFICATION	//{{{ handleRule() method
WITHOUT_CLASSIFICATION	// move pos to last character of match sequence
WITHOUT_CLASSIFICATION	// check escape rule of parent
WITHOUT_CLASSIFICATION	//{{{ Some rules can only match in certain locations
WITHOUT_CLASSIFICATION	//{{{ SEQ
WITHOUT_CLASSIFICATION	// the end cannot be a regular expression
WITHOUT_CLASSIFICATION	/* substitute result of matching the rule start				 * into the end string.				 *				 * eg, in shell script mode, <<\s*(\w+) is				 * matched into \<$1\> to construct rules for				 * highlighting read-ins like this <<EOF				 * ...				 * EOF				 */
WITHOUT_CLASSIFICATION	//{{{ Check for an escape sequence
WITHOUT_CLASSIFICATION	//{{{ handleNoWordBreak() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ equals() method
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//{{{ resolveEntity() method
WITHOUT_CLASSIFICATION	//{{{ attribute() method
WITHOUT_CLASSIFICATION	//{{{ hashCode() method
WITHOUT_CLASSIFICATION	//}}} //{{{ MARK_FOLLOWING
WITHOUT_CLASSIFICATION	// Instead of passing these around to each method, we just store them // as instance variables. Note that this is not thread-safe.
WITHOUT_CLASSIFICATION	// move pos to last character of match sequence
WITHOUT_CLASSIFICATION	// note that all regexps start with \A so they only // match the start of the string
WITHOUT_CLASSIFICATION	// a DELEGATE attribute on a SEQ changes the // ruleset from the end of the SEQ onwards
WITHOUT_CLASSIFICATION	//}}} //{{{ Handle start of rule
WITHOUT_CLASSIFICATION	// break out of inner for loop to check next char //}}} //{{{ Handle end of MARK_FOLLOWING
WITHOUT_CLASSIFICATION	//}}} //{{{ SPAN, EOL_SPAN
WITHOUT_CLASSIFICATION	//{{{ markKeyword() method
WITHOUT_CLASSIFICATION	//}}} //{{{ MARK_PREVIOUS
WITHOUT_CLASSIFICATION	//{{{ substitute() method
WITHOUT_CLASSIFICATION	//{{{ handleTokenWithSpaces() method
WITHOUT_CLASSIFICATION	//{{{ Do keywords
WITHOUT_CLASSIFICATION	//{{{ Do digits
WITHOUT_CLASSIFICATION	// used for SPAN_REGEXP rules; otherwise null
WITHOUT_CLASSIFICATION	// only match against regexp if its not all // digits; if all digits, no point matching
WITHOUT_CLASSIFICATION	//{{{ Handle any remaining crud
WITHOUT_CLASSIFICATION	//{{{ clone() method
WITHOUT_CLASSIFICATION	//{{{ LineContext class
WITHOUT_CLASSIFICATION	//{{{ intern() method
WITHOUT_CLASSIFICATION	//{{{ LineContext constructor
WITHOUT_CLASSIFICATION	//{{{ LineContext constructor
WITHOUT_CLASSIFICATION	//{{{ XModeHandler constructor
WITHOUT_CLASSIFICATION	//{{{ charArraysEqual() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// can't happen
WITHOUT_CLASSIFICATION	//{{{ error() method
WITHOUT_CLASSIFICATION	//{{{ Protected members
WITHOUT_CLASSIFICATION	//{{{ doctypeDecl() method
WITHOUT_CLASSIFICATION	//{{{ charData() method
WITHOUT_CLASSIFICATION	//{{{ startElement() method
WITHOUT_CLASSIFICATION	//{{{ endElement() method
WITHOUT_CLASSIFICATION	//{{{ startDocument() method
WITHOUT_CLASSIFICATION	//{{{ pushElement() method
WITHOUT_CLASSIFICATION	//{{{ peekElement() method
WITHOUT_CLASSIFICATION	//{{{ popElement() method
WITHOUT_CLASSIFICATION	//{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	//{{{ getTokenMarker() method
WITHOUT_CLASSIFICATION	//{{{ endDocument() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ handleToken() method
WITHOUT_CLASSIFICATION	//}}} //{{{ MARK_FOLLOWING
WITHOUT_CLASSIFICATION	//}}} //{{{ MARK_PREVIOUS
WITHOUT_CLASSIFICATION	//}}} //{{{ EOL_SPAN
WITHOUT_CLASSIFICATION	// mixed digit/alpha keyword, // and no regexp... don't // highlight as DIGIT
WITHOUT_CLASSIFICATION	//}}} //{{{ RULES
WITHOUT_CLASSIFICATION	//{{{ PROPERTY
WITHOUT_CLASSIFICATION	//}}} //{{{ TERMINATE
WITHOUT_CLASSIFICATION	//}}} //{{{ PROPS
WITHOUT_CLASSIFICATION	//}}} //{{{ IMPORT
WITHOUT_CLASSIFICATION	//}}} //{{{ SEQ_REGEXP
WITHOUT_CLASSIFICATION	//}}} //{{{ SEQ
WITHOUT_CLASSIFICATION	//}}} //{{{ SPAN_REGEXP
WITHOUT_CLASSIFICATION	//}}} //{{{ SPAN
WITHOUT_CLASSIFICATION	//{{{ getModeProperties() method
WITHOUT_CLASSIFICATION	//}}} //{{{ Keywords
WITHOUT_CLASSIFICATION	//}}} //{{{ EOL_SPAN_REGEXP
WITHOUT_CLASSIFICATION	//{{{ addKeyword() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ setLineContext() method
WITHOUT_CLASSIFICATION	//{{{ Major actions
WITHOUT_CLASSIFICATION	//{{{ paintChunkList() method
WITHOUT_CLASSIFICATION	//{{{ paintChunkBackgrounds() method
WITHOUT_CLASSIFICATION	// only paint visible chunks
WITHOUT_CLASSIFICATION	// only paint visible chunks
WITHOUT_CLASSIFICATION	//{{{ Chunk constructor
WITHOUT_CLASSIFICATION	// Useful for debugging purposes
WITHOUT_CLASSIFICATION	//{{{ Paint token background color if necessary
WITHOUT_CLASSIFICATION	//{{{ Chunk constructor
WITHOUT_CLASSIFICATION	//{{{ offsetToX() method
WITHOUT_CLASSIFICATION	//{{{ offsetToX() method
WITHOUT_CLASSIFICATION	//{{{ createSpanRule() method
WITHOUT_CLASSIFICATION	//{{{ xToOffset() method
WITHOUT_CLASSIFICATION	//{{{ xToOffset() method
WITHOUT_CLASSIFICATION	//{{{ getPositions() method
WITHOUT_CLASSIFICATION	// set up after init()
WITHOUT_CLASSIFICATION	//{{{ Action hints
WITHOUT_CLASSIFICATION	//{{{ Position match hints
WITHOUT_CLASSIFICATION	//{{{ createRegexpSpanRule() method
WITHOUT_CLASSIFICATION	//{{{ createSequenceRule() method
WITHOUT_CLASSIFICATION	//{{{ createEOLSpanRule() method
WITHOUT_CLASSIFICATION	//{{{ createRegexpSequenceRule() method
WITHOUT_CLASSIFICATION	//{{{ createRegexpEOLSpanRule() method
WITHOUT_CLASSIFICATION	//{{{ createMarkFollowingRule() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ getName() method
WITHOUT_CLASSIFICATION	//{{{ getProperties() method
WITHOUT_CLASSIFICATION	//{{{ setProperties() method
WITHOUT_CLASSIFICATION	//{{{ setIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ getIgnoreCase() method
WITHOUT_CLASSIFICATION	//{{{ getKeywords() method
WITHOUT_CLASSIFICATION	//{{{ addRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ getModeName() method
WITHOUT_CLASSIFICATION	//{{{ createMarkPreviousRule() method
WITHOUT_CLASSIFICATION	//{{{ setEscapeRule() method
WITHOUT_CLASSIFICATION	//{{{ createEscapeRule() method
WITHOUT_CLASSIFICATION	//{{{ getSetName() method
WITHOUT_CLASSIFICATION	//{{{ getStandardRuleSet() method
WITHOUT_CLASSIFICATION	//{{{ setKeywords() method
WITHOUT_CLASSIFICATION	//{{{ ParserRuleSet constructor
WITHOUT_CLASSIFICATION	//{{{ resolveImports() method
WITHOUT_CLASSIFICATION	//{{{ getHighlightDigits() method
WITHOUT_CLASSIFICATION	//{{{ addRule() method
WITHOUT_CLASSIFICATION	//{{{ getDefault() method
WITHOUT_CLASSIFICATION	//{{{ getRules() method
WITHOUT_CLASSIFICATION	//{{{ setHighlightDigits() method
WITHOUT_CLASSIFICATION	//{{{ getRuleCount() method
WITHOUT_CLASSIFICATION	//{{{ getTerminateChar() method
WITHOUT_CLASSIFICATION	//{{{ getDigitRegexp() method
WITHOUT_CLASSIFICATION	//{{{ setTerminateChar() method
WITHOUT_CLASSIFICATION	//{{{ setDefault() method
WITHOUT_CLASSIFICATION	//{{{ setDigitRegexp() method
WITHOUT_CLASSIFICATION	//{{{ getEscapeRule() method
WITHOUT_CLASSIFICATION	//{{{ getNoWordSep() method
WITHOUT_CLASSIFICATION	//{{{ setNoWordSep() method
WITHOUT_CLASSIFICATION	//{{{ isBuiltIn() method
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ bufferClosed() method
WITHOUT_CLASSIFICATION	//{{{ handleToken() method
WITHOUT_CLASSIFICATION	//{{{ setCharWidth() method
WITHOUT_CLASSIFICATION	// SILLY: allow for anti-aliased characters' "fuzz"
WITHOUT_CLASSIFICATION	//{{{ canMerge() method
WITHOUT_CLASSIFICATION	// don't have chunks longer than 100 characters to avoid slowing things down
WITHOUT_CLASSIFICATION	//{{{ getChunkList() method
WITHOUT_CLASSIFICATION	//{{{ textAreaDisposed() method
WITHOUT_CLASSIFICATION	//{{{ SyntaxStyle constructor
WITHOUT_CLASSIFICATION	//{{{ createChunk() method
WITHOUT_CLASSIFICATION	//{{{ Static part
WITHOUT_CLASSIFICATION	//{{{ initChunk() method
WITHOUT_CLASSIFICATION	//{{{ getForegroundColor() method
WITHOUT_CLASSIFICATION	//{{{ merge() method
WITHOUT_CLASSIFICATION	// in case already initialized; un-initialize it
WITHOUT_CLASSIFICATION	//{{{ getBackgroundColor() method
WITHOUT_CLASSIFICATION	//{{{ getDisplayManager() method
WITHOUT_CLASSIFICATION	//{{{ getFont() method
WITHOUT_CLASSIFICATION	//{{{ _notifyScreenLineChanges() method
WITHOUT_CLASSIFICATION	//{{{ getCharWidth() method
WITHOUT_CLASSIFICATION	// if we got here, no unused display manager in list
WITHOUT_CLASSIFICATION	//{{{ isLineVisible() method
WITHOUT_CLASSIFICATION	//{{{ releaseDisplayManager() method
WITHOUT_CLASSIFICATION	//{{{ getFirstVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineCount() method
WITHOUT_CLASSIFICATION	//{{{ getNextVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ getLastVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ getPrevVisibleLine() method
WITHOUT_CLASSIFICATION	/* start of next expanded range */
WITHOUT_CLASSIFICATION	/* in collapsed range */
WITHOUT_CLASSIFICATION	/* in collapsed range */
WITHOUT_CLASSIFICATION	/* start of next expanded range */
WITHOUT_CLASSIFICATION	/* beyond last visible line */
WITHOUT_CLASSIFICATION	/* equal to last visible line */
WITHOUT_CLASSIFICATION	/* last in expanded range */
WITHOUT_CLASSIFICATION	/* end of prev expanded range */
WITHOUT_CLASSIFICATION	/* next in expanded range */
WITHOUT_CLASSIFICATION	/* end of prev expanded range */
WITHOUT_CLASSIFICATION	/* before first visible line */
WITHOUT_CLASSIFICATION	/* prev in expanded range */
WITHOUT_CLASSIFICATION	/* equal to first visible line */
WITHOUT_CLASSIFICATION	/* first in expanded range */
WITHOUT_CLASSIFICATION	//{{{ Find fold start and end...
WITHOUT_CLASSIFICATION	//{{{ collapseFold() method
WITHOUT_CLASSIFICATION	//{{{ getScrollLineCount() method
WITHOUT_CLASSIFICATION	// scan backwards looking for the start
WITHOUT_CLASSIFICATION	// this line is the start of a fold
WITHOUT_CLASSIFICATION	// this line is the start of a fold
WITHOUT_CLASSIFICATION	// no folds in buffer
WITHOUT_CLASSIFICATION	// Collapse the fold...
WITHOUT_CLASSIFICATION	//{{{ expandFold() method
WITHOUT_CLASSIFICATION	// the first sub-fold. used by JEditTextArea.expandFold().
WITHOUT_CLASSIFICATION	//{{{ Find fold start and fold end...
WITHOUT_CLASSIFICATION	/* isLineVisible(i) && */
WITHOUT_CLASSIFICATION	//XXX
WITHOUT_CLASSIFICATION	//{{{ Expand the fold...
WITHOUT_CLASSIFICATION	// we need a different value of initialFoldLevel here!
WITHOUT_CLASSIFICATION	//{{{ expandAllFolds() method
WITHOUT_CLASSIFICATION	//{{{ expandFolds() method
WITHOUT_CLASSIFICATION	//{{{ expandFolds() method
WITHOUT_CLASSIFICATION	/* this ensures that the first line is always visible */
WITHOUT_CLASSIFICATION	//{{{ narrow() method
WITHOUT_CLASSIFICATION	// if we narrowed to a single collapsed fold
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//{{{ changed() method
WITHOUT_CLASSIFICATION	//{{{ changed() method
WITHOUT_CLASSIFICATION	//{{{ setScreenLineCount() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ _notifyScreenLineChanges() method
WITHOUT_CLASSIFICATION	//XXX
WITHOUT_CLASSIFICATION	// when the text area switches to us, it will do // a reset anyway
WITHOUT_CLASSIFICATION	// this notifies each display manager editing this // buffer of the screen line count change
WITHOUT_CLASSIFICATION	//{{{ fvmget() method
WITHOUT_CLASSIFICATION	//{{{ updateWrapSettings() method
WITHOUT_CLASSIFICATION	//{{{ DisplayManager constructor
WITHOUT_CLASSIFICATION	//{{{ showLineRange() method
WITHOUT_CLASSIFICATION	//{{{ fvmput() method
WITHOUT_CLASSIFICATION	//{{{ hideLineRange() method
WITHOUT_CLASSIFICATION	//{{{ fvmreset() method
WITHOUT_CLASSIFICATION	// important: not lineMgr.getScreenLineCount()
WITHOUT_CLASSIFICATION	//{{{ fvmput2() method
WITHOUT_CLASSIFICATION	// ScrollLineCount.changed() does the same // thing
WITHOUT_CLASSIFICATION	//{{{ fvmdump() method
WITHOUT_CLASSIFICATION	//{{{ _setScreenLineCount() method
WITHOUT_CLASSIFICATION	/* update fold visibility map. */
WITHOUT_CLASSIFICATION	/* update fold visibility map. */
WITHOUT_CLASSIFICATION	//{{{ FirstLine class
WITHOUT_CLASSIFICATION	//{{{ Anchor class
WITHOUT_CLASSIFICATION	//{{{ Debug code
WITHOUT_CLASSIFICATION	//{{{ ScrollLineCount class
WITHOUT_CLASSIFICATION	//{{{ Debug code
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ foldLevelChanged() method
WITHOUT_CLASSIFICATION	//{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ transactionComplete() method
WITHOUT_CLASSIFICATION	//{{{ foldHandlerChanged() method
WITHOUT_CLASSIFICATION	/* update fold visibility map. */
WITHOUT_CLASSIFICATION	//{{{ Debug code
WITHOUT_CLASSIFICATION	// JEditTextArea.scrollTo() needs this to simplify // its code
WITHOUT_CLASSIFICATION	// JEditTextArea.scrollTo() needs this to simplify // its code
WITHOUT_CLASSIFICATION	//{{{ physUp() method // scroll up by physical line amount
WITHOUT_CLASSIFICATION	//{{{ scrollDown() method // scroll down by screen line amount
WITHOUT_CLASSIFICATION	//{{{ scrollUp() method // scroll up by screen line amount
WITHOUT_CLASSIFICATION	//{{{ ensurePhysicalLineIsVisible() method
WITHOUT_CLASSIFICATION	//{{{ BufferChangeHandler class
WITHOUT_CLASSIFICATION	//System.err.println("foldLevelChanged " + (start-1) + " to " + textArea.getLastPhysicalLine() + "," + end);
WITHOUT_CLASSIFICATION	//{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	//{{{ resize selections if necessary
WITHOUT_CLASSIFICATION	/* both have same visibility; just remove			 * anything in between. */
WITHOUT_CLASSIFICATION	// we're removing from before // the first visible to after // the last visible
WITHOUT_CLASSIFICATION	/* collapse 2 */
WITHOUT_CLASSIFICATION	// we're removing from // the first visible to after // the last visible
WITHOUT_CLASSIFICATION	/* shift */
WITHOUT_CLASSIFICATION	/* update */
WITHOUT_CLASSIFICATION	// will be handled later. // see comments at the end of // transactionComplete().
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ preContentRemoved() method
WITHOUT_CLASSIFICATION	//XXX
WITHOUT_CLASSIFICATION	//{{{ setBorder() method
WITHOUT_CLASSIFICATION	//{{{ doDelayedUpdate() method
WITHOUT_CLASSIFICATION	// must update screen line counts before we call // _notifyScreenLineChanges() since that calls // updateScrollBars() which needs valid info
WITHOUT_CLASSIFICATION	// must be before the below call // so that the chunk cache is not // updated with an invisible first // line (see above)
WITHOUT_CLASSIFICATION	// update visible lines
WITHOUT_CLASSIFICATION	// force the fold levels to be // updated.
WITHOUT_CLASSIFICATION	// when painting the last line of // a buffer, Buffer.isFoldStart() // doesn't call getFoldLevel(), // hence the foldLevelChanged() // event might not be sent for the // previous line.
WITHOUT_CLASSIFICATION	//{{{ delayedUpdate() method
WITHOUT_CLASSIFICATION	//{{{ caretAutoScroll() method
WITHOUT_CLASSIFICATION	//{{{ updateBorder() method
WITHOUT_CLASSIFICATION	//{{{ Layers
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ Match class
WITHOUT_CLASSIFICATION	//{{{ paintInvalidLine() method
WITHOUT_CLASSIFICATION	//{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	//{{{ selectMatch() method
WITHOUT_CLASSIFICATION	//{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	// fill the background
WITHOUT_CLASSIFICATION	//{{{ MouseActions constructor
WITHOUT_CLASSIFICATION	//{{{ BracketMatcher class
WITHOUT_CLASSIFICATION	//{{{ getActionForEvent() method
WITHOUT_CLASSIFICATION	//{{{ removeExtension() method
WITHOUT_CLASSIFICATION	//{{{ getMatch() method
WITHOUT_CLASSIFICATION	// if buffer is loading, don't paint anything
WITHOUT_CLASSIFICATION	//{{{ Highlight class
WITHOUT_CLASSIFICATION	//{{{ Gutter constructor
WITHOUT_CLASSIFICATION	//{{{ getExtensions() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ setBorder() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ toggleExpanded() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ Getters and setters
WITHOUT_CLASSIFICATION	/*	 * Component.getPreferredSize() is overridden here to support the	 * collapsing behavior.	 */
WITHOUT_CLASSIFICATION	/*	 * JComponent.setBorder(Border) is overridden here to cache the left	 * inset of the border (if any) to avoid having to fetch it during every	 * repaint.	 */
WITHOUT_CLASSIFICATION	//{{{ getHighlightedForeground() method
WITHOUT_CLASSIFICATION	//{{{ setFont() method
WITHOUT_CLASSIFICATION	//{{{ setHighlightInterval() method
WITHOUT_CLASSIFICATION	/*	 * JComponent.setFont(Font) is overridden here to cache the baseline for	 * the font. This avoids having to get the font metrics during every	 * repaint.	 */
WITHOUT_CLASSIFICATION	//{{{ setHighlightedForeground() method
WITHOUT_CLASSIFICATION	//{{{ getLineNumberAlignment() method
WITHOUT_CLASSIFICATION	//{{{ getCurrentLineForeground() method
WITHOUT_CLASSIFICATION	//{{{ isStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setCurrentLineForeground() method
WITHOUT_CLASSIFICATION	//{{{ setLineNumberAlignment() method
WITHOUT_CLASSIFICATION	//{{{ getFoldColor() method
WITHOUT_CLASSIFICATION	//{{{ isCurrentLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setFoldColor() method
WITHOUT_CLASSIFICATION	//{{{ isMarkerHighlightEnabled()
WITHOUT_CLASSIFICATION	//{{{ isExpanded() method
WITHOUT_CLASSIFICATION	//{{{ setCurrentLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setExpanded() method
WITHOUT_CLASSIFICATION	//{{{ setStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getHighlightInterval() method
WITHOUT_CLASSIFICATION	//{{{ getStructureHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ getMarkerHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ setStructureHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ setMarkerHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ isMarkerHighlightEnabled() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ Layers
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ isManagingFocus() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	//{{{ setBounds() method
WITHOUT_CLASSIFICATION	//{{{ mouseExited() method
WITHOUT_CLASSIFICATION	//{{{ Getters and setters
WITHOUT_CLASSIFICATION	//{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	//{{{ mouseEntered() method
WITHOUT_CLASSIFICATION	//{{{ paintLine() method
WITHOUT_CLASSIFICATION	// draw |
WITHOUT_CLASSIFICATION	// Skip lines beyond EOF
WITHOUT_CLASSIFICATION	//{{{ Handle actions
WITHOUT_CLASSIFICATION	//{{{ Paint fold triangles
WITHOUT_CLASSIFICATION	// draw |^
WITHOUT_CLASSIFICATION	// draw |_
WITHOUT_CLASSIFICATION	//{{{ Paint line numbers
WITHOUT_CLASSIFICATION	//{{{ MarkerHighlight class
WITHOUT_CLASSIFICATION	//{{{ Determine action
WITHOUT_CLASSIFICATION	//{{{ setStyles() method
WITHOUT_CLASSIFICATION	/* && e.getX() >= getWidth() - borderWidth * 2 */
WITHOUT_CLASSIFICATION	//{{{ getStyles() method
WITHOUT_CLASSIFICATION	//{{{ setCaretColor() method
WITHOUT_CLASSIFICATION	//{{{ getCaretColor() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ isAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setAntiAliasEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getStructureHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ setStructureHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ isStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setStructureHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ isBlockCaretEnabled() method
WITHOUT_CLASSIFICATION	// assumed this is called after a font render context is set up. // changing font render context settings without a setStyles() // call will not reset cached monospaced font info.
WITHOUT_CLASSIFICATION	//{{{ getMultipleSelectionColor() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionColor() method
WITHOUT_CLASSIFICATION	//{{{ getWrapGuideColor() method
WITHOUT_CLASSIFICATION	//{{{ setSelectionColor() method
WITHOUT_CLASSIFICATION	//{{{ setMultipleSelectionColor() method
WITHOUT_CLASSIFICATION	//{{{ setBlockCaretEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getLineHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ setLineHighlightColor() method
WITHOUT_CLASSIFICATION	//{{{ getEOLMarkerColor() method
WITHOUT_CLASSIFICATION	//{{{ isLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setWrapGuideColor() method
WITHOUT_CLASSIFICATION	//{{{ setLineHighlightEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setFractionalFontMetricsEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setEOLMarkerColor() method
WITHOUT_CLASSIFICATION	//{{{ isWrapGuidePainted() method
WITHOUT_CLASSIFICATION	//{{{ getEOLMarkersPainted() method
WITHOUT_CLASSIFICATION	//{{{ setEOLMarkersPainted() method
WITHOUT_CLASSIFICATION	//{{{ isFractionalFontMetricsEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setWrapGuidePainted() method
WITHOUT_CLASSIFICATION	//{{{ getFoldLineStyle() method
WITHOUT_CLASSIFICATION	//{{{ setFoldLineStyle() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ setBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getMinimumSize() method
WITHOUT_CLASSIFICATION	//{{{ paintComponent() method
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ getPreferredSize() method
WITHOUT_CLASSIFICATION	//{{{ nextTabStop() method
WITHOUT_CLASSIFICATION	//{{{ getCharWidth() method
WITHOUT_CLASSIFICATION	//{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ removeExtension() method
WITHOUT_CLASSIFICATION	//{{{ getExtensions() method
WITHOUT_CLASSIFICATION	//{{{ setFont() method
WITHOUT_CLASSIFICATION	//{{{ getFontRenderContext() method
WITHOUT_CLASSIFICATION	//{{{ getStringWidth() method
WITHOUT_CLASSIFICATION	//{{{ getFontMetrics() method
WITHOUT_CLASSIFICATION	//{{{ updateRenderingHints() method
WITHOUT_CLASSIFICATION	/* package-private since they are accessed by inner classes and we	 * want this to be fast */
WITHOUT_CLASSIFICATION	//{{{ Paint line highlight and collapsed fold highlight
WITHOUT_CLASSIFICATION	// should try to use this as little as possible.
WITHOUT_CLASSIFICATION	//hints.put(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY);
WITHOUT_CLASSIFICATION	//{{{ TextAreaPainter constructor
WITHOUT_CLASSIFICATION	//{{{ PaintLineBackground class
WITHOUT_CLASSIFICATION	//{{{ Paint token backgrounds
WITHOUT_CLASSIFICATION	// minimise access$ methods
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ dispose() method
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getView() method
WITHOUT_CLASSIFICATION	//{{{ getBuffer() method
WITHOUT_CLASSIFICATION	//{{{ Getters and setters
WITHOUT_CLASSIFICATION	//{{{ getDisplayManager() method
WITHOUT_CLASSIFICATION	//{{{ paintValidLine() method
WITHOUT_CLASSIFICATION	//horizontal.setBorder(null);
WITHOUT_CLASSIFICATION	// Because the clipRect's height is usually an even multiple // of the font height, we subtract 1 from it, otherwise one // too many lines will always be painted.
WITHOUT_CLASSIFICATION	//{{{ PaintSelection class
WITHOUT_CLASSIFICATION	//{{{ JEditTextArea constructor
WITHOUT_CLASSIFICATION	//{{{ paintSelection() method
WITHOUT_CLASSIFICATION	//{{{ PaintWrapGuide class
WITHOUT_CLASSIFICATION	//{{{ Initialize some misc. stuff
WITHOUT_CLASSIFICATION	//{{{ PaintText class
WITHOUT_CLASSIFICATION	//{{{ Add some event listeners
WITHOUT_CLASSIFICATION	//{{{ PaintCaret class
WITHOUT_CLASSIFICATION	//{{{ Initialize the GUI
WITHOUT_CLASSIFICATION	//{{{ setCaretBlinkEnabled() method
WITHOUT_CLASSIFICATION	// some plugins add stuff in a "right-hand" gutter
WITHOUT_CLASSIFICATION	//{{{ setQuickCopyEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getPainter() method
WITHOUT_CLASSIFICATION	//{{{ getElectricScroll() method
WITHOUT_CLASSIFICATION	//{{{ getGutter() method
WITHOUT_CLASSIFICATION	//{{{ isCaretBlinkEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setElectricScroll() method
WITHOUT_CLASSIFICATION	//{{{ isQuickCopyEnabled() method
WITHOUT_CLASSIFICATION	/* do nothing */
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	//{{{ isEditable() method
WITHOUT_CLASSIFICATION	// JEditTextArea.scrollTo() needs this to simplify // its code
WITHOUT_CLASSIFICATION	// dubious? //setFirstLine(0);
WITHOUT_CLASSIFICATION	//{{{ this ensures that the text area's look is slightly // more consistent with the rest of the metal l&f. // while it depends on not-so-well-documented portions // of Swing, it only affects appearance, so future // breakage shouldn't matter
WITHOUT_CLASSIFICATION	//{{{ setDragEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getDragAndDropCallback() method
WITHOUT_CLASSIFICATION	//{{{ scrollUpPage() method
WITHOUT_CLASSIFICATION	//{{{ Scrolling
WITHOUT_CLASSIFICATION	//{{{ setDragAndDropCallback() method
WITHOUT_CLASSIFICATION	// we have to be careful
WITHOUT_CLASSIFICATION	//{{{ isDragInProgress() method
WITHOUT_CLASSIFICATION	//{{{ Debugging code
WITHOUT_CLASSIFICATION	//{{{ setDragInProgress() method
WITHOUT_CLASSIFICATION	// we have to be careful
WITHOUT_CLASSIFICATION	//{{{ isDragEnabled() method
WITHOUT_CLASSIFICATION	//{{{ getVisibleLines() method
WITHOUT_CLASSIFICATION	//{{{ getFirstLine() method
WITHOUT_CLASSIFICATION	//{{{ getFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ setFirstLine() method
WITHOUT_CLASSIFICATION	//{{{ ensure we don't have empty space at the bottom or top, etc
WITHOUT_CLASSIFICATION	//{{{ ensure we don't have empty space at the bottom or top, etc
WITHOUT_CLASSIFICATION	//{{{ setFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ setFirstPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ getHorizontalOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLastPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ scrollDownLine() method
WITHOUT_CLASSIFICATION	//{{{ setHorizontalOffset() method
WITHOUT_CLASSIFICATION	//{{{ scrollUpLine() method
WITHOUT_CLASSIFICATION	//{{{ getLineCount() method
WITHOUT_CLASSIFICATION	//{{{ addScrollListener() method
WITHOUT_CLASSIFICATION	//{{{ scrollDownPage() method
WITHOUT_CLASSIFICATION	//{{{ scrollToCaret() method
WITHOUT_CLASSIFICATION	//{{{ removeScrollListener() method
WITHOUT_CLASSIFICATION	//{{{ scrollTo() method
WITHOUT_CLASSIFICATION	//{{{ scrollTo() method
WITHOUT_CLASSIFICATION	//{{{ Offset conversion
WITHOUT_CLASSIFICATION	//{{{ Get ready
WITHOUT_CLASSIFICATION	//{{{ Screen line stuff
WITHOUT_CLASSIFICATION	//{{{ Scroll vertically
WITHOUT_CLASSIFICATION	//{{{ invalidateScreenLineRange() method
WITHOUT_CLASSIFICATION	//{{{ Scroll horizontally
WITHOUT_CLASSIFICATION	//{{{ xyToOffset() method
WITHOUT_CLASSIFICATION	//{{{ getPhysicalLineOfScreenLine() method
WITHOUT_CLASSIFICATION	//{{{ xyToOffset() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ Convenience methods
WITHOUT_CLASSIFICATION	//{{{ getScreenLineStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ xToScreenLineOffset() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ invalidateLine() method
WITHOUT_CLASSIFICATION	//{{{ offsetToXY() method
WITHOUT_CLASSIFICATION	//{{{ offsetToXY() method
WITHOUT_CLASSIFICATION	//{{{ Painting
WITHOUT_CLASSIFICATION	//{{{ invalidateLineRange() method
WITHOUT_CLASSIFICATION	//{{{ getBufferLength() method
WITHOUT_CLASSIFICATION	//{{{ invalidateSelectedLines() method
WITHOUT_CLASSIFICATION	// to hide line highlight if selections are being added later on
WITHOUT_CLASSIFICATION	//{{{ getLineOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLineStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLineEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ getLineLength() method
WITHOUT_CLASSIFICATION	//{{{ getLineText() method
WITHOUT_CLASSIFICATION	//{{{ getLineText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ selectNone() method
WITHOUT_CLASSIFICATION	//{{{ setText() method
WITHOUT_CLASSIFICATION	//{{{ selectAll() method
WITHOUT_CLASSIFICATION	//{{{ getSelection() method
WITHOUT_CLASSIFICATION	// Scan backwards, trying to find a bracket
WITHOUT_CLASSIFICATION	//{{{ Selection
WITHOUT_CLASSIFICATION	//{{{ selectLine() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionCount() method
WITHOUT_CLASSIFICATION	//{{{ selectParagraph() method
WITHOUT_CLASSIFICATION	// We can't do the backward scan if start == 0
WITHOUT_CLASSIFICATION	//{{{ selectWord() method
WITHOUT_CLASSIFICATION	// to hide current line highlight
WITHOUT_CLASSIFICATION	//{{{ selectToMatchingBracket() method
WITHOUT_CLASSIFICATION	//{{{ selectToMatchingBracket() method
WITHOUT_CLASSIFICATION	// Reset count
WITHOUT_CLASSIFICATION	//{{{ selectBlock() method
WITHOUT_CLASSIFICATION	//{{{ setSelection() method
WITHOUT_CLASSIFICATION	//{{{ setSelection() method
WITHOUT_CLASSIFICATION	// Scan forward, matching that bracket
WITHOUT_CLASSIFICATION	// to hide current line highlight
WITHOUT_CLASSIFICATION	//{{{ lineInStructureScope() method
WITHOUT_CLASSIFICATION	// invalidate the old selection
WITHOUT_CLASSIFICATION	//{{{ invertSelection() method
WITHOUT_CLASSIFICATION	//{{{ addToSelection() method
WITHOUT_CLASSIFICATION	//{{{ addToSelection() method
WITHOUT_CLASSIFICATION	// to hide current line highlight
WITHOUT_CLASSIFICATION	// to hide current line highlight
WITHOUT_CLASSIFICATION	//{{{ getSelectionAtOffset() method
WITHOUT_CLASSIFICATION	//{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ removeFromSelection() method
WITHOUT_CLASSIFICATION	//{{{ removeFromSelection() method
WITHOUT_CLASSIFICATION	//{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ resizeSelection() method
WITHOUT_CLASSIFICATION	//{{{ setSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ extendSelection() method
WITHOUT_CLASSIFICATION	//{{{ extendSelection() method
WITHOUT_CLASSIFICATION	//{{{ Caret
WITHOUT_CLASSIFICATION	//{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedText() method
WITHOUT_CLASSIFICATION	// no no no!!!! //selectNone(); //}}}
WITHOUT_CLASSIFICATION	//{{{ setCaretPosition() method
WITHOUT_CLASSIFICATION	// for compatibility with older jEdit versions
WITHOUT_CLASSIFICATION	//{{{ addStructureMatcher() method
WITHOUT_CLASSIFICATION	//{{{ getSelectedLines() method
WITHOUT_CLASSIFICATION	//{{{ setCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ showSelectLineRangeDialog() method
WITHOUT_CLASSIFICATION	//{{{ removeStructureMatcher() method
WITHOUT_CLASSIFICATION	//{{{ getStructureMatch() method
WITHOUT_CLASSIFICATION	//{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ blinkCaret() method
WITHOUT_CLASSIFICATION	//{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ centerCaret() method
WITHOUT_CLASSIFICATION	//{{{ moveCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ getCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ getCaretLine() method
WITHOUT_CLASSIFICATION	//{{{ goToNextParagraph() method
WITHOUT_CLASSIFICATION	//{{{ getMagicCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ setMagicCaretPosition() method
WITHOUT_CLASSIFICATION	//{{{ goToNextWord() method
WITHOUT_CLASSIFICATION	//{{{ addCaretListener() method
WITHOUT_CLASSIFICATION	//{{{ goToNextWord() method
WITHOUT_CLASSIFICATION	//{{{ removeCaretListener() method
WITHOUT_CLASSIFICATION	//{{{ smartHome() method
WITHOUT_CLASSIFICATION	//{{{ goToNextBracket() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevBracket() method
WITHOUT_CLASSIFICATION	//{{{ goToNextLine() method
WITHOUT_CLASSIFICATION	//{{{ goToFirstVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ goToNextMarker() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevLine() method
WITHOUT_CLASSIFICATION	//{{{ goToNextPage() method
WITHOUT_CLASSIFICATION	//case 3:
WITHOUT_CLASSIFICATION	//case 3:
WITHOUT_CLASSIFICATION	//{{{ goToPrevMarker() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevPage() method
WITHOUT_CLASSIFICATION	//{{{ smartEnd() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevParagraph() method
WITHOUT_CLASSIFICATION	//{{{ goToLastVisibleLine() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevWord() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevWord() method
WITHOUT_CLASSIFICATION	//{{{ goToStartOfLine() method
WITHOUT_CLASSIFICATION	//{{{ goToEndOfLine() method
WITHOUT_CLASSIFICATION	//{{{ goToBufferStart() method
WITHOUT_CLASSIFICATION	//{{{ goToStartOfWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ goToEndOfWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ goToBufferEnd() method
WITHOUT_CLASSIFICATION	//{{{ addMarker() method
WITHOUT_CLASSIFICATION	//{{{ delete() method
WITHOUT_CLASSIFICATION	//{{{ isMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ userInput() method
WITHOUT_CLASSIFICATION	//{{{ deleteParagraph() method
WITHOUT_CLASSIFICATION	//{{{ goToMatchingBracket() method
WITHOUT_CLASSIFICATION	//{{{ toggleOverwriteEnabled() method
WITHOUT_CLASSIFICATION	//{{{ showGoToLineDialog() method
WITHOUT_CLASSIFICATION	//{{{ User input
WITHOUT_CLASSIFICATION	//{{{ backspace() method
WITHOUT_CLASSIFICATION	// check if the user entered a bracket
WITHOUT_CLASSIFICATION	//{{{ deleteToStartOfLine() method
WITHOUT_CLASSIFICATION	//{{{ isOverwriteEnabled() method
WITHOUT_CLASSIFICATION	//{{{ backspaceWord() method
WITHOUT_CLASSIFICATION	//{{{ setOverwriteEnabled() method
WITHOUT_CLASSIFICATION	//{{{ backspaceWord() method
WITHOUT_CLASSIFICATION	//{{{ toggleRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ deleteToEndOfLine() method
WITHOUT_CLASSIFICATION	//{{{ deleteWord() method
WITHOUT_CLASSIFICATION	//{{{ deleteLine() method
WITHOUT_CLASSIFICATION	//{{{ deleteWord() method
WITHOUT_CLASSIFICATION	// otherwise a bunch of consecutive C+d's would be merged // into one edit
WITHOUT_CLASSIFICATION	//{{{ swapMarkerAndCaret() method
WITHOUT_CLASSIFICATION	//{{{ setRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ toggleMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ setMultipleSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ Markers
WITHOUT_CLASSIFICATION	//{{{ isRectangularSelectionEnabled() method
WITHOUT_CLASSIFICATION	//{{{ Folding
WITHOUT_CLASSIFICATION	//{{{ goToMarker() method
WITHOUT_CLASSIFICATION	// always add markers on selected lines
WITHOUT_CLASSIFICATION	// toggle marker on caret line
WITHOUT_CLASSIFICATION	//{{{ removeTrailingWhiteSpace() method
WITHOUT_CLASSIFICATION	//{{{ shiftIndentLeft() method
WITHOUT_CLASSIFICATION	//{{{ shiftIndentRight() method
WITHOUT_CLASSIFICATION	//{{{ spacesToTabs() method
WITHOUT_CLASSIFICATION	//{{{ tabsToSpaces() method
WITHOUT_CLASSIFICATION	//{{{ formatParagraph() method
WITHOUT_CLASSIFICATION	//{{{ collapseFold() method
WITHOUT_CLASSIFICATION	//{{{ expandFold() method
WITHOUT_CLASSIFICATION	//{{{ toUpperCase() method
WITHOUT_CLASSIFICATION	//{{{ goToParentFold() method
WITHOUT_CLASSIFICATION	//{{{ narrowToFold() method
WITHOUT_CLASSIFICATION	//{{{ goToNextFold() method
WITHOUT_CLASSIFICATION	//{{{ goToPrevFold() method
WITHOUT_CLASSIFICATION	//{{{ narrowToSelection() method
WITHOUT_CLASSIFICATION	//{{{ selectFold() method
WITHOUT_CLASSIFICATION	//{{{ selectFold() method
WITHOUT_CLASSIFICATION	//{{{ toLowerCase() method
WITHOUT_CLASSIFICATION	//{{{ addExplicitFold() method
WITHOUT_CLASSIFICATION	//{{{ showWordCountDialog() method
WITHOUT_CLASSIFICATION	//{{{ insertEnterAndIndent() method
WITHOUT_CLASSIFICATION	//{{{ Text editing
WITHOUT_CLASSIFICATION	//{{{ lineComment() method
WITHOUT_CLASSIFICATION	//{{{ insertTabAndIndent() method
WITHOUT_CLASSIFICATION	//{{{ rangeComment() method
WITHOUT_CLASSIFICATION	//{{{ Right click popup
WITHOUT_CLASSIFICATION	// if caret is inside leading whitespace, indent.
WITHOUT_CLASSIFICATION	//{{{ isRightClickPopupEnabled() method
WITHOUT_CLASSIFICATION	//{{{ indentSelectedLines() method
WITHOUT_CLASSIFICATION	//{{{ joinLines() method
WITHOUT_CLASSIFICATION	//{{{ setRightClickPopupEnabled() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Deprecated methods
WITHOUT_CLASSIFICATION	//{{{ AWT stuff
WITHOUT_CLASSIFICATION	//{{{ processKeyEvent() method
WITHOUT_CLASSIFICATION	//{{{ removeNotify() method
WITHOUT_CLASSIFICATION	//{{{ getFocusTraversalKeysEnabled() method
WITHOUT_CLASSIFICATION	//{{{ addNotify() method
WITHOUT_CLASSIFICATION	//{{{ propertiesChanged() method
WITHOUT_CLASSIFICATION	//{{{ getRightClickPopup() method
WITHOUT_CLASSIFICATION	//{{{ addLeftOfScrollBar() method
WITHOUT_CLASSIFICATION	//{{{ setRightClickPopup() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionStartLine() method
WITHOUT_CLASSIFICATION	//{{{ handlePopupTrigger() method
WITHOUT_CLASSIFICATION	//{{{ getMarkLine() method
WITHOUT_CLASSIFICATION	//{{{ removeLeftOfScrollBar() method
WITHOUT_CLASSIFICATION	//{{{ setSelectionStart() method
WITHOUT_CLASSIFICATION	//{{{ getFocusCycleRoot() method
WITHOUT_CLASSIFICATION	//{{{ addTopComponent() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionEnd() method
WITHOUT_CLASSIFICATION	//{{{ removeTopComponent() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionEnd() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionStart() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionStart() method
WITHOUT_CLASSIFICATION	//{{{ select() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionEndLine() method
WITHOUT_CLASSIFICATION	//{{{ select() method
WITHOUT_CLASSIFICATION	//{{{ setSelectionEnd() method
WITHOUT_CLASSIFICATION	//{{{ getMarkPosition() method
WITHOUT_CLASSIFICATION	//{{{ isSelectionRectangular() method
WITHOUT_CLASSIFICATION	// used to store offsetToXY() results
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Static variables
WITHOUT_CLASSIFICATION	// this does the "trick" to eliminate blank space at the end
WITHOUT_CLASSIFICATION	//{{{ isCaretVisible() method
WITHOUT_CLASSIFICATION	/* on JDK 1.4, this is set to a method by Java14. The method must take	* these parameters:	* - a JEditTextArea	* - an InputEvent	* - a boolean (copy text or move, depending on modifier user held down)	*/
WITHOUT_CLASSIFICATION	//{{{ isStructureHighlightVisible() method
WITHOUT_CLASSIFICATION	//{{{ foldStructureChanged() method
WITHOUT_CLASSIFICATION	//{{{ updateMaxHorizontalScrollWidth() method
WITHOUT_CLASSIFICATION	// in case one of the above fails, we still want to // clear these flags.
WITHOUT_CLASSIFICATION	//{{{ recalculateVisibleLines() method
WITHOUT_CLASSIFICATION	//{{{ finishCaretUpdate() method
WITHOUT_CLASSIFICATION	//{{{ updateScrollBars() method
WITHOUT_CLASSIFICATION	//{{{ getSelectionStartEndOnLine() method
WITHOUT_CLASSIFICATION	//{{{ _finishCaretUpdate() method
WITHOUT_CLASSIFICATION	// see finishCaretUpdate() & _finishCaretUpdate()
WITHOUT_CLASSIFICATION	/* called by DisplayManager.BufferChangeHandler.transactionComplete() */
WITHOUT_CLASSIFICATION	//{{{ insideSelection() method
WITHOUT_CLASSIFICATION	// When the user is typing, etc, we don't want the caret // to blink
WITHOUT_CLASSIFICATION	// JDiff, error list add stuff here
WITHOUT_CLASSIFICATION	/* otherwise DisplayManager.BufferChangeHandler calls */
WITHOUT_CLASSIFICATION	//{{{ startDragAndDrop() method // calls dndCallback via reflection
WITHOUT_CLASSIFICATION	//{{{ doWordWrap() method
WITHOUT_CLASSIFICATION	//{{{ _addToSelection() method
WITHOUT_CLASSIFICATION	//{{{ updateStructureHighlightWithDelay() method
WITHOUT_CLASSIFICATION	//{{{ fireCaretEvent() method
WITHOUT_CLASSIFICATION	/* only ever return true if space was pressed		 * with logicalLength == maxLineLen */
WITHOUT_CLASSIFICATION	//{{{ fireScrollEvent() method
WITHOUT_CLASSIFICATION	//{{{ insertTab() method
WITHOUT_CLASSIFICATION	//{{{ doWordCount() method
WITHOUT_CLASSIFICATION	//{{{ updateStructureHighlight() method
WITHOUT_CLASSIFICATION	// Fix bug #922951 Off-by-one error in Word Count
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ actionPerformed() method
WITHOUT_CLASSIFICATION	//{{{ Inner classes
WITHOUT_CLASSIFICATION	//{{{ FocusHandler class
WITHOUT_CLASSIFICATION	//{{{ paintBorder() method
WITHOUT_CLASSIFICATION	//{{{ getBorderInsets() method
WITHOUT_CLASSIFICATION	//{{{ delete() method
WITHOUT_CLASSIFICATION	//{{{ mousePressed() method
WITHOUT_CLASSIFICATION	//{{{ MouseHandler class
WITHOUT_CLASSIFICATION	//{{{ addLayoutComponent() method
WITHOUT_CLASSIFICATION	//{{{ removeLayoutComponent() method
WITHOUT_CLASSIFICATION	//{{{ preferredLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ minimumLayoutSize() method
WITHOUT_CLASSIFICATION	//{{{ layoutContainer() method
WITHOUT_CLASSIFICATION	//case 3:
WITHOUT_CLASSIFICATION	//{{{ recalculateLastPhysicalLine() method
WITHOUT_CLASSIFICATION	// only wrap if we're at the end of a line, or the rest of the // line text is whitespace
WITHOUT_CLASSIFICATION	//{{{ showStructureStatusMessage() method
WITHOUT_CLASSIFICATION	// last character before wrap // length with tabs expanded
WITHOUT_CLASSIFICATION	//{{{ ScrollLayout class
WITHOUT_CLASSIFICATION	// caretLine would have been incremented // since insertNewLineAt <= caretPos
WITHOUT_CLASSIFICATION	// get rid of embedded tabs not removed by trim()
WITHOUT_CLASSIFICATION	//{{{ shiftTallCaretLeft() method
WITHOUT_CLASSIFICATION	//{{{ getRectParams() method
WITHOUT_CLASSIFICATION	//{{{ focusGained() method
WITHOUT_CLASSIFICATION	//{{{ tallCaretDelete() method
WITHOUT_CLASSIFICATION	//{{{ TextAreaBorder class
WITHOUT_CLASSIFICATION	//{{{ CaretBlinker class
WITHOUT_CLASSIFICATION	//{{{ MutableCaretEvent constructor
WITHOUT_CLASSIFICATION	//{{{ MutableCaretEvent class
WITHOUT_CLASSIFICATION	//{{{ getMark() method
WITHOUT_CLASSIFICATION	//{{{ getDot() method
WITHOUT_CLASSIFICATION	//{{{ adjustmentValueChanged() method
WITHOUT_CLASSIFICATION	//{{{ AdjustHandler class
WITHOUT_CLASSIFICATION	// XXX: getMarkPosition() deprecated!
WITHOUT_CLASSIFICATION	/* with drag and drop on, a mouse down in a selection does not		immediately deselect */
WITHOUT_CLASSIFICATION	//{{{ focusLost() method
WITHOUT_CLASSIFICATION	//{{{ doSingleClick() method
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ mouseReleased() method
WITHOUT_CLASSIFICATION	//{{{ mouseDragged() method
WITHOUT_CLASSIFICATION	//case 3:
WITHOUT_CLASSIFICATION	// so that Home <mouse click> Home is not the same // as pressing Home twice in a row
WITHOUT_CLASSIFICATION	// control-click in virtual space inserts // whitespace and moves caret
WITHOUT_CLASSIFICATION	// so that shift-click-drag works
WITHOUT_CLASSIFICATION	// so that quick copy works
WITHOUT_CLASSIFICATION	//{{{ doDoubleClick() method
WITHOUT_CLASSIFICATION	// Ignore empty lines
WITHOUT_CLASSIFICATION	//{{{ doTripleClick() method
WITHOUT_CLASSIFICATION	//{{{ doSingleDrag() method
WITHOUT_CLASSIFICATION	// just scroll to the dragged location
WITHOUT_CLASSIFICATION	//{{{ doDoubleDrag() method
WITHOUT_CLASSIFICATION	//{{{ doTripleDrag() method
WITHOUT_CLASSIFICATION	// middle mouse button drag inserts selection // at caret position
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ setBuffer() method
WITHOUT_CLASSIFICATION	//{{{ getScreenLineOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ recalculateVisibleLines() method
WITHOUT_CLASSIFICATION	//{{{ xToSubregionOffset() method
WITHOUT_CLASSIFICATION	//{{{ ChunkCache constructor
WITHOUT_CLASSIFICATION	//return -1;
WITHOUT_CLASSIFICATION	//{{{ getMaxHorizontalScrollWidth() method
WITHOUT_CLASSIFICATION	//{{{ invalidateChunksFromPhys() method
WITHOUT_CLASSIFICATION	// Find the screen line containing this offset
WITHOUT_CLASSIFICATION	//{{{ scrollDown() method
WITHOUT_CLASSIFICATION	// line is invisible?
WITHOUT_CLASSIFICATION	//{{{ xToSubregionOffset() method
WITHOUT_CLASSIFICATION	//{{{ scrollUp() method
WITHOUT_CLASSIFICATION	//{{{ subregionOffsetToX() method
WITHOUT_CLASSIFICATION	//{{{ invalidateAll() method
WITHOUT_CLASSIFICATION	//{{{ getLineInfo() method
WITHOUT_CLASSIFICATION	//{{{ invalidateChunksFrom() method
WITHOUT_CLASSIFICATION	//{{{ subregionOffsetToX() method
WITHOUT_CLASSIFICATION	//{{{ getLineSubregionCount() method
WITHOUT_CLASSIFICATION	//{{{ getBelowPosition() method
WITHOUT_CLASSIFICATION	//{{{ getSubregionOfOffset() method
WITHOUT_CLASSIFICATION	//{{{ updateChunksUpTo() method
WITHOUT_CLASSIFICATION	//{{{ getSubregionStartOffset() method
WITHOUT_CLASSIFICATION	//{{{ getAbovePosition() method
WITHOUT_CLASSIFICATION	//{{{ getSubregionEndOffset() method
WITHOUT_CLASSIFICATION	//{{{ needFullRepaint() method
WITHOUT_CLASSIFICATION	//{{{ getLineInfosForPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ getLineInfosForPhysicalLine() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ clone() method
WITHOUT_CLASSIFICATION	// Note that we rely on the fact that when a physical line is // invalidated, all screen lines/subregions of that line are // invalidated as well. See below comment for code that tries // to uphold this assumption.
WITHOUT_CLASSIFICATION	// find a valid line closest to the last screen line
WITHOUT_CLASSIFICATION	// otherwise, determine the next visible line
WITHOUT_CLASSIFICATION	// for the first line displayed, take its physical line to be // the text area's first physical line
WITHOUT_CLASSIFICATION	/* if the user changes the syntax token at the				 * end of a line, need to do a full repaint. */
WITHOUT_CLASSIFICATION	// if -1, the empty space at the end of the text area // when the buffer has less lines than are visible
WITHOUT_CLASSIFICATION	// empty space
WITHOUT_CLASSIFICATION	// get another line of chunks
WITHOUT_CLASSIFICATION	// if the line has no text, out.size() == 0
WITHOUT_CLASSIFICATION	// unless this is the first time, increment // the line number
WITHOUT_CLASSIFICATION	// fix the bug where the horiz. // scroll bar was not updated // after creating a new file.
WITHOUT_CLASSIFICATION	/* We only cache entire physical lines at once;				 * don't want to split a physical line into				 * screen lines and only have some valid. */
WITHOUT_CLASSIFICATION	// chunk the line.
WITHOUT_CLASSIFICATION	// otherwise, the number of subregions
WITHOUT_CLASSIFICATION	/* If this line has become longer or shorter				 * (in which case the new physical line number				 * is different from the cached one) we need to:				 * - continue updating past the last line				 * - advise the text area to repaint				 * On the other hand, if the line wraps beyond				 * lastScreenLine, we need to keep updating the				 * chunk list to ensure proper alignment of				 * invalidation flags (see start of method) */
WITHOUT_CLASSIFICATION	//{{{ LineInfo class
WITHOUT_CLASSIFICATION	//{{{ getStartLine() method
WITHOUT_CLASSIFICATION	//{{{ lineToChunkList() method
WITHOUT_CLASSIFICATION	//{{{ getEnd() method
WITHOUT_CLASSIFICATION	//{{{ getStart() method
WITHOUT_CLASSIFICATION	//{{{ getStart() method
WITHOUT_CLASSIFICATION	//{{{ getEnd() method
WITHOUT_CLASSIFICATION	//{{{ Selection constructor
WITHOUT_CLASSIFICATION	//{{{ overlaps() method
WITHOUT_CLASSIFICATION	//{{{ getEndLine() method
WITHOUT_CLASSIFICATION	//{{{ Selection constructor
WITHOUT_CLASSIFICATION	//{{{ Selection constructor
WITHOUT_CLASSIFICATION	//{{{ Range class
WITHOUT_CLASSIFICATION	//{{{ Range constructor
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ getText() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentInserted() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ contentRemoved() method
WITHOUT_CLASSIFICATION	//{{{ setText() method
WITHOUT_CLASSIFICATION	//{{{ setText() method
WITHOUT_CLASSIFICATION	//{{{ getColumnOnOtherLine() method
WITHOUT_CLASSIFICATION	//{{{ getStart() method
WITHOUT_CLASSIFICATION	//{{{ getStart() method
WITHOUT_CLASSIFICATION	//{{{ getEnd() method
WITHOUT_CLASSIFICATION	//{{{ getEnd() method
WITHOUT_CLASSIFICATION	//{{{ Range constructor
WITHOUT_CLASSIFICATION	//{{{ Range constructor
WITHOUT_CLASSIFICATION	//{{{ Move the caret down a line
WITHOUT_CLASSIFICATION	//{{{ Rect class
WITHOUT_CLASSIFICATION	//{{{ getStartColumn() method
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ Rect constructor
WITHOUT_CLASSIFICATION	//{{{ getEndColumn() method
WITHOUT_CLASSIFICATION	//{{{ Split the text into lines
WITHOUT_CLASSIFICATION	//{{{ Insert the lines into the buffer
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ init() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	//{{{ Entry class
WITHOUT_CLASSIFICATION	//{{{ Constants
WITHOUT_CLASSIFICATION	//{{{ getToolTipText() method
WITHOUT_CLASSIFICATION	//{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	//{{{ paintScreenLineRange() method
WITHOUT_CLASSIFICATION	//{{{ addExtension() method
WITHOUT_CLASSIFICATION	//{{{ removeExtension() method
WITHOUT_CLASSIFICATION	//{{{ getExtensions() method
WITHOUT_CLASSIFICATION	// notify a running waitForRequests() method
WITHOUT_CLASSIFICATION	// wait for more requests
WITHOUT_CLASSIFICATION	// status message changed, operation started, operation ends, ...
WITHOUT_CLASSIFICATION	// progress bar value change
WITHOUT_CLASSIFICATION	// Log some stuff
WITHOUT_CLASSIFICATION	//{{{ setLogWriter() method
WITHOUT_CLASSIFICATION	// do nothing, who cares
WITHOUT_CLASSIFICATION	//{{{ flushStream() method
WITHOUT_CLASSIFICATION	//{{{ closeStream() method
WITHOUT_CLASSIFICATION	//{{{ getLogListModel() method
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ start() method
WITHOUT_CLASSIFICATION	//{{{ Class initializer
WITHOUT_CLASSIFICATION	//{{{ waitForRequests() method
WITHOUT_CLASSIFICATION	//{{{ getRequestCount() method
WITHOUT_CLASSIFICATION	//{{{ reset() method
WITHOUT_CLASSIFICATION	//{{{ CharIndexedSegment constructor
WITHOUT_CLASSIFICATION	// remove it so editor can continue // functioning
WITHOUT_CLASSIFICATION	//{{{ log() method
WITHOUT_CLASSIFICATION	// so that jEdit doesn't exit with no views open automatically //setDaemon(true);
WITHOUT_CLASSIFICATION	//{{{ CharIndexedSegment constructor
WITHOUT_CLASSIFICATION	// If multiple threads log stuff, we don't want // the output to get mixed up
WITHOUT_CLASSIFICATION	/* not really needed since threads don't start until after */
WITHOUT_CLASSIFICATION	//{{{ createPrintStream() method
WITHOUT_CLASSIFICATION	//{{{ charAt() method
WITHOUT_CLASSIFICATION	//{{{ _logException() method
WITHOUT_CLASSIFICATION	//{{{ _log() method
WITHOUT_CLASSIFICATION	//{{{ isValid() method
WITHOUT_CLASSIFICATION	//{{{ LogListModel class
WITHOUT_CLASSIFICATION	//{{{ addWorkRequest() method
WITHOUT_CLASSIFICATION	// do any queued AWT runnables
WITHOUT_CLASSIFICATION	//{{{ move() method
WITHOUT_CLASSIFICATION	//{{{ if there are no requests, execute AWT requests immediately
WITHOUT_CLASSIFICATION	//{{{ WorkThreadPool constructor
WITHOUT_CLASSIFICATION	//{{{ fireStatusChanged() method
WITHOUT_CLASSIFICATION	//{{{ getThreadCount() method
WITHOUT_CLASSIFICATION	//				Log.log(Log.DEBUG,this,"AWT immediate: " + run);
WITHOUT_CLASSIFICATION	//{{{ Add to AWT queue...
WITHOUT_CLASSIFICATION	//{{{ getThread() method
WITHOUT_CLASSIFICATION	//{{{ addProgressListener() method
WITHOUT_CLASSIFICATION	//{{{ removeProgressListener() method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ append() method
WITHOUT_CLASSIFICATION	//{{{ readLock() method
WITHOUT_CLASSIFICATION	//{{{ readUnlock() method
WITHOUT_CLASSIFICATION	//{{{ writeLock() method
WITHOUT_CLASSIFICATION	//{{{ writeUnlock() method
WITHOUT_CLASSIFICATION	//{{{ ensureCapacity() method
WITHOUT_CLASSIFICATION	// AWT thread magic
WITHOUT_CLASSIFICATION	//}}} //{{{ Add to work thread queue...
WITHOUT_CLASSIFICATION	//{{{ queueAWTRunner() method
WITHOUT_CLASSIFICATION	//{{{ fireProgressChanged() method
WITHOUT_CLASSIFICATION	//{{{ doAWTRequests() method
WITHOUT_CLASSIFICATION	//{{{ requestDone() method
WITHOUT_CLASSIFICATION	//{{{ RunRequestsInAWTThread class
WITHOUT_CLASSIFICATION	//{{{ getNextRequest() method
WITHOUT_CLASSIFICATION	//{{{ doAWTRequest() method
WITHOUT_CLASSIFICATION	// Request queue
WITHOUT_CLASSIFICATION	//			Log.log(Log.DEBUG,this,"AWT runner queued");
WITHOUT_CLASSIFICATION	//readers.removeElement(Thread.currentThread());
WITHOUT_CLASSIFICATION	//		Log.log(Log.DEBUG,this,"Running in AWT thread: " + request);
WITHOUT_CLASSIFICATION	//{{{ SegmentBuffer constructor
WITHOUT_CLASSIFICATION	//{{{ getNextAWTRequest() method
WITHOUT_CLASSIFICATION	//{{{ allowRead() method
WITHOUT_CLASSIFICATION	//{{{ Request class
WITHOUT_CLASSIFICATION	// Write in progress.
WITHOUT_CLASSIFICATION	//readers.addElement(Thread.currentThread());
WITHOUT_CLASSIFICATION	// Roll back state.
WITHOUT_CLASSIFICATION	//{{{ allowWrite() method
WITHOUT_CLASSIFICATION	// Same thread.
WITHOUT_CLASSIFICATION	//{{{ isWriteLocked() method
WITHOUT_CLASSIFICATION	//{{{ claimWriteLock() method
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	//{{{ add() method
WITHOUT_CLASSIFICATION	//{{{ clear() method
WITHOUT_CLASSIFICATION	//{{{ getSize() method
WITHOUT_CLASSIFICATION	//case ClassWriter.FIELD: //case ClassWriter.METH: //case ClassWriter.IMETH:
WITHOUT_CLASSIFICATION	//{{{ IntegerArray constructor
WITHOUT_CLASSIFICATION	//{{{ IntegerArray constructor
WITHOUT_CLASSIFICATION	//{{{ get() method
WITHOUT_CLASSIFICATION	//{{{ setSize() method
WITHOUT_CLASSIFICATION	//{{{ getArray() method
WITHOUT_CLASSIFICATION	/** * A constant pool item. Constant pool items can be created with the 'newXXX' * methods in the {@link ClassWriter} class. */
WITHOUT_CLASSIFICATION	// ------------------------------------------------------------------------- // Special instructions // -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------------------------------------- // Exceptions table entries, max stack size and max locals // -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------------------------------------- // Debug information // -------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Fields for the control flow graph analysis algorithm (used to compute the // maximum stack size). A control flow graph contains one node per "basic // block", and one edge per "jump" from one basic block to another. Each node // (i.e., each basic block) is represented by the Label object that // corresponds to the first instruction of this basic block. Each node also // stores the list of it successors in the graph, as a linked list of Edge // objects. // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Constructor // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Methods to compute offsets and to manage forward references // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// changes the opcode of the jump instruction, in order to be able to // find it later (see resizeInstructions in CodeWriter). These // temporary opcodes are similar to jump instruction opcodes, except // that the 2 bytes offset is unsigned (and can therefore represent // values from 0 to 65535, which is sufficient since the size of a // method is limited to 65535 bytes).
WITHOUT_CLASSIFICATION	// changes IFEQ ... JSR to opcodes 202 to 217 (inclusive)
WITHOUT_CLASSIFICATION	// changes IFNULL and IFNONNULL to opcodes 218 and 219 (inclusive)
WITHOUT_CLASSIFICATION	// updates maxLocals
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Constructors // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	//case 'L':
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Accessors // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	//case ARRAY: //case OBJECT:
WITHOUT_CLASSIFICATION	//case ARRAY: //case OBJECT:
WITHOUT_CLASSIFICATION	//case ARRAY: //case OBJECT:
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Direct conversion from classes to type descriptors, // without intermediate Type objects // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Corresponding size and opcodes // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Static initializer // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// pushes the first block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// if opcode == ATHROW or xRETURN, ends current block (no successor)
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// BIPUSH or NEWARRAY
WITHOUT_CLASSIFICATION	// no stack change, but end of current block (no successor)
WITHOUT_CLASSIFICATION	// xLOAD or xSTORE
WITHOUT_CLASSIFICATION	// updates max locals
WITHOUT_CLASSIFICATION	/*ILOAD_0*/
WITHOUT_CLASSIFICATION	/*ISTORE_0*/
WITHOUT_CLASSIFICATION	/*WIDE*/
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// updates current and max stack sizes
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// computes the stack size variation
WITHOUT_CLASSIFICATION	// updates current and max stack sizes only if opcode == NEWARRAY // (stack size variation = 0 for BIPUSH or SIPUSH)
WITHOUT_CLASSIFICATION	/*WIDE*/
WITHOUT_CLASSIFICATION	// updates current and max stack sizes only if opcode == NEW // (stack size variation = 0 for ANEWARRAY, CHECKCAST, INSTANCEOF)
WITHOUT_CLASSIFICATION	//case Constants.PUTFIELD:
WITHOUT_CLASSIFICATION	// computes the stack size variation
WITHOUT_CLASSIFICATION	// computes the stack size variation. In order not to recompute several // times this variation for the same Item, we use the intVal field of // this item to store this variation, once it has been computed. More // precisely this intVal field stores the sizes of the arguments and of // the return value corresponding to desc.
WITHOUT_CLASSIFICATION	// JSR_W
WITHOUT_CLASSIFICATION	// the above sizes have not been computed yet, so we compute them...
WITHOUT_CLASSIFICATION	// ... and we save them in order not to recompute them in the future
WITHOUT_CLASSIFICATION	// no stack change, but end of current block (with one new successor)
WITHOUT_CLASSIFICATION	// GOTO_W
WITHOUT_CLASSIFICATION	// ends current block (with one new successor)
WITHOUT_CLASSIFICATION	// resolves previous forward references to label, if any
WITHOUT_CLASSIFICATION	/*LDC2_W*/
WITHOUT_CLASSIFICATION	/*LDC_W*/
WITHOUT_CLASSIFICATION	// updates max locals only (no stack change)
WITHOUT_CLASSIFICATION	// updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	// updates current stack size (max stack size unchanged)
WITHOUT_CLASSIFICATION	// ends current block (with many new successors)
WITHOUT_CLASSIFICATION	// ends current block (with many new successors)
WITHOUT_CLASSIFICATION	// jump offset // GOTO_W
WITHOUT_CLASSIFICATION	// case of a backward jump with an offset >= -32768, or of a forward jump // with, of course, an unknown offset. In these cases we store the offset // in 2 bytes (which will be increased in resizeInstructions, if needed).
WITHOUT_CLASSIFICATION	// begins a new current block, // resets the relative current and max stack sizes
WITHOUT_CLASSIFICATION	// updates current stack size (max stack size unchanged because stack // size variation always negative or null)
WITHOUT_CLASSIFICATION	// pushes handler block onto the stack of blocks to be visited
WITHOUT_CLASSIFICATION	// true (non relative) max stack size
WITHOUT_CLASSIFICATION	// pops a block from the stack
WITHOUT_CLASSIFICATION	// computes the true (non relative) max stack size of this block
WITHOUT_CLASSIFICATION	// updates the global max stack size
WITHOUT_CLASSIFICATION	// analyses the successors of the block
WITHOUT_CLASSIFICATION	// if this successor has not already been pushed onto the stack...
WITHOUT_CLASSIFICATION	// computes the true beginning stack size of this successor block
WITHOUT_CLASSIFICATION	// pushes this successor onto the stack
WITHOUT_CLASSIFICATION	// releases all the Edge objects used by this CodeWriter
WITHOUT_CLASSIFICATION	// appends the [head ... tail] list at the beginning of the pool list
WITHOUT_CLASSIFICATION	// creates a new Edge object or reuses one from the shared pool
WITHOUT_CLASSIFICATION	// removes b from the pool
WITHOUT_CLASSIFICATION	// adds the previous Edge to the list of Edges used by this CodeWriter
WITHOUT_CLASSIFICATION	// initializes the previous Edge object...
WITHOUT_CLASSIFICATION	// ...and adds it to the successor list of the currentBlock block
WITHOUT_CLASSIFICATION	// replaces the temporary jump opcodes introduced by Label.resolve.
WITHOUT_CLASSIFICATION	// replaces old bytecodes with new ones
WITHOUT_CLASSIFICATION	// returns the positions of the resized instructions
WITHOUT_CLASSIFICATION	// forward jump
WITHOUT_CLASSIFICATION	// backward jump
WITHOUT_CLASSIFICATION	// access flags
WITHOUT_CLASSIFICATION	// types for NEWARRAY
WITHOUT_CLASSIFICATION	// JSR_W
WITHOUT_CLASSIFICATION	// over estimation of the number of bytes to be added to this // instruction = 3 - current number of padding bytes = 3 - (3 - // u%4) = u%4 = u & 3
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Utility methods: instruction resizing (used to handle GOTO_W and JSR_W) // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// bytecode of the method // indexes in b // loop indexes
WITHOUT_CLASSIFICATION	// 3 = loop again, 2 = loop ended, 1 = last pass, 0 = done
WITHOUT_CLASSIFICATION	// two additional bytes will be required to replace this // GOTO or JSR instruction with a GOTO_W or a JSR_W
WITHOUT_CLASSIFICATION	// opcode of current instruction // bytes to be added after this instruction
WITHOUT_CLASSIFICATION	// true number of bytes to be added (or removed) from this // instruction = (future number of padding bytes - current number // of padding byte) - previously over estimated variation = // = ((3 - newOffset%4) - (3 - u%4)) - u%4 // = (-newOffset%4 + u%4) - u%4 // = -(newOffset & 3)
WITHOUT_CLASSIFICATION	// converts temporary opcodes 202 to 217 (inclusive), 218 and 219 // to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL
WITHOUT_CLASSIFICATION	// five additional bytes will be required to replace this // IFxxx <l> instruction with IFNOTxxx <l'> GOTO_W <l>, where // IFNOTxxx is the "opposite" opcode of IFxxx (i.e., IFNE for // IFEQ) and where <l'> designates the instruction just after // the GOTO_W.
WITHOUT_CLASSIFICATION	// like TABL_INSN
WITHOUT_CLASSIFICATION	// like TABL_INSN
WITHOUT_CLASSIFICATION	// skips instruction
WITHOUT_CLASSIFICATION	// skips instruction
WITHOUT_CLASSIFICATION	// adds a new (u, insert) entry in the allIndexes and allSizes arrays
WITHOUT_CLASSIFICATION	// replaces GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> with // IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode // of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the // instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	// case ClassWriter.MANA_INSN:
WITHOUT_CLASSIFICATION	// changes temporary opcodes 202 to 217 (inclusive), 218 and 219 // to IFEQ ... JSR (inclusive), IFNULL and IFNONNULL
WITHOUT_CLASSIFICATION	// 2nd step: // copies the bytecode of the method into a new bytevector, updates the // offsets, and inserts (or removes) bytes as requested.
WITHOUT_CLASSIFICATION	// reads and copies instruction
WITHOUT_CLASSIFICATION	// skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	// jump offset // GOTO_W // newOffset now computed from start of GOTO_W
WITHOUT_CLASSIFICATION	// skips 0 to 3 padding bytes
WITHOUT_CLASSIFICATION	// reads and copies instruction
WITHOUT_CLASSIFICATION	// updates the instructions addresses in the // catch, local var and line number tables
WITHOUT_CLASSIFICATION	// case MANA_INSN:
WITHOUT_CLASSIFICATION	// opcodes                  // visit method (- = idem)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// scan from selection to end failed, so // scan from start to selection
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Constructor // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Static initializer // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Implementation of the ClassVisitor interface // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Other public methods // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// computes the real size of the bytecode of this class
WITHOUT_CLASSIFICATION	// allocates a byte vector of this size, in order to avoid unnecessary // arraycopy operations in the ByteVector.enlarge() method
WITHOUT_CLASSIFICATION	// special case: no current development version
WITHOUT_CLASSIFICATION	// end AbstractOptionPane implementation
WITHOUT_CLASSIFICATION	// begin ActionListener implementation
WITHOUT_CLASSIFICATION	// helper method to get Font from plugin properties
WITHOUT_CLASSIFICATION	// // Constructor //
WITHOUT_CLASSIFICATION	// // Attribute methods //
WITHOUT_CLASSIFICATION	// for toolbar display
WITHOUT_CLASSIFICATION	// // EBComponent implementation //
WITHOUT_CLASSIFICATION	// These JComponent methods provide the appropriate points // to subscribe and unsubscribe this object to the EditBus
WITHOUT_CLASSIFICATION	// // QuickNotepadActions implementation //
WITHOUT_CLASSIFICATION	// // Listener objects //
WITHOUT_CLASSIFICATION	// <Esc> closes a floating window
WITHOUT_CLASSIFICATION	// cwd not implemented in this version
WITHOUT_CLASSIFICATION	// end JcmdProcess.java
WITHOUT_CLASSIFICATION	/* Get full command line */
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// we remember which classes we don't exist // because BeanShell tries loading all possible // <imported prefix>.<class name> combinations
WITHOUT_CLASSIFICATION	// if it's not in the class hash, and not marked as // non-existent, try loading it from the CLASSPATH
WITHOUT_CLASSIFICATION	// To avoid any problems if components are added or removed // while the message is being sent
WITHOUT_CLASSIFICATION	// Some Java versions return the clipboard // contents using the native line separator, // so have to convert it here
WITHOUT_CLASSIFICATION	// Either class sun.tools.javac.Main or // com.sun.tools.javac.Main must be there:
WITHOUT_CLASSIFICATION	// Stop script kiddies from opening the edit // server port and just leaving it open, as a // DoS
WITHOUT_CLASSIFICATION	// coming out of background mode. // no views open. // no buffers open if args empty.
WITHOUT_CLASSIFICATION	// since recentBuffer will be set to the one that // was closed
WITHOUT_CLASSIFICATION	// - don't do these checks while a save is in progress, // because for a moment newModTime will be greater than // oldModTime, due to the multithreading // - only supported on local file system
WITHOUT_CLASSIFICATION	// this ensures that undo can clear the dirty flag properly // when all edits up to a save are undone
WITHOUT_CLASSIFICATION	// note that if firstLine == lastLine, loop does not // execute
WITHOUT_CLASSIFICATION	// fill in defaults for these from system properties if the // corresponding buffer.XXX properties not set
WITHOUT_CLASSIFICATION	// create a DirectoryEntry manually // instead of using _vfs._getDirectoryEntry() // since so many VFS's have broken // implementations of this method
WITHOUT_CLASSIFICATION	// Java does not support this encoding so // we have to handle it manually.
WITHOUT_CLASSIFICATION	// file begins with UTF-8-Y signature. // discard the signature, and read // the remainder as UTF-8.
WITHOUT_CLASSIFICATION	// fix for "[ 865589 ] 0-byte files should open using // the default line seperator"
WITHOUT_CLASSIFICATION	// // helper methods //
WITHOUT_CLASSIFICATION	/* call sendBreak after fixed number of			 * lines of stdout are read			 */
WITHOUT_CLASSIFICATION	// end JcmdProcessTest.java
WITHOUT_CLASSIFICATION	// Big enough for a \r\n pair // lookBehind[0] = most recent // lookBehind[1] = second most recent
WITHOUT_CLASSIFICATION	// Is this it? // Is the class public or can we use accessibility?
WITHOUT_CLASSIFICATION	// we don't know the right hand side of the assignment yet. // has at least one setter of the right name?
WITHOUT_CLASSIFICATION	// Add the '0-repeats' index // positions.elementAt(z) == position [] in input after <<z>> matches
WITHOUT_CLASSIFICATION	// Order these from longest to shortest // Start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	// These variables are package scope for fast access within the engine // execution flags this match was made using
WITHOUT_CLASSIFICATION	// These are, respectively, the first and last tokens in our linked list // If there is only one token, firstToken == lastToken
WITHOUT_CLASSIFICATION	// not in settings directory or jEdit home directory. // no need to reload anything.
WITHOUT_CLASSIFICATION	//}}} //{{{ Insert the expansion
WITHOUT_CLASSIFICATION	// $ at end is literal //}}}
WITHOUT_CLASSIFICATION	// later on we need to know if certain code is called from // the main thread
WITHOUT_CLASSIFICATION	// ok, this one seems to confuse newbies // endlessly, so log it as NOTICE, not // ERROR
WITHOUT_CLASSIFICATION	// don't show splash screen if there is a file named // 'nosplash' in the settings directory
WITHOUT_CLASSIFICATION	// This reloads the token marker and sends a message // which causes edit panes to repaint their text areas
WITHOUT_CLASSIFICATION	// If only one new file is open which is clean, just close // it, which will create an 'Untitled-1'
WITHOUT_CLASSIFICATION	// can happen if the user presses C+w twice real // quick and the buffer has unsaved changes
WITHOUT_CLASSIFICATION	// paths on case-insensitive filesystems are stored as lower // case in the hash.
WITHOUT_CLASSIFICATION	// still need to call the status check even if the option is // off, so that the write protection is updated if it changes // on disk
WITHOUT_CLASSIFICATION	// the problem with this is that if we have two edit panes // looking at the same buffer and the file is reloaded both // will jump to the same location
WITHOUT_CLASSIFICATION	// Don't show the welcome message if jEdit was started // with the -nosettings switch
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,jEdit.class,"Adding edit mode " //	+ mode.getName());
WITHOUT_CLASSIFICATION	// if only one, clean, 'untitled' buffer is open, we // replace it
WITHOUT_CLASSIFICATION	// if the user pressed eg C+e n n in the // search bar we want focus to go back there // after the prefix is done
WITHOUT_CLASSIFICATION	// we might have been closed as a result of // the above
WITHOUT_CLASSIFICATION	// we might have been closed as a result of // the above
WITHOUT_CLASSIFICATION	// tool bar and status bar gets added in propertiesChanged() // depending in the 'tool bar alternate layout' setting.
WITHOUT_CLASSIFICATION	// null some variables so that retaining references // to closed views won't hurt as much.
WITHOUT_CLASSIFICATION	// we create a stream tokenizer for parsing a simple // stack-based language
WITHOUT_CLASSIFICATION	// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Do not evaluate methods this() or super() in class instance space // (i.e. inside a constructor)
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// Check if a plugin with the same name // is already loaded
WITHOUT_CLASSIFICATION	// remove action sets, dockables, etc so that user doesn't // see the broken plugin
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// endIndex is now position at a ')','\)'  // nextIndex is end of string or position after ')' or '\)'
WITHOUT_CLASSIFICATION	// ONE-OR-MORE REPEAT OPERATOR //  + | \+ depending on RE_BK_PLUS_QM //  not available if RE_LIMITED_OPS is set
WITHOUT_CLASSIFICATION	// ZERO-OR-ONE REPEAT OPERATOR / STINGY MATCHING OPERATOR //  ? | \? depending on RE_BK_PLUS_QM //  not available if RE_LIMITED_OPS is set //  stingy matching if RE_STINGY_OPS is set and it follows a quantifier
WITHOUT_CLASSIFICATION	// WORD BREAK OPERATOR //  \b if ????
WITHOUT_CLASSIFICATION	// DIGIT OPERATOR //  \d if RE_CHAR_CLASS_ESCAPES is set
WITHOUT_CLASSIFICATION	// NON-WHITESPACE OPERATOR //  \S
WITHOUT_CLASSIFICATION	// (?:) // *?,??,+?,{}? // (?=)(?!) // \A,\Z // \d,\D,\w,\W,\s,\S within [] // (?#)
WITHOUT_CLASSIFICATION	// if chain returns false, it "rejected" the token due to // an optimization, and next was combined with lastToken
WITHOUT_CLASSIFICATION	// next succeeds // is a match // try next option
WITHOUT_CLASSIFICATION	// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	//int totalDraw = (n + 1 + NUM_OVERSHOOT_BYTES) + (n + NUM_OVERSHOOT_BYTES) + n + 65537; //compressOutOfMemory ( totalDraw, n );
WITHOUT_CLASSIFICATION	// ensures that active view is saved last, // ie created last on next load, ie in front // on next load
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// record \n and \t on lines specially so that auto indent // can take place
WITHOUT_CLASSIFICATION	// since subsequent macros with the same name are ignored, // load user macros first so that they override the system // macros.
WITHOUT_CLASSIFICATION	// in case macro file name has a space in it. // spaces break the view.toolBar property, for instance, // since it uses spaces to delimit action names.
WITHOUT_CLASSIFICATION	//System.err.println("y=" + y + ",offsetY=" + offsetY //	+ ",size.height=" + size.height //	+ ",win.height=" + win.getHeight());
WITHOUT_CLASSIFICATION	// I'm not sure when this can happen, // but it does sometimes, witness the // jEdit bug tracker.
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Constructors. ////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// // Constants for input. //
WITHOUT_CLASSIFICATION	// Read the value, normalizing whitespace // if it is not CDATA.
WITHOUT_CLASSIFICATION	// Check for surrogates: 00000000 0000xxxx yyyyyyyy zzzzzzzz //  (1101|10xx|xxyy|yyyy + 1101|11yy|zzzz|zzzz: 
WITHOUT_CLASSIFICATION	// Search for a matching tuple, and // return the string if we find one.
WITHOUT_CLASSIFICATION	// OK, add it to the end of the // bucket.
WITHOUT_CLASSIFICATION	// // Attributes //
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // High-level I/O. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// UCS-4 must begin with "<!XML" // 0x00 0x00 0x00 0x3c: UCS-4, big-endian (1234)
WITHOUT_CLASSIFICATION	// Set up a snapshot of the current // input source.
WITHOUT_CLASSIFICATION	// Compare the input, character- // by character.
WITHOUT_CLASSIFICATION	// // Buffers for decoded but unparsed character input. //
WITHOUT_CLASSIFICATION	// // Buffer for undecoded raw byte input. //
WITHOUT_CLASSIFICATION	// This is necessary to have a file opened from the Finder // before jEdit is running set as the currently active // buffer.
WITHOUT_CLASSIFICATION	//super(); //}}}
WITHOUT_CLASSIFICATION	// put forNameSpace it on the top of the stack // Note: it's important that there is only one exit point from this // method so that we can swap back the namespace.
WITHOUT_CLASSIFICATION	// The lock is our declaring namespace's This reference // (the method's 'super').  Or in the case of a class it's the // class instance.
WITHOUT_CLASSIFICATION	// Set untyped variable // untyped param
WITHOUT_CLASSIFICATION	// Check for explicit return of value from void method type. // retControl.returnPoint is the Node of the return statement
WITHOUT_CLASSIFICATION	// remove the bsh:// // get the index of the : between the host and the port is located
WITHOUT_CLASSIFICATION	// Unwrap target exception.  If the interface declares that  // it throws the ex it will be delivered.  If not it will be  // wrapped in an UndeclaredThrowable
WITHOUT_CLASSIFICATION	// Get the type by constructing a prototype array with // arbitrary (zero) length in each dimension. // int array default zeros
WITHOUT_CLASSIFICATION	// If it had a different type throw error. // This allows declaring the same var again, but not with // a different (even if assignable) type.
WITHOUT_CLASSIFICATION	// Careful here: // else fall through to override and install the new typed version
WITHOUT_CLASSIFICATION	// now done in NameSpace automatically when root // The classes which are imported by default //globalNameSpace.loadDefaultImports();
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// --------------------------------------------------------- // The following instance variables mutate during evaluation and should // be reset by the reset() method where necessary
WITHOUT_CLASSIFICATION	// No variable or class found in 'this' type ref. // if autoAllocateThis then create one; a child 'this'.
WITHOUT_CLASSIFICATION	// null 'from' type corresponds to type of Primitive.NULL // assign to any object type
WITHOUT_CLASSIFICATION	// wrapper to primitive // Convert value to Primitive and check/cast it.
WITHOUT_CLASSIFICATION	// For operator-assign operations save the lhs value before evaluating // the rhs.  This is correct Java behavior for postfix operations // e.g. i=1; i+=i++; // should be 2 not 3
WITHOUT_CLASSIFICATION	// number of nodes on stack // current mark
WITHOUT_CLASSIFICATION	// Try to load the module // don't refer to it directly here or we're dependent upon it
WITHOUT_CLASSIFICATION	// NULL return null as type... we currently use null type to indicate  // loose typing throughout bsh.
WITHOUT_CLASSIFICATION	// Trying to cast primitive to an object type // Primitive.NULL can be cast to any object type
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - super constructor args // null node, null callstack, ParseException knows where the error is.
WITHOUT_CLASSIFICATION	// Push nulls for various args of invokeMethod // interpreter // callstack // callerinfo
WITHOUT_CLASSIFICATION	// Generate code to call ClassGeneratorUtil to get our switch index  // and give us args...
WITHOUT_CLASSIFICATION	// check to see if the instance has already been initialized // (the case if using a this() alternate constuctor)
WITHOUT_CLASSIFICATION	// evaluate the instance portion of the block in it // Evaluate the initializer block
WITHOUT_CLASSIFICATION	// Handle ".class" suffix operation // Prefix must be a BSHType
WITHOUT_CLASSIFICATION	//}}} //{{{ Word character...
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// we didn't have a component previously, so // create a border
WITHOUT_CLASSIFICATION	//{{{ filesActivated() method // canDoubleClickClose set to false when ENTER pressed
WITHOUT_CLASSIFICATION	// we expand those that are non-empty, and // remove those that are empty
WITHOUT_CLASSIFICATION	//{{{ setFoldLevel() method // Also sets 'fold level valid' flag
WITHOUT_CLASSIFICATION	// if auto wrap is on, always restart search. // if auto wrap is off, and we're called from // a macro, stop search. If we're called // interactively, ask the user what to do.
WITHOUT_CLASSIFICATION	// for backwards compatibility with plugins that fiddle with // jEdit's UI layout
WITHOUT_CLASSIFICATION	// we have binding foo // but user asks to remove foo bar?
WITHOUT_CLASSIFICATION	// we keep the first non-null frc we get, since sometimes // we get invalid ones on subsequent pages on Windows
WITHOUT_CLASSIFICATION	// this is handled a little differently from other jEdit settings // as the splash screen flag needs to be known very early in the // startup sequence, before the user properties have been loaded
WITHOUT_CLASSIFICATION	// impl note: since multiple searches now allowed, // extra level in hierarchy
WITHOUT_CLASSIFICATION	// invalid regexp, ignore // return true to avoid annoying beeping while // typing a re
WITHOUT_CLASSIFICATION	// we use a custom JRadioButton subclass that returns // false for isFocusTraversable() so that the user can // tab from the search field to the replace field with // one keystroke
WITHOUT_CLASSIFICATION	// the code above builds a 1-indexed suffix array, // but we shift it to be 0-indexed, ignoring the // original 0-th element
WITHOUT_CLASSIFICATION	// Leave buffer in a consistent state if // an error occurs
WITHOUT_CLASSIFICATION	//{{{ // lazily create skip and suffix arrays for either the // search pattern, or the reversed search pattern
WITHOUT_CLASSIFICATION	// used for the stringReplace and beanShell replace radio buttons, // so that the user can press tab to go from the find field to the // replace field in one go
WITHOUT_CLASSIFICATION	// if the caret is on a collapsed fold, collapse the // parent fold
WITHOUT_CLASSIFICATION	// this is either style.getBackgroundColor() or // styles[defaultID].getBackgroundColor()
WITHOUT_CLASSIFICATION	// complete-word command needs a list of all non-alphanumeric // characters used in a keyword map.
WITHOUT_CLASSIFICATION	//}}} //{{{ Paint bracket scope
WITHOUT_CLASSIFICATION	//{{{ physDown() method // scroll down by physical line amount
WITHOUT_CLASSIFICATION	// still have to call this even if it equals the // old one so that the offset manager sets the // validity flag!
WITHOUT_CLASSIFICATION	// No matter what happends... stops us from leaving buffer // in a bad state
WITHOUT_CLASSIFICATION	// Don't overstrike if we're on the end of // the line
WITHOUT_CLASSIFICATION	// so that end followed by up arrow will always put caret at // the end of the previous line, for example //setMagicCaretPosition(Integer.MAX_VALUE); //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	// this is package-private so that the painter can use it without // having to call getSelection() (which involves an array copy)
WITHOUT_CLASSIFICATION	// try and merge existing selections one by // one with the new selection
WITHOUT_CLASSIFICATION	// if one line's chunks are invalid, remaining lines are also // invalid
WITHOUT_CLASSIFICATION	//case ClassWriter.FIELD: //case ClassWriter.METH: //case ClassWriter.IMETH:
WITHOUT_CLASSIFICATION	// updates current stack size (max stack size unchanged because stack // size variation always negative in this case)
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Utility methods: control flow analysis algorithm // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// copy of indexes // copy of sizes // instructions to be resized // future offset of a jump instruction
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	/*		Perform a cast, cast check, or assignability check.		@param toType the class type of the cast result, which may include			primitive types, e.g. Byte.TYPE.  toType may be null to indicate a			loose type assignment (which matches any fromType).		@param fromType is the class type of the value to be cast including			java primitive TYPE classes for primitives.			fromType should be null to indicate that the fromValue is or would			be Primitive.NULL		@param fromValue an Object or bsh.Primitive primitive value (including			Primitive.NULL or Primitive.VOID )		@param checkOnly If checkOnly is true then fromValue must be null.			FromType is checked for the cast to toType...			If checkOnly is false then fromValue must be non-null			(Primitive.NULL is ok) and the actual cast is performed.		@throws UtilEvalError on invalid assignment (when operation is			assignment ).		@throws UtilTargetError wrapping ClassCastException on cast error 			(when operation is cast)		@param operation is Types.CAST or Types.ASSIGNMENT		@see Primitive.getType()	*/
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	/* do nothing */
WITHOUT_CLASSIFICATION	/* do nothing */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// for debugging
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	//}}}
WITHOUT_CLASSIFICATION	// // I/O information. // // current reader // current input stream // current line number // current column number // type of input source // stack of input soruces // current external entity // current character encoding. // how many bytes read from current source.
WITHOUT_CLASSIFICATION	/*          We'll print our banner using eval(String) in order to          exercise the parser and get the basic expression classes loaded...          This ameliorates the delay after typing the first statement.        */
WITHOUT_CLASSIFICATION	/*		Disallowing VOIDs here was an easy way to support the throwing of a 		more descriptive error message on use of an undefined argument to a 		method call (very common).  If it ever turns out that we need to 		support that for some reason we'll have to re-evaluate how we get 		"meta-information" about the arguments in the various invoke() methods 		that take Object [].  We could either pass BSHArguments down to 		overloaded forms of the methods or throw an exception subtype 		including the argument position back up, where the error message would		be compounded.	*/
WITHOUT_CLASSIFICATION	/*				Primitive (number or void) is not normally an instanceof				anything.  But for internal use we'll test true for the				bsh.Primitive class.  				i.e. (5 instanceof bsh.Primitive) will be true			*/
WITHOUT_CLASSIFICATION	// this will be the current parse character (pattern[index])
WITHOUT_CLASSIFICATION	// this will result in a slight speed up, since we // don't need to read the DTD anyway, as AElfred is // non-validating
WITHOUT_CLASSIFICATION	// fixes the hang that can occur if we 'save as' to a // new filename which requires re-sorting
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Conversion to type descriptors // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// each JAR file listed in the plugin's jars property // needs to know that we need them
WITHOUT_CLASSIFICATION	// // Maintain a count of errors. //
WITHOUT_CLASSIFICATION	// number of child nodes 
WITHOUT_CLASSIFICATION	// number of child nodes 
WITHOUT_CLASSIFICATION	// wrap the exception in a TargetException to propogate it up
WITHOUT_CLASSIFICATION	/*		object is a java.lang wrapper for boolean, char, or number type	*/
WITHOUT_CLASSIFICATION	// ALTERNATION OPERATOR //  \| or | (if RE_NO_BK_VBAR) or newline (if RE_NEWLINE_ALT) //  not available if RE_LIMITED_OPS is set
WITHOUT_CLASSIFICATION	//}}} //}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ removeBufferFromList() method
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Fields for the control flow graph analysis algorithm (used to compute the // maximum stack size). A control flow graph contains one node per "basic // block", and one edge per "jump" from one basic block to another. Each node // (i.e., each basic block) is represented by the Label object that // corresponds to the first instruction of this basic block. Each node also // stores the list of its successors in the graph, as a linked list of Edge // objects. // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// default for plugins that don't specify this property (ie, // 4.1-style plugins) is to load them on startup
WITHOUT_CLASSIFICATION	// overflow character from last data chunk.
WITHOUT_CLASSIFICATION	// sanity check during development
WITHOUT_CLASSIFICATION	/* A definite node is constructed from a specified number of     children.  That number of nodes are popped from the stack and     made the children of the definite node.  Then the definite node     is pushed on to the stack. */
WITHOUT_CLASSIFICATION	// while in list // Out of list, index is one past ']'
WITHOUT_CLASSIFICATION	// don't do this in static{} since we need jEdit.initMisc() // run first so we have the jeditresource: protocol
WITHOUT_CLASSIFICATION	/* if value is null:		 * - if default is null, unset user prop		 * - else set user prop to ""		 * else		 * - if default equals value, ignore		 * - if default doesn't equal value, set user		 */
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Fields to optimize the creation of {@link Edge Edge} objects by using a // pool of reusable objects. The (shared) pool is a linked list of Edge // objects, linked to each other by their {@link Edge#poolNext} field. Each // time a CodeWriter needs to allocate an Edge, it removes the first Edge // of the pool and adds it to a private list of Edge objects. After the end // of the control flow analysis algorithm, the Edge objects in the private // list of the CodeWriter are added back to the pool (by appending this // private list to the pool list; in order to do this in constant time, both // head and tail of the private list are stored in this CodeWriter). // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// buffers retain a reference to the fold handler in // question... and the easiest way to handle fold // handler unloading is this...
WITHOUT_CLASSIFICATION	// // Buffer for parsed character data. //
WITHOUT_CLASSIFICATION	/*					We get stuck in infinite loops here when unicode escapes					fail.  Must re-init the char stream reader 					(ASCII_UCodeESC_CharStream.java)				*/
WITHOUT_CLASSIFICATION	// find the java method
WITHOUT_CLASSIFICATION	// SUBEXPRESSIONS //  (...) | \(...\) depending on RE_NO_BK_PARENS
WITHOUT_CLASSIFICATION	// even though this class is called AbstractOptionPane, it is not really // abstract, since BufferOptions uses an instance of it to lay out its // components.
WITHOUT_CLASSIFICATION	//{{{ loadIfNecessary() method
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Implementation of the CodeVisitor interface // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	//{{{ Package-private members
WITHOUT_CLASSIFICATION	// // Buffer for parsed names. //
WITHOUT_CLASSIFICATION	// reinit the callstack
WITHOUT_CLASSIFICATION	// Do we have the necessary jdk1.2 packages and optional package?
WITHOUT_CLASSIFICATION	// I guess this is when we pass it as an argument? // Setting locally
WITHOUT_CLASSIFICATION	// not a comment // create RE subexpression as token.
WITHOUT_CLASSIFICATION	//{{{ addComponent() method
WITHOUT_CLASSIFICATION	//{{{ setProperties() method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	// adds the instruction to the bytecode of the method
WITHOUT_CLASSIFICATION	//{{{ Private members
WITHOUT_CLASSIFICATION	// // Hash table of attributes found in current start tag. //
WITHOUT_CLASSIFICATION	/*ignore*/
WITHOUT_CLASSIFICATION	// UNMATCHED RIGHT PAREN // ) or \) throw exception if // !syntax.get(RESyntax.RE_UNMATCHED_RIGHT_PAREN_ORD)
WITHOUT_CLASSIFICATION	/* private */
WITHOUT_CLASSIFICATION	// need to carry over file name and first line globs because they are // not given to us by the XMode handler, but instead are filled in by // the catalog loader.
WITHOUT_CLASSIFICATION	// case of a backward jump with an offset < -32768. In this case we // automatically replace GOTO with GOTO_W, JSR with JSR_W and IFxxx <l> // with IFNOTxxx <l'> GOTO_W <l>, where IFNOTxxx is the "opposite" opcode // of IFxxx (i.e., IFNE for IFEQ) and where <l'> designates the // instruction just after the GOTO_W.
WITHOUT_CLASSIFICATION	//{{{ Instance variables
WITHOUT_CLASSIFICATION	//dockMenu.addItem(new NSMenuItem().separatorItem()); //dockMenu.addItem(miMac);
WITHOUT_CLASSIFICATION	/* 			Create non-interactive local interpreter for this namespace			with source from the input stream and out/err same as 			this interpreter.		*/
WITHOUT_CLASSIFICATION	// If not found and there are arguments to match - // Look for an overloaded assignable match // (First find the method, then find accessible version of it)
WITHOUT_CLASSIFICATION	// MATCH-ANY-CHARACTER OPERATOR (except possibly newline and null) //  .
WITHOUT_CLASSIFICATION	//{{{ JARClassLoader constructor
WITHOUT_CLASSIFICATION	// no need to do this for macros!
WITHOUT_CLASSIFICATION	// GOTO_W
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//}}} //}}}
WITHOUT_CLASSIFICATION	//{{{ applicationShouldHandleReopen() method
WITHOUT_CLASSIFICATION	/*                throw new EvalError(					"Sourced file: "+sourceFileInfo+" parser Error: " 					+ e.getMessage( DEBUG ), node, callstack );				*/
WITHOUT_CLASSIFICATION	// Try static and then object, if allowed // Note that the Java compiler should not allow both.
WITHOUT_CLASSIFICATION	// search all of its interfaces breadth first
WITHOUT_CLASSIFICATION	// ZERO-OR-MORE REPEAT OPERATOR //  *
WITHOUT_CLASSIFICATION	// see what JARClassLoader this class is in
WITHOUT_CLASSIFICATION	// never called
WITHOUT_CLASSIFICATION	// control flow analysis algorithm: while the block stack is not empty, // pop a block from this stack, update the max stack size, compute // the true (non relative) begin stack size of the successors of this // block, and push these successors onto the stack (unless they have // already been pushed onto the stack). Note: by hypothesis, the {@link // Label#beginStackSize} of the blocks in the block stack are the true // (non relative) beginning stack sizes of these blocks.
WITHOUT_CLASSIFICATION	/*			Note: some interesting things are going on here.			1) We swap instead of push...  The primary mode of operation 			acts like we are in the enclosing namespace...  (super must be 			preserved, etc.)			2) We do *not* call the body block eval with the namespace 			override.  Instead we allow it to create a second subordinate 			BlockNameSpace child of the forNameSpace.  Variable propogation 			still works through the chain, but the block's child cleans the 			state between iteration.  			(which is correct Java behavior... see forscope4.bsh)		*/
WITHOUT_CLASSIFICATION	// WORD BEGIN OPERATOR  //  \< if ????
WITHOUT_CLASSIFICATION	// used to mark non-existent classes in class hash
WITHOUT_CLASSIFICATION	// evaluate a method declaration
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Utility methods: dump bytecode array // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/*	End methods for interacting with Parser */
WITHOUT_CLASSIFICATION	/*        NULL means "no value".        This ia a placeholder for primitive null value.    */
WITHOUT_CLASSIFICATION	/*                If idealMatch fits targetMatch and this is the first match 				or targetMatch is more specific than the best match, make it 				the new best match.            */
WITHOUT_CLASSIFICATION	// TAB ESCAPE //  \t
WITHOUT_CLASSIFICATION	//{{{ cut() method
WITHOUT_CLASSIFICATION	//{{{ CustomClassManager class
WITHOUT_CLASSIFICATION	// Set the default entities here.
WITHOUT_CLASSIFICATION	// The canonical file name is also absolute. // No need for getAbsolutePath() here...
WITHOUT_CLASSIFICATION	// private to prevent invocation with param that isn't a primitive-wrapper
WITHOUT_CLASSIFICATION	// NON-SPECIAL CHARACTER (or escape to make literal) //  c | \* for example
WITHOUT_CLASSIFICATION	//{{{ getRegister() method
WITHOUT_CLASSIFICATION	// 1st step: // As explained above, resizing an instruction may require to resize another // one, which may require to resize yet another one, and so on. The first // step of the algorithm consists in finding all the instructions that // need to be resized, without modifying the code. This is done by the // following "fix point" algorithm: // - parse the code to find the jump instructions whose offset will need //   more than 2 bytes to be stored (the future offset is computed from the //   current offset and from the number of bytes that will be inserted or //   removed between the source and target instructions). For each such //   instruction, adds an entry in (a copy of) the indexes and sizes arrays //   (if this has not already been done in a previous iteration!) // - if at least one entry has been added during the previous step, go back //   to the beginning, otherwise stop. // In fact the real algorithm is complicated by the fact that the size of // TABLESWITCH and LOOKUPSWITCH instructions depends on their position in // the bytecode (because of padding). In order to ensure the convergence of // the algorithm, the number of bytes to be added or removed from these // instructions is over estimated during the previous loop, and computed // exactly only after the loop is finished (this requires another pass to // parse the bytecode of the method).
WITHOUT_CLASSIFICATION	// // When the class is loaded, populate the hash table of // attribute types. //
WITHOUT_CLASSIFICATION	/*modifiers*/
WITHOUT_CLASSIFICATION	/*		If this type of This implements it directly return this,		else try complain that we don't have the proxy mechanism.	*/
WITHOUT_CLASSIFICATION	// If both original args were Primitives return a Primitive result // else it was mixed (wrapper/primitive) return the wrapper type // Exception is for boolean result, return the primitive
WITHOUT_CLASSIFICATION	/*bcm*/
WITHOUT_CLASSIFICATION	// Overrides REToken.chain
WITHOUT_CLASSIFICATION	//{{{ constructPath() method
WITHOUT_CLASSIFICATION	// clear the static caches in BshClassManager
WITHOUT_CLASSIFICATION	// visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitIntInsn // - // visitLdcInsn //int LDC_W = 19;           // - //int LDC2_W = 20;          // - // visitVarInsn // - // - // - // - //int ILOAD_0 = 26;         // - //int ILOAD_1 = 27;         // - //int ILOAD_2 = 28;         // - //int ILOAD_3 = 29;         // - //int LLOAD_0 = 30;         // - //int LLOAD_1 = 31;         // - //int LLOAD_2 = 32;         // - //int LLOAD_3 = 33;         // - //int FLOAD_0 = 34;         // - //int FLOAD_1 = 35;         // - //int FLOAD_2 = 36;         // - //int FLOAD_3 = 37;         // - //int DLOAD_0 = 38;         // - //int DLOAD_1 = 39;         // - //int DLOAD_2 = 40;         // - //int DLOAD_3 = 41;         // - //int ALOAD_0 = 42;         // - //int ALOAD_1 = 43;         // - //int ALOAD_2 = 44;         // - //int ALOAD_3 = 45;         // - // visitInsn // - // - // - // - // - // - // - // visitVarInsn // - // - // - // - //int ISTORE_0 = 59;        // - //int ISTORE_1 = 60;        // - //int ISTORE_2 = 61;        // - //int ISTORE_3 = 62;        // - //int LSTORE_0 = 63;        // - //int LSTORE_1 = 64;        // - //int LSTORE_2 = 65;        // - //int LSTORE_3 = 66;        // - //int FSTORE_0 = 67;        // - //int FSTORE_1 = 68;        // - //int FSTORE_2 = 69;        // - //int FSTORE_3 = 70;        // - //int DSTORE_0 = 71;        // - //int DSTORE_1 = 72;        // - //int DSTORE_2 = 73;        // - //int DSTORE_3 = 74;        // - //int ASTORE_0 = 75;        // - //int ASTORE_1 = 76;        // - //int ASTORE_2 = 77;        // - //int ASTORE_3 = 78;        // - // visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitIincInsn // visitInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitJumpInsn // - // - // - // - // - // - // - // - // - // - // - // - // - // - // - // visitVarInsn // visiTableSwitchInsn // visitLookupSwitch // visitInsn // - // - // - // - // - // visitFieldInsn // - // - // - // visitMethodInsn // - // - // - //int UNUSED = 186;         // NOT VISITED // visitTypeInsn // visitIntInsn // visitTypeInsn // visitInsn // - // visitTypeInsn // - // visitInsn // - //int WIDE = 196;           // NOT VISITED // visitMultiANewArrayInsn // visitJumpInsn // - //int GOTO_W = 200;         // - //int JSR_W = 201;          // -
WITHOUT_CLASSIFICATION	// // Flags for reading literals. //
WITHOUT_CLASSIFICATION	// If null callstack
WITHOUT_CLASSIFICATION	/*		invokeMethod() here is generally used by outside code to callback		into the bsh interpreter. e.g. when we are acting as an interface		for a scripted listener, etc.  In this case there is no real call stack		so we make a default one starting with the special JAVACODE namespace		and our namespace as the next.	*/
WITHOUT_CLASSIFICATION	// arithmetic
WITHOUT_CLASSIFICATION	/*eof*/
WITHOUT_CLASSIFICATION	// this has been changed since 1.03 to be non-overlapping matches
WITHOUT_CLASSIFICATION	// have to handle this case specially on windows. // insert \ between, eg A: and myfile.txt.
WITHOUT_CLASSIFICATION	//{{{ ToolBar-related constants
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Utility methods: constant pool management // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Error reporting. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// Invoke the block, overriding namespace with localNameSpace
WITHOUT_CLASSIFICATION	// a default hashCode()
WITHOUT_CLASSIFICATION	// can't cast void to anything
WITHOUT_CLASSIFICATION	/*	Thanks to Sreenivasa Viswanadha for suggesting how to get rid of expensive	lookahead here.*/
WITHOUT_CLASSIFICATION	// Create a new REMatch to hold results
WITHOUT_CLASSIFICATION	//{{{ saveBackup() method
WITHOUT_CLASSIFICATION	//{{{ saveBackup() method
WITHOUT_CLASSIFICATION	//{{{ Layers
WITHOUT_CLASSIFICATION	// Method body can only use 'return' statment type return control.
WITHOUT_CLASSIFICATION	// These are necessary to let us test synchronization from scripts
WITHOUT_CLASSIFICATION	// Only allow legal Java assignment unless we're a CAST operation
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ArrayInitializer */
WITHOUT_CLASSIFICATION	// Optimization: check if anchor + minimumLength > length
WITHOUT_CLASSIFICATION	/* if backup file was created less than			 * 'backupTimeDistance' ago, we do not			 * create the backup */
WITHOUT_CLASSIFICATION	//{{{ actionBar() method
WITHOUT_CLASSIFICATION	// Read the attribute name.
WITHOUT_CLASSIFICATION	// retControl.returnPoint is the Node of the return statement
WITHOUT_CLASSIFICATION	// null evalname and we're finished // base object for current eval
WITHOUT_CLASSIFICATION	// Begin BeanShell Modification - constructor
WITHOUT_CLASSIFICATION	/*	Originally called ResultType in the grammar*/
WITHOUT_CLASSIFICATION	// Special handling at end of input for e.g. "$"
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	//{{{ quicksort() method
WITHOUT_CLASSIFICATION	// this should never throw an exception.
WITHOUT_CLASSIFICATION	// Inform the handler about the // attribute.
WITHOUT_CLASSIFICATION	// If return type void, return void as the value.
WITHOUT_CLASSIFICATION	// Note: it's ok to cache class resolution here because when the class // space changes the namespace will discard cached names.
WITHOUT_CLASSIFICATION	// EOF, not zero read apparently
WITHOUT_CLASSIFICATION	/* * Expression syntax follows. */
WITHOUT_CLASSIFICATION	// Precondition: pattern[index-1] == ':' // we will return pos of closing ']'.
WITHOUT_CLASSIFICATION	//{{{ isToolsJarAvailable() method
WITHOUT_CLASSIFICATION	// Bind to any port on localhost; accept 2 simultaneous // connection attempts before rejecting connections
WITHOUT_CLASSIFICATION	// Found "<?"
WITHOUT_CLASSIFICATION	/*				If we have type info and the child is an array initializer				pass it along...  Else use the default eval style.				(This allows array initializer to handle the problem... 				allowing for future enhancements in loosening types there).				*/
WITHOUT_CLASSIFICATION	/*			Is it a simple variable name?			Doing this first gives the correct Java precedence for vars 			vs. imported class names (at least in the simple case - see			tests/precedence1.bsh).  It should also speed things up a bit.		*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) MethodInvocation */
WITHOUT_CLASSIFICATION	// Check for {} tomfoolery
WITHOUT_CLASSIFICATION	//{{{ parsePermissions() method
WITHOUT_CLASSIFICATION	// we have to deal with a huge range of possible border cases here.
WITHOUT_CLASSIFICATION	// Make a hash of the interface hashcodes in order to cache them
WITHOUT_CLASSIFICATION	/*			Is it a bsh script variable reference?			If we're just starting the eval of name (no base object)			or we're evaluating relative to a This type reference check.		*/
WITHOUT_CLASSIFICATION	// Generate code to push the BSHTHIS or BSHSTATIC field 
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Arguments */
WITHOUT_CLASSIFICATION	// We could let a String fall through to final input, but since // it's the most likely input type, we check it first.
WITHOUT_CLASSIFICATION	//{{{ Expansion class
WITHOUT_CLASSIFICATION	// no background mode, and opening a new view
WITHOUT_CLASSIFICATION	// Get the string of enumerated values // if necessary.
WITHOUT_CLASSIFICATION	/*leave null*/
WITHOUT_CLASSIFICATION	/*			Is it a class name?			If we're just starting eval of name try to make it, else fail.		*/
WITHOUT_CLASSIFICATION	// Push 'this'
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) Block */
WITHOUT_CLASSIFICATION	// UNDONE When File lets us get the userName, use it!
WITHOUT_CLASSIFICATION	//}}} //{{{ Handle $
WITHOUT_CLASSIFICATION	//{{{ getBufferSwitcher() method
WITHOUT_CLASSIFICATION	// getClassInstance() throws exception if not there
WITHOUT_CLASSIFICATION	// Push the name of the method as a constant
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) IfStatement */
WITHOUT_CLASSIFICATION	/*     * freq table collected to save a pass over the data     * during decompression.     */
WITHOUT_CLASSIFICATION	// if no server running and user runs jedit -quit, // just exit
WITHOUT_CLASSIFICATION	//{{{ loadCaretInfo() method
WITHOUT_CLASSIFICATION	/**    * Parse a conditional section.    * [63] conditionalSect ::= includeSect || ignoreSect    * [64] includeSect ::= '<![' %'INCLUDE' '[' (%markupdecl*)* ']]>'    * [65] ignoreSect ::= '<![' %'IGNORE' '[' ignoreSectContents* ']]>'    * [66] ignoreSectContents ::= ((SkipLit | Comment | PI) -(Char* ']]>'))    *                           | ('<![' ignoreSectContents* ']]>')    *                           | (Char - (']' | [<'"]))    *                           | ('<!' (Char - ('-' | '[')))    * *NOTE: the '<![' has already been read.    * *TODO: verify that I am handling ignoreSectContents right.    */
WITHOUT_CLASSIFICATION	/*			If we've fallen through here we are no longer resolving to			a class type.		*/
WITHOUT_CLASSIFICATION	// generate the default branch of switch
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) WhileStatement */
WITHOUT_CLASSIFICATION	/*     * always: in the range 0 .. 9.     * The current block size is 100000 * this number.     */
WITHOUT_CLASSIFICATION	//{{{ Property methods
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ReturnStatement */
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //
WITHOUT_CLASSIFICATION	// file name
WITHOUT_CLASSIFICATION	//{{{ getColorProperty() method
WITHOUT_CLASSIFICATION	// left == default case
WITHOUT_CLASSIFICATION	// OK, the cheat didn't work; start over // and do it by the book.
WITHOUT_CLASSIFICATION	// don't break jEdit core and plugins! //throw new InterpreterError("null variable value");
WITHOUT_CLASSIFICATION	/*		Generate a branch of the constructor switch.  This method is called by		generateConstructorSwitch.		The code generated by this method assumes that the argument array is 		on the stack.	*/
WITHOUT_CLASSIFICATION	/*@bgen(jjtree) ReturnStatement */
WITHOUT_CLASSIFICATION	/*     * index of the last char in the block, so     * the block size == last + 1.     */
WITHOUT_CLASSIFICATION	// Start with a little cheat.  Most of // the time, the white space will fall // within the current read buffer; if // not, then fall through.
WITHOUT_CLASSIFICATION	// If recurse, set global untyped var, else set it here.	 //NameSpace varScope = recurse ? getGlobal() : this; // This modification makes default allocation local
WITHOUT_CLASSIFICATION	/*bubble up if allowed*/
WITHOUT_CLASSIFICATION	// ok?
WITHOUT_CLASSIFICATION	/*squeltch*/
WITHOUT_CLASSIFICATION	/*squeltch*/
WITHOUT_CLASSIFICATION	/*         * Setting up the unzftab entries here is not strictly         * necessary, but it does save having to do it later         * in a separate pass, and so saves a block's worth of         * cache misses.         */
WITHOUT_CLASSIFICATION	//{{{ getMode() method
WITHOUT_CLASSIFICATION	//{{{ getAutosaveFile() method
WITHOUT_CLASSIFICATION	// Normalise whitespace if necessary.
WITHOUT_CLASSIFICATION	// try parent
WITHOUT_CLASSIFICATION	/*forcclass*/
WITHOUT_CLASSIFICATION	/*		Note: technically I think we could get by passing in only the		current namespace or perhaps BshClassManager here instead of 		CallStack and Interpreter.  However let's just play it safe in case		of future changes - anywhere you eval a node you need these.	*/
WITHOUT_CLASSIFICATION	/*         * Undo the MTF values for the selectors.         */
WITHOUT_CLASSIFICATION	//{{{ newFile() method
WITHOUT_CLASSIFICATION	//{{{ addBufferChangeListener() method
WITHOUT_CLASSIFICATION	// system id
WITHOUT_CLASSIFICATION	// Add the new typed var
WITHOUT_CLASSIFICATION	/*				If this was a literal "super" reference then we allow recursion				in setting the variable to get the normal effect of finding the				nearest definition starting at the super scope.  On any other				resolution qualified by a 'this' type reference we want to set				the variable directly in that scope. e.g. this.x=5;  or 				someThisType.x=5;								In the old scoping rules super didn't do this.			*/
WITHOUT_CLASSIFICATION	// type is correct here
WITHOUT_CLASSIFICATION	// Word boundary means input[index-1] was a word character // and input[index] is not, or input[index] is a word character // and input[index-1] was not //  In the string "one two three", these positions match: //  |o|n|e| |t|w|o| |t|h|r|e|e| //  ^     ^ ^     ^ ^         ^ // is current character a letter or digit? // is previous character a letter or digit?
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// private members
WITHOUT_CLASSIFICATION	// Wait for pending I/O requests
WITHOUT_CLASSIFICATION	// Wait for pending I/O requests
WITHOUT_CLASSIFICATION	// will be cached from now on...
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Utility routines. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/*declaredOnly*/
WITHOUT_CLASSIFICATION	/*declaredOnly*/
WITHOUT_CLASSIFICATION	/*declaredOnly*/
WITHOUT_CLASSIFICATION	// Note: if we want methods declared inside blocks to be accessible via // this.methodname() inside the block we could handle it here as a // special case.  See also resolveThisFieldReference() special handling // for BlockNameSpace case.  They currently work via the direct name // e.g. methodName().
WITHOUT_CLASSIFICATION	// auto-gen default constructor // use default super constructor
WITHOUT_CLASSIFICATION	// number of times we've matched so far
WITHOUT_CLASSIFICATION	// Create a new file when the last is closed
WITHOUT_CLASSIFICATION	//{{{ Edit modes, syntax highlighting
WITHOUT_CLASSIFICATION	// The new length is <= the old one.
WITHOUT_CLASSIFICATION	// Try object imports
WITHOUT_CLASSIFICATION	// found an object and it's not an undefined variable
WITHOUT_CLASSIFICATION	// Determine if the constructor calls this() or super()
WITHOUT_CLASSIFICATION	// Check for stingy match for each possibility.
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	/*         * Nodes and heap entries run from 1.  Entry 0         * for both the heap and nodes is a sentinel.         */
WITHOUT_CLASSIFICATION	//{{{ closeAllBuffers() method
WITHOUT_CLASSIFICATION	//{{{ closeAllBuffers() method
WITHOUT_CLASSIFICATION	//{{{ need to convert entries of 'props' to PropValue instances
WITHOUT_CLASSIFICATION	// Insert the content type, if any.
WITHOUT_CLASSIFICATION	// Try static imports
WITHOUT_CLASSIFICATION	// this() constructors come after super constructors in the table
WITHOUT_CLASSIFICATION	// Order these from longest to shortest // Start by assuming longest (more repeats)
WITHOUT_CLASSIFICATION	/*         * A 6-byte block header, the value chosen arbitrarily         * as 0x314159265359 :-).  A 32 bit value does not really         * give a strong enough guarantee that the value will not         * appear by chance in the compressed datastream.  Worst-case         * probability of this event, for a 900k block, is about         * 2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.         * For a compressed file of size 100Gb -- about 100000 blocks --         * only a 48-bit marker will do.  NB: normal compression/         * decompression do *not* rely on these statistical properties.         * They are only important when trying to recover blocks from         * damaged files.         */
WITHOUT_CLASSIFICATION	// close remaining buffers (the close dialog only deals with // dirty ones)
WITHOUT_CLASSIFICATION	// we do a write lock so that the // autosave, which grabs a read lock, // is not executed between the // deletion of the autosave file // and clearing of the dirty flag
WITHOUT_CLASSIFICATION	/*		If we want to support multiple commands in the command path we need to		change this to not throw the exception.	*/
WITHOUT_CLASSIFICATION	// Check for existing method
WITHOUT_CLASSIFICATION	// Create the instance 'This' namespace, set it on the object // instance and invoke the instance initializer
WITHOUT_CLASSIFICATION	// Find new doablesLast
WITHOUT_CLASSIFICATION	/*         * 20 is just a paranoia constant         */
WITHOUT_CLASSIFICATION	//{{{ saveAllBuffers() method
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// UCS-4 must begin with "<!XML" // 0x3c 0x00 0x00 0x00: UCS-4, little-endian (4321)
WITHOUT_CLASSIFICATION	//return countParts(value) > 1;
WITHOUT_CLASSIFICATION	// The object instance has already been initialzed by another // constructor.  Fall through to invoke the constructor body below.
WITHOUT_CLASSIFICATION	// At this point we've either got too many or just the right amount. // See if this numRepeats works with the rest of the regexp.
WITHOUT_CLASSIFICATION	/*         * Write `magic' bytes h indicating file-format == huffmanised,         * followed by a digit indicating blockSize100k.         */
WITHOUT_CLASSIFICATION	// auto reload changed buffers?
WITHOUT_CLASSIFICATION	//{{{ ActionHandler class
WITHOUT_CLASSIFICATION	// UCS-4 must begin with "<!XML" // 0x00 0x3c 0x00 0x00: UCS-4, unusual (3421)
WITHOUT_CLASSIFICATION	// Test all possible matches for this number of repeats
WITHOUT_CLASSIFICATION	/*                 * Complete the big bucket [ss] by quicksorting                 * any unsorted small buckets [ss, j].  Hopefully                 * previous pointer-scanning phases have already                 * completed many of the small buckets [ss, j], so                 * we don't have to sort them at all.                 */
WITHOUT_CLASSIFICATION	// ... sweet. saveBackup() will create backupDir if it // doesn't exist.
WITHOUT_CLASSIFICATION	//{{{ ParentMouseHandler class
WITHOUT_CLASSIFICATION	// UCS-2 with a byte-order marker. // 0xff 0xfe: UCS-2, little-endian (21)
WITHOUT_CLASSIFICATION	// Can't call it getClass()
WITHOUT_CLASSIFICATION	// handle primitive widening conversions - JLS 5.1.2
WITHOUT_CLASSIFICATION	/*overrideNamespace*/
WITHOUT_CLASSIFICATION	/*                 * Now scan this big bucket so as to synthesise the                 * sorted order for small buckets [t, ss] for all t != ss.                 */
WITHOUT_CLASSIFICATION	// Even if reallyExit is false, we still exit properly // if background mode is off
WITHOUT_CLASSIFICATION	// compare existing entries' hashcode with this
WITHOUT_CLASSIFICATION	// Compare with number of dimensions actually created with the // number specified (syntax uses the undefined ones here)
WITHOUT_CLASSIFICATION	// Some kind of 8-bit encoding without "<?XML" // (otherwise) UTF-8 without encoding/XML declaration
WITHOUT_CLASSIFICATION	/*			Lots of preconditions checked here...			Once things are running smoothly we might comment these out			(That's what assertions are for).		*/
WITHOUT_CLASSIFICATION	/*			dimensionsNode can return either a fully intialized array or VOID.			when VOID the prescribed array dimensions (defined and undefined)			are contained in the node.		*/
WITHOUT_CLASSIFICATION	// so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	// so that we don't try to reset() right away
WITHOUT_CLASSIFICATION	/*                 * Find the coding table which is best for this group,                 * and record its identity in the selector table.                 */
WITHOUT_CLASSIFICATION	// in this case, we can't directly call // view.close(); we have to call closeView() // for all open views
WITHOUT_CLASSIFICATION	// execute nodes, skipping labels, until a break or return
WITHOUT_CLASSIFICATION	// Check for entity recursion.
WITHOUT_CLASSIFICATION	/* --- Instance data --- */
WITHOUT_CLASSIFICATION	// Both primitives, do primitive cast
WITHOUT_CLASSIFICATION	/*filter*/
WITHOUT_CLASSIFICATION	// check if input is at a valid position
WITHOUT_CLASSIFICATION	/*                     * 10                     */
WITHOUT_CLASSIFICATION	// Stop server
WITHOUT_CLASSIFICATION	//{{{ EnhancedButton constructor
WITHOUT_CLASSIFICATION	// Stop all plugins
WITHOUT_CLASSIFICATION	// Delegate to the static method
WITHOUT_CLASSIFICATION	// Test for a match, and push the character // back if the match fails.
WITHOUT_CLASSIFICATION	// Interpreter has no input stream, use eval() only // Interpreter has no input stream, use eval() only // Interpreter has a user, print prompts, etc.
WITHOUT_CLASSIFICATION	//Object r = checkOnly ? VALID_CAST :
WITHOUT_CLASSIFICATION	/*		Perform a suffix operation on the given object and return the 		new value.		<p>		obj will be a Node when suffix evaluation begins, allowing us to		interpret it contextually. (e.g. for .class) Thereafter it will be 		an value object or LHS (as determined by toLHS).		<p>				We must handle the toLHS case at each point here.		<p>	*/
WITHOUT_CLASSIFICATION	/*                 * copy 3                 */
WITHOUT_CLASSIFICATION	//{{{ updatePosition() method
WITHOUT_CLASSIFICATION	// if no requests are running, requestDone() // will not be called, so we must queue the // AWT runner ourselves.
WITHOUT_CLASSIFICATION	// Also cache the class so that no import resolution must occur // this avoids having to load our enclosing class which isn't // finished being generated yet... oy.
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // Low-level I/O. //////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// need to set the input stream - reinit the parser?
WITHOUT_CLASSIFICATION	// Primitive to arbitrary object type.  // Allow Primitive.castToType() to handle it as well as cases of  // Primitive.NULL and Primitive.VOID
WITHOUT_CLASSIFICATION	/*			Evaluate our prefix if it needs evaluating first.			If this is the first evaluation our prefix mayb be a Node 			(directly from the PrimaryPrefix) - eval() it to an object.  			If it's an LHS, resolve to a value.			Note: The ambiguous name construct is now necessary where the node 			may be an ambiguous name.  If this becomes common we might want to 			make a static method nodeToObject() or something.  The point is 			that we can't just eval() - we need to direct the evaluation to 			the context sensitive type of result; namely object, class, etc.		*/
WITHOUT_CLASSIFICATION	// a la Perl, $0 is whole thing, $1 - $9 are subexpressions
WITHOUT_CLASSIFICATION	// if started with java -jar jedit.jar
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Constructor // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// Read as many bytes as possible // into the read buffer.
WITHOUT_CLASSIFICATION	// init the static shared sharedObject if it's not there yet
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	/*map*/
WITHOUT_CLASSIFICATION	// index tracks the position in the char array
WITHOUT_CLASSIFICATION	// Pass 3: layout components
WITHOUT_CLASSIFICATION	//Log.log(Log.DEBUG,jEdit.class,fnf);
WITHOUT_CLASSIFICATION	// -------------------------------------------------------------------------- // Fields // --------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/*strict*/
WITHOUT_CLASSIFICATION	// Dispatch to an encoding-specific // reader method to populate the // readBuffer.
WITHOUT_CLASSIFICATION	// bsh.evalOnly
IMPLEMENTATION	// TODO Auto-generated constructor stub
IMPLEMENTATION	// XXX - log an error?  throw an exception?
IMPLEMENTATION	// TODO: allow user to request the system or no parent
IMPLEMENTATION	// XXX add exceptions
IMPLEMENTATION	/** * TODO: * comment field doesn't include all options yet */
IMPLEMENTATION	/** * TODO: * comment field doesn't include all options yet */
IMPLEMENTATION	//TO DO : delete the file if it is not a valid file.
IMPLEMENTATION	// Have to think about lazy initialization here...  JHM // comparator = new java.text.RuleBasedCollator();
IMPLEMENTATION	//TODO no methods yet for getClassname //TODO no method for newInstance using a reverse-classloader
IMPLEMENTATION	//if there was any text before this, add it as a fragment //TODO, this check could be modified to go if pos>prev; //seems like this current version could stick empty strings //into the list
IMPLEMENTATION	/*     * The displayName variable stores the value of the "display-name" element     * from the standard EJB descriptor.  As a future enhancement to this task,     * we may determine the name of the EJB JAR file using this display-name,     * but this has not be implemented yet.     */
IMPLEMENTATION	//TO DO : delete the file if it is not a valid file.
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	/**     * This method checks the timestamp on each file listed in the <code>     * ejbFiles</code> and compares them to the timestamp on the <code>jarFile     * </code>.  If the <code>jarFile</code>'s timestamp is more recent than     * each EJB file, <code>true</code> is returned.  Otherwise, <code>false     * </code> is returned.     * TODO: find a way to check the manifest-file, that is found by naming convention     *     * @param ejbFiles Hashtable of EJB classes (and other) files that will be     *                 added to the completed JAR file     * @param jarFile  JAR file which will contain all of the EJB classes (and     *                 other) files     * @return         boolean indicating whether or not the <code>jarFile</code>     *                 is up to date     */
IMPLEMENTATION	/** * An output stream that compresses into the BZip2 format (without the file * header chars) into another stream. * <p>The compression requires large amounts of memory. Thus you * should call the {@link #close() close()} method as soon as * possible, to force <tt>CBZip2OutputStream</tt> to release the * allocated memory.</p> * * <p>You can shrink the amount of allocated memory and maybe raise * the compression speed by choosing a lower blocksize, which in turn * may cause a lower compression ratio.  You can avoid unnecessary * memory allocation by avoiding using a blocksize which is bigger * than the size of the input. </p> * * <p>You can compute the memory usage for compressing by the * following formula:</p> * <pre> * <code>400k + (9 * blocksize)</code>. * </pre> *  * <p>To get the memory required for decompression by {@link * CBZip2InputStream CBZip2InputStream} use</p> * <pre> * <code>65k + (5 * blocksize)</code>. * </pre> * * <table width="100%" border="1"> *  <colgroup> *    <col width="33%" /> *    <col width="33%" /> *    <col width="33%" /> *  </colgroup> *  <tr> *    <th colspan="3">Memory usage by blocksize</th> *  </tr><tr> *    <th align="right">Blocksize</th> *    <th align="right">Compression<br>memory usage</th> *    <th align="right">Decompression<br>memory usage</th> *  </tr><tr> *    <td align="right">100k</td> *    <td align="right">1300k</td> *    <td align="right"> 565k</td> *  </tr><tr> *    <td align="right">200k</td> *    <td align="right">2200k</td> *    <td align="right">1065k</td> *  </tr><tr> *    <td align="right">300k</td> *    <td align="right">3100k</td> *    <td align="right">1565k</td> *  </tr><tr> *    <td align="right">400k</td> *    <td align="right">4000k</td> *    <td align="right">2065k</td> *  </tr><tr> *    <td align="right">500k</td> *    <td align="right">4900k</td> *    <td align="right">2565k</td> *  </tr><tr> *    <td align="right">600k</td> *    <td align="right">5800k</td> *    <td align="right">3065k</td> *  </tr><tr> *    <td align="right">700k</td> *    <td align="right">6700k</td> *    <td align="right">3565k</td> *  </tr><tr> *    <td align="right">800k</td> *    <td align="right">7600k</td> *    <td align="right">4065k</td> *  </tr><tr> *    <td align="right">900k</td> *    <td align="right">8500k</td> *    <td align="right">4565k</td> *  </tr> * </table> * * <p>For decompression <tt>CBZip2InputStream</tt> allocates less * memory if the bzipped input is smaller than one block.</p> * * <p>Instances of this class are not threadsafe.</p> * * <p> * TODO:    Update to BZip2 1.0.1 * </p> * */
WITHOUT_CLASSIFICATION	/* BuildListener stuff */
WITHOUT_CLASSIFICATION	// we don't expect to find this
WITHOUT_CLASSIFICATION	// ignore expected
WITHOUT_CLASSIFICATION	// ignore expected
WITHOUT_CLASSIFICATION	// tell the build it is finished
WITHOUT_CLASSIFICATION	//end class
WITHOUT_CLASSIFICATION	// keep track of what operating systems are supported here.
WITHOUT_CLASSIFICATION	// father and child pattern test
WITHOUT_CLASSIFICATION	// redo the test, but the 2 include patterns are inverted
WITHOUT_CLASSIFICATION	// add conditions and more commands as soon as the need arises
WITHOUT_CLASSIFICATION	// give ourselves some time for the system call // to execute... tweak if you have a really over // loaded system.
WITHOUT_CLASSIFICATION	// followLinks should be true by default, but if this ever // changes we will need this line.
WITHOUT_CLASSIFICATION	//testing drive letter search from root:
WITHOUT_CLASSIFICATION	//if this is our context we assume there must be something here:
WITHOUT_CLASSIFICATION	// This path should contain the class files for these testcases:
WITHOUT_CLASSIFICATION	// A special parent loader which is not the system class loader:
WITHOUT_CLASSIFICATION	// A special parent loader which is not the system class loader:
WITHOUT_CLASSIFICATION	// An AntClassLoader which is supposed to delegate to // the parent and then to the disk path:
WITHOUT_CLASSIFICATION	// The intended result URLs:
WITHOUT_CLASSIFICATION	// JDK 1.4: return Collections.list(e);
WITHOUT_CLASSIFICATION	// override allowed on <available>
WITHOUT_CLASSIFICATION	// ensure <tstamp>'s new prefix attribute is working
WITHOUT_CLASSIFICATION	// ensure <tstamp> follows the immutability rule
WITHOUT_CLASSIFICATION	// ensure <condition> follows the immutability rule
WITHOUT_CLASSIFICATION	// ensure <checksum> follows the immutability rule
WITHOUT_CLASSIFICATION	// ensure <exec> follows the immutability rule
WITHOUT_CLASSIFICATION	// ensure <pathconvert> follows the immutability rule
WITHOUT_CLASSIFICATION	/*             * throw in drive letters             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	/*             * Start with simple absolute file names.             */
WITHOUT_CLASSIFICATION	/*             * drive letters are not used, just to be considered as normal             * part of a name             */
WITHOUT_CLASSIFICATION	/*         * Now test some relative file name magic.         */
WITHOUT_CLASSIFICATION	// fail, because buildfile contains two targets with the same name
WITHOUT_CLASSIFICATION	// overriding target from imported buildfile is allowed
WITHOUT_CLASSIFICATION	// the buildfile to use
WITHOUT_CLASSIFICATION	// call a target
WITHOUT_CLASSIFICATION	//class-BFT
WITHOUT_CLASSIFICATION	// override allowed on <available>
WITHOUT_CLASSIFICATION	// ignore event
WITHOUT_CLASSIFICATION	// Check it's a read-only map.
WITHOUT_CLASSIFICATION	// Check it's a read-only map.
WITHOUT_CLASSIFICATION	/*         * JUnit 3.7 adds a getName method to TestCase - so we now         * have a name attribute in IntrospectionHelperTest if we run         * under JUnit 3.7 but not in earlier versions.         *         * Simply add it here and remove it after the tests.         */
WITHOUT_CLASSIFICATION	// addConfigured(Hashtable) should come before addConfigured(Map)
WITHOUT_CLASSIFICATION	// INVALID extension point
WITHOUT_CLASSIFICATION	// INVALID extension point
WITHOUT_CLASSIFICATION	// Valid extension point
WITHOUT_CLASSIFICATION	// Valid extension point, more derived than Map above, but *after* it!
WITHOUT_CLASSIFICATION	// IntrospectionHelperTest
WITHOUT_CLASSIFICATION	// make sure we do not get a NPE
WITHOUT_CLASSIFICATION	// use an anonymous subclass since ProjectComponent is abstract
WITHOUT_CLASSIFICATION	// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------
WITHOUT_CLASSIFICATION	/* I wrote the testcases in one java file because I want also to test the * combined behaviour (see end of the class).*/
WITHOUT_CLASSIFICATION	// check defaults
WITHOUT_CLASSIFICATION	// check defaults
WITHOUT_CLASSIFICATION	// check build.compiler provides defaults
WITHOUT_CLASSIFICATION	// setUserProperty to override system properties
WITHOUT_CLASSIFICATION	// check attribute overrides build.compiler
WITHOUT_CLASSIFICATION	// check attribute overrides build.compiler
WITHOUT_CLASSIFICATION	// some database keys, see #getProperties(int)
WITHOUT_CLASSIFICATION	// keys used in properties.
WITHOUT_CLASSIFICATION	//neither
WITHOUT_CLASSIFICATION	/*     * PR 11100     */
WITHOUT_CLASSIFICATION	// simple test to ensure that the caching does work...
WITHOUT_CLASSIFICATION	// 2nd run..
WITHOUT_CLASSIFICATION	// the driver must still be cached.
WITHOUT_CLASSIFICATION	// look for the driver path...
WITHOUT_CLASSIFICATION	//file time checks for java1.2+
WITHOUT_CLASSIFICATION	//only test on java1.5+
WITHOUT_CLASSIFICATION	// AntLikeTasksAtTopLevelTest
WITHOUT_CLASSIFICATION	//file length checks rely on touch generating a zero byte file
WITHOUT_CLASSIFICATION	// no-op: not a real business error
WITHOUT_CLASSIFICATION	//dont look for much text here as it is vendor and version dependent
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	/*     * PR 11100     */
WITHOUT_CLASSIFICATION	/*     * PR 38973     */
WITHOUT_CLASSIFICATION	/*     * PR 11100     */
WITHOUT_CLASSIFICATION	/*     * PR 16213     */
WITHOUT_CLASSIFICATION	/*     * PR 38973     */
WITHOUT_CLASSIFICATION	/*     * PR 21996     */
WITHOUT_CLASSIFICATION	/*     * PR 10504     */
WITHOUT_CLASSIFICATION	/*     * PR 20969     */
WITHOUT_CLASSIFICATION	// can't access the booleans in MyPrinter here (even if they // were static) since the MyPrinter instance that was used in // the test has likely been loaded via a different classloader // than this class.  Therefore we make the printer assert its // state and only check for the tail invocation.
WITHOUT_CLASSIFICATION	// should get no output at all
WITHOUT_CLASSIFICATION	// should get no output at all
WITHOUT_CLASSIFICATION	// should get no output at all
WITHOUT_CLASSIFICATION	// should get no output at all
WITHOUT_CLASSIFICATION	//this call should succeed as unless overrides if
WITHOUT_CLASSIFICATION	// test that the watchdog ends the process
WITHOUT_CLASSIFICATION	// test that the watchdog ends the process
WITHOUT_CLASSIFICATION	// and a little shorter
WITHOUT_CLASSIFICATION	// test that the watchdog ends the process
WITHOUT_CLASSIFICATION	// target must be specified
WITHOUT_CLASSIFICATION	// Should fail since a recursion will occur...
WITHOUT_CLASSIFICATION	// a rather convoluted equals() test
WITHOUT_CLASSIFICATION	// <path> swallows the basedir, it seems //assertTrue(!getProject().resolveFile("A").exists());
WITHOUT_CLASSIFICATION	// allow this as imported in targets are only tested when a target is run
WITHOUT_CLASSIFICATION	// deactivate this test as imports within targets are not allowed
WITHOUT_CLASSIFICATION	// Running on Windows or something, so skip it.
WITHOUT_CLASSIFICATION	// remove log file from testSpawn
WITHOUT_CLASSIFICATION	// this is guaranteed by FileUtils#createTempFile
WITHOUT_CLASSIFICATION	// let's be nice with the next generation of developers
WITHOUT_CLASSIFICATION	//executeTarget("setup"); //commented out for performance while target is empty
WITHOUT_CLASSIFICATION	// target // file // exptected string
WITHOUT_CLASSIFICATION	// END class ManifestClassPathTest
WITHOUT_CLASSIFICATION	//      assertTrue("return code is invalid: " + retCode, retCode!=0);
WITHOUT_CLASSIFICATION	// test a process that runs and failed
WITHOUT_CLASSIFICATION	// process should abort
WITHOUT_CLASSIFICATION	// I assume that starting this takes less than TIME_OUT/2 ms...
WITHOUT_CLASSIFICATION	// wait for TIME_OUT/2, there should be about TIME_OUT/2 ms remaining before timeout
WITHOUT_CLASSIFICATION	// now stop the watchdog.
WITHOUT_CLASSIFICATION	// wait for the thread to die, should be the end of the process
WITHOUT_CLASSIFICATION	// process should be dead and well finished
WITHOUT_CLASSIFICATION	// We have to compare the decompressed content instead:
WITHOUT_CLASSIFICATION	//no point in setting a message
WITHOUT_CLASSIFICATION	// this is guaranteed by FileUtils#createTempFile
WITHOUT_CLASSIFICATION	// make the spawned process run 4 seconds
WITHOUT_CLASSIFICATION	// this loop runs parallel to the build
WITHOUT_CLASSIFICATION	// security
WITHOUT_CLASSIFICATION	// time of the build in milli seconds
WITHOUT_CLASSIFICATION	// Nothing specified -> Fail
WITHOUT_CLASSIFICATION	// Only property specified -> Fail
WITHOUT_CLASSIFICATION	// Only file specified -> Fail
WITHOUT_CLASSIFICATION	// file does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	// resource doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	// resource does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	// class doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	// class does exist -> property 'test' == 'true'
WITHOUT_CLASSIFICATION	// All three specified but class missing -> null
WITHOUT_CLASSIFICATION	// Specified property-name is "" -> true
WITHOUT_CLASSIFICATION	// Specified file is "" -> invalid files do not exist
WITHOUT_CLASSIFICATION	// Specified file is "" actually a directory, so it should pass
WITHOUT_CLASSIFICATION	// Specified resource is "" -> can such a thing exist?
WITHOUT_CLASSIFICATION	/*     * returns non null IBM JDK 1.3 Linux     */
WITHOUT_CLASSIFICATION	// Specified dir is "" -> this is the current directory and should // always exist
WITHOUT_CLASSIFICATION	// Specified dir is "../taskdefs" -> should exist since it's the // location of the buildfile used...
WITHOUT_CLASSIFICATION	// Specified dir is "../this_dir_should_never_exist" -> null
WITHOUT_CLASSIFICATION	// Invalid type specified
WITHOUT_CLASSIFICATION	// Core class that exists in system classpath is ignored
WITHOUT_CLASSIFICATION	// Core class that exists in system classpath is not ignored with ignoresystemclass="false"
WITHOUT_CLASSIFICATION	// Core class that exists in system classpath is not ignored with default ignoresystemclasses value
WITHOUT_CLASSIFICATION	// Class is found in specified classpath
WITHOUT_CLASSIFICATION	// File is not found in specified filepath
WITHOUT_CLASSIFICATION	// test when file begins with basedir twice
WITHOUT_CLASSIFICATION	// test for searching parents
WITHOUT_CLASSIFICATION	// test for not searching parents
WITHOUT_CLASSIFICATION	// Output the default excludes
WITHOUT_CLASSIFICATION	// adding something to the excludes'
WITHOUT_CLASSIFICATION	// removing something from the defaults
WITHOUT_CLASSIFICATION	//CVS missing
WITHOUT_CLASSIFICATION	// target must be specified
WITHOUT_CLASSIFICATION	// We try to delete the directory created in CopydirTest
WITHOUT_CLASSIFICATION	// check that both arrays have the same size
WITHOUT_CLASSIFICATION	//instance variable to allow cleanup
WITHOUT_CLASSIFICATION	//ignored
WITHOUT_CLASSIFICATION	// What's the working directory?  If local, then its the // folder of the input file.  Otherwise, its the "current" dir..
WITHOUT_CLASSIFICATION	// Set a property on the project to make sure that loading // a property with the same name from an xml file will // *not* change it.
WITHOUT_CLASSIFICATION	//printProperties(p.getProperties());
WITHOUT_CLASSIFICATION	// Every key identified by the Properties must have been loaded.
WITHOUT_CLASSIFICATION	// The property is the name of a file.  We are testing // a location attribute, so we need to resolve the given // file name in the provided folder.
WITHOUT_CLASSIFICATION	// Substitute .xml with .properties
WITHOUT_CLASSIFICATION	// basedir of subant/subant-test1/subant.xml is .. // therefore we expect here the subant/subant-test1 subdirectory
WITHOUT_CLASSIFICATION	// Output an empty String
WITHOUT_CLASSIFICATION	// Output 'OUTPUT OF ECHO'
WITHOUT_CLASSIFICATION	/*          * @param message         */
WITHOUT_CLASSIFICATION	// make sure that the parsing does not break
WITHOUT_CLASSIFICATION	// where the name contains <>
WITHOUT_CLASSIFICATION	// where only an address is supplied
WITHOUT_CLASSIFICATION	// Tests property element, using XML schema properties as an example.
WITHOUT_CLASSIFICATION	// should print "panic: Cannot find importVocab file 'JavaTokenTypes.txt'" // since it needs to run java.g first before java.tree.g
WITHOUT_CLASSIFICATION	// execute
WITHOUT_CLASSIFICATION	// override some of the code so we can test the handling of the // return code only.
WITHOUT_CLASSIFICATION	// ask ant to update the properties...
WITHOUT_CLASSIFICATION	// to override
WITHOUT_CLASSIFICATION	// just to be sure
WITHOUT_CLASSIFICATION	// just to be sure
WITHOUT_CLASSIFICATION	// read in the file
WITHOUT_CLASSIFICATION	// found the property we set - it's good.
WITHOUT_CLASSIFICATION	// else
WITHOUT_CLASSIFICATION	// else
WITHOUT_CLASSIFICATION	// ReplaceRegExpTest
WITHOUT_CLASSIFICATION	// test for 10 consecutives transform
WITHOUT_CLASSIFICATION	//java keywords are not special
WITHOUT_CLASSIFICATION	//underscores go in front of invalid start chars
WITHOUT_CLASSIFICATION	//underscores at the front get an underscore too
WITHOUT_CLASSIFICATION	//non java char at start => underscore then the the _hex value
WITHOUT_CLASSIFICATION	//and paths are stripped
WITHOUT_CLASSIFICATION	/** * Tests the {@link XSLTProcess} task. * XXX merge with {@link StyleTest}? * @since Ant 1.5 */
WITHOUT_CLASSIFICATION	// byte - byte compare
WITHOUT_CLASSIFICATION	// avoid endless loop
WITHOUT_CLASSIFICATION	// those would fail because of the way BuildFileTest captures output
WITHOUT_CLASSIFICATION	//To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// father and child pattern test
WITHOUT_CLASSIFICATION	// redo the test, but the 2 include patterns are inverted
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// On junit3 this is a FAILURE, on junit4 this is an ERROR
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// mandatory constructor
WITHOUT_CLASSIFICATION	// check that a suite generates no errors
WITHOUT_CLASSIFICATION	// check that having no suite generates no errors
WITHOUT_CLASSIFICATION	// check that something which is not a testcase generates no errors // at first even though this is incorrect.
WITHOUT_CLASSIFICATION	// check that an invalid suite generates an error.
WITHOUT_CLASSIFICATION	// JUnit3 test //assertEquals(runner.getFormatter().getError(), JUnitTestRunner.FAILURES, runner.getRetCode());
WITHOUT_CLASSIFICATION	// On junit3 this is a FAILURE, on junit4 this is an ERROR
WITHOUT_CLASSIFICATION	/*          * @param event the build event that is being logged.         */
WITHOUT_CLASSIFICATION	// check that an exception in the constructor is noticed
WITHOUT_CLASSIFICATION	// the test runner that wrap the dummy formatter that interests us
WITHOUT_CLASSIFICATION	// use the classloader that loaded this class otherwise // it will not be able to run inner classes if this test // is ran in non-forked mode.
WITHOUT_CLASSIFICATION	// dummy formatter just to catch the error
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// byte - byte compare
WITHOUT_CLASSIFICATION	/*          * @param event the build event that is being logged.         */
WITHOUT_CLASSIFICATION	// get the fileset and its basedir
WITHOUT_CLASSIFICATION	// get the fileset and its basedir
WITHOUT_CLASSIFICATION	// get the fileset and its basedir
WITHOUT_CLASSIFICATION	// Set up a SOSGet task
WITHOUT_CLASSIFICATION	// Set up a SOSGet task
WITHOUT_CLASSIFICATION	// Set up a SOSCheckin task
WITHOUT_CLASSIFICATION	// Set up a SOSCheckin task
WITHOUT_CLASSIFICATION	// Set up a SOSCheckout task
WITHOUT_CLASSIFICATION	// Set up a sosCheckout task
WITHOUT_CLASSIFICATION	// Set up a sosCheckout task
WITHOUT_CLASSIFICATION	// We have extra elements
WITHOUT_CLASSIFICATION	// give it some time to display
WITHOUT_CLASSIFICATION	// Set up a VSSGet task
WITHOUT_CLASSIFICATION	// Set up a VSSLabel task
WITHOUT_CLASSIFICATION	// Set up a VSSLabel task
WITHOUT_CLASSIFICATION	// Set up a VSSHistory task
WITHOUT_CLASSIFICATION	// Set up a VSSHistory task
WITHOUT_CLASSIFICATION	// Set up a Timestamp
WITHOUT_CLASSIFICATION	// Get today's date
WITHOUT_CLASSIFICATION	// Set up a VSSCheckIn task
WITHOUT_CLASSIFICATION	// Set up a VSSCheckOut task
WITHOUT_CLASSIFICATION	// Set up a VSSAdd task
WITHOUT_CLASSIFICATION	// Set up a VSSCp task
WITHOUT_CLASSIFICATION	// Set up a VSSCreate task
WITHOUT_CLASSIFICATION	// Count the number of empty strings
WITHOUT_CLASSIFICATION	// ran Ant tests with -ea and this would fail spuriously
WITHOUT_CLASSIFICATION	// now to the expected failures
WITHOUT_CLASSIFICATION	// catalog <--> catalog
WITHOUT_CLASSIFICATION	// catalog1 --> catalog2 --> catalog3 --> catalog1
WITHOUT_CLASSIFICATION	// catalog2 --> catalog1 --> catalog
WITHOUT_CLASSIFICATION	//check that dir and src are incompatible
WITHOUT_CLASSIFICATION	//check that fullpath and prefix are incompatible
WITHOUT_CLASSIFICATION	// check that reference zipfilesets cannot have specific attributes
WITHOUT_CLASSIFICATION	// check that a reference zipfileset gets the same attributes as the original
WITHOUT_CLASSIFICATION	//check that dir and src are incompatible
WITHOUT_CLASSIFICATION	// // These shenanigans are necessary b/c Norm Walsh's resolver // has a different idea of how file URLs are created on windoze // ie file://c:/foo instead of file:///c:/foo //
WITHOUT_CLASSIFICATION	//check that dir and src are incompatible
WITHOUT_CLASSIFICATION	//check that fullpath and prefix are incompatible
WITHOUT_CLASSIFICATION	// try a netware-volume length path, see how it is handled
WITHOUT_CLASSIFICATION	// actually tests constructor as well as setPath
WITHOUT_CLASSIFICATION	// check that reference tarfilesets cannot have specific attributes
WITHOUT_CLASSIFICATION	// try a multi-part netware-volume length path w/forward slash, see how it is handled
WITHOUT_CLASSIFICATION	// try a multi-part netware-volume length path, see how it is handled
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// try a netware-volume length path w/forward slash, see how it is handled
WITHOUT_CLASSIFICATION	// try a multi-part netware-volume length path with UNIX // separator (this testcase if from an actual bug that was // found, in AvailableTest, which uses PathTokenizer)
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 --> dummy1
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 (with Path "/a")
WITHOUT_CLASSIFICATION	// This class acts as a custom Ant task also // and uses these variables/methods in that mode
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 // (which has the Project's basedir as root).
WITHOUT_CLASSIFICATION	// Grant extra permissions to read and write the user.* properties and read to the // java.home property
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 // (which holds patterns "include" and "exclude")
WITHOUT_CLASSIFICATION	// check that a reference tarfileset gets the same attributes as the original
WITHOUT_CLASSIFICATION	// was expected
WITHOUT_CLASSIFICATION	// Revoke permission to write user.home (granted above via user.*), still able to read though. // and the default granted permission to read os.name.
WITHOUT_CLASSIFICATION	// Was expected, test passes
WITHOUT_CLASSIFICATION	// Was expected, test passes
WITHOUT_CLASSIFICATION	// Was expected, test passes
WITHOUT_CLASSIFICATION	/*         * After changing CommandlineJava to search for the java         * executable, I don't know, how to tests the value returned         * here without using the same logic as applied in the class         * itself.         *         * assertTrue("no classpath", "java", s[0]);         */
WITHOUT_CLASSIFICATION	//        assertEquals("with classpath", "java", s[0]);
WITHOUT_CLASSIFICATION	// only the second iteration would pass because of PR 27218
WITHOUT_CLASSIFICATION	//mix element types
WITHOUT_CLASSIFICATION	//implicit composite
WITHOUT_CLASSIFICATION	// a --> b --> c --- def //               \-- ghi
WITHOUT_CLASSIFICATION	// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that refers to the entity into a text // file, entity is listed in the XMLCatalog pointing to a // different file.  Stuff result into property: val2 //
WITHOUT_CLASSIFICATION	// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that refers to the entity into a text // file, stuff result into property: val1 //
WITHOUT_CLASSIFICATION	// this actually relies on the first manifest being found on // the classpath (probably rt.jar's) being valid
WITHOUT_CLASSIFICATION	// // Ensure that an external entity resolves as expected with NO // XMLCatalog involvement: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // Stuff result into the property: val3 //
WITHOUT_CLASSIFICATION	// // Ensure that an external entity resolves as expected Using an // XMLCatalog: // // Transform an XML file that contains a reference to a _second_ XML file // via the document() function.  The _second_ XML file refers to an entity. // The entity is listed in the XMLCatalog pointing to a different file. // Stuff result into the property: val4 //
WITHOUT_CLASSIFICATION	// The following will be used as types and tasks
WITHOUT_CLASSIFICATION	// share the setup for testing the depend task
WITHOUT_CLASSIFICATION	// Test for path relative to project base directory
WITHOUT_CLASSIFICATION	//class-MockCache
WITHOUT_CLASSIFICATION	//  =====================  attributes  =====================
WITHOUT_CLASSIFICATION	//class-MockCache
WITHOUT_CLASSIFICATION	//  =====================  constructors, factories  =====================
WITHOUT_CLASSIFICATION	//  =====================  JUnit stuff  =====================
WITHOUT_CLASSIFICATION	// project reference is set in super.setUp()
WITHOUT_CLASSIFICATION	// init the testclasses path object
WITHOUT_CLASSIFICATION	/* * /    // for test only - ignore tests where we arent work at the moment    public static junit.framework.Test suite() {        junit.framework.TestSuite suite= new junit.framework.TestSuite();        suite.addTest(new ModifiedSelectorTest("testValidateWrongCache"));        return suite;    }    /* */
WITHOUT_CLASSIFICATION	// =======  testcases for the attributes and nested elements of the selector  =====
WITHOUT_CLASSIFICATION	// do the actions
WITHOUT_CLASSIFICATION	// do the checks - the buildfile stores the fileset as property
WITHOUT_CLASSIFICATION	// must be empty according to the Mock* implementations
WITHOUT_CLASSIFICATION	// don't catch the JUnit exceptions
WITHOUT_CLASSIFICATION	// no check for 1<=kind<=3 - only internal use therefore check it // while development
WITHOUT_CLASSIFICATION	// readable form of parameter kind
WITHOUT_CLASSIFICATION	// setup the "Ant project"
WITHOUT_CLASSIFICATION	// setup the selector
WITHOUT_CLASSIFICATION	// get the cache, so we can check our things
WITHOUT_CLASSIFICATION	// the test
WITHOUT_CLASSIFICATION	// MockCache doesnt create a file - therefore no cleanup needed
WITHOUT_CLASSIFICATION	// add the test classes to its classpath
WITHOUT_CLASSIFICATION	// let the selector do its checks
WITHOUT_CLASSIFICATION	// extract the algorithm name (and config) from the selectors output
WITHOUT_CLASSIFICATION	// '<' and '>' are only used if the algorithm has properties
WITHOUT_CLASSIFICATION	// return the clean value
WITHOUT_CLASSIFICATION	// initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	// initialize test environment (called "bed")
WITHOUT_CLASSIFICATION	// Configure the selector
WITHOUT_CLASSIFICATION	// Configure the selector
WITHOUT_CLASSIFICATION	// does the selection
WITHOUT_CLASSIFICATION	// evaluate correctness
WITHOUT_CLASSIFICATION	// evaluate correctness
WITHOUT_CLASSIFICATION	// same logic as on algorithm, no testcases created
WITHOUT_CLASSIFICATION	// same logic as on algorithm, no testcases created
WITHOUT_CLASSIFICATION	// given cache must be empty
WITHOUT_CLASSIFICATION	// cache must return a stored value
WITHOUT_CLASSIFICATION	// test the iterator
WITHOUT_CLASSIFICATION	// clear the cache
WITHOUT_CLASSIFICATION	// must not be a directory
WITHOUT_CLASSIFICATION	// get the Hashvalues
WITHOUT_CLASSIFICATION	// Assert !=null and equality
WITHOUT_CLASSIFICATION	//if-isFile //for
WITHOUT_CLASSIFICATION	// ==============  testcases for the comparator implementations  ==============
WITHOUT_CLASSIFICATION	//not yet supported see note in selector
WITHOUT_CLASSIFICATION	//new File("src/etc/testcases/types/resources/selectors/cache.properties").delete();
WITHOUT_CLASSIFICATION	// really "2"
WITHOUT_CLASSIFICATION	// Configure the selector - only defaults are used
WITHOUT_CLASSIFICATION	//                     + "  <emptyElement></emptyElement>"
WITHOUT_CLASSIFICATION	/* ============ ResourceFactory interface ====================== */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	//class-BFT
WITHOUT_CLASSIFICATION	// do the actions
WITHOUT_CLASSIFICATION	// don't catch the JUnit exceptions
WITHOUT_CLASSIFICATION	// // *****  First Run  ***** // the first call should get all files, because nothing is in // the cache //
WITHOUT_CLASSIFICATION	// // *****  Second Run  ***** // the second call should get no files, because no content // has changed //
WITHOUT_CLASSIFICATION	// // *****  make some files dirty  ***** //
WITHOUT_CLASSIFICATION	// these files are made dirty --> 3+4 with different content
WITHOUT_CLASSIFICATION	// AccessObject to the test-Ant-environment
WITHOUT_CLASSIFICATION	// give some values (via property file) to that environment
WITHOUT_CLASSIFICATION	// call the target for making the files dirty
WITHOUT_CLASSIFICATION	// // *****  Third Run  ***** // third call should get only those files, which CONTENT changed // (no timestamp changes required!)
WITHOUT_CLASSIFICATION	// // *****  Check the result  ***** //
WITHOUT_CLASSIFICATION	// Mark all files which should be selected as (T)rue and all others // as (F)alse. Directories are always selected so they always are // (T)rue.
WITHOUT_CLASSIFICATION	// f2name shouldn't be selected: only timestamp has changed!
WITHOUT_CLASSIFICATION	// info text // list of files // expected result // result
WITHOUT_CLASSIFICATION	// cleanup the environment
WITHOUT_CLASSIFICATION	// cleanup the environment
WITHOUT_CLASSIFICATION	// RuleBasedCollator not yet supported - see Selector:375 note
WITHOUT_CLASSIFICATION	//s.addParam(createParam("algorithm.provider","---")); // i don't know any valid
WITHOUT_CLASSIFICATION	// first and second run
WITHOUT_CLASSIFICATION	// make dirty
WITHOUT_CLASSIFICATION	// third run
WITHOUT_CLASSIFICATION	// the directories to check
WITHOUT_CLASSIFICATION	// do the checks
WITHOUT_CLASSIFICATION	//class-MockProject
WITHOUT_CLASSIFICATION	//class-ModifiedSelectorTest
WITHOUT_CLASSIFICATION	// First read in zero bytes
WITHOUT_CLASSIFICATION	// Now read in the string
WITHOUT_CLASSIFICATION	// Make sure that the counts are the same
WITHOUT_CLASSIFICATION	// LineOrientedOutputStreamTest
WITHOUT_CLASSIFICATION	// make sure that elapsed time in set via date works
WITHOUT_CLASSIFICATION	// make sure that elapsed time in ms works
WITHOUT_CLASSIFICATION	// should be new moon
WITHOUT_CLASSIFICATION	// Try a silly case
WITHOUT_CLASSIFICATION	// and a little longer
WITHOUT_CLASSIFICATION	/*             * throw in drive letters             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	/*             * Start with simple absolute file names.             */
WITHOUT_CLASSIFICATION	/*             * Start with simple absolute file names.             */
WITHOUT_CLASSIFICATION	/*         * Now test some relative file name magic.         */
WITHOUT_CLASSIFICATION	/*         * Now test some relative file name magic.         */
WITHOUT_CLASSIFICATION	// implies lastModified == 0
WITHOUT_CLASSIFICATION	/* ============ FileNameMapper interface ======================= */
WITHOUT_CLASSIFICATION	// Windows adds the drive letter in uppercase, unless you run Cygwin
WITHOUT_CLASSIFICATION	/*         * Sleep for some time to make sure a touched file would get a         * more recent timestamp according to the file system's         * granularity (should be > 2s to account for Windows FAT).         */
WITHOUT_CLASSIFICATION	// number of milliseconds in a day
WITHOUT_CLASSIFICATION	// in a previous version, the date of the file was set to 123456 // milliseconds since 01.01.1970 // it did not work on a computer running JDK 1.4.1_02 + Windows 2000
WITHOUT_CLASSIFICATION	/*         * I would love to compare this with 123456, but depending on         * the filesystems granularity it can take an arbitrary value.         *         * Just assert the time has changed.         */
WITHOUT_CLASSIFICATION	/*             * throw in NetWare volume names             */
WITHOUT_CLASSIFICATION	/*             * throw in NetWare volume names             */
WITHOUT_CLASSIFICATION	/*             * drive letters must be considered just normal filenames.             */
WITHOUT_CLASSIFICATION	// Passed test 
WITHOUT_CLASSIFICATION	// Expected exception caught
WITHOUT_CLASSIFICATION	// Expected exception caught
WITHOUT_CLASSIFICATION	// null parent dir
WITHOUT_CLASSIFICATION	//preserve case on Cygwin when using 1.4 toURI:
WITHOUT_CLASSIFICATION	// OK, Java 1.3.
WITHOUT_CLASSIFICATION	//get a time
WITHOUT_CLASSIFICATION	//add some time. We assume no OS has a granularity this bad
WITHOUT_CLASSIFICATION	/*        assertTrue("same timestamp is up to date",                fu.isUpToDate(firstTime, firstTime));                */
WITHOUT_CLASSIFICATION	//check that older is up to date with a newer dest
WITHOUT_CLASSIFICATION	//check that older is up to date with a newer dest
WITHOUT_CLASSIFICATION	// This just tests that the function does not blow up
WITHOUT_CLASSIFICATION	// java.home is bogus
WITHOUT_CLASSIFICATION	// could still be OS/2
WITHOUT_CLASSIFICATION	// 27224 = magic (a random port which is unlikely to be in use)
WITHOUT_CLASSIFICATION	// order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	// state engine: false=envelope, true=message
WITHOUT_CLASSIFICATION	// make sure there are no issues concerning line separator interpretation // a line separator for regex (perl) is always a unix line (ie \n)
WITHOUT_CLASSIFICATION	// sb.append( response + "\r\n" );
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// wait for connection
WITHOUT_CLASSIFICATION	//throw new IllegalStateException("Command unrecognized: " //    + response);
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// while
WITHOUT_CLASSIFICATION	// CRC manually calculated, sorry // CRC // mode // link length // uid, gid
WITHOUT_CLASSIFICATION	// CRC manually calculated, sorry // CRC // mode // link length // uid, gid
WITHOUT_CLASSIFICATION	// CRC // mode // link length // uid, gid
WITHOUT_CLASSIFICATION	// CRC // mode // link length // uid, gid
WITHOUT_CLASSIFICATION	// CRC // mode // link // uid, gid
WITHOUT_CLASSIFICATION	// bad CRC // mode // link // uid, gid
WITHOUT_CLASSIFICATION	//if we got here, all was well
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	// Filter out messages based on priority
WITHOUT_CLASSIFICATION	// Print out the name of the task if we're in one
WITHOUT_CLASSIFICATION	// shouldn't be possible
WITHOUT_CLASSIFICATION	// Set up PRIMITIVE_TYPE_MAP
WITHOUT_CLASSIFICATION	// check of add[Configured](Class) pattern
WITHOUT_CLASSIFICATION	// not really user settable properties on tasks/project components
WITHOUT_CLASSIFICATION	// hide addTask for TaskContainers
WITHOUT_CLASSIFICATION	// use wrappers for primitive classes, e.g. int and // Integer are treated identically
WITHOUT_CLASSIFICATION	// Check if a create of this property is already present // add takes preference over create for CB purposes
WITHOUT_CLASSIFICATION	/*                         *  Ignore this method as there is an addConfigured                         *  form of this method that has a higher                         *  priority                         */
WITHOUT_CLASSIFICATION	// If a helper cannot be found, or if the helper is for another // classloader, create a new IH
WITHOUT_CLASSIFICATION	// Ignore attribute from unknown uri's
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// Element doesn't handle text content
WITHOUT_CLASSIFICATION	// Not whitespace - fail
WITHOUT_CLASSIFICATION	// Only whitespace - ignore
WITHOUT_CLASSIFICATION	// Class doesn't have a String constructor but a decent factory method
WITHOUT_CLASSIFICATION	// char and Character get special treatment - take the first character
WITHOUT_CLASSIFICATION	// simplest case - setAttribute expects String
WITHOUT_CLASSIFICATION	// First try with Project.
WITHOUT_CLASSIFICATION	// EnumeratedAttributes have their own helper class
WITHOUT_CLASSIFICATION	// resolve relative paths through Project
WITHOUT_CLASSIFICATION	/** Version to use for addXXX and addConfiguredXXX */
WITHOUT_CLASSIFICATION	// Well, no matching constructor.
WITHOUT_CLASSIFICATION	// OK, try without.
WITHOUT_CLASSIFICATION	// the method called to add/create the nested element
WITHOUT_CLASSIFICATION	// DO NOTHING
WITHOUT_CLASSIFICATION	// ADD or ADD_CONFIGURED
WITHOUT_CLASSIFICATION	// the method called to set the attribute
WITHOUT_CLASSIFICATION	// add configured replaces the add method
WITHOUT_CLASSIFICATION	// maintain a sorted list of targets
WITHOUT_CLASSIFICATION	// worst case. look for a public String constructor and use it // also supports new Whatever(Project, String) as for Path or Reference // This is used (deliberately) for all primitives/wrappers other than // char and boolean
WITHOUT_CLASSIFICATION	// Already present
WITHOUT_CLASSIFICATION	// higher derived
WITHOUT_CLASSIFICATION	// print the stacktrace in the build file it is always useful... // better have too much info than not enough.
WITHOUT_CLASSIFICATION	// specify output in UTF8 otherwise accented characters will blow // up everything
WITHOUT_CLASSIFICATION	/* For debugging purposes uncomment:        org.w3c.dom.Comment s = doc.createComment("stack=" + threadStack);        buildElement.element.appendChild(s);         */
WITHOUT_CLASSIFICATION	// -------------------------------------------------- BuildLogger interface
WITHOUT_CLASSIFICATION	// Shouldn't happen
WITHOUT_CLASSIFICATION	// LF is always end of line (i.e. CRLF or single LF)
WITHOUT_CLASSIFICATION	// CR without LF - send buffer then add char
WITHOUT_CLASSIFICATION	// add into buffer
WITHOUT_CLASSIFICATION	// either end of buffer or a line separator char
WITHOUT_CLASSIFICATION	// check adapter
WITHOUT_CLASSIFICATION	//can throw the same exception, if there is no this(Project) ctor.
WITHOUT_CLASSIFICATION	//now we instantiate
WITHOUT_CLASSIFICATION	//set up project references.
WITHOUT_CLASSIFICATION	/** Our current message output status. Follows Project.MSG_XXX. */
WITHOUT_CLASSIFICATION	/* null */
WITHOUT_CLASSIFICATION	// expect the worst
WITHOUT_CLASSIFICATION	//this is the list of lu
WITHOUT_CLASSIFICATION	// cycle through given args
WITHOUT_CLASSIFICATION	// set the flag to display the targets and quit
WITHOUT_CLASSIFICATION	// eat up next arg if present, default to build.xml
WITHOUT_CLASSIFICATION	// we don't have any more args to recognize!
WITHOUT_CLASSIFICATION	// if it's no other arg, it may be the target
WITHOUT_CLASSIFICATION	// if buildFile was not specified on the command line,
WITHOUT_CLASSIFICATION	// but -find then search for it
WITHOUT_CLASSIFICATION	// make sure buildfile exists
WITHOUT_CLASSIFICATION	// make sure it's not a directory (this falls into the ultra // paranoid lets check everything category
WITHOUT_CLASSIFICATION	// Load the property files specified by -propertyfile
WITHOUT_CLASSIFICATION	// ensure that -D properties take precedence
WITHOUT_CLASSIFICATION	// check if the target file exists in the current directory
WITHOUT_CLASSIFICATION	// change to parent directory
WITHOUT_CLASSIFICATION	// refresh our file handle
WITHOUT_CLASSIFICATION	// use a system manager that prevents from System.exit()
WITHOUT_CLASSIFICATION	//SecurityManager can not be installed here for backwards //compatibility reasons (PD). Needs to be loaded prior to //ant class if we are going to implement it. //System.setSecurityManager(new NoExitSecurityManager());
WITHOUT_CLASSIFICATION	// set the thread priorities
WITHOUT_CLASSIFICATION	//we cannot set the priority here.
WITHOUT_CLASSIFICATION	// set user-define properties
WITHOUT_CLASSIFICATION	//proxy setup if enabled
WITHOUT_CLASSIFICATION	// make sure that we have a target to execute
WITHOUT_CLASSIFICATION	// Add the default listener
WITHOUT_CLASSIFICATION	// find the target with the longest name
WITHOUT_CLASSIFICATION	// split the targets in top-level and sub-targets depending // on the presence of a description
WITHOUT_CLASSIFICATION	// shouldn't need to check but...
WITHOUT_CLASSIFICATION	// now, start printing the targets and their descriptions
WITHOUT_CLASSIFICATION	// got a bit annoyed that I couldn't find a pad function
WITHOUT_CLASSIFICATION	/*<String,String>*/
WITHOUT_CLASSIFICATION	//At least one constructor is guaranteed to be there, but check anyway.
WITHOUT_CLASSIFICATION	// is the zip file in the cache
WITHOUT_CLASSIFICATION	// store the token just read for next time
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// add the types of the parent project
WITHOUT_CLASSIFICATION	// ignore path elements which are not valid relative to the // project
WITHOUT_CLASSIFICATION	// Expecting an exception to be thrown by this call: // IllegalArgumentException: wrong number of Arguments
WITHOUT_CLASSIFICATION	// we need to search the components of the path to see if we can // find the class we want.
WITHOUT_CLASSIFICATION	// default to the global setting and then see // if this class belongs to a package which has been // designated to use a specific loader first // (this one or the parent one)
WITHOUT_CLASSIFICATION	// we need to search the components of the path to see if // we can find the class we want.
WITHOUT_CLASSIFICATION	// try and load from this loader if the parent either didn't find // it or wasn't consulted.
WITHOUT_CLASSIFICATION	// this loader was first but it didn't find it - try the parent
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	// Delegate to the parent:
WITHOUT_CLASSIFICATION	// Note: could cause overlaps in case ClassLoader.this.parent has matches.
WITHOUT_CLASSIFICATION	// ClassLoader.this.parent is already delegated to from // ClassLoader.getResources, no need:
WITHOUT_CLASSIFICATION	// Normal case.
WITHOUT_CLASSIFICATION	// Inverted.
WITHOUT_CLASSIFICATION	// already defined
WITHOUT_CLASSIFICATION	// define the package now
WITHOUT_CLASSIFICATION	// ioe.printStackTrace();
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// {tasks, types}
WITHOUT_CLASSIFICATION	// add the parsed namespaces of the parent project
WITHOUT_CLASSIFICATION	// we need to search the components of the path to see if // we can find the class we want.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// don't have to check for public, since // getConstructor finds public constructors only.
WITHOUT_CLASSIFICATION	// set default value, can be changed by the user
WITHOUT_CLASSIFICATION	//too bad
WITHOUT_CLASSIFICATION	//must have same validity; then if they are valid they must also be the same:
WITHOUT_CLASSIFICATION	// namespace that does not contain antlib
WITHOUT_CLASSIFICATION	// Already processed
WITHOUT_CLASSIFICATION	//there to stop error messages being "null"
WITHOUT_CLASSIFICATION	//if this is left out, bad things happen. like all build files break //on the first element encountered.
WITHOUT_CLASSIFICATION	// a fishing expedition :- ignore errors if antlib not present
WITHOUT_CLASSIFICATION	//class of problem
WITHOUT_CLASSIFICATION	//running under an IDE that doesn't set ANT_HOME
WITHOUT_CLASSIFICATION	//look up the name
WITHOUT_CLASSIFICATION	//we are defined, so it is an instantiation problem
WITHOUT_CLASSIFICATION	//start with instantiating the class.
WITHOUT_CLASSIFICATION	//here we successfully loaded the class or failed.
WITHOUT_CLASSIFICATION	//success: proceed with more steps
WITHOUT_CLASSIFICATION	//hey, there is nothing wrong with us
WITHOUT_CLASSIFICATION	/*<Thread,Task>*/
WITHOUT_CLASSIFICATION	/*<ThreadGroup,Task>*/
WITHOUT_CLASSIFICATION	// If the listeners already has this listener, do nothing
WITHOUT_CLASSIFICATION	// we need to build the hashtable dynamically
WITHOUT_CLASSIFICATION	// sanity check
WITHOUT_CLASSIFICATION	//try the current classloader
WITHOUT_CLASSIFICATION	// throw further
WITHOUT_CLASSIFICATION	// only the first build exception is reported
WITHOUT_CLASSIFICATION	// Make sure we exist
WITHOUT_CLASSIFICATION	// Currently visiting this node, so have a cycle
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire
WITHOUT_CLASSIFICATION	// sanity check ourselves, if we've been asked to build nothing // then we should complain
WITHOUT_CLASSIFICATION	// Sort and run the dependency tree. // Sorting checks if all the targets (and dependencies) // exist, and if there is any cycle in the dependency // graph.
WITHOUT_CLASSIFICATION	// We first run a DFS based sort using each root as a starting node. // This creates the minimum sequence of Targets to the root node(s). // We then do a sort on any remaining unVISITED targets. // This is unnecessary for doing our build, but it catches // circular dependencies or missing Targets on the entire // dependency tree, not just on the Targets that depend on the // build Target.
WITHOUT_CLASSIFICATION	// no warning, this is not changing anything
WITHOUT_CLASSIFICATION	// Check for old id behaviour
WITHOUT_CLASSIFICATION	// Inform IH to clear the cache
WITHOUT_CLASSIFICATION	// register this as the current task on the current thread.
WITHOUT_CLASSIFICATION	// Make sure that
WITHOUT_CLASSIFICATION	// ignore this if the object does not have // a set project method or the method // is private/protected.
WITHOUT_CLASSIFICATION	//override facility for subclasses to put custom hashtables in
WITHOUT_CLASSIFICATION	// --------------------  Hook management  --------------------
WITHOUT_CLASSIFICATION	// --------------------  Methods to override  --------------------
WITHOUT_CLASSIFICATION	// If next has handled the property
WITHOUT_CLASSIFICATION	// try to get it from the project or keys // Backward compatibility
WITHOUT_CLASSIFICATION	// -------------------- Default implementation  -------------------- // Methods used to support the default behavior and provide backward // compatibility. Some will be deprecated, you should avoid calling them.
WITHOUT_CLASSIFICATION	// user (CLI) properties take precedence
WITHOUT_CLASSIFICATION	// -------------------- Getting properties  --------------------
WITHOUT_CLASSIFICATION	// -------------------- Property parsing  -------------------- // Moved from ProjectHelper. You can override the static method - // this is used for backward compatibility (for code that calls // the parse method in ProjectHelper).
WITHOUT_CLASSIFICATION	//search for the next instance of $ from the 'prev' position
WITHOUT_CLASSIFICATION	//if we are at the end of the string, we tack on a $ //then move past it
WITHOUT_CLASSIFICATION	//peek ahead to see if the next char is a property or not //not a property: insert the char as a literal
WITHOUT_CLASSIFICATION	//backwards compatibility two $ map to one mode
WITHOUT_CLASSIFICATION	//new behaviour: $X maps to $X for all values of X!='$'
WITHOUT_CLASSIFICATION	//property found, extract its name or bail on a typo
WITHOUT_CLASSIFICATION	//no more $ signs found //if there is any tail to the file, append it
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	// The children are added to after this cloning
WITHOUT_CLASSIFICATION	// Make sure the dependency is not empty string
WITHOUT_CLASSIFICATION	// Make sure that depends attribute does not // end in a ,
WITHOUT_CLASSIFICATION	// A project helper may process multiple files. We'll keep track // of them - to avoid loops and to allow caching. The caching will // probably accelerate things like <antCall>. // The key is the absolute file, the value is a processed tree. // Since the tree is composed of UE and RC - it can be reused ! // protected Hashtable processedFiles=new Hashtable();
WITHOUT_CLASSIFICATION	//    public Hashtable getProcessedFiles() { //        return processedFiles; //    }
WITHOUT_CLASSIFICATION	// --------------------  Parse method  --------------------
WITHOUT_CLASSIFICATION	// Identify the class loader we will be using. Ant may be // in a webapp or embedded in a different app
WITHOUT_CLASSIFICATION	// First, try the system property
WITHOUT_CLASSIFICATION	// A JDK1.3 'service' ( like in JAXP ). That will plug a helper // automatically if in CLASSPATH, with the right META-INF/services.
WITHOUT_CLASSIFICATION	// This code is needed by EBCDIC and other strange systems. // It's a fix for bugs reported in xerces
WITHOUT_CLASSIFICATION	// try next method
WITHOUT_CLASSIFICATION	// -------------------- Static utils, used by most helpers ----------------
WITHOUT_CLASSIFICATION	// reflect these into the target
WITHOUT_CLASSIFICATION	// id attribute must be set externally
WITHOUT_CLASSIFICATION	// needed since project properties are not accessible
WITHOUT_CLASSIFICATION	/*<UnknownElement>*/
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	/*<String,String>*/
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// reflect these into the target
WITHOUT_CLASSIFICATION	// id attribute must be set externally
WITHOUT_CLASSIFICATION	// Attributes
WITHOUT_CLASSIFICATION	// configure attributes of the object and it's children. If it is // a task container, defer the configuration till the task container // attempts to use the task
WITHOUT_CLASSIFICATION	// plain impossible to get here, maybeConfigure should // have thrown an exception.
WITHOUT_CLASSIFICATION	// Finished executing the task, null it to allow // GC do its job // If this UE is used again, a new "realthing" will be made
WITHOUT_CLASSIFICATION	// Do the runtime
WITHOUT_CLASSIFICATION	// UnknownElement always has an associated target
WITHOUT_CLASSIFICATION	//return elementName;
WITHOUT_CLASSIFICATION	// Are the names the same ?
WITHOUT_CLASSIFICATION	// Are attributes the same ?
WITHOUT_CLASSIFICATION	// Are the sub elements the same ?
WITHOUT_CLASSIFICATION	// hidden constructor
WITHOUT_CLASSIFICATION	//create the file
WITHOUT_CLASSIFICATION	//do some writing to it
WITHOUT_CLASSIFICATION	//calendar stuff.
WITHOUT_CLASSIFICATION	//not included, do nothing
WITHOUT_CLASSIFICATION	// not included, to nothing
WITHOUT_CLASSIFICATION	/*<RuntimeConfigurable>*/
WITHOUT_CLASSIFICATION	/*<String>*/
WITHOUT_CLASSIFICATION	// Configure the object
WITHOUT_CLASSIFICATION	// Most likely an UnknownElement
WITHOUT_CLASSIFICATION	// Children (this is a shadow of UnknownElement#children)
WITHOUT_CLASSIFICATION	// poly type
WITHOUT_CLASSIFICATION	// Text
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// store the token just read for next time
WITHOUT_CLASSIFICATION	// a task container - anything could happen - just add the // child to the container
WITHOUT_CLASSIFICATION	// Is the text the same? //   Need to use equals on the string and not //   on the stringbuffer as equals on the string buffer //   does not compare the contents.
WITHOUT_CLASSIFICATION	// Assume that this is an not supported attribute type // thrown for example by a dymanic attribute task // Do nothing
WITHOUT_CLASSIFICATION	// on Windows and Unix, we can ignore delimiters and still have // enough information to tokenize correctly.
WITHOUT_CLASSIFICATION	// we are on a dos style system so this path could be a drive // spec. We look at the next token
WITHOUT_CLASSIFICATION	// we know we are on a DOS style platform and the next path // starts with a slash or backslash, so we know this is a // drive spec
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// ignore ";" and get the next token
WITHOUT_CLASSIFICATION	// this path could be a drive spec, so look at the next token
WITHOUT_CLASSIFICATION	// it indeed is a drive spec, get the next bit
WITHOUT_CLASSIFICATION	// implicit else: ignore the ':' since we have either a // UNIX or a relative path
WITHOUT_CLASSIFICATION	// Miscellaneous typical temporary files
WITHOUT_CLASSIFICATION	// CVS
WITHOUT_CLASSIFICATION	// SCCS
WITHOUT_CLASSIFICATION	// Visual SourceSafe
WITHOUT_CLASSIFICATION	// Subversion
WITHOUT_CLASSIFICATION	// set in/excludes to reasonable defaults if needed:
WITHOUT_CLASSIFICATION	// if no basedir and no includes, nothing to do:
WITHOUT_CLASSIFICATION	//skip abs. paths not under basedir, if set:
WITHOUT_CLASSIFICATION	//skip non-abs. paths if basedir == null:
WITHOUT_CLASSIFICATION	// we are going to scan everything anyway
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// will be caught and redirected to Ant's logging system
WITHOUT_CLASSIFICATION	// will be caught and redirected to Ant's logging system
WITHOUT_CLASSIFICATION	//removing base from path yields no change; path not child of base
WITHOUT_CLASSIFICATION	/* package-private */
WITHOUT_CLASSIFICATION	// do the "singleton" initialization
WITHOUT_CLASSIFICATION	// Add the explicit resource collections to the archive.
WITHOUT_CLASSIFICATION	// EOL was "\r\n"
WITHOUT_CLASSIFICATION	// don't have to check for interface, since then // taskClass would be abstract too.
WITHOUT_CLASSIFICATION	// ignore this if the class being used as a task does not have // a set location method.
WITHOUT_CLASSIFICATION	// ignore this if the class being used as a task does not have // a set project method.
WITHOUT_CLASSIFICATION	// put in the newroots map the include patterns without // wildcard tokens
WITHOUT_CLASSIFICATION	// only scan directories that can include matched files or // directories
WITHOUT_CLASSIFICATION	// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.
WITHOUT_CLASSIFICATION	// adapt currentelement to the case we've // actually found
WITHOUT_CLASSIFICATION	// I am the only one so I have to close the reader
WITHOUT_CLASSIFICATION	// I am the only one so I have to close the reader
WITHOUT_CLASSIFICATION	// get parameters
WITHOUT_CLASSIFICATION	// Calculate the EOL string per the current config
WITHOUT_CLASSIFICATION	// assume (eol == CrLf.LF || eol == CrLf.UNIX)
WITHOUT_CLASSIFICATION	// Add/Remove tabs
WITHOUT_CLASSIFICATION	// Add missing EOF character
WITHOUT_CLASSIFICATION	// Mask, block from being edited, all characters in constants.
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// EOL
WITHOUT_CLASSIFICATION	// EOL was "\n"
WITHOUT_CLASSIFICATION	// EOL was "\r\r\n"
WITHOUT_CLASSIFICATION	// EOL was "\r"
WITHOUT_CLASSIFICATION	// If source at EOF and lookAhead is ctrl-z, return EOF (NOT ctrl-z)
WITHOUT_CLASSIFICATION	// if source is EOF but last character was NOT ctrl-z, return ctrl-z
WITHOUT_CLASSIFICATION	// Return current look-ahead
WITHOUT_CLASSIFICATION	// EOL was "\r\r" - handle as two consecutive "\r" and // "\r"
WITHOUT_CLASSIFICATION	// Instance initializer: Executes just after the super() call in this // class's constructor.
WITHOUT_CLASSIFICATION	// Return copy so that the call must call setEof() to change the state // of fixCRLF
WITHOUT_CLASSIFICATION	// Return copy so that the call must call setEol() to change the state // of fixCRLF
WITHOUT_CLASSIFICATION	// Return copy so that the caller must call setTab() to change the state // of fixCRLF.
WITHOUT_CLASSIFICATION	// If I'm removing an EOF character, do so first so that the other // filters don't see that character.
WITHOUT_CLASSIFICATION	// Change all EOL characters to match the calculated EOL string. If // configured to do so, append a trailing EOL so that the file ends on // a EOL.
WITHOUT_CLASSIFICATION	// If filtering Java source, prevent changes to whitespace in // character and string literals.
WITHOUT_CLASSIFICATION	// Works like clone() but doesn't show up in the Javadocs
WITHOUT_CLASSIFICATION	// getConstants is a static method, no need to // pass in the object
WITHOUT_CLASSIFICATION	//this field will hold unnnn right after reading a non latin character //afterwards it will be truncated of one char every call to read
WITHOUT_CLASSIFICATION	//replace the last 0s by the chars contained in s
WITHOUT_CLASSIFICATION	// line started with comment
WITHOUT_CLASSIFICATION	// ----------------------------------------- //  Predefined tokenizers // -----------------------------------------
WITHOUT_CLASSIFICATION	// write everything up to the from
WITHOUT_CLASSIFICATION	// write the replacement to
WITHOUT_CLASSIFICATION	// search again
WITHOUT_CLASSIFICATION	// write the remaining characters
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// -------------------------------------------- // //      Tokenizer Classes (impls moved to oata.util) // // --------------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------------------- //  static utility methods - could be placed somewhere else // --------------------------------------------------------
WITHOUT_CLASSIFICATION	//Remove start and end quotes if field is a String
WITHOUT_CLASSIFICATION	// default buffer size
WITHOUT_CLASSIFICATION	/* Stateless */
WITHOUT_CLASSIFICATION	// singletons - since all state is in the context
WITHOUT_CLASSIFICATION	// we are in an imported file.
WITHOUT_CLASSIFICATION	// top level file
WITHOUT_CLASSIFICATION	// ?? OK ??
WITHOUT_CLASSIFICATION	// use default if not file or file not found
WITHOUT_CLASSIFICATION	// Set the location of the implicit target associated with the project tag
WITHOUT_CLASSIFICATION	// Ignore attributes from unknown uris
WITHOUT_CLASSIFICATION	// Ignore attributes from unknown uris
WITHOUT_CLASSIFICATION	// What's the difference between id and name ?
WITHOUT_CLASSIFICATION	// no further processing
WITHOUT_CLASSIFICATION	// set explicitly before starting ?
WITHOUT_CLASSIFICATION	// Default for baseDir is the location of the build file.
WITHOUT_CLASSIFICATION	// check whether the user has specified an absolute path
WITHOUT_CLASSIFICATION	// Check if this target is in the current build file
WITHOUT_CLASSIFICATION	// If the name has not already been defined define it
WITHOUT_CLASSIFICATION	// In an impored file (and not completely // ignoring the project tag)
WITHOUT_CLASSIFICATION	/* UnknownElement is used for tasks and data types - with               delayed eval */
WITHOUT_CLASSIFICATION	// Nested element
WITHOUT_CLASSIFICATION	// Task included in a target ( including the default one ).
WITHOUT_CLASSIFICATION	// container.addTask(task); // This is a nop in UE: task.init();
WITHOUT_CLASSIFICATION	// **   simple name specified   == path in list + name
WITHOUT_CLASSIFICATION	// if the suffix does not starts with a '.' and the // char preceding the suffix is a '.', we assume the user // wants to remove the '.' as well (see docs)
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// use default if not file or file not found
WITHOUT_CLASSIFICATION	// check whether the user has specified an absolute path
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Start handling SAX events
WITHOUT_CLASSIFICATION	// Let parent resume handling SAX events
WITHOUT_CLASSIFICATION	// implicit target must be first on dependency list
WITHOUT_CLASSIFICATION	// take care of dependencies
WITHOUT_CLASSIFICATION	// swallow here, will be thrown again in // UnknownElement.maybeConfigure if the problem persists.
WITHOUT_CLASSIFICATION	//XXX task.setTaskType(tag);
WITHOUT_CLASSIFICATION	// task can contain other tasks - no other nested elements possible
WITHOUT_CLASSIFICATION	// taskcontainer nested element can contain other tasks - no other // nested elements possible
WITHOUT_CLASSIFICATION	// Should not happen
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// initialize the above 3 arrays
WITHOUT_CLASSIFICATION	// #8031: first try Java 1.4.
WITHOUT_CLASSIFICATION	// Fine, Java 1.3 or earlier, do it by hand.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Bad URI, pass this on.
WITHOUT_CLASSIFICATION	// Unexpected target exception? Should not happen.
WITHOUT_CLASSIFICATION	// Reflection problems? Should not happen, debug.
WITHOUT_CLASSIFICATION	// Fallback method for Java 1.3 or earlier.
WITHOUT_CLASSIFICATION	// Ignore malformed exception
WITHOUT_CLASSIFICATION	// if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	// record the fact that it's escaped
WITHOUT_CLASSIFICATION	// we saw some non-ascii character
WITHOUT_CLASSIFICATION	// get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	// for each byte
WITHOUT_CLASSIFICATION	// for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	// firstly check if the tools jar is already in the classpath
WITHOUT_CLASSIFICATION	// just check whether this throws an exception
WITHOUT_CLASSIFICATION	// couldn't find compiler - try to find tools.jar // based on java.home setting
WITHOUT_CLASSIFICATION	// Found in java.home as given
WITHOUT_CLASSIFICATION	// add any jars in the directory
WITHOUT_CLASSIFICATION	// now update the class.path property
WITHOUT_CLASSIFICATION	// overlay specified properties file (if any), which overrides project // settings
WITHOUT_CLASSIFICATION	// ignore because properties file is not required
WITHOUT_CLASSIFICATION	// private static final int ATTR_NORMAL = 0; // private static final int ATTR_BRIGHT = 1;
WITHOUT_CLASSIFICATION	// private static final int ATTR_UNDERLINE = 3; // private static final int ATTR_BLINK = 5; // private static final int ATTR_REVERSE = 7; // private static final int ATTR_HIDDEN = 8;
WITHOUT_CLASSIFICATION	// private static final int FG_BLACK = 30;
WITHOUT_CLASSIFICATION	// private static final int FG_YELLOW = 33;
WITHOUT_CLASSIFICATION	// private static final int FG_WHITE = 37;
WITHOUT_CLASSIFICATION	//Ignore - we will use the defaults.
WITHOUT_CLASSIFICATION	//Ignore - We do not want this to stop the build.
WITHOUT_CLASSIFICATION	// Fall through
WITHOUT_CLASSIFICATION	// Whether or not an actual update is required - // we don't need to update if the original file doesn't exist
WITHOUT_CLASSIFICATION	// Use the logger config
WITHOUT_CLASSIFICATION	// Since task log category includes target, we don't really // need this message
WITHOUT_CLASSIFICATION	// Driver doesn't understand the URL
WITHOUT_CLASSIFICATION	// It's a task - append the target
WITHOUT_CLASSIFICATION	// finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	// Doesn't make sense for c-l. Use the logger config
WITHOUT_CLASSIFICATION	// Could not get the required information
WITHOUT_CLASSIFICATION	// Create a ZipFileSet for this file, and pass it up.
WITHOUT_CLASSIFICATION	// now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	// If no webxml file is specified, it's an error.
WITHOUT_CLASSIFICATION	// One cannot RMIC an interface for "classic" RMI (JRMP)
WITHOUT_CLASSIFICATION	// otherwise perform a timestamp comparison - at least
WITHOUT_CLASSIFICATION	// don't know how to handle that - a IDL file doesn't // have a corresponding Java source for example.
WITHOUT_CLASSIFICATION	/*             * Move the generated source file to the base directory.  If             * base directory and sourcebase are the same, the generated             * sources are already in place.             */
WITHOUT_CLASSIFICATION	// no source file generated, nothing to move
WITHOUT_CLASSIFICATION	// not the requested type
WITHOUT_CLASSIFICATION	// **   full-pathname specified == path in list // **   simple name specified   == path in list
WITHOUT_CLASSIFICATION	// we only get here if an exception has been thrown
WITHOUT_CLASSIFICATION	// **   full-pathname specified == parent dir of path in list
WITHOUT_CLASSIFICATION	// not the requested type
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//the rest of the method treats single jar like //a nested path with one file
WITHOUT_CLASSIFICATION	// Check for \r, \r\n and \r\r\n // Regard \r\r not followed by \n as two lines
WITHOUT_CLASSIFICATION	// scan base dirs to build up compile lists only if a // specific classname is not given
WITHOUT_CLASSIFICATION	// **   simple name specified   == parent dir + name
WITHOUT_CLASSIFICATION	// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return
WITHOUT_CLASSIFICATION	// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.
WITHOUT_CLASSIFICATION	// must be "add"
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a srcdir and destdir
WITHOUT_CLASSIFICATION	// log options used
WITHOUT_CLASSIFICATION	//patch file into the fileset
WITHOUT_CLASSIFICATION	//set our parent dir
WITHOUT_CLASSIFICATION	// Compare the destination with the temp file
WITHOUT_CLASSIFICATION	// Eof has been reached
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// don't reposition when we've reached the end // of the stream
WITHOUT_CLASSIFICATION	// if at eolcount == 0 and trailing characters of string // are CTRL-Zs, set eofStr
WITHOUT_CLASSIFICATION	// keep searching for the first ^Z
WITHOUT_CLASSIFICATION	// Trailing characters are ^Zs // Construct new line and eofStr
WITHOUT_CLASSIFICATION	// permissible values for compression attribute
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	// shadow of the above if the value is altered in execute
WITHOUT_CLASSIFICATION	// For directories:
WITHOUT_CLASSIFICATION	// Renamed version of original file, if it exists
WITHOUT_CLASSIFICATION	// Add the files found in groupfileset to fileset
WITHOUT_CLASSIFICATION	// can also handle empty archives
WITHOUT_CLASSIFICATION	// quick exit if the target is up to date
WITHOUT_CLASSIFICATION	// Close the output stream.
WITHOUT_CLASSIFICATION	// we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	// delete a bogus ZIP file (but only if it's not the original one)
WITHOUT_CLASSIFICATION	// In this case using java.util.zip will not work // because it does not permit a zero-entry archive. // Must create it manually.
WITHOUT_CLASSIFICATION	// Cf. PKZIP specification.
WITHOUT_CLASSIFICATION	// P // K
WITHOUT_CLASSIFICATION	// remainder zeros
WITHOUT_CLASSIFICATION	// Create.
WITHOUT_CLASSIFICATION	// we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	// initialResources is not empty
WITHOUT_CLASSIFICATION	// initialResources is not empty
WITHOUT_CLASSIFICATION	// in this case all files from origin map to // the fullPath attribute of the zipfileset at // destination
WITHOUT_CLASSIFICATION	// we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	// we are recreating the archive, need all resources
WITHOUT_CLASSIFICATION	// no emptyBehavior handling since the FileSet version // will take care of it.
WITHOUT_CLASSIFICATION	/*         * Backwards compatibility forces us to repeat the logic of         * getResourcesToAdd(FileSet[], ...) here once again.         */
WITHOUT_CLASSIFICATION	// we will return initialResources anyway, no reason // to scan further.
WITHOUT_CLASSIFICATION	// we will return initialResources anyway, no reason // to scan further.
WITHOUT_CLASSIFICATION	// ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	// don't add directories we've already added. // no warning if we try, it is harmless in and of itself
WITHOUT_CLASSIFICATION	// A "refid" attribute for a node within a Path object.
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	// ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// duplicate equal to add, so we continue
WITHOUT_CLASSIFICATION	// Store data into a byte[]
WITHOUT_CLASSIFICATION	// may be altered in validate
WITHOUT_CLASSIFICATION	// set user-defined properties
WITHOUT_CLASSIFICATION	// set Java built-in properties separately, // b/c we won't inherit them.
WITHOUT_CLASSIFICATION	// set all properties from calling project
WITHOUT_CLASSIFICATION	// has been set explicitly
WITHOUT_CLASSIFICATION	// Are we trying to call the target in which we are defined (or // the build file if this is a top level task)?
WITHOUT_CLASSIFICATION	// help the gc
WITHOUT_CLASSIFICATION	// remove duplicate properties - last property wins // Needed for backward compatibility
WITHOUT_CLASSIFICATION	// Now add all references that are not defined in the // subproject, if inheritRefs is true
WITHOUT_CLASSIFICATION	// not Clonable
WITHOUT_CLASSIFICATION	// ignore this if the class being referenced does not have // a set project method.
WITHOUT_CLASSIFICATION	// basedir and ant.file get special treatment in execute()
WITHOUT_CLASSIFICATION	// don't re-set user properties, avoid the warning message
WITHOUT_CLASSIFICATION	// no user property
WITHOUT_CLASSIFICATION	// @note: it is a string and not a file to handle relative/absolute // otherwise a relative file will be resolved based on the current // basedir.
WITHOUT_CLASSIFICATION	/*     * Get the (sub)-Project instance currently in use.     * @return Project     * @since Ant 1.7     */
WITHOUT_CLASSIFICATION	// check to make sure that the given dir isn't a symlink // the comparison of absolute path and canonical path // catches this
WITHOUT_CLASSIFICATION	//validation logic
WITHOUT_CLASSIFICATION	//this isnt strictly needed, but by being fussy now, //we can change implementation details later
WITHOUT_CLASSIFICATION	//special case single jar handling with signedjar attribute set
WITHOUT_CLASSIFICATION	// single jar processing
WITHOUT_CLASSIFICATION	//return here.
WITHOUT_CLASSIFICATION	//set up our mapping policy
WITHOUT_CLASSIFICATION	//no mapper? use the identity policy
WITHOUT_CLASSIFICATION	//determine the destination filename via the mapper
WITHOUT_CLASSIFICATION	//we only like simple mappers.
WITHOUT_CLASSIFICATION	//DO NOT SET THE -signedjar OPTION if source==dest //unless you like fielding hotspot crash reports
WITHOUT_CLASSIFICATION	//add -tsa operations if declared
WITHOUT_CLASSIFICATION	//JAR source is required
WITHOUT_CLASSIFICATION	//alias is required for signing
WITHOUT_CLASSIFICATION	// restore the lastModified attribute
WITHOUT_CLASSIFICATION	//we normally compare destination with source
WITHOUT_CLASSIFICATION	//but if no dest is specified, compare source to source
WITHOUT_CLASSIFICATION	//if, by any means, the destfile and source match,
WITHOUT_CLASSIFICATION	//we check the presence of signatures on lazy signing
WITHOUT_CLASSIFICATION	//unsigned or non-lazy self signings are always false
WITHOUT_CLASSIFICATION	//if they are different, the timestamps are used
WITHOUT_CLASSIFICATION	//just log this
WITHOUT_CLASSIFICATION	// fileutils
WITHOUT_CLASSIFICATION	// --- Fields --
WITHOUT_CLASSIFICATION	// Keep a hashtable of attributes added by this task. // This task is allow to override its own properties // but not other properties.  So we need to keep track // of which properties we've added.
WITHOUT_CLASSIFICATION	// Error generated during parsing
WITHOUT_CLASSIFICATION	// Parser with specified options can't be built
WITHOUT_CLASSIFICATION	// I/O error
WITHOUT_CLASSIFICATION	// Set the prefix for this node to include its tag name.
WITHOUT_CLASSIFICATION	// Pass the container to the processing of this node,
WITHOUT_CLASSIFICATION	// now, iterate through children.
WITHOUT_CLASSIFICATION	// For each child, pass the object added by // processNode to its children -- in other word, each // object can pass information along to its children.
WITHOUT_CLASSIFICATION	// The value of an id attribute of this node.
WITHOUT_CLASSIFICATION	// Is there an id attribute?
WITHOUT_CLASSIFICATION	// Now, iterate through the attributes adding them.
WITHOUT_CLASSIFICATION	/*                     * The main conditional logic -- if the attribute                     * is somehow "special" (i.e., it has known                     * semantic meaning) then deal with it                     * appropriately.                     */
WITHOUT_CLASSIFICATION	// ID has already been found above.
WITHOUT_CLASSIFICATION	// A "path" attribute for a node within a Path object.
WITHOUT_CLASSIFICATION	// A node identifying a new path
WITHOUT_CLASSIFICATION	// For the text node, add a property.
WITHOUT_CLASSIFICATION	// If the containing object was a String, then use it as the ID.
WITHOUT_CLASSIFICATION	// If this attribute was added by this task, then // we append this value to the existing value. // We use the setProperty method which will // forcibly override the property if it already exists. // We need to put these properties into the project // when we read them, though (instead of keeping them // outside of the project and batch adding them at the end) // to allow other properties to reference them.
WITHOUT_CLASSIFICATION	// Never include the "refid" attribute as part of the // attribute name.
WITHOUT_CLASSIFICATION	// Otherwise, return it appended unless property to hide it is set.
WITHOUT_CLASSIFICATION	/* Expose members for extensibility */
WITHOUT_CLASSIFICATION	// delegate this way around to support subclasses that // overwrite getFile
WITHOUT_CLASSIFICATION	//we arent fully defined yet. this is an error unless //we are in an antlib, in which case the resource name is determined //automatically. //NB: URIs in the ant core package will be "" at this point.
WITHOUT_CLASSIFICATION	//convert the URI to a resource
WITHOUT_CLASSIFICATION	//handle new style full paths to an antlib, in which //all but the forward slashes are allowed.
WITHOUT_CLASSIFICATION	//if we haven't already named an XML file, it gets antlib.xml
WITHOUT_CLASSIFICATION	//convert from a package to a path
WITHOUT_CLASSIFICATION	// Here if there is an error
WITHOUT_CLASSIFICATION	// Fall Through
WITHOUT_CLASSIFICATION	// log at a lower level
WITHOUT_CLASSIFICATION	// Ignore the problem
WITHOUT_CLASSIFICATION	//trick to evoke "basedir not set" if null:
WITHOUT_CLASSIFICATION	//no sources = nothing to compare; no targets = nothing to delete:
WITHOUT_CLASSIFICATION	// Members
WITHOUT_CLASSIFICATION	// Members
WITHOUT_CLASSIFICATION	// If we are a reference, create a Path from the reference
WITHOUT_CLASSIFICATION	// for NetWare and OS/2, piggy-back on Windows, since here and // in the apply code, the same assumptions can be made as with // windows - that \\ is an OK separator, and do comparisons // case-insensitive.
WITHOUT_CLASSIFICATION	// If the element starts with the configured prefix, then // convert the prefix to the configured 'to' value.
WITHOUT_CLASSIFICATION	// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows
WITHOUT_CLASSIFICATION	// may be altered in validateSetup // may be altered in validateSetup
WITHOUT_CLASSIFICATION	// validate our setup
WITHOUT_CLASSIFICATION	// Currently, we deal with only two path formats: Unix and Windows // And Unix is everything that is not Windows // (with the exception for NetWare and OS/2 below)
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Get the list of path components in canonical form
WITHOUT_CLASSIFICATION	// Apply the path prefix map
WITHOUT_CLASSIFICATION	// Now convert the path and file separator characters from the // current os to the target os.
WITHOUT_CLASSIFICATION	// Place the result into the specified property, // unless setonempty == false
WITHOUT_CLASSIFICATION	// Iterate over the map entries and apply each one. // Stop when one of the entries actually changes the element.
WITHOUT_CLASSIFICATION	// Note I'm using "!=" to see if we got a new object back from // the apply method.
WITHOUT_CLASSIFICATION	// We applied one, so we're done
WITHOUT_CLASSIFICATION	// Determine the separator strings.  The dirsep and pathsep attributes // override the targetOS settings.
WITHOUT_CLASSIFICATION	// override with pathsep=
WITHOUT_CLASSIFICATION	// override with dirsep=
WITHOUT_CLASSIFICATION	// Check if used by attributes
WITHOUT_CLASSIFICATION	// ? is there an xml api for this ?
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // ATTRIBUTES
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS
WITHOUT_CLASSIFICATION	//Validate mandatory attributes
WITHOUT_CLASSIFICATION	//the property attribute must have access to a property file
WITHOUT_CLASSIFICATION	//Make sure property exists in property file
WITHOUT_CLASSIFICATION	//Default is empty string
WITHOUT_CLASSIFICATION	// Avoid runtime problem on pre 1.4 when compiling post 1.4
WITHOUT_CLASSIFICATION	// end of finally
WITHOUT_CLASSIFICATION	//look for and print warnings
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // ATTRIBUTES
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // ACCESSOR METHODS
WITHOUT_CLASSIFICATION	// line separators in values and tokens are "\n" // in order to compare with the file contents, replace them // as needed
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	// no errors so far
WITHOUT_CLASSIFICATION	// If we don't know the type of the line // and we are in emacs mode, it will be // an error, because in this mode, jikes won't // always print "error", but sometimes other // keywords like "Syntax". We should look for // all those keywords.
WITHOUT_CLASSIFICATION	// plain impossible
WITHOUT_CLASSIFICATION	// We must check if the process was not stopped // before being here
WITHOUT_CLASSIFICATION	// the process is not terminated, if this is really // a timeout and not a manual stop then kill it.
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // CORE / MAIN BODY
WITHOUT_CLASSIFICATION	// get the recorder entry
WITHOUT_CLASSIFICATION	// set the values on the recorder
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // INNER CLASSES
WITHOUT_CLASSIFICATION	// create a recorder entry
WITHOUT_CLASSIFICATION	// Use '/' to calculate digest based on file name. // This is required in order to get the same result // on different platforms.
WITHOUT_CLASSIFICATION	// Read the checksum from disk.
WITHOUT_CLASSIFICATION	// A separate directory was explicitly declared
WITHOUT_CLASSIFICATION	// Empty statement
WITHOUT_CLASSIFICATION	//can either be a property name string or a file
WITHOUT_CLASSIFICATION	// file is on wrong format, swallow
WITHOUT_CLASSIFICATION	// try to be smart, not to be fooled by a weird directory name
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// Close the output stream.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// File is Comparable, so sorting is trivial
WITHOUT_CLASSIFICATION	// Loop over the checksums and generate a total hash.
WITHOUT_CLASSIFICATION	// Add the digest for the file content
WITHOUT_CLASSIFICATION	// Add the file path
WITHOUT_CLASSIFICATION	// two characters form the hex value.
WITHOUT_CLASSIFICATION	// We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	// Check if the service is configured correctly
WITHOUT_CLASSIFICATION	// if we haven't got the manifest yet, attempt to // get it now and have manifest be the final merge
WITHOUT_CLASSIFICATION	// time to write the manifest
WITHOUT_CLASSIFICATION	// encoding must be UTF8 as specified in the specs.
WITHOUT_CLASSIFICATION	// version-info blankline
WITHOUT_CLASSIFICATION	// header newline
WITHOUT_CLASSIFICATION	// If this is the same name specified in 'manifest', this // is the manifest to use
WITHOUT_CLASSIFICATION	// we add this to our group of fileset manifests
WITHOUT_CLASSIFICATION	// assuming 'skip' otherwise // don't warn if skip has been requested explicitly, warn if user // didn't set the attribute
WITHOUT_CLASSIFICATION	// Hide warning also as it makes no sense since // the filesetmanifest attribute itself has been // hidden
WITHOUT_CLASSIFICATION	// need to handle manifest as a special check
WITHOUT_CLASSIFICATION	// if it doesn't exist, it will get created anyway, don't // bother with any up-to-date checks.
WITHOUT_CLASSIFICATION	// no existing archive
WITHOUT_CLASSIFICATION	// Ignore close exception
WITHOUT_CLASSIFICATION	// we want to save this info if we are going to make another pass
WITHOUT_CLASSIFICATION	// couldn't find it - must be on path
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// looks like nothing from META-INF should be added // and the check is not case insensitive. // see sun.misc.JarIndex
WITHOUT_CLASSIFICATION	// name newline
WITHOUT_CLASSIFICATION	// longest match comes first
WITHOUT_CLASSIFICATION	// META-INF would be skipped anyway, avoid index for // manifest-only jars.
WITHOUT_CLASSIFICATION	// a file, not in the root // since the jar may be one without directory // entries, add the parent dir of this file as // well.
WITHOUT_CLASSIFICATION	/*protected*/
WITHOUT_CLASSIFICATION	// if the target file is not there, then it can't be up-to-date
WITHOUT_CLASSIFICATION	// if the source file isn't there, throw an exception
WITHOUT_CLASSIFICATION	// by default, messages are always displayed
WITHOUT_CLASSIFICATION	// need to keep the package private version for backwards compatibility
WITHOUT_CLASSIFICATION	// we must keep two lists since other classes may modify the // filesets Vector (it is package private) without us noticing
WITHOUT_CLASSIFICATION	// add the main fileset to the list of filesets to process.
WITHOUT_CLASSIFICATION	// check if tar is out of date with respect to each // fileset
WITHOUT_CLASSIFICATION	// warn or GNU
WITHOUT_CLASSIFICATION	// don't add "" to the archive
WITHOUT_CLASSIFICATION	// '/' is appended for compatibility with the zip task.
WITHOUT_CLASSIFICATION	// we would end up adding "" to the archive
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// permissible values for compression attribute
WITHOUT_CLASSIFICATION	// override permissions if set explicitly
WITHOUT_CLASSIFICATION	// only override permissions if set explicitly
WITHOUT_CLASSIFICATION	// non-file resources
WITHOUT_CLASSIFICATION	// non-file resources
WITHOUT_CLASSIFICATION	//extend Comparison; retain for BC only
WITHOUT_CLASSIFICATION	//when writing to the log, we'll see what's happening:
WITHOUT_CLASSIFICATION	/*         * The initial version used DateFormat.SHORT for the         * time format, which ignores seconds.  If we want         * seconds as well, we need DateFormat.MEDIUM, which         * in turn would break all old build files.         *         * First try to parse with DateFormat.SHORT and if         * that fails with MEDIUM - throw an exception if both         * fail.         */
WITHOUT_CLASSIFICATION	//only set if successful to this point:
WITHOUT_CLASSIFICATION	// deal with the resource collections
WITHOUT_CLASSIFICATION	// deal with filesets in a special way since the task // originally also used the directories and Union won't return // them.
WITHOUT_CLASSIFICATION	// use this to create file and deal with non-writable files
WITHOUT_CLASSIFICATION	// When we leave this block we can be sure all data is really // stored in main memory before the new threads start, the new // threads will for sure load the data from main memory. // // This probably is slightly paranoid.
WITHOUT_CLASSIFICATION	// start any daemon threads
WITHOUT_CLASSIFICATION	// now run main threads in limited numbers... // start initial batch of threads
WITHOUT_CLASSIFICATION	// start the timeout thread
WITHOUT_CLASSIFICATION	// now find available running slots for the remaining threads
WITHOUT_CLASSIFICATION	// continue on outer while loop to get another // available slot
WITHOUT_CLASSIFICATION	// if we got here all slots in use, so sleep until // something happens
WITHOUT_CLASSIFICATION	// doesn't java know interruptions are rude? // just pretend it didn't happen and go about out business. // sheesh!
WITHOUT_CLASSIFICATION	// are all threads finished
WITHOUT_CLASSIFICATION	// who would interrupt me at a time like this?
WITHOUT_CLASSIFICATION	// now did any of the threads throw an exception
WITHOUT_CLASSIFICATION	// return a bogus number
WITHOUT_CLASSIFICATION	// Should be safe to parse
WITHOUT_CLASSIFICATION	// Check name is "antlib"
WITHOUT_CLASSIFICATION	//include locally for screening purposes
WITHOUT_CLASSIFICATION	// try to find the executable
WITHOUT_CLASSIFICATION	// now try to resolve against the dir if given
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// throw further
WITHOUT_CLASSIFICATION	// only the first build exception is reported
WITHOUT_CLASSIFICATION	//include locally for screening purposes
WITHOUT_CLASSIFICATION	// mustSearchPath is false, or no PATH or not found - keep our // fingers crossed.
WITHOUT_CLASSIFICATION	// Quick fail if this is not a valid OS for the command
WITHOUT_CLASSIFICATION	// possibly altered in prepareExec
WITHOUT_CLASSIFICATION	//hand osfamily off to Os class, if set
WITHOUT_CLASSIFICATION	// this command will be executed only on the specified OS
WITHOUT_CLASSIFICATION	// default directory to the project's base directory
WITHOUT_CLASSIFICATION	// assume the worst
WITHOUT_CLASSIFICATION	//test for and handle a forced process death
WITHOUT_CLASSIFICATION	// show the command
WITHOUT_CLASSIFICATION	// close the output file if required
WITHOUT_CLASSIFICATION	// Same as regular <copy> task... see at end-of-file!
WITHOUT_CLASSIFICATION	// Override Task#init
WITHOUT_CLASSIFICATION	// Instantiate it
WITHOUT_CLASSIFICATION	// Default config of <mycopy> for our purposes.
WITHOUT_CLASSIFICATION	// Override Task#execute
WITHOUT_CLASSIFICATION	// The destination of the files to copy
WITHOUT_CLASSIFICATION	// The complete list of files to copy
WITHOUT_CLASSIFICATION	// Copy all the necessary out-of-date files
WITHOUT_CLASSIFICATION	// Do we need to perform further processing?
WITHOUT_CLASSIFICATION	// nope ;-)
WITHOUT_CLASSIFICATION	// Get rid of all files not listed in the source filesets.
WITHOUT_CLASSIFICATION	// Get rid of empty directories on the destination side
WITHOUT_CLASSIFICATION	// want to keep toDir itself
WITHOUT_CLASSIFICATION	// ds returns the directories in lexicographic order. // iterating through the array backwards means we are deleting // leaves before their parent nodes - thus making sure (well, // more likely) that the directories are empty when we try to // delete them.
WITHOUT_CLASSIFICATION	// Test here again to avoid method call for non-directories!
WITHOUT_CLASSIFICATION	// must match the default value of Ant#inheritAll
WITHOUT_CLASSIFICATION	// must match the default value of Ant#inheritRefs
WITHOUT_CLASSIFICATION	/*<TargetElement>*/
WITHOUT_CLASSIFICATION	// check if one of the builds failed in keep going mode
WITHOUT_CLASSIFICATION	//     REVISIT: Defaults to the target name that contains this task if not specified.
WITHOUT_CLASSIFICATION	// END class SubAnt
WITHOUT_CLASSIFICATION	// Child elements.
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// this command will be executed only on the specified OS
WITHOUT_CLASSIFICATION	// default directory to the project's base directory
WITHOUT_CLASSIFICATION	// assume the worst
WITHOUT_CLASSIFICATION	// show the command
WITHOUT_CLASSIFICATION	// close the output file if required
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// This directory may have become empty... // We need to re-query its children list!
WITHOUT_CLASSIFICATION	// // Various copy attributes/subelements of <copy> passed thru to <mycopy> //
WITHOUT_CLASSIFICATION	// List of files that must be copied, irrelevant from the // fact that they are newer or not than the destination.
WITHOUT_CLASSIFICATION	// cf. NB #47191
WITHOUT_CLASSIFICATION	// Should work whether or not redirector.inputStream == null:
WITHOUT_CLASSIFICATION	// #24918: send standard input to the process by default.
WITHOUT_CLASSIFICATION	// test if os match
WITHOUT_CLASSIFICATION	// exec command on system runtime
WITHOUT_CLASSIFICATION	// copy input and error to the output stream
WITHOUT_CLASSIFICATION	// starts pumping away the generated output/error
WITHOUT_CLASSIFICATION	// Wait for everything to finish
WITHOUT_CLASSIFICATION	// check its exit value
WITHOUT_CLASSIFICATION	// Inner class for continually pumping the input stream during // Process's runtime.
WITHOUT_CLASSIFICATION	// The size of buffers to be used
WITHOUT_CLASSIFICATION	// Attributes.
WITHOUT_CLASSIFICATION	// Attribute setters.
WITHOUT_CLASSIFICATION	// Nested element creators.
WITHOUT_CLASSIFICATION	// treat empty nested text as no text
WITHOUT_CLASSIFICATION	// if binary check if incompatible attributes are used
WITHOUT_CLASSIFICATION	// Sanity check our inputs.
WITHOUT_CLASSIFICATION	// Nothing to concatenate!
WITHOUT_CLASSIFICATION	// no need to do anything
WITHOUT_CLASSIFICATION	// Log using WARN so it displays in 'quiet' mode.
WITHOUT_CLASSIFICATION	// ensure that the parent dir of dest file exists
WITHOUT_CLASSIFICATION	// non-existing files are not allowed
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// Create a ZipFileSet for this file, and pass it up.
WITHOUT_CLASSIFICATION	// We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	// by default, messages are always displayed
WITHOUT_CLASSIFICATION	// close the output file if required
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Initialize to the size of the first text fragment, with // the hopes that it's the only one.
WITHOUT_CLASSIFICATION	// Append the fragment -- we defer property replacement until // later just in case we get a partial property in a fragment.
WITHOUT_CLASSIFICATION	// If using resources, disallow inline text. This is similar to // using GNU 'cat' with file arguments -- stdin is simply // ignored.
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	// If the file being added is WEB-INF/web.xml, we warn if it's // not the one specified in the "webxml" attribute - or if // it's being added twice, meaning the same file is specified // by the "webxml" attribute and in a <fileset> element.
WITHOUT_CLASSIFICATION	//by default, we add the file.
WITHOUT_CLASSIFICATION	//a web.xml file was found. See if it is a duplicate or not
WITHOUT_CLASSIFICATION	//a second web.xml file, so skip it
WITHOUT_CLASSIFICATION	//check to see if we warn or not
WITHOUT_CLASSIFICATION	//no added file, yet
WITHOUT_CLASSIFICATION	//there is no web.xml file, so add it
WITHOUT_CLASSIFICATION	//and remember that we did
WITHOUT_CLASSIFICATION	//validation
WITHOUT_CLASSIFICATION	//discard most of really big resources
WITHOUT_CLASSIFICATION	//open up the resource
WITHOUT_CLASSIFICATION	// impossible since *our* processLine doesn't throw an IOException
WITHOUT_CLASSIFICATION	// There have been reports that 300 files could be compiled // so 250 is a conservative approach
WITHOUT_CLASSIFICATION	// We assume, that everything jikes writes goes to // standard output, not to standard error. The option // -Xstdout that is given to Jikes in Javac.doJikesCompile() // should guarantee this. At least I hope so. :)
WITHOUT_CLASSIFICATION	//if we have a RedirectorElement, return a decoy
WITHOUT_CLASSIFICATION	// 0 --> srcIndex
WITHOUT_CLASSIFICATION	// srcIndex --> targetIndex
WITHOUT_CLASSIFICATION	// targets are already absolute file names
WITHOUT_CLASSIFICATION	// targetIndex --> end
WITHOUT_CLASSIFICATION	// 0 --> targetIndex
WITHOUT_CLASSIFICATION	// 0 --> srcIndex
WITHOUT_CLASSIFICATION	// contains AbstractFileSet // (both DirSet and FileSet)
WITHOUT_CLASSIFICATION	// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	// targets are already absolute file names
WITHOUT_CLASSIFICATION	// targetIndex --> srcIndex
WITHOUT_CLASSIFICATION	// srcIndex --> end
WITHOUT_CLASSIFICATION	// srcIndex --> end
WITHOUT_CLASSIFICATION	// no targetFilePos
WITHOUT_CLASSIFICATION	// fill in source file names
WITHOUT_CLASSIFICATION	/* this is skipEmpty == false */
WITHOUT_CLASSIFICATION	//if there is a new priority, and it is different, change it
WITHOUT_CLASSIFICATION	//catch permissions denial and keep going
WITHOUT_CLASSIFICATION	//-- XSLTLiaison
WITHOUT_CLASSIFICATION	// Write the properties file back out
WITHOUT_CLASSIFICATION	//Finally set the property
WITHOUT_CLASSIFICATION	// Try parsing the line into an integer.
WITHOUT_CLASSIFICATION	//-- XSLTProcess
WITHOUT_CLASSIFICATION	// check if liaison wants to log errors using us as logger
WITHOUT_CLASSIFICATION	// If we enter here, it means that the stylesheet is supplied // via style attribute
WITHOUT_CLASSIFICATION	/*                     * shouldn't throw out deprecation warnings before we know,                     * the wrong version has been used.                     */
WITHOUT_CLASSIFICATION	// if we have an in file and out then process them
WITHOUT_CLASSIFICATION	//-- make sure destination directory exists...
WITHOUT_CLASSIFICATION	// Process all the files marked for styling
WITHOUT_CLASSIFICATION	// Process all the directories marked for styling
WITHOUT_CLASSIFICATION	// only resource collections, there better be some
WITHOUT_CLASSIFICATION	//anything else is a classname
WITHOUT_CLASSIFICATION	//-- processXML
WITHOUT_CLASSIFICATION	// Param
WITHOUT_CLASSIFICATION	// New env var...append the previous one if we have it.
WITHOUT_CLASSIFICATION	// Mac
WITHOUT_CLASSIFICATION	//validation
WITHOUT_CLASSIFICATION	// If failed to process document, must delete target document, // or it will not attempt to process it the second time
WITHOUT_CLASSIFICATION	// if processor wasn't specified, see if TraX is available.  If not, // default it to xalan, depending on which is in the classpath
WITHOUT_CLASSIFICATION	// We call liason.configure() and then liaison.setStylesheet() // so that the internal variables of liaison can be set up
WITHOUT_CLASSIFICATION	// If we are here we can set the stylesheet as a // resource
WITHOUT_CLASSIFICATION	// If we are here we cannot set the stylesheet as // a resource, but we can set it as a file. So, // we make an attempt to get it as a file
WITHOUT_CLASSIFICATION	// Give always a slash as file separator, so the stylesheet could be sure about that // Use '.' so a dir+"/"+name would not result in an absolute path
WITHOUT_CLASSIFICATION	// only 'name' and 'value' exist.
WITHOUT_CLASSIFICATION	// a value must be of a given type // say boolean|integer|string that are mostly used.
WITHOUT_CLASSIFICATION	// -- class Attribute
WITHOUT_CLASSIFICATION	// -- class Factory
WITHOUT_CLASSIFICATION	// error message strings
WITHOUT_CLASSIFICATION	//at this point there is one trailing space to remove, if the list is not empty.
WITHOUT_CLASSIFICATION	//now exit here if the property is already set
WITHOUT_CLASSIFICATION	//and add any files if also defined
WITHOUT_CLASSIFICATION	//add path URLs
WITHOUT_CLASSIFICATION	//create the URL //ant equivalent of  fileToConvert.toURI().toURL().toExternalForm();
WITHOUT_CLASSIFICATION	// if we run into a timeout, the run-away thread shall not // make the VM run forever - if no timeout occurs, Ant's // main thread will still be there to let the new thread // finish
WITHOUT_CLASSIFICATION	//Use the VM launcher instead of shell launcher on VMS
WITHOUT_CLASSIFICATION	/*     * Builds a command launcher for the OS and JVM we are running under.     */
WITHOUT_CLASSIFICATION	// Try using a JDK 1.3 launcher
WITHOUT_CLASSIFICATION	// Ignore and keep trying
WITHOUT_CLASSIFICATION	// OS/2
WITHOUT_CLASSIFICATION	// Windows XP/2000/NT
WITHOUT_CLASSIFICATION	// Windows 98/95 - need to use an auxiliary script
WITHOUT_CLASSIFICATION	// OpenVMS
WITHOUT_CLASSIFICATION	// Generic
WITHOUT_CLASSIFICATION	// Make sure we do not recurse forever
WITHOUT_CLASSIFICATION	// Just try to use what we got
WITHOUT_CLASSIFICATION	// Since we "look ahead" before adding, there's one last env var.
WITHOUT_CLASSIFICATION	// Just try to see how much we got
WITHOUT_CLASSIFICATION	// OS/2 - use same mechanism as Windows 2000
WITHOUT_CLASSIFICATION	// Determine if we're running under XP/2000/NT or 98/95
WITHOUT_CLASSIFICATION	// Windows 98/95
WITHOUT_CLASSIFICATION	// Windows XP/2000/NT/2003
WITHOUT_CLASSIFICATION	// On most systems one could use: /bin/sh -c env
WITHOUT_CLASSIFICATION	// Some systems have /bin/env, others /usr/bin/env, just try
WITHOUT_CLASSIFICATION	// rely on PATH
WITHOUT_CLASSIFICATION	// rely on PATH
WITHOUT_CLASSIFICATION	//noop default encoding used
WITHOUT_CLASSIFICATION	//By default, use the shell launcher for VMS //
WITHOUT_CLASSIFICATION	// add the process to the list of those to destroy if the VM exits //
WITHOUT_CLASSIFICATION	// #31928: forcibly kill it before continuing.
WITHOUT_CLASSIFICATION	// remove the process to the list of those to destroy if // the VM exits //
WITHOUT_CLASSIFICATION	//on openvms even exit value signals failure; // for other platforms nonzero exit value signals failure
WITHOUT_CLASSIFICATION	// Get key including "="
WITHOUT_CLASSIFICATION	// Nb: using default locale as key is a env name
WITHOUT_CLASSIFICATION	// Find the key in the current enviroment copy // and remove it.
WITHOUT_CLASSIFICATION	// Use the original casiness of the key
WITHOUT_CLASSIFICATION	// Add the key to the enviromnent copy
WITHOUT_CLASSIFICATION	// parse the VMS logicals into required format ("VAR=VAL[,VAL2]")
WITHOUT_CLASSIFICATION	// further equivalence name of previous logical
WITHOUT_CLASSIFICATION	// new logical?
WITHOUT_CLASSIFICATION	// already got this logical from a higher order table
WITHOUT_CLASSIFICATION	/* the arguments: */
WITHOUT_CLASSIFICATION	// IllegalAccess, IllegalArgument, ClassCast
WITHOUT_CLASSIFICATION	// Locate the auxiliary script
WITHOUT_CLASSIFICATION	// Build the command
WITHOUT_CLASSIFICATION	// add the environment as logicals to the DCL script
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	// Locate method Runtime.exec(String[] cmdarray, //                            String[] envp, File dir)
WITHOUT_CLASSIFICATION	// Use cmd.exe to change to the specified drive and // directory before running the command
WITHOUT_CLASSIFICATION	// Use cmd.exe to change to the specified directory before running // the command
WITHOUT_CLASSIFICATION	// need to set the project on unknown element
WITHOUT_CLASSIFICATION	//************************************************************************ //  protected and private methods //************************************************************************
WITHOUT_CLASSIFICATION	//Attempt complete directory renames, if any, first.
WITHOUT_CLASSIFICATION	// files to move
WITHOUT_CLASSIFICATION	//Is this file still available to be moved?
WITHOUT_CLASSIFICATION	// if this is the last time through the loop then // move will not occur, but that's what we want
WITHOUT_CLASSIFICATION	// maybe io error?
WITHOUT_CLASSIFICATION	// found a file
WITHOUT_CLASSIFICATION	// on an io error list() can return null
WITHOUT_CLASSIFICATION	// Whether *this VM* is 1.4+ (but also check executable != null).
WITHOUT_CLASSIFICATION	// ------------------------------------------ general Javadoc arguments
WITHOUT_CLASSIFICATION	// ---------------------------- javadoc2 arguments for default doclet
WITHOUT_CLASSIFICATION	// add the links arguments
WITHOUT_CLASSIFICATION	// should be impossible
WITHOUT_CLASSIFICATION	// is the href a valid URL
WITHOUT_CLASSIFICATION	// ok - just skip
WITHOUT_CLASSIFICATION	//return
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//validation logic
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Only try to move if this is the last mapped file // and one of the mappings isn't to itself
WITHOUT_CLASSIFICATION	// createArgument(true) is necessary to make sure -locale // is the first argument (required in 1.3+).
WITHOUT_CLASSIFICATION	// Go through the tokens one at a time, updating the // elements array and issuing warnings where appropriate.
WITHOUT_CLASSIFICATION	// Ant javadoc task rules for group attribute: //   Args are comma-delimited. //   Each arg is 2 space-delimited strings. //   E.g., group="XSLT_Packages org.apache.xalan.xslt*, //                XPath_Packages org.apache.xalan.xpath*"
WITHOUT_CLASSIFICATION	// add the group arguments
WITHOUT_CLASSIFICATION	// Javadoc 1.4 parameters
WITHOUT_CLASSIFICATION	// The tag element is not used as a fileset, // but specifies the tag directly.
WITHOUT_CLASSIFICATION	// The tag element is used as a // fileset. Parse all the files and create // -tag arguments.
WITHOUT_CLASSIFICATION	// Not 1.4+.
WITHOUT_CLASSIFICATION	// Javadoc 1.2/1.3 parameters:
WITHOUT_CLASSIFICATION	// If using an external file, write the command line options to it
WITHOUT_CLASSIFICATION	// If using an external file, write the command line options to it
WITHOUT_CLASSIFICATION	/*         * No reason to change the working directory as all filenames and         * path components have been resolved already.         *         * Avoid problems with command line length in some environments.         */
WITHOUT_CLASSIFICATION	// are there any java files in this directory?
WITHOUT_CLASSIFICATION	// We don't need to care for duplicates here, // Path.list does it for us.
WITHOUT_CLASSIFICATION	// CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	//convert a class name into a resource
WITHOUT_CLASSIFICATION	//set the property
WITHOUT_CLASSIFICATION	// line feed
WITHOUT_CLASSIFICATION	// by default, remove matching empty dirs
WITHOUT_CLASSIFICATION	// delete the single file
WITHOUT_CLASSIFICATION	// delete the directory
WITHOUT_CLASSIFICATION	//add the files from the default fileset:
WITHOUT_CLASSIFICATION	// sort first to files, then dirs
WITHOUT_CLASSIFICATION	/*                 * Plain impossible with UTF8, see                 * http://java.sun.com/j2se/1.5.0/docs/guide/intl/encoding.doc.html                 *                 * fallback to platform specific anyway.                 */
WITHOUT_CLASSIFICATION	//patch the redirector to save output to a file
WITHOUT_CLASSIFICATION	//verify special operations
WITHOUT_CLASSIFICATION	//JAR  is required
WITHOUT_CLASSIFICATION	//deal with jdk1.4.2 bug:
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	// finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	//validation
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// nonexistent resources could only occur if we already // deleted something from a fileset:
WITHOUT_CLASSIFICATION	//cache
WITHOUT_CLASSIFICATION	// no include pattern implicitly means includes="**"
WITHOUT_CLASSIFICATION	//Do not process this file
WITHOUT_CLASSIFICATION	// make sure facade knows about magic properties and fork setting
WITHOUT_CLASSIFICATION	// deal with the resources
WITHOUT_CLASSIFICATION	// Make a transaction for each resource
WITHOUT_CLASSIFICATION	// Make a transaction group for the outer command
WITHOUT_CLASSIFICATION	// Process all transactions
WITHOUT_CLASSIFICATION	// Catch any statements not followed by ;
WITHOUT_CLASSIFICATION	// Check and ignore empty statements
WITHOUT_CLASSIFICATION	/*     * Closes an unused connection after an error and doesn't rethrow     * a possible SQLException     * @since Ant 1.7     */
WITHOUT_CLASSIFICATION	// dreaded backwards compatibility
WITHOUT_CLASSIFICATION	/*Throw an exception if cvs exited with error. (Iulian)*/
WITHOUT_CLASSIFICATION	// re-implement legacy behaviour:
WITHOUT_CLASSIFICATION	// Check if not real cvsroot => set it to null
WITHOUT_CLASSIFICATION	// Check if not real cvsrsh => set it to null
WITHOUT_CLASSIFICATION	// Check if not real tag => set it to null
WITHOUT_CLASSIFICATION	// close the output file if required
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//req // req
WITHOUT_CLASSIFICATION	// scan source directories and dest directory to build up // compile lists
WITHOUT_CLASSIFICATION	//there is no need to expand properties here as that happens when Transaction.addText is //called; to do so here would be an error.
WITHOUT_CLASSIFICATION	//there are places (in this file, and perhaps elsewhere, where it is assumed //that null is an acceptable parameter.
WITHOUT_CLASSIFICATION	// We can't do it ourselves as jCVS is GPLed, a third party task // outside of jakarta repositories would be possible though (SB).
WITHOUT_CLASSIFICATION	// // Just call the getExecuteStreamHandler() and let it handle //     the semantics of instantiation or retrieval. //
WITHOUT_CLASSIFICATION	// we are chmodding the given directory
WITHOUT_CLASSIFICATION	// may be altered in validateAttributes
WITHOUT_CLASSIFICATION	// will be removed in validateAttributes
WITHOUT_CLASSIFICATION	// make sure we don't have an illegal set of options
WITHOUT_CLASSIFICATION	// deal with the single file
WITHOUT_CLASSIFICATION	// deal with the ResourceCollections
WITHOUT_CLASSIFICATION	// Step (1) - beware of the ZipFileSet
WITHOUT_CLASSIFICATION	// not a fileset or contains non-file resources
WITHOUT_CLASSIFICATION	// copying of dirs is trivial and can be done // for non-file resources as well as for real // files.
WITHOUT_CLASSIFICATION	// a not-directory file resource // needs special treatment
WITHOUT_CLASSIFICATION	// do all the copy operations now...
WITHOUT_CLASSIFICATION	// restrict to out-of-date resources
WITHOUT_CLASSIFICATION	// clean up again, so this instance can be used a second // time
WITHOUT_CLASSIFICATION	// reuse the array created by the mapper
WITHOUT_CLASSIFICATION	// reuse the array created by the mapper
WITHOUT_CLASSIFICATION	//now patch in all system properties
WITHOUT_CLASSIFICATION	// is the keystore a file
WITHOUT_CLASSIFICATION	// must be a URL - just pass as is
WITHOUT_CLASSIFICATION	// Gump friendly - don't mess with the core loader if only classpath
WITHOUT_CLASSIFICATION	// Construct a new class loader
WITHOUT_CLASSIFICATION	// The param is "parentFirst"
WITHOUT_CLASSIFICATION	/*public*/
WITHOUT_CLASSIFICATION	//shield it from being closed by a filtering StreamPumper
WITHOUT_CLASSIFICATION	//shield it from being closed by a filtering StreamPumper
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// set read-only properties // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Are any other references held ? Can we 'close' the loader // so it removes the locks on jars ? // a new one will be created.
WITHOUT_CLASSIFICATION	// The core loader must be reverse //reverse=true;
WITHOUT_CLASSIFICATION	// This allows the core loader to load optional tasks // without delegating
WITHOUT_CLASSIFICATION	//wait for the StreamPumpers to finish
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// Normalize the reference directory (containing the jar)
WITHOUT_CLASSIFICATION	// Normalize the current file
WITHOUT_CLASSIFICATION	// No match, so bail out!
WITHOUT_CLASSIFICATION	// Finally assign the property with the manifest classpath
WITHOUT_CLASSIFICATION	// try to find a MAX_LINE_LENGTH byte section
WITHOUT_CLASSIFICATION	// continuation line
WITHOUT_CLASSIFICATION	// refresh attribute in case of multivalued attributes.
WITHOUT_CLASSIFICATION	// the merge file always wins
WITHOUT_CLASSIFICATION	// the merge file *always* wins, even for Class-Path
WITHOUT_CLASSIFICATION	// add in the warnings
WITHOUT_CLASSIFICATION	// This should be the manifest version
WITHOUT_CLASSIFICATION	// add it back
WITHOUT_CLASSIFICATION	// shouldn't happen - ignore
WITHOUT_CLASSIFICATION	// create a vector and add in the warnings for all the sections
WITHOUT_CLASSIFICATION	//off by default
WITHOUT_CLASSIFICATION	//set up logging
WITHOUT_CLASSIFICATION	//execute the get
WITHOUT_CLASSIFICATION	//dont do any progress, unless asked
WITHOUT_CLASSIFICATION	//set the timestamp to the file date.
WITHOUT_CLASSIFICATION	//set up the URL connection
WITHOUT_CLASSIFICATION	// Create as many directory prefixes as parent levels to traverse, // in addition to the reference directory itself
WITHOUT_CLASSIFICATION	// Find the longest prefix shared by the current file // and the reference directory.
WITHOUT_CLASSIFICATION	// We have a match! Add as many ../ as parent // directory traversed to get the relative path
WITHOUT_CLASSIFICATION	// Manifest's ClassPath: attribute always uses forward // slashes '/', and is space-separated. Ant will properly // format it on 72 columns with proper line continuation
WITHOUT_CLASSIFICATION	// a continuation on the first line is a // continuation of the name - concatenate this // line and the name
WITHOUT_CLASSIFICATION	// required // required
WITHOUT_CLASSIFICATION	//modify the headers //NB: things like user authentication could go in here too.
WITHOUT_CLASSIFICATION	// prepare Java 1.1 style credentials
WITHOUT_CLASSIFICATION	//we do not use the sun impl for portability, //and always use our own implementation for consistent //testing
WITHOUT_CLASSIFICATION	//connect to the remote site (may take some time)
WITHOUT_CLASSIFICATION	//next test for a 304 result (HTTP only)
WITHOUT_CLASSIFICATION	// test for 401 result (HTTP only)
WITHOUT_CLASSIFICATION	//REVISIT: at this point even non HTTP connections may //support the if-modified-since behaviour -we just check //the date of the content and skip the write if it is not //newer. Some protocols (FTP) don't include dates, of //course.
WITHOUT_CLASSIFICATION	//this three attempt trick is to get round quirks in different //Java implementations. Some of them take a few goes to bind //property; we ignore the first couple of such failures.
WITHOUT_CLASSIFICATION	//successful download
WITHOUT_CLASSIFICATION	// this happens if the projecthelper was not registered with the project.
WITHOUT_CLASSIFICATION	// methods to register and unregister shutdown hooks
WITHOUT_CLASSIFICATION	// check to see if the shutdown hook methods exists // (support pre-JDK 1.3 VMs)
WITHOUT_CLASSIFICATION	// wait to add shutdown hook as needed
WITHOUT_CLASSIFICATION	// it just won't be added as a shutdown hook... :(
WITHOUT_CLASSIFICATION	// shutdown already is in progress
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	// shutdown already is in progress
WITHOUT_CLASSIFICATION	// I don't think we can use File - different rules // for relative paths.
WITHOUT_CLASSIFICATION	// this happens if ant is used with a project // helper that doesn't set the import.
WITHOUT_CLASSIFICATION	// Paths are relative to the build file they're imported from, // *not* the current directory (same as entity includes).
WITHOUT_CLASSIFICATION	// whether or not this ProcessDestroyer has been registered as a // shutdown hook
WITHOUT_CLASSIFICATION	// whether or not this ProcessDestroyer is currently running as // shutdown hook
WITHOUT_CLASSIFICATION	// this should return quickly, since it basically is a NO-OP.
WITHOUT_CLASSIFICATION	// the thread didn't die in time // it should not kill any processes unexpectedly
WITHOUT_CLASSIFICATION	// if this list is empty, register the shutdown hook
WITHOUT_CLASSIFICATION	// need to load Task via system classloader or the new // task we want to define will never be a Task but always // be wrapped into a TaskAdapter.
WITHOUT_CLASSIFICATION	// generate classpath, because kjc doesn't support sourcepath.
WITHOUT_CLASSIFICATION	// generate the clsspath
WITHOUT_CLASSIFICATION	// kjc don't have bootclasspath option.
WITHOUT_CLASSIFICATION	// Process the factory class
WITHOUT_CLASSIFICATION	// Process the factory path
WITHOUT_CLASSIFICATION	// Process the processor options
WITHOUT_CLASSIFICATION	//set up the javac options
WITHOUT_CLASSIFICATION	//then add the Apt options
WITHOUT_CLASSIFICATION	//finally invoke APT // Use reflection to be able to build on all JDKs:
WITHOUT_CLASSIFICATION	//rethrow build exceptions
WITHOUT_CLASSIFICATION	//cast everything else to a build exception
WITHOUT_CLASSIFICATION	// Call the compile() method
WITHOUT_CLASSIFICATION	// jvc doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	// jvc doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	// jvc has no option for source-path so we // will add it to classpath.
WITHOUT_CLASSIFICATION	// Add the Classpath before the "internal" one.
WITHOUT_CLASSIFICATION	// Enable MS-Extensions and ...
WITHOUT_CLASSIFICATION	// ... do not display a Message about this.
WITHOUT_CLASSIFICATION	// Do not display Logo
WITHOUT_CLASSIFICATION	//add the files
WITHOUT_CLASSIFICATION	//run
WITHOUT_CLASSIFICATION	//as new versions of java come out, add them to this test
WITHOUT_CLASSIFICATION	//on java<=1.3 the modern falls back to classic if it is not found //but on java>=1.4 we just bail out early
WITHOUT_CLASSIFICATION	// does the modern compiler exist?
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath
WITHOUT_CLASSIFICATION	// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.
WITHOUT_CLASSIFICATION	// Just add "sourcepath" to classpath ( for JDK1.1 ) // as well as "bootclasspath" and "extdirs"
WITHOUT_CLASSIFICATION	// If the buildfile specifies sourcepath="", then don't // output any sourcepath.
WITHOUT_CLASSIFICATION	// If the buildfile specifies sourcepath="", then don't // output any sourcepath.
WITHOUT_CLASSIFICATION	// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2 - and isn't present in 1.5.0 either
WITHOUT_CLASSIFICATION	// 1.5.0 doesn't support -source 1.1
WITHOUT_CLASSIFICATION	//Use the VM launcher instead of shell launcher on VMS //for java
WITHOUT_CLASSIFICATION	// gcj doesn't support bootclasspath dir (-bootclasspath) // so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	// gcj doesn't support an extension dir (-extdir) // so we'll emulate it for compatibility and convenience.
WITHOUT_CLASSIFICATION	// Gcj has no option for source-path so we // will add it to classpath.
WITHOUT_CLASSIFICATION	// Use reflection to be able to build on all JDKs >= 1.1:
WITHOUT_CLASSIFICATION	// no bootclasspath, therefore, get one from the java runtime
WITHOUT_CLASSIFICATION	// if the user has set JIKESPATH we should add the contents as well
WITHOUT_CLASSIFICATION	//reflection to avoid bootstrap/build problems
WITHOUT_CLASSIFICATION	//now verify that the class has an implementation
WITHOUT_CLASSIFICATION	//windows probing logic relies on the word 'windows' in //the OS
WITHOUT_CLASSIFICATION	//there are only four 9x platforms that we look for
WITHOUT_CLASSIFICATION	//wince isn't really 9x, but crippled enough to //be a muchness. Ant doesnt run on CE, anyway.
WITHOUT_CLASSIFICATION	// millis per second
WITHOUT_CLASSIFICATION	//get the host of a url
WITHOUT_CLASSIFICATION	//Java1.5: reachable = address.isReachable(timeout * 1000);
WITHOUT_CLASSIFICATION	//utterly implausible, but catered for anyway
WITHOUT_CLASSIFICATION	// load the parser class
WITHOUT_CLASSIFICATION	// may be altered in validate
WITHOUT_CLASSIFICATION	// Error messages
WITHOUT_CLASSIFICATION	// plain impossible
WITHOUT_CLASSIFICATION	// support for -source 1.1 and -source 1.2 has been // added with JDK 1.4.2, Jikes doesn't like it
WITHOUT_CLASSIFICATION	//assume this is an IOexception about un readability
WITHOUT_CLASSIFICATION	//any kind of fault: not reachable.
WITHOUT_CLASSIFICATION	//java1.4 or earlier
WITHOUT_CLASSIFICATION	// don't know the type, should throw exception instead?
WITHOUT_CLASSIFICATION	//pick a value that is good for everything
WITHOUT_CLASSIFICATION	//initial state is false.
WITHOUT_CLASSIFICATION	//every condition is xored against the previous one
WITHOUT_CLASSIFICATION	//validate
WITHOUT_CLASSIFICATION	//#now match the files
WITHOUT_CLASSIFICATION	// Intentionally left blank
WITHOUT_CLASSIFICATION	//private static final int GET_ENTRY = 0;
WITHOUT_CLASSIFICATION	// make sure attributes are reset when // working on a 'new' file.
WITHOUT_CLASSIFICATION	//We have ended changelog for that particular file //so we can save it
WITHOUT_CLASSIFICATION	//was -1
WITHOUT_CLASSIFICATION	//was -1
WITHOUT_CLASSIFICATION	//There were no revisions in this changelog //entry so lets move onto next file
WITHOUT_CLASSIFICATION	//Reset comment to empty here as we can accumulate multiple lines //in the processComment method
WITHOUT_CLASSIFICATION	// We want something of the form: -d ">=YYYY-MM-dd"
WITHOUT_CLASSIFICATION	// Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	//for now skip entries which are missing a date
WITHOUT_CLASSIFICATION	//Skip dates that are too early
WITHOUT_CLASSIFICATION	//Skip dates that are too late
WITHOUT_CLASSIFICATION	// validate the input parameters
WITHOUT_CLASSIFICATION	// build the rdiff command
WITHOUT_CLASSIFICATION	// if the two substrings are longer than the original, then name // contains address - so reset the name to null
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// support multiple packages
WITHOUT_CLASSIFICATION	// force command not to be null
WITHOUT_CLASSIFICATION	// run the cvs command
WITHOUT_CLASSIFICATION	// parse the rdiff
WITHOUT_CLASSIFICATION	// write the tag diff
WITHOUT_CLASSIFICATION	// parse the output of the command
WITHOUT_CLASSIFICATION	// it is a new file // set the revision but not the prevrevision
WITHOUT_CLASSIFICATION	// it is a modified file // set the revision and the prevrevision
WITHOUT_CLASSIFICATION	// it is a removed file
WITHOUT_CLASSIFICATION	/* special headers */
WITHOUT_CLASSIFICATION	// prepare for the auto select mechanism
WITHOUT_CLASSIFICATION	// try MIME format
WITHOUT_CLASSIFICATION	// SMTP auth only allowed with MIME mail
WITHOUT_CLASSIFICATION	// SSL only allowed with MIME mail
WITHOUT_CLASSIFICATION	// try UU format
WITHOUT_CLASSIFICATION	// try plain format
WITHOUT_CLASSIFICATION	// a valid mailer must be present by now
WITHOUT_CLASSIFICATION	// a valid message is required
WITHOUT_CLASSIFICATION	// an address to send from is required
WITHOUT_CLASSIFICATION	// at least one address to send to/cc/bcc is required
WITHOUT_CLASSIFICATION	// set the mimetype if not done already (and required)
WITHOUT_CLASSIFICATION	// set the character set if not done already (and required)
WITHOUT_CLASSIFICATION	// identify which files should be attached
WITHOUT_CLASSIFICATION	// let the user know what's going to happen
WITHOUT_CLASSIFICATION	// pass the params to the mailer
WITHOUT_CLASSIFICATION	// send the email
WITHOUT_CLASSIFICATION	// let the user know what happened
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	// Read message from a file
WITHOUT_CLASSIFICATION	// Make a limited attempt to extract a sanitized name and email address // Algorithm based on the one found in Ant's MailMessage.java
WITHOUT_CLASSIFICATION	// shortcut for "<address>"
WITHOUT_CLASSIFICATION	// support "address (name)"
WITHOUT_CLASSIFICATION	// support "(name) address"
WITHOUT_CLASSIFICATION	// To work properly with national charsets we have to use // implementation of interface javax.activation.DataSource
WITHOUT_CLASSIFICATION	// Must be like "text/plain; charset=windows-1251"
WITHOUT_CLASSIFICATION	// Aside, the JDK is clearly unaware of the Scottish // 'session', which involves excessive quantities of // alcohol :-)
WITHOUT_CLASSIFICATION	// SMTP provider
WITHOUT_CLASSIFICATION	//create the message
WITHOUT_CLASSIFICATION	//set the sender
WITHOUT_CLASSIFICATION	// set the reply to addresses
WITHOUT_CLASSIFICATION	// Choosing character set of the mail message // First: looking it from MimeType
WITHOUT_CLASSIFICATION	// Assign/reassign message charset from MimeType
WITHOUT_CLASSIFICATION	// Next: looking if charset having explicit definition
WITHOUT_CLASSIFICATION	// Using default
WITHOUT_CLASSIFICATION	// Using javax.activation.DataSource paradigm
WITHOUT_CLASSIFICATION	// Assuming mime type in form "text/XXXX; charset=XXXXXX"
WITHOUT_CLASSIFICATION	// Skip 'charset='
WITHOUT_CLASSIFICATION	// Scanner to find our inputs // list of files to process
WITHOUT_CLASSIFICATION	// default srcDir to basedir
WITHOUT_CLASSIFICATION	// Require destDir
WITHOUT_CLASSIFICATION	// if src and dest dirs are the same, require the extension // to be set, so we don't stomp every file.  One could still // include a file with the same extension, but ....
WITHOUT_CLASSIFICATION	// File to convert // where to put the results
WITHOUT_CLASSIFICATION	// Build the full file names
WITHOUT_CLASSIFICATION	// Make sure we're not about to clobber something
WITHOUT_CLASSIFICATION	// Make intermediate directories if needed // XXX JDK 1.1 doesn't have File.getParentFile,
WITHOUT_CLASSIFICATION	//this.fork = s;
WITHOUT_CLASSIFICATION	//TODO: use ANTLR to parse the grammar file to do this.
WITHOUT_CLASSIFICATION	// if no output directory is specified, used the target's directory
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a from and to extension
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Error strings
WITHOUT_CLASSIFICATION	//validating
WITHOUT_CLASSIFICATION	//set the schema source for the doc
WITHOUT_CLASSIFICATION	//set the schema source for the doc
WITHOUT_CLASSIFICATION	//enable XSD
WITHOUT_CLASSIFICATION	//validate the parser type
WITHOUT_CLASSIFICATION	//couldnt use the xerces or jaxp calls
WITHOUT_CLASSIFICATION	//enable schema checking
WITHOUT_CLASSIFICATION	//turn off DTDs if desired
WITHOUT_CLASSIFICATION	//schema declarations go in next
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a srcdir and destdir
WITHOUT_CLASSIFICATION	//enable schema //setFeature(XmlConstants.FEATURE_VALIDATION, false);
WITHOUT_CLASSIFICATION	//this is almost implausible, but required handling
WITHOUT_CLASSIFICATION	//SchemaLocation
WITHOUT_CLASSIFICATION	//private Path extdirs;
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a srcdir
WITHOUT_CLASSIFICATION	// Keep jdk 1.1 compliant so others can use this
WITHOUT_CLASSIFICATION	// second CR -> EOL + possibly empty line
WITHOUT_CLASSIFICATION	// first CR in this line
WITHOUT_CLASSIFICATION	// LF -> EOL
WITHOUT_CLASSIFICATION	// any other char
WITHOUT_CLASSIFICATION	// Mac-style linebreak or EOF (or both)
WITHOUT_CLASSIFICATION	// variables to hold arguments
WITHOUT_CLASSIFICATION	// ?? Should this be the default for ant?
WITHOUT_CLASSIFICATION	// constants for the messages to suppress by flags and their corresponding properties
WITHOUT_CLASSIFICATION	// other implementation variables
WITHOUT_CLASSIFICATION	// classpath makes no sense
WITHOUT_CLASSIFICATION	// destDir
WITHOUT_CLASSIFICATION	// srcDir
WITHOUT_CLASSIFICATION	// copy the source and support files
WITHOUT_CLASSIFICATION	// compile the source files
WITHOUT_CLASSIFICATION	// create an array of strings for input to the compiler: one array // comes from the compile options, the other from the compileList
WITHOUT_CLASSIFICATION	// create a single array of arguments for the compiler
WITHOUT_CLASSIFICATION	// print nice output about what we are doing for the log
WITHOUT_CLASSIFICATION	// need to set java.class.path property and restore it later // since the NetRexx compiler has no option for the classpath
WITHOUT_CLASSIFICATION	// path is mentioned in the message
WITHOUT_CLASSIFICATION	// verbose level logging for suppressed messages
WITHOUT_CLASSIFICATION	// error level logging for compiler errors
WITHOUT_CLASSIFICATION	// warning for all warning messages
WITHOUT_CLASSIFICATION	// info level for the rest.
WITHOUT_CLASSIFICATION	// need to reset java.class.path property // since the NetRexx compiler has no option for the classpath
WITHOUT_CLASSIFICATION	// add our classpath to the mix
WITHOUT_CLASSIFICATION	// add the system classpath // addExistingToClasspath(classpath,System.getProperty("java.class.path"));
WITHOUT_CLASSIFICATION	// XMLReader used to validation process
WITHOUT_CLASSIFICATION	// turn validation on
WITHOUT_CLASSIFICATION	// set the feature from the attribute list
WITHOUT_CLASSIFICATION	// Sets properties
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// quick exit if the target is up to date
WITHOUT_CLASSIFICATION	// ant task properties // defaults // CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// to report sax parsing errors // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// then check it implements XMLReader
WITHOUT_CLASSIFICATION	// see if it is a SAX1 Parser
WITHOUT_CLASSIFICATION	// Validates property
WITHOUT_CLASSIFICATION	//for every file, we have a new instance of the validator
WITHOUT_CLASSIFICATION	// if this is not a valid file: just use the uri
WITHOUT_CLASSIFICATION	// Property
WITHOUT_CLASSIFICATION	/*     * I'm not fond of this pattern: "sub-method expected to throw     * task-cancelling exceptions".  It feels too much like programming     * for side-effects to me...     */
WITHOUT_CLASSIFICATION	// get files from old methods - includes and nested include
WITHOUT_CLASSIFICATION	// Create the stream pumpers to forward listcab's stdout and stderr to the log // note: listcab is an interactive program, and issues prompts for every new line. //       Therefore, make it show only with verbose logging turned on.
WITHOUT_CLASSIFICATION	// Pump streams asynchronously
WITHOUT_CLASSIFICATION	// A wild default for when the thread is interrupted
WITHOUT_CLASSIFICATION	// Wait for the process to finish
WITHOUT_CLASSIFICATION	// Wait for the end of output and error streams
WITHOUT_CLASSIFICATION	// Informative summary message in case of errors
WITHOUT_CLASSIFICATION	// die if cabarc fails
WITHOUT_CLASSIFICATION	// Use this to prepend a message to the properties file
WITHOUT_CLASSIFICATION	/* ========================================================================    *    * Constructors    */
WITHOUT_CLASSIFICATION	/* ========================================================================    *    * Methods    */
WITHOUT_CLASSIFICATION	// Create the PropertyFile
WITHOUT_CLASSIFICATION	// type may be null because it wasn't set
WITHOUT_CLASSIFICATION	// Default to string type // which means do nothing
WITHOUT_CLASSIFICATION	// Insert as a string by default
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// configure the transformer...
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// If only value is specified, the property is set to it // regardless of its previous value.
WITHOUT_CLASSIFICATION	// If only default is specified and the property did not // exist in the property file, the property is set to default.
WITHOUT_CLASSIFICATION	// If value and default are both specified and the property // previously existed in the property file, the property // is set to value.
WITHOUT_CLASSIFICATION	// If value and default are both specified and the property // did not exist in the property file, the property is set // to default.
WITHOUT_CLASSIFICATION	// Property type operations
WITHOUT_CLASSIFICATION	// Property types
WITHOUT_CLASSIFICATION	// resetting the stylesheet - reset transformer
WITHOUT_CLASSIFICATION	// do we need to reset templates as well
WITHOUT_CLASSIFICATION	// set parameters on each transformation, maybe something has changed //(e.g. value of file name parameter)
WITHOUT_CLASSIFICATION	// end of try-catch
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.
WITHOUT_CLASSIFICATION	// Use a stream so that you can close it yourself quickly // and avoid keeping the handle until the object is garbaged. // (always keep control), otherwise you won't be able to delete // the file quickly on windows.
WITHOUT_CLASSIFICATION	// not initialized yet, so create the factory
WITHOUT_CLASSIFICATION	// specific attributes for the transformer
WITHOUT_CLASSIFICATION	// kept for backwards compatibility
WITHOUT_CLASSIFICATION	// configure factory attributes
WITHOUT_CLASSIFICATION	// use XMLCatalog as the entity resolver and URI resolver
WITHOUT_CLASSIFICATION	// configure output properties
WITHOUT_CLASSIFICATION	//copy the properties file
WITHOUT_CLASSIFICATION	/* load properties from file if specified, otherwise        use Ant's properties */
WITHOUT_CLASSIFICATION	// add ant properties
WITHOUT_CLASSIFICATION	//sort the list. Makes SCM and manual diffs easier.
WITHOUT_CLASSIFICATION	// create XML document
WITHOUT_CLASSIFICATION	// output properties
WITHOUT_CLASSIFICATION	// build the command line from what we got the format // as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	//create task ok, set this task as the default one
WITHOUT_CLASSIFICATION	// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ccm co /t .. files // as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	/*         * If configured to not care about whether the element is         * already checked out to the current view.         * Then check to see if it is checked out.         */
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// -reserved
WITHOUT_CLASSIFICATION	// -unreserved
WITHOUT_CLASSIFICATION	// -out
WITHOUT_CLASSIFICATION	// -ndata
WITHOUT_CLASSIFICATION	// -version
WITHOUT_CLASSIFICATION	// -nwarn
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool lsco [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// -version
WITHOUT_CLASSIFICATION	// -nwarn
WITHOUT_CLASSIFICATION	// type value
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// -ptime
WITHOUT_CLASSIFICATION	// Throws EjbcException if unsuccessful
WITHOUT_CLASSIFICATION	// -keep
WITHOUT_CLASSIFICATION	// -identical
WITHOUT_CLASSIFICATION	// Check for required attributes
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mkattr [options...] [viewpath ...] // as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	// -replace
WITHOUT_CLASSIFICATION	// -recurse
WITHOUT_CLASSIFICATION	// type
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// -nwarn
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -ptime
WITHOUT_CLASSIFICATION	// -keep
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// Windows quoting of the value
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	/*         * Should choose either -ci or -nco.         */
WITHOUT_CLASSIFICATION	// -nco
WITHOUT_CLASSIFICATION	// -nco
WITHOUT_CLASSIFICATION	// Check the command line options
WITHOUT_CLASSIFICATION	// -ci
WITHOUT_CLASSIFICATION	// object selector
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool uncheckout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// -master
WITHOUT_CLASSIFICATION	// -rm
WITHOUT_CLASSIFICATION	// -eltype
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// -version
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -rmall -force
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool checkin [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// -identical
WITHOUT_CLASSIFICATION	// Check for required attributes
WITHOUT_CLASSIFICATION	// Check for required attributes
WITHOUT_CLASSIFICATION	// -replace
WITHOUT_CLASSIFICATION	// -recurse
WITHOUT_CLASSIFICATION	// type
WITHOUT_CLASSIFICATION	// Returns list of EJBs for processing
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool rmtype [options...] type-selector... // as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	// type-kind:type-name
WITHOUT_CLASSIFICATION	// -ignore
WITHOUT_CLASSIFICATION	// Return the type-selector
WITHOUT_CLASSIFICATION	// -full
WITHOUT_CLASSIFICATION	// -incremental
WITHOUT_CLASSIFICATION	// -nlabel
WITHOUT_CLASSIFICATION	// baseline_root_name
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -ptime
WITHOUT_CLASSIFICATION	// Check for required attributes
WITHOUT_CLASSIFICATION	// -replace
WITHOUT_CLASSIFICATION	// -replace
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool lock [options...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// Check the command line options
WITHOUT_CLASSIFICATION	// Check the command line options
WITHOUT_CLASSIFICATION	// object selector
WITHOUT_CLASSIFICATION	// -ordinary
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool update [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// For debugging
WITHOUT_CLASSIFICATION	// -log logname
WITHOUT_CLASSIFICATION	// -graphical
WITHOUT_CLASSIFICATION	// -overwrite
WITHOUT_CLASSIFICATION	// -global
WITHOUT_CLASSIFICATION	// -rename
WITHOUT_CLASSIFICATION	// -obsolete
WITHOUT_CLASSIFICATION	// -noverwrite
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mklbtype [options...] type-selector... // as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	// -ctime
WITHOUT_CLASSIFICATION	// -pbranch
WITHOUT_CLASSIFICATION	// File[] filesInDir = directory.listFiles();
WITHOUT_CLASSIFICATION	// -shared
WITHOUT_CLASSIFICATION	// type-name@vob
WITHOUT_CLASSIFICATION	// we have a file. create a stream for it
WITHOUT_CLASSIFICATION	// default directory to the project's base directory
WITHOUT_CLASSIFICATION	// assume the worst
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// create a data input stream from the jar // input stream
WITHOUT_CLASSIFICATION	// this iterator is exhausted. Can we pop one off the stack
WITHOUT_CLASSIFICATION	// we get the root classes and build up a set of // classes upon which they depend
WITHOUT_CLASSIFICATION	// now recover all the dependencies collected and add to the list.
WITHOUT_CLASSIFICATION	// pick up the last round of dependencies that were determined
WITHOUT_CLASSIFICATION	// right we have a good looking class file.
WITHOUT_CLASSIFICATION	/* int minorVersion = */
WITHOUT_CLASSIFICATION	/* int majorVersion = */
WITHOUT_CLASSIFICATION	/* int accessFlags = */
WITHOUT_CLASSIFICATION	/* int superClassIndex = */
WITHOUT_CLASSIFICATION	// read the dependency cache from the disk
WITHOUT_CLASSIFICATION	// try to read the dependency info from the map if it is // not out of date
WITHOUT_CLASSIFICATION	// not cached - so need to read directly from the class file
WITHOUT_CLASSIFICATION	// This class depends on each class in the dependency list. For each // one of those, add this class into their affected classes list
WITHOUT_CLASSIFICATION	// now determine which jars each class depends upon
WITHOUT_CLASSIFICATION	// we need to add this jar to the list for this class.
WITHOUT_CLASSIFICATION	// write the dependency cache to the disk
WITHOUT_CLASSIFICATION	// need to delete the main class
WITHOUT_CLASSIFICATION	//downgrade warnings on RMI stublike classes, as they are generated //by rmic, so there is no need to tell the user that their source is //missing.
WITHOUT_CLASSIFICATION	// now check classpath file dependencies
WITHOUT_CLASSIFICATION	// if we have no info about the class - it may have been deleted already and we // are using cached info.
WITHOUT_CLASSIFICATION	// there was no class file. add this class to the list
WITHOUT_CLASSIFICATION	// break the classLocations into its components.
WITHOUT_CLASSIFICATION	// search the various source path entries
WITHOUT_CLASSIFICATION	// create a data input stream from the jar input stream
WITHOUT_CLASSIFICATION	// add null entries for any additional slots required.
WITHOUT_CLASSIFICATION	// end execute
WITHOUT_CLASSIFICATION	//in verbose mode we always log stuff
WITHOUT_CLASSIFICATION	//the simple action is to send the command line in as is
WITHOUT_CLASSIFICATION	// Throws EjbcException
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// The zero index is never present in the constant pool itself so // we add a null entry for it
WITHOUT_CLASSIFICATION	//but for big operations, we save all the params to a temp file //and set @tmpfile as the command -then we remember to delete the tempfile //afterwards
WITHOUT_CLASSIFICATION	//start at 1 because element 0 is the executable name
WITHOUT_CLASSIFICATION	//add to the list
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//set source and rebuild options
WITHOUT_CLASSIFICATION	//rebuild unless the dest file is newer than the source file
WITHOUT_CLASSIFICATION	//mark for a rebuild if the dest file is newer
WITHOUT_CLASSIFICATION	// Mono 1.0's wsdl doesn't deal with absolute paths
WITHOUT_CLASSIFICATION	//add in any extra files. //this is an error in mono, but we do not warn on it as they may fix that outside //the ant build cycle.
WITHOUT_CLASSIFICATION	//mark for a rebuild if we are newer
WITHOUT_CLASSIFICATION	//conditionally compile
WITHOUT_CLASSIFICATION	// Errors
WITHOUT_CLASSIFICATION	//bail on no references
WITHOUT_CLASSIFICATION	//bail on no references
WITHOUT_CLASSIFICATION	//demand create pathlist
WITHOUT_CLASSIFICATION	//bail on no references listed
WITHOUT_CLASSIFICATION	//loop through all definitions
WITHOUT_CLASSIFICATION	//add those that are set, and a delimiter
WITHOUT_CLASSIFICATION	//set up response file options
WITHOUT_CLASSIFICATION	//if the refs are out of date, force a build.
WITHOUT_CLASSIFICATION	//bail out early if there were no files
WITHOUT_CLASSIFICATION	//now scan the hashtable and add the files
WITHOUT_CLASSIFICATION	//add the source file
WITHOUT_CLASSIFICATION	//now run
WITHOUT_CLASSIFICATION	//forcibly delete the output file in case of trouble
WITHOUT_CLASSIFICATION	//then rethrow the exception
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// end execute
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//rebuild unless the dest file is newer than the source file
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//determine directory: resourceDir if set, //the dir of the destFile if not
WITHOUT_CLASSIFICATION	//Public //Private //Family //Assembly //Family and Assembly //Family or Assembly //Private Scope
WITHOUT_CLASSIFICATION	//scan for an implicit fileset if there was a srcdir set //or there was no srcDir set but there was no contained classes
WITHOUT_CLASSIFICATION	//if there is no src dir here, set it
WITHOUT_CLASSIFICATION	//get dependencies list.
WITHOUT_CLASSIFICATION	//get any included source directories
WITHOUT_CLASSIFICATION	//add the files to the command
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MethodNameCheck ON
WITHOUT_CLASSIFICATION	/*         *  space for more argumentativeness         *  command.addArgument();         *  command.addArgument();         */
WITHOUT_CLASSIFICATION	// ends with '.' or null
WITHOUT_CLASSIFICATION	/* Constants used for the "beantype" attribute */
WITHOUT_CLASSIFICATION	/* Filenames of the standard EJB descriptor and the iAS-specific descriptor */
WITHOUT_CLASSIFICATION	/* Classpath used when the iAS ejbc is called */
WITHOUT_CLASSIFICATION	/* Options passed to the iAS ejbc */
WITHOUT_CLASSIFICATION	/* iAS installation directory (used if ejbc isn't on user's PATH) */
WITHOUT_CLASSIFICATION	/* Parser and handler used to process both EJB descriptor files */
WITHOUT_CLASSIFICATION	/* Value of the display-name element read from the standard EJB descriptor */
WITHOUT_CLASSIFICATION	/*         * Parse the classpath into it's individual elements and store the         * results in the "classpathElements" instance variable.         */
WITHOUT_CLASSIFICATION	/* If the -classpath flag isn't specified, use the system classpath */
WITHOUT_CLASSIFICATION	/*         * If the -d flag isn't specified, use the working directory as the         * destination directory         */
WITHOUT_CLASSIFICATION	/* Construct a SAXParser used to process the descriptors */
WITHOUT_CLASSIFICATION	// SAXException or ParserConfigurationException may be thrown
WITHOUT_CLASSIFICATION	/* Build and populate an instance of the ejbc utility */
WITHOUT_CLASSIFICATION	/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */
WITHOUT_CLASSIFICATION	// Add one for the "\"
WITHOUT_CLASSIFICATION	/* Concatenate all of the command line arguments into a single String */
WITHOUT_CLASSIFICATION	/* If an iAS home directory is specified, prepend it to the commmand */
WITHOUT_CLASSIFICATION	/*         * The EJB information is gathered from the standard XML EJB descriptor         * and the iAS-specific XML EJB descriptor using a SAX parser.         */
WITHOUT_CLASSIFICATION	/* OPTIONAL COMMAND LINE PARAMETERS */
WITHOUT_CLASSIFICATION	/* No beantype flag is needed for an entity bean */
WITHOUT_CLASSIFICATION	/* REQUIRED COMMAND LINE PARAMETERS */
WITHOUT_CLASSIFICATION	/* Convert the List into an Array and return it */
WITHOUT_CLASSIFICATION	/* Inner classes follow */
WITHOUT_CLASSIFICATION	// End of EjbcException inner class
WITHOUT_CLASSIFICATION	// Tracks current element // Tracks current text data // "session" or "entity"
WITHOUT_CLASSIFICATION	/* Search the resource Map and (if not found) file Map */
WITHOUT_CLASSIFICATION	/* A new element has started, so reset the text being captured */
WITHOUT_CLASSIFICATION	/*             * If this is a standard EJB 1.1 descriptor, we are looking for one             * set of data, while if this is an iAS-specific descriptor, we're             * looking for different set of data.  Hand the processing off to             * the appropriate method.             */
WITHOUT_CLASSIFICATION	// End of EjbcHandler inner class
WITHOUT_CLASSIFICATION	/*         * Below are getter's and setter's for each of the instance variables.         * Note that (in addition to supporting setters with the same type as         * the instance variable) a setter is provided with takes a String         * argument -- this are provided so the XML document handler can set         * the EJB values using the Strings it parses.         */
WITHOUT_CLASSIFICATION	/* Check that the specified instance variables are valid */
WITHOUT_CLASSIFICATION	/* Check that the EJB "source" classes all exist */
WITHOUT_CLASSIFICATION	// The timestamp of the "newest" class // Timestamp for a given class // File for the remote interface class // File for the home interface class // File for the EJB implementation class // File for the EJB primary key class
WITHOUT_CLASSIFICATION	/* Check the timestamp on the remote interface */
WITHOUT_CLASSIFICATION	/* Check the timestamp on the home interface */
WITHOUT_CLASSIFICATION	/* Check the timestamp of the primary key class */
WITHOUT_CLASSIFICATION	// List of all stubs & skels // Earliest mod time // Has each been found?
WITHOUT_CLASSIFICATION	/*             * Loop through each stub/skeleton class that must be generated, and             * determine (if all exist) which file has the most recent timestamp             */
WITHOUT_CLASSIFICATION	/*                 * Add each stub/skeleton class to the list of EJB files.  Note                 * that each class is added even if it doesn't exist now.                 */
WITHOUT_CLASSIFICATION	/* Keep track of the oldest modification timestamp */
WITHOUT_CLASSIFICATION	// End of EjbInfo inner class
WITHOUT_CLASSIFICATION	// Fully qualified name of the Java class // Name of the package for this class // Name of the class without the package
WITHOUT_CLASSIFICATION	// End of Classname inner class
WITHOUT_CLASSIFICATION	// Stream to read and redirect to standard output
WITHOUT_CLASSIFICATION	// End of RedirectOutput inner class
WITHOUT_CLASSIFICATION	// add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	//clientname = ejbjarfile+client.jar
WITHOUT_CLASSIFICATION	// end of else
WITHOUT_CLASSIFICATION	// ejb jar file
WITHOUT_CLASSIFICATION	// ejb jar file
WITHOUT_CLASSIFICATION	//client jar file
WITHOUT_CLASSIFICATION	//client jar file
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	//classpath
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	/* GenIC options */
WITHOUT_CLASSIFICATION	/* other options */
WITHOUT_CLASSIFICATION	/* -------------------- */
WITHOUT_CLASSIFICATION	/* -------------------- */
WITHOUT_CLASSIFICATION	/* GenIC options setter */
WITHOUT_CLASSIFICATION	// -I- // ignore all errors // -Vd
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	/* -------------------- */
WITHOUT_CLASSIFICATION	/* other options setter */
WITHOUT_CLASSIFICATION	/* other methods */
WITHOUT_CLASSIFICATION	// the method deleteOnExit() do not work because the directory is not empty
WITHOUT_CLASSIFICATION	// create the generic jar first
WITHOUT_CLASSIFICATION	// GenIC call on generic jar
WITHOUT_CLASSIFICATION	// create the real jar
WITHOUT_CLASSIFICATION	// JOnAS-specific descriptor deployment
WITHOUT_CLASSIFICATION	// JOnAS-specific DD // true if the JOnAS convention is used for the DD // Directory path of the EJB descriptor // EJB descriptor file name // Filename appearing before name terminator // Filename appearing after the name terminator
WITHOUT_CLASSIFICATION	// extract path info
WITHOUT_CLASSIFICATION	// descriptorName is just a file without path
WITHOUT_CLASSIFICATION	/*         * Check for the odd case where the terminator and/or filename         * extension aren't found.  These will ensure "jonas-" appears at the         * end of the name and before the '.' (if present).         */
WITHOUT_CLASSIFICATION	// no . found
WITHOUT_CLASSIFICATION	// try to find JOnAS specific convention name
WITHOUT_CLASSIFICATION	// else get standard baseName
WITHOUT_CLASSIFICATION	// jonasroot
WITHOUT_CLASSIFICATION	// java policy file
WITHOUT_CLASSIFICATION	// outputdir
WITHOUT_CLASSIFICATION	// work around a bug of GenIC 2.5
WITHOUT_CLASSIFICATION	// classpath
WITHOUT_CLASSIFICATION	// try to create the classpath for the correct ORB
WITHOUT_CLASSIFICATION	// keepgenerated
WITHOUT_CLASSIFICATION	// nocompil
WITHOUT_CLASSIFICATION	// novalidation
WITHOUT_CLASSIFICATION	// javac
WITHOUT_CLASSIFICATION	// javacopts
WITHOUT_CLASSIFICATION	// rmicopts
WITHOUT_CLASSIFICATION	// secpropag
WITHOUT_CLASSIFICATION	// verbose
WITHOUT_CLASSIFICATION	// input file to process by GenIC
WITHOUT_CLASSIFICATION	// calling GenIC task
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// the method deleteOnExit() do not work because the directory is not empty
WITHOUT_CLASSIFICATION	// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].
WITHOUT_CLASSIFICATION	// jonasroot
WITHOUT_CLASSIFICATION	// GenIC task // GenIC class (3 are supported for various // versions
WITHOUT_CLASSIFICATION	// javac
WITHOUT_CLASSIFICATION	// additionalargs
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// add the generated files to the ejbFiles
WITHOUT_CLASSIFICATION	// orb
WITHOUT_CLASSIFICATION	/* ----------------------------------------------------------------------------------- */
WITHOUT_CLASSIFICATION	/* ----------------------------------------------------------------------------------- */
WITHOUT_CLASSIFICATION	/* utilitary methods */
WITHOUT_CLASSIFICATION	// Create the parser using whatever parser the system dictates
WITHOUT_CLASSIFICATION	// Loop through the files. Each file represents one deployment // descriptor, and hence one bean in our model.
WITHOUT_CLASSIFICATION	// process the deployment descriptor in each tool
WITHOUT_CLASSIFICATION	// end of execute()
WITHOUT_CLASSIFICATION	// resolve relative to project basedir
WITHOUT_CLASSIFICATION	// Get the filename into a String object
WITHOUT_CLASSIFICATION	// Get the value of the <ejb-name> tag.  Only the first occurrence.
WITHOUT_CLASSIFICATION	// Then the toplink deployment descriptor
WITHOUT_CLASSIFICATION	// Setup a naming standard here?.
WITHOUT_CLASSIFICATION	// get all the files in the descriptor directory
WITHOUT_CLASSIFICATION	// If we still can't find it, complain
WITHOUT_CLASSIFICATION	// OK, properties file may be absolute
WITHOUT_CLASSIFICATION	// do we need to regenerate the file
WITHOUT_CLASSIFICATION	//weblogic.ejb.utils.DDCreator.main(args);
WITHOUT_CLASSIFICATION	// there was an exception - run with no exit to get proper error
WITHOUT_CLASSIFICATION	//weblogic.ejb.utils.DDCreator.main(newArgs);
WITHOUT_CLASSIFICATION	/* Attributes set by the Ant build file */
WITHOUT_CLASSIFICATION	// Create the zip entry and add it to the jar file
WITHOUT_CLASSIFICATION	//add it to list of files in jar
WITHOUT_CLASSIFICATION	// If it's a primitive wrapper then we shouldn't try and put // it into the jar, so ignore it.
WITHOUT_CLASSIFICATION	// Translate periods into path separators, add .class to the // name, create the File object and add it to the Hashtable.
WITHOUT_CLASSIFICATION	// Weblogic will throw an error if the deployment descriptor does // not match the class files.
WITHOUT_CLASSIFICATION	// Create the file input stream, and buffer everything over // to the jar output stream
WITHOUT_CLASSIFICATION	// Close up the file input stream for the class file
WITHOUT_CLASSIFICATION	// register any DTDs supplied by the user
WITHOUT_CLASSIFICATION	// none to register for generic
WITHOUT_CLASSIFICATION	// Retrive the files to be added to JAR from EJB descriptor
WITHOUT_CLASSIFICATION	// Add any support classes specified in the build file
WITHOUT_CLASSIFICATION	// Determine the JAR filename (without filename extension)
WITHOUT_CLASSIFICATION	// First the regular deployment descriptor
WITHOUT_CLASSIFICATION	// now the vendor specific files, if any
WITHOUT_CLASSIFICATION	// add any dependent files
WITHOUT_CLASSIFICATION	// Check to see if we need a build and start doing the work!
WITHOUT_CLASSIFICATION	// Log that we are going to build...
WITHOUT_CLASSIFICATION	// Use helper method to write the jarfile
WITHOUT_CLASSIFICATION	// Log that the file is up to date...
WITHOUT_CLASSIFICATION	/* Parse the ejb deployment descriptor.  While it may not             * look like much, we use a SAXParser and an inner class to             * get hold of all the classfile names for the descriptor.             */
WITHOUT_CLASSIFICATION	// add in support classes if any
WITHOUT_CLASSIFICATION	// Work out what the base name is
WITHOUT_CLASSIFICATION	// nothing to add for generic tool.
WITHOUT_CLASSIFICATION	// clean the addedfiles set
WITHOUT_CLASSIFICATION	// Create the streams necessary to write the jarfile
WITHOUT_CLASSIFICATION	//get and clean up innerclass name
WITHOUT_CLASSIFICATION	// See if there are any inner classes for this class and add them in if there are
WITHOUT_CLASSIFICATION	// Loop through all the class files found and add them to the jar
WITHOUT_CLASSIFICATION	//assertions take up space too
WITHOUT_CLASSIFICATION	// link the file
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	//trim the META_INF\ off of the file name
WITHOUT_CLASSIFICATION	// end of writeJar
WITHOUT_CLASSIFICATION	// only generate a new ClassLoader if we have a classpath
WITHOUT_CLASSIFICATION	// register all the known DTDs
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// The the weblogic cmp deployment descriptor
WITHOUT_CLASSIFICATION	// try to determine it from publicId
WITHOUT_CLASSIFICATION	// try to use the compiler specified by build.compiler. // Right now we are just going to allow Jikes
WITHOUT_CLASSIFICATION	// need to create a generic jar first.
WITHOUT_CLASSIFICATION	// Only go forward if the generic and the weblogic file both exist
WITHOUT_CLASSIFICATION	//open jar files
WITHOUT_CLASSIFICATION	//get the list of generic jar entries
WITHOUT_CLASSIFICATION	//get the list of weblogic jar entries
WITHOUT_CLASSIFICATION	//Cycle Through generic and make sure its in weblogic
WITHOUT_CLASSIFICATION	// File name/path match
WITHOUT_CLASSIFICATION	// Check files see if same
WITHOUT_CLASSIFICATION	//File are different see if its an object or an interface
WITHOUT_CLASSIFICATION	//Interface changed   rebuild jar.
WITHOUT_CLASSIFICATION	//Object class Changed   update it.
WITHOUT_CLASSIFICATION	// is it the manifest. If so ignore it
WITHOUT_CLASSIFICATION	//File other then class changed   rebuild
WITHOUT_CLASSIFICATION	// a file doesnt exist rebuild
WITHOUT_CLASSIFICATION	//Copy files from old weblogic jar
WITHOUT_CLASSIFICATION	// Use the entry from the generic jar
WITHOUT_CLASSIFICATION	//use fle from original weblogic jar
WITHOUT_CLASSIFICATION	// need to close files and perhaps rename output
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// if the implementation classes don;t exist regenerate
WITHOUT_CLASSIFICATION	// any problems - just regenerate
WITHOUT_CLASSIFICATION	// create a Java task to do the rebuild
WITHOUT_CLASSIFICATION	//weblogic.ejbc.main(args);
WITHOUT_CLASSIFICATION	/* Build and populate an instance of the ejbc utility */
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	//classpath
WITHOUT_CLASSIFICATION	/* Attributes set by the Ant build file */
WITHOUT_CLASSIFICATION	// Get the filename of vendor specific descriptor
WITHOUT_CLASSIFICATION	//trim the META_INF\ off of the file name
WITHOUT_CLASSIFICATION	// Is the ser file or any of the source files newer then the class files. // firstly find the oldest of the two class files.
WITHOUT_CLASSIFICATION	// run with no exit for better reporting
WITHOUT_CLASSIFICATION	//weblogic.ejbc.main(newArgs);
WITHOUT_CLASSIFICATION	/*     * Regardless of the name of the iAS-specific EJB descriptor file, it will     * written in the completed JAR file as "ias-ejb-jar.xml".  This is the     * naming convention implemented by iAS.     */
WITHOUT_CLASSIFICATION	/* Add CMP descriptors to the list of EJB files */
WITHOUT_CLASSIFICATION	/* Only calculate the descriptor name once */
WITHOUT_CLASSIFICATION	// Directory path of the EJB descriptor // Filename appearing before name terminator // Filename appearing after the name terminator
WITHOUT_CLASSIFICATION	/* Find the end of the standard descriptor's relative path */
WITHOUT_CLASSIFICATION	/* Check to see if the standard name is used (there's no basename) */
WITHOUT_CLASSIFICATION	/*             * Check for the odd case where the terminator and/or filename             * extension aren't found.  These will ensure "ias-" appears at the             * end of the name and before the '.' (if present).             */
WITHOUT_CLASSIFICATION	//choose the right vendor DD
WITHOUT_CLASSIFICATION	// ejb jar file to verify
WITHOUT_CLASSIFICATION	//debug ?
WITHOUT_CLASSIFICATION	//set the classpath
WITHOUT_CLASSIFICATION	//list file
WITHOUT_CLASSIFICATION	//no TIE classes
WITHOUT_CLASSIFICATION	//root dir
WITHOUT_CLASSIFICATION	//compiling order
WITHOUT_CLASSIFICATION	//add the home class
WITHOUT_CLASSIFICATION	//build the home classes list.
WITHOUT_CLASSIFICATION	//remove .class extension
WITHOUT_CLASSIFICATION	//add the gen files to the collection
WITHOUT_CLASSIFICATION	//remove the .class
WITHOUT_CLASSIFICATION	// Get the Extensions document
WITHOUT_CLASSIFICATION	// We attempt to put in the MAP and Schema files of CMP beans
WITHOUT_CLASSIFICATION	// Add the Map file
WITHOUT_CLASSIFICATION	// Theres nothing else to see here...keep moving sonny
WITHOUT_CLASSIFICATION	// Set the options
WITHOUT_CLASSIFICATION	// Set the JvmArgs
WITHOUT_CLASSIFICATION	// Set the Environment variable
WITHOUT_CLASSIFICATION	// Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	//open jar files
WITHOUT_CLASSIFICATION	//get the list of generic jar entries
WITHOUT_CLASSIFICATION	//File are different see if its an object or an interface
WITHOUT_CLASSIFICATION	//Interface changed   rebuild jar.
WITHOUT_CLASSIFICATION	//Object class Changed   update it.
WITHOUT_CLASSIFICATION	// is it the manifest. If so ignore it
WITHOUT_CLASSIFICATION	//File other then class changed   rebuild
WITHOUT_CLASSIFICATION	// Update with changed Bean class
WITHOUT_CLASSIFICATION	// Use the entry from the generic jar
WITHOUT_CLASSIFICATION	// register all the DTDs, both the ones that are known and // any supplied by the user
WITHOUT_CLASSIFICATION	// Set the working directory
WITHOUT_CLASSIFICATION	// Set the Java class name
WITHOUT_CLASSIFICATION	// create the -generic.jar, if required
WITHOUT_CLASSIFICATION	// create the "undeployed" output .jar, if required
WITHOUT_CLASSIFICATION	// Only go forward if the generic and the websphere file both exist
WITHOUT_CLASSIFICATION	//get the list of websphere jar entries
WITHOUT_CLASSIFICATION	//Cycle Through generic and make sure its in websphere
WITHOUT_CLASSIFICATION	// File name/path match // Check files see if same
WITHOUT_CLASSIFICATION	// a file doesn't exist rebuild
WITHOUT_CLASSIFICATION	//Copy files from old websphere jar
WITHOUT_CLASSIFICATION	//use fle from original websphere jar
WITHOUT_CLASSIFICATION	// Specification Name must match
WITHOUT_CLASSIFICATION	// Available specification version must be >= required
WITHOUT_CLASSIFICATION	// Implementation Vendor ID must match
WITHOUT_CLASSIFICATION	// Implementation Vendor ID must match
WITHOUT_CLASSIFICATION	// Implementation version must be >= required
WITHOUT_CLASSIFICATION	// This available optional package satisfies the requirements
WITHOUT_CLASSIFICATION	// This available optional package satisfies the requirements
WITHOUT_CLASSIFICATION	//Reset list of sections
WITHOUT_CLASSIFICATION	// Extension Name must match
WITHOUT_CLASSIFICATION	//Add all the dependency data to manifest for dependencies
WITHOUT_CLASSIFICATION	// Check if list of files to check has been specified
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	// change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	//Add all the dependency data to manifest for "optional" //dependencies
WITHOUT_CLASSIFICATION	//add in something like //"Extension-List: javahelp java3d"
WITHOUT_CLASSIFICATION	//all methods static
WITHOUT_CLASSIFICATION	/*     * Gets the destination file     */
WITHOUT_CLASSIFICATION	/*     * Validates URL     */
WITHOUT_CLASSIFICATION	//Load default locale bundle files //using default file encoding scheme.
WITHOUT_CLASSIFICATION	//if all resource files associated with this bundle //have been scanned for and still not able to //find a single resrouce file, throw exception
WITHOUT_CLASSIFICATION	//So long as the line isn't empty and isn't a comment...
WITHOUT_CLASSIFICATION	//Legal Key-Value separators are :, = and white space.
WITHOUT_CLASSIFICATION	//Only if we do have a key is there going to be a value
WITHOUT_CLASSIFICATION	//Handle line continuations, if any
WITHOUT_CLASSIFICATION	//Has key already been loaded into resourceMap?
WITHOUT_CLASSIFICATION	//Make sure parent dirs exist, else, create them.
WITHOUT_CLASSIFICATION	//Check to see if dest file has to be recreated
WITHOUT_CLASSIFICATION	// is there a startToken // and there is still stuff following the startToken
WITHOUT_CLASSIFICATION	// we found a starttoken, is there an endtoken following? // start at token+tokenlength because start and end // token may be indentical
WITHOUT_CLASSIFICATION	// grab the token
WITHOUT_CLASSIFICATION	// If there is a white space or = or :, then // it isn't to be treated as a valid key.
WITHOUT_CLASSIFICATION	// find the replace string
WITHOUT_CLASSIFICATION	// generate the new line
WITHOUT_CLASSIFICATION	// set start position for next search
WITHOUT_CLASSIFICATION	// find next starttoken
WITHOUT_CLASSIFICATION	// deal with specified srcDir
WITHOUT_CLASSIFICATION	// deal with the filesets
WITHOUT_CLASSIFICATION	// remove any files that shouldn't be overwritten.
WITHOUT_CLASSIFICATION	// check that the password has been set
WITHOUT_CLASSIFICATION	// check for missing application on deploy & update
WITHOUT_CLASSIFICATION	// check for missing source on deploy & update
WITHOUT_CLASSIFICATION	// check for missing application on delete & undeploy
WITHOUT_CLASSIFICATION	// keys to optional attributes
WITHOUT_CLASSIFICATION	// constructs the "-url <url> -debug <action> <password>" portion // of the commmand line
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // // Place vendor specific tool creations here. // ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // // Execute method // ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // // Set/get methods // ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// keys to optional attributes
WITHOUT_CLASSIFICATION	// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc
WITHOUT_CLASSIFICATION	// required attributes
WITHOUT_CLASSIFICATION	// required attributes
WITHOUT_CLASSIFICATION	// required attributes
WITHOUT_CLASSIFICATION	// load command line with optional attributes
WITHOUT_CLASSIFICATION	// load command line with optional attributes
WITHOUT_CLASSIFICATION	// load command line with optional attributes
WITHOUT_CLASSIFICATION	// use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	// use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	// used by jpackage for JavaCC 3.x
WITHOUT_CLASSIFICATION	// check the target is a file
WITHOUT_CLASSIFICATION	// determine if the generated java file is up-to-date
WITHOUT_CLASSIFICATION	// Extract file's base-name
WITHOUT_CLASSIFICATION	// Replace the file's extension with '.java'
WITHOUT_CLASSIFICATION	// Change the directory
WITHOUT_CLASSIFICATION	// This default has been good enough until Ant 1.6.3, so stick // with it
WITHOUT_CLASSIFICATION	// first search for the "old" javah class in 1.4.2 tools.jar
WITHOUT_CLASSIFICATION	// assume older than 1.4.2 tools.jar
WITHOUT_CLASSIFICATION	//private CommandlineJava commandline = new CommandlineJava();
WITHOUT_CLASSIFICATION	// required attributes // Deprecated! // Use this going forward
WITHOUT_CLASSIFICATION	// optional attributes
WITHOUT_CLASSIFICATION	// execute the test and get the return code
WITHOUT_CLASSIFICATION	// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	/* int accessFlags = */
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// not necessary as JDepend would fail, but why loose // some time?
WITHOUT_CLASSIFICATION	// This bit turns <exclude> child tags into patters to ignore
WITHOUT_CLASSIFICATION	// JL: comment extracted from JUnitTask (and slightly modified)
WITHOUT_CLASSIFICATION	// if not set, auto-create the ClassPath from the project
WITHOUT_CLASSIFICATION	// having a space between the file and its path causes commandline // to add quotes around the argument thus making JDepend not taking // it into account. Thus we split it in two
WITHOUT_CLASSIFICATION	// This is the new way - use classespath - code is the // same for now
WITHOUT_CLASSIFICATION	// read in all constant pool entries.
WITHOUT_CLASSIFICATION	// verify this is a valid class file.
WITHOUT_CLASSIFICATION	/* int version = */
WITHOUT_CLASSIFICATION	// read the constant pool.
WITHOUT_CLASSIFICATION	// read access flags and class index.
WITHOUT_CLASSIFICATION	//Be sure everything has been set.
WITHOUT_CLASSIFICATION	//Do the merge
WITHOUT_CLASSIFICATION	//Add this file to the addfiles Vector and add it //later at the top level of the output file.
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	// jlink output input1 ... inputN
WITHOUT_CLASSIFICATION	// To maintain compatibility with the command-line version, // we will only add files to be merged.
WITHOUT_CLASSIFICATION	/*     * Actually performs the merging of f into the output.     * f should be a zip or jar file.     */
WITHOUT_CLASSIFICATION	//Check to see that the file with name "name" exists.
WITHOUT_CLASSIFICATION	//META-INF not found in the name of the entry. Go ahead and process it.
WITHOUT_CLASSIFICATION	//Weblogic jspc does not seem to work unless u explicitly set this... // Does not take the classpath from the env.... // Am i missing something about the Java task??
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	/*     * Necessary in the case where you add a entry that     * is not compressed.     */
WITHOUT_CLASSIFICATION	//Ignore manifest entries.  They're bound to cause conflicts between //files that are being merged.  User should supply their own //manifest file when doing the merge.
WITHOUT_CLASSIFICATION	//It was the duplicate entry.
WITHOUT_CLASSIFICATION	/*     * Adds contents of a directory to the output.     */
WITHOUT_CLASSIFICATION	/*     * Gets the name of an entry in the file.  This is the real name     * which for a class is the name of the package with the class     * name appended.     */
WITHOUT_CLASSIFICATION	// see if the file is in fact a .class file, and determine its actual name.
WITHOUT_CLASSIFICATION	/*     * Adds a file to the output stream.     */
WITHOUT_CLASSIFICATION	//Make sure file exists
WITHOUT_CLASSIFICATION	/*     * A convenience method that several other methods might call.     */
WITHOUT_CLASSIFICATION	//This entry already exists. So, go with the first one.
WITHOUT_CLASSIFICATION	/*     * A method that does the work on a given entry in a mergefile.     * The big deal is to set the right parameters in the ZipEntry     * on the output stream.     */
WITHOUT_CLASSIFICATION	//Note, don't need to specify size or crc for compressed files.
WITHOUT_CLASSIFICATION	//use the systemclasspath as well, to include the ant jar
WITHOUT_CLASSIFICATION	/*     * Necessary in the case where you add a entry that     * is not compressed.     */
WITHOUT_CLASSIFICATION	//TODO Test on other versions of weblogic //TODO add more attributes to the task, to take care of all jspc options //TODO Test on Unix
WITHOUT_CLASSIFICATION	//private String compilerPath; //fully qualified name for the compiler executable
WITHOUT_CLASSIFICATION	// get all the files in the sourceDirectory
WITHOUT_CLASSIFICATION	//Weblogic.jspc calls System.exit() ... have to fork // Therefore, takes loads of time // Can pass directories at a time (*.jsp) but easily runs out of // memory on hefty dirs (even on  a Sun)
WITHOUT_CLASSIFICATION	// apply transformation
WITHOUT_CLASSIFICATION	//end class
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	// now we need to populate the compiler adapter
WITHOUT_CLASSIFICATION	// finally, lets execute the compiler!!
WITHOUT_CLASSIFICATION	// Create an instance of the compiler, redirecting output to // the project log
WITHOUT_CLASSIFICATION	// compile the source files
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//demand create vector of filesets
WITHOUT_CLASSIFICATION	// make sure that we've got a destdir
WITHOUT_CLASSIFICATION	//bind to a compiler
WITHOUT_CLASSIFICATION	//if we are a webapp, hand off to the compiler, which had better handle it
WITHOUT_CLASSIFICATION	// make sure that we've got a srcdir
WITHOUT_CLASSIFICATION	// if the compiler does its own dependency stuff, we just call it right now
WITHOUT_CLASSIFICATION	//the remainder of this method is only for compilers that need their dependency work done
WITHOUT_CLASSIFICATION	// scan source directories and dest directory to build up both copy // lists and compile lists
WITHOUT_CLASSIFICATION	//        String srcFileDir=srcFile.getParent();
WITHOUT_CLASSIFICATION	//end inner class
WITHOUT_CLASSIFICATION	// since we don't mangle extensions like the servlet does, // we need to check for keywords as class names
WITHOUT_CLASSIFICATION	// first char is more restrictive than the rest
WITHOUT_CLASSIFICATION	// this is the rest
WITHOUT_CLASSIFICATION	// If the first char is not a start of Java identifier or is _ // prepend a '_'.
WITHOUT_CLASSIFICATION	//we are forking here to be sure that if JspC calls //System.exit() it doesn't halt the build
WITHOUT_CLASSIFICATION	//tomcat4.0 gets the old mangler
WITHOUT_CLASSIFICATION	//tomcat4.1 gets the new one
WITHOUT_CLASSIFICATION	// for all other possibilities
WITHOUT_CLASSIFICATION	// append the err and output streams to the log
WITHOUT_CLASSIFICATION	// acrobatic cast.
WITHOUT_CLASSIFICATION	// set the destination directory relative from the project if needed.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// sanity check
WITHOUT_CLASSIFICATION	// plain impossible
WITHOUT_CLASSIFICATION	// Quick return - no output do nothing.
WITHOUT_CLASSIFICATION	// append the err and output streams to the log
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// If style dir is not specified we have to retrieve // the stylesheet from the classloader
WITHOUT_CLASSIFICATION	// If we are here, then the style dir is here and we // should read the stylesheet from the filesystem
WITHOUT_CLASSIFICATION	// xalan 2
WITHOUT_CLASSIFICATION	// xalan xsltc
WITHOUT_CLASSIFICATION	// jdk 1.5 xsltc
WITHOUT_CLASSIFICATION	// must be plain, ensured by TypeAttribute
WITHOUT_CLASSIFICATION	// pre JUnit 3.7
WITHOUT_CLASSIFICATION	// can be null if an error occurred in setUp
WITHOUT_CLASSIFICATION	// PlainJUnitResultFormatter
WITHOUT_CLASSIFICATION	// Snapshot of the system properties
WITHOUT_CLASSIFICATION	//add the timestamp
WITHOUT_CLASSIFICATION	//and the hostname.
WITHOUT_CLASSIFICATION	// Output properties
WITHOUT_CLASSIFICATION	// a TestSuite can contain Tests from multiple classes, // even tests with the same name - disambiguate them.
WITHOUT_CLASSIFICATION	// XMLJUnitResultFormatter
WITHOUT_CLASSIFICATION	// Do we send output to the formatters ?
WITHOUT_CLASSIFICATION	//   Attributes for basetest
WITHOUT_CLASSIFICATION	// forceLoadClass is not convenient here since it would not // properly deal with inner classes of these classes.
WITHOUT_CLASSIFICATION	/* forkMode.getValue().equals(ForkMode.PER_BATCH) */
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// execute the test and get the return code
WITHOUT_CLASSIFICATION	// execute the test and get the return code
WITHOUT_CLASSIFICATION	// null watchdog means no timeout, you'd better not check with null
WITHOUT_CLASSIFICATION	// if there is an error/failure and that it should halt, stop // everything otherwise just log a statement
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// set the default values if not specified //@todo should be moved to the test class instead.
WITHOUT_CLASSIFICATION	// Create a temporary file to pass the test cases to run to // the runner (one test case per line)
WITHOUT_CLASSIFICATION	// #31885
WITHOUT_CLASSIFICATION	// ignored.
WITHOUT_CLASSIFICATION	// in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)
WITHOUT_CLASSIFICATION	// make sure the test will be accepted as a TestCase
WITHOUT_CLASSIFICATION	// make sure the test annotation are accepted
WITHOUT_CLASSIFICATION	// will cause trouble in JDK 1.1 if omitted
WITHOUT_CLASSIFICATION	// local copy since LogOutputStream.task is private
WITHOUT_CLASSIFICATION	// this one is here because the changes to support ResourceCollections // have broken Magic's JUnitTestTask. // // The task adds a FileSet to a BatchTest instance using the // Java API and without telling the FileSet about its project // instance.  The original code would pass in project on the // call to getDirectoryScanner - which is now hidden deep into // Resources.iterator() and not reachable.
WITHOUT_CLASSIFICATION	// dummy output for the framed report // it's all done by extension...
WITHOUT_CLASSIFICATION	// conforming to NodeList interface
WITHOUT_CLASSIFICATION	// this should never happen
WITHOUT_CLASSIFICATION	// write the document
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//----- from now, the methods are all related to DOM tree manipulation
WITHOUT_CLASSIFICATION	// writers do not throw exceptions, so check for them.
WITHOUT_CLASSIFICATION	// create the dom tree
WITHOUT_CLASSIFICATION	// get all files and add them to the document
WITHOUT_CLASSIFICATION	// make sure that this is REALLY a testsuite.
WITHOUT_CLASSIFICATION	//wrong root element name // issue a warning.
WITHOUT_CLASSIFICATION	// a testcase might have failed and write a zero-length document, // It has already failed, but hey.... mm. just put a warning
WITHOUT_CLASSIFICATION	// a missing . might imply no package at all. Don't get fooled.
WITHOUT_CLASSIFICATION	// modify the name attribute and set the package
WITHOUT_CLASSIFICATION	// don't filter AssertionFailure
WITHOUT_CLASSIFICATION	// JUnit 4 support:
WITHOUT_CLASSIFICATION	// check for a static suite method first, even when using // JUnit 4
WITHOUT_CLASSIFICATION	// check if there is a suite method
WITHOUT_CLASSIFICATION	// no appropriate suite method found. We don't report any // error here since it might be perfectly normal.
WITHOUT_CLASSIFICATION	// Check for JDK 5 first. Will *not* help on JDK 1.4 // if only junit-4.0.jar in CP because in that case // linkage of whole task will already have failed! But // will help if CP has junit-3.8.2.jar:junit-4.0.jar.
WITHOUT_CLASSIFICATION	// In that case first C.fN will fail with CNFE and we // will avoid UnsupportedClassVersionError.
WITHOUT_CLASSIFICATION	// OK, fall back to JUnit 3.
WITHOUT_CLASSIFICATION	// Let's use it!
WITHOUT_CLASSIFICATION	// Use JUnit 3.
WITHOUT_CLASSIFICATION	// try to extract a test suite automatically this // will generate warnings if the class is no // suitable Test
WITHOUT_CLASSIFICATION	// had an exception constructing suite
WITHOUT_CLASSIFICATION	// Add/overlay system properties on the properties from the Ant project
WITHOUT_CLASSIFICATION	// return the stack unfiltered
WITHOUT_CLASSIFICATION	// Not strictly necessary but probably desirable. // JUnit 4-specific test GUIs will show just "failures". // But Ant's output shows "failures" vs. "errors". // We would prefer to show "failure" for things that logically are.
WITHOUT_CLASSIFICATION	// To compile on pre-JDK 4 (even though this should always succeed):
WITHOUT_CLASSIFICATION	// pre-3.4
WITHOUT_CLASSIFICATION	// JUnitTestRunner
WITHOUT_CLASSIFICATION	//rethrow
WITHOUT_CLASSIFICATION	//wrap
WITHOUT_CLASSIFICATION	// sorted by newest Kaffe version first
WITHOUT_CLASSIFICATION	// pre Kaffe 1.1.5
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// we are going to scan everything anyway
WITHOUT_CLASSIFICATION	// only scan directories that can include matched files or // directories
WITHOUT_CLASSIFICATION	// avoid double scanning of directories, can only happen in fast mode
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// This default has been good enough until Ant 1.6.3, so stick // with it
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Rats. // should not happen
WITHOUT_CLASSIFICATION	// otherwise ExecuteJava has thrown an exception
WITHOUT_CLASSIFICATION	// No includes supplied, so set it to 'matches all'
WITHOUT_CLASSIFICATION	// always start from the current ftp working dir
WITHOUT_CLASSIFICATION	// put in the newroots vector the include patterns without // wildcard tokens
WITHOUT_CLASSIFICATION	// construct it
WITHOUT_CLASSIFICATION	// cool case, //we do not need to scan all the subdirs in the relative path
WITHOUT_CLASSIFICATION	//this should not happen, except if parent has been deleted by another process
WITHOUT_CLASSIFICATION	// we are already in the right path, so the second parameter // is false
WITHOUT_CLASSIFICATION	// hit a hidden file assume not a symlink
WITHOUT_CLASSIFICATION	// getRelativePath also finds about symlinks
WITHOUT_CLASSIFICATION	// warn that selectors are not supported
WITHOUT_CLASSIFICATION	// If we are doing a listing, we need the output stream created now.
WITHOUT_CLASSIFICATION	// get files from filesets
WITHOUT_CLASSIFICATION	// find first non cached dir
WITHOUT_CLASSIFICATION	// check if dir exists by trying to change into it.
WITHOUT_CLASSIFICATION	// could not change to it - try to create it
WITHOUT_CLASSIFICATION	// create a local temporary file
WITHOUT_CLASSIFICATION	// see if we should issue a chmod command
WITHOUT_CLASSIFICATION	// ignore it
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// ignore it
WITHOUT_CLASSIFICATION	// delegate the deletion of the local temp file to the delete task // because of race conditions occuring on Windows
WITHOUT_CLASSIFICATION	// For Microsoft's Ftp-Service an Array with length 0 is // returned if configured to return listings in "MS-DOS"-Format
WITHOUT_CLASSIFICATION	// If we are sending files, then assume out of date. // If we are getting files, then throw an error
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// codes 521, 550 and 553 can be produced by FTP Servers //  to indicate that an attempt to create a directory has //  failed because the directory already exists.
WITHOUT_CLASSIFICATION	// If an initial command was configured then send it. // Some FTP servers offer different modes of operation, // E.G. switching between a UNIX file system mode and // a legacy file system.
WITHOUT_CLASSIFICATION	// For a unix ftp server you can set the default mask for all files // created.
WITHOUT_CLASSIFICATION	// If the action is MK_DIR, then the specified remote // directory is the directory to create.
WITHOUT_CLASSIFICATION	// in this case we want to find how much time span there is between local // and remote
WITHOUT_CLASSIFICATION	//socks
WITHOUT_CLASSIFICATION	//this may be a java1.4 thingy only
WITHOUT_CLASSIFICATION	// simple one-shot execution
WITHOUT_CLASSIFICATION	// need nested read/write elements
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//here we'd parse the output from change -o into submit -i //in order to support default change.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc //ToDo: If dealing with default cl need to parse out <enter description here>
WITHOUT_CLASSIFICATION	/* -n */
WITHOUT_CLASSIFICATION	//Remove any non-numerical chars - should leave the change number
WITHOUT_CLASSIFICATION	// this type of output might happen // Change 18 renamed change 20 and submitted.
WITHOUT_CLASSIFICATION	//Match "//" for begining of depot filespec
WITHOUT_CLASSIFICATION	// we need to escape the description in case there are /
WITHOUT_CLASSIFICATION	// NOTE kirk@radik.com 04-April-2001 -- If you put in the -s, you // have to start running through regular expressions here. Much easier // to just not include the scripting information than to try to add it // and strip it later.
WITHOUT_CLASSIFICATION	//EoF
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc //Input //Output //Error // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* Here we can either revert any unchanged files in a changelist         * or         * any files regardless of whether they have been changed or not         *         *         * The whole process also accepts a p4 filespec         */
WITHOUT_CLASSIFICATION	/* -a */
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* -n */
WITHOUT_CLASSIFICATION	/* -n */
WITHOUT_CLASSIFICATION	/* -f */
WITHOUT_CLASSIFICATION	/* -t */
WITHOUT_CLASSIFICATION	/* -v */
WITHOUT_CLASSIFICATION	//We have to create a unlocked label first
WITHOUT_CLASSIFICATION	//Now lock if required
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Massage PCLI lvf output transforming '\' to '/' so get command works appropriately
WITHOUT_CLASSIFICATION	//Read back the label spec from perforce, //Replace Options //Submit back to Perforce
WITHOUT_CLASSIFICATION	//when running labelsync, if view elements are in sync, //Perforce produces a line of output //looking like this one : //error: //depot/file2 - label in sync.
WITHOUT_CLASSIFICATION	//sync says "error:" when a file is up-to-date
WITHOUT_CLASSIFICATION	//sometimes there's "info1:
WITHOUT_CLASSIFICATION	//P4 runtime directives
WITHOUT_CLASSIFICATION	// Perforce task directives
WITHOUT_CLASSIFICATION	//P4 g-opts and cmd opts (rtfm)
WITHOUT_CLASSIFICATION	//Setters called by Ant
WITHOUT_CLASSIFICATION	//Get default P4 settings from environment - Mark would have done something cool with //introspection here.....:-)
WITHOUT_CLASSIFICATION	// reset error flags before executing the command
WITHOUT_CLASSIFICATION	//Check API for these - it's how CVS does it...
WITHOUT_CLASSIFICATION	/*     * Constant for the PCLI listversionedfiles recursive i a format "get" understands     */
WITHOUT_CLASSIFICATION	// private static final String PCLI_LVF_ARGS = "lvf -z -aw";
WITHOUT_CLASSIFICATION	// Check workspace exists // Launch PCLI listversionedfiles -z -aw // Capture output // build the command line from what we got the format is
WITHOUT_CLASSIFICATION	// default pvcs project is "/"
WITHOUT_CLASSIFICATION	// Create folders in workspace
WITHOUT_CLASSIFICATION	// Launch get on output captured from PCLI lvf
WITHOUT_CLASSIFICATION	// Extract the name of the directory from the filename
WITHOUT_CLASSIFICATION	// Change these through their GET and SET methods.
WITHOUT_CLASSIFICATION	// These fields deal with includes and excludes
WITHOUT_CLASSIFICATION	// Check all of the properties that are required.
WITHOUT_CLASSIFICATION	// Check to see if the target directory exists.
WITHOUT_CLASSIFICATION	// Search the items on this server.
WITHOUT_CLASSIFICATION	// Disconnect from the server.
WITHOUT_CLASSIFICATION	// Tell how many files were checked out.
WITHOUT_CLASSIFICATION	// Optional; logOn() connects if necessary.
WITHOUT_CLASSIFICATION	// Logon using specified user name and password.
WITHOUT_CLASSIFICATION	// We always display the ItemID (OBJECT_ID) and primary descriptor.
WITHOUT_CLASSIFICATION	//If a working directory was specified then add it to the command line
WITHOUT_CLASSIFICATION	// Checking for "\ // or           "/ // or           "X:\...
WITHOUT_CLASSIFICATION	// If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	// after you are all of the properties are ok, do your thing // with StarTeam.  If there are any kind of exceptions then // send the message to the project log.
WITHOUT_CLASSIFICATION	// For performance reasons, it is important to pre-fetch all the // properties we'll need for all the items we'll be searching.
WITHOUT_CLASSIFICATION	// We'll need this item type's primary descriptor.
WITHOUT_CLASSIFICATION	// Does this item type have a secondary descriptor? // If so, we'll need it.
WITHOUT_CLASSIFICATION	// Now, build an array of the property names.
WITHOUT_CLASSIFICATION	// Pre-fetch the item properties and cache them.
WITHOUT_CLASSIFICATION	// Now, search for items in the selected folder.
WITHOUT_CLASSIFICATION	// Free up the memory used by the cached items.
WITHOUT_CLASSIFICATION	// convert whatever separator char is in starteam to that of the target system.
WITHOUT_CLASSIFICATION	// If it ends with separator then strip it off
WITHOUT_CLASSIFICATION	// Replace the projectName in the file's absolute path to the viewName. // This makes the root target of a checkout operation equal to: // targetFolder + dirName
WITHOUT_CLASSIFICATION	// only want to do this the first time
WITHOUT_CLASSIFICATION	// Process all items in this folder.
WITHOUT_CLASSIFICATION	// Process all subfolders recursively if recursion is on.
WITHOUT_CLASSIFICATION	// Get descriptors for this item type.
WITHOUT_CLASSIFICATION	// VERBOSE MODE ONLY
WITHOUT_CLASSIFICATION	// Show folder only if changed.
WITHOUT_CLASSIFICATION	// Show if the file is locked.
WITHOUT_CLASSIFICATION	// END VERBOSE ONLY
WITHOUT_CLASSIFICATION	// add -command CheckOutFile to the commandline
WITHOUT_CLASSIFICATION	// Finally, show the Item properties ... // Always show the ItemID.
WITHOUT_CLASSIFICATION	// Show the primary descriptor. // There should always be one.
WITHOUT_CLASSIFICATION	// Show the secondary descriptor, if there is one. // Some item types have one, some don't.
WITHOUT_CLASSIFICATION	// Change the item to be checked out to a StarTeam File.
WITHOUT_CLASSIFICATION	// The local file name is simply the local target path (tgt) which has // been passed recursively down from the top of the tree, with the item's name appended.
WITHOUT_CLASSIFICATION	// Begin SET and GET methods
WITHOUT_CLASSIFICATION	// Begin filter getters and setters
WITHOUT_CLASSIFICATION	// Check if need to set the loader
WITHOUT_CLASSIFICATION	// Now create the scriptRunner
WITHOUT_CLASSIFICATION	// find the script repository - it is stored in the project
WITHOUT_CLASSIFICATION	/*            // try the context classloader            ClassLoader loader                = Thread.currentThread().getContextClassLoader();            */
WITHOUT_CLASSIFICATION	// If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	// add -command CheckInFile to the commandline
WITHOUT_CLASSIFICATION	// add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	// add -file xxxxx to the commandline
WITHOUT_CLASSIFICATION	// add -command CheckInProject to the commandline
WITHOUT_CLASSIFICATION	// look for a recursive option
WITHOUT_CLASSIFICATION	// look for a recursive option
WITHOUT_CLASSIFICATION	// Look for a comment
WITHOUT_CLASSIFICATION	// soscmd Command options
WITHOUT_CLASSIFICATION	// soscmd Option flags
WITHOUT_CLASSIFICATION	// add -command GetFile to the commandline
WITHOUT_CLASSIFICATION	// look for a version attribute
WITHOUT_CLASSIFICATION	//add -revision xxxxx to the commandline
WITHOUT_CLASSIFICATION	// add -command GetProject to the commandline
WITHOUT_CLASSIFICATION	// look for a label option
WITHOUT_CLASSIFICATION	// make sure localDir exists, create it if it doesn't
WITHOUT_CLASSIFICATION	// This is the exit status
WITHOUT_CLASSIFICATION	// Use the OS VM launcher so we get environment variables
WITHOUT_CLASSIFICATION	// Get the path to the soscmd(.exe)
WITHOUT_CLASSIFICATION	// SOS server address is required
WITHOUT_CLASSIFICATION	// VSS Info is required
WITHOUT_CLASSIFICATION	// VSS project is required
WITHOUT_CLASSIFICATION	// -verbose
WITHOUT_CLASSIFICATION	// Disable Compression
WITHOUT_CLASSIFICATION	// If -soshome was not specified then we can look for nocache
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	// look for a recursive option
WITHOUT_CLASSIFICATION	// Look for a comment
WITHOUT_CLASSIFICATION	// -verbose
WITHOUT_CLASSIFICATION	// The SOS class knows that the SOS server needs the password flag, // even if there is no password ,so we send a " "
WITHOUT_CLASSIFICATION	// add -command CheckOutProject to the commandline
WITHOUT_CLASSIFICATION	// add -command AddLabel to the commandline
WITHOUT_CLASSIFICATION	// a label is required
WITHOUT_CLASSIFICATION	// get the list of files in the dir
WITHOUT_CLASSIFICATION	// get a random number between 0 and the number of files
WITHOUT_CLASSIFICATION	// set the source to the file at that location
WITHOUT_CLASSIFICATION	// Empty block
WITHOUT_CLASSIFICATION	//System.exit(0);
WITHOUT_CLASSIFICATION	// build successfull!
WITHOUT_CLASSIFICATION	/*AbstractSshMessage*/
WITHOUT_CLASSIFICATION	// dir does not exist.
WITHOUT_CLASSIFICATION	// only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	// get I/O streams for remote scp
WITHOUT_CLASSIFICATION	// this indicates an error.
WITHOUT_CLASSIFICATION	// appears that the next token is not used and it's zero.
WITHOUT_CLASSIFICATION	// read a content of lfile
WITHOUT_CLASSIFICATION	// Ignored
WITHOUT_CLASSIFICATION	// do nothing;
WITHOUT_CLASSIFICATION	// didn't receive any response
WITHOUT_CLASSIFICATION	// execute the command
WITHOUT_CLASSIFICATION	// wait for it to finish
WITHOUT_CLASSIFICATION	// ran out of time
WITHOUT_CLASSIFICATION	// completed successfully
WITHOUT_CLASSIFICATION	// user:password@host:/path notation
WITHOUT_CLASSIFICATION	// no password, will require passphrase
WITHOUT_CLASSIFICATION	// skip
WITHOUT_CLASSIFICATION	// send "C0644 filesize filename", where filename should not include '/'
WITHOUT_CLASSIFICATION	// send a content of lfile
WITHOUT_CLASSIFICATION	// C0644 filesize filename - header for a regular file // T time 0 time 0\n - present if perserve time. // D directory - this is the header for a directory.
WITHOUT_CLASSIFICATION	// swallow if there was an error before so that // original error will be passed up
WITHOUT_CLASSIFICATION	// since filesize keeps on decreasing we have to store the // initial filesize
WITHOUT_CLASSIFICATION	// b may be 0 for success, //          1 for error, //          2 for fatal error,
WITHOUT_CLASSIFICATION	// like <exec> // like <exec> // like <exec>
WITHOUT_CLASSIFICATION	//log(message, Project.MSG_DEBUG);
WITHOUT_CLASSIFICATION	// we want this to have a false default, unlike for Checkin.
WITHOUT_CLASSIFICATION	// If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	// We try to update the status once to give StarTeam // another chance.
WITHOUT_CLASSIFICATION	// once we find a folder that isn't in the repository, // we know we can add it.
WITHOUT_CLASSIFICATION	// once we find a folder that isn't in the repository, // we know we can add it.
WITHOUT_CLASSIFICATION	// if a label has been supplied, use it to configure the view // otherwise use current view
WITHOUT_CLASSIFICATION	// if a date has been supplied use a view configured to the date.
WITHOUT_CLASSIFICATION	// if a date has been supplied use a view configured to the date.
WITHOUT_CLASSIFICATION	// otherwise, use this view configured as the tip.
WITHOUT_CLASSIFICATION	// otherwise, use this view configured as the tip.
WITHOUT_CLASSIFICATION	// For all Files in this folder, we need to check // if there have been modifications.
WITHOUT_CLASSIFICATION	// Now we recursively call this method on all sub folders in this // folder unless recursive attribute is off.
WITHOUT_CLASSIFICATION	// handle the files so they appear first
WITHOUT_CLASSIFICATION	// now do it again for the directories so they appear last.
WITHOUT_CLASSIFICATION	// Create the new label and update the repository
WITHOUT_CLASSIFICATION	// write a Properties file in each directory:
WITHOUT_CLASSIFICATION	// Create an instance of the rmic, redirecting output to // the project log
WITHOUT_CLASSIFICATION	// CheckStyle:MethodNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// once we find a folder that isn't in the repository, // we know we can add it.
WITHOUT_CLASSIFICATION	//ATTRIBUTES settable from ant.
WITHOUT_CLASSIFICATION	// if a label has been supplied and it is a view label, use it // to configure the view
WITHOUT_CLASSIFICATION	// if a label has been supplied and it is a revision label, use the raw // the view as the snapshot
WITHOUT_CLASSIFICATION	// prune away any files not belonging to the revision label // this is one ugly API from Starteam SDK
WITHOUT_CLASSIFICATION	// PR 31965 says that it can return null
WITHOUT_CLASSIFICATION	// no root local mapping has been specified.
WITHOUT_CLASSIFICATION	// Inspect everything in the root folder and then recursively
WITHOUT_CLASSIFICATION	// Tell user what he is doing
WITHOUT_CLASSIFICATION	// set the local folder.
WITHOUT_CLASSIFICATION	// set the local folder.
WITHOUT_CLASSIFICATION	// ATTRIBUTES
WITHOUT_CLASSIFICATION	// create a hashtable to group them by parent directory:
WITHOUT_CLASSIFICATION	// else lnk exists, do nothing
WITHOUT_CLASSIFICATION	// get an Iterator of file objects representing links (canonical):
WITHOUT_CLASSIFICATION	//iterate through the names, get the matching values
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. ///////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////// // INCLUDE-EXCLUDE processing ///////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// find the starteam folder specified to be the root of the // operation.  Throw if it can't be found.
WITHOUT_CLASSIFICATION	// either use default path or root local mapping, // which is now embedded in the root folder
WITHOUT_CLASSIFICATION	///////////////////////////////////////////////////////// // GET/SET methods. // Setters, of course are where ant user passes in values. /////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// fill up a Properties object with link and resource names:
WITHOUT_CLASSIFICATION	// find the resource of the existing link:
WITHOUT_CLASSIFICATION	// rename the resource, thus breaking the link:
WITHOUT_CLASSIFICATION	// delete the (now) broken link:
WITHOUT_CLASSIFICATION	// return the resource to its original name:
WITHOUT_CLASSIFICATION	// loop through the supplied file sets:
WITHOUT_CLASSIFICATION	// load included files as properties files:
WITHOUT_CLASSIFICATION	// -GL
WITHOUT_CLASSIFICATION	// -GL
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -O-
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -V
WITHOUT_CLASSIFICATION	// -W
WITHOUT_CLASSIFICATION	// -W
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -G
WITHOUT_CLASSIFICATION	// -GWS or -GWR
WITHOUT_CLASSIFICATION	//set to empty str if no local path return
WITHOUT_CLASSIFICATION	//make sure m_LocalDir exists, create it if it doesn't
WITHOUT_CLASSIFICATION	// Use the OS launcher so we get environment variables
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// -C
WITHOUT_CLASSIFICATION	// -C
WITHOUT_CLASSIFICATION	// -L Specify the new label on the command line (instead of being prompted)
WITHOUT_CLASSIFICATION	// -V Label an existing file or project version
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	// pre Kaffe 1.1.5
WITHOUT_CLASSIFICATION	// -GL
WITHOUT_CLASSIFICATION	// Write the contents to our master list of links // This method assumes that all links are defined in // terms of absolute paths, or paths relative to the // working directory:
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Get VSS items [-G] [-H] [-I-] [-N] [-O] [-R] [-V] [-W] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -O-
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -R
WITHOUT_CLASSIFICATION	// -V
WITHOUT_CLASSIFICATION	// -W
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -G
WITHOUT_CLASSIFICATION	// -GWS or -GWR
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// Use getShortLabel() so labels longer then 30 char are truncated // and the user is warned
WITHOUT_CLASSIFICATION	// ss.exe exits with '100', when files have been skipped // so we have to ignore the failure
WITHOUT_CLASSIFICATION	// If location of ss.ini is specified we need to set the // environment-variable SSDIR to this value
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Label VSS items [-C] [-H] [-I-] [-Llabel] [-N] [-O] [-V] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// -C
WITHOUT_CLASSIFICATION	// -C
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir ...
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Checkin VSS items [-H] [-C] [-I-] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// -VL
WITHOUT_CLASSIFICATION	// -B / -D / -F-
WITHOUT_CLASSIFICATION	// -O
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a localPath ...
WITHOUT_CLASSIFICATION	// -G-
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir...
WITHOUT_CLASSIFICATION	// build the command line from what we got // the format is: // ss Create VSS items [-C] [-H] [-I-] [-N] [-O] [-S] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// pre Kaffe 1.1.2
WITHOUT_CLASSIFICATION	// only supported since Kaffe 1.1.2
WITHOUT_CLASSIFICATION	//handle the many different stub options.
WITHOUT_CLASSIFICATION	//default is compatibility
WITHOUT_CLASSIFICATION	//anything else
WITHOUT_CLASSIFICATION	//do nothing with the value? or go -v+stubVersion??
WITHOUT_CLASSIFICATION	//set the non-null stubOption
WITHOUT_CLASSIFICATION	// we know that name.endsWith(".class")
WITHOUT_CLASSIFICATION	// Combine the build classpath with the system classpath, in an // order determined by the value of build.sysclasspath
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss CP VSS items [-H] [-I-] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	//for java1.5+, we generate compatible stubs, that is, unless //the caller asked for IDL or IIOP support.
WITHOUT_CLASSIFICATION	// JRMP with simple naming convention
WITHOUT_CLASSIFICATION	/*                 * I know, this is not necessary, but I prefer it explicit (SB)                 */
WITHOUT_CLASSIFICATION	// no package
WITHOUT_CLASSIFICATION	// no package
WITHOUT_CLASSIFICATION	// only stub, no tie
WITHOUT_CLASSIFICATION	/*                         * stub is derived from implementation,                         * tie from interface name.                         */
WITHOUT_CLASSIFICATION	//rely on RMIC being on the path
WITHOUT_CLASSIFICATION	//set up the args
WITHOUT_CLASSIFICATION	// Create an instance of the rmic
WITHOUT_CLASSIFICATION	//convert to lower case in the English locale,
WITHOUT_CLASSIFICATION	//handle default specially by choosing the sun or kaffe compiler
WITHOUT_CLASSIFICATION	//no match? ask for the non-lower-cased type
WITHOUT_CLASSIFICATION	//do the system assertions
WITHOUT_CLASSIFICATION	//do the system assertions
WITHOUT_CLASSIFICATION	//do the system assertions
WITHOUT_CLASSIFICATION	//now any inner assertions
WITHOUT_CLASSIFICATION	//now any inner assertions
WITHOUT_CLASSIFICATION	//now any inner assertions
WITHOUT_CLASSIFICATION	//catch invalidness
WITHOUT_CLASSIFICATION	//see if it is a package or a class
WITHOUT_CLASSIFICATION	//packages get a ... prefix
WITHOUT_CLASSIFICATION	//append the ... suffix if not there already
WITHOUT_CLASSIFICATION	//classes just get the classname
WITHOUT_CLASSIFICATION	//-- Fields ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	//-- Methods ---------------------------------------------------------------
WITHOUT_CLASSIFICATION	// Add all nested elements to our catalog
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// New behavior for delayed task creation. Description // will be evaluated in Project.getDescription()
WITHOUT_CLASSIFICATION	// Append the classpath of the nested catalog
WITHOUT_CLASSIFICATION	// Append the catalog path of the nested catalog
WITHOUT_CLASSIFICATION	// At this point we are probably in failure mode, but // try to use the bare URI as a last gasp
WITHOUT_CLASSIFICATION	// The Apache resolver is present - Need to check if it can // be seen by the catalog resolver class. Start by getting // the actual loader
WITHOUT_CLASSIFICATION	// load the base class through this loader.
WITHOUT_CLASSIFICATION	// and find its actual loader
WITHOUT_CLASSIFICATION	// // Success!  The xml-commons resolver library is // available, so use it. //
WITHOUT_CLASSIFICATION	// // The xml-commons resolver library is not // available, so we can't use it. //
WITHOUT_CLASSIFICATION	// the following line seems to be necessary on Windows under JDK 1.2
WITHOUT_CLASSIFICATION	// // The ResourceLocation may specify a relative path for its // location attribute.  This is resolved using the appropriate // base. //
WITHOUT_CLASSIFICATION	// // for classpath lookup we ignore the base directory //
WITHOUT_CLASSIFICATION	// // The ResourceLocation may specify a relative url for its // location attribute.  This is resolved using the appropriate // base. //
WITHOUT_CLASSIFICATION	// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //
WITHOUT_CLASSIFICATION	// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched.  Of // course, if there is no base, no need to make a // copy... // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //
WITHOUT_CLASSIFICATION	// Parse each catalog listed in nested <catalogpath> elements
WITHOUT_CLASSIFICATION	//-- XMLCatalog
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	// No includes supplied, so set it to 'matches all'
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* package-private for now */
WITHOUT_CLASSIFICATION	/* package-private for now */
WITHOUT_CLASSIFICATION	// special case in ZIPs, we do not want this thing included
WITHOUT_CLASSIFICATION	// first check if the archive needs to be scanned again
WITHOUT_CLASSIFICATION	//do not use a FileResource b/c it pulls File info from the filesystem:
WITHOUT_CLASSIFICATION	// spare scanning again and again
WITHOUT_CLASSIFICATION	/* cached DirectoryScanner instance for our own Project only */
WITHOUT_CLASSIFICATION	// SelectorContainer methods
WITHOUT_CLASSIFICATION	// WIN9x uses a bat file for executing commands
WITHOUT_CLASSIFICATION	// empty path return empty string
WITHOUT_CLASSIFICATION	//no command? no string
WITHOUT_CLASSIFICATION	// parse with a simple finite state machine
WITHOUT_CLASSIFICATION	//inherit doc
WITHOUT_CLASSIFICATION	//can't have zero-length token
WITHOUT_CLASSIFICATION	// we have another token, let's parse it.
WITHOUT_CLASSIFICATION	// should always be the case...
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/**     * Invoked by IntrospectionHelper for <code>setXXX(Path p)</code>     * attribute setters.     * @param p the <code>Project</code> for this path.     * @param path the <code>String</code> path definition.     */
WITHOUT_CLASSIFICATION	// ignore: don't trust anyone
WITHOUT_CLASSIFICATION	// last: don't trust the developer
WITHOUT_CLASSIFICATION	// newer versions of Kaffe (1.1.1+) won't have this, // but this will be sorted by FileSet anyway.
WITHOUT_CLASSIFICATION	// JDK 1.2+ seems to set java.home to the JRE directory.
WITHOUT_CLASSIFICATION	// Just keep the old version as well and let addExisting // sort it out.
WITHOUT_CLASSIFICATION	// Sun's and Apple's 1.4 have JCE and JSSE in separate jars.
WITHOUT_CLASSIFICATION	// IBM's 1.4 has rt.jar split into 4 smaller jars and a combined // JCE/JSSE in security.jar.
WITHOUT_CLASSIFICATION	// Added for MacOS X
WITHOUT_CLASSIFICATION	//remove any null elements
WITHOUT_CLASSIFICATION	//create the list
WITHOUT_CLASSIFICATION	//fill it
WITHOUT_CLASSIFICATION	//convert to an array
WITHOUT_CLASSIFICATION	// properties are part of the vm options...
WITHOUT_CLASSIFICATION	//boot classpath
WITHOUT_CLASSIFICATION	//main classpath
WITHOUT_CLASSIFICATION	//now any assertions are added
WITHOUT_CLASSIFICATION	// this is the classname to run as well as its arguments. // in case of 'executeJar', the executable is a jar file.
WITHOUT_CLASSIFICATION	// cloned system properties
WITHOUT_CLASSIFICATION	// classpath is "-classpath <classpath>" -> 2 args
WITHOUT_CLASSIFICATION	// bootclasspath is "-Xbootclasspath:<classpath>" -> 1 arg
WITHOUT_CLASSIFICATION	// jar execution requires an additional -jar option
WITHOUT_CLASSIFICATION	/*<? extends EnumeratedAttribute>*/
WITHOUT_CLASSIFICATION	//end nested class
WITHOUT_CLASSIFICATION	// Add this PropertySet's nested PropertySets' property names.
WITHOUT_CLASSIFICATION	//make a copy...
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Gotta atleast put in the proper spelling :-P
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// If this TransformOperation has DrawOperation children // then Rotate the first child and return.
WITHOUT_CLASSIFICATION	// If this TransformOperation has DrawOperation children // then Rotate the first child and return.
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	// change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	//-- Fields ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	//-- Methods ---------------------------------------------------------------
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF
WITHOUT_CLASSIFICATION	// may be null if a system property has been added // after the project instance has been initialized
WITHOUT_CLASSIFICATION	// Add this PropertySet's property names.
WITHOUT_CLASSIFICATION	//map the names
WITHOUT_CLASSIFICATION	// Create one NameEntry in the appropriate pattern list for each // line in the file.
WITHOUT_CLASSIFICATION	// Get a FileReader
WITHOUT_CLASSIFICATION	//Ignore exception
WITHOUT_CLASSIFICATION	//-- ResourceLocation
WITHOUT_CLASSIFICATION	// Add base set of permissions
WITHOUT_CLASSIFICATION	/*                     if the permission was not explicitly granted or revoked                     the original security manager will do its work                    */
WITHOUT_CLASSIFICATION	// None of the actions revoked, so all allowed.
WITHOUT_CLASSIFICATION	//default true:
WITHOUT_CLASSIFICATION	//default false:
WITHOUT_CLASSIFICATION	//default false:
WITHOUT_CLASSIFICATION	// The regular expression factory
WITHOUT_CLASSIFICATION	// temporary variable
WITHOUT_CLASSIFICATION	// This is included
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//- ApacheCatalog
WITHOUT_CLASSIFICATION	// // If you don't do this, you get all sorts of annoying // warnings about a missing properties file.  However, it // seems to work just fine with default values.  Ultimately, // we should probably include a "CatalogManager.properties" // file in the ant jarfile with some default property // settings.  See CatalogManager.java for more details. //
WITHOUT_CLASSIFICATION	// // Make sure CatalogResolver instantiates ApacheCatalog, // rather than a plain Catalog //
WITHOUT_CLASSIFICATION	// debug // CatalogManager.getStaticManager().setVerbosity(4);
WITHOUT_CLASSIFICATION	// Pass in reference to ourselves so we can be called back.
WITHOUT_CLASSIFICATION	//-- ApacheCatalogResolver
WITHOUT_CLASSIFICATION	//sorted bag impl. borrowed from commons-collections TreeBag:
WITHOUT_CLASSIFICATION	/* now check each Resource in case the child only           lets through files from any children IT may have: */
WITHOUT_CLASSIFICATION	//?
WITHOUT_CLASSIFICATION	//not using the accessor in this case to avoid side effects
WITHOUT_CLASSIFICATION	/*package-private*/
WITHOUT_CLASSIFICATION	//new oata.util.ReaderInputStream(new InputStreamReader(
WITHOUT_CLASSIFICATION	//, encoding), encoding);
WITHOUT_CLASSIFICATION	//first the easy way, if all children are filesystem-only, return true:
WITHOUT_CLASSIFICATION	//preserve order-encountered using a list; enforce set logic manually:
WITHOUT_CLASSIFICATION	/* cached DirectoryScanner instance */
WITHOUT_CLASSIFICATION	//if no nested, natural order:
WITHOUT_CLASSIFICATION	//dummy
WITHOUT_CLASSIFICATION	//implement ResourceSelector; inherit doc
WITHOUT_CLASSIFICATION	// First, check that all elements are correctly configured
WITHOUT_CLASSIFICATION	//if either of them is missing, they are different
WITHOUT_CLASSIFICATION	// different size =>different files
WITHOUT_CLASSIFICATION	//same date if dest timestamp is within granularity of the srcfile
WITHOUT_CLASSIFICATION	// different dates => different files
WITHOUT_CLASSIFICATION	//here do a bulk comparison
WITHOUT_CLASSIFICATION	// At this point, we know we have a tie.
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// If you felt daring, you could cache the basedir absolute path
WITHOUT_CLASSIFICATION	// Sanity check. Ditch it if you want faster performance
WITHOUT_CLASSIFICATION	// Determine file whose out-of-dateness is to be checked
WITHOUT_CLASSIFICATION	// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering
WITHOUT_CLASSIFICATION	// If filename does not match the To attribute of the mapper // then filter it out of the files we are considering
WITHOUT_CLASSIFICATION	// Sanity check
WITHOUT_CLASSIFICATION	// Sanity check
WITHOUT_CLASSIFICATION	// Determine file whose existence is to be checked
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */
WITHOUT_CLASSIFICATION	// Directory size never selected for
WITHOUT_CLASSIFICATION	/* You wish! */
WITHOUT_CLASSIFICATION	// check millis and only set it once.
WITHOUT_CLASSIFICATION	// When str starts with a File.separator, pattern has to start with a // File.separator. // When pattern starts with a File.separator, str has to start with a // File.separator.
WITHOUT_CLASSIFICATION	// up to first '**'
WITHOUT_CLASSIFICATION	// up to first '**'
WITHOUT_CLASSIFICATION	// String is exhausted
WITHOUT_CLASSIFICATION	// String is exhausted
WITHOUT_CLASSIFICATION	// String is exhausted
WITHOUT_CLASSIFICATION	// String not exhausted, but pattern is. Failure.
WITHOUT_CLASSIFICATION	// String not exhausted, but pattern is. Failure.
WITHOUT_CLASSIFICATION	// up to last '**'
WITHOUT_CLASSIFICATION	// '**/**' situation, so skip one
WITHOUT_CLASSIFICATION	// No '*'s, so we make a shortcut
WITHOUT_CLASSIFICATION	// Pattern and string do not have the same size
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// String matches against pattern
WITHOUT_CLASSIFICATION	// throw BuildException on error
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd
WITHOUT_CLASSIFICATION	// Find the pattern between padIdxStart & padIdxTmp in str between // strIdxStart & strIdxEnd
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Character mismatch
WITHOUT_CLASSIFICATION	// Pattern contains only '*', which matches anything
WITHOUT_CLASSIFICATION	// Process characters before first star
WITHOUT_CLASSIFICATION	// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	// All characters in the string are used. Check if only '*'s are // left in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	// Process characters after last star
WITHOUT_CLASSIFICATION	// process pattern between stars. padIdxStart and patIdxEnd point // always to a '*'.
WITHOUT_CLASSIFICATION	// Two stars next to each other, skip the first one.
WITHOUT_CLASSIFICATION	// All characters in the string are used. Check if only '*'s are left // in the pattern. If so, we succeeded. Otherwise failure.
WITHOUT_CLASSIFICATION	/*++*/
WITHOUT_CLASSIFICATION	// Creation is done here rather than in isSelected() because some // containers may do a validation pass before running isSelected(), // but we need to check for the existence of the created class.
WITHOUT_CLASSIFICATION	// We know that dynselector must be non-null if no error message
WITHOUT_CLASSIFICATION	// Deal with if and unless properties first
WITHOUT_CLASSIFICATION	// -----  attributes  -----
WITHOUT_CLASSIFICATION	// ----- internal member variables -----
WITHOUT_CLASSIFICATION	// -----  constructors  -----
WITHOUT_CLASSIFICATION	// ----- configuration  -----
WITHOUT_CLASSIFICATION	// normal use inside Ant
WITHOUT_CLASSIFICATION	// set self as a BuildListener to delay cachefile saves
WITHOUT_CLASSIFICATION	// no reference to project - e.g. during normal JUnit tests
WITHOUT_CLASSIFICATION	// this is a *.* parameter for later use
WITHOUT_CLASSIFICATION	// specify the algorithm classname
WITHOUT_CLASSIFICATION	// use Algorithm defined via name
WITHOUT_CLASSIFICATION	// use Algorithm specified by classname
WITHOUT_CLASSIFICATION	// nothing specified - use default
WITHOUT_CLASSIFICATION	// else nothing to do
WITHOUT_CLASSIFICATION	// use Algorithm defined via name
WITHOUT_CLASSIFICATION	// // -----  Set the main attributes, pattern '*'  ----- //
WITHOUT_CLASSIFICATION	// use Algorithm specified by classname
WITHOUT_CLASSIFICATION	// nothing specified - use default
WITHOUT_CLASSIFICATION	// specify the cache classname
WITHOUT_CLASSIFICATION	// use Cache defined via name
WITHOUT_CLASSIFICATION	// use Cache specified by classname
WITHOUT_CLASSIFICATION	// specify the comparator classname
WITHOUT_CLASSIFICATION	// // -----  Set the special attributes, pattern '*.*'  ----- //
WITHOUT_CLASSIFICATION	// load the specified class
WITHOUT_CLASSIFICATION	// -----  the selection work  -----
WITHOUT_CLASSIFICATION	// We have a 'resourced' file, so reconvert it and use // the 'old' implementation.
WITHOUT_CLASSIFICATION	// You can not compute a value for a directory
WITHOUT_CLASSIFICATION	// Get the values and do the comparison
WITHOUT_CLASSIFICATION	// Maybe update the cache
WITHOUT_CLASSIFICATION	// -----  attribute and nested element support  -----
WITHOUT_CLASSIFICATION	// the usual classloader
WITHOUT_CLASSIFICATION	// additional use the provided classpath
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// ----- 'beautiful' output -----
WITHOUT_CLASSIFICATION	// ----- BuildListener interface methods -----
WITHOUT_CLASSIFICATION	// The EnumeratedAttributes for the three interface implementations. // Name-Classname mapping is done in the configure() method.
WITHOUT_CLASSIFICATION	// -----  member variables  -----
WITHOUT_CLASSIFICATION	// -----  member variables  -----
WITHOUT_CLASSIFICATION	// -----  Algorithm-Configuration  -----
WITHOUT_CLASSIFICATION	// -----  Algorithm-Configuration  -----
WITHOUT_CLASSIFICATION	// -----  Logic  -----
WITHOUT_CLASSIFICATION	// -----  Logic  -----
WITHOUT_CLASSIFICATION	// implementation adapted from ...taskdefs.Checksum, thanks to Magesh for hint
WITHOUT_CLASSIFICATION	// Read the file
WITHOUT_CLASSIFICATION	// -----  member variables - configuration  -----
WITHOUT_CLASSIFICATION	// -----  member variables - internal use  -----
WITHOUT_CLASSIFICATION	// -----  Constructors  -----
WITHOUT_CLASSIFICATION	// -----  Cache-Configuration  -----
WITHOUT_CLASSIFICATION	// -----  Data Access
WITHOUT_CLASSIFICATION	// after loading the cache is up to date with the file
WITHOUT_CLASSIFICATION	// -----  additional  -----
WITHOUT_CLASSIFICATION	// swallow as this simply doesn't seem to be Kaffe
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// find the line breaks and pass other chars through in blocks
WITHOUT_CLASSIFICATION	// either end of buffer or a line separator char
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Because the content is only read the file will not be damaged. I tested // with JPG, ZIP and PDF as binary files.
WITHOUT_CLASSIFICATION	// don't need the opposite check as the Dictionaries have the // same size, so we've also covered all keys of d2 already.
WITHOUT_CLASSIFICATION	//log uptodateness of all targets:
WITHOUT_CLASSIFICATION	// CheckStyle:ParameterNumberCheck OFF - bc
WITHOUT_CLASSIFICATION	// this should not happen, because the lines are // returned with the end of line delimiter
WITHOUT_CLASSIFICATION	// CheckStyle:ParameterNumberCheck ON
WITHOUT_CLASSIFICATION	// two not existing files are equal
WITHOUT_CLASSIFICATION	// should the following two be switched?  If r1 and r2 refer to the same file, // isn't their content equal regardless of whether that file is a directory?
WITHOUT_CLASSIFICATION	// don't want to compare directory contents for now
WITHOUT_CLASSIFICATION	//as far as we know
WITHOUT_CLASSIFICATION	//ignore release of an already-closed funnel
WITHOUT_CLASSIFICATION	// Write child elements and text
WITHOUT_CLASSIFICATION	// Write indent characters
WITHOUT_CLASSIFICATION	// Write element
WITHOUT_CLASSIFICATION	// steal default namespace
WITHOUT_CLASSIFICATION	// Write attributes
WITHOUT_CLASSIFICATION	// Write element close
WITHOUT_CLASSIFICATION	// relative path
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// Determine the Java version by looking at available classes // java.net.Proxy was introduced in JDK 1.5 // java.lang.CharSequence was introduced in JDK 1.4 // java.lang.StrictMath was introduced in JDK 1.3 // java.lang.ThreadLocal was introduced in JDK 1.2 // java.lang.Void was introduced in JDK 1.1 // Count up version until a NoClassDefFoundError ends the try
WITHOUT_CLASSIFICATION	// swallow as we've hit the max class version that // we have
WITHOUT_CLASSIFICATION	// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>
WITHOUT_CLASSIFICATION	// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.
WITHOUT_CLASSIFICATION	// On IBM's JDK 1.2 the directory layout is different, 1.3 follows // Sun's layout.
WITHOUT_CLASSIFICATION	// Unfortunately on Windows java.home doesn't always refer // to the correct location, so we need to fall back to // assuming java is somewhere on the PATH.
WITHOUT_CLASSIFICATION	// fall back to JRE bin directory, also catches JDK 1.0 and 1.1 // where java.home points to the root of the JDK and Mac OS X where // the whole directory layout is different from Sun's
WITHOUT_CLASSIFICATION	// This is the most common extension case - exe for windows and OS/2, // nothing for *nix.
WITHOUT_CLASSIFICATION	//In Java1.5, the apache stuff moved.
WITHOUT_CLASSIFICATION	//fall through.
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// are there any here that we forgot? // fall through
WITHOUT_CLASSIFICATION	//things like sun.reflection, sun.misc, sun.net
WITHOUT_CLASSIFICATION	//things like sun.reflection, sun.misc, sun.net
WITHOUT_CLASSIFICATION	//Strip '.' token
WITHOUT_CLASSIFICATION	//If it ended in a dot, throw an exception
WITHOUT_CLASSIFICATION	// Exact match
WITHOUT_CLASSIFICATION	// Exact match
WITHOUT_CLASSIFICATION	// Exact match
WITHOUT_CLASSIFICATION	// might read too much
WITHOUT_CLASSIFICATION	// would be imprecise
WITHOUT_CLASSIFICATION	//last character isn't a digit
WITHOUT_CLASSIFICATION	// write out the number of characters encoded in this line.
WITHOUT_CLASSIFICATION	// set the padding defaults
WITHOUT_CLASSIFICATION	// get the next 3 bytes (if we have them)
WITHOUT_CLASSIFICATION	// OK, Java 1.3.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// #8031: first try Java 1.4.
WITHOUT_CLASSIFICATION	// Reflection problems? Should not happen, debug.
WITHOUT_CLASSIFICATION	// CheckStyle:ParameterNumberCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ParameterNumberCheck ON
WITHOUT_CLASSIFICATION	// depending on the implementation the actual RE won't // get instantiated in the constructor.
WITHOUT_CLASSIFICATION	// terminate with a linefeed alone
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	//  0 to  7 //  8 to 15 // 16 to 23 // 24 to 31 // 32 to 39 // 40 to 47 // 48 to 55 // 56 to 63
WITHOUT_CLASSIFICATION	// store the octets
WITHOUT_CLASSIFICATION	// store the octets
WITHOUT_CLASSIFICATION	// store the octets
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// magic property
WITHOUT_CLASSIFICATION	//only text nodes that are non null after property expansion are added
WITHOUT_CLASSIFICATION	//no need to synchronize, as Vector is always synchronized
WITHOUT_CLASSIFICATION	// do not close the stream
WITHOUT_CLASSIFICATION	//Empty
WITHOUT_CLASSIFICATION	//Empty
WITHOUT_CLASSIFICATION	//get some non-crypto-grade randomness from various places.
WITHOUT_CLASSIFICATION	// Cannot resolve it, so skip it.
WITHOUT_CLASSIFICATION	// plain component
WITHOUT_CLASSIFICATION	// make sure we are dealing with an absolute path
WITHOUT_CLASSIFICATION	//remove the initial separator; the root has it.
WITHOUT_CLASSIFICATION	// UNC drive
WITHOUT_CLASSIFICATION	// format: "DEVICE:[DIR.SUBDIR]FILE"
WITHOUT_CLASSIFICATION	// treat directories specified using .DIR syntax as files
WITHOUT_CLASSIFICATION	// add an extra slash for filesystems with drive-specifiers
WITHOUT_CLASSIFICATION	//do a check for the destination file existing
WITHOUT_CLASSIFICATION	// execute the script
WITHOUT_CLASSIFICATION	// do nothing by default
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	// now recover all the dependencies collected and add to the list.
WITHOUT_CLASSIFICATION	//inherit doc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	// do not close the stream
WITHOUT_CLASSIFICATION	// on cygwin, our current directory can be a UNC; // assume user.dir is absolute or all hell breaks loose...
WITHOUT_CLASSIFICATION	// not before the filesystem root and not after it, since root // already contains one
WITHOUT_CLASSIFICATION	// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar
WITHOUT_CLASSIFICATION	// ensure that l ends with a / // so we never think /foo was a parent directory of /foobar
WITHOUT_CLASSIFICATION	// build the path stack info to compare
WITHOUT_CLASSIFICATION	// not the same device (would be "" on Linux/Unix)
WITHOUT_CLASSIFICATION	// no comparison possible
WITHOUT_CLASSIFICATION	// get index of parts which are equal
WITHOUT_CLASSIFICATION	// if "from" part is longer, fill it up with ".." // to reach path which is equal to both paths
WITHOUT_CLASSIFICATION	// fill it up path with parts which were not equal
WITHOUT_CLASSIFICATION	// can safely use '/' because Windows understands '/' as separator
WITHOUT_CLASSIFICATION	// base directory of the fileset
WITHOUT_CLASSIFICATION	// build the list of sources which are out of date with // respect to the target
WITHOUT_CLASSIFICATION	// code from Magesh moved from DefaultLogger and slightly modified
WITHOUT_CLASSIFICATION	//if you cannot read it, you won't be able to write it either
WITHOUT_CLASSIFICATION	// must be a zip of some sort
WITHOUT_CLASSIFICATION	// does the class have a package structure
WITHOUT_CLASSIFICATION	// check if the package structure is more than 1 level deep
WITHOUT_CLASSIFICATION	// class name has more than 1 package level 'com.company.Class'
WITHOUT_CLASSIFICATION	// class name has only 1 package level 'package.Class'
WITHOUT_CLASSIFICATION	// Add the class in dotted notation 'com.company.Class'
WITHOUT_CLASSIFICATION	// Add a class with no package 'Class'
WITHOUT_CLASSIFICATION	// force BCEL classes to load now
WITHOUT_CLASSIFICATION	// force BCEL classes to load now
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	// we get the root classes and build up a set of // classes upon which they depend
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// execute the script
WITHOUT_CLASSIFICATION	//log security exceptions and continue; it aint that //important and may be quite common running Ant embedded.
WITHOUT_CLASSIFICATION	// we look through the classpath elements. If the element is a dir // we look for the file. IF it is a zip, we look for the zip entry
WITHOUT_CLASSIFICATION	// we look through the source path elements. If the element is a dir // we look for the file. If it is a zip, we look for the zip entry. // This isn't normal for source paths but we get it for free
WITHOUT_CLASSIFICATION	// first letter of the previous segment of the class name 'Class' // is upper case ascii. so according to the spec it's an inner class
WITHOUT_CLASSIFICATION	// Register Groovy ourselves, since BSF did not // natively support it in versions previous to 1.2.4.
WITHOUT_CLASSIFICATION	// execute the script
WITHOUT_CLASSIFICATION	// translate \1 to $1 so that the Perl5Substitution will work
WITHOUT_CLASSIFICATION	// BSF uses a hashtable to store values // so cannot declareBean with a null value // So need to remove any bean of this name as // that bean should not be visible
WITHOUT_CLASSIFICATION	// no permission here
WITHOUT_CLASSIFICATION	// compute the compiler options based on the input options first
WITHOUT_CLASSIFICATION	// treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	// be strict about line separator
WITHOUT_CLASSIFICATION	// translate \1 to $(1) so that the Matcher will work
WITHOUT_CLASSIFICATION	// Do the substitution
WITHOUT_CLASSIFICATION	// replace \1 with the corresponding group
WITHOUT_CLASSIFICATION	/*     * Used when sorting.  If too many long comparisons     * happen, we stop sorting, randomise the block     * slightly, and try again.     */
WITHOUT_CLASSIFICATION	/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */
WITHOUT_CLASSIFICATION	/*          Nodes and heap entries run from 1.  Entry 0          for both the heap and nodes is a sentinel.        */
WITHOUT_CLASSIFICATION	//        blockNo++;
WITHOUT_CLASSIFICATION	// // When we get here we have EITHER: // o An empty "assemble" buffer. // o No bytes to write (numToWrite == 0) //
WITHOUT_CLASSIFICATION	/* Write `magic' bytes h indicating file-format == huffmanised,           followed by a digit indicating blockSize100k.        */
WITHOUT_CLASSIFICATION	//        ch = 0;
WITHOUT_CLASSIFICATION	/* 20 is just a paranoia constant */
WITHOUT_CLASSIFICATION	// empty block at end of file
WITHOUT_CLASSIFICATION	/* sort the block and establish posn of original string */
WITHOUT_CLASSIFICATION	/* Now the block's CRC, so it is in a known place. */
WITHOUT_CLASSIFICATION	/* Now a single bit indicating randomisation. */
WITHOUT_CLASSIFICATION	/* Finally, block's contents proper. */
WITHOUT_CLASSIFICATION	/*          Now another magic 48-bit number, 0x177245385090, to          indicate the end of the last block.  (sqrt(pi), if          you want to know.  I did want to use e, but it contains          too much repetition -- 27 18 28 18 28 46 -- for me          to feel statistically comfortable.  Call me paranoid.)        */
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	/* Decide how many coding tables to use */
WITHOUT_CLASSIFICATION	/* Generate an initial set of coding tables */
WITHOUT_CLASSIFICATION	/*          Iterate up to N_ITERS times to improve the tables.        */
WITHOUT_CLASSIFICATION	/* Compute MTF values for the selectors. */
WITHOUT_CLASSIFICATION	/* Assign actual codes for the tables. */
WITHOUT_CLASSIFICATION	/* Transmit the mapping table. */
WITHOUT_CLASSIFICATION	/* Now the selectors. */
WITHOUT_CLASSIFICATION	/* Now the coding tables. */
WITHOUT_CLASSIFICATION	/* And finally, the block data proper */
WITHOUT_CLASSIFICATION	/* Set group start & end marks. */
WITHOUT_CLASSIFICATION	/*                  Calculate the cost of this group as coded                  by each of the coding tables.                */
WITHOUT_CLASSIFICATION	// unrolled version of the else-block
WITHOUT_CLASSIFICATION	/*                  Find the coding table which is best for this group,                  and record its identity in the selector table.                */
WITHOUT_CLASSIFICATION	/*                  Increment the symbol frequencies for the selected table.                */
WITHOUT_CLASSIFICATION	/*              Recompute the tables based on the accumulated frequencies.            */
WITHOUT_CLASSIFICATION	// inlined: bsW(1, inUse[i16 + j] ? 1 : 0);
WITHOUT_CLASSIFICATION	// inlined: bsW(1, 1);
WITHOUT_CLASSIFICATION	// inlined: bsW(1, 0);
WITHOUT_CLASSIFICATION	// inlined: bsW(1, 0);
WITHOUT_CLASSIFICATION	//bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);
WITHOUT_CLASSIFICATION	// inlined: bsW(5, curr);
WITHOUT_CLASSIFICATION	// inlined: bsW(2, 2);
WITHOUT_CLASSIFICATION	/* 10 */
WITHOUT_CLASSIFICATION	// inlined: bsW(2, 3);
WITHOUT_CLASSIFICATION	/* 11 */
WITHOUT_CLASSIFICATION	// copy
WITHOUT_CLASSIFICATION	// start inline mainGTU
WITHOUT_CLASSIFICATION	// following could be done in a loop, but // unrolled it for performance:
WITHOUT_CLASSIFICATION	// while x > 0
WITHOUT_CLASSIFICATION	// Set up the 2-byte frequency table
WITHOUT_CLASSIFICATION	/*          In the various block-sized structures, live data runs          from 0 to last+NUM_OVERSHOOT_BYTES inclusive.  First,          set up the overshoot area for block.        */
WITHOUT_CLASSIFICATION	// Complete the initial radix sort:
WITHOUT_CLASSIFICATION	/*              Now ftab contains the first loc of every small bucket.              Calculate the running order, from smallest to largest              big bucket.        */
WITHOUT_CLASSIFICATION	/*              The main sorting loop.        */
WITHOUT_CLASSIFICATION	/*                  Process big buckets, starting with the least full.            */
WITHOUT_CLASSIFICATION	// Step 1:
WITHOUT_CLASSIFICATION	// Step 3:
WITHOUT_CLASSIFICATION	// handle 16 bit signed numbers
WITHOUT_CLASSIFICATION	// make maps
WITHOUT_CLASSIFICATION	/* directory with respect to       */
WITHOUT_CLASSIFICATION	// with blockSize 900k //     256 byte //     256 byte //    1032 byte //   18002 byte //   18002 byte
WITHOUT_CLASSIFICATION	//     256 byte //    1548 byte //    6192 byte //      24 byte //      12 byte //    6192 byte //       6 byte //      16 byte
WITHOUT_CLASSIFICATION	//    4000 byte //    4000 byte //    4000 byte
WITHOUT_CLASSIFICATION	//    1024 byte //    1024 byte //     256 byte
WITHOUT_CLASSIFICATION	//    1040 byte //    2064 byte //    2064 byte
WITHOUT_CLASSIFICATION	//  262148 byte // ------------ //  333408 byte
WITHOUT_CLASSIFICATION	// Just print a message, like the previous versions of this class did
WITHOUT_CLASSIFICATION	// Variables used by setup* methods exclusively
WITHOUT_CLASSIFICATION	// currBlockNo++;
WITHOUT_CLASSIFICATION	// A bad CRC is considered a fatal error.
WITHOUT_CLASSIFICATION	/* Receive the mapping table */
WITHOUT_CLASSIFICATION	/* Now the selectors */
WITHOUT_CLASSIFICATION	/* Undo the MTF values for the selectors. */
WITHOUT_CLASSIFICATION	// nearly all times v is zero, 4 in most other cases
WITHOUT_CLASSIFICATION	/* Now the coding tables */
WITHOUT_CLASSIFICATION	// finally create the Huffman tables
WITHOUT_CLASSIFICATION	// end of file // '1' // ')' // 'Y' // '&' // 'S' // 'Y'
WITHOUT_CLASSIFICATION	// Inlined: // int zvec = bsR(zn);
WITHOUT_CLASSIFICATION	// Inlined: // int zvec = bsR(zn);
WITHOUT_CLASSIFICATION	/*                  This loop is hammered during decompression,                  hence avoid native method call overhead of                  System.arraycopy for very small ranges to copy.                */
WITHOUT_CLASSIFICATION	/* not a char and not EOF */
WITHOUT_CLASSIFICATION	// (with blockSize 900k) //      256 byte
WITHOUT_CLASSIFICATION	//     1024 byte
WITHOUT_CLASSIFICATION	// No need to keep track of Bcc'd addresses
WITHOUT_CLASSIFICATION	// Blindly trust the user doesn't set any invalid headers
WITHOUT_CLASSIFICATION	// RFC 822 s4.1: "Reply-To:" header is optional
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.
WITHOUT_CLASSIFICATION	// support "address (name)"
WITHOUT_CLASSIFICATION	// support "(name) address"
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	//      256 byte //    18002 byte //    18002 byte
WITHOUT_CLASSIFICATION	//     6192 byte //     6192 byte //     6192 byte //       24 byte
WITHOUT_CLASSIFICATION	//     1028 byte //      512 byte //     3096 byte //        6 byte //--------------- //    60798 byte
WITHOUT_CLASSIFICATION	//  3600000 byte //   900000 byte //--------------- //  4560782 byte //===============
WITHOUT_CLASSIFICATION	// RFC 822 s4.1: "From:" header must be sent // We rely on error checking by the MTA
WITHOUT_CLASSIFICATION	// RFC 822 s4.1: //   "Header fields are NOT required to occur in any particular order, //    except that the message body MUST occur AFTER the headers" // (the same section specifies a reccommended order, which we ignore)
WITHOUT_CLASSIFICATION	// Make a limited attempt to extract a sanitized email address // Prefer text in <brackets>, ignore anything in (parentheses)
WITHOUT_CLASSIFICATION	// * * * * * Raw protocol methods below here * * * * *
WITHOUT_CLASSIFICATION	// make sure dot is on new line
WITHOUT_CLASSIFICATION	// raw supports <CRLF>.<CRLF>
WITHOUT_CLASSIFICATION	// Check that the response is one of the valid codes
WITHOUT_CLASSIFICATION	// deprecated, but email is byte-oriented
WITHOUT_CLASSIFICATION	// ensure always \r\n
WITHOUT_CLASSIFICATION	// Mac does \n\r, but that's tough to distinguish from Windows \r\n\r\n. // Don't tackle that problem right now.
WITHOUT_CLASSIFICATION	// add extra dot
WITHOUT_CLASSIFICATION	// add extra dot
WITHOUT_CLASSIFICATION	// ensure always \r\n
WITHOUT_CLASSIFICATION	// UNDONE
WITHOUT_CLASSIFICATION	// create a TarEntry for the LongLink, the contents // of which are the entry's name
WITHOUT_CLASSIFICATION	// Strip off drive letters! // REVIEW Would a better check be "(File.separator == '\')"?
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// No absolute pathnames // Windows (and Posix?) paths can start with "\\NetworkDrive\", // so we loop on starting /'s.
WITHOUT_CLASSIFICATION	/* start of the central directory  */
WITHOUT_CLASSIFICATION	// REVIEW // This is horribly inefficient, but it ensures that we // properly skip over bytes via the TarBuffer... //
WITHOUT_CLASSIFICATION	// read in the name
WITHOUT_CLASSIFICATION	// remove trailing null terminator
WITHOUT_CLASSIFICATION	// Unexpected EOF!
WITHOUT_CLASSIFICATION	// ---------------------------------------------------------- // somewhat arbitrary choices that are quite common for shared // installations // -----------------------------------------------------------
WITHOUT_CLASSIFICATION	/* method is STORED and we used RandomAccessFile */
WITHOUT_CLASSIFICATION	// If random access output, write the local file header containing // the correct CRC and compressed/uncompressed sizes
WITHOUT_CLASSIFICATION	// not specified
WITHOUT_CLASSIFICATION	// not specified
WITHOUT_CLASSIFICATION	// Size/CRC not required if RandomAccessFile is used
WITHOUT_CLASSIFICATION	/*     * Various ZIP constants     */
WITHOUT_CLASSIFICATION	//store method in local variable to prevent multiple method calls
WITHOUT_CLASSIFICATION	// bit3 set to signal, we use a data descriptor
WITHOUT_CLASSIFICATION	// bit3 set to signal, we use a data descriptor
WITHOUT_CLASSIFICATION	// compression method
WITHOUT_CLASSIFICATION	// compression method
WITHOUT_CLASSIFICATION	// last mod. time and date
WITHOUT_CLASSIFICATION	// file name length
WITHOUT_CLASSIFICATION	// extra field length
WITHOUT_CLASSIFICATION	// file name
WITHOUT_CLASSIFICATION	// extra field
WITHOUT_CLASSIFICATION	// version made by
WITHOUT_CLASSIFICATION	// version needed to extract // general purpose bit flag
WITHOUT_CLASSIFICATION	// last mod. time and date
WITHOUT_CLASSIFICATION	// requires version 2 as we are going to store length info // in the data descriptor
WITHOUT_CLASSIFICATION	// file name length
WITHOUT_CLASSIFICATION	// CRC // compressed length // uncompressed length
WITHOUT_CLASSIFICATION	// extra field length
WITHOUT_CLASSIFICATION	// file name
WITHOUT_CLASSIFICATION	// extra field
WITHOUT_CLASSIFICATION	// file comment length
WITHOUT_CLASSIFICATION	// disk number start
WITHOUT_CLASSIFICATION	// internal file attributes
WITHOUT_CLASSIFICATION	// external file attributes
WITHOUT_CLASSIFICATION	// relative offset of LFH
WITHOUT_CLASSIFICATION	// disk numbers
WITHOUT_CLASSIFICATION	// number of entries
WITHOUT_CLASSIFICATION	// length and location of CD
WITHOUT_CLASSIFICATION	// ZIP file comment
WITHOUT_CLASSIFICATION	// array not exhausted
WITHOUT_CLASSIFICATION	/* version made by                 */
WITHOUT_CLASSIFICATION	/* version needed to extract       */
WITHOUT_CLASSIFICATION	/* general purpose bit flag        */
WITHOUT_CLASSIFICATION	/* compression method              */
WITHOUT_CLASSIFICATION	/* last mod file time              */
WITHOUT_CLASSIFICATION	/* last mod file date              */
WITHOUT_CLASSIFICATION	/* crc-32                          */
WITHOUT_CLASSIFICATION	/* uncompressed size               */
WITHOUT_CLASSIFICATION	/* filename length                 */
WITHOUT_CLASSIFICATION	/* extra field length              */
WITHOUT_CLASSIFICATION	/* file comment length             */
WITHOUT_CLASSIFICATION	/* internal file attributes        */
WITHOUT_CLASSIFICATION	/* external file attributes        */
WITHOUT_CLASSIFICATION	/* relative offset of local header */
WITHOUT_CLASSIFICATION	// disk number
WITHOUT_CLASSIFICATION	// LFH offset,
WITHOUT_CLASSIFICATION	// data offset will be filled later
WITHOUT_CLASSIFICATION	/* end of central dir signature    */
WITHOUT_CLASSIFICATION	/* number of this disk             */
WITHOUT_CLASSIFICATION	/* number of the disk with the     */
WITHOUT_CLASSIFICATION	/* start of the central directory  */
WITHOUT_CLASSIFICATION	/* the central dir on this disk    */
WITHOUT_CLASSIFICATION	/* the central dir                 */
WITHOUT_CLASSIFICATION	/* size of the central directory   */
WITHOUT_CLASSIFICATION	/* offset of start of central      */
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// wait 2 second extras // the test failed with 100 ms of margin on cvs.apache.org on August 1st, 2003
WITHOUT_CLASSIFICATION	// dummy1 --> dummy2 --> dummy3 // (which holds a glob mapper from "*.java" to "*.class"
WITHOUT_CLASSIFICATION	// // *****  initialize test environment (called "bed")  ***** //
WITHOUT_CLASSIFICATION	// THIS WILL FAIL. //compareBytes("abc", "utf-16");
WITHOUT_CLASSIFICATION	//catch script/ant mismatch with a meaningful message //we could ignore it, but there are likely to be other //version problems, so we stamp down on the configuration now
WITHOUT_CLASSIFICATION	//if there were no main targets, we list all subtargets //as it means nothing has a description
WITHOUT_CLASSIFICATION	// For NetWare, use the boolean=true mode, so we can use delimiter // information to make a better decision later.
WITHOUT_CLASSIFICATION	// we are on NetWare, tokenizing is handled a little differently, // due to the fact that NetWare has multiple-character volume names.
WITHOUT_CLASSIFICATION	// The readers return -1 if they end. So simply read the "prepend" // after that the "content" and at the end the "append" file.
WITHOUT_CLASSIFICATION	// NB: this makes use of Project#setProperty rather than Project#setNewProperty //     due to backwards compatiblity reasons
WITHOUT_CLASSIFICATION	// If we've been successful on an update, delete the // temporary file
WITHOUT_CLASSIFICATION	// CheckStyle - magic numbers // checking for "X:\ 0=dquote,1=letter,2=:,3=\
WITHOUT_CLASSIFICATION	/* version needed to extract       */
WITHOUT_CLASSIFICATION	/* general purpose bit flag        */
WITHOUT_CLASSIFICATION	/* compression method              */
WITHOUT_CLASSIFICATION	/* last mod file time              */
WITHOUT_CLASSIFICATION	/* last mod file date              */
WITHOUT_CLASSIFICATION	/* crc-32                          */
WITHOUT_CLASSIFICATION	/* compressed size                 */
WITHOUT_CLASSIFICATION	/* uncompressed size               */
WITHOUT_CLASSIFICATION	/* end of central dir signature    */
WITHOUT_CLASSIFICATION	/* number of this disk             */
WITHOUT_CLASSIFICATION	/* number of the disk with the     */
WITHOUT_CLASSIFICATION	/* total number of entries in      */
WITHOUT_CLASSIFICATION	/* total number of entries in      */
WITHOUT_CLASSIFICATION	/* the central dir on this disk    */
WITHOUT_CLASSIFICATION	/* the central dir                 */
WITHOUT_CLASSIFICATION	/* size of the central directory   */
WITHOUT_CLASSIFICATION	/* the starting disk number        */
WITHOUT_CLASSIFICATION	/* zipfile comment length          */
WITHOUT_CLASSIFICATION	/* local file header signature     */
WITHOUT_CLASSIFICATION	/*     * Converts DOS time to Java time (number of milliseconds since epoch).     */
WITHOUT_CLASSIFICATION	// CRC will be added later
WITHOUT_CLASSIFICATION	/*<ZipExtraField>*/
WITHOUT_CLASSIFICATION	// initializes extra data to an empty byte array
WITHOUT_CLASSIFICATION	// MS-DOS read-only attribute
WITHOUT_CLASSIFICATION	// MS-DOS directory flag
WITHOUT_CLASSIFICATION	// A "location" attribute for a node within a // Path object.
WITHOUT_CLASSIFICATION	// Just use the same directory as the file itself. // This directory will exist
WITHOUT_CLASSIFICATION	// JarIndex is sorting the directories by ascending order. // it has no value but cosmetic since it will be read into a // hashtable by the classloader, but we'll do so anyway.
WITHOUT_CLASSIFICATION	// // Static //
WITHOUT_CLASSIFICATION	//we mark the file to be deleted on exit. //the alternative would be to cache the filename and delete //after execution finished, which is much better for long-lived runtimes //though spawning complicates things...
WITHOUT_CLASSIFICATION	// Protected first so if any GUI tool offers a default // based on enum #0, it will be right.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc // the source file // the destination file // the destination directory
WITHOUT_CLASSIFICATION	// add dest dir to classpath so that previously compiled and // untouched classes are on classpath
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // cleartool checkout [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mkelem [options...] [viewpath ...] // as specified in the CLEARTOOL.EXE help
WITHOUT_CLASSIFICATION	// build the command line from what we got. the format is // cleartool mklabel [options...] [viewpath ...] // as specified in the CLEARTOOL help
WITHOUT_CLASSIFICATION	// push the current iterator onto the stack and then // iterate through this directory.
WITHOUT_CLASSIFICATION	// List of EJBs found in XML // One item within the Map // Is doc iAS or EJB descriptor
WITHOUT_CLASSIFICATION	// baseNameTerminator not found: the descriptor use the // JOnAS naming convention, ie [Foo.xml,jonas-Foo.xml] and // not [Foo<baseNameTerminator>-ejb-jar.xml, // Foo<baseNameTerminator>-jonas-ejb-jar.xml].
WITHOUT_CLASSIFICATION	// Loop through the files seeing if any has been touched // more recently than the destination jar.
WITHOUT_CLASSIFICATION	// read in the descriptor. Under weblogic, the descriptor is a weblogic // specific subclass which has references to the implementation classes. // These classes must, therefore, be in the classpath when the deployment // descriptor is loaded from the .ser file
WITHOUT_CLASSIFICATION	//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendor)
WITHOUT_CLASSIFICATION	// 2003-02-21 new replace algorithm by tbee (tbee@tbee.org) // because it wasn't able to replace something like "@aaa;@bbb;"
WITHOUT_CLASSIFICATION	// convert backslashes to slashes, otherwise jjtree will // put this as comments and this seems to confuse javacc
WITHOUT_CLASSIFICATION	//although this code appears to duplicate that of ClasspathUtils.newInstance, //we cannot use that because this formatter may run in a forked process, //without that class.
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss History elements [-H] [-L] [-N] [-O] [-V] [-Y] [-#] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// this method has severe consequences on performance. We cannot rely // on the super.hashCode() method since super.getName() always return // the empty string in the current implemention (there's no setter) // so it is basically draining the performance of a hashmap lookup
WITHOUT_CLASSIFICATION	// If this TransformOperation has DrawOperation children // then Rotate the first child and return.
WITHOUT_CLASSIFICATION	// converted from sun internal classes to // new Base64Converter // utility class extracted from Get task
WITHOUT_CLASSIFICATION	// // Cannot return a null source, because we have to call // setEntityResolver (see setEntityResolver javadoc comment) //
WITHOUT_CLASSIFICATION	// CRC // compressed length // uncompressed length
WITHOUT_CLASSIFICATION	// No further methods necessary. This is just an amalgamation of two other // interfaces.
WITHOUT_CLASSIFICATION	// // -----  The "Singleton"  ----- //
WITHOUT_CLASSIFICATION	// If we had child elements, we need to indent before we close // the element, otherwise we're on the same line and don't need // to indent
WITHOUT_CLASSIFICATION	// The key is in the dictionary but cannot be retrieved // This is usually due references that refer to tasks // that have not been taskdefed in the current run. // Ignore
WITHOUT_CLASSIFICATION	// write magic: done by caller who created this stream //this.out.write('B'); //this.out.write('Z');
WITHOUT_CLASSIFICATION	// CRC // Mode // SizDev // UID // GID
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignored
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// selectors are implicitly ANDed in DirectoryScanner.  To // revert their logic we wrap them into a <none> selector // instead.
WITHOUT_CLASSIFICATION	// now wait until the spawned process is finished
WITHOUT_CLASSIFICATION	// file doesn't exist -> property 'test' == null
WITHOUT_CLASSIFICATION	// we don't expect to find this
WITHOUT_CLASSIFICATION	// we don't expect to find this
WITHOUT_CLASSIFICATION	// ignore expected
WITHOUT_CLASSIFICATION	// keep track of what operating systems are supported here.
WITHOUT_CLASSIFICATION	// if we followed the symlink we just made we should // bypass the excludes.
WITHOUT_CLASSIFICATION	// when the test is started by the build.xml of ant // if the property tests.and.ant.share.classloader is not set in the build.xml // a sysproperty with name tests.and.ant.share.classloader and value // ${tests.and.ant.share.classloader} will be set // we are trying to catch this here.
WITHOUT_CLASSIFICATION	/*             * throw in drive letters             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	/*             * promised to eliminate consecutive slashes after drive letter.             */
WITHOUT_CLASSIFICATION	// avoid multiple configurations
WITHOUT_CLASSIFICATION	// ------------------------------------------------------ //   Helper methods // -----------------------------------------------------
WITHOUT_CLASSIFICATION	// make sure the cache is cleared.
WITHOUT_CLASSIFICATION	//--- NULL JDBC driver just for simple test since there are no db driver // available as a default in Ant :)
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// PR 38370
WITHOUT_CLASSIFICATION	// wait 1 second extra to allow for java to start ... // this time was OK on a Win NT machine and on nagoya
WITHOUT_CLASSIFICATION	// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------------------ //   Helper methods - should be in BuildFileTest // -----------------------------------------------------
WITHOUT_CLASSIFICATION	// All three specified and all three exist -> true
WITHOUT_CLASSIFICATION	// Specified class is "" -> can not exist
WITHOUT_CLASSIFICATION	// Core class that exists in system classpath is ignored, but found in specified classpath
WITHOUT_CLASSIFICATION	// File is not found in specified filepath
WITHOUT_CLASSIFICATION	//ignored
WITHOUT_CLASSIFICATION	// basedir of subant/subant-test2/subant.xml is .. // therefore we expect here the subant subdirectory
WITHOUT_CLASSIFICATION	// 2 is != 0 and even, so it is considered // failure on any platform currently supported // by Execute#isFailure.
WITHOUT_CLASSIFICATION	//         expectBuildExceptionContaining("testNoTld", //                 "Jasper found an error in a file", //                 "Java returned: 9");
WITHOUT_CLASSIFICATION	// The captureToSummary test writes to stdout and stderr, good for // verifying that the TestListener support doesn't break anything.
WITHOUT_CLASSIFICATION	// testNoCrash is the test invoked by the captureToSummary's junit task
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// tests one the file object
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// conversion to URL via FileUtils like in XMLResultAggregator, not as suggested in the bug report
WITHOUT_CLASSIFICATION	// We have extra elements
WITHOUT_CLASSIFICATION	// Set up a VSSHistory task
WITHOUT_CLASSIFICATION	// \ doesn't have a special meaning anymore - this is different from // what the Unix sh does but causes a lot of problems on DOS // based platforms otherwise
WITHOUT_CLASSIFICATION	//check that dir and src are incompatible
WITHOUT_CLASSIFICATION	// ================  testcases for the cache implementations  ================
WITHOUT_CLASSIFICATION	// does the selection
WITHOUT_CLASSIFICATION	// ==============  testcases for the algorithm implementations  ==============
WITHOUT_CLASSIFICATION	// =====================  scenario tests  =====================
WITHOUT_CLASSIFICATION	// info text // list of files // expected result // result
WITHOUT_CLASSIFICATION	//  =====================  helper methods and classes  ====================
WITHOUT_CLASSIFICATION	// should be full moon
WITHOUT_CLASSIFICATION	// Try a silly case
WITHOUT_CLASSIFICATION	// java.home is bogus
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// 60s // a further 30s
WITHOUT_CLASSIFICATION	// order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	// order of headers cannot be guaranteed
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier OFF - bc
WITHOUT_CLASSIFICATION	/*                            Ignore method m, as there is an overloaded                            form of this method that takes in a                            non-string argument, which gains higher                            priority.                        */
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/*                        If the argument is not a String or Location,                        and if there                        is an overloaded form of this method already defined,                        we just override that with the new one.                        This mechanism does not guarantee any specific order                        in which the methods will be selected: so any code                        that depends on the order in which "set" methods have                        been defined, is not guaranteed to be selected in any                        particular order.                    */
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// impossible as getMethods should only return public methods
WITHOUT_CLASSIFICATION	// boolean and Boolean get special treatment because we // have a nice method in Project
WITHOUT_CLASSIFICATION	// find the line breaks and pass other chars through in blocks
WITHOUT_CLASSIFICATION	// DataType can have a "no arg" constructor or take a single // Project argument.
WITHOUT_CLASSIFICATION	// all the names are the same: check if the class path of the loader // is the same
WITHOUT_CLASSIFICATION	/* Interestingly enough, we get to here when a user                 * uses -Dname=value. However, in some cases, the OS                 * goes ahead and parses this out to args                 *   {"-Dname", "value"}                 * so instead of parsing on "=", we just make the "-D"                 * characters go away and skip one argument forward.                 *                 * I don't know how to predict when the JDK is going                 * to help or not, so we simply look for the equals sign.                 */
WITHOUT_CLASSIFICATION	// if parent is null, then we are at the root of the fs, // complain that we can't find the build file.
WITHOUT_CLASSIFICATION	// put back the original security manager //The following will never eval to true. (PD)
WITHOUT_CLASSIFICATION	// ignore path elements which are invalid // relative to the project
WITHOUT_CLASSIFICATION	// Ignore - we are interested only in the side // effect - that of getting the static initializers // invoked.  As we do not want to call a valid // constructor to get this side effect, an // attempt is made to call a hopefully // invalid constructor - come on, nobody // would have a constructor that takes in // 256 String arguments ;-) // (In fact, they can't - according to JVM spec // section 4.10, the number of method parameters is limited // to 255 by the definition of a method descriptor. // Constructors count as methods here.)
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	/*<URL>*/
WITHOUT_CLASSIFICATION	// 'sync' is needed - otherwise 2 threads can load the same class // twice, resulting in LinkageError: duplicated class definition. // findLoadedClass avoids that, but without sync it won't work.
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	//ignore
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// Not significant for the class loader.
WITHOUT_CLASSIFICATION	// don't have to check for public, since // getConstructor finds public constructors only.
WITHOUT_CLASSIFICATION	//not a known type
WITHOUT_CLASSIFICATION	// Initialize the globalFileSet's project
WITHOUT_CLASSIFICATION	// create a new Vector to avoid ConcurrentModificationExc when // the listeners get added/removed while we are in fire
WITHOUT_CLASSIFICATION	// first build exception
WITHOUT_CLASSIFICATION	// Not been visited
WITHOUT_CLASSIFICATION	// -------------------- Optional methods   -------------------- // You can override those methods if you want to optimize or // do advanced things (like support a special syntax). // The methods do not chain - you should use them when embedding ant // (by replacing the main helper)
WITHOUT_CLASSIFICATION	/*                fragments.addElement(value.substring(pos + 1, pos + 2));                prev = pos + 2;                */
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	//empty
WITHOUT_CLASSIFICATION	// -------------------- Common properties  -------------------- // The following properties are required by import ( and other tasks // that read build files using ProjectHelper ).
WITHOUT_CLASSIFICATION	// check to what is in the classname
WITHOUT_CLASSIFICATION	//not included, do nothing
WITHOUT_CLASSIFICATION	//not included, do nothing
WITHOUT_CLASSIFICATION	// Attributes
WITHOUT_CLASSIFICATION	// make sure we aren't going to get the path separator next
WITHOUT_CLASSIFICATION	// 'reasonable' default, if the component is used without // a Project ( for example as a standalone Bean ). // Most ant components can be used this way.
WITHOUT_CLASSIFICATION	// don't have to check for public, since // getMethod finds public method only. // don't have to check for abstract, since then // taskClass would be abstract too.
WITHOUT_CLASSIFICATION	// Mac
WITHOUT_CLASSIFICATION	// set in/excludes to reasonable defaults if needed:
WITHOUT_CLASSIFICATION	// may be on a case insensitive file system.  We want // the results to show what's really on the disk, so // we need to double check.
WITHOUT_CLASSIFICATION	// avoid double scanning of directories, can only happen in fast mode
WITHOUT_CLASSIFICATION	// Usually the initialized is set to true. But here it must not. // Because the prepend and append readers have to be instantiated // on runtime //newFilter.setInitialized(true);
WITHOUT_CLASSIFICATION	// if at EOF with no characters in the buffer, return EOF
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// The current character is always emitted.
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Fall tru
WITHOUT_CLASSIFICATION	// Works like clone() but doesn't show up in the Javadocs
WITHOUT_CLASSIFICATION	// ----------------------------------------- //  Predefined filters // -----------------------------------------
WITHOUT_CLASSIFICATION	// -------------------------------------------- // //      Filter classes // // --------------------------------------------
WITHOUT_CLASSIFICATION	// Execute the top-level target
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Also check for properly formed URIs. Ant formerly recommended using // nonsense URIs such as "file:./foo.xml" in XML includes. You shouldn't // do that (just "foo.xml" is correct) but for compatibility we special-case // things when the path is not absolute, and fall back to the old parsing behavior.
WITHOUT_CLASSIFICATION	//decide whether to copy the existing arg set, or //build a new one from the list of all args excluding the special //operations that only we handle
WITHOUT_CLASSIFICATION	// convert the replyTo string into a vector of emailaddresses
WITHOUT_CLASSIFICATION	// private static final int BG_BLACK = 40; // private static final int BG_RED = 41; // private static final int BG_GREEN = 42; // private static final int BG_YELLOW = 44; // private static final int BG_BLUE = 44; // private static final int BG_MAGENTA = 45; // private static final int BG_CYAN = 46; // private static final int BG_WHITE = 47;
WITHOUT_CLASSIFICATION	// If the file being added is META-INF/application.xml, we // warn if it's not the one specified in the "appxml" // attribute - or if it's being added twice, meaning the same // file is specified by the "appxml" attribute and in a // <fileset> element.
WITHOUT_CLASSIFICATION	// class found but restricted name; this is // actually the case we're looking for in JDK 1.3+, // so catch the exception and return
WITHOUT_CLASSIFICATION	// Can return null to represent the bootstrap class loader. // see API docs of Class.getClassLoader.
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	//default
WITHOUT_CLASSIFICATION	// use to scan own archive
WITHOUT_CLASSIFICATION	// collect filesets to pass them to getResourcesToAdd
WITHOUT_CLASSIFICATION	// If we're in this finally clause because of an // exception, we don't really care if there's an // exception when closing the stream. E.g. if it // throws "ZIP file must have at least one entry", // because an exception happened before we added // any files, then we must swallow this // exception. Otherwise, the error that's reported // will be the close() error, which is not the // real cause of the problem.
WITHOUT_CLASSIFICATION	/*             * Bad luck.             *             * There are resources in the filesets that make the             * archive out of date, but not in the non-fileset             * resources. We need to rescan the non-FileSets to grab             * all of them now.             */
WITHOUT_CLASSIFICATION	// ZIPs store time with a granularity of 2 seconds, round up
WITHOUT_CLASSIFICATION	/*             * ZipOutputStream.putNextEntry expects the ZipEntry to             * know its size and the CRC sum before you start writing             * the data when using STORED mode - unless it is seekable.             *             * This forces us to process the data twice.             */
WITHOUT_CLASSIFICATION	// may be altered in validate
WITHOUT_CLASSIFICATION	//at this point the paths are set up with lists of files, //and the mapper is ready to map from source dirs to dest files //now we iterate through every JAR giving source and dest names // deal with the paths
WITHOUT_CLASSIFICATION	//calculate our destination directory; it is either the destDir //attribute, or the base dir of the fileset (for in situ updates)
WITHOUT_CLASSIFICATION	// Error messages
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Parse the attribute(s) and text of this node, adding // properties for each. // if the "path" attribute is specified, then return the created path // which will be passed to the children of this node.
WITHOUT_CLASSIFICATION	// An arbitrary attribute.
WITHOUT_CLASSIFICATION	// Return the Path we added or the ID of this node for // children to reference if needed.  Path objects are // definitely used by child path elements, and ID may be used // for a child text node.
WITHOUT_CLASSIFICATION	// Fall Through
WITHOUT_CLASSIFICATION	// Fall Through
WITHOUT_CLASSIFICATION	// Ignore the problem
WITHOUT_CLASSIFICATION	// If we're on windows, then do the comparison ignoring case // and treat the two directory characters the same
WITHOUT_CLASSIFICATION	// for NetWare and OS/2, piggy-back on Windows, since in the // validateSetup code, the same assumptions can be made as // with windows - that ; is the path separator
WITHOUT_CLASSIFICATION	// END static class TemplateElement
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////// // CONSTRUCTORS / INITIALIZERS
WITHOUT_CLASSIFICATION	//value and property are mutually exclusive attributes
WITHOUT_CLASSIFICATION	// Ignore Exception
WITHOUT_CLASSIFICATION	//int logLevel = filesetManifestConfig == null ? //    Project.MSG_WARN : Project.MSG_VERBOSE; //log("File " + file //    + " includes a META-INF/MANIFEST.MF which will be ignored. " //    + "To include this file, set filesetManifest to a value other " //    + "than 'skip'.", logLevel);
WITHOUT_CLASSIFICATION	// Create the directory, as it might not exist.
WITHOUT_CLASSIFICATION	// Calculate the total checksum // Convert the keys (source files) into a sorted array.
WITHOUT_CLASSIFICATION	// must not use getEntry as "well behaving" applications // must accept the manifest in any capitalization
WITHOUT_CLASSIFICATION	// We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	// We just set the prefix for this fileset, and pass it up.
WITHOUT_CLASSIFICATION	/*             * Precedence: manifestFile wins over inline manifest,             * over manifests read from the filesets over the original             * manifest.             *             * merge with null argument is a no-op             */
WITHOUT_CLASSIFICATION	// filesets are separate from the rest for performance // reasons.  If we use the code for union below, we'll always // scan all filesets, even if we know the target is out of // date after the first test.
WITHOUT_CLASSIFICATION	// If the archive is built for the first time and it is // matched by a resource collection, then it hasn't been // found in check (it hasn't been there) but will be // included now. // // for some strange reason the old code would simply skip // the entry and not fail, do the same now for backwards // compatibility reasons.  Without this, the which4j build // fails in Gump
WITHOUT_CLASSIFICATION	// preserve permissions
WITHOUT_CLASSIFICATION	// override permissions if set explicitly
WITHOUT_CLASSIFICATION	// Check if we can contact the URL
WITHOUT_CLASSIFICATION	// // Instance //
WITHOUT_CLASSIFICATION	//the Exec OS check is different from Os.isOs(), which //probes for a specific OS. Instead it searches the os field //for the current os.name
WITHOUT_CLASSIFICATION	// Similar to a fileset, but doesn't allow dir attribute to be set
WITHOUT_CLASSIFICATION	// If the destination directory didn't already exist, // or was empty, then no previous file removal is necessary!
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// preserveInTarget would find all files we want to keep, // but we need to find all that we want to delete - so the // meaning of all patterns and selectors must be inverted
WITHOUT_CLASSIFICATION	//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the java command. //The special file is supported by the "-V" switch on the VMS JVM.
WITHOUT_CLASSIFICATION	// Do nothing if no resources (including nested text)
WITHOUT_CLASSIFICATION	// Windows has a 32k limit on total arg size, so // create a temporary file to store all the arguments
WITHOUT_CLASSIFICATION	// filesets has been protected so we need to keep that even after // switching to resource collections.  In fact, they will still // get a different treatment form the other resource collections // even in execute since we have some subtle special features like // switching type to "dir" when we encounter a DirSet that would // be more difficult to achieve otherwise.
WITHOUT_CLASSIFICATION	// need to reset the stream handler to restart // reading of pipes; // go ahead and do it always w/ nested redirectors
WITHOUT_CLASSIFICATION	/*             * if we get here, in and out have not been specified, we are             * in batch processing mode.             */
WITHOUT_CLASSIFICATION	//at this point there is one trailing space to remove, if the list is not empty.
WITHOUT_CLASSIFICATION	// Ignore and keep trying
WITHOUT_CLASSIFICATION	// Chunk part of previous env var (UNIX env vars can // contain embedded new lines).
WITHOUT_CLASSIFICATION	// Since we "look ahead" before adding, there's one last env var.
WITHOUT_CLASSIFICATION	//noop default encoding used
WITHOUT_CLASSIFICATION	// On OpenVMS Runtime#exec() doesn't support the environment array, // so we only return the new values which then will be set in // the generated DCL script, inheriting the parent process environment
WITHOUT_CLASSIFICATION	// Locate the auxiliary script
WITHOUT_CLASSIFICATION	// Build the command
WITHOUT_CLASSIFICATION	/*         * Writes the command into a temporary DCL script and returns the         * corresponding File object.  The script will be deleted on exit.         * @param cmd the command line to execute as an array of strings.         * @param env the environment to set as an array of strings.         * @return the command File.         * @throws IOException if errors are encountered creating the file.         */
WITHOUT_CLASSIFICATION	//************************************************************************ //  protected and private methods //************************************************************************
WITHOUT_CLASSIFICATION	// ensure that parent dir of dest file exists!
WITHOUT_CLASSIFICATION	// add the single group arguments // Javadoc 1.2 rules: //   Multiple -group args allowed. //   Each arg includes 3 strings: -group [name] [packagelist]. //   Elements in [packagelist] are colon-delimited. //   An element in [packagelist] may end with the * wildcard.
WITHOUT_CLASSIFICATION	// for each sourcePath entry, add a directoryset with includes // taken from packagenames attribute and nested package // elements and excludes taken from excludepackages attribute // and nested excludepackage elements
WITHOUT_CLASSIFICATION	// // Override the logging of output in order to filter out Generating // messages.  Generating messages are set to a priority of VERBOSE // unless they appear after what could be an informational message. //
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	/* Methods below all add specific selectors */
WITHOUT_CLASSIFICATION	/*               If verbosity is MSG_VERBOSE, that mean we are doing               regular logging (backwards as that sounds).  In that               case, we want to print one message about deleting the               top of the directory tree.  Otherwise, the removeDir               method will handle messages for _all_ directories.             */
WITHOUT_CLASSIFICATION	//hand down
WITHOUT_CLASSIFICATION	// create intermediary directories - sometimes zip don't add them
WITHOUT_CLASSIFICATION	// SQL defines "--" as a comment to EOL // and in Oracle it may contain a hint // so we cannot just remove it, instead we must end it
WITHOUT_CLASSIFICATION	/*         * In Ant 1.1, <chmod dir="foo" /> means, change the permissions         * of directory foo, not anything inside of it.  This is the case the         * second branch of the if statement below catches for backwards         * compatibility.         */
WITHOUT_CLASSIFICATION	/* for historical and performance reasons we have to do               things in a rather complex way.               (1) Move is optimized to move directories if a fileset               has been included completely, therefore FileSets need a               special treatment.  This is also required to support               the failOnError semantice (skip filesets with broken               basedir but handle the remaining collections).               (2) We carry around a few protected methods that work               on basedirs and arrays of names.  To optimize stuff, all               resources with the same basedir get collected in               separate lists and then each list is handled in one go.            */
WITHOUT_CLASSIFICATION	//we create a fileset with the source file. //this lets us combine our logic for handling output directories, //mapping etc.
WITHOUT_CLASSIFICATION	// if input files are specified, inputString and inputStream are ignored; // classes that work with redirector attributes can enforce // whatever warnings are needed
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// Ignore exception
WITHOUT_CLASSIFICATION	// classpath attributes go into a vector
WITHOUT_CLASSIFICATION	// we have already started reading this section // this line is the first attribute. set it and then // let the normal read handle the rest
WITHOUT_CLASSIFICATION	//not modified so no file download. just return //instead and trace out something so the user //doesn't think that the download happened when it //didn't
WITHOUT_CLASSIFICATION	// we have started to (over)write dest, but failed. // Try to delete the garbage we'd otherwise leave // behind.
WITHOUT_CLASSIFICATION	// start() would throw IllegalThreadStateException from // ThreadGroup.add if it were destroyed
WITHOUT_CLASSIFICATION	// kjc-1.5A doesn't support -encoding option now. // but it will be supported near the feature.
WITHOUT_CLASSIFICATION	// Create an instance of the compiler, redirecting output to // the project log
WITHOUT_CLASSIFICATION	// Setup the apt executable
WITHOUT_CLASSIFICATION	//On VMS platform, we need to create a special java options file //containing the arguments and classpath for the javac command. //The special file is supported by the "-V" switch on the VMS JVM.
WITHOUT_CLASSIFICATION	//must keep for subclass BC, though unused: // CheckStyle:ConstantNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// CheckStyle:ConstantNameCheck ON // CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// add dest dir to classpath so that previously compiled and // untouched classes are on classpath
WITHOUT_CLASSIFICATION	// add dest dir to classpath so that previously compiled and // untouched classes are on classpath
WITHOUT_CLASSIFICATION	// For -sourcepath, use the "sourcepath" value if present. // Otherwise default to the "srcdir" value.
WITHOUT_CLASSIFICATION	/*             * Many system have been reported to get into trouble with             * long command lines - no, not only Windows ;-).             *             * POSIX seems to define a lower limit of 4k, so use a temporary             * file if the total length of the command line exceeds this limit.             */
WITHOUT_CLASSIFICATION	// there is a bootclasspath stated.  By default, the // includeJavaRuntime is false.  If the user has stated a // bootclasspath and said to include the java runtime, it's on // their head!
WITHOUT_CLASSIFICATION	//The following is data used while processing stdout of CVS command
WITHOUT_CLASSIFICATION	// The date format is using a - format since 1.12.9 so we have: // 1.12.9-: 'date: YYYY/mm/dd HH:mm:ss;  author: name;' // 1.12.9+: 'date: YYYY-mm-dd HH:mm:ss Z;  author: name'
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// viewpath
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// ClearCase items
WITHOUT_CLASSIFICATION	// -branch
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// entries are of the form: //CVS 1.11 // File module/filename is new; current revision 1.1 //CVS 1.11.9 // File module/filename is new; cvstag_2003_11_03_2  revision 1.1 // or // File module/filename changed from revision 1.4 to 1.6 // or // File module/filename is removed; not included in // release tag SKINLF_12 //CVS 1.11.9 // File testantoine/antoine.bat is removed; TESTANTOINE_1 revision 1.1.1.1 // // get rid of 'File module/"
WITHOUT_CLASSIFICATION	// CheckStyle:MemberNameCheck OFF - bc
WITHOUT_CLASSIFICATION	// We need character encoding aware printing here. // So, using PrintWriter over OutputStreamWriter instead of PrintStream
WITHOUT_CLASSIFICATION	// convert from ascii back to native // encoding to convert to/from // Where to find input files // Where to put output files // Extension of output files if different
WITHOUT_CLASSIFICATION	// we are forced to fork ANTLR since there is a call // to System.exit() and there is nothing we can do // right now to avoid this. :-( (SBa) // I'm not removing this method to keep backward compatibility
WITHOUT_CLASSIFICATION	//error if both are empty, or both are set
WITHOUT_CLASSIFICATION	// hasCR is still true (for the second one)
WITHOUT_CLASSIFICATION	// should be the default, as it integrates better in ant.
WITHOUT_CLASSIFICATION	// scan source and dest dirs to build up both copy lists and // compile lists //        scanDir(srcDir, destDir);
WITHOUT_CLASSIFICATION	// if it's a non source file, copy it if a later date than the // dest // if it's a source file, see if the destination class file // needs to be recreated via compilation
WITHOUT_CLASSIFICATION	// depending on implementation, XMLReader can yield hips of warning, // only output then if user explicitly asked for it
WITHOUT_CLASSIFICATION	/* ========================================================================    *    * Instance variables.    */
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// swallow
WITHOUT_CLASSIFICATION	// If only default is specified and the property previously // existed in the property file, it is unchanged.
WITHOUT_CLASSIFICATION	// make sure to close all handles, otherwise the garbage // collector will close them...whenever possible and // Windows may complain about not being able to delete files.
WITHOUT_CLASSIFICATION	// WARN: Don't use the StreamSource(File) ctor. It won't work with // xalan prior to 2.2 because of systemid bugs.
WITHOUT_CLASSIFICATION	// build the command line from what we got the format // as specified in the CCM.EXE help
WITHOUT_CLASSIFICATION	// implementation of org.apache.tools.ant.taskdefs.ExecuteStreamHandler interface
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	// Default the viewpath to basedir if it is not specified
WITHOUT_CLASSIFICATION	/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */
WITHOUT_CLASSIFICATION	// -c
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	// -cfile
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// -I- or -I-Y or -I-N
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir and a label ...
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* -------------------- */
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// -Y
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// VSS items
WITHOUT_CLASSIFICATION	// skip version info and general purpose byte
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	// first off, make sure that we've got a command and a vssdir and a label ...
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	/* Had to make two separate commands here because if a space is               inserted between the flag and the value, it is treated as a               Windows filename with a space and it is enclosed in double               quotes ("). This breaks clearcase.            */
WITHOUT_CLASSIFICATION	// we get the root classes and build up a set of // classes upon which they depend
WITHOUT_CLASSIFICATION	// read the constant pool in and resolve it
WITHOUT_CLASSIFICATION	/*         * Use the Runtime object to execute an external command.  Use the         * RedirectOutput inner class to direct the standard and error output         * from the command to the JRE's standard output         */
WITHOUT_CLASSIFICATION	/*         * Two Maps are used to track local DTDs that will be used in case the         * remote copies of these DTDs cannot be accessed.  The key for the Map         * is the DTDs public ID and the value is the local location for the DTD         */
WITHOUT_CLASSIFICATION	// depFile exists and is newer than the class file // need to get dependency list from the map.
WITHOUT_CLASSIFICATION	// without closure we may delete an inner class but not the // top level class which would not trigger a recompile.
WITHOUT_CLASSIFICATION	//always trigger file mode if commands are big enough
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//fill in args
WITHOUT_CLASSIFICATION	//iterate through the ref list & generate an entry for each //or just rely on the fact that the toString operator does this, but //noting that the separator is ';' on windows, ':' on unix
WITHOUT_CLASSIFICATION	//now run the command of exe + settings + files
WITHOUT_CLASSIFICATION	/*     * Directory where "source" EJB files are stored and where stubs and     * skeletons will also be written.     */
WITHOUT_CLASSIFICATION	/*     * This Hashtable maintains a list of EJB class files processed by the ejbc     * utility (both "source" class files as well as stubs and skeletons). The     * key for the Hashtable is a String representing the path to the class file     * (relative to the destination directory).  The value for the Hashtable is     * a File object which reference the actual class file.     */
WITHOUT_CLASSIFICATION	/* Execute the ejbc utility -- stubs/skeletons are rebuilt, if needed */
WITHOUT_CLASSIFICATION	// EJB's display name // EJB's home interface name // EJB's remote interface name // EJB's implementation class // EJB's primary key class // or "stateful" or "stateless" // Does this EJB support CMP? // Does this EJB support IIOP? // Does this EJB require failover? // CMP descriptor list
WITHOUT_CLASSIFICATION	/* Check the timestamp on the EJB implementation class.             *             * Note that if ONLY the implementation class has changed, it's not             * necessary to rebuild the EJB stubs and skeletons.  For this             * reason, we ensure the file exists (using lastModified above), but             * we DON'T compare it's timestamp with the timestamps of the home             * and remote interfaces (because it's irrelevant in determining if             * ejbc must be run)             */
WITHOUT_CLASSIFICATION	//classpath //add at the end of the classpath //the system classpath in order to find the tools.jar file
WITHOUT_CLASSIFICATION	// ejb jar file
WITHOUT_CLASSIFICATION	//client jar file
WITHOUT_CLASSIFICATION	// Have to catch this because of the semantics of calling main()
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	/* ------------- */
WITHOUT_CLASSIFICATION	// descriptorName = <path><basename><basenameterminator><remainder> // examples = /org/objectweb/fooAppli/foo/Foo-ejb-jar.xml // examples = /org/objectweb/fooAppli/foo/Foo.xml (JOnAS convention)
WITHOUT_CLASSIFICATION	// class name (search in the classpath provided for the ejbjar element)
WITHOUT_CLASSIFICATION	// additionalargs
WITHOUT_CLASSIFICATION	// get all the files in the descriptor directory
WITHOUT_CLASSIFICATION	// If an explicit securityPolicy file was specified, it maybe an // absolute path.  Use the project to resolve it.
WITHOUT_CLASSIFICATION	// Since the descriptor read properly, everything should be o.k.
WITHOUT_CLASSIFICATION	// Lastly create File object for the Jar files. If we are using // a flat destination dir, then we need to redefine baseName!
WITHOUT_CLASSIFICATION	/*         * For the GenericDeploymentTool, do nothing.  Vendor specific         * subclasses should throw a BuildException if the configuration is         * invalid for their server.         */
WITHOUT_CLASSIFICATION	// Get the filename of vendor specific descriptor
WITHOUT_CLASSIFICATION	// now that we have the weblogic descriptor, we parse the file // to find other descriptors needed to deploy the bean. // this could be the weblogic-cmp-rdbms.xml or any other O/R // mapping tool descriptors.
WITHOUT_CLASSIFICATION	// Update with changed Bean class
WITHOUT_CLASSIFICATION	// need to close files and perhaps rename output
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// are any of the above out of date. // we find the implementation classes and see if they are older than any // of the above or the .ser file itself.
WITHOUT_CLASSIFICATION	/*     * Filenames of the standard EJB descriptor (which is passed to this class     * from the parent "ejbjar" task) and the iAS-specific EJB descriptor     * (whose name is determined by this class).  Both filenames are relative     * to the directory specified by the "srcdir" attribute in the ejbjar task.     */
WITHOUT_CLASSIFICATION	//remove the .class
WITHOUT_CLASSIFICATION	// create the output .jar, if required
WITHOUT_CLASSIFICATION	// change this to get the objects from the other reference
WITHOUT_CLASSIFICATION	// Available specification version must be >= required
WITHOUT_CLASSIFICATION	// Implementation version must be >= required
WITHOUT_CLASSIFICATION	//WARNING: We trim the values of all the attributes because //Some extension declarations are badly defined (ie have spaces //after version or vendorID)
WITHOUT_CLASSIFICATION	/*     * Validates URL     */
WITHOUT_CLASSIFICATION	// the new value, this needs to be here // because it is required to calculate the next position to // search from at the end of the loop
WITHOUT_CLASSIFICATION	// iterator through all the files and process them.
WITHOUT_CLASSIFICATION	// keys to optional attributes
WITHOUT_CLASSIFICATION	// use the directory containing the target as the output directory
WITHOUT_CLASSIFICATION	// null watchdog means no timeout, you'd better not check with null
WITHOUT_CLASSIFICATION	/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */
WITHOUT_CLASSIFICATION	// this comment extract from JUnit Task may also apply here // "in VM is not very nice since it could probably hang the // whole build. IMHO this method should be avoided and it would be best // to remove it in future versions. TBD. (SBa)"
WITHOUT_CLASSIFICATION	// not necessary as JDepend would fail, but why loose // some time?
WITHOUT_CLASSIFICATION	// not necessary as JDepend would fail, but why loose // some time?
WITHOUT_CLASSIFICATION	// not necessary as JDepend would fail, but why loose // some time?
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	//If we get here, it could be because we are trying to put a //directory entry that already exists. //For example, we're trying to write "com", but a previous //entry from another mergefile was called "com". //In that case, just ignore the error and go on to the //next entry.
WITHOUT_CLASSIFICATION	/*          First, some notes.          On MRJ 2.2.2, getting the size, compressed size, and CRC32 from the          ZipInputStream does not work for compressed (deflated) files.  Those calls return -1.          For uncompressed (stored) files, those calls do work.          However, using ZipFile.getEntries() works for both compressed and          uncompressed files.          Now, from some simple testing I did, it seems that the value of CRC-32 is          independent of the compression setting. So, it should be easy to pass this          information on to the output entry.        */
WITHOUT_CLASSIFICATION	// Quick return - no output do nothing.
WITHOUT_CLASSIFICATION	// Self-describing as of JUnit 4 (#38811). But trim "(ClassName)".
WITHOUT_CLASSIFICATION	//the trick to integrating test output to the formatter, is to //create a special test class that asserts an error //and tell the formatter that it raised.
WITHOUT_CLASSIFICATION	// ignored.
WITHOUT_CLASSIFICATION	/*         * pre Ant 1.6 this method used to call getClass().getResource         * while Ant 1.6 will call ClassLoader.getResource().         *         * The difference is that Class.getResource expects a leading         * slash for "absolute" resources and will strip it before         * delegating to ClassLoader.getResource - so we now have to         * emulate Class's behavior.         */
WITHOUT_CLASSIFICATION	// okay we have a copy of the child, now the child becomes the parent // and we are iterating recursively over its children.
WITHOUT_CLASSIFICATION	// See wrapListener for reason:
WITHOUT_CLASSIFICATION	// if there is a suite method available, then try // to extract the suite from it. If there is an error // here it will be caught below and reported.
WITHOUT_CLASSIFICATION	// JUnit 4 does not distinguish between errors and failures // even in the JUnit 3 adapter. // So we need to help it a bit to retain compatibility for JUnit 3 tests.
WITHOUT_CLASSIFICATION	// sorted by newest Kaffe version first
WITHOUT_CLASSIFICATION	//getProject().log("listing files in directory " + directory, Project.MSG_DEBUG);
WITHOUT_CLASSIFICATION	// to remove directories, start by the end of the list // the trunk does not let itself be removed before the leaves
WITHOUT_CLASSIFICATION	// ignore it
WITHOUT_CLASSIFICATION	// NumberFormatException or ArrayOutOfBondsException could happen here
WITHOUT_CLASSIFICATION	//Throw exception on errors (except up-to-date) // //When a server is down, the code expects : //Perforce client error: //Connect to server failed; check $P4PORT. //TCP connect to localhost:1666 failed. //connect: localhost:1666: Connection refused //Some forms producing commands (p4 -s change -o) do tag the output //others don't..... //Others mark errors as info, for example edit a file //which is already open for edit..... //Just look for error: - catches most things....
WITHOUT_CLASSIFICATION	// Because of the way I create the full target path, there // must be NO slash at the end of targetFolder and folderName // However, if the slash or backslash is the only character, leave it alone
WITHOUT_CLASSIFICATION	// Connect to the StarTeam server, and log on.
WITHOUT_CLASSIFICATION	// Simplest constructor, uses default encryption algorithm and compression level.
WITHOUT_CLASSIFICATION	// Create a variable dir that contains the name of // the StarTeam folder that is the root folder in this view. // Get the default path to the current view.
WITHOUT_CLASSIFICATION	// We want to display the folder the same way you would // enter it on the command line ... so we remove the // View name (which is also the name of the root folder, // and therefore shows up at the start of the path).
WITHOUT_CLASSIFICATION	// If we displayed the project, view, item type, or folder, // then show the list of relevant item properties.
WITHOUT_CLASSIFICATION	// If we find a "file" attribute then act on a file otherwise act on a project
WITHOUT_CLASSIFICATION	// Special setters for the sub-classes
WITHOUT_CLASSIFICATION	// Special setters for the sub-classes
WITHOUT_CLASSIFICATION	// Login info is required
WITHOUT_CLASSIFICATION	// Path to the SourceOffSite home directory /home/user/.sos
WITHOUT_CLASSIFICATION	// Check if source is a directory
WITHOUT_CLASSIFICATION	/*             *  There is a bug in JavaSound 0.90 (jdk1.3beta).             *  It prevents correct termination of the VM.             *  So we have to exit ourselves.             */
WITHOUT_CLASSIFICATION	// Catch everything - some of the above return nulls, // throw exceptions or generally misbehave // in the event of a problem etc
WITHOUT_CLASSIFICATION	// only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	// only track progress for files larger than 100kb in verbose mode
WITHOUT_CLASSIFICATION	// since filesize keeps on decreasing we have to store the // initial filesize
WITHOUT_CLASSIFICATION	// note, it's important to scan the items BEFORE we make the // UnmatchedFileMap because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.
WITHOUT_CLASSIFICATION	// If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	// If the file doesn't pass the include/exclude tests, skip it.
WITHOUT_CLASSIFICATION	// We try to update the status once to give StarTeam // another chance.
WITHOUT_CLASSIFICATION	// note, it's important to scan the items BEFORE we make the // Unmatched file map because that creates a bunch of NEW // folders and files (unattached to repository) and we // don't want to include those in our traversal.
WITHOUT_CLASSIFICATION	// once we find a folder that isn't in the repository, // anything below it can be deleted.
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////// // default values for attributes. ///////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// default behavior is to fail on an error // default behavior is to not overwrite // default behavior is make a single link
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Add VSS items [-B] [-C] [-D-] [-H] [-I-] [-K] [-N] [-O] [-R] [-W] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// build the command line from what we got the format is // ss Checkout VSS items [-G] [-C] [-H] [-I-] [-N] [-O] [-R] [-V] [-Y] [-?] // as specified in the SS.EXE help
WITHOUT_CLASSIFICATION	// Not a .class file or the one we'd generate
WITHOUT_CLASSIFICATION	// We have the loader which is being used to load the // CatalogResolver. Can it see the ApacheResolver? The // base resolver will only be able to create the ApacheResolver // if it can see it - doesn't use the context loader.
WITHOUT_CLASSIFICATION	// // Use the passed in base in preference to the base // from matchingEntry, which is either null or the // directory in which the external catalog file from // which it was obtained is located.  We make a copy // so matchingEntry's original base is untouched. // // This is the standard behavior as per my reading of // the JAXP and XML Catalog specs.  CKS 11/7/2002 //
WITHOUT_CLASSIFICATION	// // Get Method instances for each of the methods we need to // call on the resolverImpl using reflection.  We can't // call them directly, because they require on the // xml-commons resolver library which may not be available // in the classpath. //
WITHOUT_CLASSIFICATION	// // We didn't match a ResourceLocation, but since we // only support PUBLIC and URI entry types internally, // it is still possible that there is another entry in // an external catalog that will match.  We call // Apache resolver's resolveEntity method to cover // this possibility. //
WITHOUT_CLASSIFICATION	// record data about the last scanned resource
WITHOUT_CLASSIFICATION	// path containing one or more elements
WITHOUT_CLASSIFICATION	// just append beginToken and search further
WITHOUT_CLASSIFICATION	//create the command to run Java, including user specified options
WITHOUT_CLASSIFICATION	// JDK usage command line says that -jar must be the first option, as there is // a bug in JDK < 1.4 that forces the jvm type to be specified as the first // option, it is appended here as specified in the docs even though there is // in fact no order.
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	// CheckStyle:VisibilityModifier ON
WITHOUT_CLASSIFICATION	/* now check each Resource in case the child only           lets through files from any children IT may have: */
WITHOUT_CLASSIFICATION	// Quick return: directories cannot be signed
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector     */
WITHOUT_CLASSIFICATION	/**     * When using this as a custom selector, this method will be called.     * It translates each parameter into the appropriate setXXX() call.     *     * @param parameters the complete set of parameters for this selector.     */
WITHOUT_CLASSIFICATION	// // -----  Set default values  ----- //
WITHOUT_CLASSIFICATION	// nothing specified - use default
WITHOUT_CLASSIFICATION	// How to handle non-file-Resources? I copy temporarily the // resource to a file and use the file-implementation.
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	//find the out-of-date targets:
WITHOUT_CLASSIFICATION	// write namespace declarations
WITHOUT_CLASSIFICATION	// Extrapolating from: // "NetWare may have a "java" in that directory, but 99% of // the time, you don't want to execute it" -- Jeff Tulley // <JTULLEY@novell.com>
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// Check for bsf first then javax // This version does not check if the scriptManager // supports the language.
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	// NotReached
WITHOUT_CLASSIFICATION	//no need to synchronize, as Vector is always synchronized
WITHOUT_CLASSIFICATION	// Eliminate consecutive slashes after the drive spec:
WITHOUT_CLASSIFICATION	//if it does not, then the file is not up to date.
WITHOUT_CLASSIFICATION	// record destdir for later use in getResource
WITHOUT_CLASSIFICATION	// Check to see if it's an inner class 'com.company.Class$Inner'
WITHOUT_CLASSIFICATION	// treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	// treat non-matching groups as empty matches
WITHOUT_CLASSIFICATION	/*          A 6-byte block header, the value chosen arbitrarily          as 0x314159265359 :-).  A 32 bit value does not really          give a strong enough guarantee that the value will not          appear by chance in the compressed datastream.  Worst-case          probability of this event, for a 900k block, is about          2.0e-3 for 32 bits, 1.0e-5 for 40 bits and 4.0e-8 for 48 bits.          For a compressed file of size 100Gb -- about 100000 blocks --          only a 48-bit marker will do.  NB: normal compression/          decompression do *not* rely on these statistical properties.          They are only important when trying to recover blocks from          damaged files.        */
WITHOUT_CLASSIFICATION	// write 8-bit
WITHOUT_CLASSIFICATION	// bsBuffShadow |= 0 << (32 - bsLiveShadow - 1);
WITHOUT_CLASSIFICATION	// // inlined: bsW(len_selCtr[sfmap_i] & 0xff, //              code_selCtr[sfmap_i]); //
WITHOUT_CLASSIFICATION	// Following block contains unrolled code which could be shortened by // coding it in additional loops.
WITHOUT_CLASSIFICATION	/*                  Complete the big bucket [ss] by quicksorting                  any unsorted small buckets [ss, j].  Hopefully                  previous pointer-scanning phases have already                  completed many of the small buckets [ss, j], so                  we don't have to sort them at all.            */
WITHOUT_CLASSIFICATION	// Step 2: // Now scan this big bucket so as to synthesise the // sorted order for small buckets [t, ss] for all t != ss.
WITHOUT_CLASSIFICATION	//  900021 byte // 3600000 byte // 3600000 byte // ------------ // 8433529 byte // ============
WITHOUT_CLASSIFICATION	// The clean way would be to throw an exception. //throw new IOException("crc error");
WITHOUT_CLASSIFICATION	// make next blocks readable without error // (repair feature, not yet documented, not tested)
WITHOUT_CLASSIFICATION	/*          Setting up the unzftab entries here is not strictly          necessary, but it does save having to do it later          in a separate pass, and so saves a block's worth of          cache misses.        */
WITHOUT_CLASSIFICATION	// tt.length should always be >= length, but theoretically // it can happen, if the compressor mixed small and large // blocks.  Normally only the last block will be smaller // than others.
WITHOUT_CLASSIFICATION	// deprecated, but email is byte-oriented
WITHOUT_CLASSIFICATION	// // NOTE // We have fit EOF, and the block is not full! // // This is a broken archive. It does not follow the standard // blocking algorithm. However, because we are generous, and // it requires little effort, we will simply ignore the error // and continue as if the entire block were read. This does // not appear to break anything upstream. We used to return // false in this case. // // Thanks to 'Yohann.Roussel@alcatel.fr' for this fix. //
WITHOUT_CLASSIFICATION	// version needed to extract // general purpose bit flag
WITHOUT_CLASSIFICATION	// requires version 2 as we are going to store length info // in the data descriptor
WITHOUT_CLASSIFICATION	// file comment
WITHOUT_CLASSIFICATION	// swallow, throw the original exception instead
WITHOUT_CLASSIFICATION	/* compressed size                 */
WITHOUT_CLASSIFICATION	/* disk number start               */
WITHOUT_CLASSIFICATION	/* total number of entries in      */
WITHOUT_CLASSIFICATION	/* total number of entries in      */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
IMPLEMENTATION	// I don't know if this should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //
IMPLEMENTATION	// This runs the options, and shows progress. // (It appears to be a bad thing to fork this onto another thread.) //
IMPLEMENTATION	// if current char is comma, insert line break after it // // we should be able to find the comma because the range for enum constants includes all trailing comments up to the separator // if TargetSourceRangeComputer of ASTRewrite changes, this logic should change to skip comments // see org.eclipse.emf.codegen.merge.java.facade.ast.CommentAwareSourceRangeComputer#getEnumConstantSourceRange(ASTNode)
IMPLEMENTATION	// we should be able to find the comma because the range for enum constants includes all preceding comments up to the previous constant // if TargetSourceRangeComputer of ASTRewrite changes, this logic should change to skip comments // see org.eclipse.emf.codegen.merge.java.facade.ast.CommentAwareSourceRangeComputer#getEnumConstantSourceRange(ASTNode)
IMPLEMENTATION	// TODO we should generate this.
IMPLEMENTATION	//FB TBD filter out volatile and other inappropriate links?
IMPLEMENTATION	//TBD return super classes of classes in this package that come from a delegate package.
IMPLEMENTATION	// TODO handle situation when ASTJNode is removed (compilationUnit is null)
IMPLEMENTATION	// TODO Binary incompatibility; an old override must override putAll.
IMPLEMENTATION	// TODO What about the instance type name and the fact that we should be matching its type argument structure? // If they match so far, we must assume they are okay and then check all the arguments. //
IMPLEMENTATION	// TODO translation
IMPLEMENTATION	// TODO processing instructions are not sent to recordValues
IMPLEMENTATION	// TODO comments are not sent to recordValues
IMPLEMENTATION	// TODO Ignore for now.
IMPLEMENTATION	// I don't know if this should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //
IMPLEMENTATION	// I don't know if this should be run this deferred // because we might have to give the editor a chance to process the viewer update events // and hence to update the views first. // //
WITHOUT_CLASSIFICATION	// Delete the ActionContributionItems with matching action. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Recompute the read only state. //
WITHOUT_CLASSIFICATION	// Refresh any actions that may become enabled or disabled. //
WITHOUT_CLASSIFICATION	// Create the command stack that will notify this editor as commands are executed. //
WITHOUT_CLASSIFICATION	// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Try to select the affected objects. //
WITHOUT_CLASSIFICATION	// Create the editing domain with a special command stack. //
WITHOUT_CLASSIFICATION	// Make sure it's okay. //
WITHOUT_CLASSIFICATION	// Create an adapter factory that yields item providers. //
WITHOUT_CLASSIFICATION	// Try to select the items in the current content viewer of the editor. //
WITHOUT_CLASSIFICATION	// If it is changing... //
WITHOUT_CLASSIFICATION	// Create the listener on demand. //
WITHOUT_CLASSIFICATION	// Stop listening to the old one. //
WITHOUT_CLASSIFICATION	// Start listening to the new one. //
WITHOUT_CLASSIFICATION	// Remember it. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Set the editors selection based on the current viewer's selection. //
WITHOUT_CLASSIFICATION	// Load the resource through the editing domain. //
WITHOUT_CLASSIFICATION	// Create a page for the selection tree view. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Ensures that this editor will only display the page's tab // area if there are more than one page //
WITHOUT_CLASSIFICATION	// The content outline is just a tree. //
WITHOUT_CLASSIFICATION	// This is the page for the list viewer //
WITHOUT_CLASSIFICATION	// This is the page for the tree viewer //
WITHOUT_CLASSIFICATION	// This is the page for the table viewer. //
WITHOUT_CLASSIFICATION	// This is the page for the table tree viewer. //
WITHOUT_CLASSIFICATION	// Make sure our popups work. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// Listen to selection so that we can handle it is a special way. //
WITHOUT_CLASSIFICATION	// This ensures that we handle selections correctly. //
WITHOUT_CLASSIFICATION	// Set the selection to the widget. //
WITHOUT_CLASSIFICATION	// Save only resources that have actually changed. //
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// Set the input to the widget. //
WITHOUT_CLASSIFICATION	// Save the resources to the file system. //
WITHOUT_CLASSIFICATION	// This runs the options, and shows progress. //
WITHOUT_CLASSIFICATION	// Refresh the necessary state. //
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Create a default .jetsettings file file
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	// Set the new variables. //
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getPackage(java.lang.String)   */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//Ecore2XMLResourceFactoryImpl
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	//Ecore2XMLAdapterFactory
WITHOUT_CLASSIFICATION	//Ecore2XMLSwitch
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	//Ecore2XMLResourceFactoryImpl
WITHOUT_CLASSIFICATION	//FunctionNamePairImpl
WITHOUT_CLASSIFICATION	//MappingFactoryImpl
WITHOUT_CLASSIFICATION	//ComplexTypeConverterImpl
WITHOUT_CLASSIFICATION	//MappingHelperImpl
WITHOUT_CLASSIFICATION	//MappingStrategyImpl
WITHOUT_CLASSIFICATION	//FunctionPairImpl
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	//MappingImpl
WITHOUT_CLASSIFICATION	// Remove zero width non-breaking space, which may be used as a byte order marker,  // and may be ignored according to the Unicode FAQ: http://www.unicode.org/unicode/faq/utf_bom.html#38 //
WITHOUT_CLASSIFICATION	//TypeConverterImpl
WITHOUT_CLASSIFICATION	// Barring a better result, this will be the result. //
WITHOUT_CLASSIFICATION	// If the intersection is empty, i.e., no ancestor is in the mapping... //
WITHOUT_CLASSIFICATION	// If this mapping isn't a parent, it's children definitely won't be either. //
WITHOUT_CLASSIFICATION	// Make sure the collections aren't identical... //
WITHOUT_CLASSIFICATION	//FB used to check for parent != null. // Need to find the top most model object not including the resource. // parent instanceof Eobject only checks for trees in model object space.
WITHOUT_CLASSIFICATION	// printAdapters();
WITHOUT_CLASSIFICATION	//MappingRootImpl
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	// Try to select the items in the current content viewer of the editor. //
WITHOUT_CLASSIFICATION	// If it is changing... //
WITHOUT_CLASSIFICATION	// Create the listener on demand. //
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// VAJ kludge //
WITHOUT_CLASSIFICATION	// This just notifies those things that are affected by the selection. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Stop listening to the old one. //
WITHOUT_CLASSIFICATION	// Start listening to the new one. //
WITHOUT_CLASSIFICATION	// Remember it. //
WITHOUT_CLASSIFICATION	/* EATM getDecoratedAdapterFactory().*/
WITHOUT_CLASSIFICATION	/* EATM getDecoratedAdapterFactory().*/
WITHOUT_CLASSIFICATION	/* EATM getDecoratedAdapterFactory().*/
WITHOUT_CLASSIFICATION	// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
WITHOUT_CLASSIFICATION	// I assume that the editorInput is a file object. //
WITHOUT_CLASSIFICATION	// Handle the creation of the model from the modelFile. //
WITHOUT_CLASSIFICATION	// Restore the persistent command stack, if need be. //
WITHOUT_CLASSIFICATION	// Create a page for the selection tree view. //
WITHOUT_CLASSIFICATION	// Set up the tree viewer. //
WITHOUT_CLASSIFICATION	// Make sure our popups work. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// This ensures that we handle selections correctly. //
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// Load the resource through the editing domain. // This will create a context and associate it with the resource set. //
WITHOUT_CLASSIFICATION	// The one object in the resource's extent should be the root object. //
WITHOUT_CLASSIFICATION	// Save the resource to the file system. //
WITHOUT_CLASSIFICATION	// Update the workbench's knowledge of the file's contents. //
WITHOUT_CLASSIFICATION	// Add the binding to the provided hash table: //
WITHOUT_CLASSIFICATION	// Refresh the necessary state. //
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	// Parse as an attribute=value:
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Create the mapping domain with a special command stack. // 
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Doing this just makes focus go to the default control, not the control that last has focus. // // super.setFocus();
WITHOUT_CLASSIFICATION	// If the object is an input or output object, then use it. //
WITHOUT_CLASSIFICATION	// Process the children recursively. //
WITHOUT_CLASSIFICATION	// Look for a single-char work delimiter: //
WITHOUT_CLASSIFICATION	// oldWidth = table.getClientArea().width;
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((ComplexTypeConverter)object).ePackageMapping();
WITHOUT_CLASSIFICATION	// This is for the in2out feature. //
WITHOUT_CLASSIFICATION	// This is for the out2in feature. //
WITHOUT_CLASSIFICATION	// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	// This is for the in2out feature. //
WITHOUT_CLASSIFICATION	// This is for the topDown feature. //
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((MappingRoot)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((FunctionNamePair)object).ePackageMapping();
WITHOUT_CLASSIFICATION	// This is for the in2out feature. //
WITHOUT_CLASSIFICATION	// This is for the out2in feature. //
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((FunctionNamePair)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	// HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((FunctionPair)object).ePackageMapping();
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((FunctionPair)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	//HGD::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getStructuralFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	// This is here only to support deprecated adapt(object) rather than adapt(object, Interface.class). // // supportedTypes.add(null);
WITHOUT_CLASSIFICATION	// supportedTypes.add(IUpdateableItemText.class);
WITHOUT_CLASSIFICATION	//FB ????? 
WITHOUT_CLASSIFICATION	// This is for the helper feature. //
WITHOUT_CLASSIFICATION	// This is for the typeMapping feature. //
WITHOUT_CLASSIFICATION	//FIX:::
WITHOUT_CLASSIFICATION	//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	//fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), msg.getOldValue(), msg.getNewValue(), msg.getPosition());
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// Create a resource set and load the model file into it. //
WITHOUT_CLASSIFICATION	// This is the path of the target directory. //
WITHOUT_CLASSIFICATION	// Break the cycle. //
WITHOUT_CLASSIFICATION	//MappingAdapterFactory
WITHOUT_CLASSIFICATION	// This ensures that we are dealing with actual MOF objects. //
WITHOUT_CLASSIFICATION	//MappingSwitch
WITHOUT_CLASSIFICATION	// This is the name of the model. //
WITHOUT_CLASSIFICATION	// Create a resource set and load the model file into it. //
WITHOUT_CLASSIFICATION	// This is the path of the target directory. //
WITHOUT_CLASSIFICATION	// This is to handle a genmodel produced by rose2genmodel. //
WITHOUT_CLASSIFICATION	// This is to handle a genmodel produced by rose2genmodel. //
WITHOUT_CLASSIFICATION	// Clean up any old project information. //
WITHOUT_CLASSIFICATION	// Remove variables since the plugin.xml should provide the complete path information. //
WITHOUT_CLASSIFICATION	// Look for a likely plugin name. //
WITHOUT_CLASSIFICATION	// Clean up any old project information. //
WITHOUT_CLASSIFICATION	// Remove variables since the plugin.xml should provide the complete path information. //
WITHOUT_CLASSIFICATION	// Consult the generator option for backwards compatibility. //
WITHOUT_CLASSIFICATION	// Apply a redirection pattern, if specified. //
WITHOUT_CLASSIFICATION	// If the target is read-only, we can ask the platform to release it. //
WITHOUT_CLASSIFICATION	// Multiple jet directives.
WITHOUT_CLASSIFICATION	// If the target is read-only, we can ask the platform to release it. //
WITHOUT_CLASSIFICATION	// Merge with an existing file. //
WITHOUT_CLASSIFICATION	// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //
WITHOUT_CLASSIFICATION	// If the target is read-only, we can ask the platform to release it, and it may be updated in the process. //
WITHOUT_CLASSIFICATION	// Create a code formatter for this compilation unit, if needed. //
WITHOUT_CLASSIFICATION	// If a newline from the previous character data remains, add a generator for it. //
WITHOUT_CLASSIFICATION	// If we can't determine it by reading the file, // look at the preferences instead.
WITHOUT_CLASSIFICATION	// Since we're invoking plugged-in code, we must be defensive against cycles. //
WITHOUT_CLASSIFICATION	// Compute the GeneratorData for the given object and its children, then for the parents of the given object. //
WITHOUT_CLASSIFICATION	// Combine the two lists. //
WITHOUT_CLASSIFICATION	// Give all generator adapters the chance to do setup work. //
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// Give all generator adapters the chance to do tear down. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// returns the package in which this enum literal is defined // returns the name of the enum literal get method in the package interface
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// String getCapPackageID(); // Includes features in other packages that delegate to those in this one.
WITHOUT_CLASSIFICATION	// returns the package in which this feature is defined // returns the name of the feature get method in the package interface (e.g. Company_Name) // returns the name of the feature get method in the package interface (e.g. Xyz.eINSTANCE.getCompany_Name)
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// // EMF.Editor generation //
WITHOUT_CLASSIFICATION	// // Tests generation //
WITHOUT_CLASSIFICATION	// boolean isGenerateEditPlugin(); // boolean isGenerateEditorPlugin();
WITHOUT_CLASSIFICATION	//  Remove any non-Java dependencies from being added. //
WITHOUT_CLASSIFICATION	// This URI handler redirect the URI based on the mapping. //
WITHOUT_CLASSIFICATION	// There must be at least one match. //
WITHOUT_CLASSIFICATION	// Ignore if there is not substantial change. //
WITHOUT_CLASSIFICATION	// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	// Do not allow an existing MANIFEST.MF to be overwritten, as the tests project is originally generated from scratch. //
WITHOUT_CLASSIFICATION	// Do not allow an existing build.properties to be overwritten, as the tests project is originally generated from scratch. //
WITHOUT_CLASSIFICATION	//We are not generating the manifest file if the plugin.xml exists. //
WITHOUT_CLASSIFICATION	// Use an alternate if we can't write to this one. //
WITHOUT_CLASSIFICATION	// J9 2.2 has problems assigning null to a Class variable. // 
WITHOUT_CLASSIFICATION	// Create the options model. //
WITHOUT_CLASSIFICATION	//  Remove any non-Java dependencies from being added. //
WITHOUT_CLASSIFICATION	// Escape a string that will terminate the comment in which this will all be nested. //
WITHOUT_CLASSIFICATION	// If it is an unqualified name, we will assume it refers to a type parameter, since we don't support default package. //
WITHOUT_CLASSIFICATION	// Search the local scope for a resolution of the type parameter name. //
WITHOUT_CLASSIFICATION	// Check if we found a resolution for it. //
WITHOUT_CLASSIFICATION	// If not we'll erase it to java.lang.Object. //
WITHOUT_CLASSIFICATION	// Otherwise, recursively call ourselves to substitute it in context if necessary. //
WITHOUT_CLASSIFICATION	// Add back in the array indices if there are any. //
WITHOUT_CLASSIFICATION	// Just import the name or use it directly. //
WITHOUT_CLASSIFICATION	// We treat the feature as volatile if it is volatile itself or if it is  // a reference whose opposite end is volatile,  // unless that opposite volatile reference delegates to a feature map, // in which case, a full implementation of the references can be generated. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////
WITHOUT_CLASSIFICATION	// for Ecore or something that explicitly extends it, we need to exclude // EObject, which is already handled by the default case
WITHOUT_CLASSIFICATION	// We assume that the rootExtendsClass already implements it. //
WITHOUT_CLASSIFICATION	// We assume that the rootExtendsClass already implements it. //
WITHOUT_CLASSIFICATION	// If the flag will straddle two fields, bump it to the next one. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// Ignore the exception.
WITHOUT_CLASSIFICATION	// An interface should be abstract, but this makes sure of that fact. //
WITHOUT_CLASSIFICATION	// Simple cases: no mix-ins for no inheritance or for a single base class. //
WITHOUT_CLASSIFICATION	// If extending an interface, its mix-ins must be included, since there is no implementation to handle them. //
WITHOUT_CLASSIFICATION	// Mix-ins are everything after the base class. //
WITHOUT_CLASSIFICATION	// If this is class has mixed content, the mixed feature should always be included, even if inherited, and come first. //
WITHOUT_CLASSIFICATION	// Add all other create child features that this item provider is responsible for. //
WITHOUT_CLASSIFICATION	// Many inherited methods must be overridden to handle this case. //
WITHOUT_CLASSIFICATION	// If this looks like a feature getter, a kind property will allow it to be recognized properly. //
WITHOUT_CLASSIFICATION	// Since we only use this right on an operation, we always want to include the keyType and valueType, and we never // want to qualify the property names. //
WITHOUT_CLASSIFICATION	// Type parameter casts can't be checked. //
WITHOUT_CLASSIFICATION	// If there are any arguments and they are not unbounded wildcards, casts can't be checked. //
WITHOUT_CLASSIFICATION	// Optimize the performance of applying the import regular  // expressions locating the last import line //      
WITHOUT_CLASSIFICATION	// Some XML types declare nebulous Object mappings. // They actually map to internal types that shouldn't be generated into code. //
WITHOUT_CLASSIFICATION	// If there is a base XML or Ecore type, use one of the two corresponding built-in factories to create a value from the literal string. //
WITHOUT_CLASSIFICATION	// Get the Java literal expression for the value. //
WITHOUT_CLASSIFICATION	// Otherwise, produce an expression that uses the appropriate factory to create a value from the literal. //
WITHOUT_CLASSIFICATION	// If the base package isn't set but there is a parent package, us it's information instead. //
WITHOUT_CLASSIFICATION	// Add all classes from this package first, to guarantee they get the // simple names
WITHOUT_CLASSIFICATION	// Do this here because getExtendedMetaData() is used during initialization  // and the mappings are are populated the first time it's fetched // which will miss the packages we add as we initialize the tree. //
WITHOUT_CLASSIFICATION	// Set the mapper to build an XSD2EcoreMappingRoot, if available. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// if there are no groups defined or matched, but the whole pattern matches, // then markup nodes with pattern name //
WITHOUT_CLASSIFICATION	// Restore original resource URI values. //
WITHOUT_CLASSIFICATION	// The "suffix" can actually be a substitution pattern for the package name. //
WITHOUT_CLASSIFICATION	// Walk up the superpackages, collecting the package names. // Because empty packages are ommitted from the GenModel, we need to walk up the EPackages. //
WITHOUT_CLASSIFICATION	// Any features that delegate to features in this package. //
WITHOUT_CLASSIFICATION	// If there are delegated features, add only those that aren't already in this package to the end of the list. //
WITHOUT_CLASSIFICATION	// We need to screen out duplicates in the unlikely event that we have two //  features with the same class-qualified name. We'll only generate one property //  string in that case and let the user add the second one manually, if necessary. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// source method return type is array (getExceptions), target is not array (i.e. addException)
WITHOUT_CLASSIFICATION	// We also need to set it on any GenModels holding any used or static packages that may be refered to. //
WITHOUT_CLASSIFICATION	// We also need to set it on any GenModels holding any used or static packages that may be refered to. //
WITHOUT_CLASSIFICATION	// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //
WITHOUT_CLASSIFICATION	// And we need to set it on any cached GenModels holding the special Ecore and XML packages. //
WITHOUT_CLASSIFICATION	// It's okay for there not be a precompiled template, so fail quietly. // exception.printStackTrace();
WITHOUT_CLASSIFICATION	// If there are any warnings other than raw type warnings, include all the warnings. //
WITHOUT_CLASSIFICATION	// Force the project to be setup properly. //
WITHOUT_CLASSIFICATION	// Force the project to be setup properly. //
WITHOUT_CLASSIFICATION	// node is not marked up by now, but keep checking other rules 
WITHOUT_CLASSIFICATION	// Subclasses may override this method
WITHOUT_CLASSIFICATION	// // Tests generation //
WITHOUT_CLASSIFICATION	// If we change to pattern defaults, will have to specify plain suffix in no main package case. //
WITHOUT_CLASSIFICATION	// If we change to pattern defaults, will have to specify plain suffix in no main package case. //
WITHOUT_CLASSIFICATION	// If we change to pattern defaults, will have to specify plain suffix in no main package case. //
WITHOUT_CLASSIFICATION	// Subclasses may override this method
WITHOUT_CLASSIFICATION	// See if a GenModel is registered for the package's URI, and if so, try to load it. //
WITHOUT_CLASSIFICATION	// If that didn't work, just synthesize one. //
WITHOUT_CLASSIFICATION	// Different than the Edit and Editor projects, this method is invoked while  // generating the model plugin xml.
WITHOUT_CLASSIFICATION	// EATM  // Foreign Model
WITHOUT_CLASSIFICATION	// Any features from one package that delegate to features in another. //
WITHOUT_CLASSIFICATION	// If there are features delegating across packages, add only those that aren't already being generated. //
WITHOUT_CLASSIFICATION	// Recompute the read only state. //
WITHOUT_CLASSIFICATION	// Refresh any actions that may become enabled or disabled. //
WITHOUT_CLASSIFICATION	// Create the command stack that will notify this editor as commands are executed. //
WITHOUT_CLASSIFICATION	// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
WITHOUT_CLASSIFICATION	// Try to select the affected objects. //
WITHOUT_CLASSIFICATION	// Create the editing domain with a special command stack. //
WITHOUT_CLASSIFICATION	// Make sure it's okay. //
WITHOUT_CLASSIFICATION	// Try to select the items in the current content viewer of the editor. //
WITHOUT_CLASSIFICATION	// If it is changing... //
WITHOUT_CLASSIFICATION	// Create the listener on demand. //
WITHOUT_CLASSIFICATION	// This just notifies those things that are affected by the section. //
WITHOUT_CLASSIFICATION	// Stop listening to the old one. //
WITHOUT_CLASSIFICATION	// Start listening to the new one. //
WITHOUT_CLASSIFICATION	// Remember it. //
WITHOUT_CLASSIFICATION	// Set the editors selection based on the current viewer's selection. //
WITHOUT_CLASSIFICATION	// Load the resource through the editing domain. //
WITHOUT_CLASSIFICATION	// Creates the model from the editor input //
WITHOUT_CLASSIFICATION	// Only creates the other pages if there is something that can be edited //
WITHOUT_CLASSIFICATION	// Create a page for the selection tree view. //
WITHOUT_CLASSIFICATION	// Ensures that this editor will only display the page's tab // area if there are more than one page //
WITHOUT_CLASSIFICATION	// The content outline is just a tree. //
WITHOUT_CLASSIFICATION	// Set up the tree viewer. //
WITHOUT_CLASSIFICATION	// Make sure our popups work. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// Listen to selection so that we can handle it is a special way. //
WITHOUT_CLASSIFICATION	// This ensures that we handle selections correctly. //
WITHOUT_CLASSIFICATION	// Get the first selected element. //
WITHOUT_CLASSIFICATION	// log the error, ignore the change and continue
WITHOUT_CLASSIFICATION	// Save the resources to the file system. //
WITHOUT_CLASSIFICATION	// Set the selection to the widget. //
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// Save only resources that have actually changed. //
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// loop for all commented out nodes
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// Refresh the necessary state. //
WITHOUT_CLASSIFICATION	// This runs the options, and shows progress. //
WITHOUT_CLASSIFICATION	// insert line break and comment out the first line if needed // note that first line might move backward beyond node start (e.g. if a comma of the previous enum constant has been commented out)
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	// Nothing to do
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	// Stop only on cancel. //
WITHOUT_CLASSIFICATION	// insert line break at the first line if there is something before the node start and the beginning of the line
WITHOUT_CLASSIFICATION	// Switch to the new selection provider. //
WITHOUT_CLASSIFICATION	// Fake a selection changed event to update the menus. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	//Class/genFeature.override.javajetinc //for
WITHOUT_CLASSIFICATION	// Kick of a Java build if not already in a build. //
WITHOUT_CLASSIFICATION	//Class/implementedGenOperation.override.javajetinc //for
WITHOUT_CLASSIFICATION	// do not add a new line if there is one
WITHOUT_CLASSIFICATION	// This call should get the files checked out from version control if the project is a 'team' project. //
WITHOUT_CLASSIFICATION	// there is only whitespace on this line - no need for line break
WITHOUT_CLASSIFICATION	// Check which directive it is. //
WITHOUT_CLASSIFICATION	//reader.reset(start); //return false;
WITHOUT_CLASSIFICATION	// Parse the attr-val pairs. //
WITHOUT_CLASSIFICATION	// If the template path points at a project with a JET Nature,  // then we will assume that the templates we want to use are already compiled in this plugin Java project. // 
WITHOUT_CLASSIFICATION	// Compute the URL for where the classes for this project will be located. //
WITHOUT_CLASSIFICATION	// Compute the URLs for all the output folder of all the project dependencies. //
WITHOUT_CLASSIFICATION	// Define a class loader that will look in the URLs first,  // and if it doesn't find the class there, uses the emitter's loader. //
WITHOUT_CLASSIFICATION	// Define a class loader that will look up the class in the bundle, // and if it doesn't find it there, will look in the parent. //
WITHOUT_CLASSIFICATION	// Strip off the trailing "_" and load that class. //
WITHOUT_CLASSIFICATION	// Check that the class is actually different from the one that's directly visible to the JETEmitter. //
WITHOUT_CLASSIFICATION	// Don't do any of the other normally dynamic JETEmitter project processing. //
WITHOUT_CLASSIFICATION	// Get the existing classpath and remove the project root if necessary. // Any new non-duplicate entries will be added to this. //
WITHOUT_CLASSIFICATION	// Add the new entries, including source, JRE container, and added variables and classpath containers.  //
WITHOUT_CLASSIFICATION	// Construct a proper URL for relative lookup. //
WITHOUT_CLASSIFICATION	// Determine all the bundles that this project depends on. //
WITHOUT_CLASSIFICATION	// If it doesn't correspond to a bundle, then try to process it as a project in the workspace. //
WITHOUT_CLASSIFICATION	// Add JETBuilder //
WITHOUT_CLASSIFICATION	// Create .jetproperties file //
WITHOUT_CLASSIFICATION	// clone includeStack without cloning contents //
WITHOUT_CLASSIFICATION	// Store the current state in stack. //
WITHOUT_CLASSIFICATION	// Set the new variables. //
WITHOUT_CLASSIFICATION	// Make sure we have something to pop. //
WITHOUT_CLASSIFICATION	// Get previous state in stack. //
WITHOUT_CLASSIFICATION	// Until the encoding can be specified within the template  // we need to assume an encoding capable of working with any character set.
WITHOUT_CLASSIFICATION	// Register the file, and read its content: //
WITHOUT_CLASSIFICATION	// Is stack created ? (will happen if the JET file we're looking at is missing. //
WITHOUT_CLASSIFICATION	// Restore parser state: //
WITHOUT_CLASSIFICATION	// Consume the open quote: //
WITHOUT_CLASSIFICATION	// Check end of quote, skip closing quote: //
WITHOUT_CLASSIFICATION	// Get the attribute name: //
WITHOUT_CLASSIFICATION	// Check for an equal sign: //
WITHOUT_CLASSIFICATION	// Get the attribute value: //
WITHOUT_CLASSIFICATION	// insert line break if there is non-whitespace before end of the line
WITHOUT_CLASSIFICATION	// End of the useBean tag. //
WITHOUT_CLASSIFICATION	// XMLesque Close tags //
WITHOUT_CLASSIFICATION	// Parse as an attribute=value: //
WITHOUT_CLASSIFICATION	// Reached EOF: //
WITHOUT_CLASSIFICATION	// Look for an end-of-comment or end-of-tag: //
WITHOUT_CLASSIFICATION	// The include succeeded, so if there is an alternative and we're not skipping, we need to start. //
WITHOUT_CLASSIFICATION	// If a newline from the previous character data remains, leave it around to be processed as if it appeared in the included file. //
WITHOUT_CLASSIFICATION	// The include failed, so if there is an alternative, we don't skip it. //
WITHOUT_CLASSIFICATION	// A section is not allowed without a preceding include with alternative. //
WITHOUT_CLASSIFICATION	// This pop is safe because a section couldn't have been started without an include that pushed. //
WITHOUT_CLASSIFICATION	// Process this first. //
WITHOUT_CLASSIFICATION	// Ignore this now //
WITHOUT_CLASSIFICATION	// If a newline from the previous character data remains, add a generator for it. //
WITHOUT_CLASSIFICATION	// An expression with more that 931 "+" will break Sun and IBM javac compilers. //
WITHOUT_CLASSIFICATION	// Register our directive. //
WITHOUT_CLASSIFICATION	// Ignore it if there are multiple comments. //
WITHOUT_CLASSIFICATION	// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //
WITHOUT_CLASSIFICATION	// Create the source and target JDOMs. //
WITHOUT_CLASSIFICATION	// Create a pattern dictionary for each. //
WITHOUT_CLASSIFICATION	//  We expect this failure when running stand-alone //
WITHOUT_CLASSIFICATION	// JControlModel.class is used with classNames that were not found //
WITHOUT_CLASSIFICATION	// Ignore the further-most javadoc //
WITHOUT_CLASSIFICATION	// retrieve source node corresponding to target //
WITHOUT_CLASSIFICATION	// convert the target node to a compatible node //
WITHOUT_CLASSIFICATION	// There must be at least one match. //
WITHOUT_CLASSIFICATION	// Ignore if there is not substantial change. //
WITHOUT_CLASSIFICATION	// Create the options model. //
WITHOUT_CLASSIFICATION	// Create a pattern dictionary for each. //
WITHOUT_CLASSIFICATION	// retrieve source node corresponding to target //
WITHOUT_CLASSIFICATION	// convert the target node to a compatible node //
WITHOUT_CLASSIFICATION	// Method created to increase the performance of regular expressions // by reducing the length of the string that is matched. //
WITHOUT_CLASSIFICATION	// Skip if there's an equality filter and the values aren't equal. //
WITHOUT_CLASSIFICATION	// The methods were matched by a process that doesn't consider the // parameters
WITHOUT_CLASSIFICATION	// Don't push method annotations into redirected methods. //
WITHOUT_CLASSIFICATION	// Three arguments are expected: the .xml getControlModel() URI, the source java URI, and the target java URI. //
WITHOUT_CLASSIFICATION	// Create the source and target JCompilationUnit. //
WITHOUT_CLASSIFICATION	// apply changes using ASTRewrite //
WITHOUT_CLASSIFICATION	// apply additional edits like replacing or commenting out nodes //
WITHOUT_CLASSIFICATION	// if the node is less than 1 line long, but its contents is replaced by multiple lines, // comment out each line in it
WITHOUT_CLASSIFICATION	// replace existing InsertEdit at this position // (case when previous node ends at the same position that current node starts at)
WITHOUT_CLASSIFICATION	// create and try to add dummy edit to find the ReplaceEdit // this should be faster than lookup since underneath of addChild() binary search is used
WITHOUT_CLASSIFICATION	// caching parser does not parse 2nd file in the same way (javadoc of package for example) // hence, new parser is created every time this method is called
WITHOUT_CLASSIFICATION	// adding 'at' allows distinguish annotations from other members // (i.e. inner class verses annotation of a class) //
WITHOUT_CLASSIFICATION	// find insertion point from returned result (-(insertion point) - 1) // commentIndex is the index of the first element with end position > rangeEndPos
WITHOUT_CLASSIFICATION	// find insertion point from returned result (-(insertion point) - 1) // commentIndex is an index of the first element that has start position > rangeStartPos 
WITHOUT_CLASSIFICATION	// extend to include the comment at the same line as the position  // if there is nothing between the position and the comment
WITHOUT_CLASSIFICATION	// there is anything else but comma after constant - insert line break
WITHOUT_CLASSIFICATION	// we don't want to include the line comments immediately before an import in the  // returned range
WITHOUT_CLASSIFICATION	// since enum constants are separated by commas, they should always have the default range // we can not extend their range or reduce it
WITHOUT_CLASSIFICATION	// check if given node should use the default range (i.e. node removed), // or extended range (i.e. surrounding nodes removed)
WITHOUT_CLASSIFICATION	// replace arguments that match the name of the fields with the initializer value of the field //
WITHOUT_CLASSIFICATION	// move all children to the type, converting enum constants to fields // // fields that are created by conversion from enum constants must be inserted after // the last final field that is used in constructors for initializers
WITHOUT_CLASSIFICATION	// Three arguments are expected: the .xml jControlModel URI, the source java URI, and the target java URI. //
WITHOUT_CLASSIFICATION	// Create the source and target JDOMs. //
WITHOUT_CLASSIFICATION	// indicate that initializer has been changed // (required to not overwrite initializer if variables are split later)
WITHOUT_CLASSIFICATION	// lower all except the last upper case character if there are // more than one upper case characters in the beginning. // e.g. XSDElementContent -> xsdElementContent // However if the whole string is upper case, the whole string // is turned into lower case. // e.g. CPU -> cpu
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Don't do replacement if we just did one, or if previous line // ended with a semicolon. //
WITHOUT_CLASSIFICATION	// Don't do replacement if previous line ended with a comment. //
WITHOUT_CLASSIFICATION	// If the path isn't within the root of the archive,  // create a new URI for the folder location of the archive,  // so we can look in the folder that contains it. //
WITHOUT_CLASSIFICATION	// Trim off the "bin" or "runtime" segment. //
WITHOUT_CLASSIFICATION	// Platform.resolve() doesn't work if the project is encoded. //
WITHOUT_CLASSIFICATION	// There needs to be another URL protocol right after the archive protocol, and not a "/". //
WITHOUT_CLASSIFICATION	// There must be at least one archive path. //
WITHOUT_CLASSIFICATION	// There must be at least one archive path. //
WITHOUT_CLASSIFICATION	// Parse to count the archive paths that must will be delegated to the nested URL based on the number of schemes at the start. //
WITHOUT_CLASSIFICATION	// There should be at least one archive separator per scheme. //
WITHOUT_CLASSIFICATION	// Parse to extract the archives that will be delegated to the nested URL based on the number of schemes at the start. //
WITHOUT_CLASSIFICATION	// Skip a scheme for the archive accessor to be handled directly here. //
WITHOUT_CLASSIFICATION	// Skip an archive accessor to be handled by delegation to the scheme in nested URL. //
WITHOUT_CLASSIFICATION	// Create the delegate URL. //
WITHOUT_CLASSIFICATION	// The cutoff point to the next archive. //
WITHOUT_CLASSIFICATION	// The cutoff point to the next archive. //
WITHOUT_CLASSIFICATION	// Construct the input stream in a special efficient way for case of a file scheme. //
WITHOUT_CLASSIFICATION	// Just get the stream from the URL. //
WITHOUT_CLASSIFICATION	// The name to be used for the entry. //
WITHOUT_CLASSIFICATION	// Skip over this archive path to the next one, since we are handling this one special. //
WITHOUT_CLASSIFICATION	// Loop over the archive paths. //
WITHOUT_CLASSIFICATION	// The entry name to be matched. //
WITHOUT_CLASSIFICATION	// Wrap the input stream as a zip stream to scan it's contents for a match. //
WITHOUT_CLASSIFICATION	// Skip to the next archive path and continue the loop. //
WITHOUT_CLASSIFICATION	// Create the delegate URL //
WITHOUT_CLASSIFICATION	// Create a temporary file where the existing contents of the archive can be written  // before the new contents are added. //
WITHOUT_CLASSIFICATION	// Record the input and output streams for closing in case of failure so that handles are not left open. //
WITHOUT_CLASSIFICATION	// Create the output stream to the temporary file and the input stream for the delegate URL. //
WITHOUT_CLASSIFICATION	// The most deeply nested output stream that will be returned wrapped as the result. //
WITHOUT_CLASSIFICATION	// A buffer for transferring archive contents. //
WITHOUT_CLASSIFICATION	// We expect there to be at least one archive path. //
WITHOUT_CLASSIFICATION	// The name that will be used as the archive entry. //
WITHOUT_CLASSIFICATION	// Wrap the current result as a zip stream, and record it for loop-based recursion. //
WITHOUT_CLASSIFICATION	// Wrap the current input as a zip stream, and record it for loop-based recursion. //
WITHOUT_CLASSIFICATION	// Loop over the entries in the zip stream. //
WITHOUT_CLASSIFICATION	// Transfer the entry and its contents. //
WITHOUT_CLASSIFICATION	// Find the next archive path and continue "recursively" if there is one. //
WITHOUT_CLASSIFICATION	// Create no entry since we are deleting and return immediately. //
WITHOUT_CLASSIFICATION	// Create a new or replaced entry and continue processing the remaining archives. //
WITHOUT_CLASSIFICATION	// Ensure that it won't be closed in the finally block. //
WITHOUT_CLASSIFICATION	// Wrap the deepest result so that on close, the results are finally transferred. //
WITHOUT_CLASSIFICATION	// Make sure we close only once. //
WITHOUT_CLASSIFICATION	// Close for real so that the temporary file is ready to be read. //
WITHOUT_CLASSIFICATION	// Make sure they are closed no matter what bad thing happens. //
WITHOUT_CLASSIFICATION	// Close in case of failure to complete. //
WITHOUT_CLASSIFICATION	// Close if we created this. //
WITHOUT_CLASSIFICATION	// Go through the commands of the list. //
WITHOUT_CLASSIFICATION	// If there are some... //
WITHOUT_CLASSIFICATION	// The termination guard is in the body. //
WITHOUT_CLASSIFICATION	// We can't undo it, so we'd better give up. //
WITHOUT_CLASSIFICATION	// Now is the best time to record isUndoable because later we would have to do all the executes again! // This makes canUndo very simple! //
WITHOUT_CLASSIFICATION	// If we can't execute this one, we just can't do it at all. //
WITHOUT_CLASSIFICATION	// If we are pessimistic, then we need to undo all the commands that we have executed so far. //
WITHOUT_CLASSIFICATION	// The most recently processed command will never have been executed. //
WITHOUT_CLASSIFICATION	// We want to unroll all the effects of the previous commands. //
WITHOUT_CLASSIFICATION	// Skip over the command that threw the exception. //
WITHOUT_CLASSIFICATION	// Iterate back over the executed commands to undo them. //
WITHOUT_CLASSIFICATION	// If the command is executable, record and execute it. //
WITHOUT_CLASSIFICATION	// Clear the list past the top. //
WITHOUT_CLASSIFICATION	// Record the successfully executed command. //
WITHOUT_CLASSIFICATION	// note that string place holder adjusts indentation // to correct this trackAndReplace method is used below
WITHOUT_CLASSIFICATION	// Iterate back over the executed commands to undo them. //
WITHOUT_CLASSIFICATION	// Clear the list past the top. //
WITHOUT_CLASSIFICATION	// This forces isSaveNeded to always be true. //
WITHOUT_CLASSIFICATION	// Clear the list. //
WITHOUT_CLASSIFICATION	//  Remember where we are now. //
WITHOUT_CLASSIFICATION	// Only if we are at the remembered index do we NOT need to save. // //return top != saveIndex;
WITHOUT_CLASSIFICATION	// Skip over the command that threw the exception. //
WITHOUT_CLASSIFICATION	// Skip over the command that threw the exception. //
WITHOUT_CLASSIFICATION	// Iterate back over the executed commands to undo them. //
WITHOUT_CLASSIFICATION	// Iterate forward over the undone commands to redo them. //
WITHOUT_CLASSIFICATION	// This ensures that these useless state variables at least reflect the right value. //
WITHOUT_CLASSIFICATION	// Copy to a list and allocate positions. //
WITHOUT_CLASSIFICATION	// Copy to a list and allocate positions. //
WITHOUT_CLASSIFICATION	// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
WITHOUT_CLASSIFICATION	// If any objects are matched. //
WITHOUT_CLASSIFICATION	// Remove from by position in reverse order. //
WITHOUT_CLASSIFICATION	// Remove from by position in reverse order. //
WITHOUT_CLASSIFICATION	// Compact the results to remove unmatched objects //
WITHOUT_CLASSIFICATION	// If any objects are matched. //
WITHOUT_CLASSIFICATION	// Remove from by position in reverse order. //
WITHOUT_CLASSIFICATION	// Compact the results to remove unmatched objects //
WITHOUT_CLASSIFICATION	// Create view form.     //control = new ViewForm(parent, getStyle());
WITHOUT_CLASSIFICATION	// Listen to title changes. // getViewPart().addPropertyListener(this);
WITHOUT_CLASSIFICATION	//titleLabel.setBackground(WorkbenchColors.getActiveGradient(), WorkbenchColors.getActiveGradientPercents()); // titleLabel.setForeground(titleLabel.getDisplay().getSystemColor(SWT.COLOR_TITLE_FOREGROUND));
WITHOUT_CLASSIFICATION	//actionBar.setBackground(WorkbenchColors.getActiveGradientEnd()); //systemBar.setBackground(WorkbenchColors.getActiveGradientEnd());
WITHOUT_CLASSIFICATION	//titleLabel.setBackground(null, null); // titleLabel.setForeground(null);
WITHOUT_CLASSIFICATION	// IViewPart view = getViewPart(); // titleLabel.setText(view.getTitle()); // titleLabel.setImage(view.getTitleImage());
WITHOUT_CLASSIFICATION	// If there are objects to populate... //
WITHOUT_CLASSIFICATION	// Create a new array. //
WITHOUT_CLASSIFICATION	// Fill in the result array with labels and re-populate the original list in order. //
WITHOUT_CLASSIFICATION	// Fill in the array with labels. //
WITHOUT_CLASSIFICATION	// Get the index into the list via this call to super. //
WITHOUT_CLASSIFICATION	// Set the index of the object value in the list via this call to super. //
WITHOUT_CLASSIFICATION	// Ensure there are no extraneous style bits. //
WITHOUT_CLASSIFICATION	// Assign default style bits, if necessary, and ensure none conflict. //
WITHOUT_CLASSIFICATION	// Paint over the selected padding spaces with the // background colour.  On GTK, the whole item, not just // the text, is selected, so we don't do this. //
WITHOUT_CLASSIFICATION	// On Motif, selection color may be set as background. //
WITHOUT_CLASSIFICATION	// Draw the extra first-column image. //
WITHOUT_CLASSIFICATION	// Stop if the next item will be out the event bounds. // The event bounds values are also misaligned on GTK. //
WITHOUT_CLASSIFICATION	// If the table is indenting, draw tree lines. //
WITHOUT_CLASSIFICATION	//private final boolean iri; //private URI cachedASCIIURI;
WITHOUT_CLASSIFICATION	// Additional useful character classes, including characters valid in certain // URI components and separators used in parsing them out of a string.  // // | ucschar | escaped
WITHOUT_CLASSIFICATION	//  private static final long SCHEME_CHAR_HI = ALPHANUM_HI | highBitmask("+-."); //  private static final long SCHEME_CHAR_LO = ALPHANUM_LO | lowBitmask("+-.");
WITHOUT_CLASSIFICATION	// Returns the lower half bitmask for all ASCII characters between the two // given characters, inclusive.
WITHOUT_CLASSIFICATION	// Returns the upper half bitmask for all AsCII characters between the two // given characters, inclusive.
WITHOUT_CLASSIFICATION	// Returns the lower half bitmask for all the ASCII characters in the given // string.
WITHOUT_CLASSIFICATION	// Returns whether the given character is in the set specified by the given // bitmask.
WITHOUT_CLASSIFICATION	// Converts null to length-zero array, and clones array to ensure // immutability.
WITHOUT_CLASSIFICATION	// Checks whether the string contains any more segments after the one that // starts at position i.
WITHOUT_CLASSIFICATION	// Validates all of the URI components.  Factory methods should call this // before using the constructor, though they must ensure that the // inter-component requirements described in their own Javadocs are all // satisfied, themselves.  If a new URI is being constructed out of // an existing URI, this need not be called.  Instead, just the new // components may be validated individually.
WITHOUT_CLASSIFICATION	// Alternate, stricter implementations of the following validation methods // are provided, commented out, for possible future use...
WITHOUT_CLASSIFICATION	// <p>A valid scheme may be null, or consist of a single letter followed // by any number of letters, numbers, and the following characters: // <code>+ - .</code>
WITHOUT_CLASSIFICATION	// <p>A valid opaque part must be non-null and non-empty. It may contain // any allowed URI characters, but its first character may not be // <code>/</code> 
WITHOUT_CLASSIFICATION	//return value != null && value.length() != 0 && //  value.charAt(0) != SEGMENT_SEPARATOR && //  validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	// A valid authority may be null or contain any allowed URI characters except // for the following: <code>/ ?</code>
WITHOUT_CLASSIFICATION	// <p>A valid path segment must be non-null and may contain any allowed URI // characters except for the following: <code>/ ?</code> 
WITHOUT_CLASSIFICATION	// Returns null if the specified value is null or would be a valid path // segment array of a URI; otherwise, the value of the first invalid // segment. 
WITHOUT_CLASSIFICATION	// Searches the specified string for any characters in the set represented // by the 128-bit bitmask.  Returns true if any occur, or false otherwise.
WITHOUT_CLASSIFICATION	// note: (absolutePath || authority == null) -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// Returns true if the given value is an archive scheme, as defined by // the org.eclipse.emf.common.util.URI.archiveSchemes system property. // By default, "jar", "zip", and "archive" are considered archives.
WITHOUT_CLASSIFICATION	// Tests whether this URI's path segment array is equal to that of the // given uri.
WITHOUT_CLASSIFICATION	// Tests two objects for equality, tolerating nulls; null is considered // to be a valid value that is only equal to itself.
WITHOUT_CLASSIFICATION	// Tests two strings for equality, tolerating nulls and optionally // ignoring case.
WITHOUT_CLASSIFICATION	// note: it's okay for two URIs to share a segments array, since // neither will ever modify it
WITHOUT_CLASSIFICATION	// relative path: merge with base and keep query (note: if the // base has no path and this a non-empty relative path, there is // an implied root in the resulting path) 
WITHOUT_CLASSIFICATION	// always keep fragment, even if null, and use scheme from base; // no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	// use a stack to accumulate segments of base, except for the last // (i.e. skip trailing separator and anything following it), and of // relative path
WITHOUT_CLASSIFICATION	// Adds a segment to a stack, skipping empty segments and self references, // and interpreting parent references.
WITHOUT_CLASSIFICATION	// special care must be taken for a root's parent reference: it is // either ignored or the symbolic reference itself is pushed
WITHOUT_CLASSIFICATION	// unless we're already accumulating root parent references, // parent references simply pop the last segment descended
WITHOUT_CLASSIFICATION	// note: these assertions imply that neither this nor the base URI has a // relative path; thus, both have either an absolute path or no path
WITHOUT_CLASSIFICATION	// Returns the shortest relative path between the the non-relative path of // the given base and this absolute path.  If the base has no path, it is // treated as the root absolute path.
WITHOUT_CLASSIFICATION	// note that the copied tree should not be modified by wrapped ASTJField // // the copied tree will have source ranges for all nodes in the source file, // hence, the get methods in the new ASTJField will not return the right contents
WITHOUT_CLASSIFICATION	// a single separator, possibly preceded by some parent reference // segments, is redundant
WITHOUT_CLASSIFICATION	// an empty path needs to be replaced by a single "." if there is no // query, to distinguish it from a current document reference
WITHOUT_CLASSIFICATION	// Collapses non-ending empty segments, parent references, and self // references in a non-relative path, returning the same path that would // be produced from the base hierarchical URI as part of a resolve.
WITHOUT_CLASSIFICATION	// if the path is non-empty and originally ended in an empty segment, a // parent reference, or a self reference, add a trailing separator
WITHOUT_CLASSIFICATION	// Returns a string representation of this URI for debugging, explicitly // showing each of the components.
WITHOUT_CLASSIFICATION	// If the new prefix has segments, it is not the root absolute path, // and we need to drop the trailing empty segment and append the tail // segments.
WITHOUT_CLASSIFICATION	// If this is a hierarchical URI reference and prefix is a prefix of it, // returns the portion of the path remaining after that prefix has been // trimmed; null otherwise.
WITHOUT_CLASSIFICATION	// Don't even consider it unless this is hierarchical and has scheme, // authority, device and path absoluteness equal to those of the prefix.
WITHOUT_CLASSIFICATION	// If the prefix has no segments, then it is the root absolute path, and // we know this is an absolute path, too.
WITHOUT_CLASSIFICATION	// This must have no fewer segments than the prefix.  Since the prefix // is not the root absolute path, its last segment is empty; all others // must match.
WITHOUT_CLASSIFICATION	// create new field and replace it all by original contents
WITHOUT_CLASSIFICATION	// The prefix really is a prefix of this.  If this has just one more, // empty segment, the paths are the same.
WITHOUT_CLASSIFICATION	// Encodes a complete URI, optionally leaving % characters unescaped when // beginning a valid three-character escape sequence.  We can either treat // the first or # as a fragment separator, or encode them all.
WITHOUT_CLASSIFICATION	// range to look for comments
WITHOUT_CLASSIFICATION	// Encodes the given string, replacing each ASCII character that is not in // the set specified by the 128-bit bitmask and each non-ASCII character // below 0xA0 by an escape sequence of % followed by two hex digits.  If // % is not in the set but ignoreEscaped is true, then % will not be encoded // iff it already begins a valid escape sequence.
WITHOUT_CLASSIFICATION	// Tests whether an escape occurs in the given string, starting at index i. // An escape sequence is a % followed by two hex digits.
WITHOUT_CLASSIFICATION	// find start position of farthest preceding comment
WITHOUT_CLASSIFICATION	// The byte is automatically widened into an int, with sign extension, // for shifting.  This can introduce 1's to the left of the byte, which // must be cleared by masking before looking up the hex digit. //
WITHOUT_CLASSIFICATION	// Returns the character encoded by % followed by the two given hex digits, // which is always 0xFF or less, so can safely be casted to a byte.  If // either character is not a hex digit, a bogus result will be returned.
WITHOUT_CLASSIFICATION	// Determine the base URL by looking for the plugin.properties file in the standard way. //
WITHOUT_CLASSIFICATION	// add leading hanging comments to the previous node, // hence, only comments immediately preceding the node will be in the range for removal
WITHOUT_CLASSIFICATION	// for enum constants use special range
WITHOUT_CLASSIFICATION	//  /** //   * Simpler implementation that sets the range of any node to be the node and all preceding comments //   */ //  public SourceRange computeSourceRange(ASTNode node) //  { //    SourceRange range = new SourceRange(node.getStartPosition(), node.getLength()); // //    range = extendRangeBackward(findLeadingComment(node, getPreviousNode(node), false), range); // //    return range; //  }
WITHOUT_CLASSIFICATION	// default implementation does nothing
WITHOUT_CLASSIFICATION	// clear old values
WITHOUT_CLASSIFICATION	// Trim off the segments corresponding to the package nesting. //
WITHOUT_CLASSIFICATION	// For an archive URI, check for the plugin.properties in the archive. //
WITHOUT_CLASSIFICATION	// append extra dimensions since they are not stored in Type object
WITHOUT_CLASSIFICATION	// Trim off the "bin" or "runtime" segment. //
WITHOUT_CLASSIFICATION	// If the plugin.properties isn't within the root of the archive, // create a new URI for the folder location of the archive, // so we can look in the folder that contains it. //
WITHOUT_CLASSIFICATION	// If we didn't find the plugin.properties in the usual place nor in the archive... //
WITHOUT_CLASSIFICATION	// If we can open  an input stream, then the plugin.properties is in the folder, and we have a good base URL. //
WITHOUT_CLASSIFICATION	// If we still don't have a good base URL, complain about it. //
WITHOUT_CLASSIFICATION	// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext.
WITHOUT_CLASSIFICATION	// If we are still on the root mapping itself... //
WITHOUT_CLASSIFICATION	// Yield that mapping, create a stack, record it as the next one to prune, and add it to the stack. //
WITHOUT_CLASSIFICATION	// Get the top iterator, retrieve it's result, and record it as the one to which remove will be delegated. //
WITHOUT_CLASSIFICATION	// If the result about to be returned has children... //
WITHOUT_CLASSIFICATION	// Record the iterator as the next one to prune, and add it to the stack. //
WITHOUT_CLASSIFICATION	// There will be no iterator to prune. //
WITHOUT_CLASSIFICATION	// While the current iterator has no next... //
WITHOUT_CLASSIFICATION	// Pop it from the stack. //
WITHOUT_CLASSIFICATION	// If the stack is empty, we're done. //
WITHOUT_CLASSIFICATION	// if the given class is subclass of enum and node is of subclass of type
WITHOUT_CLASSIFICATION	// Pop it off the stack. //
WITHOUT_CLASSIFICATION	// Get the next one down and then test it for has next. //
WITHOUT_CLASSIFICATION	// If there is an iterator to prune. //
WITHOUT_CLASSIFICATION	// You can only prune once. //
WITHOUT_CLASSIFICATION	// If that iterator is still at the top of the stack... //
WITHOUT_CLASSIFICATION	// Allow for a bit-shift of growth. //
WITHOUT_CLASSIFICATION	// Keep popping the stack until an iterator that has a next is at the top. //
WITHOUT_CLASSIFICATION	// Conditionally create the data. //
WITHOUT_CLASSIFICATION	//  ++modCount //
WITHOUT_CLASSIFICATION	// Guard for no data. //
WITHOUT_CLASSIFICATION	// Guard for no data. //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// Conditionally create the data. //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// Don't hold onto a duplicate reference to the last object. //
WITHOUT_CLASSIFICATION	// Give it all back to the garbage collector. //
WITHOUT_CLASSIFICATION	// Give it all back to the garbage collector. //
WITHOUT_CLASSIFICATION	// Write the capacity. //
WITHOUT_CLASSIFICATION	// create map of public static final field initializers to fields
WITHOUT_CLASSIFICATION	// This seems to be a pretty sweet formula that supports good growth. // Adding an object to a list will create a list of capacity 4,  // which is just about the average list size. //
WITHOUT_CLASSIFICATION	// This should be transparent. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Write all the entryData; there will be size of them. //
WITHOUT_CLASSIFICATION	// Restore the capacity, if there was any. //
WITHOUT_CLASSIFICATION	// Read all size number of entryData. //
WITHOUT_CLASSIFICATION	//0000 0000 0001 //0000 0000 0010 //0000 0000 0100 //0000 0000 1000 //0001 0000 0000 //0010 0000 0000 //0100 0000 0000 //1000 0000 0000
WITHOUT_CLASSIFICATION	//0000 0000 1111 //1111 0000 0000
WITHOUT_CLASSIFICATION	// This just represents going back to the unset state, but that doesn't affect the contents of the list. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// add all converted fields after the last final field  // that is used in initializers of the converted fields
WITHOUT_CLASSIFICATION	// Internal bootstrap uses Literals constants, so we must force initialization this inner interface first. //
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// create field initializer from enum constant's arguments and body
WITHOUT_CLASSIFICATION	// Apply the change. //
WITHOUT_CLASSIFICATION	// Delete the change information because it is invalid now that the objects have been changed. //
WITHOUT_CLASSIFICATION	// Apply the change and reverse the change information. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// set original node of annotations (to allow get methods to work correctly)
WITHOUT_CLASSIFICATION	// The next line leaves objectsBeforeApply with all the objects that were // added during the last recording.
WITHOUT_CLASSIFICATION	// Reverse the objects to attach and detach lists. //
WITHOUT_CLASSIFICATION	// Make sure the changed values of bidirectional reference lists are cached before we //  start to apply the change. //
WITHOUT_CLASSIFICATION	// This case will be handled special during apply //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// New Template Container Entryfield
WITHOUT_CLASSIFICATION	// If there's no position, the list is being cleared. //
WITHOUT_CLASSIFICATION	// If there's no position, the list is being cleared. //
WITHOUT_CLASSIFICATION	// EEnumImpl overrides this to do nothing. // The only case that is special is when a more specific instance of AbstractEnumerator is generated/reused. //
WITHOUT_CLASSIFICATION	// When we attached we have to recompute the erasure of the type parameter. //
WITHOUT_CLASSIFICATION	// Interprets escaped characters within the string according to Java // literal rules, with two exceptions: an unescaped " does not terminate // the string, and a \ not followed by b, t, n, f, r, ", ', u, or an octal // digit is taken literally, not as an error
WITHOUT_CLASSIFICATION	// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	// This is needed for internal bootstrapping of EGenericType's default value for eRawType. // It's simply not available before Ecore is constructed so we make it available and then patch what's missing. //
WITHOUT_CLASSIFICATION	// Create a key set that supports add. //
WITHOUT_CLASSIFICATION	// Skip derived features. //
WITHOUT_CLASSIFICATION	// Include derived relations only if they won't also come from mixed or a group. //
WITHOUT_CLASSIFICATION	// If this is just a proxy being resolved... //
WITHOUT_CLASSIFICATION	// Force the raw type to be resolved so we don't resolve this endlessly. //
WITHOUT_CLASSIFICATION	// Update the classifier and hence the raw type as normal. //
WITHOUT_CLASSIFICATION	// The notification for this list is being thrown by the // delegating list //
WITHOUT_CLASSIFICATION	// At development time, the real factory may not be available. Just return null. //
WITHOUT_CLASSIFICATION	// Interprets escaped characters according to Java literal rules, with one // exception: a single \ is taken literally, not as an error.
WITHOUT_CLASSIFICATION	// protected static final EStructuralFeature CONTAINING_FEATURE = new EReferenceImpl(); // protected static final EStructuralFeature CONTAINER = new EReferenceImpl();
WITHOUT_CLASSIFICATION	// Entry entry = new Entry(eObject, CONTAINER); // return (InternalEObject)map.get(entry);
WITHOUT_CLASSIFICATION	// This should never be called. //
WITHOUT_CLASSIFICATION	// Entry entry = new Entry(eObject, CONTAINING_FEATURE); // return (EStructuralFeature)map.get(entry);
WITHOUT_CLASSIFICATION	// eContainer = newContainer; // eContainerFeatureID = newContainerFeatureID;
WITHOUT_CLASSIFICATION	// Since the cycle is detected by checking if we hit "this" again, after many iterations we'll call this method recursively  // in case we started with something that wasn't part of a cycle but later traversed up to a cycle. //
WITHOUT_CLASSIFICATION	// When setting the resource to null we assume that detach has already been called in the resource implementation //
WITHOUT_CLASSIFICATION	/**   * Performs escape encoding on the given string so that it can be represented using 1-byte characters.   * Any characters higher than 0xFF are replaced with an escape of the form \\uXXXX, where XXXX is the   * four-digit hex representation of the Unicode code point.   */
WITHOUT_CLASSIFICATION	// Compute the offset in the sequence of bit patterns for this feature ID // and then get the bit pattern at that index. //
WITHOUT_CLASSIFICATION	// Compute the index within that bit pattern for this feature ID // and fetch that bit at that index. //
WITHOUT_CLASSIFICATION	// For isSet, we only need to check the bit and return -1 when the bit is 0. //
WITHOUT_CLASSIFICATION	// If the value index set, there's no index to return. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Count just the bits up to this one. // Note that shifting 32 bits is a no op. //
WITHOUT_CLASSIFICATION	// Count all the bits in the bit patterns up to this one in the sequence of bit patterns. //
WITHOUT_CLASSIFICATION	// Determine the index for the feature and return the value at that index, if an index is assigned. //
WITHOUT_CLASSIFICATION	// Determine if an index is assigned. //
WITHOUT_CLASSIFICATION	// Determine the index. //
WITHOUT_CLASSIFICATION	// If it's newly allocated, add a new value, and indicate there was no previous value. //
WITHOUT_CLASSIFICATION	// Set the value at the previously allocated index and return the previous value there. //
WITHOUT_CLASSIFICATION	// Forward the interned value. //
WITHOUT_CLASSIFICATION	// If it's a parameterized type... //
WITHOUT_CLASSIFICATION	// The instance class name is the erasure. //
WITHOUT_CLASSIFICATION	// If the name isn't a qualified name and isn't a primitive type, it's assumed to denote some arbitrary type parameter. //
WITHOUT_CLASSIFICATION	// Be sure to pick up any trailing [] brackets. //
WITHOUT_CLASSIFICATION	// If there is a cached result, return it. // We expect that if the package is set to be a proxy,  // the code in EPackageImpl.eSetProxyURI override will have cleared this value. //
WITHOUT_CLASSIFICATION	// If the result is not a proxy, cache it. //
WITHOUT_CLASSIFICATION	// If we turn the package into a proxy, ensure that the child classifiers clear their cached container. //
WITHOUT_CLASSIFICATION	// Is the first character a special character, i.e., something other than '@'? //
WITHOUT_CLASSIFICATION	// Is it the start of a source URI of an annotation? //
WITHOUT_CLASSIFICATION	// Recompute the read only state. //
WITHOUT_CLASSIFICATION	// Refresh any actions that may become enabled or disabled. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// If this is just a proxy being resolved... //
WITHOUT_CLASSIFICATION	// Force the raw type to be resolved so we don't resolve this endlessly. //
WITHOUT_CLASSIFICATION	// Update the classifier and hence the raw type as normal. //
WITHOUT_CLASSIFICATION	// Find the closing '%' //
WITHOUT_CLASSIFICATION	// Decode all encoded characters. //
WITHOUT_CLASSIFICATION	// Check for a count, i.e., a '.' followed by a number. //
WITHOUT_CLASSIFICATION	// Look for the annotation with the matching source. //
WITHOUT_CLASSIFICATION	// Look for trailing count. //
WITHOUT_CLASSIFICATION	// Look for a matching named element. //
WITHOUT_CLASSIFICATION	// Find the uppermost class loader in the hierarchy that can load the class. //
WITHOUT_CLASSIFICATION	// We can't find the class, so we don't want this class loader, // but instead want the last result that was able to load the class. //
WITHOUT_CLASSIFICATION	// Register with the upper most class loader that's able to load the class. //
WITHOUT_CLASSIFICATION	// This let's us test whether the string exists as a file. // If not, we try as a URI. //
WITHOUT_CLASSIFICATION	// First try to see if this class has an eInstance  //
WITHOUT_CLASSIFICATION	// First try to see if this class has an eInstance  //
WITHOUT_CLASSIFICATION	// Remember the file. //
WITHOUT_CLASSIFICATION	// Do the work within an operation. //
WITHOUT_CLASSIFICATION	// Create a resource set //
WITHOUT_CLASSIFICATION	// Get the URI of the model file. //
WITHOUT_CLASSIFICATION	// Create a resource for this file. //
WITHOUT_CLASSIFICATION	// Add the initial model object to the contents. //
WITHOUT_CLASSIFICATION	// Save the contents of the resource to the file system. //
WITHOUT_CLASSIFICATION	// Select the new file resource in the current view. //
WITHOUT_CLASSIFICATION	// Make sure the file ends in ".ecore". //
WITHOUT_CLASSIFICATION	// Create a page, set the title, and the initial model file name. //
WITHOUT_CLASSIFICATION	// Try and get the resource selection to determine a current directory for the file dialog. //
WITHOUT_CLASSIFICATION	// Get the resource... //
WITHOUT_CLASSIFICATION	// Get the resource parent, if its a file. //
WITHOUT_CLASSIFICATION	// This gives us a directory... //
WITHOUT_CLASSIFICATION	// Set this for the container. //
WITHOUT_CLASSIFICATION	// Make up a unique new name here. //
WITHOUT_CLASSIFICATION	// Create an adapter factory that yields item providers. //
WITHOUT_CLASSIFICATION	// Create the command stack that will notify this editor as commands are executed. //
WITHOUT_CLASSIFICATION	// Add a listener to set the most recent command's affected objects to be the selection of the viewer with focus. //
WITHOUT_CLASSIFICATION	// Try to select the affected objects. //
WITHOUT_CLASSIFICATION	// Create the editing domain with a special command stack. //
WITHOUT_CLASSIFICATION	// Make sure it's okay. //
WITHOUT_CLASSIFICATION	// Try to select the items in the current content viewer of the editor. //
WITHOUT_CLASSIFICATION	// If it is changing... //
WITHOUT_CLASSIFICATION	// Create the listener on demand. //
WITHOUT_CLASSIFICATION	// This just notifies those things that are affected by the section. //
WITHOUT_CLASSIFICATION	// Stop listening to the old one. //
WITHOUT_CLASSIFICATION	// Start listening to the new one. //
WITHOUT_CLASSIFICATION	// Remember it. //
WITHOUT_CLASSIFICATION	// Set the editors selection based on the current viewer's selection. //
WITHOUT_CLASSIFICATION	// Load the resource through the editing domain. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Create a page for the selection tree view. //
WITHOUT_CLASSIFICATION	// Ensures that this editor will only display the page's tab // area if there are more than one page //
WITHOUT_CLASSIFICATION	// The content outline is just a tree. //
WITHOUT_CLASSIFICATION	// Set up the tree viewer. //
WITHOUT_CLASSIFICATION	// Make sure our popups work. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// Listen to selection so that we can handle it is a special way. //
WITHOUT_CLASSIFICATION	// Get the first selected element. //
WITHOUT_CLASSIFICATION	// Set the selection to the widget. //
WITHOUT_CLASSIFICATION	// Save only resources that have actually changed. //
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// Save the resources to the file system. //
WITHOUT_CLASSIFICATION	// This runs the options, and shows progress. //
WITHOUT_CLASSIFICATION	// Refresh the necessary state. //
WITHOUT_CLASSIFICATION	// Something went wrong that shouldn't. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Remember the file. //
WITHOUT_CLASSIFICATION	// Do the work within an operation. //
WITHOUT_CLASSIFICATION	// Create a resource set //
WITHOUT_CLASSIFICATION	// Get the URI of the model file. //
WITHOUT_CLASSIFICATION	// Save the contents of the resource to the file system. //
WITHOUT_CLASSIFICATION	// Select the new file resource in the current view. //
WITHOUT_CLASSIFICATION	// We can't have a null name, in case we're using EMOF serialization. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Switch to the new selection provider. //
WITHOUT_CLASSIFICATION	// Fake a selection changed event to update the menus. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Try and get the resource selection to determine a current directory for the file dialog. //
WITHOUT_CLASSIFICATION	// Get the resource... //
WITHOUT_CLASSIFICATION	// Get the resource parent, if its a file. //
WITHOUT_CLASSIFICATION	// This gives us a directory... //
WITHOUT_CLASSIFICATION	// Make up a unique new name here. //
WITHOUT_CLASSIFICATION	// Prepare for CreateChild item addition or removal. //
WITHOUT_CLASSIFICATION	// Prepare for CreateSibling item addition or removal. //
WITHOUT_CLASSIFICATION	// Force an update because Eclipse hides empty menus now. //
WITHOUT_CLASSIFICATION	// Remove any menu items for old selection. //
WITHOUT_CLASSIFICATION	// Query the new selection for appropriate new child/sibling descriptors //
WITHOUT_CLASSIFICATION	// Generate actions for selection; populate and redraw the menus. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Look into SubContributionItems //
WITHOUT_CLASSIFICATION	// Delete the ActionContributionItems with matching action. //
WITHOUT_CLASSIFICATION	// If it's really a contained child, return the feature for it. //
WITHOUT_CLASSIFICATION	// Changes to the parameters should also update the label. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// If it's really a contained child, return the feature for it. //
WITHOUT_CLASSIFICATION	// Set the instance type name instead, since that will also set the instance class name  // but this way will make undo restore the current instance type name correctly //
WITHOUT_CLASSIFICATION	// Changes to parameter types should also update the operation's label. //
WITHOUT_CLASSIFICATION	// Filter out types that aren't permitted. //
WITHOUT_CLASSIFICATION	// Filter out types that aren't permitted. //
WITHOUT_CLASSIFICATION	// Avoid allowing choices that will lead to duplicates. //
WITHOUT_CLASSIFICATION	//  Avoid allowing a choice that will lead to duplicates. //
WITHOUT_CLASSIFICATION	// Ensure that there are enough type arguments to match the number of type parameters. //
WITHOUT_CLASSIFICATION	// You can only add type arguments if there are type parameters not yet used up. //
WITHOUT_CLASSIFICATION	// You cannot add any children for a type parameter. //
WITHOUT_CLASSIFICATION	// Only if you are contained by a generic type can you have bounds, // and only if there is no classifier or type parameter // and in that case the lower bound is returned only if that's the one that's set. //
WITHOUT_CLASSIFICATION	// Otherwise you can't make it a child. //
WITHOUT_CLASSIFICATION	// Let them choose type parameters as well. //
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Handle eOpposite specially. //
WITHOUT_CLASSIFICATION	// Don't use the normal reference copying for eOpposite. //
WITHOUT_CLASSIFICATION	// Write a signature that will be obviously corrupt // if the binary contents end up being UTF-8 encoded // or altered by line feed or carriage return changes. //
WITHOUT_CLASSIFICATION	// Filter out classes that aren't permitted. //
WITHOUT_CLASSIFICATION	// Read all the values into an array. //
WITHOUT_CLASSIFICATION	// Read all the values into an array. //
WITHOUT_CLASSIFICATION	// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //
WITHOUT_CLASSIFICATION	// If an input stream can't be created, ensure that the resource is still considered loaded after the failure, // and do all the same processing we'd do if we actually were able to create a valid input stream. //
WITHOUT_CLASSIFICATION	// This guard is needed to ensure that clear doesn't make the resource become loaded. //
WITHOUT_CLASSIFICATION	// If we haven't yet encrypted or decrypted, generate a key. This key will  // only be used for encryption. Decryption keys are always derived from // the header of the input stream itself.
WITHOUT_CLASSIFICATION	// write the header to the output stream. this has the format  // (delimeters are not written): // PBE IV|ENCRYPTION IV|ENCRYPTED KEY LENGTH|ENCRYPTED KEY
WITHOUT_CLASSIFICATION	// The CipherOutputStream shoudln't close the underlying stream //
WITHOUT_CLASSIFICATION	// Build a list of the keys //
WITHOUT_CLASSIFICATION	// The classifier of an references's generic type must be a class. //
WITHOUT_CLASSIFICATION	// If they are the same classifier, they are of course equal. //
WITHOUT_CLASSIFICATION	// Ignore derived features. //
WITHOUT_CLASSIFICATION	// Don't set the type if it's already set. //
WITHOUT_CLASSIFICATION	// Look through all the references... //
WITHOUT_CLASSIFICATION	// Do the extent processing that should have been done for the root but was actualljy done for the document root. //
WITHOUT_CLASSIFICATION	// Ensure that the map for Ecore is not repeatedly populated and that Property maps to EReference rather than EAttribute. //
WITHOUT_CLASSIFICATION	// Create annotations // http:///org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	// Internal use only. // The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	// Reserve a place to insert xmlns declarations after we know what they all are. //
WITHOUT_CLASSIFICATION	// result = new XMLResource.XMLInfoImpl(); // result.setXMLRepresentation(XMLResource.XMLInfo.UNSPECIFIED);
WITHOUT_CLASSIFICATION	// Need not to call setSource() because // a caller can not access this match instance.
WITHOUT_CLASSIFICATION	// src:    o--------o // sub:      o----o // res:    o-o    o-o // Reuse src(=right res)
WITHOUT_CLASSIFICATION	// Ignore CHAR tokens. // ** // **
WITHOUT_CLASSIFICATION	//missing Specials add manually // 84
WITHOUT_CLASSIFICATION	//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero
WITHOUT_CLASSIFICATION	// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.
WITHOUT_CLASSIFICATION	// // Data //
WITHOUT_CLASSIFICATION	// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.
WITHOUT_CLASSIFICATION	// Check for scheme, which must be before '/', '?' or '#'. Also handle // names with DOS drive letters ('D:'), so 1-character schemes are not // allowed.
WITHOUT_CLASSIFICATION	// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."
WITHOUT_CLASSIFICATION	// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.
WITHOUT_CLASSIFICATION	// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Check whether there is an opposite that needs attention. //
WITHOUT_CLASSIFICATION	// Return whether there is a list, the value is in the list, and index is in range... //
WITHOUT_CLASSIFICATION	// If we're creating a child under an object in a feature map, the selection will be the feature map entry. // We want to replace it with the model object. //
WITHOUT_CLASSIFICATION	// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //
WITHOUT_CLASSIFICATION	// Only return the feedback for an executable command. //
WITHOUT_CLASSIFICATION	// No image is a good default. //
WITHOUT_CLASSIFICATION	// Add it to the list and remove it from the other list. //
WITHOUT_CLASSIFICATION	// Commands should operate on the values, not their wrappers.  If the command's values needed to be unwrapped, // we'll back get a new CommandParameter. //
WITHOUT_CLASSIFICATION	// When an object is controlled, the only change will be in the new resource's contents, so it must // refresh the whole viewer to hit the object's label. //
WITHOUT_CLASSIFICATION	// Record the part. //
WITHOUT_CLASSIFICATION	// give up if we couldn't create the command; otherwise, use a // CommandActionDelegate to set the action's text, tool-tip, icon, // etc. or just use the default icon
WITHOUT_CLASSIFICATION	// This came from trial and error, yielding decent results on all // platforms.  It should be consistent with activate(). //
WITHOUT_CLASSIFICATION	// If we don't already have it, try to get the source early. We can't give // feedback if it's not available yet (this is platform-dependent). //
WITHOUT_CLASSIFICATION	// Load the model and if it's not one already considered, e.g., a local version in the workspace, process its GenPackages. //
WITHOUT_CLASSIFICATION	// If we've found thing with type parameters, search them for a match. //
WITHOUT_CLASSIFICATION	// process documentation info and create eEnumLiteral for each line //
WITHOUT_CLASSIFICATION	// This just notifies those things that are affected by the section. //
WITHOUT_CLASSIFICATION	// Creates the model from the editor input //
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// Generate actions for selection; populate and redraw the menus. //
WITHOUT_CLASSIFICATION	// this is the case that starting process rose file by passing cat file name // this is a special case. // normally, user should pass mdl file instead of cat file //  // file is a cat file // modelTree did contain quid info
WITHOUT_CLASSIFICATION	// Create a page for the parent tree view. //
WITHOUT_CLASSIFICATION	// Make sure it's okay. //
WITHOUT_CLASSIFICATION	// We either remove the root mapping or we use the iterator that returned the most recent next mapping. //
WITHOUT_CLASSIFICATION	// Cache the tree path for each object. //
WITHOUT_CLASSIFICATION	// Set the editor's selection based on the current viewer's selection. //
WITHOUT_CLASSIFICATION	// The helper part assumes that the summary is likely based on the helper and will change when the helper is set. //
WITHOUT_CLASSIFICATION	// This is the method that gets invoked when the operation runs. //
WITHOUT_CLASSIFICATION	// This is for the out2in feature. //
WITHOUT_CLASSIFICATION	// This is for the topDown feature. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// There needs to be another URL protocol right after the archive protocol, and not a "/". //
WITHOUT_CLASSIFICATION	// Go directly to the right entry in the zip file,  // get the stream,  // and wrap it so that closing it closes the zip file. //
WITHOUT_CLASSIFICATION	// Record them as generic streams to record state during the loop that emulates recursion. //
WITHOUT_CLASSIFICATION	// If this entry isn't the end marker  // and isn't the matching one that we are replacing... //
WITHOUT_CLASSIFICATION	// Try to transfer it by reading the contents of the temporary file  // and writing them to the output stream of the delegate. //
WITHOUT_CLASSIFICATION	// Either execute or redo the command, as appropriate. //
WITHOUT_CLASSIFICATION	// Skip over the command that threw the exception. //
WITHOUT_CLASSIFICATION	// This is kind of tricky. // If the saveIndex was in the redo part of the command list which has now been wiped out, // then we can never reach a point where a save is not necessary, not even if we undo all the way back to the beginning. //
WITHOUT_CLASSIFICATION	// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
WITHOUT_CLASSIFICATION	// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
WITHOUT_CLASSIFICATION	// Count up the objects that will be removed. // The objects are exchanged to produce this list's order //
WITHOUT_CLASSIFICATION	// Remove from by position in reverse order. //
WITHOUT_CLASSIFICATION	// remove/add the action bar from the view so to avoid // having an empty action bar participating in the view's // layout calculation (and maybe causing an empty bar to appear)
WITHOUT_CLASSIFICATION	//actionBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND)); //systemBar.setBackground(WorkbenchColors.getSystemColor(SWT.COLOR_WIDGET_BACKGROUND));
WITHOUT_CLASSIFICATION	// Define gradient (blue to widget background color)
WITHOUT_CLASSIFICATION	// Create a new array. //
WITHOUT_CLASSIFICATION	// buttonComposite has to be the first child of composite because subclasses are expecting this.
WITHOUT_CLASSIFICATION	// Common to all URI types.
WITHOUT_CLASSIFICATION	// A cache of URIs, keyed by the strings from which they were created. // The fragment of any URI is removed before caching it here, to minimize // the size of the cache in the usual case where most URIs only differ by // the fragment.
WITHOUT_CLASSIFICATION	// The lower-cased schemes that will be used to identify archive URIs.
WITHOUT_CLASSIFICATION	// Special segment values interpreted at resolve and resolve time.
WITHOUT_CLASSIFICATION	// Some character classes, as defined in RFC 2396's BNF for URI. // These are 128-bit bitmasks, stored as two longs, where the Nth bit is set // iff the ASCII character with value N is included in the set.  These are // created with the highBitmask() and lowBitmask() methods defined below, // and a character is tested against them using matches(). //
WITHOUT_CLASSIFICATION	// | ucschar | escaped
WITHOUT_CLASSIFICATION	// We can't want to do encoding of platform resource URIs by default yet.    //
WITHOUT_CLASSIFICATION	// Returns the upper half bitmask for all the ASCII characters in the given // string.
WITHOUT_CLASSIFICATION	// Uses a cache to speed up creation of a URI from a string.  The cache // is consulted to see if the URI, less any fragment, has already been // created.  If needed, the fragment is re-appended to the cached URI, // which is considerably more efficient than creating the whole URI from // scratch.  If the URI wasn't found in the cache, it is created using // parseIntoURI() and then cached.  This method should always be used // by string-parsing factory methods, instead of parseIntoURI() directly.
WITHOUT_CLASSIFICATION	// Finds the next occurrence of one of the characters in the set represented // by the given bitmask in the given string, beginning at index i. The index // of the first found character, or s.length() if there is none, is // returned.  Before searching, i is limited to the range [0, s.length()]. //
WITHOUT_CLASSIFICATION	//boolean iri = false;
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(segments[i]);
WITHOUT_CLASSIFICATION	// <p>A valid query may be null or contain any allowed URI characters.
WITHOUT_CLASSIFICATION	//return value == null || validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	// Tests the non-null string value to see if it contains only ASCII // characters in the set represented by the specified 128-bit bitmask, // as well as, optionally, non-ASCII characters 0xA0 and above, and, // also optionally, escape sequences of % followed by two hex digits. // This method is used for the new, strict URI validation that is not // not currently in place.
WITHOUT_CLASSIFICATION	// note: authority == null -> hierarchical // (authority == null && device == null && !absolutePath) -> scheme == null
WITHOUT_CLASSIFICATION	// current document reference: use base path and query
WITHOUT_CLASSIFICATION	// else keep device, path, and query
WITHOUT_CLASSIFICATION	// else keep authority, device, path, and query
WITHOUT_CLASSIFICATION	// Merges this URI's relative path with the base non-relative path.  If // base has no path, treat it as the root absolute path, unless this has // no path either.
WITHOUT_CLASSIFICATION	// if the relative path is empty or ends in an empty segment, a parent  // reference, or a self reference, add a trailing separator to a // non-empty path
WITHOUT_CLASSIFICATION	// since base must be hierarchical, and since a non-hierarchical URI // must have both scheme and opaque part, the complete absolute URI is // needed to resolve to a non-hierarchical URI
WITHOUT_CLASSIFICATION	// path form demands an absolute path: keep it and query
WITHOUT_CLASSIFICATION	// always include fragment, even if null; // no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	// Returns true if the non-relative path includes segments that would be // collapsed when resolving; false otherwise.  If preserveRootParents is // true, collapsible segments include any empty segments, except for the // last segment, as well as and parent and self references.  If // preserveRootsParents is false, parent references are not collapsible if // they are the first segment or preceded only by other parent // references.
WITHOUT_CLASSIFICATION	// if endPath is shorter than startPath, the last segment of endPath may // not be compared: because startPath has been collapsed and had its // last segment removed, all preceding segments can be considered non- // empty and followed by a separator, while the last segment of endPath // will either be non-empty and not followed by a separator, or just empty
WITHOUT_CLASSIFICATION	// absolute path or no path -> absolute path
WITHOUT_CLASSIFICATION	// Computes a three-character escape sequence for the byte, appending // it to the StringBuffer.  Only characters up to 0xFF should be escaped; // all but the least significant byte will be ignored.
WITHOUT_CLASSIFICATION	/*   * Returns <code>true</code> if this URI contains non-ASCII characters;   * <code>false</code> otherwise.   *   * This unused code is included for possible future use...    */
WITHOUT_CLASSIFICATION	// If that fails, determine the URL for the class itself. // The URL will be of one of the following forms, // so there are a few good places to consider looking for the plugin.properties. // // For a plugin.xml with runtime="common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="runtime/common.jar": // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/runtime/common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is jarred: // jar:file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common.jar!/org/eclipse/common/CommonPlugin.class // // For a plugin.xml with runtime="." where the plugin is not jarred. // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/org/eclipse/emf/common/CommonPlugin.class // // Running in PDE with bin on classpath: // file:/D:/sandbox/unpackage1-3.1M7/eclipse/plugins/org.eclipse.emf.common/bin/org/eclipse/emf/common/CommonPlugin.class //
WITHOUT_CLASSIFICATION	// If we can open  an input stream, then the plugin.properties is there, and we have a good base URL. //
WITHOUT_CLASSIFICATION	// If the bundle can't be found the normal way, try to find it as the base URL. // If that also doesn't work, rethrow the original exception. //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// ++modCount //
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// feature is instance of EAttribute
WITHOUT_CLASSIFICATION	// Create a proper feature map entry. //
WITHOUT_CLASSIFICATION	// Bidirectional references need to use this less efficient approach because some //  or all of the changes may already have been made from the other end. //
WITHOUT_CLASSIFICATION	// caches the list value.
WITHOUT_CLASSIFICATION	// caches the list value.
WITHOUT_CLASSIFICATION	// caches the list value.
WITHOUT_CLASSIFICATION	// Maintain a (weak hash) set on the type parameter of all referencing generic types. //
WITHOUT_CLASSIFICATION	// The algorithm for the order of the features in this list should never change. // Also, the fact that a new list is created whenever the contents change  // is something else that should never change. // There are clients who rely on both these behaviors,  // and they will need to agree to any change, // so that they can adjust their own code. //
WITHOUT_CLASSIFICATION	// The notification for this list is being thrown by the // delegating list //
WITHOUT_CLASSIFICATION	// Keep trying until all else has failed.
WITHOUT_CLASSIFICATION	// return eContainerFeatureID;
WITHOUT_CLASSIFICATION	// If we're not setting a new resource, attach it to the old container's resource.
WITHOUT_CLASSIFICATION	// If we didn't detach it from an old resource already, detach it from the old container's resource. //
WITHOUT_CLASSIFICATION	/* backward compatibility with old generated overrides */
WITHOUT_CLASSIFICATION	/* backward compatibility with old generated overrides */
WITHOUT_CLASSIFICATION	// Depending on the action and the current state, we'll toggle the state. // i.e., for unset, we need to turn it off if it's on,  // and for set we need to turn it on if it's off. //
WITHOUT_CLASSIFICATION	// If the index was previously assigned, return it. // Otherwise, return a negative result that encodes the newly assigned index. //
WITHOUT_CLASSIFICATION	// We set it and get back the interned string. // This way, when instanceClassName == instanceTypeName we know we should serialize only the class name. //
WITHOUT_CLASSIFICATION	// The container class must be null for the open content features of the document root // to ensure that they are looked up in the actual eClass()  // rather than assumed to be a feature with a feature ID relative to the actual class. // Otherwise, it's good to have this optimization. //
WITHOUT_CLASSIFICATION	// Interpret it as part of the name. //
WITHOUT_CLASSIFICATION	// The class address was not equal, so we don't want this class loader, // but instead want the last result that was able to load the class. //
WITHOUT_CLASSIFICATION	//Platform.getBundle(element.getNamespaceIdentifier()).loadClass(contributorClassName);
WITHOUT_CLASSIFICATION	// First try to see if this class has an eInstance  //
WITHOUT_CLASSIFICATION	// Create a resource for this file. //
WITHOUT_CLASSIFICATION	// Add the initial model object to the contents. //
WITHOUT_CLASSIFICATION	// Create a page, set the title, and the initial model file name. //
WITHOUT_CLASSIFICATION	// Set this for the container. //
WITHOUT_CLASSIFICATION	// Load the schema and packages that were used to load the instance into this resource set. //
WITHOUT_CLASSIFICATION	// Create a resource for this file. Don't specify a content type, as it could be Ecore or EMOF. //
WITHOUT_CLASSIFICATION	// Put all static package in the package registry. //
WITHOUT_CLASSIFICATION	// Look into SubContributionItems //
WITHOUT_CLASSIFICATION	//return;
WITHOUT_CLASSIFICATION	// super.collectNewChildDescriptors(newChildDescriptors, object);
WITHOUT_CLASSIFICATION	// If the list is empty, we need to add all the objects, // otherwise, the reference is bidirectional and the list is at least partially populated. //
WITHOUT_CLASSIFICATION	// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);
WITHOUT_CLASSIFICATION	// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //
WITHOUT_CLASSIFICATION	// There is no match if the types are different // and they don't each specify the same non-null instance class name. //
WITHOUT_CLASSIFICATION	// We need to be conservative and diagnose a problem only if we are quite sure that type is built-in  // and hence that the lack of a default value really represents a problem with being unable to convert the literal to a value. // 
WITHOUT_CLASSIFICATION	// And even if it is contained, it must not be a forward reference. // eTypeParameterIndex == index is allowed when the type parameter is  // the type argument of the bound, though //
WITHOUT_CLASSIFICATION	// A primitive type can only be used as the generic type of a typed element. //
WITHOUT_CLASSIFICATION	// Check if the bound specifies a classifier... //
WITHOUT_CLASSIFICATION	// Since we will do the processing recursively, we need to ensure we don't stack overflow if there is a circular super type. //
WITHOUT_CLASSIFICATION	// Or we test their relationship via their instance classes, if they have them. //
WITHOUT_CLASSIFICATION	// The bound is a wildcard with no constraints. //
WITHOUT_CLASSIFICATION	// The bound is a wildcard with no constraints. //
WITHOUT_CLASSIFICATION	/*        featureMap.add(eStructuralFeature, cursor++, o);        expectedModCount = featureMap.getModCount();        ++entryCursor;        ++lastCursor;        // lastCursor = -1;        // prepared = 0;*/
WITHOUT_CLASSIFICATION	// Don't remove the adapter if the object is in a different resource  // and that resource (and hence all its contents) are being cross referenced. //
WITHOUT_CLASSIFICATION	/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/
WITHOUT_CLASSIFICATION	// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //
WITHOUT_CLASSIFICATION	// Mark the bound as unspecified so that it won't be considered many // but can nevertheless be recognized as being unspecified and perhaps still be treat as many. //
WITHOUT_CLASSIFICATION	// If we can't add it, it must already be in the list so find it and move it to the end. //
WITHOUT_CLASSIFICATION	// Both eObject1 and eObject2 are not null. // If eObject1 has been compared already... //
WITHOUT_CLASSIFICATION	// There's no reason they aren't equal, so they are. //
WITHOUT_CLASSIFICATION	// If the set states are the same, and the values of the feature are the structurally equal, they are equal. //
WITHOUT_CLASSIFICATION	// If entries don't have the same feature, the feature maps aren't equal. //
WITHOUT_CLASSIFICATION	// Do a base 64 conversion by turning every 3 bytes into 4 base 64 characters //
WITHOUT_CLASSIFICATION	// Get the current time in milliseconds since the epoch  // and adjust it to match the epoch required by the specification. //
WITHOUT_CLASSIFICATION	// The system time hasn't changed so add some increment of 100s of nanoseconds to guarantee uniqueness. //
WITHOUT_CLASSIFICATION	// Since the granularity of time in Java is only milliseconds,  // add an adjustment so that the time is represented in 100s of nanoseconds. // The version number (1) is multiplexed into the most significant hex digit. //
WITHOUT_CLASSIFICATION	// Cc
WITHOUT_CLASSIFICATION	// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //
WITHOUT_CLASSIFICATION	// Handle the same document proxies, which may have problems resulting from the // other end of a bidirectional reference being handled as an IDREF rather than as a proxy. // When we are done with these, we know that funny proxies are now resolved as if they were handled as IDREFs. //
WITHOUT_CLASSIFICATION	// So if the resolved object is also present... //
WITHOUT_CLASSIFICATION	// If there is no root object, we're dealing with an EAttribute feature instead of an EReference feature. // So create an instance of simple any type and prepare it to handle the text content. //
WITHOUT_CLASSIFICATION	// Continue with a different approach.
WITHOUT_CLASSIFICATION	// Look for the first non-XMI element. //
WITHOUT_CLASSIFICATION	// set features and properties
WITHOUT_CLASSIFICATION	// Include only non-duplicate namespace declarations. //
WITHOUT_CLASSIFICATION	// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //
WITHOUT_CLASSIFICATION	// We must have a qualifier for an attribute that needs qualified. //
WITHOUT_CLASSIFICATION	// see if prefix already exists in current context
WITHOUT_CLASSIFICATION	// Walk up the super types until we reach a root. //
WITHOUT_CLASSIFICATION	// Look for a matching element in the classifier's package but don't bother with the XML type package's document root. //
WITHOUT_CLASSIFICATION	/*   * INTERNAL: this is a specialized method to add attributes for a top/root element   */
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// Produce the supplemental character as an entity
WITHOUT_CLASSIFICATION	// We not sure the encoding supports this code point, so we write it as a character entity reference.
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// Only handle classifiers from this package. //
WITHOUT_CLASSIFICATION	// We effectively passed null, "" to look up the general-content feature. //
WITHOUT_CLASSIFICATION	// DocumentRoot
WITHOUT_CLASSIFICATION	// Keep trying other member types until all have failed.
WITHOUT_CLASSIFICATION	// Keep trying other member types until all have failed.
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// Need not to call setSource() because // a caller can not access this match instance.
WITHOUT_CLASSIFICATION	// Need not to call setSource() because // a caller can not access this match instance.
WITHOUT_CLASSIFICATION	/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */
WITHOUT_CLASSIFICATION	/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */
WITHOUT_CLASSIFICATION	/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */
WITHOUT_CLASSIFICATION	// ModifierOp // CharOp  for CHAR, BACKREFERENCE, CAPTURE, ANCHOR, 
WITHOUT_CLASSIFICATION	// STRING
WITHOUT_CLASSIFICATION	// for RANGE or NRANGE
WITHOUT_CLASSIFICATION	// Overlapped // src:    o--------o // sub:  o----o // sub:      o----o // sub:          o----o // sub:  o------------o
WITHOUT_CLASSIFICATION	// this.ranges is sorted and compacted.
WITHOUT_CLASSIFICATION	// src1:    o--------o // src2:          o----o // res:           o--o // Reuse src2
WITHOUT_CLASSIFICATION	//this.setLocale(Locale.getDefault());
WITHOUT_CLASSIFICATION	/*      public RegularExpression createRegex(String regex, int options) throws ParseException {          Token tok = this.parse(regex, options);          return new RegularExpression(regex, tok, this.parennumber, this.hasBackReferences, options);      }      */
WITHOUT_CLASSIFICATION	// ')'
WITHOUT_CLASSIFICATION	// Skips ')'
WITHOUT_CLASSIFICATION	// off -> next of '}'
WITHOUT_CLASSIFICATION	// \ + c // backsolidus // POSIX Character class such as [:alnum:]
WITHOUT_CLASSIFICATION	//tok.dumpRanges();
WITHOUT_CLASSIFICATION	// Skips ']'
WITHOUT_CLASSIFICATION	// ESCAPE U+001B // FORM FEED U+000C // LINE FEED U+000A // CRRIAGE RETURN U+000D // HORIZONTAL TABULATION U+0009 //case 'v':  c = 0x0b;  break; // VERTICAL TABULATION U+000B
WITHOUT_CLASSIFICATION	// for CLOSURE
WITHOUT_CLASSIFICATION	// for STRING
WITHOUT_CLASSIFICATION	// ****
WITHOUT_CLASSIFICATION	/*                  result.addRange(0, RegularExpression.LINE_FEED-1);                  result.addRange(RegularExpression.LINE_FEED+1, RegularExpression.CARRIAGE_RETURN-1);                  result.addRange(RegularExpression.CARRIAGE_RETURN+1,                                  RegularExpression.LINE_SEPARATOR-1);                  result.addRange(RegularExpression.PARAGRAPH_SEPARATOR+1, UTF16_MAX);                  return 1;                  */
WITHOUT_CLASSIFICATION	// ------------------------------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------------------------------
WITHOUT_CLASSIFICATION	// 28 // 29, 30 // 31-37
WITHOUT_CLASSIFICATION	// Schema Rec. {Datatypes} - Punctuation  // Pi - initial quote // Pf - final quote
WITHOUT_CLASSIFICATION	/*0590..05FF;*/
WITHOUT_CLASSIFICATION	/*0A00..0A7F;*/
WITHOUT_CLASSIFICATION	/*0D00..0D7F;*/
WITHOUT_CLASSIFICATION	/*10A0..10FF;*/
WITHOUT_CLASSIFICATION	/*16A0..16FF;*/
WITHOUT_CLASSIFICATION	/*2000..206F;*/
WITHOUT_CLASSIFICATION	/*2190..21FF;*/
WITHOUT_CLASSIFICATION	/*2500..257F;*/
WITHOUT_CLASSIFICATION	/*2FF0..2FFF;*/
WITHOUT_CLASSIFICATION	/*3190..319F;*/
WITHOUT_CLASSIFICATION	/*A000..A48F;*/
WITHOUT_CLASSIFICATION	/*FB50..FDFF;*/
WITHOUT_CLASSIFICATION	/*FF00..FFEF;*/
WITHOUT_CLASSIFICATION	/*1D400..1D7FF;*/
WITHOUT_CLASSIFICATION	//ADD THOSE MANUALLY //F0000..FFFFD; "Private Use", //100000..10FFFD; "Private Use" //FFF0..FFFD; "Specials", 
WITHOUT_CLASSIFICATION	// ;DEVANAGARI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;BENGALI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GURMUKHI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;GUJARATI SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;ORIYA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TAMIL SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;TELUGU SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;KANNADA SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;MALAYALAM SIGN VIRAMA;Mn;9;ON;;;;;N;;;;; //;THAI CHARACTER PHINTHU;Mn;9;ON;;;;;N;THAI VOWEL SIGN PHINTHU;;;; //;TIBETAN MARK HALANTA;Mn;9;ON;;;;;N;TIBETAN VIRAMA;;;;
WITHOUT_CLASSIFICATION	// Don't use 'cotinue' for this loop. // single-range | from-to-range | subtraction
WITHOUT_CLASSIFICATION	// both prefix (if any) a localpart must be valid NCName
WITHOUT_CLASSIFICATION	// Empty.
WITHOUT_CLASSIFICATION	// Empty.
WITHOUT_CLASSIFICATION	// Empty.
WITHOUT_CLASSIFICATION	// Empty.
WITHOUT_CLASSIFICATION	/* * This class provides encode/decode for RFC 2045 Base64 as * defined by RFC 2045, N. Freed and N. Borenstein. * RFC 2045: Multipurpose Internet Mail Extensions (MIME) * Part One: Format of Internet Message Bodies. Reference * 1996 Available at: http://www.ietf.org/rfc/rfc2045.txt * This class is used by XML Schema binary format validation * * This implementation does not encode/decode streaming * data. You need the data that you will encode/decode * already on a byte array. * * @author Jeffrey Rodriguez * @author Sandy Gao */
WITHOUT_CLASSIFICATION	//if found "no data" just return null
WITHOUT_CLASSIFICATION	/* * EncodingMap is a convenience class which handles conversions between  * IANA encoding names and Java encoding names, and vice versa. The * encoding names used in XML instance documents <strong>must</strong> * be the IANA encoding names specified or one of the aliases for those names * which IANA defines. * <p> * <TABLE BORDER="0" WIDTH="100%"> *  <TR> *      <TD WIDTH="33%"> *          <P ALIGN="CENTER"><B>Common Name</B> *      </TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER"><B>Use this name in XML files</B> *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER"><B>Name Type</B> *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER"><B>Xerces converts to this Java Encoder Name</B> *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">8 bit Unicode</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">UTF-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">UTF8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 1</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-1 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 2</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-2 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 3</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-3 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 4</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-4 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-6 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Greek</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-7 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-8 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">ISO Latin 5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">ISO-8859-9 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: US</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-us *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Canada</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ca *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Netherlands</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-nl *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp037 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Denmark</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-dk *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Norway</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-no *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp277 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Finland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fi *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Sweden</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-se *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp278 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Italy</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-it *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp280 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Spain, Latin America</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-es *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp284 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Great Britain</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-gb *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp285 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: France</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-fr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp297 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Arabic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar1 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp420 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Hebrew</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-he *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp424 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Switzerland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ch *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp500 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Roece</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-roece *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Yugoslavia</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-yu *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp870 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Iceland</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-is *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp871 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">EBCDIC: Urdu</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">ebcdic-cp-ar2 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">IANA *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">cp918 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese for PRC, mixed 1/2 byte</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">gb2312 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">GB2312 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Japanese</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">eucjis *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: iso-2022-jp</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">iso-2020-jp *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">JIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Japanese: Shift JIS</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Shift_JIS *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">SJIS *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Chinese: Big5</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">Big5 *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">Big5 *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Extended Unix Code, packed for Korean</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">euc-kr *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">iso2022kr *      </TD> *  </TR> *  <TR> *      <TD WIDTH="33%">Cyrillic</TD> *      <TD WIDTH="15%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *      <TD WIDTH="12%"> *          <P ALIGN="CENTER">MIME *      </TD> *      <TD WIDTH="31%"> *          <P ALIGN="CENTER">koi8-r *      </TD> *  </TR> * </TABLE> *  * @author TAMURA Kent, IBM * @author Andy Clark, IBM */
WITHOUT_CLASSIFICATION	// // Static initialization //
WITHOUT_CLASSIFICATION	// // Static initialization //
WITHOUT_CLASSIFICATION	// add IANA to Java encoding mappings.
WITHOUT_CLASSIFICATION	// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html
WITHOUT_CLASSIFICATION	// support for 1047, as proposed to be added to the  // IANA registry in  // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0049.html
WITHOUT_CLASSIFICATION	// <clinit>()
WITHOUT_CLASSIFICATION	// <clinit>()
WITHOUT_CLASSIFICATION	// putJava2IANAMapping(String,String)
WITHOUT_CLASSIFICATION	// getJava2IANAMapping(String):String
WITHOUT_CLASSIFICATION	// removeJava2IANAMapping
WITHOUT_CLASSIFICATION	// Add ASCII Letters
WITHOUT_CLASSIFICATION	// Add Mark Characters
WITHOUT_CLASSIFICATION	// Add Userinfo Characters
WITHOUT_CLASSIFICATION	// just make a copy of the base if spec is empty
WITHOUT_CLASSIFICATION	// A standalone base is a valid URI according to spec
WITHOUT_CLASSIFICATION	// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments
WITHOUT_CLASSIFICATION	// Two slashes means we may have authority, but definitely means we're either // matching net_path or abs_path. These two productions are ambiguous in that // every net_path (except those containing an IPv6Reference) is an abs_path.  // RFC 2396 resolves this ambiguity by applying a greedy left most matching rule.  // Try matching net_path first, and if that fails we don't have authority so  // then attempt to match abs_path. // // net_path = "//" authority [ abs_path ] // abs_path = "/"  path_segments
WITHOUT_CLASSIFICATION	// If we didn't find authority we need to back up. Attempt to // match against abs_path next.
WITHOUT_CLASSIFICATION	// create message
WITHOUT_CLASSIFICATION	// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC
WITHOUT_CLASSIFICATION	// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done
WITHOUT_CLASSIFICATION	// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas
WITHOUT_CLASSIFICATION	// If the scheme specific part is opaque, it can contain '[' // and ']'. uric_no_slash wasn't modified by RFC 2732, which // I've interpreted as an error in the spec, since the  // production should be equivalent to (uric - '/'), and uric // contains '[' and ']'. - mrglavas
WITHOUT_CLASSIFICATION	// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum
WITHOUT_CLASSIFICATION	// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.
WITHOUT_CLASSIFICATION	// make sure that 1) we see only digits and dot separators, 2) that // any dot separator is preceded and followed by a digit and // 3) that we find 3 dots // // RFC 2732 amended RFC 2396 by replacing the definition  // of IPv4address with the one defined by RFC 2373. - mrglavas // // IPv4address = 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT "." 1*3DIGIT // // One to three digits must be in each segment.
WITHOUT_CLASSIFICATION	// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 
WITHOUT_CLASSIFICATION	// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 49 // Fill 26 of value (byte) -3 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 68 of value (byte) -19 // Fill 9 of value (byte) 33 // Fill 36 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 30 of value (byte) -19 // Fill 56 of value (byte) 33 // Fill 89 of value (byte) -19 // Fill 18 of value (byte) 33 // Fill 7 of value (byte) -19 // Fill 14 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 46 of value (byte) 33 // Fill 70 of value (byte) -87 // Fill 26 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 36 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// }}
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// cause a syntax error
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Look for a likely plugin name. //
WITHOUT_CLASSIFICATION	/*   * Returns the dynamic template path, an ordered list of URIs corresponding to locations under which to find   * templates.   */
WITHOUT_CLASSIFICATION	/*   * Returns the base portion of the dynamic template path.   */
WITHOUT_CLASSIFICATION	// It's okay for there not be a precompiled template, so fail quietly.
WITHOUT_CLASSIFICATION	// Returns whether this class implements any of the given features.
WITHOUT_CLASSIFICATION	// GenTypedElement
WITHOUT_CLASSIFICATION	// GenTypeParameter
WITHOUT_CLASSIFICATION	//GenRuntimeVersion
WITHOUT_CLASSIFICATION	//GenModelPackage
WITHOUT_CLASSIFICATION	// String getPackageID();
WITHOUT_CLASSIFICATION	// getFirstFileExtension?
WITHOUT_CLASSIFICATION	// this returns either "attribute", "attribute list", "reference", or "reference list"
WITHOUT_CLASSIFICATION	// add variable fragment to new declaration
WITHOUT_CLASSIFICATION	// Filtered for property keys to remove duplicates.
WITHOUT_CLASSIFICATION	//GenModelFactory
WITHOUT_CLASSIFICATION	// GenAnnotation
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// add added super interfaces to the array
WITHOUT_CLASSIFICATION	// always returns original value
WITHOUT_CLASSIFICATION	// only 1 fragment left - revert the changes
WITHOUT_CLASSIFICATION	// split is performed
WITHOUT_CLASSIFICATION	// name already contains ".*" - unset on demand property
WITHOUT_CLASSIFICATION	// not supported in JDOM
WITHOUT_CLASSIFICATION	// not supported in JDOM    
WITHOUT_CLASSIFICATION	//The shared instance.
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	//GenAnnotationImpl
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Create enums
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	//GenModelPackageImpl
WITHOUT_CLASSIFICATION	// Does nothing
WITHOUT_CLASSIFICATION	// Create an import manager for this compilation unit
WITHOUT_CLASSIFICATION	// Create a code formatter for this compilation unit, if needed
WITHOUT_CLASSIFICATION	// InputStream contents = new ByteArrayInputStream(bytes);
WITHOUT_CLASSIFICATION	// Clear the import manager
WITHOUT_CLASSIFICATION	//FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	// BasicEMap.this.removeEntry(index, j);
WITHOUT_CLASSIFICATION	//FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	//(eType instanceof EDataType)
WITHOUT_CLASSIFICATION	// order genPackages by putting firstGenPackage (if non-null) first
WITHOUT_CLASSIFICATION	// generateColor();
WITHOUT_CLASSIFICATION	// If the value is null, the key is a referenced object
WITHOUT_CLASSIFICATION	// If we've found thing with type parameters, search them for a match.
WITHOUT_CLASSIFICATION	/*   * Set from {@link #isChildren children} if unset, and return value.   */
WITHOUT_CLASSIFICATION	//  && eReverseFeature.isNavigable();
WITHOUT_CLASSIFICATION	//GenFeatureImpl
WITHOUT_CLASSIFICATION	// Returns whether this class implements any of the given features.
WITHOUT_CLASSIFICATION	//GenEnumImpl
WITHOUT_CLASSIFICATION	//GenModelFactoryImpl
WITHOUT_CLASSIFICATION	// build mapping from classes to list of features that use them
WITHOUT_CLASSIFICATION	// scan feature lists for those with multiple elements and return them
WITHOUT_CLASSIFICATION	//data type
WITHOUT_CLASSIFICATION	//GenTypeParameterImpl
WITHOUT_CLASSIFICATION	//GenTypedElementImpl
WITHOUT_CLASSIFICATION	// escaped unicode form
WITHOUT_CLASSIFICATION	// EObject is handled by default case
WITHOUT_CLASSIFICATION	// Go through class super types to catch any from other packages
WITHOUT_CLASSIFICATION	// Go through class super types to catch constraints from other packages
WITHOUT_CLASSIFICATION	// Create helpers to cache and supply information for unique naming
WITHOUT_CLASSIFICATION	// Ignore this soft dependency when it's not satisfied.
WITHOUT_CLASSIFICATION	// return getPrefixedName("EditPlugin");
WITHOUT_CLASSIFICATION	// return getProviderPackageName() + "." + getEditPluginClassName();
WITHOUT_CLASSIFICATION	// return getPrefixedName("EditorPlugin");
WITHOUT_CLASSIFICATION	// return getPresentationPackageName() + "." + getEditorPluginClassName();
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	//TBD 
WITHOUT_CLASSIFICATION	//TBD 
WITHOUT_CLASSIFICATION	//GenPackageImpl
WITHOUT_CLASSIFICATION	// Don't care about plugin class; we can generate a model without one.
WITHOUT_CLASSIFICATION	// genPackage can be a broken proxy
WITHOUT_CLASSIFICATION	//   protected JETEmitter extendedItemProviderEmitter = null;
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//GenModelImpl
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// TODO
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc
WITHOUT_CLASSIFICATION	/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	// (
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	//GenModelSwitch
WITHOUT_CLASSIFICATION	//GenModelAdapterFactory
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	//GenModelValidator
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/getText.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/addPropertyDescriptor.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsAttributeDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsReferenceDelegatedFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsReferenceFeature.override.javajetinc 
WITHOUT_CLASSIFICATION	//ItemProvider/newChildDescriptorsAttributeFeature.override.javajetinc
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	// return eProperties;
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	//Class/reflectiveDelegation.override.javajetinc
WITHOUT_CLASSIFICATION	//Editor/addItemproviderFactories.override.javajetinc"
WITHOUT_CLASSIFICATION	//ResourceFactoryClass/createResource.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/declaredFieldGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	///////////////////////
WITHOUT_CLASSIFICATION	///////////////////////
WITHOUT_CLASSIFICATION	//volatile
WITHOUT_CLASSIFICATION	//Class/getGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/getGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/getGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/getGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicGetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicGetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicGetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/setGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/setGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/setGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/setGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicUnsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/basicUnsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class.basicUnsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/unsetGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/unsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/unsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/unsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/isSetGenFeature.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/isSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/isSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/isSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/genOperation.javadoc.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/genOperation.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//Class/implementedGenOperation.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//Class/eUnset.override.javajetinc
WITHOUT_CLASSIFICATION	//datatype
WITHOUT_CLASSIFICATION	//Class/eIsSet.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/getGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/getGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/getGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/setGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	//TestCase/setGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/setGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/unsetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/unsetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/unsetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/isSetGenFeature.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/isSetGenFeature.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/implementedGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/genOperation.annotations.insert.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/implementedGenOperation.todo.override.javajetinc
WITHOUT_CLASSIFICATION	//TestCase/implementedGenOperation.override.javajetinc
WITHOUT_CLASSIFICATION	/*   * Char buffer for HTML data   */
WITHOUT_CLASSIFICATION	// Match close.
WITHOUT_CLASSIFICATION	// Continue processing dynamically as normal.
WITHOUT_CLASSIFICATION	// Ignore because we'll rethrow the original exception eventually.
WITHOUT_CLASSIFICATION	// pure obfuscated genius!
WITHOUT_CLASSIFICATION	// Read value until delimiter is found:
WITHOUT_CLASSIFICATION	// Take care of the quoting here.
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// (
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Close NCSA like attributes "->"
WITHOUT_CLASSIFICATION	// Close variable like attributes "%>"
WITHOUT_CLASSIFICATION	// XMLesque Close tags
WITHOUT_CLASSIFICATION	// Reached EOF:
WITHOUT_CLASSIFICATION	// Ignore the version
WITHOUT_CLASSIFICATION	//dumpNodeContents(node);
WITHOUT_CLASSIFICATION	// dumpNodeContents(node);
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	/////////////////////////////////  PULL  /////////////////////////////////////
WITHOUT_CLASSIFICATION	/*    // PULL Name    //    targetPackage.setName(sourcePackage.getName());*/
WITHOUT_CLASSIFICATION	/////////////////////////////////  PUSH  /////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////  SWEEP  /////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////  SORT  /////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////  CLONE AND MAP  /////////////////////////////////////
WITHOUT_CLASSIFICATION	// System.err.println("Warning: Cannot clone '" + sourceNode.getContents() + "'");
WITHOUT_CLASSIFICATION	// apply target parent pattern first
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	/////////////////////////////////  HEADLESS INVOCATION  /////////////////////////////////////
WITHOUT_CLASSIFICATION	// Ignore the exception.
WITHOUT_CLASSIFICATION	// use new node from now on
WITHOUT_CLASSIFICATION	// redo the markup since nodes changed now
WITHOUT_CLASSIFICATION	// super is called on converted node
WITHOUT_CLASSIFICATION	// Back up over the whitespace.
WITHOUT_CLASSIFICATION	// target method is NOT addSuperInterface
WITHOUT_CLASSIFICATION	// if the parent is not in target, there is no point on checking the child
WITHOUT_CLASSIFICATION	// by default nodes are marked up
WITHOUT_CLASSIFICATION	// ignore rules for nodes of different class
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// use new node from now on
WITHOUT_CLASSIFICATION	// redo the markup since nodes changed now
WITHOUT_CLASSIFICATION	// super is called on converted node
WITHOUT_CLASSIFICATION	// Command line execution methods
WITHOUT_CLASSIFICATION	// do not crash when control model is not set
WITHOUT_CLASSIFICATION	// Subclasses may override this method
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Not instantiable
WITHOUT_CLASSIFICATION	// replace or append
WITHOUT_CLASSIFICATION	// enable tracking for nodes that have string content
WITHOUT_CLASSIFICATION	// enable tracking for commented out nodes
WITHOUT_CLASSIFICATION	// apply header
WITHOUT_CLASSIFICATION	// skip whitespace, up to the end of the line
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// this should never happen
WITHOUT_CLASSIFICATION	// revert all current edits for this node
WITHOUT_CLASSIFICATION	// log the error, ignore the change and continue
WITHOUT_CLASSIFICATION	// comment out all lines of the node itself, from firstLine to last line
WITHOUT_CLASSIFICATION	// if there is anything after the node on the same line, insert line break
WITHOUT_CLASSIFICATION	// reset text edits; since this node is processed successfully, there is no need to revert these changes
WITHOUT_CLASSIFICATION	// this line has been commented out, return next line number
WITHOUT_CLASSIFICATION	// return the line number of the start of the node
WITHOUT_CLASSIFICATION	// handle the case when there is a replace edit that covers these lines
WITHOUT_CLASSIFICATION	// skip all lines that replace edit covers
WITHOUT_CLASSIFICATION	// should not happen, re-throw exception
WITHOUT_CLASSIFICATION	// make sure that dummy edit is not in the tree
WITHOUT_CLASSIFICATION	// assume length will grow by 10% (average line length is 20 characters)
WITHOUT_CLASSIFICATION	// next position is checked as well
WITHOUT_CLASSIFICATION	// char at currentPos is copied as well
WITHOUT_CLASSIFICATION	// lastPos, currentPos points at the next chars that will be copied later
WITHOUT_CLASSIFICATION	// copy last piece if any
WITHOUT_CLASSIFICATION	// if needed, comment out a comma of the previous enum constant
WITHOUT_CLASSIFICATION	// if there is anything before the node on the same line, create line break and comment out the first line of the node
WITHOUT_CLASSIFICATION	// there is only whitespace on this line - no need for line break
WITHOUT_CLASSIFICATION	// for enum constants, insert line break after the comma if there is anything after the comma
WITHOUT_CLASSIFICATION	// if there is any content after the node on the same line, insert line break (to prevent commenting out extra content)
WITHOUT_CLASSIFICATION	// if previous node is not commented out, but all the following nodes are, comment out a comma (constant separator)
WITHOUT_CLASSIFICATION	// if previous node is not commented out, but all following are
WITHOUT_CLASSIFICATION	// insert new line at the end of previous constant
WITHOUT_CLASSIFICATION	// if comma is on a line by itself, comment it out but do not insert the line break
WITHOUT_CLASSIFICATION	// delete variable fragment from old declaration
WITHOUT_CLASSIFICATION	// do not insert line break if there is only whitespace after comma
WITHOUT_CLASSIFICATION	// there is only whitespace after enum constant on the same line - do not add line breaks
WITHOUT_CLASSIFICATION	//listRewrite.remove((ASTNode)modifier, null);
WITHOUT_CLASSIFICATION	// add added super interfaces to the array
WITHOUT_CLASSIFICATION	// this could be method body, for example
WITHOUT_CLASSIFICATION	// for field declarations use variable declaration fragments instead
WITHOUT_CLASSIFICATION	// for all nodes but some use default extended range
WITHOUT_CLASSIFICATION	// remove all existing modifiers
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// append extra dimensions if any
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// create new modifiers and add to rewrite
WITHOUT_CLASSIFICATION	// parse
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// specify the exact parent of annotations
WITHOUT_CLASSIFICATION	// set source
WITHOUT_CLASSIFICATION	// create rewriter to record changes
WITHOUT_CLASSIFICATION	// keep comments between nodes when removing or moving nodes
WITHOUT_CLASSIFICATION	// set properties
WITHOUT_CLASSIFICATION	// create JNode and set properties
WITHOUT_CLASSIFICATION	// Set of options that we want to copy from the current definition        
WITHOUT_CLASSIFICATION	// Set of options that we want to control
WITHOUT_CLASSIFICATION	// separate fields with an empty line
WITHOUT_CLASSIFICATION	// make all enum constants to be on separate lines
WITHOUT_CLASSIFICATION	// handle field declarations separately
WITHOUT_CLASSIFICATION	// create new node and replace it all by original contents
WITHOUT_CLASSIFICATION	// set rewriter on the new node
WITHOUT_CLASSIFICATION	// if there are multiple variables in the same field declaration, create declaration with only 1 variable
WITHOUT_CLASSIFICATION	// rewriter is required for set methods
WITHOUT_CLASSIFICATION	// set comment and initializer as strings
WITHOUT_CLASSIFICATION	// set annotation contents
WITHOUT_CLASSIFICATION	// skip nodes in hierarchy that can not be converted to JNode (i.e. VariableDeclarationFragment)
WITHOUT_CLASSIFICATION	// get rewriter
WITHOUT_CLASSIFICATION	// update the wrapped object map
WITHOUT_CLASSIFICATION	// range to look for comments
WITHOUT_CLASSIFICATION	// get the end position of the range for the previous node
WITHOUT_CLASSIFICATION	//previousNode.getStartPosition() + previousNode.getLength();
WITHOUT_CLASSIFICATION	// if there is an element with end position <= rangeEndPos
WITHOUT_CLASSIFICATION	// the previous element must have end position <= rangeEndPos
WITHOUT_CLASSIFICATION	// else - there is a comment that ends exactly at rangeEndPos    
WITHOUT_CLASSIFICATION	// if there is a comment with start position > rangeStartPos
WITHOUT_CLASSIFICATION	// else - there is a comment that starts exactly at rangeStartPos
WITHOUT_CLASSIFICATION	// find start position of farthest preceding comment
WITHOUT_CLASSIFICATION	// check if there is just whitespace between position and start of the comment
WITHOUT_CLASSIFICATION	// extend to include the comment at the same line as the position 
WITHOUT_CLASSIFICATION	// extend range backward
WITHOUT_CLASSIFICATION	// extend range forward
WITHOUT_CLASSIFICATION	// add trailing whitespace
WITHOUT_CLASSIFICATION	// increments the position to add the white spaces
WITHOUT_CLASSIFICATION	// for all nodes but some use default extended range
WITHOUT_CLASSIFICATION	// include line comments following end of the nodes into the range
WITHOUT_CLASSIFICATION	// add leading comments
WITHOUT_CLASSIFICATION	// add trailing comments if necessary
WITHOUT_CLASSIFICATION	// insert new declaration before this one
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// append extra dimensions if any
WITHOUT_CLASSIFICATION	// default implementation does nothing
WITHOUT_CLASSIFICATION	// disable commenting out
WITHOUT_CLASSIFICATION	// enable commenting out
WITHOUT_CLASSIFICATION	// mark the node as moved if node has been removed      
WITHOUT_CLASSIFICATION	// if are dealing with original, not cloned node
WITHOUT_CLASSIFICATION	// mark the node to be removed
WITHOUT_CLASSIFICATION	// assume that the node is being moved (to allow insertion after)
WITHOUT_CLASSIFICATION	// remove the node
WITHOUT_CLASSIFICATION	// insert new values
WITHOUT_CLASSIFICATION	// stringValue not null, nodeValue is null
WITHOUT_CLASSIFICATION	// always returns original value
WITHOUT_CLASSIFICATION	// append extra dimensions since they are not stored in Type object
WITHOUT_CLASSIFICATION	// create map of field names to fields
WITHOUT_CLASSIFICATION	// move all children to the enum, converting some fields to constants
WITHOUT_CLASSIFICATION	// remove type, insert enum
WITHOUT_CLASSIFICATION	// convert only public static final fields
WITHOUT_CLASSIFICATION	// convert only fields of the same type as parent
WITHOUT_CLASSIFICATION	// set arguments and body
WITHOUT_CLASSIFICATION	// move annotations
WITHOUT_CLASSIFICATION	// unable to set arguments or body
WITHOUT_CLASSIFICATION	// update the wrapped object
WITHOUT_CLASSIFICATION	// move annotations
WITHOUT_CLASSIFICATION	// convert enum constants and add to list of converted constants
WITHOUT_CLASSIFICATION	// move the node
WITHOUT_CLASSIFICATION	// insert nodeToInsert after targetNode
WITHOUT_CLASSIFICATION	// replace type by enum
WITHOUT_CLASSIFICATION	// create field declaration with 1 variable declaration fragment
WITHOUT_CLASSIFICATION	// set the type to create
WITHOUT_CLASSIFICATION	// set arguments
WITHOUT_CLASSIFICATION	// replace some arguments by another field names (constants)
WITHOUT_CLASSIFICATION	// update last field that is used
WITHOUT_CLASSIFICATION	// set the arguments to the constructor
WITHOUT_CLASSIFICATION	// set the body
WITHOUT_CLASSIFICATION	// set the whole initializer
WITHOUT_CLASSIFICATION	// return the whole declaration contents (not just variableDeclarationFragment)
WITHOUT_CLASSIFICATION	// check number of fragments
WITHOUT_CLASSIFICATION	// create a copy of declaration
WITHOUT_CLASSIFICATION	// new declaration will not have fragments until performSplit() is called
WITHOUT_CLASSIFICATION	// set rewritten node to be the original
WITHOUT_CLASSIFICATION	// perform split if there is more than 1 fragment
WITHOUT_CLASSIFICATION	// set javadoc
WITHOUT_CLASSIFICATION	// set initializer
WITHOUT_CLASSIFICATION	// set annotations contents
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// generateColor();
WITHOUT_CLASSIFICATION	// exception.printStackTrace();
WITHOUT_CLASSIFICATION	// container specification group
WITHOUT_CLASSIFICATION	// New Template Container Label
WITHOUT_CLASSIFICATION	// New Template Container Label
WITHOUT_CLASSIFICATION	// New Template Container Entryfield
WITHOUT_CLASSIFICATION	// jetNature.setTemplateContainers(newTemplateContainers);
WITHOUT_CLASSIFICATION	// jetNature.setJavaSourceContainer(newJavaSourceContainer);
WITHOUT_CLASSIFICATION	// will point at the character after 0 to 3 octal digits
WITHOUT_CLASSIFICATION	/*   * @since 2.4   */
WITHOUT_CLASSIFICATION	// the for loop's condition finds the separator 
WITHOUT_CLASSIFICATION	// Assume that we aren't running.
WITHOUT_CLASSIFICATION	// Assume that it's not available.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*     * Javadoc copied from interface.     */
WITHOUT_CLASSIFICATION	/*     * Javadoc copied from interface.     */
WITHOUT_CLASSIFICATION	// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();
WITHOUT_CLASSIFICATION	// System.err.println("Logged throwable: --------------------"); // throwable.printStackTrace();
WITHOUT_CLASSIFICATION	// Trim off the segments corresponding to the package nesting. //
WITHOUT_CLASSIFICATION	// For an archive URI, check for the path in the archive. //
WITHOUT_CLASSIFICATION	// Just print an error message.
WITHOUT_CLASSIFICATION	// Assume the class is not available.
WITHOUT_CLASSIFICATION	// Just return the default.
WITHOUT_CLASSIFICATION	// Ignore the exception and return the original URI.
WITHOUT_CLASSIFICATION	// Continue with the unresolved URI.
WITHOUT_CLASSIFICATION	// Return the original URI.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// If we can open  an input stream, then the path is there, and we have a good URL. //
WITHOUT_CLASSIFICATION	// If we didn't find the path in the usual place nor in the archive... //
WITHOUT_CLASSIFICATION	// Continue processing if the file doesn't exist so that we try create a new empty one.
WITHOUT_CLASSIFICATION	// This is just a marker interface.
WITHOUT_CLASSIFICATION	// This is just a marker interface.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * @deprecated   */
WITHOUT_CLASSIFICATION	/*   * @deprecated   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Create a title bar.
WITHOUT_CLASSIFICATION	// When the pane or any child gains focus, notify the workbench.
WITHOUT_CLASSIFICATION	// Only do this once.
WITHOUT_CLASSIFICATION	// Title.  
WITHOUT_CLASSIFICATION	// Action bar.
WITHOUT_CLASSIFICATION	// System bar.  
WITHOUT_CLASSIFICATION	// Define gradient (blue to widget background color)
WITHOUT_CLASSIFICATION	// colorMap.put(CLR_GRAD_START, clr1);
WITHOUT_CLASSIFICATION	// colorMap.put(CLR_GRAD_START, clr1);
WITHOUT_CLASSIFICATION	// Preload.
WITHOUT_CLASSIFICATION	// Preload.
WITHOUT_CLASSIFICATION	// was the details button pressed?
WITHOUT_CLASSIFICATION	// create OK and Details buttons
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Empty block
WITHOUT_CLASSIFICATION	// Empty block
WITHOUT_CLASSIFICATION	// Empty block
WITHOUT_CLASSIFICATION	// create a composite with standard margins and spacing
WITHOUT_CLASSIFICATION	//Create a label if there are no children to force a smaller layout
WITHOUT_CLASSIFICATION	//If it was not a warning or an diagnostic then return the diagnostic image
WITHOUT_CLASSIFICATION	// Closing the detail area
WITHOUT_CLASSIFICATION	// Opening the detail area
WITHOUT_CLASSIFICATION	//Only one example per wizard
WITHOUT_CLASSIFICATION	// null -> relative URI reference
WITHOUT_CLASSIFICATION	// Applicable only to a hierarchical URI.
WITHOUT_CLASSIFICATION	// empty last segment -> trailing separator
WITHOUT_CLASSIFICATION	// Identifies a file-type absolute URI.
WITHOUT_CLASSIFICATION	// Separators for parsing a URI string.
WITHOUT_CLASSIFICATION	// Characters to use in escaping.
WITHOUT_CLASSIFICATION	// | ucschar | escaped
WITHOUT_CLASSIFICATION	// Static initializer for archiveSchemes.
WITHOUT_CLASSIFICATION	// Returns the lower half bitmask for the given ASCII character.
WITHOUT_CLASSIFICATION	// Returns the upper half bitmask for the given ACSII character.
WITHOUT_CLASSIFICATION	// Debugging method: converts the given long to a string of binary digits.
WITHOUT_CLASSIFICATION	// String-parsing implementation.
WITHOUT_CLASSIFICATION	// && uri.charAt(i) == FRAGMENT_SEPARATOR (implied)
WITHOUT_CLASSIFICATION	// Private constructor for use of platform factory methods.
WITHOUT_CLASSIFICATION	// Private constructor for use of static factory methods.
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(authority);
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(device);
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(query);
WITHOUT_CLASSIFICATION	//iri = iri || containsNonASCII(fragment);
WITHOUT_CLASSIFICATION	//this.iri = iri;
WITHOUT_CLASSIFICATION	//return value == null || validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);
WITHOUT_CLASSIFICATION	// Ignore the exception and return false.
WITHOUT_CLASSIFICATION	//return value != null && validate(value, SEGMENT_CHAR_HI, SEGMENT_CHAR_LO, true, true);
WITHOUT_CLASSIFICATION	//return value == null || validate(value, URIC_HI, URIC_LO, true, true);
WITHOUT_CLASSIFICATION	// <p>A valid fragment may be null or contain any allowed URI characters.
WITHOUT_CLASSIFICATION	// note: hierarchical -> authority != null
WITHOUT_CLASSIFICATION	// note: device != null -> hierarchical
WITHOUT_CLASSIFICATION	// note: absolutePath -> hierarchical
WITHOUT_CLASSIFICATION	// note: query != null -> hierarchical
WITHOUT_CLASSIFICATION	// an absolute URI needs no resolving
WITHOUT_CLASSIFICATION	// note: isRelative() -> hierarchical
WITHOUT_CLASSIFICATION	// no authority: use base's
WITHOUT_CLASSIFICATION	// no device: use base's
WITHOUT_CLASSIFICATION	// else keep device, path, and query
WITHOUT_CLASSIFICATION	// else absolute path: keep it and query
WITHOUT_CLASSIFICATION	// else keep authority, device, path, and query
WITHOUT_CLASSIFICATION	// return a correctly sized result
WITHOUT_CLASSIFICATION	// skip empty segments and self references; push everything else
WITHOUT_CLASSIFICATION	// different scheme: need complete, absolute URI
WITHOUT_CLASSIFICATION	// matching authorities and no device or path removal
WITHOUT_CLASSIFICATION	// matching devices and no path removal
WITHOUT_CLASSIFICATION	// user rejects a relative path: keep absolute or no path
WITHOUT_CLASSIFICATION	// current document reference: keep no path or query
WITHOUT_CLASSIFICATION	// no paths: keep query only
WITHOUT_CLASSIFICATION	// keep query and select relative or absolute path based on length
WITHOUT_CLASSIFICATION	// user demands a relative path or the absolute path is longer
WITHOUT_CLASSIFICATION	// else keep shorter absolute path
WITHOUT_CLASSIFICATION	// treat an empty base path as the root absolute path
WITHOUT_CLASSIFICATION	// drop last segment from base, as in resolving
WITHOUT_CLASSIFICATION	// index of first segment that is different between endPath and startPath
WITHOUT_CLASSIFICATION	// return a correctly sized result
WITHOUT_CLASSIFICATION	// return a correctly sized result
WITHOUT_CLASSIFICATION	// Empty statement.
WITHOUT_CLASSIFICATION	// use a stack to accumulate segments
WITHOUT_CLASSIFICATION	// absolute path or no path -> absolute path
WITHOUT_CLASSIFICATION	// note: segments.length > 0 -> hierarchical
WITHOUT_CLASSIFICATION	// note: segments.length > 0 -> hierarchical
WITHOUT_CLASSIFICATION	// Get what's left of the segments after trimming the prefix.
WITHOUT_CLASSIFICATION	// no validation needed since all components are from existing URIs
WITHOUT_CLASSIFICATION	// Otherwise, the path needs only the remaining segments.
WITHOUT_CLASSIFICATION	// Returns the int value of the given hex digit.
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	/*   * If this is an {@link #isIRI IRI}, converts it to a strict ASCII URI,   * using the procedure described in Section 3.1 of the   * <a href="http://www.w3.org/International/iri-edit/draft-duerst-iri-09.txt">IRI   * Draft RFC</a>.  Otherwise, this URI, itself, is returned.   *   * This unused code is included for possible future use...   */
WITHOUT_CLASSIFICATION	// Continue with the established base URL.
WITHOUT_CLASSIFICATION	// Ignore the exception since we will throw one when all else fails.
WITHOUT_CLASSIFICATION	// We'll rethrow the original exception, not this one.
WITHOUT_CLASSIFICATION	// Ignore this since we will throw an exception when all else fails.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from source.   */
WITHOUT_CLASSIFICATION	// Suppress default constructor for noninstantiability.
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 62 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	/*    * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*    * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	//EParameter
WITHOUT_CLASSIFICATION	// Subclasses may overrride 
WITHOUT_CLASSIFICATION	// WizardContainer variables
WITHOUT_CLASSIFICATION	// Sorting only the genModels
WITHOUT_CLASSIFICATION	//EOperation
WITHOUT_CLASSIFICATION	// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList
WITHOUT_CLASSIFICATION	// This is only at avoid needing an @SuppressWarnings("unchecked") on the EMFObservableList
WITHOUT_CLASSIFICATION	// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	//ETypedElement
WITHOUT_CLASSIFICATION	// ETypeParameter
WITHOUT_CLASSIFICATION	//EDataType
WITHOUT_CLASSIFICATION	//EcoreFactory
WITHOUT_CLASSIFICATION	// EAnnotation
WITHOUT_CLASSIFICATION	// EGenericType
WITHOUT_CLASSIFICATION	//EcorePackage
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Create enums
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	// ListChange
WITHOUT_CLASSIFICATION	// FeatureMapEntry
WITHOUT_CLASSIFICATION	// FeatureChange
WITHOUT_CLASSIFICATION	// ChangeDescription
WITHOUT_CLASSIFICATION	//ChangeFactory
WITHOUT_CLASSIFICATION	//ChangePackage
WITHOUT_CLASSIFICATION	// ResourceChange
WITHOUT_CLASSIFICATION	//ChangePackageImpl
WITHOUT_CLASSIFICATION	//EObjectToChangesMapEntryImpl
WITHOUT_CLASSIFICATION	//ListChangeImpl
WITHOUT_CLASSIFICATION	// cache result
WITHOUT_CLASSIFICATION	// cache result
WITHOUT_CLASSIFICATION	//ResourceChangeImpl
WITHOUT_CLASSIFICATION	// feature is instance of EAttribute
WITHOUT_CLASSIFICATION	// cached already?
WITHOUT_CLASSIFICATION	//FeatureChangeImpl
WITHOUT_CLASSIFICATION	//FeatureChangeImpl
WITHOUT_CLASSIFICATION	// Isolating the new objects
WITHOUT_CLASSIFICATION	// getObjectsToDetachGen() should be changed only if required
WITHOUT_CLASSIFICATION	// caches the list value.
WITHOUT_CLASSIFICATION	//ChangeDescriptionImpl
WITHOUT_CLASSIFICATION	//ChangeFactoryImpl
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Register package validator
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	/*   * @deprecated   */
WITHOUT_CLASSIFICATION	//ChangeSwitch
WITHOUT_CLASSIFICATION	//ChangeAdapterFactory
WITHOUT_CLASSIFICATION	// Make sure that all the old values are cached.
WITHOUT_CLASSIFICATION	//case Notification.REMOVE:
WITHOUT_CLASSIFICATION	//case Notification.REMOVE_MANY:
WITHOUT_CLASSIFICATION	// Continue with no instanceClass. 
WITHOUT_CLASSIFICATION	//EGenericTypeImpl
WITHOUT_CLASSIFICATION	//EParameterImpl
WITHOUT_CLASSIFICATION	// Create data types
WITHOUT_CLASSIFICATION	// Initialize data types
WITHOUT_CLASSIFICATION	//return eContainer;
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	//ETypeParameterImpl
WITHOUT_CLASSIFICATION	//EStringToStringMapEntryImpl
WITHOUT_CLASSIFICATION	// Don't really unset it.
WITHOUT_CLASSIFICATION	// create containment one.
WITHOUT_CLASSIFICATION	//getList(entry).clear();
WITHOUT_CLASSIFICATION	//ETypedElementImpl
WITHOUT_CLASSIFICATION	// Keep trying until all else has failed.
WITHOUT_CLASSIFICATION	// Continue to try a different approach.
WITHOUT_CLASSIFICATION	// Continue to try a different approach.
WITHOUT_CLASSIFICATION	// Keep trying until all else false.
WITHOUT_CLASSIFICATION	//EcoreFactoryImpl
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	/* backward compatibility with old generated overrides */
WITHOUT_CLASSIFICATION	/* backward compatibility with old generated overrides */
WITHOUT_CLASSIFICATION	// Subclasses MUST override this function
WITHOUT_CLASSIFICATION	// return eVirtualIndexBits[offset];
WITHOUT_CLASSIFICATION	// eVirtualIndexBits[offset] = newIndexBits;
WITHOUT_CLASSIFICATION	// Continue to compute the offset.
WITHOUT_CLASSIFICATION	// return eVirtualValues;
WITHOUT_CLASSIFICATION	// eVirtualValues = newValues;
WITHOUT_CLASSIFICATION	// return minimumCapacity;
WITHOUT_CLASSIFICATION	// Ignore exceptions.
WITHOUT_CLASSIFICATION	// Continue and return null.
WITHOUT_CLASSIFICATION	// Ensure that cached ePackage is forgotten.
WITHOUT_CLASSIFICATION	//EAnnotationImpl
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Don't really unset it.
WITHOUT_CLASSIFICATION	// Force this to be initialized as well.
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	// (
WITHOUT_CLASSIFICATION	// We can also optimize single valued reverse.  //
WITHOUT_CLASSIFICATION	// all implementations of Java 1.5 should support AES
WITHOUT_CLASSIFICATION	// generate the key
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Continue and try to close.
WITHOUT_CLASSIFICATION	// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3078 of value (byte) 33 // Fill 156 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 90 of value (byte) -19 // Fill 6 of value (byte) 33 // Fill 22 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// ...
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface.   */
WITHOUT_CLASSIFICATION	// Ignore exceptions.
WITHOUT_CLASSIFICATION	// Ignore exceptions.
WITHOUT_CLASSIFICATION	// encrypt the input
WITHOUT_CLASSIFICATION	// this is the key we will use to encrypt the data 
WITHOUT_CLASSIFICATION	// create the IV for the password generation algorithm
WITHOUT_CLASSIFICATION	// generate the IV for encryption
WITHOUT_CLASSIFICATION	// turn the password into an AES key
WITHOUT_CLASSIFICATION	// now create the encryption cipher 
WITHOUT_CLASSIFICATION	// Read the header of the encrypted file.				
WITHOUT_CLASSIFICATION	// Decrypt the key bytes
WITHOUT_CLASSIFICATION	// Create the key from the key bytes
WITHOUT_CLASSIFICATION	// If we haven't yet generated a key, just use this one
WITHOUT_CLASSIFICATION	// now create the decrypt cipher
WITHOUT_CLASSIFICATION	// Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	// Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	// No methods added.
WITHOUT_CLASSIFICATION	// ECLIPSE-DEPEND-BEGIN
WITHOUT_CLASSIFICATION	// ECLIPSE-DEPEND-BEGIN
WITHOUT_CLASSIFICATION	// ECLIPSE-DEPEND-END
WITHOUT_CLASSIFICATION	// ECLIPSE-DEPEND-END
WITHOUT_CLASSIFICATION	// We can't update any properties via just a URL connection.
WITHOUT_CLASSIFICATION	// Ignore the bound if the value is too big.
WITHOUT_CLASSIFICATION	// Ignore the bound if the value is too big.
WITHOUT_CLASSIFICATION	// Ignore features from the first super type. //
WITHOUT_CLASSIFICATION	// Match against every other operation but this one. //
WITHOUT_CLASSIFICATION	/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// The CipherOutputStream shoudln't close the underlying stream //
WITHOUT_CLASSIFICATION	// List subList(EStructuralFeature feature, int from, int to); // EList list(EStructuralFeature feature);
WITHOUT_CLASSIFICATION	// Ensure that the class loader for this class will be used downstream. //
WITHOUT_CLASSIFICATION	// We do not want to diagnose any errors that have already been diagnosed by a super type. // Although we ignore all the first super's features, there may be mixin classes that still would result in duplicates. //
WITHOUT_CLASSIFICATION	//EcoreSwitch
WITHOUT_CLASSIFICATION	// A document root can have multiple ID attributes because there can be multiple global element or attribute declarations of type ID  // and these will be the ID in the complex types that reference them, // i.e., they aren't really the ID of the document root. //
WITHOUT_CLASSIFICATION	// For performance, skip matching all the features of the first super type. //
WITHOUT_CLASSIFICATION	// Don't bother complaining about things with no name, // since there are constraints for that problem. //
WITHOUT_CLASSIFICATION	// Drop the _ separators and normalize the case. //
WITHOUT_CLASSIFICATION	// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	// Match against every other operation but this one. //
WITHOUT_CLASSIFICATION	// Produce different levels of diagnostic depending whether the names are exactly the same or only matching. //
WITHOUT_CLASSIFICATION	// There is no match if the types are different // and they don't each specify the same non-null instance class name. //
WITHOUT_CLASSIFICATION	// Iterate over all the operations but skip all the operations in the first super. //
WITHOUT_CLASSIFICATION	// We do not want to diagnose any error that have already been diagnosed by a super type. //
WITHOUT_CLASSIFICATION	// Maintain a list of classifiers for looking up conflicts. //
WITHOUT_CLASSIFICATION	// Look for duplicates among the generic super types. //
WITHOUT_CLASSIFICATION	// Ignore it if it isn't a class. Not being a class is diagnosed for the generic type itself. //
WITHOUT_CLASSIFICATION	// The string must contain inappropriate whitespace, so find the index for the first difference. //
WITHOUT_CLASSIFICATION	// Don't complain about the literals if they are the same as the names and the names collide. //
WITHOUT_CLASSIFICATION	// Can't have both a classifier and a type parameter. //
WITHOUT_CLASSIFICATION	// The referencing generic type must be contained to be in scope //
WITHOUT_CLASSIFICATION	// The type parameter must be in scope and must not be a forward reference. //
WITHOUT_CLASSIFICATION	// When used as a generic super type, there must be a classifier that refers to a class. //
WITHOUT_CLASSIFICATION	// The type arguments of a generic super type must not be a wildcard. //
WITHOUT_CLASSIFICATION	// Wildcards are only allowed in type arguments. //
WITHOUT_CLASSIFICATION	// The classifier of an attribute's generic type must be a data type. //
WITHOUT_CLASSIFICATION	// Can't have both an upper and lower bound. //
WITHOUT_CLASSIFICATION	// Can't have a classifier or a type parameter as well as bounds. //
WITHOUT_CLASSIFICATION	// Can only have bounds when used as a type argument. //
WITHOUT_CLASSIFICATION	// Can't have type arguments unless there is a classifier //
WITHOUT_CLASSIFICATION	// Have no arguments when they are allowed is only a warning. //
WITHOUT_CLASSIFICATION	// Incorrect number of type arguments. //
WITHOUT_CLASSIFICATION	// Check if the bound specifies a classifier... //
WITHOUT_CLASSIFICATION	// If the type also specifies a classifier... //
WITHOUT_CLASSIFICATION	// If the are the same then it is bounded properly... //
WITHOUT_CLASSIFICATION	// We test their relationship either via them both being classes... //
WITHOUT_CLASSIFICATION	// namespace context
WITHOUT_CLASSIFICATION	// Determine if there is a bounding generic super type. //
WITHOUT_CLASSIFICATION	// Set up the substitutions of any type parameters this class has with respect to the type arguments for them. //
WITHOUT_CLASSIFICATION	// Test if there are type parameters that might require substitution. //
WITHOUT_CLASSIFICATION	// If none of the generic super types are bounded, then we've failed. //
WITHOUT_CLASSIFICATION	// If neither approach finds a contradiction, we must assume they are okay and then check all the arguments. //
WITHOUT_CLASSIFICATION	// If there is a type parameter, one of its bounds must be bounded by the bound. //
WITHOUT_CLASSIFICATION	// If there is a upper bound, the bound must bound it. //
WITHOUT_CLASSIFICATION	// Failing all those cases, there must be an lower bound that bounds it. //
WITHOUT_CLASSIFICATION	// If the generic type is a wildcard, it can't be bounded by another wildcard. //
WITHOUT_CLASSIFICATION	// If there is an lower bound, the type argument must bound it. //
WITHOUT_CLASSIFICATION	// If the type also specifies a classifier... //
WITHOUT_CLASSIFICATION	// If they are the same classifier, they are of course equal. //
WITHOUT_CLASSIFICATION	// Consider the instance type names they wrap  // to see if they are non-null and equal. //
WITHOUT_CLASSIFICATION	// Consider the instance type names they wrap  // to see if they are non-null and equal. //
WITHOUT_CLASSIFICATION	// I.e., the classifiers are considered equal if they wrap the same non-null type. //
WITHOUT_CLASSIFICATION	// I.e., the classifiers are considered equal if they wrap the same non-null type. //
WITHOUT_CLASSIFICATION	// If the generic type is a different wildcard, it doesn't match. //
WITHOUT_CLASSIFICATION	// Reverse the test. //
WITHOUT_CLASSIFICATION	// If they are the same instance they are equal. //
WITHOUT_CLASSIFICATION	// If one is null (but the other is not) then they are not equal. //
WITHOUT_CLASSIFICATION	// Consider the classifiers in a special way  // to take into account the fact they they often acts as wrappers for instance type names // and that two classifiers that wrap the same instance type name should be considered equal. //
WITHOUT_CLASSIFICATION	// If they both aren't null... //
WITHOUT_CLASSIFICATION	// If one is null (but the other is not) then they can't be equal. //
WITHOUT_CLASSIFICATION	// The arguments, type parameters, lower bounds and upper bounds must be equal type arguments. //
WITHOUT_CLASSIFICATION	// Ignore leading whitespace
WITHOUT_CLASSIFICATION	// Ignore trailing whitespace
WITHOUT_CLASSIFICATION	//EcoreValidator
WITHOUT_CLASSIFICATION	//  Public
WITHOUT_CLASSIFICATION	// --entryCursor;
WITHOUT_CLASSIFICATION	//lastCursor = -1; //prepared = 0;
WITHOUT_CLASSIFICATION	/*    public List subList(int from, int to)    {      return featureMap.subList(getEStructuralFeature(), from, to);    }*/
WITHOUT_CLASSIFICATION	// Don't cache this one as it will cause leaks because to dynamic demand created document roots and demand created EClasses. //
WITHOUT_CLASSIFICATION	// For the extended meta data to be created. //
WITHOUT_CLASSIFICATION	// We can also optimize single valued reverse.  //
WITHOUT_CLASSIFICATION	// This forces the feature ids to be assigned. //
WITHOUT_CLASSIFICATION	// We can use == for EObjects and EnumLiterals. //
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// We can use == for EObjects and EnumLiterals. //
WITHOUT_CLASSIFICATION	// This should be the same as the logic in ResourceImpl.getEObject(String). //
WITHOUT_CLASSIFICATION	//EcoreAdapterFactory
WITHOUT_CLASSIFICATION	// We need to be careful that the proxy may be resolved while we are attaching this adapter. // We need to avoid attaching the adapter during the resolve  // and also attaching it again as we walk the eContents() later. // Checking here avoids having to check during addAdapter. //
WITHOUT_CLASSIFICATION	/*  public List subList(EStructuralFeature feature, int from, int to)  {    return null;  }*/
WITHOUT_CLASSIFICATION	// Validate now since the call we make after will skip validating.
WITHOUT_CLASSIFICATION	// Index should be -1.
WITHOUT_CLASSIFICATION	// Index should be -1.
WITHOUT_CLASSIFICATION	// This may be called directly on an EObject for the case of a containment. //
WITHOUT_CLASSIFICATION	// demandDocumentRoot(ePackage);
WITHOUT_CLASSIFICATION	// For demand created created packages we allow the list of classifiers to grow  // so this should handle those additional instances. //
WITHOUT_CLASSIFICATION	// No new methods.
WITHOUT_CLASSIFICATION	// Undo the preparation for previous and continue.
WITHOUT_CLASSIFICATION	// Undo the preparation for next and continue.
WITHOUT_CLASSIFICATION	// Validate now since the call we make after will skip validating.
WITHOUT_CLASSIFICATION	// Index should be -1.
WITHOUT_CLASSIFICATION	// Index should be -1.
WITHOUT_CLASSIFICATION	// This may be called directly on an EObject for the case of a containment. //
WITHOUT_CLASSIFICATION	/*  List theList = new java.util.ArrayList();  protected List delegateList()  {    return theList;  }*/
WITHOUT_CLASSIFICATION	//   // Suppress default constructor for noninstantiability. //   private EcoreUtil() //   { //   }
WITHOUT_CLASSIFICATION	// Failure to resolve is ignored.
WITHOUT_CLASSIFICATION	// The loop resolves the cross references by visiting them.
WITHOUT_CLASSIFICATION	// We don't create an iterator stack until the root mapping itself has been returned by next once. // After that the stack should be non-empty and the top iterator should yield true for hasNext. //
WITHOUT_CLASSIFICATION	// If we are on the special resource set iterator, and there isn't really a next object at this point... //
WITHOUT_CLASSIFICATION	// Skip the dummy null object and test again. //
WITHOUT_CLASSIFICATION	// {
WITHOUT_CLASSIFICATION	// {
WITHOUT_CLASSIFICATION	// If the first object is null, the second object must be null. //
WITHOUT_CLASSIFICATION	// We know the first object isn't null, so if the second one is, it can't be equal. //
WITHOUT_CLASSIFICATION	// Then eObject2 must be that previous match. //
WITHOUT_CLASSIFICATION	// If eObject2 has been compared already... //
WITHOUT_CLASSIFICATION	// Then eObject1 must be that match. //
WITHOUT_CLASSIFICATION	// Neither eObject1 nor eObject2 have been compared yet.
WITHOUT_CLASSIFICATION	// If eObject1 and eObject2 are the same instance... //
WITHOUT_CLASSIFICATION	// Match them and return true. //
WITHOUT_CLASSIFICATION	// If they don't have the same class, they can't be equal. //
WITHOUT_CLASSIFICATION	// Assume from now on that they match. //
WITHOUT_CLASSIFICATION	// Check all the values. //
WITHOUT_CLASSIFICATION	// If the first value is null, the second value must be null. //
WITHOUT_CLASSIFICATION	// Since the first value isn't null, if the second one is, they aren't equal. //
WITHOUT_CLASSIFICATION	// If this is a feature map... //
WITHOUT_CLASSIFICATION	// The feature maps must be equal. //
WITHOUT_CLASSIFICATION	// The values must be Java equal. //
WITHOUT_CLASSIFICATION	// If they don't have the same size, the feature maps aren't equal. //
WITHOUT_CLASSIFICATION	// Compare entries in order. //
WITHOUT_CLASSIFICATION	// There is no reason they aren't equals. //
WITHOUT_CLASSIFICATION	// If the referenced EObjects aren't equal, the feature maps aren't equal. //
WITHOUT_CLASSIFICATION	// If the values aren't Java equal, the feature maps aren't equal. //
WITHOUT_CLASSIFICATION	// EqualityHelper
WITHOUT_CLASSIFICATION	// If it's a proxy, use that. //
WITHOUT_CLASSIFICATION	// If it is in a resource, form the URI relative to that resource. //
WITHOUT_CLASSIFICATION	// Keys that will be used to record visibility for the accessors. //
WITHOUT_CLASSIFICATION	// Value used to suppress visibility. //
WITHOUT_CLASSIFICATION	// Handle the last byte at the end. //
WITHOUT_CLASSIFICATION	// Generate a 48 bit node identifier;  // This is an alternative to the IEEE 802 host address, which is not available in Java. //
WITHOUT_CLASSIFICATION	// Set the most significant bit of the first octet to 1 so as to distinguish it from IEEE node addresses //
WITHOUT_CLASSIFICATION	// The node identifier is already in network byte order,  // so there is no need to do any byte order reversing. //
WITHOUT_CLASSIFICATION	// clockseq_hi
WITHOUT_CLASSIFICATION	// clockseq_low
WITHOUT_CLASSIFICATION	// The system clock has been rewound so the clock sequence must be incremented  // to ensure that a duplicate UUID is not generated. //
WITHOUT_CLASSIFICATION	// Wait so that the clock can catch up and the time adjustment won't overflow.
WITHOUT_CLASSIFICATION	// We just woke up.
WITHOUT_CLASSIFICATION	// We just woke up.
WITHOUT_CLASSIFICATION	// Place the time into the byte array in network byte order. //
WITHOUT_CLASSIFICATION	// time_low //
WITHOUT_CLASSIFICATION	// time_mid //
WITHOUT_CLASSIFICATION	// time_hi //
WITHOUT_CLASSIFICATION	// Ignore if we can't freeze.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.DOMHelper#getValue(org.w3c.dom.Node)   */
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	//fall through...
WITHOUT_CLASSIFICATION	// Deresolve all the URI against the current base URI. //
WITHOUT_CLASSIFICATION	// System.err.println("add = ["+newString+"]");
WITHOUT_CLASSIFICATION	// If there is a temporary file... //
WITHOUT_CLASSIFICATION	// This is the cheapest and most common case. //
WITHOUT_CLASSIFICATION	// The first case is the most common case. // It is slightly cheaper to call add without an index since an index will be range checked. //  
WITHOUT_CLASSIFICATION	// This case can only happen if we are reset to a mark and we've got lots of XMLNS attributes to write. //
WITHOUT_CLASSIFICATION	// If we can't create one, too bad.
WITHOUT_CLASSIFICATION	// SAXXMIHandler
WITHOUT_CLASSIFICATION	// EMOF.isReadOnly = !Ecore.changeable
WITHOUT_CLASSIFICATION	// Ecore.changeable = !EMOF.isReadOnly
WITHOUT_CLASSIFICATION	// Ignore it if we've already set generic versions of these //
WITHOUT_CLASSIFICATION	// Ignore whatever was set before. //
WITHOUT_CLASSIFICATION	// external schema locations should only be processed once, i.e. in the subsequent parse // there is no need to process those again.
WITHOUT_CLASSIFICATION	// throws SAXException
WITHOUT_CLASSIFICATION	// The entity handler is the best place to resolve and deresolve URIs since it can do it there just once to produce the entity. // So most often the entity handler will be a URI handler as well and when used as a URI handler will be an identity handler. //
WITHOUT_CLASSIFICATION	// // Overwrite DefaultHandler methods //
WITHOUT_CLASSIFICATION	// // Implement LexicalHandler methods //
WITHOUT_CLASSIFICATION	// // Implement DTDHandler methods //
WITHOUT_CLASSIFICATION	// // Implement EntityResolver methods //
WITHOUT_CLASSIFICATION	// And find the one that holds this proxy. //
WITHOUT_CLASSIFICATION	// Try to resolve the proxy locally. //
WITHOUT_CLASSIFICATION	// We won't need to process this again later. //
WITHOUT_CLASSIFICATION	// Compute the holder of the proxy //
WITHOUT_CLASSIFICATION	// If the proxy holder can hold many values, // it may contain a duplicate that resulted when the other end was processed as an IDREF // and hence did both sides of the bidirectional relation. //
WITHOUT_CLASSIFICATION	// Move the resolved object to the right place, remove the proxy, and we're done. //
WITHOUT_CLASSIFICATION	// If the resolved object doesn't contain a reference to the proxy holder as it should. //
WITHOUT_CLASSIFICATION	// The proxy needs to be replaced in a way that updates both ends of the reference. //
WITHOUT_CLASSIFICATION	// We won't need to process this again later.
WITHOUT_CLASSIFICATION	// At least set the references that we were able to resolve, if any. //
WITHOUT_CLASSIFICATION	// Pretend there is an xmlns="" because we really need to ensure that the null prefix  // isn't used to denote something other than the null namespace. //
WITHOUT_CLASSIFICATION	// EATM temporary for debug purposes only. //
WITHOUT_CLASSIFICATION	// check for simple feature
WITHOUT_CLASSIFICATION	// Set up a deferred extent so the document root we create definitely will not be added to the resource. //
WITHOUT_CLASSIFICATION	// Remove the document root's information from the top of the stacks. //
WITHOUT_CLASSIFICATION	// Process the new root object if any. //
WITHOUT_CLASSIFICATION	// There's an EObject on the stack already. //
WITHOUT_CLASSIFICATION	// Excise the new root from the document root. //
WITHOUT_CLASSIFICATION	// handler.ignorableWhitespace(ch, start, length);
WITHOUT_CLASSIFICATION	// Excise the new root from the document root. //
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	// The new root object is the actual new object since all sign of the document root will now have disappeared. //
WITHOUT_CLASSIFICATION	// Ignore a whitespace only text entry at the beginning. //
WITHOUT_CLASSIFICATION	// Handle namespaces
WITHOUT_CLASSIFICATION	// If processSchemaLocations is specified, treat these as XML Schema locations
WITHOUT_CLASSIFICATION	// If externalSchemaLocations are specified, process these ones as well
WITHOUT_CLASSIFICATION	// Ensure that anything can be handled, even if it's not recognized. //
WITHOUT_CLASSIFICATION	// This happens when processing an element with simple content that has elements content even though it shouldn't. //
WITHOUT_CLASSIFICATION	// Try to get a general-content feature. // Use a pattern that's not possible any other way. //
WITHOUT_CLASSIFICATION	// This is for the case for a local unqualified element that has been bound. //
WITHOUT_CLASSIFICATION	// This handles the case of a substitution group. //
WITHOUT_CLASSIFICATION	// This check is redundant -- see handleFeature method (EL)
WITHOUT_CLASSIFICATION	// processing unknown feature with xsi:type (xmi:type)
WITHOUT_CLASSIFICATION	// This only works for old globally registered things.
WITHOUT_CLASSIFICATION	// Ignore it if we can't find it since we'll fail anyway.
WITHOUT_CLASSIFICATION	// Continue with a different approach.
WITHOUT_CLASSIFICATION	// We use null here instead of "" because an attribute without a prefix is considered to have the null target namespace...
WITHOUT_CLASSIFICATION	// Create a proxy in the correct way and pop it. //
WITHOUT_CLASSIFICATION	// Test for a same document reference that would usually be handled as an IDREF. //
WITHOUT_CLASSIFICATION	// EATM Demand create metadata.
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from interface   */
WITHOUT_CLASSIFICATION	// add the key/value pairs to the output string
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ensure that anything can be handled, even if it's not recognized. //
WITHOUT_CLASSIFICATION	// xmlResource.getResourceSet().getResources().addAll(generatedResources);
WITHOUT_CLASSIFICATION	// use the pool to retrieve the parser
WITHOUT_CLASSIFICATION	// use the pool to retrieve the parser
WITHOUT_CLASSIFICATION	// set features and properties
WITHOUT_CLASSIFICATION	// set lexical handler
WITHOUT_CLASSIFICATION	// set lexical handler
WITHOUT_CLASSIFICATION	// release parser back to the pool
WITHOUT_CLASSIFICATION	// release parser back to the pool
WITHOUT_CLASSIFICATION	// Don't read encoding - rely on XML parser to provide one via Locator2
WITHOUT_CLASSIFICATION	// record node's attributes
WITHOUT_CLASSIFICATION	// Include only non-duplicate namespace declarations. //
WITHOUT_CLASSIFICATION	// record namespaces in scope //
WITHOUT_CLASSIFICATION	// traverse element node
WITHOUT_CLASSIFICATION	// class AttributesProxy
WITHOUT_CLASSIFICATION	// XMLLoad
WITHOUT_CLASSIFICATION	// Ignore close since we don't want to let the parser close the stream when it's done.
WITHOUT_CLASSIFICATION	// Ignore since we expect this to fail because of early termination // and if there is some other kind of failure, then we'll simply not be able to match the content type.
WITHOUT_CLASSIFICATION	// handler.skippedEntity(name);
WITHOUT_CLASSIFICATION	// handler.resolveEntity(publicId, systemId);
WITHOUT_CLASSIFICATION	// Skips '-'
WITHOUT_CLASSIFICATION	// We need to be careful that we don't end up requiring the no namespace package  // just because the feature is unqualified. //
WITHOUT_CLASSIFICATION	// handler.notationDecl(name, publicId, systemId);
WITHOUT_CLASSIFICATION	// handler.unparsedEntityDecl(name, publicId, systemId, notationName);
WITHOUT_CLASSIFICATION	// SAXXMLHandler
WITHOUT_CLASSIFICATION	// true if seen xmlns="" declaration
WITHOUT_CLASSIFICATION	// There really must be a package. //
WITHOUT_CLASSIFICATION	// There really must be a package. //
WITHOUT_CLASSIFICATION	// We must have a qualifier for an attribute that needs qualified. //
WITHOUT_CLASSIFICATION	// for any content prefix to URI mapping could be in namespace context
WITHOUT_CLASSIFICATION	// Once we see a lookup of an element in the null namespace, we should behave as if there has been an explicit xmlns="" //
WITHOUT_CLASSIFICATION	// Only if the feature kind is unspecified should we return a match. // Otherwise, we might return an attribute feature when an element is required,  // or vice versa. This also can be controlled by XMLResource.OPTION_LAX_FEATURE_PROCESSING. //
WITHOUT_CLASSIFICATION	// Sort and eliminate duplicates caused by having both a regular package and a demanded package for the same nsURI. //
WITHOUT_CLASSIFICATION	// If we are substituting an EAttribute for an EReference... //
WITHOUT_CLASSIFICATION	// Create an simple any type wrapper for the attribute value and use that with the EReference. //
WITHOUT_CLASSIFICATION	// Make sure that the list will appear to be set to be empty. //
WITHOUT_CLASSIFICATION	// xmlns="" declaration // Example #1: <a><q-name>q</q-name><b xmlns="abc"/></a> // Example #2: <a xmlns="abc"><b xmlns=""/><c xmlns="abc2"/></a> // Example #3: <a xmlns:a="abc"><b xmlns:a="abc2"/></a>
WITHOUT_CLASSIFICATION	// since xmlns="" is default declaration, remove ""->empty_URI mapping
WITHOUT_CLASSIFICATION	// record default ns declaration as duplicate if seen QName (#1) or seen xmlns="" (#2)
WITHOUT_CLASSIFICATION	// record duplicate declaration for a given prefix (#3)
WITHOUT_CLASSIFICATION	// recording a first declaration for a given prefix
WITHOUT_CLASSIFICATION	// extend the array, if necessary
WITHOUT_CLASSIFICATION	// push context
WITHOUT_CLASSIFICATION	// resize array, if needed
WITHOUT_CLASSIFICATION	// bind prefix to uri in current context
WITHOUT_CLASSIFICATION	// find prefix in current context
WITHOUT_CLASSIFICATION	// prefix not found
WITHOUT_CLASSIFICATION	// find uri in current context
WITHOUT_CLASSIFICATION	// uri not found
WITHOUT_CLASSIFICATION	// getDeclaredPrefixAt(int):String
WITHOUT_CLASSIFICATION	/*     *  Convert attribute values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \t to &#x9;     *  \n to &#xA;     *  \r to &#xD;     */
WITHOUT_CLASSIFICATION	// Look for a matching element in the specified packages if there are any. //
WITHOUT_CLASSIFICATION	// Look for a substitution group feature in the feature's containing class' containing package. //
WITHOUT_CLASSIFICATION	// Look for a substitution group feature in the classifier's containing package. //
WITHOUT_CLASSIFICATION	// Look for a substitution group feature in the additional packages. //
WITHOUT_CLASSIFICATION	// Process the super types if that's been specified. //
WITHOUT_CLASSIFICATION	// XMIHandler
WITHOUT_CLASSIFICATION	// xsi:nil // xsi:type // xmlns:xsi // xsi:schemaLocation // xsi:noNamespaceSchemaLocation
WITHOUT_CLASSIFICATION	// set serialization options
WITHOUT_CLASSIFICATION	// If we can't create a temp file then we have to ignore the option.
WITHOUT_CLASSIFICATION	// DOM serialization
WITHOUT_CLASSIFICATION	// caching turned on by the user
WITHOUT_CLASSIFICATION	//no caching
WITHOUT_CLASSIFICATION	// If there is no field, then we can't do this.
WITHOUT_CLASSIFICATION	// Entities aren't supported for DOM.
WITHOUT_CLASSIFICATION	// this is a root element
WITHOUT_CLASSIFICATION	// Process XML attributes
WITHOUT_CLASSIFICATION	// it's intentional to keep going
WITHOUT_CLASSIFICATION	// It's intentional to keep going.
WITHOUT_CLASSIFICATION	// Process XML elements
WITHOUT_CLASSIFICATION	// for performance reasons saveNil and saveElement are not used
WITHOUT_CLASSIFICATION	// value[outputPos];
WITHOUT_CLASSIFICATION	// Every codepoint is supported! 
WITHOUT_CLASSIFICATION	// Produce the supplemental character as an entity
WITHOUT_CLASSIFICATION	// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:
WITHOUT_CLASSIFICATION	// value[outputPos];
WITHOUT_CLASSIFICATION	// Go back and add all the XMLNS stuff. //
WITHOUT_CLASSIFICATION	// First try to see if this package's implementation class has an eInstance. //
WITHOUT_CLASSIFICATION	// Check if it's an anonymous type. //
WITHOUT_CLASSIFICATION	// We only get here if we should do this. //
WITHOUT_CLASSIFICATION	// 2^N // 2^N-1    
WITHOUT_CLASSIFICATION	// Every codepoint is supported! 
WITHOUT_CLASSIFICATION	// Normal (BMP) unicode code point. See if we know for a fact that the encoding supports it:
WITHOUT_CLASSIFICATION	/*     *  Convert element values:     *  & to &amp;     *  < to &lt;     *  " to &quot;     *  \n to line separator     *  \r should be escaped to &xD;     */
WITHOUT_CLASSIFICATION	// We not sure the encoding supports this code point, so we write it as a character entity reference.
WITHOUT_CLASSIFICATION	/*     *  Convert:     *  \n to line separator     */
WITHOUT_CLASSIFICATION	// continue with default processing
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// write doctype
WITHOUT_CLASSIFICATION	// Avoid a function call... //
WITHOUT_CLASSIFICATION	// create dummy documentElement
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// no property
WITHOUT_CLASSIFICATION	// boolean not
WITHOUT_CLASSIFICATION	// ownedProperty???
WITHOUT_CLASSIFICATION	// We will use an xmi:Extension element for these
WITHOUT_CLASSIFICATION	// set parser features and properties
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Register package validator
WITHOUT_CLASSIFICATION	// Register package validator
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Create enums
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize enums and add enum literals
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	// Create data types
WITHOUT_CLASSIFICATION	// Initialize data types
WITHOUT_CLASSIFICATION	// Ensure correct indentation for a top level attribute. // // elementNames.add("mark");
WITHOUT_CLASSIFICATION	// xmi:id // xmi:XMI // xmi:type // xmi:version // xmlns:xmi
WITHOUT_CLASSIFICATION	// no property // no property // no property
WITHOUT_CLASSIFICATION	// no property // no property
WITHOUT_CLASSIFICATION	//  Interpret the body of a nested ownedComment as a comment-type and assign it as the EAnnotation.source of the parent. //
WITHOUT_CLASSIFICATION	// EAnnotations denoting specific EMOF elements are serialized as their EMOF elements.  // Other EAnnotations are serialized as xmi:Extensions. //
WITHOUT_CLASSIFICATION	// register default options
WITHOUT_CLASSIFICATION	/*   * Create an XML processor that is aware of XML Schema specified.   * @param schemaURIs - a URI {@link org.eclipse.common.util.URI} which point to an XML Schema   */
WITHOUT_CLASSIFICATION	// Assume the class isn't available.
WITHOUT_CLASSIFICATION	//XMLNamespaceFactory
WITHOUT_CLASSIFICATION	// DocumentRoot
WITHOUT_CLASSIFICATION	//XMLNamespacePackage
WITHOUT_CLASSIFICATION	//SpaceType
WITHOUT_CLASSIFICATION	// http:///org/eclipse/emf/ecore/util/ExtendedMetaData
WITHOUT_CLASSIFICATION	//XMLNamespacePackageImpl
WITHOUT_CLASSIFICATION	//XMLNamespaceDocumentRootImpl
WITHOUT_CLASSIFICATION	//XMLNamespaceFactoryImpl
WITHOUT_CLASSIFICATION	//XMLNamespaceValidator
WITHOUT_CLASSIFICATION	// AnyType
WITHOUT_CLASSIFICATION	// SimpleAnyType
WITHOUT_CLASSIFICATION	// ProcessingInstructionType
WITHOUT_CLASSIFICATION	//XMLTypeFactory
WITHOUT_CLASSIFICATION	//XMLTypePackage
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	// Create data types
WITHOUT_CLASSIFICATION	// Initialize data types
WITHOUT_CLASSIFICATION	// {
WITHOUT_CLASSIFICATION	// Create annotations // http://www.w3.org/XML/1998/namespace
WITHOUT_CLASSIFICATION	// Don't create anything.
WITHOUT_CLASSIFICATION	//XMLTypePackageImpl
WITHOUT_CLASSIFICATION	//AnyTypeImpl
WITHOUT_CLASSIFICATION	//ProcessingInstructionTypeImpl
WITHOUT_CLASSIFICATION	// do not validate on load. Check validity using Diagnostician.
WITHOUT_CLASSIFICATION	// do not validate on load. Check validity using Diagnostician.
WITHOUT_CLASSIFICATION	//XMLTypeFactoryImpl
WITHOUT_CLASSIFICATION	//DocumentRootImpl
WITHOUT_CLASSIFICATION	//SimpleAnyTypeImpl
WITHOUT_CLASSIFICATION	//System.err.println("Starts at "+index);
WITHOUT_CLASSIFICATION	//System.err.println("Starts at "+index);
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// ================================================================
WITHOUT_CLASSIFICATION	// Skips a white space.
WITHOUT_CLASSIFICATION	// Skips characters between '#' and a line end.
WITHOUT_CLASSIFICATION	// Strips an escaped white space.
WITHOUT_CLASSIFICATION	// Other escaped character.
WITHOUT_CLASSIFICATION	// As is.
WITHOUT_CLASSIFICATION	// ret.next is null.
WITHOUT_CLASSIFICATION	// {n}
WITHOUT_CLASSIFICATION	// X{2,6} -> XX(X(X(XX?)?)?)?
WITHOUT_CLASSIFICATION	// Token.CLOSURE
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: matchEnd="+matchEnd);
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: matchEnd="+matchEnd);
WITHOUT_CLASSIFICATION	/*           * The pattern has only fixed string.           * The engine uses Boyer-Moore.           */
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: fixed-only: "+this.fixedString);
WITHOUT_CLASSIFICATION	/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */
WITHOUT_CLASSIFICATION	/*           * The pattern contains a fixed string.           * The engine checks with Boyer-Moore whether the text contains the fixed string or not.           * If not, it return with false.           */
WITHOUT_CLASSIFICATION	//System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	//System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	//System.err.println("Non-match in fixed-string search.");
WITHOUT_CLASSIFICATION	/*           * Checks whether the expression starts with ".*".           */
WITHOUT_CLASSIFICATION	/*           * Checks whether the expression starts with ".*".           */
WITHOUT_CLASSIFICATION	/*           * Checks whether the expression starts with ".*".           */
WITHOUT_CLASSIFICATION	/*           * Optimization against the first character.           */
WITHOUT_CLASSIFICATION	/*           * Optimization against the first character.           */
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	/*           * Straightforward matching.           */
WITHOUT_CLASSIFICATION	/*           * Straightforward matching.           */
WITHOUT_CLASSIFICATION	// Internal use only. // The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	// Internal use only. // The @ always matches line beginnings.
WITHOUT_CLASSIFICATION	// switch anchor type
WITHOUT_CLASSIFICATION	// switch anchor type
WITHOUT_CLASSIFICATION	// ********
WITHOUT_CLASSIFICATION	// ********
WITHOUT_CLASSIFICATION	/*                       * Saves current position to avoid                       * zero-width repeats.                       */
WITHOUT_CLASSIFICATION	/*                       * Saves current position to avoid                       * zero-width repeats.                       */
WITHOUT_CLASSIFICATION	/*           * Optimization against the first character.           */
WITHOUT_CLASSIFICATION	//System.err.println("DEBUG: with firstchar-matching: "+this.firstChar);
WITHOUT_CLASSIFICATION	/*           * Straightforward matching.           */
WITHOUT_CLASSIFICATION	// switch anchor type
WITHOUT_CLASSIFICATION	// ********
WITHOUT_CLASSIFICATION	/*                       * Saves current position to avoid                       * zero-width repeats.                       */
WITHOUT_CLASSIFICATION	// "w"
WITHOUT_CLASSIFICATION	// Op.CHAR
WITHOUT_CLASSIFICATION	//+this.fixedString
WITHOUT_CLASSIFICATION	// This pattern has a fixed string of which length is more than one.
WITHOUT_CLASSIFICATION	// Cf // Mn // Mc
WITHOUT_CLASSIFICATION	// "u"
WITHOUT_CLASSIFICATION	/*    public ParseException(String mes) {        this(mes, -1);    }    */
WITHOUT_CLASSIFICATION	// L // L // L // L // L // N // N // N // Mc
WITHOUT_CLASSIFICATION	// Single character // [a-zA-Z] // [^a-zA-Z] // ^ $ ... // literal String  // X* // X*? // X? // X?? // X|Y // ( and ) // \1 \2 ... // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(..)yes|no)
WITHOUT_CLASSIFICATION	// Legacy word characters
WITHOUT_CLASSIFICATION	// for UNION
WITHOUT_CLASSIFICATION	//System.err.println("Creates UnionOp");
WITHOUT_CLASSIFICATION	// ModifierOp
WITHOUT_CLASSIFICATION	// for CLOSURE, QUESTION
WITHOUT_CLASSIFICATION	// for UNIoN
WITHOUT_CLASSIFICATION	// STRING
WITHOUT_CLASSIFICATION	// RANGE, NRANGE
WITHOUT_CLASSIFICATION	//case 0x0b:  ret = "\\v";  break;
WITHOUT_CLASSIFICATION	// for RANGE or NRANGE
WITHOUT_CLASSIFICATION	//System.err.println("Token#addRange(): "+start+" "+end);
WITHOUT_CLASSIFICATION	//System.err.println("Do sorting: "+this.ranges.length);
WITHOUT_CLASSIFICATION	// Index of writing point // Index of processing point
WITHOUT_CLASSIFICATION	//System.err.println("Token#substractRanges(): Entry: "+this.ranges.length+", "+tok.ranges.length);
WITHOUT_CLASSIFICATION	// Not overlapped // src: o-----o // sub:         o-----o // res: o-----o // Reuse sub
WITHOUT_CLASSIFICATION	// src:    o--------o // sub:  o------------o // res: empty // Reuse sub
WITHOUT_CLASSIFICATION	// src:    o--------o // sub:  o----o // res:       o-----o // Reuse src(=res)
WITHOUT_CLASSIFICATION	// src:    o--------o // sub:          o----o // res:    o-----o // Reuse sub
WITHOUT_CLASSIFICATION	// Not overlapped // src:          o-----o // sub: o----o
WITHOUT_CLASSIFICATION	// this.ranges is sorted and compacted.
WITHOUT_CLASSIFICATION	// Not overlapped // src1: o-----o // src2:         o-----o // res:  empty // Reuse src2
WITHOUT_CLASSIFICATION	// Overlapped // src1:    o--------o // src2:  o----o // src2:      o----o // src2:          o----o // src2:  o------------o
WITHOUT_CLASSIFICATION	// src1:    o--------o // src2:  o------------o // res:     o--------o // Reuse src2
WITHOUT_CLASSIFICATION	// src1:    o--------o // src2:  o----o // res:     o--o // Reuse the rest of src1
WITHOUT_CLASSIFICATION	// src1:    o--------o // src2:      o----o // res:       o----o // Reuse the rest of src1
WITHOUT_CLASSIFICATION	// Not overlapped // src1:          o-----o // src2: o----o
WITHOUT_CLASSIFICATION	// 32 is the number of bits in `int'.
WITHOUT_CLASSIFICATION	// s&0x1f : 0-31
WITHOUT_CLASSIFICATION	// '|' // '*' // '+' // '?' // '(' // ')' // '.' // '[' // '\' // '^' // '$' // '(?:' // '(?=' // '(?!' // '(?<=' // '(?<!' // '(?>' // '(?[' // '[:' in a character class // '(?#' // '(?' [\-,a-z,A-Z] // '(?(' // '-[' in a character class
WITHOUT_CLASSIFICATION	//this.setLocale(Locale.getDefault());
WITHOUT_CLASSIFICATION	//this.setLocale(locale);
WITHOUT_CLASSIFICATION	// In a character class, this.chardata has one character, that is to say, // a pair of surrogates is composed and stored to this.chardata.
WITHOUT_CLASSIFICATION	// Through down
WITHOUT_CLASSIFICATION	// Options
WITHOUT_CLASSIFICATION	// conditional // this.offsets points the next of '('.
WITHOUT_CLASSIFICATION	// '|'
WITHOUT_CLASSIFICATION	//tok = Token.createConcat(tok, this.parseFactor());
WITHOUT_CLASSIFICATION	// ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	// ----------------------------------------------------------------
WITHOUT_CLASSIFICATION	// ')'
WITHOUT_CLASSIFICATION	// ')'
WITHOUT_CLASSIFICATION	// ')'
WITHOUT_CLASSIFICATION	// X+ -> XX*
WITHOUT_CLASSIFICATION	// X? -> X|
WITHOUT_CLASSIFICATION	// Skips ')'
WITHOUT_CLASSIFICATION	// Skips ')'
WITHOUT_CLASSIFICATION	// this.offset points the next of '('
WITHOUT_CLASSIFICATION	// Parses a condition.
WITHOUT_CLASSIFICATION	// Points '('.
WITHOUT_CLASSIFICATION	// Parses yes/no-patterns.
WITHOUT_CLASSIFICATION	// this.offset points the next of '?'. // modifiers ::= [imsw]* ('-' [imsw]*)? ':'
WITHOUT_CLASSIFICATION	// '-' or ':'?
WITHOUT_CLASSIFICATION	// ':'?
WITHOUT_CLASSIFICATION	// such as (?-i)
WITHOUT_CLASSIFICATION	// Must be in 0x0040-0x005f
WITHOUT_CLASSIFICATION	// through down
WITHOUT_CLASSIFICATION	// this.offset -> next of '{'
WITHOUT_CLASSIFICATION	// {min,max}
WITHOUT_CLASSIFICATION	// assume {min,}
WITHOUT_CLASSIFICATION	//System.err.println("CLOSURE: "+min+", "+max);
WITHOUT_CLASSIFICATION	// '(?:' // '(?(' // (?modifiers ... )
WITHOUT_CLASSIFICATION	// Skips '.'
WITHOUT_CLASSIFICATION	// handle category escape
WITHOUT_CLASSIFICATION	// '['
WITHOUT_CLASSIFICATION	// '^'
WITHOUT_CLASSIFICATION	// Literal char // . // XY // X|Y|Z // X* // [a-zA-Z] etc. // [^a-zA-Z] etc. // (X) or (?:X) // // ^ $ \b \B \< \> \A \Z \z // *? +? // strings // back references // (?=...) // (?!...) // (?<=...) // (?<!...) // (?>...) // (?ims-ims:...) // (?(...)yes|no)
WITHOUT_CLASSIFICATION	// if not shorthands... // Here is no '-'.
WITHOUT_CLASSIFICATION	//tok.dumpRanges();
WITHOUT_CLASSIFICATION	// *** It is not a bug.
WITHOUT_CLASSIFICATION	// for CLOSURE
WITHOUT_CLASSIFICATION	// for CLOSURE
WITHOUT_CLASSIFICATION	// for CLOSURE
WITHOUT_CLASSIFICATION	// for STRING
WITHOUT_CLASSIFICATION	// for STRING
WITHOUT_CLASSIFICATION	// *******
WITHOUT_CLASSIFICATION	// ***** Really?
WITHOUT_CLASSIFICATION	// ***** Really?
WITHOUT_CLASSIFICATION	// infinity
WITHOUT_CLASSIFICATION	// When this.child.getMaxLength() < 0, // this returns minus value
WITHOUT_CLASSIFICATION	// ******
WITHOUT_CLASSIFICATION	/*               *  a|b|c -> FC_TERMINAL               *  a|.|c -> FC_ANY               *  a|b|  -> FC_CONTINUE               */
WITHOUT_CLASSIFICATION	// ****
WITHOUT_CLASSIFICATION	// **** We can not optimize.
WITHOUT_CLASSIFICATION	// **** We can not optimize.
WITHOUT_CLASSIFICATION	// ------------------------------------------------------
WITHOUT_CLASSIFICATION	//blockNames in UNICODE 3.1 that supported by XML Schema REC             
WITHOUT_CLASSIFICATION	/*0000..007F;*/
WITHOUT_CLASSIFICATION	/*0080..00FF;*/
WITHOUT_CLASSIFICATION	/*0100..017F;*/
WITHOUT_CLASSIFICATION	/*0180..024F;*/
WITHOUT_CLASSIFICATION	/*0250..02AF;*/
WITHOUT_CLASSIFICATION	/*02B0..02FF;*/
WITHOUT_CLASSIFICATION	/*0300..036F;*/
WITHOUT_CLASSIFICATION	/*0370..03FF;*/
WITHOUT_CLASSIFICATION	/*0400..04FF;*/
WITHOUT_CLASSIFICATION	/*0530..058F;*/
WITHOUT_CLASSIFICATION	/*0600..06FF;*/
WITHOUT_CLASSIFICATION	/*0700..074F;*/
WITHOUT_CLASSIFICATION	/*0780..07BF;*/
WITHOUT_CLASSIFICATION	/*0900..097F;*/
WITHOUT_CLASSIFICATION	/*0980..09FF;*/
WITHOUT_CLASSIFICATION	/*0A80..0AFF;*/
WITHOUT_CLASSIFICATION	/*0B00..0B7F;*/
WITHOUT_CLASSIFICATION	/*0B80..0BFF;*/
WITHOUT_CLASSIFICATION	/*0C00..0C7F;*/
WITHOUT_CLASSIFICATION	/*0C80..0CFF;*/
WITHOUT_CLASSIFICATION	/*0D80..0DFF;*/
WITHOUT_CLASSIFICATION	/*0E00..0E7F;*/
WITHOUT_CLASSIFICATION	/*0E80..0EFF;*/
WITHOUT_CLASSIFICATION	/*0F00..0FFF;*/
WITHOUT_CLASSIFICATION	/*1000..109F;*/
WITHOUT_CLASSIFICATION	/*1100..11FF;*/
WITHOUT_CLASSIFICATION	/*1200..137F;*/
WITHOUT_CLASSIFICATION	/*13A0..13FF;*/
WITHOUT_CLASSIFICATION	/*1400..167F;*/
WITHOUT_CLASSIFICATION	/*1680..169F;*/
WITHOUT_CLASSIFICATION	/*1780..17FF;*/
WITHOUT_CLASSIFICATION	/*1800..18AF;*/
WITHOUT_CLASSIFICATION	/*1E00..1EFF;*/
WITHOUT_CLASSIFICATION	/*1F00..1FFF;*/
WITHOUT_CLASSIFICATION	/*2070..209F;*/
WITHOUT_CLASSIFICATION	/*20A0..20CF;*/
WITHOUT_CLASSIFICATION	/*20D0..20FF;*/
WITHOUT_CLASSIFICATION	/*2100..214F;*/
WITHOUT_CLASSIFICATION	/*2150..218F;*/
WITHOUT_CLASSIFICATION	/*2200..22FF;*/
WITHOUT_CLASSIFICATION	/*2300..23FF;*/
WITHOUT_CLASSIFICATION	/*2400..243F;*/
WITHOUT_CLASSIFICATION	/*2440..245F;*/
WITHOUT_CLASSIFICATION	/*2460..24FF;*/
WITHOUT_CLASSIFICATION	/*2580..259F;*/
WITHOUT_CLASSIFICATION	/*25A0..25FF;*/
WITHOUT_CLASSIFICATION	/*2600..26FF;*/
WITHOUT_CLASSIFICATION	/*2700..27BF;*/
WITHOUT_CLASSIFICATION	/*2800..28FF;*/
WITHOUT_CLASSIFICATION	/*2E80..2EFF;*/
WITHOUT_CLASSIFICATION	/*2F00..2FDF;*/
WITHOUT_CLASSIFICATION	/*3000..303F;*/
WITHOUT_CLASSIFICATION	/*3040..309F;*/
WITHOUT_CLASSIFICATION	/*30A0..30FF;*/
WITHOUT_CLASSIFICATION	/*3100..312F;*/
WITHOUT_CLASSIFICATION	/*3130..318F;*/
WITHOUT_CLASSIFICATION	/*31A0..31BF;*/
WITHOUT_CLASSIFICATION	/*3200..32FF;*/
WITHOUT_CLASSIFICATION	/*3300..33FF;*/
WITHOUT_CLASSIFICATION	/*3400..4DB5;*/
WITHOUT_CLASSIFICATION	/*4E00..9FFF;*/
WITHOUT_CLASSIFICATION	/*A490..A4CF;*/
WITHOUT_CLASSIFICATION	/*AC00..D7A3;*/
WITHOUT_CLASSIFICATION	/*E000..F8FF;*/
WITHOUT_CLASSIFICATION	/*F900..FAFF;*/
WITHOUT_CLASSIFICATION	/*FB00..FB4F;*/
WITHOUT_CLASSIFICATION	/*FE20..FE2F;*/
WITHOUT_CLASSIFICATION	/*FE30..FE4F;*/
WITHOUT_CLASSIFICATION	/*FE50..FE6F;*/
WITHOUT_CLASSIFICATION	/*FE70..FEFE;*/
WITHOUT_CLASSIFICATION	/*FEFF..FEFF;*/
WITHOUT_CLASSIFICATION	/*10300..1032F;*/
WITHOUT_CLASSIFICATION	/*10330..1034F;*/
WITHOUT_CLASSIFICATION	/*10400..1044F;*/
WITHOUT_CLASSIFICATION	/*1D000..1D0FF;*/
WITHOUT_CLASSIFICATION	/*1D100..1D1FF;*/
WITHOUT_CLASSIFICATION	/*20000..2A6D6;*/
WITHOUT_CLASSIFICATION	/*2F800..2FA1F;*/
WITHOUT_CLASSIFICATION	/*E0000..E007F;*/
WITHOUT_CLASSIFICATION	//missing 2 private use add manually
WITHOUT_CLASSIFICATION	// 84
WITHOUT_CLASSIFICATION	//build table of Pi values
WITHOUT_CLASSIFICATION	//build table of Pf values
WITHOUT_CLASSIFICATION	// for all characters
WITHOUT_CLASSIFICATION	// Unassigned
WITHOUT_CLASSIFICATION	// TR#18 1.2
WITHOUT_CLASSIFICATION	// Z
WITHOUT_CLASSIFICATION	// Lu Ll Lo Nd
WITHOUT_CLASSIFICATION	// Perl extension
WITHOUT_CLASSIFICATION	//this.setLocale(locale);
WITHOUT_CLASSIFICATION	// X+ -> XX*
WITHOUT_CLASSIFICATION	// X? -> X|
WITHOUT_CLASSIFICATION	// Skips ')'
WITHOUT_CLASSIFICATION	// '['
WITHOUT_CLASSIFICATION	// '^'
WITHOUT_CLASSIFICATION	// Skips ']'
WITHOUT_CLASSIFICATION	// for STRING
WITHOUT_CLASSIFICATION	// ------------------------------------------------------
WITHOUT_CLASSIFICATION	// \pM* // \PM + \pM*
WITHOUT_CLASSIFICATION	// Lu // Ll // Lo
WITHOUT_CLASSIFICATION	// Lu Ll Lo // Nd
WITHOUT_CLASSIFICATION	// synchronized // if null
WITHOUT_CLASSIFICATION	//DEBUG //System.err.println("isRegisterNonXS: "+name);
WITHOUT_CLASSIFICATION	// [{ASSIGNED}]-[{M},{C}]
WITHOUT_CLASSIFICATION	// hangul_medial and hangul_final // extras
WITHOUT_CLASSIFICATION	// base_char?
WITHOUT_CLASSIFICATION	//case 0x0b:  ret = "\\v";  break;
WITHOUT_CLASSIFICATION	// This is CONCAT, and new child is CONCAT.
WITHOUT_CLASSIFICATION	// Recursion
WITHOUT_CLASSIFICATION	//System.err.println("Merge '"+previous+"' and '"+tok+"'.");
WITHOUT_CLASSIFICATION	// Replace previous token by STRING
WITHOUT_CLASSIFICATION	// Subraction
WITHOUT_CLASSIFICATION	// Exit this loop
WITHOUT_CLASSIFICATION	// if not shorthands...
WITHOUT_CLASSIFICATION	// Here is no '-'.
WITHOUT_CLASSIFICATION	// c '-' ']' -> '-' is a single-range.
WITHOUT_CLASSIFICATION	// if - is at the last position of the group
WITHOUT_CLASSIFICATION	// LINE FEED U+000A
WITHOUT_CLASSIFICATION	// CRRIAGE RETURN U+000D
WITHOUT_CLASSIFICATION	// HORIZONTAL TABULATION U+0009
WITHOUT_CLASSIFICATION	// return actucal char
WITHOUT_CLASSIFICATION	// \ + c // backsolidus
WITHOUT_CLASSIFICATION	// Found '-' // Is this '-' is a from-to token?? // Skips '-'
WITHOUT_CLASSIFICATION	// getIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	// This implementation was changed to not introduce multi line content.
WITHOUT_CLASSIFICATION	// form integral number of 6-bit groups
WITHOUT_CLASSIFICATION	//encodedData[encodedIndex] = 0xa;
WITHOUT_CLASSIFICATION	// remove white spaces
WITHOUT_CLASSIFICATION	//should be divisible by four
WITHOUT_CLASSIFICATION	//if found "no data" just return null
WITHOUT_CLASSIFICATION	//if found "no data" just return null
WITHOUT_CLASSIFICATION	//Check if they are PAD characters //Two PAD e.g. 3c[Pad][Pad] //last 4 bits should be zero
WITHOUT_CLASSIFICATION	//One PAD  e.g. 3cQ[Pad]
WITHOUT_CLASSIFICATION	//last 2 bits should be zero
WITHOUT_CLASSIFICATION	//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data
WITHOUT_CLASSIFICATION	//No PAD e.g 3cQl
WITHOUT_CLASSIFICATION	// count characters that's not whitespace
WITHOUT_CLASSIFICATION	/* * format validation * * This class encodes/decodes hexadecimal data * @author Jeffrey Rodriguez */
WITHOUT_CLASSIFICATION	// add IANA to Java encoding mappings.
WITHOUT_CLASSIFICATION	// proposed addition (see above for details):
WITHOUT_CLASSIFICATION	// Add support for Cp1252 and its friends
WITHOUT_CLASSIFICATION	// <clinit>()
WITHOUT_CLASSIFICATION	// added since this encoding only differs w.r.t. presentation 
WITHOUT_CLASSIFICATION	// removeIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	// putIANA2JavaMapping(String,String)
WITHOUT_CLASSIFICATION	// putJava2IANAMapping(String,String)
WITHOUT_CLASSIFICATION	// getJava2IANAMapping(String):String
WITHOUT_CLASSIFICATION	// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html
WITHOUT_CLASSIFICATION	// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?
WITHOUT_CLASSIFICATION	// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?
WITHOUT_CLASSIFICATION	// // Public static methods //
WITHOUT_CLASSIFICATION	// removeJava2IANAMapping
WITHOUT_CLASSIFICATION	// class EncodingMap
WITHOUT_CLASSIFICATION	//RFC 2732 added '[' and ']' as reserved characters
WITHOUT_CLASSIFICATION	// Add ASCII Digits and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	// Add ASCII Letters and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	// Add ASCII Letters
WITHOUT_CLASSIFICATION	// Add Reserved Characters
WITHOUT_CLASSIFICATION	// Add Mark Characters
WITHOUT_CLASSIFICATION	// Add Scheme Characters
WITHOUT_CLASSIFICATION	// Add Path Characters
WITHOUT_CLASSIFICATION	// Just use null.
WITHOUT_CLASSIFICATION	// just make a copy of the base if spec is empty
WITHOUT_CLASSIFICATION	// search backwards starting from character before ':'.
WITHOUT_CLASSIFICATION	// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.
WITHOUT_CLASSIFICATION	// Authority will be everything up to path, query or fragment
WITHOUT_CLASSIFICATION	// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.
WITHOUT_CLASSIFICATION	// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications
WITHOUT_CLASSIFICATION	// check for absolute path - RFC 2396 5.2 #5
WITHOUT_CLASSIFICATION	// 6a - get all but the last segment of the base URI path
WITHOUT_CLASSIFICATION	// check for scheme - RFC 2396 5.2 #3 // if we found a scheme, it means absolute URI, so we're done
WITHOUT_CLASSIFICATION	// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done
WITHOUT_CLASSIFICATION	// if we get to this point, we need to resolve relative path // RFC 2396 5.2 #6
WITHOUT_CLASSIFICATION	// 6b - append the relative URI path
WITHOUT_CLASSIFICATION	// 6c - remove all "./" where "." is a complete path segment
WITHOUT_CLASSIFICATION	// 6d - remove "." if path ends with "." as a complete path segment
WITHOUT_CLASSIFICATION	// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment
WITHOUT_CLASSIFICATION	// userinfo is everything up to @
WITHOUT_CLASSIFICATION	// host is everything up to last ':', or up to  // and including ']' if followed by ':'.
WITHOUT_CLASSIFICATION	// port
WITHOUT_CLASSIFICATION	// Check if the host is well formed.
WITHOUT_CLASSIFICATION	// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.
WITHOUT_CLASSIFICATION	// Check that userinfo is well formed if it exists.
WITHOUT_CLASSIFICATION	// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// can check against path characters because the set // is the same except for '/' which we've already excluded.
WITHOUT_CLASSIFICATION	// path - everything up to query string or fragment
WITHOUT_CLASSIFICATION	// RFC 2732 only allows '[' and ']' to appear in the opaque part.
WITHOUT_CLASSIFICATION	// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]
WITHOUT_CLASSIFICATION	// Path segments cannot contain '[' or ']' since pchar // production was not changed by RFC 2732.
WITHOUT_CLASSIFICATION	// Scan opaque part. // opaque_part = uric_no_slash *uric
WITHOUT_CLASSIFICATION	// query - starts with ? and up to fragment or end
WITHOUT_CLASSIFICATION	// fragment - starts with #
WITHOUT_CLASSIFICATION	// Server based authority.
WITHOUT_CLASSIFICATION	// the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// Registry based authority.
WITHOUT_CLASSIFICATION	// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )
WITHOUT_CLASSIFICATION	// presence of the host (whether valid or empty) means // double-slashes which means generic uri
WITHOUT_CLASSIFICATION	// Check if the host is a valid IPv6reference.
WITHOUT_CLASSIFICATION	// Cannot start with a '.', '-', or end with a '-'.
WITHOUT_CLASSIFICATION	// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2
WITHOUT_CLASSIFICATION	// hostname      = *( domainlabel "." ) toplabel [ "." ] // domainlabel   = alphanum | alphanum *( alphanum | "-" ) alphanum // toplabel      = alpha | alpha *( alphanum | "-" ) alphanum
WITHOUT_CLASSIFICATION	// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.
WITHOUT_CLASSIFICATION	// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric
WITHOUT_CLASSIFICATION	// RFC 1034: Labels must be 63 characters or less.
WITHOUT_CLASSIFICATION	// Check that that there are no more than three digits // in this segment.
WITHOUT_CLASSIFICATION	// Check that this segment is not greater than 255.
WITHOUT_CLASSIFICATION	// Check if string is a potential match for IPv6reference.
WITHOUT_CLASSIFICATION	// Counter for the number of 16-bit sections read in the address.
WITHOUT_CLASSIFICATION	// Scan hex sequence before possible '::' or IPv4 address.
WITHOUT_CLASSIFICATION	// Address must contain 128-bits of information.
WITHOUT_CLASSIFICATION	// '::' represents at least one 16-bit group of zeros.
WITHOUT_CLASSIFICATION	// Trailing zeros will fill out the rest of the address.
WITHOUT_CLASSIFICATION	// If the second character wasn't ':', in order to be valid, // the remainder of the string must match IPv4Address,  // and we must have read exactly 6 16-bit groups.
WITHOUT_CLASSIFICATION	// 3. Scan hex sequence after '::'.
WITHOUT_CLASSIFICATION	// We've either reached the end of the string, the address ends in // an IPv4 address, or it is invalid. scanHexSequence has already  // made sure that we have the right number of bits. 
WITHOUT_CLASSIFICATION	// IPv6 addresses are 128-bit, so there can be at most eight sections.
WITHOUT_CLASSIFICATION	// This could be '::'.
WITHOUT_CLASSIFICATION	// There can be at most 4 hex digits per group.
WITHOUT_CLASSIFICATION	// which ASCII characters need to be escaped
WITHOUT_CLASSIFICATION	// // Static initialization //
WITHOUT_CLASSIFICATION	// we saw some non-ascii character
WITHOUT_CLASSIFICATION	// for each byte
WITHOUT_CLASSIFICATION	// for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// isValidName(String):boolean
WITHOUT_CLASSIFICATION	// // XML Schema anyURI specific information //
WITHOUT_CLASSIFICATION	// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).
WITHOUT_CLASSIFICATION	// for each character in the anyURI
WITHOUT_CLASSIFICATION	// If encoding happened, create a new string; // otherwise, return the orginal one.
WITHOUT_CLASSIFICATION	// // Constants //
WITHOUT_CLASSIFICATION	// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 49
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -71
WITHOUT_CLASSIFICATION	// Fill 26 of value (byte) -3 // Fill 60 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 31 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 20 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 44 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 66 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 36 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 17 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 11 of value (byte) 33 // Fill 27 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 46 of value (byte) 33 // Fill 26 of value (byte) -19 // Fill 5 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 16 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 10 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) 33 // Fill 9 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 230 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 10 of value (byte) 33 // Fill 39 of value (byte) -19 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 68 of value (byte) 33
WITHOUT_CLASSIFICATION	// // Public static methods //
WITHOUT_CLASSIFICATION	// Fill 31 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 13 of value (byte) -19 // Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19
WITHOUT_CLASSIFICATION	// isValid(int):boolean
WITHOUT_CLASSIFICATION	// isInvalid(int):boolean
WITHOUT_CLASSIFICATION	// isContent(int):boolean
WITHOUT_CLASSIFICATION	// isMarkup(int):boolean
WITHOUT_CLASSIFICATION	// isSpace(int):boolean
WITHOUT_CLASSIFICATION	// isNameStart(int):boolean
WITHOUT_CLASSIFICATION	// isName(int):boolean
WITHOUT_CLASSIFICATION	// isNCNameStart(int):boolean
WITHOUT_CLASSIFICATION	// isNCName(int):boolean
WITHOUT_CLASSIFICATION	// isPubid(int):boolean
WITHOUT_CLASSIFICATION	/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */
WITHOUT_CLASSIFICATION	// isValidName(String):boolean
WITHOUT_CLASSIFICATION	/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */
WITHOUT_CLASSIFICATION	// isValidNCName(String):boolean
WITHOUT_CLASSIFICATION	/*      * [7] Nmtoken ::= (NameChar)+      */
WITHOUT_CLASSIFICATION	// encodings
WITHOUT_CLASSIFICATION	// isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	// class XMLChar
WITHOUT_CLASSIFICATION	//order constants
WITHOUT_CLASSIFICATION	// check whether the character is in the range 0x30 ~ 0x39
WITHOUT_CLASSIFICATION	// interface TypeValidator
WITHOUT_CLASSIFICATION	// This implementation was changed to not introduce multi line content.
WITHOUT_CLASSIFICATION	// form integral number of 6-bit groups
WITHOUT_CLASSIFICATION	//encodedData[encodedIndex] = 0xa;
WITHOUT_CLASSIFICATION	// remove white spaces
WITHOUT_CLASSIFICATION	//should be divisible by four
WITHOUT_CLASSIFICATION	//if found "no data" just return null
WITHOUT_CLASSIFICATION	//One PAD  e.g. 3cQ[Pad]
WITHOUT_CLASSIFICATION	//last 2 bits should be zero
WITHOUT_CLASSIFICATION	//an error  like "3c[Pad]r", "3cdX", "3cXd", "3cXX" where X is non data
WITHOUT_CLASSIFICATION	//No PAD e.g 3cQl
WITHOUT_CLASSIFICATION	// count characters that's not whitespace
WITHOUT_CLASSIFICATION	// // Data //
WITHOUT_CLASSIFICATION	// // Static initialization //
WITHOUT_CLASSIFICATION	// Add support for Cp1252 and its friends
WITHOUT_CLASSIFICATION	// added since this encoding only differs w.r.t. presentation 
WITHOUT_CLASSIFICATION	// Adding new aliases as proposed in // http://lists.w3.org/Archives/Public/ietf-charset/2002JulSep/0058.html
WITHOUT_CLASSIFICATION	// REVISIT: //   j:CNS11643 -> EUC-TW? //   ISO-2022-CN? ISO-2022-CN-EXT?
WITHOUT_CLASSIFICATION	// add Java to IANA encoding mappings //fJava2IANAMap.put("8859_1",    "US-ASCII"); // ?
WITHOUT_CLASSIFICATION	// proposed addition (see above for details):
WITHOUT_CLASSIFICATION	// <clinit>()
WITHOUT_CLASSIFICATION	// // Public static methods //
WITHOUT_CLASSIFICATION	// putIANA2JavaMapping(String,String)
WITHOUT_CLASSIFICATION	// getIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	// removeIANA2JavaMapping(String):String
WITHOUT_CLASSIFICATION	//RFC 2732 added '[' and ']' as reserved characters
WITHOUT_CLASSIFICATION	// Add ASCII Digits and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	// Add ASCII Letters and ASCII Hex Numbers
WITHOUT_CLASSIFICATION	// isValidName(String):boolean
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33
WITHOUT_CLASSIFICATION	// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1
WITHOUT_CLASSIFICATION	// Add Reserved Characters
WITHOUT_CLASSIFICATION	// Add Scheme Characters
WITHOUT_CLASSIFICATION	// Add Userinfo Characters
WITHOUT_CLASSIFICATION	// Add Path Characters
WITHOUT_CLASSIFICATION	// Just use null.
WITHOUT_CLASSIFICATION	// search backwards starting from character before ':'.
WITHOUT_CLASSIFICATION	// A standalone base is a valid URI according to spec
WITHOUT_CLASSIFICATION	// Neither 'scheme:' or 'scheme:#fragment' are valid URIs.
WITHOUT_CLASSIFICATION	// Authority will be everything up to path, query or fragment
WITHOUT_CLASSIFICATION	// Attempt to parse authority. If the section is an empty string // this is a valid server based authority, so set the host to this // value.
WITHOUT_CLASSIFICATION	// If we didn't find authority we need to back up. Attempt to // match against abs_path next.
WITHOUT_CLASSIFICATION	// Resolve relative URI to base URI - see RFC 2396 Section 5.2 // In some cases, it might make more sense to throw an exception // (when scheme is specified is the string spec and the base URI // is also specified, for example), but we're just following the // RFC specifications
WITHOUT_CLASSIFICATION	// check to see if this is the current doc - RFC 2396 5.2 #2 // note that this is slightly different from the RFC spec in that // we don't include the check for query string being null // - this handles cases where the urispec is just a query // string or a fragment (e.g. "?y" or "#s") - // see <http://www.ics.uci.edu/~fielding/url/test1.html> which // identified this as a bug in the RFC
WITHOUT_CLASSIFICATION	// check for authority - RFC 2396 5.2 #4 // if we found a host, then we've got a network path, so we're done
WITHOUT_CLASSIFICATION	// check for absolute path - RFC 2396 5.2 #5
WITHOUT_CLASSIFICATION	// 6a - get all but the last segment of the base URI path
WITHOUT_CLASSIFICATION	// 6b - append the relative URI path
WITHOUT_CLASSIFICATION	// 6c - remove all "./" where "." is a complete path segment
WITHOUT_CLASSIFICATION	// 6d - remove "." if path ends with "." as a complete path segment
WITHOUT_CLASSIFICATION	// 6e - remove all "<segment>/../" where "<segment>" is a complete // path segment not equal to ".."
WITHOUT_CLASSIFICATION	// 6f - remove ending "<segment>/.." where "<segment>" is a // complete path segment
WITHOUT_CLASSIFICATION	// userinfo is everything up to @
WITHOUT_CLASSIFICATION	// host is everything up to last ':', or up to  // and including ']' if followed by ':'.
WITHOUT_CLASSIFICATION	// port
WITHOUT_CLASSIFICATION	// Check if the host is well formed.
WITHOUT_CLASSIFICATION	// Check that port is well formed if it exists. // REVISIT: There's no restriction on port value ranges, but // perform the same check as in setPort to be consistent. Pass // in a string to this method instead of an integer.
WITHOUT_CLASSIFICATION	// Check that userinfo is well formed if it exists.
WITHOUT_CLASSIFICATION	// Userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// check for valid escape sequence
WITHOUT_CLASSIFICATION	// can check against path characters because the set // is the same except for '/' which we've already excluded.
WITHOUT_CLASSIFICATION	// path - everything up to query string or fragment
WITHOUT_CLASSIFICATION	// RFC 2732 only allows '[' and ']' to appear in the opaque part.
WITHOUT_CLASSIFICATION	// Scan path. // abs_path = "/"  path_segments // rel_path = rel_segment [ abs_path ]
WITHOUT_CLASSIFICATION	// Scan opaque part. // opaque_part = uric_no_slash *uric
WITHOUT_CLASSIFICATION	// query - starts with ? and up to fragment or end
WITHOUT_CLASSIFICATION	// fragment - starts with #
WITHOUT_CLASSIFICATION	// Server based authority.
WITHOUT_CLASSIFICATION	// Registry based authority.
WITHOUT_CLASSIFICATION	// userinfo can contain alphanumerics, mark characters, escaped // and ';',':','&','=','+','$',','
WITHOUT_CLASSIFICATION	// reg_name = 1*( unreserved | escaped | "$" | "," |  //            ";" | ":" | "@" | "&" | "=" | "+" )
WITHOUT_CLASSIFICATION	// presence of the host (whether valid or empty) means // double-slashes which means generic uri
WITHOUT_CLASSIFICATION	// Check if the host is a valid IPv6reference.
WITHOUT_CLASSIFICATION	// Cannot start with a '.', '-', or end with a '-'.
WITHOUT_CLASSIFICATION	// rightmost domain label starting with digit indicates IP address // since top level domain label can only start with an alpha // see RFC 2396 Section 3.2.2
WITHOUT_CLASSIFICATION	// RFC 2396 states that hostnames take the form described in  // RFC 1034 (Section 3) and RFC 1123 (Section 2.1). According // to RFC 1034, hostnames are limited to 255 characters.
WITHOUT_CLASSIFICATION	// domain labels can contain alphanumerics and '-" // but must start and end with an alphanumeric
WITHOUT_CLASSIFICATION	// RFC 1034: Labels must be 63 characters or less.
WITHOUT_CLASSIFICATION	// Check that that there are no more than three digits // in this segment.
WITHOUT_CLASSIFICATION	// Check that this segment is not greater than 255.
WITHOUT_CLASSIFICATION	// Check if string is a potential match for IPv6reference.
WITHOUT_CLASSIFICATION	// Counter for the number of 16-bit sections read in the address.
WITHOUT_CLASSIFICATION	// Scan hex sequence before possible '::' or IPv4 address.
WITHOUT_CLASSIFICATION	// Address must contain 128-bits of information.
WITHOUT_CLASSIFICATION	// '::' represents at least one 16-bit group of zeros.
WITHOUT_CLASSIFICATION	// Trailing zeros will fill out the rest of the address.
WITHOUT_CLASSIFICATION	// 3. Scan hex sequence after '::'.
WITHOUT_CLASSIFICATION	// IPv6 addresses are 128-bit, so there can be at most eight sections.
WITHOUT_CLASSIFICATION	// This could be '::'.
WITHOUT_CLASSIFICATION	// There can be at most 4 hex digits per group.
WITHOUT_CLASSIFICATION	// which ASCII characters need to be escaped
WITHOUT_CLASSIFICATION	// Trying to match the following productions: // hexseq = hex4 *( ":" hex4) // hex4   = 1*4HEXDIG
WITHOUT_CLASSIFICATION	// initialize the above 3 arrays
WITHOUT_CLASSIFICATION	// if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	// we saw some non-ascii character
WITHOUT_CLASSIFICATION	// get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	// for each byte
WITHOUT_CLASSIFICATION	// for non-ascii character: make it positive, then escape
WITHOUT_CLASSIFICATION	// should never happen
WITHOUT_CLASSIFICATION	// This might be invalid or an IPv4address. If it's potentially an IPv4address, // backup to just after the last valid character that matches hexseq.
WITHOUT_CLASSIFICATION	// // XML Schema anyURI specific information //
WITHOUT_CLASSIFICATION	// To encode special characters in anyURI, by using %HH to represent // special ASCII characters: 0x00~0x1F, 0x7F, ' ', '<', '>', etc. // and non-ASCII characters (whose value >= 128).
WITHOUT_CLASSIFICATION	// for each character in the anyURI
WITHOUT_CLASSIFICATION	// If encoding happened, create a new string; // otherwise, return the orginal one.
WITHOUT_CLASSIFICATION	// // Constants //
WITHOUT_CLASSIFICATION	// Initializing the Character Flag Array // Code generated by: XMLCharGenerator.
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 49
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) 49 // Fill 2 of value (byte) -71
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -71
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33 // Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 31 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 58 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 11 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 53 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 20 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 44 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 18 of value (byte) -19 // Fill 13 of value (byte) 33 // Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 66 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 12 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 36 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33 // Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 28 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 55 of value (byte) 33 // Fill 38 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19 // Fill 8 of value (byte) -87 // Fill 13 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 6 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 71 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 15 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 519 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 53 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 4 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 2 of value (byte) -19 // Fill 16 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33 // Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) 33 // Fill 12 of value (byte) -87 // Fill 3 of value (byte) -19 // Fill 12 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 22 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87 // Fill 18 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 17 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87 // Fill 8 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 5 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 7 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) -87 // Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 23 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 18 of value (byte) 33 // Fill 2 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 16 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 3 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 10 of value (byte) -87 // Fill 145 of value (byte) 33 // Fill 46 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 7 of value (byte) -87 // Fill 5 of value (byte) 33 // Fill 6 of value (byte) -19 // Fill 9 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 10 of value (byte) -87 // Fill 39 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) 33 // Fill 4 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 5 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 8 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 33 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 20 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 6 of value (byte) -87 // Fill 4 of value (byte) 33 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 21 of value (byte) -87 // Fill 3 of value (byte) 33 // Fill 7 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -19 // Fill 41 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 11 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 9 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 2 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 7 of value (byte) 33 // Fill 2 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 40 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 8 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 68 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 3 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 7 of value (byte) -19 // Fill 211 of value (byte) 33 // Fill 13 of value (byte) -87 // Fill 4 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) 33 // Fill 2 of value (byte) -19 // Fill 2 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 81 of value (byte) 33 // Fill 3 of value (byte) -19 // Fill 3714 of value (byte) 33
WITHOUT_CLASSIFICATION	// Fill 25 of value (byte) 33 // Fill 9 of value (byte) -19 // Fill 6 of value (byte) -87
WITHOUT_CLASSIFICATION	// Fill 5 of value (byte) -87 // Fill 11 of value (byte) 33 // Fill 84 of value (byte) -19 // Fill 4 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 2 of value (byte) -87 // Fill 2 of value (byte) 33 // Fill 90 of value (byte) -19
WITHOUT_CLASSIFICATION	// Fill 3 of value (byte) -87 // Fill 6 of value (byte) 33 // Fill 40 of value (byte) -19 // Fill 7379 of value (byte) 33 // Fill 20902 of value (byte) -19 // Fill 3162 of value (byte) 33 // Fill 11172 of value (byte) -19 // Fill 92 of value (byte) 33 // Fill 8190 of value (byte) 33
WITHOUT_CLASSIFICATION	// isValid(int):boolean
WITHOUT_CLASSIFICATION	// isInvalid(int):boolean
WITHOUT_CLASSIFICATION	// isContent(int):boolean
WITHOUT_CLASSIFICATION	// isMarkup(int):boolean
WITHOUT_CLASSIFICATION	// isSpace(int):boolean
WITHOUT_CLASSIFICATION	// isNameStart(int):boolean
WITHOUT_CLASSIFICATION	// isName(int):boolean
WITHOUT_CLASSIFICATION	// isNCNameStart(int):boolean
WITHOUT_CLASSIFICATION	// isNCName(int):boolean
WITHOUT_CLASSIFICATION	// isPubid(int):boolean
WITHOUT_CLASSIFICATION	/*      * [5] Name ::= (Letter | '_' | ':') (NameChar)*      */
WITHOUT_CLASSIFICATION	// isValidName(String):boolean
WITHOUT_CLASSIFICATION	/*      * from the namespace rec      * [4] NCName ::= (Letter | '_') (NCNameChar)*      */
WITHOUT_CLASSIFICATION	// isValidNCName(String):boolean
WITHOUT_CLASSIFICATION	/*      * [7] Nmtoken ::= (NameChar)+      */
WITHOUT_CLASSIFICATION	// encodings
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// // Public static methods //
WITHOUT_CLASSIFICATION	// isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	// isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	//order constants
WITHOUT_CLASSIFICATION	// check whether the character is in the range 0x30 ~ 0x39
WITHOUT_CLASSIFICATION	// if the character is in the range 0x30 ~ 0x39, return its int value (0~9), // otherwise, return -1
WITHOUT_CLASSIFICATION	// There are attributes to handle.
WITHOUT_CLASSIFICATION	// There are attributes to handle.
WITHOUT_CLASSIFICATION	//XMLTypeResourceImpl
WITHOUT_CLASSIFICATION	//XMLTypeValidator
WITHOUT_CLASSIFICATION	// If the feature is a bidirectional reference with a multiplicity-many reverse, a composite reverse, // or a multiplicity-1 reverse that is already set (on value), then we'll switch things around and  // execute this command a little differently, because otherwise it's not undoable. //
WITHOUT_CLASSIFICATION	// We never directly set a multiplicity-many feature to a list directly.  Instead, we remove the old values // values, move the values that remain, and insert the new values.  If all old values are removed, we'll still // set it to an empty list, or unset it, as appropriate.  //
WITHOUT_CLASSIFICATION	// If we aren't simply removing all the old values... //
WITHOUT_CLASSIFICATION	// If there are values to remove, append a command for them. //
WITHOUT_CLASSIFICATION	// Determine the values that will remain and move them into the right order, if necessary. //
WITHOUT_CLASSIFICATION	// end setting whole list
WITHOUT_CLASSIFICATION	// For a 1-to-many association, doing the set as a remove and add from the other end will make it undoable. // In particular, if there is an existing non-null value, we first need to remove it from the other end, so // that it will be reinserted at the correct index on undo.  //
WITHOUT_CLASSIFICATION	// (value == null) && (oldValue == null) // A simple set/unset will suffice. //
WITHOUT_CLASSIFICATION	// (value == null) && (oldValue != null) // Remove owner from the old value and unset if necessary. //
WITHOUT_CLASSIFICATION	// ((value != null) 
WITHOUT_CLASSIFICATION	// (value != null) && (oldValue == null) // Add owner to new value. //
WITHOUT_CLASSIFICATION	// ((value != null) && (oldValue != null)) // Need a compound command to remove owner from old value and add it to new value. //
WITHOUT_CLASSIFICATION	// For consistency, we always set 1-1 container relations from the container end. //
WITHOUT_CLASSIFICATION	// For a many-to-1 or 1-to-1 association, if the opposite reference on the new value is already set to // something, we need a compound command that first explicitly removes that reference, so that it will be // restored in the undo. //
WITHOUT_CLASSIFICATION	// For a many-to-1, we use SetCommand.create() to create the command to remove the opposite reference; // a RemoveCommand on its opposite will actually result. //
WITHOUT_CLASSIFICATION	// For a 1-to-1, we can directly create a SetCommand. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// If there is an owner. //
WITHOUT_CLASSIFICATION	// Get the owner's meta object. //
WITHOUT_CLASSIFICATION	// Is the feature an attribute of the owner... //
WITHOUT_CLASSIFICATION	// If must be of this type then. //
WITHOUT_CLASSIFICATION	// Setting at an index. Make sure the index is valid, the type is valid, and the value isn't already in a // unique feature. Record the old value. //
WITHOUT_CLASSIFICATION	// If the attribute is set, record it's old value. //
WITHOUT_CLASSIFICATION	// oldValue = owner.eGet(feature);
WITHOUT_CLASSIFICATION	// Make sure the container is not being put into a contained object. //
WITHOUT_CLASSIFICATION	// If the other end is a many, then we should remove the owner from the old value's opposite feature so that undo will put it back. //
WITHOUT_CLASSIFICATION	// If the other end is single, then we should unset the owner from the old value's opposite feature so that undo will put it back. //
WITHOUT_CLASSIFICATION	// Either set or unset the feature. //
WITHOUT_CLASSIFICATION	// Either set or unset the feature. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Either set or unset the old value. //
WITHOUT_CLASSIFICATION	// If there is no list to add to, no collection or an empty collection from which to add, or the index is out of range... //
WITHOUT_CLASSIFICATION	// If it's a feature map, we'll need to validate the entry feature and enforce its multiplicity restraints. //
WITHOUT_CLASSIFICATION	// Keep track of all the entry features that are already in the feature map and that will be added, excluding // XML text, CDATA, and comments (if we're in a mixed type). //
WITHOUT_CLASSIFICATION	// Check each object...  //
WITHOUT_CLASSIFICATION	// Check type of object. //
WITHOUT_CLASSIFICATION	// Check that the object isn't already in a unique list. //
WITHOUT_CLASSIFICATION	// For feature maps, test that the entry feature is a valid type, that the entry value is an instance of it, // that there is not already something in a document root, and that there is not already something in a // single-valued entry feature. //
WITHOUT_CLASSIFICATION	// Check to see if a container is being put into a contained object. //
WITHOUT_CLASSIFICATION	// Simply add the collection to the list. //
WITHOUT_CLASSIFICATION	// Simply add the collection to the list. //
WITHOUT_CLASSIFICATION	// We'd like the collection of things added to be selected after this command completes. //
WITHOUT_CLASSIFICATION	// We'd like the collection of things added to be selected after this command completes. //
WITHOUT_CLASSIFICATION	// Remove the collection from the list by index. //
WITHOUT_CLASSIFICATION	// We'd like the owner selected after this undo completes. //
WITHOUT_CLASSIFICATION	// It must be an unsettable feature to be null and considered set. //
WITHOUT_CLASSIFICATION	// It must be an unsettable feature to be empty and considered set. //
WITHOUT_CLASSIFICATION	// if one is null, they'll all be null
WITHOUT_CLASSIFICATION	// Possible scope for the ChangeRecorder
WITHOUT_CLASSIFICATION	// Create commands to create copies of the children. //
WITHOUT_CLASSIFICATION	// We'll default to this. //
WITHOUT_CLASSIFICATION	// If there isn't something obviously wrong with the arguments... //
WITHOUT_CLASSIFICATION	// If the location is near the boundary, we'll start by trying to do a drop insert. //
WITHOUT_CLASSIFICATION	// If we could do a drop insert operation... //
WITHOUT_CLASSIFICATION	// Set the bounds so that we re-check when we are closer to the middle. //
WITHOUT_CLASSIFICATION	// We can try to do a drop on instead. //
WITHOUT_CLASSIFICATION	// Set the bounds so that we re-check when we get near the other end. //
WITHOUT_CLASSIFICATION	// We are near the middle, so we'll start by trying to do a drop on. //
WITHOUT_CLASSIFICATION	// If we can do a drop on operation. //
WITHOUT_CLASSIFICATION	// Set the range so that we re-check when we get aren't in the middle. //
WITHOUT_CLASSIFICATION	// We can reset and try a drop insert instead. //
WITHOUT_CLASSIFICATION	// We'll always be wrong for these arguments, so don't bother re-checking. //
WITHOUT_CLASSIFICATION	// This will be the default return value. //
WITHOUT_CLASSIFICATION	// The feedback is set based on which half we are in. // If the command isn't executable, these values won't be used. //
WITHOUT_CLASSIFICATION	// If we can't determine the parent. //
WITHOUT_CLASSIFICATION	// Iterate over the children to find the owner. //
WITHOUT_CLASSIFICATION	// When we match the owner, we're done. //
WITHOUT_CLASSIFICATION	// Try to create a specific command based on the current desired operation. //
WITHOUT_CLASSIFICATION	// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //
WITHOUT_CLASSIFICATION	// Try again. //
WITHOUT_CLASSIFICATION	// We've switch the operation! //
WITHOUT_CLASSIFICATION	// We've switch the operation! //
WITHOUT_CLASSIFICATION	// We don't want to move insert an object before or after itself... //
WITHOUT_CLASSIFICATION	// If the dragged objects share a parent... //
WITHOUT_CLASSIFICATION	// Just remove the objects and add them. //
WITHOUT_CLASSIFICATION	// We don't want to copy insert an object before or after itself... //
WITHOUT_CLASSIFICATION	// Copy the collection //
WITHOUT_CLASSIFICATION	// And add the copy. //
WITHOUT_CLASSIFICATION	// if optimize // if collection
WITHOUT_CLASSIFICATION	// We don't want to insert an object before or after itself... //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// If there isn't an executable command we should maybe try a copy operation, but only if we're allowed and not doing a link. //
WITHOUT_CLASSIFICATION	// If there isn't an executable command we should maybe try a link operation, but only if we're allowed and not doing a link. //
WITHOUT_CLASSIFICATION	// Add the collection //
WITHOUT_CLASSIFICATION	// This is the default return value. //
WITHOUT_CLASSIFICATION	// This is the feedback we use to indicate drop on; it will only be used if the command is executable. //
WITHOUT_CLASSIFICATION	// Prepare the right type of operation. //
WITHOUT_CLASSIFICATION	// If we can't set the collection, try setting use the single value of the collection. //
WITHOUT_CLASSIFICATION	// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //
WITHOUT_CLASSIFICATION	// Reset as in the constructor. //
WITHOUT_CLASSIFICATION	// If the operation has changed significantly... //
WITHOUT_CLASSIFICATION	// Clean it up. //
WITHOUT_CLASSIFICATION	// Set the arguments again. //
WITHOUT_CLASSIFICATION	// Determine if the operation is executable. //
WITHOUT_CLASSIFICATION	// Just return the cached result. //
WITHOUT_CLASSIFICATION	// Only return the operation for an executable command. //
WITHOUT_CLASSIFICATION	// Thread.dumpStack();
WITHOUT_CLASSIFICATION	// This can't execute if there is no owner list  // or the owner list doesn't contain the value being replaced or  // there are not replacements. //
WITHOUT_CLASSIFICATION	// An extent allows anything to be added. //
WITHOUT_CLASSIFICATION	// Make sure each object conforms to the type of the feature. //
WITHOUT_CLASSIFICATION	// Record the position of the value in the owner list. //
WITHOUT_CLASSIFICATION	// Simply remove the object from the owner list. //
WITHOUT_CLASSIFICATION	// Insert the collection at the right place. //
WITHOUT_CLASSIFICATION	// We'd like the collection of replacements selected after this replace completes. //
WITHOUT_CLASSIFICATION	// Remove the collection of replacements. //
WITHOUT_CLASSIFICATION	// Add the value back in the right place. //
WITHOUT_CLASSIFICATION	// We'd like the replaced selected after this undo replace completes. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// We'll assume that the copy command can execute and that adding a copy of the clipboard // is the same test as adding the clipboard contents itself. //
WITHOUT_CLASSIFICATION	// Thread.dumpStack();
WITHOUT_CLASSIFICATION	// Create a strict compound command to do a copy and then add the result //
WITHOUT_CLASSIFICATION	// Create a command to copy the clipboard. //
WITHOUT_CLASSIFICATION	// Create a proxy that will create an add command. //
WITHOUT_CLASSIFICATION	// Use the original to do the add, but only if it's of the same type as the copy. // This ensures that if there is conversion being done as part of the copy, // as would be the case for a cross domain copy in the mapping framework, // that we do actually use the converted instance. //
WITHOUT_CLASSIFICATION	// This will determine canExecute as efficiently as possible. //
WITHOUT_CLASSIFICATION	// This will actually execute the copy command in order to check if the add can execute. //
WITHOUT_CLASSIFICATION	// We need to check canExecute() here in case prepare() went down the "optimize" path. //
WITHOUT_CLASSIFICATION	// This can execute if there is an owner list and a collection and the owner list contains all the objects of the collection. //
WITHOUT_CLASSIFICATION	// If this owned object is one from the collection... //
WITHOUT_CLASSIFICATION	// Remove the object from the collection and add it to the identity list. //
WITHOUT_CLASSIFICATION	// Record the index. //
WITHOUT_CLASSIFICATION	// Record the index. //
WITHOUT_CLASSIFICATION	// Second pass: match by value equality. //
WITHOUT_CLASSIFICATION	// If this owned object is equal to one from the collection... //
WITHOUT_CLASSIFICATION	// Remove the object from the collection and add it to the equality list.  //
WITHOUT_CLASSIFICATION	// Merge the lists. //
WITHOUT_CLASSIFICATION	// Remove objects from the owner list by index, starting from the end. //
WITHOUT_CLASSIFICATION	// We'd like the owner selected after this remove completes. //
WITHOUT_CLASSIFICATION	// If either list is empty, the result is simply the other. //
WITHOUT_CLASSIFICATION	// Allocate list and array for objects and indices. //
WITHOUT_CLASSIFICATION	// Index counters into indices1, indices2, and indices.  //
WITHOUT_CLASSIFICATION	// Object iterators. //
WITHOUT_CLASSIFICATION	// Repeatedly select the lower index and corresponding object, and advance past the selected pair. //
WITHOUT_CLASSIFICATION	// We'd like the collection of things added to be selected after this command completes. //
WITHOUT_CLASSIFICATION	// Create commands to create copies of the children. //
WITHOUT_CLASSIFICATION	// Thread.dumpStack();
WITHOUT_CLASSIFICATION	// Remove objects from the owner list by index, starting from the end. //
WITHOUT_CLASSIFICATION	// We'd like the owner selected after this remove completes. //
WITHOUT_CLASSIFICATION	// Create commands to create the copy object(s). //
WITHOUT_CLASSIFICATION	// Create an initialize copy command for each of the created objects. //
WITHOUT_CLASSIFICATION	// Record it for execution. //
WITHOUT_CLASSIFICATION	// This ensures that the CreateCopyCommand will be executed by StrictCompoundCommand.prepare(). //
WITHOUT_CLASSIFICATION	// This will execute the CreateCopyCommand's and then call canExecute on the InitializeCopyCommand's. //
WITHOUT_CLASSIFICATION	// We'll assume that all the CreateCopyCommand's and InitializeCopyCommand's can execute. //
WITHOUT_CLASSIFICATION	// This will call prepare() which will partially execute the command. //
WITHOUT_CLASSIFICATION	// We need to check canExecute() in case optimize is true. //
WITHOUT_CLASSIFICATION	// Create a command to create a copy of the object. //
WITHOUT_CLASSIFICATION	// This handles IStructuredSelection. //
WITHOUT_CLASSIFICATION	// setResourceFactoryRegister(new ExtensibleContextResourceFactoryRegister()); //EATM setResourceFactoryRegister(new ContextResourceFactoryRegister());
WITHOUT_CLASSIFICATION	// If the owner parameter is set, we delegate to the owner's adapter //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type... //
WITHOUT_CLASSIFICATION	// If command has no owner specified //
WITHOUT_CLASSIFICATION	// For RemoveCommand, we will find the owner by calling EditingDomain.getParent() on the object(s) being removed. //
WITHOUT_CLASSIFICATION	// If there is a column object, just convert it to a string. //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type... //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type... //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type... //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// We will iterate over the whole collection, removing some as we go. //
WITHOUT_CLASSIFICATION	// Take the first object, and remove it. //
WITHOUT_CLASSIFICATION	// Determine the object's parent. //
WITHOUT_CLASSIFICATION	// Now we want to find all the other objects with this same parent. // So we can collection siblings together and give the parent control over their removal. //
WITHOUT_CLASSIFICATION	// Get the next object and check if it has the same parent. //
WITHOUT_CLASSIFICATION	// Remove the object and add it as a sibling. //
WITHOUT_CLASSIFICATION	// We will now create a command with this implied parent //
WITHOUT_CLASSIFICATION	// The parent is null, which implies a top-level removal, so create a self-removing command. //
WITHOUT_CLASSIFICATION	// If no object is specified, but an existing sibling is, the object is // its parent. //
WITHOUT_CLASSIFICATION	// protected Object labelProvider;
WITHOUT_CLASSIFICATION	//return getDefaultValue(attribute.getEType());
WITHOUT_CLASSIFICATION	// If any children were added or removed, reset the indices.
WITHOUT_CLASSIFICATION	// Get the URI of the model file. //
WITHOUT_CLASSIFICATION	// isValidIANAEncoding(String):boolean
WITHOUT_CLASSIFICATION	// Wrap any new children and add them to the map. Remove each current child from the set of old children. //
WITHOUT_CLASSIFICATION	// Remove and dispose any wrappers for remaining old children. //
WITHOUT_CLASSIFICATION	// A SetCommand needs to go through SetCommand.create() to ensure it can execute and undo. //
WITHOUT_CLASSIFICATION	/*  protected Command createSetCommand(EditingDomain domain, Object owner, Object feature, Object value)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, SetCommand.class, new CommandParameter(owner, feature, value));  }  protected Command createCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)  {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createCreateCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, CreateCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createInitializeCopyCommand(EditingDomain domain, Object owner, CopyCommand.Helper helper)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, InitializeCopyCommand.class, new CommandParameter(owner, null, helper));  }  protected Command createRemoveCommand(EditingDomain domain, Object owner, Object feature, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, RemoveCommand.class, new CommandParameter(owner, feature, collection));  }  protected Command createReplaceCommand(EditingDomain domain, Object owner, Object feature, Object value, Collection collection)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, collection));  }  protected Command createAddCommand(EditingDomain domain, Object owner, Object feature, Collection collection, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, collection, index));  }  protected Command createMoveCommand(EditingDomain domain, Object owner, Object feature, Object value, int index)   {    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, ReplaceCommand.class, new CommandParameter(owner, feature, value, index));  }  protected Command createDragAndDropCommand    (EditingDomain domain, Object owner, float location, int operations, int operation, Collection collection)  {    DragAndDropCommand.Detail detail = new DragAndDropCommand.Detail(location, operations, operation);    return       ((IEditingDomainItemProvider)decoratedItemProvider).createCommand        (owner, domain, DragAndDropCommand.class, new CommandParameter(owner, detail, collection));  }*/
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemLabelProvider. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemFontProvider. //
WITHOUT_CLASSIFICATION	// No font is a good default. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemFontProvider. //
WITHOUT_CLASSIFICATION	// No color is a good default. //
WITHOUT_CLASSIFICATION	// No color is a good default. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemColorProvider. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemColorProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemColorProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemColorProvider. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	//public String getUpdateableText(Object object)
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return needsEncoding(feature) ? encode((String)getEntryValue()) : getEntryValue();
WITHOUT_CLASSIFICATION	// Check that the value is type compatible with the entry feature. //
WITHOUT_CLASSIFICATION	// When the value is changed, the property sheet page doesn't update the property sheet viewer input // before refreshing, and this gets called on the obsolete wrapper. So, we need to read directly from the // model object. // //return value;
WITHOUT_CLASSIFICATION	// If the last object was deleted and the selection was in the property sheet view, the obsolete wrapper will // reference past the end of the list. //
WITHOUT_CLASSIFICATION	// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //
WITHOUT_CLASSIFICATION	// Use an existing getReferenceValue() override. //
WITHOUT_CLASSIFICATION	// First, try an existing implementation of getChildReference().  This provides backwards compatibility if that // method, now deprecated, was overridden. //
WITHOUT_CLASSIFICATION	// Iterate over all the child references to factor each child to the right reference. //
WITHOUT_CLASSIFICATION	// If this object is compatible with this reference... //
WITHOUT_CLASSIFICATION	// Iterate over all the set feature to factor each child to the right reference. //
WITHOUT_CLASSIFICATION	// Build the collection of new child descriptors. //
WITHOUT_CLASSIFICATION	// Add child descriptors contributed by extenders. //
WITHOUT_CLASSIFICATION	// If a sibling has been specified, add the best index possible to each CommandParameter. //
WITHOUT_CLASSIFICATION	// Find the index of a feature containing the sibling, or an equivalent value, in the collection of children // features. //
WITHOUT_CLASSIFICATION	// For each CommandParameter with a non-null, multi-valued structural feature... //
WITHOUT_CLASSIFICATION	// Look for the sibling value or an equivalent in the new child's feature. If it is found, the child should // immediately follow it. //
WITHOUT_CLASSIFICATION	// Otherwise, if a sibling feature was found, iterate through the children features to find the index of // the child feature...  //
WITHOUT_CLASSIFICATION	// If the child feature follows the sibling feature, the child should be first in its feature. //
WITHOUT_CLASSIFICATION	// Subclasses may override to add descriptors.
WITHOUT_CLASSIFICATION	// If necessary, get a command that replaces unwrapped values by their wrappers in the result and affected objects. //
WITHOUT_CLASSIFICATION	// Iterator over all the child references to factor each child to the right reference. //
WITHOUT_CLASSIFICATION	// If it is a list type value... // 
WITHOUT_CLASSIFICATION	// If it is a list type value... // 
WITHOUT_CLASSIFICATION	// Is this object in this feature... //
WITHOUT_CLASSIFICATION	// Is this object in this feature... //
WITHOUT_CLASSIFICATION	// Add it to the list and remove it from the other list. //
WITHOUT_CLASSIFICATION	// If we have children to remove for this feature, create a command for it. //
WITHOUT_CLASSIFICATION	// It's just a single value //
WITHOUT_CLASSIFICATION	// Create a command to set this to null and remove the object from the other list. //
WITHOUT_CLASSIFICATION	// If all the objects are used up by the above, then we can't do the command. //
WITHOUT_CLASSIFICATION	// Correct the index, if necessary. //
WITHOUT_CLASSIFICATION	// Consume the rest of the appropriate children. //
WITHOUT_CLASSIFICATION	// Is this child in this feature... //
WITHOUT_CLASSIFICATION	// Create a command for this feature,  //
WITHOUT_CLASSIFICATION	// If all the objects aren't used up by the above, then we can't do the command. //
WITHOUT_CLASSIFICATION	// Compute the relative index as best as possible. //
WITHOUT_CLASSIFICATION	// Create a command for this feature, //
WITHOUT_CLASSIFICATION	// continue to next case
WITHOUT_CLASSIFICATION	// All this logic is so that we only create a list if the adapter is set to more than one target. //
WITHOUT_CLASSIFICATION	// Dispose the child wrappers. //
WITHOUT_CLASSIFICATION	// Ignore the unset notification for an isMany feature; the value is boolean in this case. //
WITHOUT_CLASSIFICATION	// No index specified when removing all elements. //
WITHOUT_CLASSIFICATION	// We need the wrapper, not the item provider, to handle a DragAndDropCommand; the move, add, remove, etc. commands // that implement it will have their values unwrapped as usual. //
WITHOUT_CLASSIFICATION	// Unwrap collection. //
WITHOUT_CLASSIFICATION	// If the first wrapped value is found... //
WITHOUT_CLASSIFICATION	// Allocate the new collection, and populate it up to this point. //
WITHOUT_CLASSIFICATION	// If a new collection was allocated, continue to populate it. //
WITHOUT_CLASSIFICATION	// Unwrap value. //
WITHOUT_CLASSIFICATION	// Wrappers from the old command parameter must be considered in order for cut and paste to work. //
WITHOUT_CLASSIFICATION	// If the adapter factory is composeable, we'll adapt using the root. //
WITHOUT_CLASSIFICATION	// Build list of wrapped children from the appropriate adapters. //
WITHOUT_CLASSIFICATION	// Add in additional wrappers to search. //
WITHOUT_CLASSIFICATION	/*   * Returns the help context id for this property.   */
WITHOUT_CLASSIFICATION	/*      ResourceSet resourceSet = (ResourceSet)object;      childrenFeatures.add(ResourcePackage.eINSTANCE.getResourceSet_Resources());*/
WITHOUT_CLASSIFICATION	// Does this part provide an editing domain? //
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// There are attributes to handle.
WITHOUT_CLASSIFICATION	// This ensure that this package itself is traversed even if the reference type is EObject... //
WITHOUT_CLASSIFICATION	// Look for each unwrapped object as a value of a wrapper, replacing it with the first one found. //
WITHOUT_CLASSIFICATION	// Is this a containment reference child? //
WITHOUT_CLASSIFICATION	// Is this the label feature? //
WITHOUT_CLASSIFICATION	// Or a feature map child? //
WITHOUT_CLASSIFICATION	// Don't include controlled children here, they'll show up under their container. //
WITHOUT_CLASSIFICATION	// Resource resource = (Resource)object; // childrenFeatures.add(ResourcePackage.eINSTANCE.getResource_Contents());
WITHOUT_CLASSIFICATION	// Overlay if the resource is the target for any controlled objects.  //
WITHOUT_CLASSIFICATION	// case Resource.RESOURCE__IS_MODIFIED: // case Resource.RESOURCE__IS_LOADED: // case Resource.RESOURCE__IS_TRACKING_MODIFICATION: // case Resource.RESOURCE__RESOURCE_SET:
WITHOUT_CLASSIFICATION	// TreeNode
WITHOUT_CLASSIFICATION	//TreeFactory
WITHOUT_CLASSIFICATION	//TreePackage
WITHOUT_CLASSIFICATION	//TreeFactoryImpl
WITHOUT_CLASSIFICATION	//TreeNodeImpl
WITHOUT_CLASSIFICATION	//TreePackageImpl
WITHOUT_CLASSIFICATION	/*    super.collectNewChildDescriptors(newChildDescriptors, object);*/
WITHOUT_CLASSIFICATION	//TreeAdapterFactory
WITHOUT_CLASSIFICATION	//TreeSwitch
WITHOUT_CLASSIFICATION	// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //
WITHOUT_CLASSIFICATION	// If there is a new one... //
WITHOUT_CLASSIFICATION	// This guard is for extra security, but should not be necessary. //
WITHOUT_CLASSIFICATION	// Use up the command. // Note that notification will cause a new command to be created. //
WITHOUT_CLASSIFICATION	// We will only deal with structured selections. //
WITHOUT_CLASSIFICATION	// If we aren't getting the domain from the workbench part... // This happens when this action is used for a global popup action. // We try to get the editing domain from one of the objects in the selection. // //DMS editingDomain == null) ?
WITHOUT_CLASSIFICATION	// If we have a good editing domain... //
WITHOUT_CLASSIFICATION	// Delegate the action for this object to the editing domain. //
WITHOUT_CLASSIFICATION	// We can enable the action as indicated by the command, // and we can set all the other values from the command. //
WITHOUT_CLASSIFICATION	// Nothing more to do and we don't want to do the default stuff below. //
WITHOUT_CLASSIFICATION	// We just can't do it. //
WITHOUT_CLASSIFICATION	// No point in keeping garbage. //
WITHOUT_CLASSIFICATION	// Show the colourless image. //
WITHOUT_CLASSIFICATION	// try to get editing domain from workbench part
WITHOUT_CLASSIFICATION	// only handle structured selections
WITHOUT_CLASSIFICATION	// convert the selection to a collection of the selected objects
WITHOUT_CLASSIFICATION	// if the editing domain wasn't given by the workbench part, try to get // it from the selection
WITHOUT_CLASSIFICATION	// if we found an editing domain, create command
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// use up the command
WITHOUT_CLASSIFICATION	// Add our standard marker. //
WITHOUT_CLASSIFICATION	// Add the edit menu actions. //
WITHOUT_CLASSIFICATION	// Add our other standard marker. //
WITHOUT_CLASSIFICATION	// For the control case, we need a dialog to ask for the URI and obtain the resource, then we create the command. //
WITHOUT_CLASSIFICATION	// Ensure that all proxies are resolved so that references into the controlled object will be saved to reference the new resource. //
WITHOUT_CLASSIFICATION	// grabHorizontal = true;
WITHOUT_CLASSIFICATION	// We use multi even for a single line because we want to respond to the enter key. //
WITHOUT_CLASSIFICATION	// event is null when choiceTableViewer is double clicked
WITHOUT_CLASSIFICATION	// event is null when featureTableViewer is double clicked 
WITHOUT_CLASSIFICATION	// In column 0, the drop-down is indented past the collapse/expand icon. //
WITHOUT_CLASSIFICATION	// dropDown.addListener(SWT.Paint, dropDownListener);
WITHOUT_CLASSIFICATION	// This should be consistent with paintControl(). // 
WITHOUT_CLASSIFICATION	// setEditor(null, null, -1);
WITHOUT_CLASSIFICATION	// Fill with background. //
WITHOUT_CLASSIFICATION	// Draw the icons. //
WITHOUT_CLASSIFICATION	// Draw the text. //
WITHOUT_CLASSIFICATION	// EATM Color startColor = display.getSystemColor(SWT.COLOR_LIST_SELECTION);
WITHOUT_CLASSIFICATION	// Remember the requested operation.
WITHOUT_CLASSIFICATION	// Remember the requested operation.
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.eclipse.jface.window.Window#configureShell(org.eclipse.swt.widgets.Shell)     */
WITHOUT_CLASSIFICATION	// Draw background of right-side button. //
WITHOUT_CLASSIFICATION	// Draw down arrow, offset if dropped. //
WITHOUT_CLASSIFICATION	// Draw ellipses, offset if down. //
WITHOUT_CLASSIFICATION	// Draw outline. //
WITHOUT_CLASSIFICATION	// Draw 3D effect on right-side button. //
WITHOUT_CLASSIFICATION	// Remember the viewer and listen to SWT.DragDetect to alert the start of the drag operation. //
WITHOUT_CLASSIFICATION	// Clear the source data.  We won't need this again, since, if it was // available, it's already in the command. //
WITHOUT_CLASSIFICATION	// A command was created if the source was available early, and the // information used to create it was cached... //
WITHOUT_CLASSIFICATION	// Recreate the command. //
WITHOUT_CLASSIFICATION	// Otherwise, the source should be available now as event.data, and we // can create the command. //
WITHOUT_CLASSIFICATION	// If the command can execute... //
WITHOUT_CLASSIFICATION	// Execute it. //
WITHOUT_CLASSIFICATION	// Otherwise, let's call the whole thing off. //
WITHOUT_CLASSIFICATION	// Clean up the state. //
WITHOUT_CLASSIFICATION	// If we can't do anything else, we'll provide the default select feedback // and enable auto-scroll and auto-expand effects.
WITHOUT_CLASSIFICATION	// Clear out any old information from a previous drag. //
WITHOUT_CLASSIFICATION	// Get the target object from the item widget and the mouse location in it. //
WITHOUT_CLASSIFICATION	// Determine if we can create a valid command at the current location. //
WITHOUT_CLASSIFICATION	// If we don't have a previous cached command... //
WITHOUT_CLASSIFICATION	// Remember the target; create the command and test if it is executable. //
WITHOUT_CLASSIFICATION	// Keep track of any changes to the command information.
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc) Method declared on Dialog.     */
WITHOUT_CLASSIFICATION	// create OK and Cancel buttons by default
WITHOUT_CLASSIFICATION	// create composite
WITHOUT_CLASSIFICATION	// generateColor();
WITHOUT_CLASSIFICATION	// }}
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Check if the cached command can provide DND feedback/revalidation. //
WITHOUT_CLASSIFICATION	// If so, revalidate the command. //
WITHOUT_CLASSIFICATION	// If not, dispose the current command and create a new one. //
WITHOUT_CLASSIFICATION	// If this command can provide detailed drag and drop feedback... //
WITHOUT_CLASSIFICATION	// Use it for the operation and drag under effect. //
WITHOUT_CLASSIFICATION	// There is no executable command, so we'd better nix the whole deal. //
WITHOUT_CLASSIFICATION	// Check whether the current data type can be transfered locally. //
WITHOUT_CLASSIFICATION	// Iterate over the data types to see if there is a data type that supports a local transfer. //
WITHOUT_CLASSIFICATION	// If the local transfer supports this data type, switch to that data type //
WITHOUT_CLASSIFICATION	// Transfer the data and, if non-null, extract it. //
WITHOUT_CLASSIFICATION	// Transfer the data and convert the structured selection to a collection of objects. //
WITHOUT_CLASSIFICATION	//do this here because setting the text will set enablement on the OK // button
WITHOUT_CLASSIFICATION	/* | GridData.GRAB_VERTICAL */
WITHOUT_CLASSIFICATION	// Set the error message text // See https://bugs.eclipse.org/bugs/show_bug.cgi?id=66292
WITHOUT_CLASSIFICATION	// If there was no old input, then we must be providing content for this part for the first time... //
WITHOUT_CLASSIFICATION	// If the notification is an IViewerNotification, it specifies how ViewerRefresh should behave.  Otherwise fall // back to NotifyChangedToViewerRefresh, which determines how to refresh the viewer directly from the model // notification. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemLabelProvider. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemLabelProvider. //
WITHOUT_CLASSIFICATION	// No image is a good default. //
WITHOUT_CLASSIFICATION	// This implements the following order of preference: //   1. full refresh and update //   2. full refresh (add update if necessary) //   3. refresh element with update //   4. refresh element (if necessary) //   5. update element // 
WITHOUT_CLASSIFICATION	// n2.isLabelUpdate()
WITHOUT_CLASSIFICATION	// Previously, we never updated the viewer on a resolve.  Now we post and merge it as appropriate. //
WITHOUT_CLASSIFICATION	// ???
WITHOUT_CLASSIFICATION	//    case Notification.TOUCH:
WITHOUT_CLASSIFICATION	// We ignore non-changes for now. //
WITHOUT_CLASSIFICATION	// fireLabelProviderChanged();
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	// Ignore any exceptions and assume the class isn't available.
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// If there is a column object, just convert it to a string. //
WITHOUT_CLASSIFICATION	// No font is a good default. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemFontProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemFontProvider. //
WITHOUT_CLASSIFICATION	// No color is a good default. //
WITHOUT_CLASSIFICATION	// No color is a good default. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemColorProvider. //
WITHOUT_CLASSIFICATION	// Now we could check that the adapter implements interface ITableItemColorProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemColorProvider. //
WITHOUT_CLASSIFICATION	// Otherwise, we could check that the adapter implements interface IItemColorProvider. //
WITHOUT_CLASSIFICATION	// The class is not available.
WITHOUT_CLASSIFICATION	// Nested GenAnnotations
WITHOUT_CLASSIFICATION	/*   * For debugging purposes.  May be removed in the future.   */
WITHOUT_CLASSIFICATION	// We don't need to encode here because the only platform resource URIs in the map are for projects // whose names are the same as corresponding plug-in IDs, and hence never need to be encoded // (see EcorePlugin.computePlatformResourceToPlatformPluginMap()). //
WITHOUT_CLASSIFICATION	// Create resources for all the root EPackages. //
WITHOUT_CLASSIFICATION	// removing the first space
WITHOUT_CLASSIFICATION	// Subclasses may overwrite
WITHOUT_CLASSIFICATION	// Create resources for all the referenced EPackages // The referencedEPackage is a "local" instance of the realEPackage.  We  // will add the former to a resource that has the same URI of the later.
WITHOUT_CLASSIFICATION	// Initialize the GenModel with all the computed data. //
WITHOUT_CLASSIFICATION	// Restore all configured settings from the original. //
WITHOUT_CLASSIFICATION	// Handle application genmodel stub //
WITHOUT_CLASSIFICATION	// Determine which projects will need to be referenced. //
WITHOUT_CLASSIFICATION	// Create the model project. //
WITHOUT_CLASSIFICATION	// Add a dummy GenModel for referenced packages. //
WITHOUT_CLASSIFICATION	// Special case for a reference to Ecore to ensure that flag settings are respected and are set only for Ecore itself. //
WITHOUT_CLASSIFICATION	// Walk the project looking for .java files to analyze. //
WITHOUT_CLASSIFICATION	// If we have resolved to an EClass but we have an EAttribute, we can change it to be an EReference. //
WITHOUT_CLASSIFICATION	// Now we need to hook up opposites by finding the named feature in the type. //
WITHOUT_CLASSIFICATION	// Containers are transient by default unless explicitly annotated otherwise. //
WITHOUT_CLASSIFICATION	// Now we need to hook up keys by finding the named feature in the type. //
WITHOUT_CLASSIFICATION	// Clean up the temporary container annotations for holding map entry classes until they are for sure needed. //
WITHOUT_CLASSIFICATION	// Now we should sort. //
WITHOUT_CLASSIFICATION	// Find the fragment root so that we can generate to the right location (by default). //
WITHOUT_CLASSIFICATION	// Iterate over all projects to look at the manifests. //
WITHOUT_CLASSIFICATION	// Determine the required plugins. //
WITHOUT_CLASSIFICATION	// Iterate over all the plugin IDs to determine the dependency closure. // The list grows as the plugins are visited. //
WITHOUT_CLASSIFICATION	// Also add each required plugin for consideration in the loop. //
WITHOUT_CLASSIFICATION	// If it's a platform plugin URI, include it in the map. //
WITHOUT_CLASSIFICATION	// Keep only the plugins that have GenModels for consideration. //
WITHOUT_CLASSIFICATION	// Consider each GenModel location URI for each required plugin. //
WITHOUT_CLASSIFICATION	// Compute the closure. //
WITHOUT_CLASSIFICATION	// use no encoding
WITHOUT_CLASSIFICATION	// Walk the fields. //
WITHOUT_CLASSIFICATION	// Create the EPackage on demand. //
WITHOUT_CLASSIFICATION	// Check whether this has @model annotation contents. // If not, it might be a package interface, for backwards compatibility. //
WITHOUT_CLASSIFICATION	// Get the package name and see if there's an EPackage for it. //
WITHOUT_CLASSIFICATION	// If it's an interface, then it will be treated as an EClass //
WITHOUT_CLASSIFICATION	// Create a generic super type with an EClass as the classifier for each super interface in the Java representation. //
WITHOUT_CLASSIFICATION	// Create a generic super type with an EClass as the classifier for each super interface in the @model representation //
WITHOUT_CLASSIFICATION	// Match them and accumulate the appropriate result. //
WITHOUT_CLASSIFICATION	// Walk the methods. //
WITHOUT_CLASSIFICATION	// Additional attributes and references may be defined directly on the interface in order to allow the // get accessor method to have suppressed visibility. //
WITHOUT_CLASSIFICATION	// Otherwise it's treated as an EEnum //
WITHOUT_CLASSIFICATION	// Find Packages and Factories
WITHOUT_CLASSIFICATION	// It's definitely a package if it was declared as such. //
WITHOUT_CLASSIFICATION	// It's definitely a package if expected constants eNAME, eNS_PREFIX, or eNS_URI appear. //
WITHOUT_CLASSIFICATION	// This will catch inherited features, or additional things we don't want to worry about.
WITHOUT_CLASSIFICATION	// Check whether this has @model annotation contents. //
WITHOUT_CLASSIFICATION	// An operation is declared via the kind property or, for backwards compatibility, by specifying parameters // (though attribute or reference kind takes precedence). //
WITHOUT_CLASSIFICATION	// Map to an EEnum.
WITHOUT_CLASSIFICATION	// The feature name is extracted lower cased. //
WITHOUT_CLASSIFICATION	// The name is extracted and lower cased. //
WITHOUT_CLASSIFICATION	// Each token in parameters will specify a dataType for the corresponding parameter, but can be overridden by a // parameter-name-prefixed dataType property. //
WITHOUT_CLASSIFICATION	// Each token in exceptions will specify a data type for the corresponding exception. //
WITHOUT_CLASSIFICATION	// If we aren't doing an operation... //
WITHOUT_CLASSIFICATION	// We'll create one of these. //
WITHOUT_CLASSIFICATION	// If any of these attributes appear, this must be a reference. //
WITHOUT_CLASSIFICATION	// Set the EReference attributes. //
WITHOUT_CLASSIFICATION	// Defer the handling of the opposite. //
WITHOUT_CLASSIFICATION	// Set the visibility annotations for the EstructuralFeature. //
WITHOUT_CLASSIFICATION	// Set the EAttribute attributes. //
WITHOUT_CLASSIFICATION	// Handle the type, multiplicity and other ETypedElement attributes. //
WITHOUT_CLASSIFICATION	// Set the EStructuralFeature attributes. //
WITHOUT_CLASSIFICATION	// Process the annotations. //
WITHOUT_CLASSIFICATION	// For lists, maps, and feature maps, the default is many-valued, which can be overridden by an upper-bound declaration. //
WITHOUT_CLASSIFICATION	// The type can be augmented by specifying the it explicitly in the annotation. // This mostly makes sense only for many-valued typed elements, where the Java // type is a list and the item type needs to be specified. //
WITHOUT_CLASSIFICATION	// Allow the value to be defined by an annotation or by the field's initializer //
WITHOUT_CLASSIFICATION	// Allow a distinct literal value to be provided, too. //
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Allow a mixed case version of the name to be provided. //
WITHOUT_CLASSIFICATION	// But, if name doesn't expand into field name, ignore it. //
WITHOUT_CLASSIFICATION	// If there is no Ecore representation or it's invalid, e.g., when - is used to omit a specification, then just use the Java representation. //
WITHOUT_CLASSIFICATION	// We want to resolve to this. //
WITHOUT_CLASSIFICATION	// Check if it is exactly the name of a type parameter that's in scope. //
WITHOUT_CLASSIFICATION	// Check if the name is qualified //
WITHOUT_CLASSIFICATION	// For arrays, consider the element type. //
WITHOUT_CLASSIFICATION	// Find an explicit import or the first wildcard import. //
WITHOUT_CLASSIFICATION	// Find the modeled package for the import and look up the name there. //
WITHOUT_CLASSIFICATION	// If we can't find it, try the simple name in the package... //
WITHOUT_CLASSIFICATION	// Find the modeled package for the name and look up the name there. //
WITHOUT_CLASSIFICATION	// If we still don't have one, we'll have to settle for an EDataType or EClass with an instance class name. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// See if we already have the EDataType. //
WITHOUT_CLASSIFICATION	// Just to be helpful, we'll recognize a type of org.eclipse.emf.ecore.util.FeatureMap and convert it to EFeatureMapEntry. // This way a dataType need not be specified. But, we won't do this if recordDemandCreateEDataType is false, so we don't // change the instanceClass of a new EDataType that's implicitly being defined for FeatureMap. //
WITHOUT_CLASSIFICATION	// If we don't have one yet, maybe it's one of the special types... //
WITHOUT_CLASSIFICATION	// If we still don't have one, we'll have to settle for a demand created EDataType or EClass, // so create a new EClassifier with a nice unique name. //
WITHOUT_CLASSIFICATION	// If the name isn't qualified, it might be a primitive or from java.lang. Otherwise, assume it's in the current // package and use the nsPrefix for the qualified package name. //
WITHOUT_CLASSIFICATION	// Even primitives should be represented by a data type with a conventional (i.e. capitalized) name. //
WITHOUT_CLASSIFICATION	// Make array names legal. //
WITHOUT_CLASSIFICATION	// Avoid classifier name collisions. //
WITHOUT_CLASSIFICATION	// For the model information. //
WITHOUT_CLASSIFICATION	// This is package,  // so check the package information if this is in cat file. // If it is, then load the .cat file into the tree thereby traversing it; // otherwise, just traverse the tree. //
WITHOUT_CLASSIFICATION	// The package is in a .cat file. //
WITHOUT_CLASSIFICATION	// The package not in a .cat file. //
WITHOUT_CLASSIFICATION	// This could potentially map every created model element to its corresponding Rose node. // However, for now we're only using it as needed. //
WITHOUT_CLASSIFICATION	// Get the parent object. //
WITHOUT_CLASSIFICATION	// Map to an EPackage. //
WITHOUT_CLASSIFICATION	// Add to package. //
WITHOUT_CLASSIFICATION	// Map to an EClass. //
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	// Map to an EDataType. //
WITHOUT_CLASSIFICATION	// Map to an EDataType. //
WITHOUT_CLASSIFICATION	// Map to an eClass. //
WITHOUT_CLASSIFICATION	// Map to an EOperation.
WITHOUT_CLASSIFICATION	// Add to an EClass //
WITHOUT_CLASSIFICATION	// Map to an EParameter as input parameter for operation. //
WITHOUT_CLASSIFICATION	// Do this first for better error message during setEParameterProperties. //
WITHOUT_CLASSIFICATION	// Map to EAttribute, or EEnumLiteral. //
WITHOUT_CLASSIFICATION	// We will need to check the containment if we have to convert the EAttribute to an EReference later.  //
WITHOUT_CLASSIFICATION	// Convert to an EReference. //
WITHOUT_CLASSIFICATION	// map to EReference when is navigable //
WITHOUT_CLASSIFICATION	// eReference.setNavigable(roseNode.isNavigable());
WITHOUT_CLASSIFICATION	/*        eClass.getESuperTypes().addAll(extend);        eClass.getESuperTypes().addAll(unspecified);        eClass.getESuperTypes().addAll(mixin);        eClass.getESuperTypes().addAll(nonClass);        */
WITHOUT_CLASSIFICATION	// try to retrieve the fully qualified name of the specified type...
WITHOUT_CLASSIFICATION	// convert to dot-separated format if necessary...
WITHOUT_CLASSIFICATION	// remove garbage characters...
WITHOUT_CLASSIFICATION	// qualify type name if not already qualified...
WITHOUT_CLASSIFICATION	// default value //
WITHOUT_CLASSIFICATION	// Order first by number of features (descending) and then alphabetically (ascending) //
WITHOUT_CLASSIFICATION	// Temporary WAS/WSAD migration option. //
WITHOUT_CLASSIFICATION	// A container must be transient. //
WITHOUT_CLASSIFICATION	// setup attribute and parameter type //
WITHOUT_CLASSIFICATION	// Convert attributes of with EClass type to references. //
WITHOUT_CLASSIFICATION	// It was not found in the model class so check if primitive type. //
WITHOUT_CLASSIFICATION	// Convert reference to attribute if its type is an EDataType...  //
WITHOUT_CLASSIFICATION	// Store the base name for relative .cat file references. //
WITHOUT_CLASSIFICATION	// read mdl file...
WITHOUT_CLASSIFICATION	// special case, traverse cat file or mdl file //
WITHOUT_CLASSIFICATION	// file is a mdl file // // get model name
WITHOUT_CLASSIFICATION	// cat(unit) file referenced by mdl file
WITHOUT_CLASSIFICATION	// Process the children of the UnitTreeNode recursively. //
WITHOUT_CLASSIFICATION	//directoryName.length() > 0 && directoryName.charAt(0) == '$') 
WITHOUT_CLASSIFICATION	// map properties even when isTreeOnly == true
WITHOUT_CLASSIFICATION	//    top++;
WITHOUT_CLASSIFICATION	// 7 is the size of (object
WITHOUT_CLASSIFICATION	// 5 is the size of (list
WITHOUT_CLASSIFICATION	// 6 is the size of (value
WITHOUT_CLASSIFICATION	// size should be 1
WITHOUT_CLASSIFICATION	// could this happen?
WITHOUT_CLASSIFICATION	// Process the children of the UnitTreeNode recursively. //
WITHOUT_CLASSIFICATION	// Process the contents of the extent //
WITHOUT_CLASSIFICATION	// Load the Rose .mdl or .cat file, and create mappings for the objects. //
WITHOUT_CLASSIFICATION	// This sets the parent so that the nodes can traverse to the root to find default eCore settings. //
WITHOUT_CLASSIFICATION	// Start second traverse to create mapping objects in memory. //
WITHOUT_CLASSIFICATION	// Only one open quote. //
WITHOUT_CLASSIFICATION	// This will not add duplicates. //
WITHOUT_CLASSIFICATION	// No additional features // MappingStrategy
WITHOUT_CLASSIFICATION	//MappingPackage
WITHOUT_CLASSIFICATION	// ComplexTypeConverter
WITHOUT_CLASSIFICATION	// No additional features // TypeConverter
WITHOUT_CLASSIFICATION	// MappingRoot
WITHOUT_CLASSIFICATION	// FunctionNamePair
WITHOUT_CLASSIFICATION	// MappingHelper
WITHOUT_CLASSIFICATION	//MappingFactory
WITHOUT_CLASSIFICATION	// FunctionPair
WITHOUT_CLASSIFICATION	//mappingRoot.ePackageMapping().getMapping_Outputs() : //mappingRoot.ePackageMapping().getMapping_Inputs(),
WITHOUT_CLASSIFICATION	//mappingRoot.ePackageMapping().getMapping_Inputs() : //mappingRoot.ePackageMapping().getMapping_Outputs(),
WITHOUT_CLASSIFICATION	// This will deal with all the subcommands to modifying the root mapping tree. //
WITHOUT_CLASSIFICATION	// For each mapping being removed... //
WITHOUT_CLASSIFICATION	// Make sure the back pointers to this mapping from the mapped objects is set. //
WITHOUT_CLASSIFICATION	//subcommands.appendAndExecute(new RemoveCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), nestedMappings)); //subcommands.appendAndExecute(new AddCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), nestedMappings));
WITHOUT_CLASSIFICATION	// Since input objects are read-only, we don't need to make a copy of them for the clipboard. // We can just put a pointer to the original object(s) on the clipboard. //
WITHOUT_CLASSIFICATION	// Do we also have some non-input objects to copy? //
WITHOUT_CLASSIFICATION	// Just remember it; it's encoded later during execution, which is more efficient. //
WITHOUT_CLASSIFICATION	// Do the encoding. //
WITHOUT_CLASSIFICATION	// Record the records for the executed commands on the stack. //
WITHOUT_CLASSIFICATION	// If there is more than one exact match, we must get an index number; //
WITHOUT_CLASSIFICATION	// Iterate over the whole tree to do this. //
WITHOUT_CLASSIFICATION	//Resource resource = EcoreUtil.getURI(refObject).; FIX:::
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootTopAction#getTopsToAdd()   */
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// Make sure the back pointers to this mapping from the mapped objects is set. //
WITHOUT_CLASSIFICATION	// Iterate over the whole tree to do this. //
WITHOUT_CLASSIFICATION	// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //
WITHOUT_CLASSIFICATION	// For each mapping being added... //
WITHOUT_CLASSIFICATION	// Check all the siblings to see which if any should now be nested under this new mapping. // The are accumulated into a list so that they can be removed as a single command with a single notification. //
WITHOUT_CLASSIFICATION	// If there are siblings that need to be reparented. //
WITHOUT_CLASSIFICATION	// Create commands to do parentMapping.getNested().removeAll(siblingsToReparent). //
WITHOUT_CLASSIFICATION	//(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));
WITHOUT_CLASSIFICATION	// Create commands to do mapping.getNested().addAll(siblingsToReparent). //
WITHOUT_CLASSIFICATION	// return false if iteration should continue.
WITHOUT_CLASSIFICATION	// Now we'll do recursive MatchMapping. // (We need to iterate over a copy, since we modify the underlying list in the loop.)
WITHOUT_CLASSIFICATION	//(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object)));
WITHOUT_CLASSIFICATION	// Get the corresponding type. //
WITHOUT_CLASSIFICATION	// Create the copy from this corresponding type. //
WITHOUT_CLASSIFICATION	// This is done to ensure that this new copy is treated as an output by the domain. // The CreateMappingCommand will rely on this setting. //
WITHOUT_CLASSIFICATION	// Type matching never matches inputs that are already mapped
WITHOUT_CLASSIFICATION	//commandList.add(RemoveCommand.create(mappingDomain, mapping, mapping.ePackageMapping().getMapping_Outputs(), object));
WITHOUT_CLASSIFICATION	// Copy the children references  //
WITHOUT_CLASSIFICATION	// this will create the mapping as well
WITHOUT_CLASSIFICATION	// Copy the name //
WITHOUT_CLASSIFICATION	// Copy the type //
WITHOUT_CLASSIFICATION	// We have done our preparation. Now ask the super to validate. //
WITHOUT_CLASSIFICATION	// Remove all the mappings from the root. //
WITHOUT_CLASSIFICATION	//removeCommand = RemoveCommand.create(domain, mappingRoot, mappingRoot.ePackageMapping().getMapping_Nested(), mappingRoot.getNested());
WITHOUT_CLASSIFICATION	// This is the tricky part where we set the encoding  // that we'd like to have decoded as a series of commands to execute after this command has completed. //
WITHOUT_CLASSIFICATION	//domain.getMappingRoot().removeMapping(newMapping);
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.mapping.action.AddRootBottomAction#getBottomsToAdd()   */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// If eCore, return the ENamedElement name //
WITHOUT_CLASSIFICATION	// If there is an adapter of the correct type, return the item label //
WITHOUT_CLASSIFICATION	// If eCore, set the ENamedElement name //
WITHOUT_CLASSIFICATION	// This turns a featureless set command into an operation to create a mapping. // This is invoked during drag and drop. //
WITHOUT_CLASSIFICATION	// If this is a RemoveCommand for a root input object, direct it to the MappingRoot. //
WITHOUT_CLASSIFICATION	// If the owner and the copy are of the same type, we can proceed with the command, i.e. no override. // If not, we will skip this command by returning a do-nothing override. //
WITHOUT_CLASSIFICATION	// remove all sourceSeparator characters
WITHOUT_CLASSIFICATION	// sourceSeparator == LABEL_NO_SEPARATOR
WITHOUT_CLASSIFICATION	// add a targetSeparator in front of every upper case character
WITHOUT_CLASSIFICATION	// type-mappings
WITHOUT_CLASSIFICATION	// top-label-separator
WITHOUT_CLASSIFICATION	// bottom-label-separator
WITHOUT_CLASSIFICATION	// top-label-case
WITHOUT_CLASSIFICATION	// bottom-label-case
WITHOUT_CLASSIFICATION	// top-label-forms
WITHOUT_CLASSIFICATION	// bottom-label-forms
WITHOUT_CLASSIFICATION	//if // for // for
WITHOUT_CLASSIFICATION	/*     * The type string must be qualified by its package uri, e.g. DTD.xmi:DTDElement.     * The package uri is used to look up the package by calling RefRegister.getPackage(uri).     */
WITHOUT_CLASSIFICATION	//Ecore2EcorePackage
WITHOUT_CLASSIFICATION	// Ecore2EcoreMappingRoot
WITHOUT_CLASSIFICATION	//Ecore2EcoreFactory
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getInputEPackage()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcoreMapping#getOutputEPackage()   */
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * The switch that delegates to the <code>createXXX</code> methods.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// Remember the file. //
WITHOUT_CLASSIFICATION	// Do the work within an operation. //
WITHOUT_CLASSIFICATION	// Create a resource set //
WITHOUT_CLASSIFICATION	// Get the URI of the model file. //
WITHOUT_CLASSIFICATION	// Create a resource for this file. //
WITHOUT_CLASSIFICATION	// Add the initial model object to the contents. //
WITHOUT_CLASSIFICATION	// Save the contents of the resource to the file system. //
WITHOUT_CLASSIFICATION	// Select the new file resource in the current view. //
WITHOUT_CLASSIFICATION	// Determine the values to be added and add them at the right position. //
WITHOUT_CLASSIFICATION	//Ecore2EcorePackageImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreFactoryImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreMappingRootImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreResourceFactoryImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreResourceFactoryImpl
WITHOUT_CLASSIFICATION	//Ecore2EcoreAdapterFactory
WITHOUT_CLASSIFICATION	//Ecore2EcoreSwitch
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ 
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// Create classes and their features
WITHOUT_CLASSIFICATION	// Initialize package
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Add supertypes to classes
WITHOUT_CLASSIFICATION	// Create resource
WITHOUT_CLASSIFICATION	// Remember the file. //
WITHOUT_CLASSIFICATION	// Do the work within an operation. //
WITHOUT_CLASSIFICATION	// Create a resource set //
WITHOUT_CLASSIFICATION	// Create a page, set the title, and the initial model file name. //
WITHOUT_CLASSIFICATION	// Try and get the resource selection to determine a current directory for the file dialog. //
WITHOUT_CLASSIFICATION	// Get the resource... //
WITHOUT_CLASSIFICATION	// Get the resource parent, if its a file. //
WITHOUT_CLASSIFICATION	// This gives us a directory... //
WITHOUT_CLASSIFICATION	// Set this for the container. //
WITHOUT_CLASSIFICATION	// Make up a unique new name here. //
WITHOUT_CLASSIFICATION	// For a many-to-many association, the command can only be undoable if the value or owner is last in its // respective list, since the undo will include an inverse add.  So, if the value is last, but the owner is // not, we create an undoable compound command that removes from the opposite end and then inserts the new // value. //
WITHOUT_CLASSIFICATION	//Ecore2XMLPackage
WITHOUT_CLASSIFICATION	//Ecore2XMLFactory
WITHOUT_CLASSIFICATION	// XMLInfo
WITHOUT_CLASSIFICATION	// XMLMap
WITHOUT_CLASSIFICATION	// missing attribute
WITHOUT_CLASSIFICATION	// invalid element
WITHOUT_CLASSIFICATION	//XMLMapImpl
WITHOUT_CLASSIFICATION	//ENamedElementToXMLInfoMapEntryImpl
WITHOUT_CLASSIFICATION	//Ecore2XMLFactoryImpl
WITHOUT_CLASSIFICATION	//Ecore2XMLPackageImpl
WITHOUT_CLASSIFICATION	//XMLInfoImpl
WITHOUT_CLASSIFICATION	// Switch to the new selection provider. //
WITHOUT_CLASSIFICATION	// Fake a selection changed event to update the menus. //
WITHOUT_CLASSIFICATION	// Open an editor on the new file. //
WITHOUT_CLASSIFICATION	// Add the initial model object to the contents. //
WITHOUT_CLASSIFICATION	// Save the contents of the resource to the file system. //
WITHOUT_CLASSIFICATION	// Select the new file resource in the current view. //
WITHOUT_CLASSIFICATION	// Try and get the resource selection to determine a current directory for the file dialog. //
WITHOUT_CLASSIFICATION	// Get the resource... //
WITHOUT_CLASSIFICATION	// Get the resource parent, if its a file. //
WITHOUT_CLASSIFICATION	// This gives us a directory... //
WITHOUT_CLASSIFICATION	// Set this for the container. //
WITHOUT_CLASSIFICATION	// Force an update because Eclipse hides empty menus now. //
WITHOUT_CLASSIFICATION	// Remove any menu items for old selection. //
WITHOUT_CLASSIFICATION	// Query the new selection for appropriate new child/sibling descriptors //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// Initialize all the fields from the command parameter. //
WITHOUT_CLASSIFICATION	// If the attribute is set, record it's old value. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Update the containing map, if necessary. //
WITHOUT_CLASSIFICATION	// Create the copy //
WITHOUT_CLASSIFICATION	// EATM Leave this disabled for now. //
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	/*   * Javadoc copied from base class.   */
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Remember the static instance. //
WITHOUT_CLASSIFICATION	// Set the range so that we re-check when we get into the other half. //
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// Subclasses may override
WITHOUT_CLASSIFICATION	// If the location indicates after, add one more. //
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Empty extension to limit the effect of suppressing the deprecation warning.
WITHOUT_CLASSIFICATION	// Try again. //
WITHOUT_CLASSIFICATION	// This is the name of the model. //
WITHOUT_CLASSIFICATION	// Create move commands for all the objects in the collection. //
WITHOUT_CLASSIFICATION	// Apply a redirection pattern, if specified. //
WITHOUT_CLASSIFICATION	// Apply a redirection pattern, if specified. //
WITHOUT_CLASSIFICATION	// Thread.dumpStack();
WITHOUT_CLASSIFICATION	// Apply a redirection pattern, if specified. //
WITHOUT_CLASSIFICATION	// Simply remove the object from the owner list. //
WITHOUT_CLASSIFICATION	// Insert the collection at the right place. //
WITHOUT_CLASSIFICATION	// We'd like the collection of replacements selected after this replace completes. //
WITHOUT_CLASSIFICATION	/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */
WITHOUT_CLASSIFICATION	/*   * All Eclipse-dependent operations are delegated to this class. This pattern avoids any runtime failure due to   * missing dependencies in the stand-alone case.   */
WITHOUT_CLASSIFICATION	// Initialization is deferred until adapters are attached to all the objects of interest and we're // about to ask them to generate. //
WITHOUT_CLASSIFICATION	// Invoke generator adapters for each object. //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// // EMFEdit generation //
WITHOUT_CLASSIFICATION	// Iterate over the owner list twice, first matching objects from the collection by identity (==), then matching // objects by value equality (.equals()). The positions of matched objects in the owner list are recorded, and // the objects are stored in the same order. The lists are then merged to form a final, in-order list of objects // and corresponding indices in ownerList. This is very important for undo to interpret the indices correctly. // Also, this yields exactly one object removed for each object in the collection, with preference given to // identity over value equality. //
WITHOUT_CLASSIFICATION	// callers that plan to use this name without appending a suffix should call f.safeName(f.getName()) to make sure its not a keyword // this is a safe guaranteed uncapitalized form of the name // the safe name and cast to EObject, if necessary.
WITHOUT_CLASSIFICATION	// Add any remaining object-index pairs from either set. //
WITHOUT_CLASSIFICATION	// For CreateChildCommand, we will find the owner by calling EditingDomain.getParent() on the first selected object
WITHOUT_CLASSIFICATION	// This guards the switch. //
WITHOUT_CLASSIFICATION	// A set command without a feature sets the value of this wrapper, hence replacing it with a new wrapper. So, // we need a special command wrapper that selects this new wrapper as the affected object. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	// Get the adapter from the factory. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Create a page, set the title, and the initial model file name. // //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Prepare for CreateChild item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Make up a unique new name here. // //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Prepare for CreateSibling item addition or removal. // //$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// And delegate the call. //
WITHOUT_CLASSIFICATION	// Either delegate the call or return nothing. //
WITHOUT_CLASSIFICATION	// Either the IEditingDomainItemProvider or ITreeItemContentProvider item provider interface can give us // the children. //
WITHOUT_CLASSIFICATION	// These will be the children belonging to this feature. //
WITHOUT_CLASSIFICATION	// These will be the children belonging to this feature. //
WITHOUT_CLASSIFICATION	// The try/catch provides backwards compatibility with the old resource // key, "_UI_CreateChild_label", and should be removed at the next // release, when we can expect users to regenerate. //
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EClassifier)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getName(org.eclipse.emf.ecore.EStructuralFeature)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getNamespace(org.eclipse.emf.ecore.EPackage)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getType(org.eclipse.emf.ecore.EPackage,   *      java.lang.String)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.ExtendedMetaData#getFeatureKind(org.eclipse.emf.ecore.EStructuralFeature)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.emf.ecore.util.BasicExtendedMetaData#isFeatureKindSpecific()   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	// Do nothing.
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2xml.Ecore2XMLPackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.MappingPackage * @generated */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource#load(org.w3c.dom.Node, java.util.Map)   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage * @generated */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJAbstractType#getChildren()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#remove(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#insertSibling(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode, boolean)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode#addChild(org.eclipse.emf.codegen.merge.java.facade.ast.ASTJNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#getChildren()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#createCompilationUnit(java.lang.String, java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#getContext(org.eclipse.emf.codegen.merge.java.facade.JNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#doConvertToNode(java.lang.Object)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#addChild(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.FacadeHelper#insertSibling(org.eclipse.emf.codegen.merge.java.facade.JNode, org.eclipse.emf.codegen.merge.java.facade.JNode, boolean)   */
WITHOUT_CLASSIFICATION	// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)
WITHOUT_CLASSIFICATION	// append [] if it is variable arity parameter (@see JLS3 8.4.1, http://java.sun.com/docs/books/jls/third_edition/html/classes.html#300870)
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.codegen.merge.java.facade.AbstractJNode#computeQualifiedName()   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#init(org.eclipse.ui.IWorkbenchWindow)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction, org.eclipse.jface.viewers.ISelection)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.ui.IWorkbenchWindowActionDelegate#dispose()   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.jface.window.Window#close()   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.change.ChangePackage * @generated */
WITHOUT_CLASSIFICATION	/*    * @see org.eclipse.emf.ecore.EObject#eIsProxy()   */
WITHOUT_CLASSIFICATION	/*    * @see org.eclipse.emf.ecore.InternalEObject#eSetProxyURI(org.eclipse.emf.common.util.URI)   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.ecore.EcorePackage * @generated */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLLoad#load(org.eclipse.emf.ecore.xmi.XMLResource, org.w3c.dom.Node, java.util.Map)   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)}  * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object  * and proceeding up the inheritance hierarchy * until a non-null result is returned,  * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.edit.tree.TreePackage * @generated */
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc)     *      * @see org.eclipse.jface.dialogs.Dialog#createButtonsForButtonBar(org.eclipse.swt.widgets.Composite)     */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#run(org.eclipse.jface.action.IAction)   */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.mapping.MappingRoot#canCreateMapping(java.util.Collection, java.util.Collection, org.eclipse.emf.mapping.Mapping)   */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Adapter Factory</b> for the model. * It provides an adapter <code>createXXX</code> method for each class of the model. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */
WITHOUT_CLASSIFICATION	/** * <!-- begin-user-doc --> * The <b>Switch</b> for the model's inheritance hierarchy. * It supports the call {@link #doSwitch(EObject) doSwitch(object)} * to invoke the <code>caseXXX</code> method for each class of the model, * starting with the actual class of the object * and proceeding up the inheritance hierarchy * until a non-null result is returned, * which is the result of the switch. * <!-- end-user-doc --> * @see org.eclipse.emf.mapping.ecore2ecore.Ecore2EcorePackage * @generated */
WITHOUT_CLASSIFICATION	/*   * (non-Javadoc)   *    * @see org.eclipse.ui.IActionDelegate#selectionChanged(org.eclipse.jface.action.IAction,   *      org.eclipse.jface.viewers.ISelection)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#add(org.eclipse.emf.ecore.ENamedElement, org.eclipse.emf.ecore.xmi.XMLResource.XMLInfo)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getClassifier(java.lang.String, java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeature(org.eclipse.emf.ecore.EClass, java.lang.String, java.lang.String)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getFeatures(org.eclipse.emf.ecore.EClass)   */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)   * @see org.eclipse.emf.ecore.xmi.XMLResource.XMLMap#getInfo(org.eclipse.emf.ecore.ENamedElement)   */
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// Attribute
WITHOUT_CLASSIFICATION	// If the workbench part changes... //
WITHOUT_CLASSIFICATION	// Discard the old editing domain. //
WITHOUT_CLASSIFICATION	// Convert the selection to a collection of the selected objects. //
WITHOUT_CLASSIFICATION	// This returns a name like employeeNumber formatted like 'Employee Number' // This returns the same as getCapName unless it starts with "is" in which case the "is" is stripped  // This returns the name to be used in accessor method names; it's the same as getCapName, unless this is the key or value of a map entry, for which "Typed" is prepended // This returns the name of the get array-based accessor method for the list feature. // This returns the name of the get accessor method for the feature, i.e., either "is" or "get" is prefixed to getAccessorName
WITHOUT_CLASSIFICATION	// This is for backwards compatibility, since the constructor may have been overridden before it was expected // to set actionDelegate. //
WITHOUT_CLASSIFICATION	// this returns either "EAttribute" or "EReference"
WITHOUT_CLASSIFICATION	// this guard is for extra security, but should not be necessary
WITHOUT_CLASSIFICATION	// // EMF.Edit generation //
WITHOUT_CLASSIFICATION	// We can create the RemoveCommand for an uncontrol, but we must defer creating an AddCommand // to control until run(), when the user specifies a target resource. //
WITHOUT_CLASSIFICATION	//  Remove any non-Java dependencies from being added. //
WITHOUT_CLASSIFICATION	// Get extra icon and bounds for first column of ExtendedTableTreeItem. //
WITHOUT_CLASSIFICATION	/*   * Computes the default path for the given GenModel. This was previously the implementation of getTemplatePath().   */
WITHOUT_CLASSIFICATION	// Clean up the command if there is one.  If we need it again in drop, // we'll recreate it from dragAndDropCommandInformation. //
WITHOUT_CLASSIFICATION	// Compute a map of resource location URIs to logical namespace URIs // so that cross references will be resolved via package registry when deserialized.  //
WITHOUT_CLASSIFICATION	// We'll need to keep track of the information we use to create the // command, so that we can recreate it in drop.
WITHOUT_CLASSIFICATION	// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	// Do allow an existing MANIFEST.MF to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	/*     * (non-Javadoc) Method declared on Dialog.     */
WITHOUT_CLASSIFICATION	// Do allow an existing build.properties to be overwritten, since it may have been created as part of an empty EMF project. // Use the existence of a plugin.xml as a guard against overwriting in a project that has already been generated. //
WITHOUT_CLASSIFICATION	/*        text = new Text(composite, SWT.SINGLE | SWT.BORDER);        text.setLayoutData(new GridData(GridData.GRAB_HORIZONTAL                | GridData.HORIZONTAL_ALIGN_FILL));*/
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// Obtain or create and register package
WITHOUT_CLASSIFICATION	// CellEditor.setValue() calls isCorrect() to validate the value that is about to be set. We are doing conversion // between the value and a corresponding string, and we would usually like to validate the string. Because // setValue() is final, we cannot do that conversion there, so we need to record what we're trying to validate and // work around the problem in isCorrect(). // 
WITHOUT_CLASSIFICATION	// Initialize simple dependencies
WITHOUT_CLASSIFICATION	// The referencedEPackages list is used to track the packages for // which is necessary to create the stub GenModel.  So if the ePackage // is referenced by an existing GenPackage, it doesn't need to be added to // referencedEPackages.
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Create package meta-data objects
WITHOUT_CLASSIFICATION	// Determine the required plugins. //
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Initialize created meta-data
WITHOUT_CLASSIFICATION	// Include each required plugin of the starting project and the exported ones of all the required projects. //
WITHOUT_CLASSIFICATION	// Register package validator
WITHOUT_CLASSIFICATION	// Determine the inverse map from plugin IDs to their registered GenModel locations. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Mark meta-data to indicate it can't be changed
WITHOUT_CLASSIFICATION	// Walk the fields. //
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Obtain other dependent packages
WITHOUT_CLASSIFICATION	// Filter out explicit EObject from super types, except in the Ecore package itself, or if it appears in the @model superTypes. //
WITHOUT_CLASSIFICATION	// Create type parameters
WITHOUT_CLASSIFICATION	// We will create an EAttribute, EReference, or an EOperation. //
WITHOUT_CLASSIFICATION	// Set bounds for type parameters
WITHOUT_CLASSIFICATION	// Check whether there are parameters; the special attribute and reference rules only apply for the case of no arguments. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters
WITHOUT_CLASSIFICATION	// The method is not a structural feature, so it's modeled as an operation. //
WITHOUT_CLASSIFICATION	// Initialize classes and features; add operations and parameters //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-1$ //$NON-NLS-2$
WITHOUT_CLASSIFICATION	// Create annotations // http://www.eclipse.org/emf/2002/Ecore
WITHOUT_CLASSIFICATION	// Don't overwrite exising file
WITHOUT_CLASSIFICATION	// Don't overwrite exising file
WITHOUT_CLASSIFICATION	// Look through the imports of the containing compilation unit. //
WITHOUT_CLASSIFICATION	// Use an alternate if we can't write to this one. //
WITHOUT_CLASSIFICATION	// Map to EClass, EEnum or EInerface. // Note that we do not map structure and primitive type class. //
WITHOUT_CLASSIFICATION	//purpose: using charset from 'targetFile' to encode in-memory  //         'newContents' object into bytes //modifer: Wu Zhi Qiang //date:    Aug 25, 2004 //action:  first get the charset from 'targetFile', then use it  //         to encode the 'newContents' object into bytes
WITHOUT_CLASSIFICATION	// Map to an EClass. //
WITHOUT_CLASSIFICATION	// Map to an EClass. //
WITHOUT_CLASSIFICATION	//FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	//FB TBD different objects for ecore model!
WITHOUT_CLASSIFICATION	// Map to an eClass. //
WITHOUT_CLASSIFICATION	// generateColor();
WITHOUT_CLASSIFICATION	// This handles Rose 2003 format, e.g., // Logical View::JavaException[40722F9D0294] //
WITHOUT_CLASSIFICATION	// Strip off the array indices if any. //
WITHOUT_CLASSIFICATION	// process eStructuralFeatures for association end(Role) //
WITHOUT_CLASSIFICATION	// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.
WITHOUT_CLASSIFICATION	// If we find a match, make this generic type be for this type parameter, // and then stop the whole process.
WITHOUT_CLASSIFICATION	// ...or if it's a wildcard or group feature.  Also, make it FeatureMap-typed. //
WITHOUT_CLASSIFICATION	// We don't want keyType and valueType on a map type specification in a package interface. // But, we also use qualified model information when defining a feature with suppressed get accessor // on the interface, and we do want to include these properties in that case. //
WITHOUT_CLASSIFICATION	// starting traverse file and build unit tree and table info
WITHOUT_CLASSIFICATION	/*  public String getImportedInstanceClassName()  {    return getGenModel().getImportedName("org.eclipse.emf.ecore.EEnumLiteral");   }*/
WITHOUT_CLASSIFICATION	// Process the children of the UnitTreeNode recursively. //
WITHOUT_CLASSIFICATION	// If the flag will straddle two fields, bump it to the next one. //
WITHOUT_CLASSIFICATION	//************************************************************************ //*    class RoseToken                                                   * //************************************************************************
WITHOUT_CLASSIFICATION	// If there is a provider base class from outside this class that has already been generated, get the create // child references from it. We'll check for any type-compatible classes introduced in this package. //
WITHOUT_CLASSIFICATION	// This will deal with all the subcommands to modifying the root mapping tree. //
WITHOUT_CLASSIFICATION	// Like isStringType(), but still returns true even if multiplicity-many. //
WITHOUT_CLASSIFICATION	// Create a command to do parentMapping.getNested().remove(mapping). // //subcommands.appendAndExecute(new RemoveCommand(domain, parentMapping, parentMapping.ePackageMapping().getMapping_Nested(), mapping));
WITHOUT_CLASSIFICATION	// EDate is far too often overridden to provide a different mapping, and therefor the default is somewhat obscure. // So, it's best to delegate to the factory. //
WITHOUT_CLASSIFICATION	// Find the appropriate parent mapping, which at the very least, should be the mapping root itself. //
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// If the type isn't Object, we need to cast. If it's a primitive, we need to unbox. //
WITHOUT_CLASSIFICATION	//(new AddCommand(domain, mapping, mapping.ePackageMapping().getMapping_Nested(), siblingsToReparent));
WITHOUT_CLASSIFICATION	// Suppress default constructor for non-instantiability.
WITHOUT_CLASSIFICATION	// This is tricky and is done for each object here rather than once for the owner of the addCommnd. // We want to make sure the object is really part of the conceptual tree induced by the domain. //
WITHOUT_CLASSIFICATION	// See java.lang.Class.getName() javadoc for explanation of array encoding.
WITHOUT_CLASSIFICATION	// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //
WITHOUT_CLASSIFICATION	// We'll try adding a shallow copy of the clipboard contents, instead of a full copy. // Note: we can't just try adding the clipboard contents itself, because the copy may be a //       different type then what's on the clipboard (e.g. EJB Field -> RDB Column). //
WITHOUT_CLASSIFICATION	// We can't blindly cache the genModel, since we need to support moving the GenPackage to another container, // but the cast is expensive, so we'd like to do it no more than absolutely necessary. //
WITHOUT_CLASSIFICATION	//FB The following method is copied from com.ibm.etools.b2b.util.StringUtility //FB because the mapping framework cannot have a dependency on b2b. What we really //FB need to do is get methods like this moved to vabase so that everyone can //FB use them. // change all occurrences of oldPat to newPat
WITHOUT_CLASSIFICATION	// Ignore this soft dependency when it's not satisfied.
WITHOUT_CLASSIFICATION	// If it's the selection viewer, then we want it to select the same selection as this selection. //
WITHOUT_CLASSIFICATION	// Set URIs of EPackage-containing resources: output resource to desired target URI, and others to package // namespace URIs (so cross-references will be resolved via package registry when deserialized).  //
WITHOUT_CLASSIFICATION	//MappingPackageImpl
WITHOUT_CLASSIFICATION	// Iterate over the mappings in the tree. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//   public String getExtendedItemProviderClassName() //   { //     return getPrefixedName("ItemProviderAdapter"); //   }
WITHOUT_CLASSIFICATION	// Check to make sure that every object in the collection has an ancestor that is contained in this mapping. //
WITHOUT_CLASSIFICATION	// It belongs to this package if the delegate feature is from this package, // or the class is from this package and either there is no delegate feature or the delegate feature is from some used package. //
WITHOUT_CLASSIFICATION	// Ensure that this is a touch notification so to resource aren't marked as dirty. //
WITHOUT_CLASSIFICATION	// Force the project to be setup properly. //
WITHOUT_CLASSIFICATION	/* EATM getDecoratedAdapterFactory().*/
WITHOUT_CLASSIFICATION	// This case happens when the IDE is brought up with the editor already open //
WITHOUT_CLASSIFICATION	// We need to filer out duplicates in the unlikely event that we have two // features with the same class-qualified name. We'll only generate one property // string in that case and let the user add the second one manually, if necessary. //
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((ComplexTypeConverter)msg.getNotifier()).ePackageMapping();
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// while
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Ignore.
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Empty
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// Ignore
WITHOUT_CLASSIFICATION	// the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// the first hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// the second hex character if a character needs to be escaped
WITHOUT_CLASSIFICATION	// initialize the above 3 arrays
WITHOUT_CLASSIFICATION	// if it's not an ASCII character, break here, and use UTF-8 encoding
WITHOUT_CLASSIFICATION	// get UTF-8 bytes for the remaining sub-string
WITHOUT_CLASSIFICATION	//MappingPackage ePackage = ((MappingRoot)object).ePackageMapping();
WITHOUT_CLASSIFICATION	// Try to select the affected objects. //
WITHOUT_CLASSIFICATION	// this should never happen
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// no-op
WITHOUT_CLASSIFICATION	// && commandParameter instanceof MappingCommandParameter)
WITHOUT_CLASSIFICATION	// Creates the model from the editor input //
WITHOUT_CLASSIFICATION	// Returning null here causes RemoveCommand.create(domain, mappedObjectItemProvider) to be delegated //  to MappedObjectItemProvider.createCommand() and there we return a command to remove mappedObject instead. // // return null;
WITHOUT_CLASSIFICATION	// Only creates the other pages if there is something that can be edited //
WITHOUT_CLASSIFICATION	// Only creates the other pages if there is something that can be edited //
WITHOUT_CLASSIFICATION	//hgd::fireNotifyChanged(msg.getNotifier(), msg.getEventType(), msg.getFeature(), substituteOldValue, substituteNewValue, msg.getPosition());
WITHOUT_CLASSIFICATION	// The content outline is just a tree. //
WITHOUT_CLASSIFICATION	// Set up the tree viewer. //
WITHOUT_CLASSIFICATION	// Select the root object in the view. //
WITHOUT_CLASSIFICATION	// This ensures that we handle selections correctly. //
WITHOUT_CLASSIFICATION	// Get the first selected element. //
WITHOUT_CLASSIFICATION	// Do the work within an operation because this is a long running activity that modifies the workbench. //
WITHOUT_CLASSIFICATION	// generateMenuManager.add(new Separator("schema-actions")); // generateMenuManager.add(generateSchemaAction);    
WITHOUT_CLASSIFICATION	// generateSchemaAction.setEnabled(generateSchemaAction.isEnabled());
WITHOUT_CLASSIFICATION	// menuManager.insertBefore("additions", new Separator("schema-actions")); // menuManager.insertAfter("schema-actions", generateSchemaAction);
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	// Check the type of the specified child object and return the proper feature to use for // adding (see {@link AddCommand}) it as a child.
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	//)
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>caseXXX</code> for each class of the model until one returns a non null result; it yields that result.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @return the first non-null result returned by a <code>caseXXX</code> call.   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	/**   * Calls <code>validateXXX</code> for the corresponding classifier of the model.   * <!-- begin-user-doc -->   * <!-- end-user-doc -->   * @generated   */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	/* Trick to import java.util.* without warnings */
WITHOUT_CLASSIFICATION	// // Constructors //
WITHOUT_CLASSIFICATION	// // Constructors //
WITHOUT_CLASSIFICATION	//TestCase/isSetGenFeature.override.javajetinc
WITHOUT_CLASSIFICATION	// Avoid unnecessary out.write("") statements...
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// For any entry that doesn't correspond to a plugin in the running JVM, compute a URL for the classes. //
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$ //$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	//$NON-NLS-1$
WITHOUT_CLASSIFICATION	// Define a class loader that looks up classes using the URLs or the parent class loader, // and failing those, tries to look up the class in each bundle in the running JVM. //
IMPLEMENTATION	// TODO: I think we need to make sure the keys are actually cloned, // whereas the paint instances are always immutable so they're OK
IMPLEMENTATION	/** * An annotation that allows an image to be placed at some location on * an {@link XYPlot}. * * TODO:  implement serialization properly (image is not serializable). */
IMPLEMENTATION	// FIXME:  implement this...
IMPLEMENTATION	// not implemented
IMPLEMENTATION	// not implemented
IMPLEMENTATION	// FIXME: show a dialog with the error
IMPLEMENTATION	// FIXME: show a dialog with the error
IMPLEMENTATION	// could make this configurable
IMPLEMENTATION	// TODO: draw the interval marker with a 3D effect
IMPLEMENTATION	// FIXME: draw outliers
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO: I think we need to make sure the keys are actually cloned, // whereas the stroke instances are always immutable so they're OK
IMPLEMENTATION	// TODO: draw the interval marker with a 3D effect
IMPLEMENTATION	/**     * Returns a string representing the week (e.g. "Week 9, 2002").     *     * TODO: look at internationalisation.     *     * @return A string representing the week.     */
IMPLEMENTATION	// TODO see if we need to apply some line color and style to the // axis traces
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO: add serialization support for images
WITHOUT_CLASSIFICATION	// TBLRC // 01011 - bottom, right and center
WITHOUT_CLASSIFICATION	// TBLRC // 01100
WITHOUT_CLASSIFICATION	// TBLRC // 01101 - bottom, left and center
WITHOUT_CLASSIFICATION	// TBLRC // 01110 - bottom. left and right
WITHOUT_CLASSIFICATION	// TBLRC // 01111
WITHOUT_CLASSIFICATION	// TBLRC // 10000 - top item only
WITHOUT_CLASSIFICATION	// TBLRC // 10001 - top and center only
WITHOUT_CLASSIFICATION	// TBLRC // 10010 - right and top only
WITHOUT_CLASSIFICATION	// TBLRC // 10011 - top, right and center
WITHOUT_CLASSIFICATION	// TBLRC // 10100 - top and left only
WITHOUT_CLASSIFICATION	// range
WITHOUT_CLASSIFICATION	// units
WITHOUT_CLASSIFICATION	// interval
WITHOUT_CLASSIFICATION	// dial outline paint
WITHOUT_CLASSIFICATION	// dial shape
WITHOUT_CLASSIFICATION	// dial background paint
WITHOUT_CLASSIFICATION	// seriesPaint
WITHOUT_CLASSIFICATION	// seriesPaintList
WITHOUT_CLASSIFICATION	// baseSeriesPaint
WITHOUT_CLASSIFICATION	// seriesOutlinePaint
WITHOUT_CLASSIFICATION	// seriesOutlinePaintList
WITHOUT_CLASSIFICATION	// baseSeriesOutlinePaint
WITHOUT_CLASSIFICATION	// seriesOutlineStroke
WITHOUT_CLASSIFICATION	// seriesOutlineStrokeList
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// high
WITHOUT_CLASSIFICATION	// low
WITHOUT_CLASSIFICATION	// close
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	// there should be no change event when clearing an empty series
WITHOUT_CLASSIFICATION	// clean up
WITHOUT_CLASSIFICATION	// shape
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// labelPaint
WITHOUT_CLASSIFICATION	// upperBound
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// super.drawSecondaryPass(g2, plot, dataset, pass, series, item, // domainAxis, dataArea, rangeAxis, crosshairState, entities);
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// do we need to redraw the buffer?
WITHOUT_CLASSIFICATION	// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	// we clone the chart because presumably there can be some delay // between putting this instance on the system clipboard and // actually having the getTransferData() method called...
WITHOUT_CLASSIFICATION	// for efficiency, we just use the first, last and middle items to // compute a hashCode...
WITHOUT_CLASSIFICATION	// create a legend, if requested...
WITHOUT_CLASSIFICATION	// pass the click on to the plot... // rely on the plot to post a plot change event and redraw the chart...
WITHOUT_CLASSIFICATION	// don't zoom unless the mouse pointer is in the plot's data area
WITHOUT_CLASSIFICATION	// draw the label
WITHOUT_CLASSIFICATION	// now try to reject equality...
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// if fixed auto range, then derive lower bound...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// add minor ticks (for gridlines)
WITHOUT_CLASSIFICATION	// select a tick unit that is the next one bigger than the current // (log) range divided by 50
WITHOUT_CLASSIFICATION	// look at lower and upper bounds...
WITHOUT_CLASSIFICATION	// it is unlikely that 'state' will be null, but check anyway...
WITHOUT_CLASSIFICATION	// create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	// work out the number of periods to skip for labelling
WITHOUT_CLASSIFICATION	// draw the arrow...
WITHOUT_CLASSIFICATION	// set flag true if negative values not allowed and the // lower bound is between 0 and 10:
WITHOUT_CLASSIFICATION	//parameter value is < -10 //calculate log using positive value:
WITHOUT_CLASSIFICATION	//calculate power using positive value; then negate
WITHOUT_CLASSIFICATION	//parameter value is <= 0 //use as-is
WITHOUT_CLASSIFICATION	//if less than 1.0 then make it 1.0 //subtract out margin and get exponential value:
WITHOUT_CLASSIFICATION	//negatives not allowed and lower range bound is zero //use data range bound instead
WITHOUT_CLASSIFICATION	//get positive exponent //create multiplier value //multiply, round up, and divide for bound value:
WITHOUT_CLASSIFICATION	//negatives allowed or upper bound not between 0 & 1 //if flag then change to log version of highest value to // make range begin at a 10^n value; else use nearest int
WITHOUT_CLASSIFICATION	//get log10 version of lower bound and round to integer:
WITHOUT_CLASSIFICATION	//first tick of series, or not too small a value and // one of first 3 ticks, or last tick to be displayed // set exact number of fractional digits to be shown // (no effect if showing "1e#"-style ticks):
WITHOUT_CLASSIFICATION	//did zero tick last iteration //clear flag //create tick label string: //show tick label if "1e#"-style and it's one // of the first two, if it's the first or last // in the set, or if it's 1-5; beyond that // show fewer as the values get larger:
WITHOUT_CLASSIFICATION	// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...
WITHOUT_CLASSIFICATION	// as far as I know, the Locale for the calendar only affects week // number calculations, and since DateTickUnit doesn't do week // arithmetic, the default locale (whatever it is) should be fine // here...
WITHOUT_CLASSIFICATION	// start with the current tick unit...
WITHOUT_CLASSIFICATION	// all tick labels have the same width (equal to the height of // the font)...
WITHOUT_CLASSIFICATION	// draw the tick marks and labels...
WITHOUT_CLASSIFICATION	// we call refresh ticks just to get the maximum width or height
WITHOUT_CLASSIFICATION	// calculate midnight of first monday after 1/1/1900 relative to // current locale
WITHOUT_CLASSIFICATION	// cycle through all the segments contained in the BaseTimeline // exception segment
WITHOUT_CLASSIFICATION	// this is not one of our included segment, skip it
WITHOUT_CLASSIFICATION	// first test for equality (contains or contained)
WITHOUT_CLASSIFICATION	// key not found
WITHOUT_CLASSIFICATION	// Compute number of labels
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	//gets the outline stroke width of the plot
WITHOUT_CLASSIFICATION	// first arrange without constraints, and see if this fits within // the required ranges...
WITHOUT_CLASSIFICATION	// first arrange without constraints, and see if this fits within // the required ranges...
WITHOUT_CLASSIFICATION	// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************
WITHOUT_CLASSIFICATION	//dmo: added this panel for colorbar control. (start dmo additions)
WITHOUT_CLASSIFICATION	//dmo: (end dmo additions)
WITHOUT_CLASSIFICATION	//  No op
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	// pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	// pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	//no initial zoom rectangle exists but the handler is set //as life handler unregister
WITHOUT_CLASSIFICATION	//float midX = (float) (minX + (plotArea.getWidth() * getRotateX())); //float midY = (float) (minY + (plotArea.getHeight() * getRotateY()));
WITHOUT_CLASSIFICATION	/// we have rotation
WITHOUT_CLASSIFICATION	// store the plot and its weight
WITHOUT_CLASSIFICATION	// store the plot and its weight
WITHOUT_CLASSIFICATION	// work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	// work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// after setting up all the subplots, the shared range axis may need // reconfiguring
WITHOUT_CLASSIFICATION	// adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	// if we are drawing a perfect circle, we need to readjust the top left // coordinates of the drawing area for the arcs to arrive at this // effect.
WITHOUT_CLASSIFICATION	// establish the coordinates of the top left corner of the drawing area
WITHOUT_CLASSIFICATION	// draw the sections at the top of the pie (and set up tooltips)...
WITHOUT_CLASSIFICATION	// the pie sections are arranged ANTICLOCKWISE
WITHOUT_CLASSIFICATION	// starts at the back and finishes at the front // (wrapping the left side)
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	//turn off anti-aliasing when filling rectangles
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	// is there an override?
WITHOUT_CLASSIFICATION	// is there an override?
WITHOUT_CLASSIFICATION	// nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// the explode area defines the max circle/ellipse for the exploded // pie sections.  it is defined by shrinking the linkArea by the // linkMargin factor.
WITHOUT_CLASSIFICATION	// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// no axis, no gridlines...
WITHOUT_CLASSIFICATION	// can't zoom domain axis
WITHOUT_CLASSIFICATION	// can't zoom domain axis
WITHOUT_CLASSIFICATION	// the above should cover all the options...
WITHOUT_CLASSIFICATION	// get the source coordinate - this plot has always a VERTICAL // orientation
WITHOUT_CLASSIFICATION	// get the source coordinate - this plot has always a VERTICAL // orientation
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// no domain axis to zoom
WITHOUT_CLASSIFICATION	// no domain axis to zoom
WITHOUT_CLASSIFICATION	// the indicator bounds is calculated from the templateValue (which // determines the minimum size), the maxTemplateValue (which, if // specified, provides a maximum size) and the actual value
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// extent
WITHOUT_CLASSIFICATION	// majorTickIncrement // majorTickLength // majorTickPaint // majorTickStroke // minorTickCount // minorTickLength // minorTickPaint // minorTickStroke // tickLabelOffset // tickLabelFont // tickLabelsVisible // tickLabelFormatter // firstTickLabelsVisible
WITHOUT_CLASSIFICATION	// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	// PAINT
WITHOUT_CLASSIFICATION	// STROKE
WITHOUT_CLASSIFICATION	// itemLabelFontList // baseItemLabelFont // itemLabelPaintList // baseItemLabelPaint // positiveItemLabelPositionList // basePositiveItemLabelPosition // negativeItemLabelPositionList // baseNegativeItemLabelPosition // itemLabelAnchorOffset // createEntityList // baseCreateEntities
WITHOUT_CLASSIFICATION	// for value in bounds, do the lookup...
WITHOUT_CLASSIFICATION	// for data in ascending order by x-value, we are (broadly) looking // for the index of the highest x-value that is less than xLow
WITHOUT_CLASSIFICATION	// we don't know anything about the ordering of the x-values, // but we can still skip any trailing values that fall outside the // range...
WITHOUT_CLASSIFICATION	// leave the y values (y1, y0) untranslated as it is going to be be // stacked up later by previous series values, after this it will be // translated.
WITHOUT_CLASSIFICATION	// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	// FIXME: calculate xx0
WITHOUT_CLASSIFICATION	// LEFT POLYGON
WITHOUT_CLASSIFICATION	// calculate the bar width
WITHOUT_CLASSIFICATION	// wait till we are at the last item for the row then draw the // whole stack at once
WITHOUT_CLASSIFICATION	// a list to store the series index and bar region, so we can draw // all the labels at the end...
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// clip left and right bounds to data area
WITHOUT_CLASSIFICATION	// clip left and right bounds to data area
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// calculate bar width...
WITHOUT_CLASSIFICATION	// FIXME: add setBaseItemLabelGenerator(CategoryItemLabelGenerator, //            boolean) ?
WITHOUT_CLASSIFICATION	//// ITEM LABEL PAINT  /////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// last series, so we are ready to draw the min and max
WITHOUT_CLASSIFICATION	// draw mean - SPECIAL AIMS REQUIREMENT...
WITHOUT_CLASSIFICATION	// From outlier array sort out which are outliers and put these into a // list If there are any farouts, set the flag on the // OutlierListCollection
WITHOUT_CLASSIFICATION	// avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	// avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// check if initial polygon needs to be clipped
WITHOUT_CLASSIFICATION	// never updated the subtrahend if it is implied to be zero
WITHOUT_CLASSIFICATION	// check if line segments are colinear
WITHOUT_CLASSIFICATION	// clear the point vectors
WITHOUT_CLASSIFICATION	//// ITEM LABELS VISIBLE //////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// we don't need the sign
WITHOUT_CLASSIFICATION	// fillType == TO_UPPER_BOUND
WITHOUT_CLASSIFICATION	/*      solve linear system with tridiagonal n by n matrix a        using Gaussian elimination *without* pivoting        where   a(i,i-1) = sub[i]  for 2<=i<=n        a(i,i)   = diag[i] for 1<=i<=n        a(i,i+1) = sup[i]  for 1<=i<=n-1        (the values sub[1], sup[n] are ignored)        right hand side vector b[1:n] is overwritten with solution        NOTE: 1...n is used in all arrays, 0 is unused */
WITHOUT_CLASSIFICATION	// this represents the situation // for drawing a horizontal bar.
WITHOUT_CLASSIFICATION	// draw median
WITHOUT_CLASSIFICATION	//  Check that the graph being served was created by the current user //  or that it begins with "public"
WITHOUT_CLASSIFICATION	// the textAlignment and the horizontalAlignment are separate things, // but it makes sense for the default textAlignment to match the // title's horizontal alignment...
WITHOUT_CLASSIFICATION	// we don't use the calendar or numberFormat fields, but equals(Object) // is failing without them being non-null
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	// adjust text bounds to match string position
WITHOUT_CLASSIFICATION	// now fetch the row data - need to bear in mind that the row // structure may not have an entry for the column key, but that we // have already checked that the key is valid for the 2D structure
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// set up the series names...
WITHOUT_CLASSIFICATION	// is the category valid?
WITHOUT_CLASSIFICATION	//create a temporary vector // set x to some arbitary value (used below)
WITHOUT_CLASSIFICATION	// look for any keys that we don't already know about...
WITHOUT_CLASSIFICATION	//  Iterate and find all keys below threshold percentThreshold
WITHOUT_CLASSIFICATION	// handle special case of BoxAndWhiskerDataset
WITHOUT_CLASSIFICATION	// standard case - plain XYDataset
WITHOUT_CLASSIFICATION	// hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	// hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Second object // -------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
WITHOUT_CLASSIFICATION	// get the current data item...
WITHOUT_CLASSIFICATION	// get the current data item...
WITHOUT_CLASSIFICATION	// The next 3 functions override the base-class implementation of // the DomainInfo interface.  Using saved limits (updated by // each updateTime() call), improves performance. //
WITHOUT_CLASSIFICATION	// deregister the collection as a change listener to each series in the // collection
WITHOUT_CLASSIFICATION	// alternatively, sometimes the first few days of the year are // considered to fall in the *last* week of the previous year...
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// if the series is sorted, the negative index is a result from // Collections.binarySearch() and tells us where to insert the // new item...otherwise it will be just -1 and we should just // append the value to the list...
WITHOUT_CLASSIFICATION	// pass mouse move event if some ChartMouseListener are listening
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// chart title // domain axis label // range axis label // data // orientation // include legend // tooltips? // URLs?
WITHOUT_CLASSIFICATION	// the SWTGraphics2D class doesn't handle GradientPaint well, so // replace the gradient painter from the default theme with a // standard painter...
WITHOUT_CLASSIFICATION	// Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	// Create the new font and set it into the title // label
WITHOUT_CLASSIFICATION	// create the new color and set it to the // SwtPaintCanvas
WITHOUT_CLASSIFICATION	// row 2: outline color
WITHOUT_CLASSIFICATION	// Use a SwtPaintCanvas to show the color, note that we must set the // heightHint.
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// now create a new title and replace the existing title, several // things should happen: // (1) Adding the new title should trigger an immediate //     ChartChangeEvent; // (2) Modifying the new title should trigger a ChartChangeEvent; // (3) Modifying the old title should NOT trigger a ChartChangeEvent
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	// a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	//gridBandPaint
WITHOUT_CLASSIFICATION	//private double angle;
WITHOUT_CLASSIFICATION	//private double baseRadius;
WITHOUT_CLASSIFICATION	//private double arrowWidth;
WITHOUT_CLASSIFICATION	//private double labelOffset;
WITHOUT_CLASSIFICATION	// font
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// ok, exception is expected
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// dateFormatOverride
WITHOUT_CLASSIFICATION	// range
WITHOUT_CLASSIFICATION	// check that setting the max date to something on or before the // current min date works...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	//private boolean autoRangeStickyZero;
WITHOUT_CLASSIFICATION	// now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	// now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	// set axis bounds to be both greater than 1
WITHOUT_CLASSIFICATION	// check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	// check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	// tickLabelFont
WITHOUT_CLASSIFICATION	// advance line Paint
WITHOUT_CLASSIFICATION	// Add exception in included segments
WITHOUT_CLASSIFICATION	// Saturday and Sundays are non business hours
WITHOUT_CLASSIFICATION	/** These constants control test cycles in the validateXXXX methods. */
WITHOUT_CLASSIFICATION	/** These constants control test cycles in the validateXXXX methods. */
WITHOUT_CLASSIFICATION	// 1-ms test timeline using 5 included and 2 excluded segments. // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 20 21 .. // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. // |  |  |  |  |  |EE|EE|  |  |  |  |  |EE|EE|  |  |  |  |  |  |EE|EE|    <-- msTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+.. //  \_________  ________/            \_/ //            \/                      | //       segment group         segment size = 1 ms //
WITHOUT_CLASSIFICATION	// 1-ms test timeline (with a baseTimeline) using 2 included and 2 // excluded segments centered inside each base segment // // The ms2Timeline without a base would look like this: // //    timeline start time = 1 //      | //      v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //    \____  _____/            \_/ //         \/                   | //    segment group      segment size = 1 ms // // With the base timeline some originally included segments are now // removed (see "xx" below): // //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|EE|xx|xx|EE|EE|  |  |EE|    <-- ms2Timeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //
WITHOUT_CLASSIFICATION	// test monday though friday timeline
WITHOUT_CLASSIFICATION	// find first Monday after 2001-01-01
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test construction process //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// verify attributes set during object construction
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // main include and excluded segments //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test timeline translations //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// verify all timeline segments included in the // baseTimeline.segment are now exceptions
WITHOUT_CLASSIFICATION	// 1-Jan-2000
WITHOUT_CLASSIFICATION	// tick label insets...
WITHOUT_CLASSIFICATION	// tick mark paint...
WITHOUT_CLASSIFICATION	// negativeArrowVisible;
WITHOUT_CLASSIFICATION	// axisLinePaint
WITHOUT_CLASSIFICATION	// autoRange
WITHOUT_CLASSIFICATION	// autoRangeMinimumSize
WITHOUT_CLASSIFICATION	//private double fixedAutoRange;
WITHOUT_CLASSIFICATION	//private boolean autoTickUnitSelection;
WITHOUT_CLASSIFICATION	//private int autoTickIndex; //protected double reservedForTickLabels; //protected double reservedForAxisLabel;
WITHOUT_CLASSIFICATION	// TBLRC // 00001 - center item only
WITHOUT_CLASSIFICATION	// TBLRC // 00001 - center item only
WITHOUT_CLASSIFICATION	// TBLRC // 00100 - left item only
WITHOUT_CLASSIFICATION	// TBLRC // 10101 - top, left and center
WITHOUT_CLASSIFICATION	// TBLRC // 10110 - top, left and right
WITHOUT_CLASSIFICATION	// TBLRC // 11000 - top and bottom only
WITHOUT_CLASSIFICATION	// TBLRC // 11011
WITHOUT_CLASSIFICATION	// TBLRC // 11111 - all
WITHOUT_CLASSIFICATION	// standard test
WITHOUT_CLASSIFICATION	// Y format
WITHOUT_CLASSIFICATION	// some setup...
WITHOUT_CLASSIFICATION	// some setup...
WITHOUT_CLASSIFICATION	// parent plot...
WITHOUT_CLASSIFICATION	// innerSeparatorExtension
WITHOUT_CLASSIFICATION	// domainAxis - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// rangeAxis - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// renderer - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// domainGridlinesVisible
WITHOUT_CLASSIFICATION	// domainGridlinePosition
WITHOUT_CLASSIFICATION	// rangeGridlinePaint
WITHOUT_CLASSIFICATION	// anchorValue
WITHOUT_CLASSIFICATION	// rangeCrosshairPaint
WITHOUT_CLASSIFICATION	// rangeCrosshairPaint
WITHOUT_CLASSIFICATION	// range markers - no longer separate fields but test anyway...
WITHOUT_CLASSIFICATION	// fixed legend items
WITHOUT_CLASSIFICATION	// domainCrosshairPaint
WITHOUT_CLASSIFICATION	// check for independence
WITHOUT_CLASSIFICATION	// check for independence
WITHOUT_CLASSIFICATION	// now check that the chart is usable...
WITHOUT_CLASSIFICATION	// now check that the chart is usable...
WITHOUT_CLASSIFICATION	// now make a change to the renderer and see if it triggers a plot // change event...
WITHOUT_CLASSIFICATION	// should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	// if multiple axes are mapped, the first in the list should be // returned...
WITHOUT_CLASSIFICATION	// if multiple axes are mapped, the first in the list should be // returned...
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// units
WITHOUT_CLASSIFICATION	// tick labels visible
WITHOUT_CLASSIFICATION	// tick size
WITHOUT_CLASSIFICATION	// the clone and the original share a reference to the SAME dataset
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// labelType...
WITHOUT_CLASSIFICATION	// pieIndex...
WITHOUT_CLASSIFICATION	// ignoreZeroValues
WITHOUT_CLASSIFICATION	// sectionOutlinesVisible
WITHOUT_CLASSIFICATION	// sectionOutlineStroke
WITHOUT_CLASSIFICATION	// labelBackgroundPaint
WITHOUT_CLASSIFICATION	// labelGenerator
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// verify independence of fixed legend item collection
WITHOUT_CLASSIFICATION	// stroke sequence
WITHOUT_CLASSIFICATION	// stroke index
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// minorTickCount
WITHOUT_CLASSIFICATION	// try a default instance
WITHOUT_CLASSIFICATION	// try a customised instance
WITHOUT_CLASSIFICATION	// seriesVisibleInLegend
WITHOUT_CLASSIFICATION	//upper bound and margin OK; get log10 of upper bound
WITHOUT_CLASSIFICATION	// fillPaintList
WITHOUT_CLASSIFICATION	//apply upper margin by increasing upper bound:
WITHOUT_CLASSIFICATION	// baseStroke
WITHOUT_CLASSIFICATION	// Reference: http://www.antigrain.com/research/bezier_interpolation/
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// initialize ChartPanel-specific tool tip delays with // values the from ToolTipManager.sharedInstance()
WITHOUT_CLASSIFICATION	// only draw if we have good values
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// properties // save // print // zoom // tooltips
WITHOUT_CLASSIFICATION	// stop listening for changes to the existing chart
WITHOUT_CLASSIFICATION	// set up popup menu...
WITHOUT_CLASSIFICATION	// itemLabelsVisible
WITHOUT_CLASSIFICATION	// make the background of the buffer clear and transparent
WITHOUT_CLASSIFICATION	// for MacOSX we can't use the CTRL key for mouse drags, see: // http://developer.apple.com/qa/qa2004/qa1362.html
WITHOUT_CLASSIFICATION	// add the new chart
WITHOUT_CLASSIFICATION	// work out if scaling is required...
WITHOUT_CLASSIFICATION	// first determine the size of the chart rendering area...
WITHOUT_CLASSIFICATION	// do we need to resize the buffer?
WITHOUT_CLASSIFICATION	// are we using the chart buffer?
WITHOUT_CLASSIFICATION	// clear the flag
WITHOUT_CLASSIFICATION	// do we need to redraw the buffer?
WITHOUT_CLASSIFICATION	// redraw the zoom rectangle (if present) - if useBuffer is false, // we use XOR so we can XOR the rectangle away again without redrawing // the chart
WITHOUT_CLASSIFICATION	// redrawing the chart every time...
WITHOUT_CLASSIFICATION	// zap the buffer onto the panel...
WITHOUT_CLASSIFICATION	// does nothing - override if necessary
WITHOUT_CLASSIFICATION	// many of the zoom methods need a screen location - all we have is // the zoomPoint, but it might be null.  Here we grab the x and y // coordinates, or use defaults...
WITHOUT_CLASSIFICATION	// itemLabelFontList
WITHOUT_CLASSIFICATION	// restore original tooltip dealys
WITHOUT_CLASSIFICATION	// can we pan this plot?
WITHOUT_CLASSIFICATION	// the actual panning occurs later in the mouseDragged()  // method
WITHOUT_CLASSIFICATION	// if the popup menu has already been triggered, then ignore dragging...
WITHOUT_CLASSIFICATION	// handle panning if we have a start point
WITHOUT_CLASSIFICATION	// if no initial zoom point was set, ignore dragging...
WITHOUT_CLASSIFICATION	// erase the previous zoom rectangle (if any).  We only need to do // this is we are using XOR mode, which we do when we're not using // the buffer (if there is a buffer, then at the end of this method we // just trigger a repaint)
WITHOUT_CLASSIFICATION	// selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	// Draw the new zoom rectangle...
WITHOUT_CLASSIFICATION	// with no buffer, we use XOR to draw the rectangle "over" the // chart...
WITHOUT_CLASSIFICATION	// if we've been panning, we need to reset now that the mouse is  // released...
WITHOUT_CLASSIFICATION	// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true
WITHOUT_CLASSIFICATION	// erase the zoom rectangle
WITHOUT_CLASSIFICATION	// force a redraw // new entity code...
WITHOUT_CLASSIFICATION	// we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	// we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	// Set XOR mode to draw the zoom rectangle
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	// use reflection to get the SVG string
WITHOUT_CLASSIFICATION	// Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	// Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	// Reset to the default 'overwrite' mode
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// we suppress shadow generation, because SVG is a vector format and // the shadow effect is applied via bitmap effects...
WITHOUT_CLASSIFICATION	// pdfDocument class will be null so the function will return false
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// null will be returned
WITHOUT_CLASSIFICATION	// fetch listeners from local storage
WITHOUT_CLASSIFICATION	// here we need to update the UI for the popup menu, if the panel // has one...
WITHOUT_CLASSIFICATION	// we suppress shadow generation, because PDF is a vector format and // the shadow effect is applied via bitmap effects...
WITHOUT_CLASSIFICATION	// register as a listener with sub-components...
WITHOUT_CLASSIFICATION	// go through each zoom menu item and decide whether or not to // enable it...
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	// we create a new but empty chartMouseListeners list
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ----------------- * ChartFactory.java * ----------------- * (C) Copyright 2001-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Serge V. Grachov; *                   Joao Guilherme Del Valle; *                   Bill Kelemen; *                   Jon Iles; *                   Jelai Wang; *                   Richard Atkinson; *                   David Browning (for Australian Institute of Marine *                       Science); *                   Benoit Xhenseval; * * Changes * ------- * 19-Oct-2001 : Version 1, most methods transferred from JFreeChart.java (DG); * 22-Oct-2001 : Added methods to create stacked bar charts (DG); *               Renamed DataSource.java --> Dataset.java etc. (DG); * 31-Oct-2001 : Added 3D-effect vertical bar and stacked-bar charts, *               contributed by Serge V. Grachov (DG); * 07-Nov-2001 : Added a flag to control whether or not a legend is added to *               the chart (DG); * 17-Nov-2001 : For pie chart, changed dataset from CategoryDataset to *               PieDataset (DG); * 30-Nov-2001 : Removed try/catch handlers from chart creation, as the *               exception are now RuntimeExceptions, as suggested by Joao *               Guilherme Del Valle (DG); * 06-Dec-2001 : Added createCombinableXXXXXCharts methods (BK); * 12-Dec-2001 : Added createCandlestickChart() method (DG); * 13-Dec-2001 : Updated methods for charts with new renderers (DG); * 08-Jan-2002 : Added import for *               com.jrefinery.chart.combination.CombinedChart (DG); * 31-Jan-2002 : Changed the createCombinableVerticalXYBarChart() method to use *               renderer (DG); * 06-Feb-2002 : Added new method createWindPlot() (DG); * 23-Apr-2002 : Updates to the chart and plot constructor API (DG); * 21-May-2002 : Added new method createAreaChart() (JI); * 06-Jun-2002 : Added new method createGanttChart() (DG); * 11-Jun-2002 : Renamed createHorizontalStackedBarChart() *               --> createStackedHorizontalBarChart() for consistency (DG); * 06-Aug-2002 : Updated Javadoc comments (DG); * 21-Aug-2002 : Added createPieChart(CategoryDataset) method (DG); * 02-Oct-2002 : Fixed errors reported by Checkstyle (DG); * 09-Oct-2002 : Added methods including tooltips and URL flags (DG); * 06-Nov-2002 : Moved renderers into a separate package (DG); * 18-Nov-2002 : Changed CategoryDataset to TableDataset (DG); * 21-Mar-2003 : Incorporated HorizontalCategoryAxis3D, see bug id 685501 (DG); * 13-May-2003 : Merged some horizontal and vertical methods (DG); * 24-May-2003 : Added support for timeline in createHighLowChart (BK); * 07-Jul-2003 : Added createHistogram() method contributed by Jelai Wang (DG); * 27-Jul-2003 : Added createStackedAreaXYChart() method (RA); * 05-Aug-2003 : added new method createBoxAndWhiskerChart (DB); * 08-Sep-2003 : Changed ValueAxis API (DG); * 07-Oct-2003 : Added stepped area XY chart contributed by Matthias Rose (DG); * 06-Nov-2003 : Added createWaterfallChart() method (DG); * 20-Nov-2003 : Set rendering order for 3D bar charts to fix overlapping *               problems (DG); * 25-Nov-2003 : Added createWaferMapChart() method (DG); * 23-Dec-2003 : Renamed createPie3DChart() --> createPieChart3D for *               consistency (DG); * 20-Jan-2004 : Added createPolarChart() method (DG); * 28-Jan-2004 : Fixed bug (882890) with axis range in *               createStackedXYAreaChart() method (DG); * 25-Feb-2004 : Renamed XYToolTipGenerator --> XYItemLabelGenerator (DG); * 11-Mar-2004 : Updated for pie chart changes (DG); * 27-Apr-2004 : Added new createPieChart() method contributed by Benoit *               Xhenseval (see RFE 942195) (DG); * 11-May-2004 : Split StandardCategoryItemLabelGenerator *               --> StandardCategoryToolTipGenerator and *               StandardCategoryLabelGenerator (DG); * 06-Jan-2005 : Removed deprecated methods (DG); * 27-Jan-2005 : Added new constructor to LineAndShapeRenderer (DG); * 28-Feb-2005 : Added docs to createBubbleChart() method (DG); * 17-Mar-2005 : Added createRingPlot() method (DG); * 21-Apr-2005 : Replaced Insets with RectangleInsets (DG); * 29-Nov-2005 : Removed signal chart (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 26-Jan-2006 : Corrected API docs for createScatterPlot() (DG); * 23-Aug-2006 : Modified createStackedXYAreaChart() to use *               StackedXYAreaRenderer2, because StackedXYAreaRenderer doesn't *               handle negative values (DG); * 27-Sep-2006 : Update createPieChart() method for deprecated code (DG); * 29-Nov-2006 : Update createXYBarChart() to use a time based tool tip *               generator is a DateAxis is requested (DG); * 17-Jan-2007 : Added createBoxAndWhiskerChart() method from patch 1603937 *               submitted by Darren Jung (DG); * 10-Jul-2007 : Added new methods to create pie charts with locale for *               section label and tool tip formatting (DG); * 14-Aug-2008 : Added ChartTheme facility (DG); * 23-Oct-2008 : Check for legacy theme in setChartTheme() and reset default *               bar painters (DG); * 20-Dec-2008 : In createStackedAreaChart(), set category margin to 0.0 (DG); * 02-Jul-2013 : Use ParamChecks class (DG); *  */
WITHOUT_CLASSIFICATION	//get absolute value of log10 value
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	// suppresses compiler warning
WITHOUT_CLASSIFICATION	// create the renderer...
WITHOUT_CLASSIFICATION	// create the plot...
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	// forces recalculation of the axis range
WITHOUT_CLASSIFICATION	// reduce the default margins
WITHOUT_CLASSIFICATION	// override default
WITHOUT_CLASSIFICATION	// get desired width and height from somewhere then...
WITHOUT_CLASSIFICATION	// change rendering order to ensure that bar overlapping is the // right way around
WITHOUT_CLASSIFICATION	// change rendering order to ensure that bar overlapping is the // right way around
WITHOUT_CLASSIFICATION	// no need to instantiate this    
WITHOUT_CLASSIFICATION	// seems to be the same...
WITHOUT_CLASSIFICATION	/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------- * ChartUtilities.java * ------------------- * (C) Copyright 2001-2013, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Wolfgang Irler; *                   Richard Atkinson; *                   Xavier Poinsard; * * Changes * ------- * 11-Dec-2001 : Version 1.  The JPEG method comes from Wolfgang Irler's *               JFreeChartServletDemo class (DG); * 23-Jan-2002 : Changed saveChartAsXXX() methods to pass IOExceptions back to *               caller (DG); * 26-Jun-2002 : Added image map methods (DG); * 05-Aug-2002 : Added writeBufferedImage methods *               Modified writeImageMap method to support flexible image *               maps (RA); * 26-Aug-2002 : Added saveChartAsJPEG and writeChartAsJPEG methods with info *               objects (RA); * 05-Sep-2002 : Added writeImageMap() method to support OverLIB *               - http://www.bosrup.com/web/overlib (RA); * 26-Sep-2002 : Fixed errors reported by Checkstyle (DG); * 17-Oct-2002 : Exposed JPEG quality setting and PNG compression level as *               parameters (DG); * 25-Oct-2002 : Fixed writeChartAsJPEG() empty method bug (DG); * 13-Mar-2003 : Updated writeImageMap method as suggested by Xavier Poinsard *               (see Feature Request 688079) (DG); * 12-Aug-2003 : Added support for custom image maps using *               ToolTipTagFragmentGenerator and URLTagFragmentGenerator (RA); * 02-Sep-2003 : Separated PNG encoding from writing chart to an *               OutputStream (RA); * 04-Dec-2003 : Chart draw() method modified to include anchor point (DG); * 20-Feb-2004 : Edited Javadocs and added argument checking (DG); * 05-Apr-2004 : Fixed problem with buffered image type (DG); * 01-Aug-2004 : Modified to use EncoderUtil for all image encoding (RA); * 02-Aug-2004 : Delegated image map related functionality to ImageMapUtil (RA); * 13-Jan-2005 : Renamed ImageMapUtil --> ImageMapUtilities, removed method *               writeImageMap(PrintWriter, String, ChartRenderingInfo) which *               exists in ImageMapUtilities (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 06-Feb-2006 : API doc update (DG); * 19-Mar-2007 : Use try-finally to close output stream in saveChartAsXXX() *               methods (DG); * 10-Jan-2008 : Fix bug 1868251 - don't create image with transparency when *               saving to JPEG format (DG); * 02-Jul-2013 : Use ParamChecks class (DG); * */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape visible = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape filled = */
WITHOUT_CLASSIFICATION	/* shape outlined */
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* line visible */
WITHOUT_CLASSIFICATION	/* line visible */
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* line visible = */
WITHOUT_CLASSIFICATION	/* line visible = */
WITHOUT_CLASSIFICATION	/* line visible = */
WITHOUT_CLASSIFICATION	// positiveItemLabelPosition;
WITHOUT_CLASSIFICATION	// work out if scaling is required...
WITHOUT_CLASSIFICATION	/* shape outlined = */
WITHOUT_CLASSIFICATION	/* line visible = */
WITHOUT_CLASSIFICATION	// negativeItemLabelPositionList;
WITHOUT_CLASSIFICATION	// ----------------- // --- Constants --- // -----------------
WITHOUT_CLASSIFICATION	// ------------------------ // --- Member Variables --- // ------------------------
WITHOUT_CLASSIFICATION	// -------------------- // --- Constructors --- // --------------------
WITHOUT_CLASSIFICATION	// -------------------------- // --- ChartPanel Methods --- // --------------------------
WITHOUT_CLASSIFICATION	// ---------------------- // --- Public Methods --- // ----------------------
WITHOUT_CLASSIFICATION	// ----------------------- // --- Private Methods --- // -----------------------
WITHOUT_CLASSIFICATION	// do nothing at all
WITHOUT_CLASSIFICATION	// now process the plot if there is one
WITHOUT_CLASSIFICATION	// process all domain axes
WITHOUT_CLASSIFICATION	// process all domain axes
WITHOUT_CLASSIFICATION	// process all range axes
WITHOUT_CLASSIFICATION	// process all range axes
WITHOUT_CLASSIFICATION	// process all renderers
WITHOUT_CLASSIFICATION	// process all renderers
WITHOUT_CLASSIFICATION	// process all annotations
WITHOUT_CLASSIFICATION	// BarRenderer
WITHOUT_CLASSIFICATION	// BarRenderer3D
WITHOUT_CLASSIFICATION	// LineRenderer3D
WITHOUT_CLASSIFICATION	//  StatisticalBarRenderer
WITHOUT_CLASSIFICATION	// MinMaxCategoryRenderer
WITHOUT_CLASSIFICATION	// handle GradientPaint as a special case
WITHOUT_CLASSIFICATION	// create storage for listeners...
WITHOUT_CLASSIFICATION	// add the chart title, if one has been specified...
WITHOUT_CLASSIFICATION	// this fires a ChartChangeEvent
WITHOUT_CLASSIFICATION	// if the flag is being set to true, there may be queued up changes...
WITHOUT_CLASSIFICATION	// register as a listener with sub-components...
WITHOUT_CLASSIFICATION	// seem to be the same...
WITHOUT_CLASSIFICATION	// draw the label
WITHOUT_CLASSIFICATION	// clear the section attributes so that the theme's DrawingSupplier // will be used
WITHOUT_CLASSIFICATION	// for efficiency, we just use the first, last and middle items to // compute a hashCode...
WITHOUT_CLASSIFICATION	// for efficiency, we just use the first, last and middle items to // compute a hashCode...
WITHOUT_CLASSIFICATION	// default is to notify listeners when the // chart changes
WITHOUT_CLASSIFICATION	// added the following hint because of  // http://stackoverflow.com/questions/7785082/
WITHOUT_CLASSIFICATION	// record the chart area, if info is requested...
WITHOUT_CLASSIFICATION	// ensure no drawing occurs outside chart area...
WITHOUT_CLASSIFICATION	// draw the chart background...
WITHOUT_CLASSIFICATION	// draw the title and subtitles...
WITHOUT_CLASSIFICATION	// draw the plot (axes and data visualisation)
WITHOUT_CLASSIFICATION	// private boolean borderVisible; // private transient Stroke borderStroke; // private transient Paint borderPaint;
WITHOUT_CLASSIFICATION	// get a locale-specific resource bundle...
WITHOUT_CLASSIFICATION	// load only when required
WITHOUT_CLASSIFICATION	// use ImageIcon because it waits for the image to load...
WITHOUT_CLASSIFICATION	// don't zoom unless the mouse pointer is in the plot's data area
WITHOUT_CLASSIFICATION	// do not notify while zooming each axis
WITHOUT_CLASSIFICATION	// this generates the change event too
WITHOUT_CLASSIFICATION	// if we don't have at least 2 (x, y) coordinates, just return
WITHOUT_CLASSIFICATION	// now try to reject equality
WITHOUT_CLASSIFICATION	// now try to reject equality
WITHOUT_CLASSIFICATION	// seem to be the same
WITHOUT_CLASSIFICATION	// seem to be the same
WITHOUT_CLASSIFICATION	// now try to reject equality...
WITHOUT_CLASSIFICATION	// now try to reject equality...
WITHOUT_CLASSIFICATION	/* Rectangle2D hotspot = */
WITHOUT_CLASSIFICATION	// seems to be the same...
WITHOUT_CLASSIFICATION	// FIXME //SerialUtilities.writeImage(this.image, stream);
WITHOUT_CLASSIFICATION	// FIXME //this.image = SerialUtilities.readImage(stream);
WITHOUT_CLASSIFICATION	// simple case
WITHOUT_CLASSIFICATION	// by default the outline and background won't be visible
WITHOUT_CLASSIFICATION	// now try to reject equality
WITHOUT_CLASSIFICATION	// create plot ...
WITHOUT_CLASSIFICATION	// add a second dataset and renderer...
WITHOUT_CLASSIFICATION	// return a new chart containing the overlaid plot...
WITHOUT_CLASSIFICATION	// create dataset 1...
WITHOUT_CLASSIFICATION	// seem to be the same
WITHOUT_CLASSIFICATION	// now try to reject equality...
WITHOUT_CLASSIFICATION	// seems to be the same...
WITHOUT_CLASSIFICATION	// baseNegativeItemLabelPosition;
WITHOUT_CLASSIFICATION	// here we change the AffineTransform so we can draw the annotation // to a larger area and scale it down into the display area // afterwards, the original transform is restored
WITHOUT_CLASSIFICATION	// compute transform matrix elements via sample points. Assume no // rotation or shear.
WITHOUT_CLASSIFICATION	//  create transform & transform shape
WITHOUT_CLASSIFICATION	//SerialUtilities.writeImage(this.image, stream);
WITHOUT_CLASSIFICATION	//this.image = SerialUtilities.readImage(stream);
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	// apply the margins - these should apply to the exponent range
WITHOUT_CLASSIFICATION	// even though the axis is not visible, we need ticks for the // gridlines...
WITHOUT_CLASSIFICATION	// add minor ticks (for gridlines)
WITHOUT_CLASSIFICATION	// select a tick unit that is the next one bigger than the current // (log) range divided by 50
WITHOUT_CLASSIFICATION	// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label
WITHOUT_CLASSIFICATION	// while the tick labels overlap and there are more tick sizes available, // choose the next bigger label
WITHOUT_CLASSIFICATION	// what is the available space for one unit?
WITHOUT_CLASSIFICATION	// what is the available space for one unit?
WITHOUT_CLASSIFICATION	// there are no more candidates
WITHOUT_CLASSIFICATION	// there are no more candidates
WITHOUT_CLASSIFICATION	// all tick labels have the same width (equal to the height of the // font)...
WITHOUT_CLASSIFICATION	// look at lower and upper bounds...
WITHOUT_CLASSIFICATION	// no need to create entity if we can't save it anyways...
WITHOUT_CLASSIFICATION	// it is unlikely that 'state' will be null, but check anyway...
WITHOUT_CLASSIFICATION	// It's up to the plot which clones up to restore the correct references
WITHOUT_CLASSIFICATION	// draw the category labels and axis label
WITHOUT_CLASSIFICATION	// regular number axis
WITHOUT_CLASSIFICATION	// regular number axis
WITHOUT_CLASSIFICATION	// displayStart > displayEnd, need to handle split
WITHOUT_CLASSIFICATION	// displayStart > displayEnd, need to handle split
WITHOUT_CLASSIFICATION	// create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	// if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	// if the axis has a fixed dimension, return it...
WITHOUT_CLASSIFICATION	// get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	//negative values not allowed
WITHOUT_CLASSIFICATION	// no plot, no data.
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	// if the axis has a fixed dimension, return it...
WITHOUT_CLASSIFICATION	// get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	// baseCreateEntities;
WITHOUT_CLASSIFICATION	// add space for the outer tick labels, if any...
WITHOUT_CLASSIFICATION	// draw minor tick marks
WITHOUT_CLASSIFICATION	// work out the initial gap
WITHOUT_CLASSIFICATION	// this is the last period, but it is only partially visible // so check that the label will fit before displaying it...
WITHOUT_CLASSIFICATION	// this is the first period, but it is only partially visible // so check that the label will fit before displaying it...
WITHOUT_CLASSIFICATION	// work out the trailing gap
WITHOUT_CLASSIFICATION	// draw the arrow...
WITHOUT_CLASSIFICATION	// need to work out the space used by the tick labels... // so we can update the cursor...
WITHOUT_CLASSIFICATION	// calculate the max size of the tick labels (if visible)...
WITHOUT_CLASSIFICATION	// if autoRange is true, then the current range is irrelevant
WITHOUT_CLASSIFICATION	//setup number formatter obj
WITHOUT_CLASSIFICATION	//setup number formatter obj
WITHOUT_CLASSIFICATION	// if negative then set flag and make positive
WITHOUT_CLASSIFICATION	// if negative then set flag and make positive
WITHOUT_CLASSIFICATION	//return value; negate if original value was negative:
WITHOUT_CLASSIFICATION	//invert adjustLog10
WITHOUT_CLASSIFICATION	//calculate floor using negative value:
WITHOUT_CLASSIFICATION	//calculate power using positive value; then negate
WITHOUT_CLASSIFICATION	//negative values are allowed
WITHOUT_CLASSIFICATION	//calculate ceil using negative value:
WITHOUT_CLASSIFICATION	// ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	// legendTextPaint
WITHOUT_CLASSIFICATION	//setup for "1e#"-style tick labels or regular // numeric tick labels, depending on flag:
WITHOUT_CLASSIFICATION	// if < 10 then //increase so 0 translates to 0
WITHOUT_CLASSIFICATION	//negative values are allowed //parameter value is > 10 // The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	//parameter value is < -10 //calculate log using positive value:
WITHOUT_CLASSIFICATION	//parameter value is -10 > val < 10 //use as-is
WITHOUT_CLASSIFICATION	//parameter value is -10 > val < 10 //use as-is
WITHOUT_CLASSIFICATION	//negative values not allowed //parameter value is > 0 // The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	//parameter value is <= 0 //use as-is
WITHOUT_CLASSIFICATION	//parameter value is > 10 // The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	//parameter value is > 0 // The Math.log() function is based on e not 10.
WITHOUT_CLASSIFICATION	//no real data present
WITHOUT_CLASSIFICATION	//get lower bound value
WITHOUT_CLASSIFICATION	//actual data is present //get lower bound value
WITHOUT_CLASSIFICATION	//strict flag set, allow-negatives not set and values <= 0
WITHOUT_CLASSIFICATION	//apply lower margin by decreasing lower bound:
WITHOUT_CLASSIFICATION	//lower bound and margin OK; get log10 of lower bound
WITHOUT_CLASSIFICATION	//get absolute value of log10 value
WITHOUT_CLASSIFICATION	//need to account for case where upper==0.0
WITHOUT_CLASSIFICATION	//setup flag based on bounds values
WITHOUT_CLASSIFICATION	//get lower bound value:
WITHOUT_CLASSIFICATION	//get upper bound value
WITHOUT_CLASSIFICATION	//get log10 version of upper bound and round to integer:
WITHOUT_CLASSIFICATION	//for each power of 10 value; create ten ticks
WITHOUT_CLASSIFICATION	//for each tick to be displayed
WITHOUT_CLASSIFICATION	//small log values in use; create numeric value for tick
WITHOUT_CLASSIFICATION	//create tick label (force use of fmt obj):
WITHOUT_CLASSIFICATION	//no tick label to be shown
WITHOUT_CLASSIFICATION	//create tick label:
WITHOUT_CLASSIFICATION	//get lower bound value:
WITHOUT_CLASSIFICATION	//if autorange still below minimum then adjust by 1% // (can be needed when minRange is very small):
WITHOUT_CLASSIFICATION	//get upper bound value
WITHOUT_CLASSIFICATION	//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):
WITHOUT_CLASSIFICATION	//get log10 version of lower bound and round to integer:
WITHOUT_CLASSIFICATION	//get log10 version of upper bound and round to integer:
WITHOUT_CLASSIFICATION	//for each tick to be displayed
WITHOUT_CLASSIFICATION	//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks
WITHOUT_CLASSIFICATION	//showing "1e#"-style ticks or negative exponent // generating tick value between 0 & 1; show fewer
WITHOUT_CLASSIFICATION	//tick value not between 0 & 1 //show tick label if it's the first or last in // the set, or if it's 1-5; beyond that show // fewer as the values get larger:
WITHOUT_CLASSIFICATION	//not small log values in use; allow for values <= 0 //if did zero tick last iter then //decrement to do 1.0 tick now //calculate power-of-ten value for tick:
WITHOUT_CLASSIFICATION	// did not do zero tick last iteration
WITHOUT_CLASSIFICATION	//tick value is 1.0 and 0.0 is within data range //set tick value to zero //indicate zero tick
WITHOUT_CLASSIFICATION	// if past highest data value then exit // method
WITHOUT_CLASSIFICATION	//tick value not below lowest data value
WITHOUT_CLASSIFICATION	//for each tick with a label to be displayed
WITHOUT_CLASSIFICATION	//small log values in use
WITHOUT_CLASSIFICATION	//first tick of group; create label text
WITHOUT_CLASSIFICATION	//not "log10"-type label
WITHOUT_CLASSIFICATION	//if small log values and lower bound value too small // then set to a small value (don't allow <= 0):
WITHOUT_CLASSIFICATION	//only 1 power of 10 value, it's > 0 and its resulting // tick value will be larger than lower bound of data //decrement to generate more ticks
WITHOUT_CLASSIFICATION	//tick value not below lowest data value
WITHOUT_CLASSIFICATION	// ITEM_LABEL_PAINT
WITHOUT_CLASSIFICATION	//if flag then //create "log10"-type label
WITHOUT_CLASSIFICATION	//if flag then //create "1e#"-type label
WITHOUT_CLASSIFICATION	//not "1e#"-type label // if positive exponent then // make integer
WITHOUT_CLASSIFICATION	//negative exponent; create fractional value //set exact number of fractional digits to // be shown:
WITHOUT_CLASSIFICATION	//not small log values in use; allow for values <= 0 //if did zero tick last iter then
WITHOUT_CLASSIFICATION	//decrement to do 1.0 tick now
WITHOUT_CLASSIFICATION	//first tick of group // did not do zero tick last // iteration
WITHOUT_CLASSIFICATION	// not first or last tick on graph and value // is 1.0 //change value to 0.0 //indicate zero tick //create label for tick
WITHOUT_CLASSIFICATION	//first or last tick on graph or value is 1.0 //create label for tick:
WITHOUT_CLASSIFICATION	//create "log10"-type label
WITHOUT_CLASSIFICATION	//create "1e#"-type label
WITHOUT_CLASSIFICATION	// did zero tick last iteration //no label //clear flag
WITHOUT_CLASSIFICATION	// not first tick of group //no label //make sure flag cleared
WITHOUT_CLASSIFICATION	//if past highest data value then exit method
WITHOUT_CLASSIFICATION	//create tick object and add to list:
WITHOUT_CLASSIFICATION	//using exponents or force-formatter flag is set // (convert 'E' to lower-case 'e'):
WITHOUT_CLASSIFICATION	// populate deprecated fields
WITHOUT_CLASSIFICATION	// usually the range will be a DateRange, but if it isn't do a // conversion...
WITHOUT_CLASSIFICATION	// check the new minimum date relative to the current maximum date
WITHOUT_CLASSIFICATION	// check the new maximum date relative to the current minimum date
WITHOUT_CLASSIFICATION	// long result = calendar.getTimeInMillis(); // won't work with JDK 1.3
WITHOUT_CLASSIFICATION	// date formatters
WITHOUT_CLASSIFICATION	// milliseconds
WITHOUT_CLASSIFICATION	// look at lower and upper bounds...
WITHOUT_CLASSIFICATION	// create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	// if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	// seconds
WITHOUT_CLASSIFICATION	// minutes
WITHOUT_CLASSIFICATION	// hours
WITHOUT_CLASSIFICATION	// days
WITHOUT_CLASSIFICATION	// months
WITHOUT_CLASSIFICATION	// years
WITHOUT_CLASSIFICATION	//Timeline hasn't method getStartTime()
WITHOUT_CLASSIFICATION	// start with the current tick unit...
WITHOUT_CLASSIFICATION	// then extrapolate...
WITHOUT_CLASSIFICATION	// start with a unit that is at least 1/10th of the axis length
WITHOUT_CLASSIFICATION	// now extrapolate based on label height and unit height...
WITHOUT_CLASSIFICATION	// make final selection...
WITHOUT_CLASSIFICATION	// all tick labels have the same width (equal to the height of // the font)...
WITHOUT_CLASSIFICATION	// could add a flag to make the following correction optional...
WITHOUT_CLASSIFICATION	// could add a flag to make the following correction optional...
WITHOUT_CLASSIFICATION	// work out the value, label and position
WITHOUT_CLASSIFICATION	// work out the value, label and position
WITHOUT_CLASSIFICATION	// even though the axis is not visible, we need to refresh ticks in // case the grid is being drawn...
WITHOUT_CLASSIFICATION	// draw the tick marks and labels...
WITHOUT_CLASSIFICATION	// draw the axis label (note that 'state' is passed in *and* // returned)...
WITHOUT_CLASSIFICATION	// when zooming to sub-millisecond ranges, it can be the case that // adjEnd == adjStart...and we can't have an axis with zero length // so we apply this instead:
WITHOUT_CLASSIFICATION	// 'dateTickUnit' is immutable : no need to clone
WITHOUT_CLASSIFICATION	// 'tickMarkPosition' is immutable : no need to clone
WITHOUT_CLASSIFICATION	// if there is no specific font, use the general one...
WITHOUT_CLASSIFICATION	// if there is no specific paint, use the general one...
WITHOUT_CLASSIFICATION	// find first excluded base segment starting fromDomainValue
WITHOUT_CLASSIFICATION	// draw the category labels and axis label
WITHOUT_CLASSIFICATION	// get the axis label size and update the space object...
WITHOUT_CLASSIFICATION	// calculate the max size of the tick labels (if visible)...
WITHOUT_CLASSIFICATION	// nothing required
WITHOUT_CLASSIFICATION	// sanity check for data area...
WITHOUT_CLASSIFICATION	// step down in size until the current size is too small or there are  // no more units
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // predetermined segments sizes ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // other constants ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // private attributes ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // static block ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// make a time zone with no DST for our Calendar calculations
WITHOUT_CLASSIFICATION	// calculate midnight of first monday after 1/1/1900 relative to // current locale
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // constructors and factory methods ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // operations ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// verify that baseTimeline is compatible with us
WITHOUT_CLASSIFICATION	// - partialTimeInException;
WITHOUT_CLASSIFICATION	// - partialTimeInException;
WITHOUT_CLASSIFICATION	//return toTimelineValue(dateDomainValue.getTime());
WITHOUT_CLASSIFICATION	// calculate the result as if no exceptions
WITHOUT_CLASSIFICATION	// adjust result for any exceptions in the result calculated
WITHOUT_CLASSIFICATION	// skip all whole exception segments in the range
WITHOUT_CLASSIFICATION	// skip exception or excluded segments we may fall on
WITHOUT_CLASSIFICATION	//addException(exceptionDate.getTime());
WITHOUT_CLASSIFICATION	// find all consecutive included segments
WITHOUT_CLASSIFICATION	// add the interval as an exception
WITHOUT_CLASSIFICATION	// find all consecutive included segments
WITHOUT_CLASSIFICATION	// move forward exceptionSegmentCount segments skipping // excluded segments
WITHOUT_CLASSIFICATION	// empty
WITHOUT_CLASSIFICATION	// add the interval as an exception
WITHOUT_CLASSIFICATION	// this is not one of our included segment, skip it
WITHOUT_CLASSIFICATION	// first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	// cycle over all the base segments groups in the range
WITHOUT_CLASSIFICATION	// cycle through all the segments contained in the base exclusion // area
WITHOUT_CLASSIFICATION	// go to next base segment group
WITHOUT_CLASSIFICATION	// key not found
WITHOUT_CLASSIFICATION	// Segment fromSegment = getSegment(from); // fromSegment.inc(); // Segment toSegment = getSegment(to); // toSegment.dec();
WITHOUT_CLASSIFICATION	// long start = Math.max( //     fromSegment.getSegmentStart(), this.segmentStart // ); // long end = Math.min(toSegment.getSegmentEnd(), this.segmentEnd);
WITHOUT_CLASSIFICATION	// Compute number of labels
WITHOUT_CLASSIFICATION	// Cycle when necessary
WITHOUT_CLASSIFICATION	// Cycle when necessary
WITHOUT_CLASSIFICATION	// If tick overlap when cycling, update last tick too
WITHOUT_CLASSIFICATION	// continue and separate the labels only if necessary
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// no plot, no data
WITHOUT_CLASSIFICATION	// if fixed auto range, then derive lower bound...
WITHOUT_CLASSIFICATION	// ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	// ensure the autorange is at least <minRange> in size...
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// even though the axis is not visible, we need ticks for the // gridlines...
WITHOUT_CLASSIFICATION	// look at lower and upper bounds...
WITHOUT_CLASSIFICATION	// draw the tick marks and labels...
WITHOUT_CLASSIFICATION	// TOP
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// BOTTOM
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// LEFT
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// RIGHT
WITHOUT_CLASSIFICATION	// first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	// default make height of plotArea
WITHOUT_CLASSIFICATION	// allow fixed thickness
WITHOUT_CLASSIFICATION	// update, but dont draw tick marks (needed for stepped colors)
WITHOUT_CLASSIFICATION	// suppresses compiler warnings
WITHOUT_CLASSIFICATION	// setTickValues was missing from ColorPalette v. 0.96 //colorPalette.setTickValues(this.axis.getTicks());
WITHOUT_CLASSIFICATION	// calculate the adjusted data area taking into account the 3D effect...
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	// transparent
WITHOUT_CLASSIFICATION	//gets the outline stroke width of the plot
WITHOUT_CLASSIFICATION	// ensure that all the symbols are displayed
WITHOUT_CLASSIFICATION	// this ensure that the grid bands will be displayed correctly.
WITHOUT_CLASSIFICATION	// avoid to draw overlapping tick labels
WITHOUT_CLASSIFICATION	// avoid to draw overlapping tick labels
WITHOUT_CLASSIFICATION	// don't draw this tick label
WITHOUT_CLASSIFICATION	// don't draw this tick label
WITHOUT_CLASSIFICATION	// remember these values for next comparison
WITHOUT_CLASSIFICATION	// remember these values for next comparison
WITHOUT_CLASSIFICATION	// first check that autoPopulate==false works as expected
WITHOUT_CLASSIFICATION	// if the axis is not visible, don't draw it...
WITHOUT_CLASSIFICATION	// even though the axis is not visible, we need ticks for the // gridlines...
WITHOUT_CLASSIFICATION	// all tick labels have the same width (equal to the height of the // font)...
WITHOUT_CLASSIFICATION	// draw the category labels and axis label
WITHOUT_CLASSIFICATION	// create a new space object if one wasn't supplied...
WITHOUT_CLASSIFICATION	// if the axis is not visible, no additional space is required...
WITHOUT_CLASSIFICATION	// start with the current tick unit...
WITHOUT_CLASSIFICATION	// start with the current tick unit...
WITHOUT_CLASSIFICATION	// then extrapolate...
WITHOUT_CLASSIFICATION	// then extrapolate...
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// must be top or bottom
WITHOUT_CLASSIFICATION	// catches null also
WITHOUT_CLASSIFICATION	// no action required.
WITHOUT_CLASSIFICATION	// no action required.
WITHOUT_CLASSIFICATION	// check if we need to collect chart entities from the container
WITHOUT_CLASSIFICATION	// place in this row (truncated) anyway
WITHOUT_CLASSIFICATION	// start new row
WITHOUT_CLASSIFICATION	//Block b = (Block) blocks.get(i);
WITHOUT_CLASSIFICATION	// can safely ignore
WITHOUT_CLASSIFICATION	// find optimum height, then map to range
WITHOUT_CLASSIFICATION	// find optimum height
WITHOUT_CLASSIFICATION	// find optimum height
WITHOUT_CLASSIFICATION	// find optimum height and map to range
WITHOUT_CLASSIFICATION	// find optimum width and map to range
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// since the flow layout is relatively straightforward, // no information needs to be recorded here
WITHOUT_CLASSIFICATION	// no action required.
WITHOUT_CLASSIFICATION	// first arrange without constraints, and see if this fits within // the required ranges...
WITHOUT_CLASSIFICATION	// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width
WITHOUT_CLASSIFICATION	// first arrange without constraints, then see if the width fits // within the required range...if not, call arrangeFN() at max width
WITHOUT_CLASSIFICATION	// check if we need to collect chart entities from the container
WITHOUT_CLASSIFICATION	//Block b = (Block) blocks.get(i);
WITHOUT_CLASSIFICATION	// this default implementation will just fill the available // border space with a single color
WITHOUT_CLASSIFICATION	// backgroundImage
WITHOUT_CLASSIFICATION	// fixed width
WITHOUT_CLASSIFICATION	// width is OK, but height must be constrained
WITHOUT_CLASSIFICATION	// height is OK, but width must be constrained
WITHOUT_CLASSIFICATION	// nothing to clear
WITHOUT_CLASSIFICATION	// if the area has zero height or width, we shouldn't draw anything
WITHOUT_CLASSIFICATION	// since the flow layout is relatively straightforward, no information // needs to be recorded here
WITHOUT_CLASSIFICATION	// place in this column (truncated) anyway
WITHOUT_CLASSIFICATION	// start new column
WITHOUT_CLASSIFICATION	// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	/* x-axis label*/
WITHOUT_CLASSIFICATION	/* y-axis label */
WITHOUT_CLASSIFICATION	// chart title // data // no legend // tooltips // no URL generation
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************
WITHOUT_CLASSIFICATION	// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?
WITHOUT_CLASSIFICATION	// set a custom background for the chart
WITHOUT_CLASSIFICATION	// customise the title position and font
WITHOUT_CLASSIFICATION	// use gradients and white borders for the section colours
WITHOUT_CLASSIFICATION	// customise the section label appearance
WITHOUT_CLASSIFICATION	// add a subtitle giving the data source
WITHOUT_CLASSIFICATION	// pass to the super-class for handling
WITHOUT_CLASSIFICATION	// pass to the super-class for handling
WITHOUT_CLASSIFICATION	// pass to the super-class for handling
WITHOUT_CLASSIFICATION	// don't need to do anything
WITHOUT_CLASSIFICATION	// don't need to do anything
WITHOUT_CLASSIFICATION	//    /** Insets text field. */ //    private InsetsTextField tickLabelInsetsTextField; // //    /** Label insets text field. */ //    private InsetsTextField labelInsetsTextField;
WITHOUT_CLASSIFICATION	// figure out what type of axis we have and instantiate the // appropriate panel
WITHOUT_CLASSIFICATION	// Insets values
WITHOUT_CLASSIFICATION	// axis.setTickMarkStroke(getTickMarkStroke());
WITHOUT_CLASSIFICATION	// create a panel for the settings...
WITHOUT_CLASSIFICATION	//dmo: added this panel for colorbar control. (start dmo additions)
WITHOUT_CLASSIFICATION	//      end fix by rfuller
WITHOUT_CLASSIFICATION	//dmo: (end dmo additions)
WITHOUT_CLASSIFICATION	// set the plot properties...
WITHOUT_CLASSIFICATION	// then the axis properties...
WITHOUT_CLASSIFICATION	// pass to super-class for handling
WITHOUT_CLASSIFICATION	//  No op
WITHOUT_CLASSIFICATION	//  No op
WITHOUT_CLASSIFICATION	// defer argument checks...
WITHOUT_CLASSIFICATION	//      fix by rfuller
WITHOUT_CLASSIFICATION	// populate the deprecated fields
WITHOUT_CLASSIFICATION	//same as for ChartEntity!
WITHOUT_CLASSIFICATION	//same as for ChartEntity!
WITHOUT_CLASSIFICATION	//same as for ChartEntity!
WITHOUT_CLASSIFICATION	// update the deprecated field
WITHOUT_CLASSIFICATION	// update the deprecated fields
WITHOUT_CLASSIFICATION	// check the deprecated fields
WITHOUT_CLASSIFICATION	// try the parent plot
WITHOUT_CLASSIFICATION	// do not notify while zooming each axis
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// this generates the change event too
WITHOUT_CLASSIFICATION	/* x-axis label*/
WITHOUT_CLASSIFICATION	/* y-axis label */
WITHOUT_CLASSIFICATION	// set a custom background for the chart
WITHOUT_CLASSIFICATION	// customise the title position and font
WITHOUT_CLASSIFICATION	// use gradients and white borders for the section colours
WITHOUT_CLASSIFICATION	// customise the section label appearance
WITHOUT_CLASSIFICATION	// add a subtitle giving the data source
WITHOUT_CLASSIFICATION	//same as for ChartEntity!
WITHOUT_CLASSIFICATION	//dmo added //dmo added
WITHOUT_CLASSIFICATION	// if there is a tool tip, we expect it to generate the title and // alt values, so we only add an empty alt if there is no tooltip
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// FIXME
WITHOUT_CLASSIFICATION	// this is a paint we don't recognise
WITHOUT_CLASSIFICATION	// null is handled fine here...
WITHOUT_CLASSIFICATION	// we can't do anything
WITHOUT_CLASSIFICATION	// force a redraw
WITHOUT_CLASSIFICATION	// pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	// pass on the event to the auxiliary handlers
WITHOUT_CLASSIFICATION	// relay the event from the canvas to our registered listeners
WITHOUT_CLASSIFICATION	// relay the event from the canvas to our registered listeners
WITHOUT_CLASSIFICATION	// set the default stroke for all series
WITHOUT_CLASSIFICATION	//this.chartPanel.isDomainZoomable()) {
WITHOUT_CLASSIFICATION	//this.chartPanel.isRangeZoomable()) {
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	// does nothing unless overridden        
WITHOUT_CLASSIFICATION	// selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	// for mouseReleased event, (horizontalZoom || verticalZoom) // will be true, so we can just test for either being false; // otherwise both are true
WITHOUT_CLASSIFICATION	// chart title // data // no legend // tooltips // no URL generation
WITHOUT_CLASSIFICATION	// does nothing unless overridden
WITHOUT_CLASSIFICATION	// special case - if the underlying rectangle uses ints we // need to create one that uses doubles
WITHOUT_CLASSIFICATION	// title // x-axis label // y-axis label
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// the actual panning occurs later in the mouseDragged() method
WITHOUT_CLASSIFICATION	//handle panning if we have a start point else unregister
WITHOUT_CLASSIFICATION	//if we have been panning reset the cursor //unregister in any case
WITHOUT_CLASSIFICATION	// the URL text should already have been escaped by the URL generator
WITHOUT_CLASSIFICATION	// no fields to test
WITHOUT_CLASSIFICATION	/// we have rotation huston, please spin me
WITHOUT_CLASSIFICATION	/// we have rotation huston, please spin me
WITHOUT_CLASSIFICATION	/// we have rotation
WITHOUT_CLASSIFICATION	/// we have rotation
WITHOUT_CLASSIFICATION	/// we have rotation
WITHOUT_CLASSIFICATION	// isArrowAtTop
WITHOUT_CLASSIFICATION	//int maxX = (int) (plotArea.getMaxX());
WITHOUT_CLASSIFICATION	//int maxX = (int) (plotArea.getMaxX());
WITHOUT_CLASSIFICATION	//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));
WITHOUT_CLASSIFICATION	//int midY = (int) (plotArea.getMinY() + (plotArea.getHeight() / 2));
WITHOUT_CLASSIFICATION	/// we have rotation houston, please spin me
WITHOUT_CLASSIFICATION	// horizontal
WITHOUT_CLASSIFICATION	// store the plot and its weight
WITHOUT_CLASSIFICATION	// configure the range axis...
WITHOUT_CLASSIFICATION	// work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	// work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	// we expect the line to be vertical or horizontal // vertical
WITHOUT_CLASSIFICATION	// calculate plotAreas of all sub-plots, maximum vertical/horizontal // axis width/height
WITHOUT_CLASSIFICATION	// calculate sub-plot area
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// calculate the data area...
WITHOUT_CLASSIFICATION	// set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	// draw the shared axis
WITHOUT_CLASSIFICATION	// draw all the charts
WITHOUT_CLASSIFICATION	// the range axis is deserialized before the subplots, so its value // range is likely to be incorrect...
WITHOUT_CLASSIFICATION	// default preserves previous // behaviour
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// make the link area a square if the pie chart is to be circular... // is circular?
WITHOUT_CLASSIFICATION	// the link area defines the dog leg points for the linking lines to // the labels
WITHOUT_CLASSIFICATION	// the explode area defines the max circle/ellipse for the exploded pie // sections. // it is defined by shrinking the linkArea by the linkMargin factor.
WITHOUT_CLASSIFICATION	// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.
WITHOUT_CLASSIFICATION	// the link area defines the dog-leg point for the linking lines to // the labels
WITHOUT_CLASSIFICATION	// get the data source - return if null;
WITHOUT_CLASSIFICATION	// if too any elements
WITHOUT_CLASSIFICATION	// get a list of keys...
WITHOUT_CLASSIFICATION	// do nothing by default.
WITHOUT_CLASSIFICATION	//g2.clip(clipArea);
WITHOUT_CLASSIFICATION	// if depth is negative don't draw anything
WITHOUT_CLASSIFICATION	// draw the bottom circle
WITHOUT_CLASSIFICATION	// draw the height
WITHOUT_CLASSIFICATION	// cycle through once drawing only the sides at the back...
WITHOUT_CLASSIFICATION	// cycle through again drawing only the sides at the front...
WITHOUT_CLASSIFICATION	// add a tooltip for the section...
WITHOUT_CLASSIFICATION	// @mgs: using the method's return value was missing
WITHOUT_CLASSIFICATION	// for CLOCKWISE charts, the extent will be negative...
WITHOUT_CLASSIFICATION	// start at front
WITHOUT_CLASSIFICATION	// the segment starts at the front, and wraps all // the way around // the back and finishes at the front again
WITHOUT_CLASSIFICATION	// starts at the front, finishes at the back (going // around the left side)
WITHOUT_CLASSIFICATION	// the segment starts at the back (still extending // CLOCKWISE)
WITHOUT_CLASSIFICATION	// whole segment stays at the back
WITHOUT_CLASSIFICATION	// starts at the back, wraps around front, and // finishes at back again
WITHOUT_CLASSIFICATION	// starts at back, finishes at front (CLOCKWISE)
WITHOUT_CLASSIFICATION	// segment starts at the front
WITHOUT_CLASSIFICATION	// and finishes at the front
WITHOUT_CLASSIFICATION	// segment only occupies the front
WITHOUT_CLASSIFICATION	// segments wraps right around the back...
WITHOUT_CLASSIFICATION	// segments starts at front and finishes at back...
WITHOUT_CLASSIFICATION	// segment starts at back
WITHOUT_CLASSIFICATION	// and finishes at back
WITHOUT_CLASSIFICATION	//dmo //zero when the parameter is not set
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	// plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	// additional dataArea modifications //check whether modification is
WITHOUT_CLASSIFICATION	// ratio represents pixels
WITHOUT_CLASSIFICATION	// ratio represents axis units
WITHOUT_CLASSIFICATION	// draw the plot background...
WITHOUT_CLASSIFICATION	// draw vertical crosshair if required...
WITHOUT_CLASSIFICATION	// draw horizontal crosshair if required...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// now get the data and plot it (the visual representation will depend // on the renderer that has been set)...
WITHOUT_CLASSIFICATION	// get the data points
WITHOUT_CLASSIFICATION	// this is a new column
WITHOUT_CLASSIFICATION	// end of column
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	//              }
WITHOUT_CLASSIFICATION	// both axes
WITHOUT_CLASSIFICATION	// just the horizontal axis...
WITHOUT_CLASSIFICATION	// just the vertical axis...
WITHOUT_CLASSIFICATION	// check a series with repeating items
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	//turn off anti-aliasing when filling rectangles
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// both axes
WITHOUT_CLASSIFICATION	// just the horizontal axis...
WITHOUT_CLASSIFICATION	// just the vertical axis...
WITHOUT_CLASSIFICATION	// draw the background
WITHOUT_CLASSIFICATION	//Object oldValue = this.toolTipGenerator;
WITHOUT_CLASSIFICATION	//Object oldValue = this.urlGenerator;
WITHOUT_CLASSIFICATION	// plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	// the following relies on the fact that the intervals are immutable
WITHOUT_CLASSIFICATION	// intentionally blank
WITHOUT_CLASSIFICATION	// can't find any difference
WITHOUT_CLASSIFICATION	// we're doing this for testing only, and make sure that we // only add data in descending order by x-value
WITHOUT_CLASSIFICATION	// work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	// calculate sub-plot area
WITHOUT_CLASSIFICATION	// calculate sub-plot area
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// calculate the data area...
WITHOUT_CLASSIFICATION	// set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	// draw the shared axis
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	//  range = this.rangeAxis.getRange().getLength(); //  scaledRange = range * percent; //   rangeAxis.setAnchoredRange(scaledRange);
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	// draw all the subplots
WITHOUT_CLASSIFICATION	// override is only for documentation purposes
WITHOUT_CLASSIFICATION	// send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// y is minor
WITHOUT_CLASSIFICATION	// y is minor
WITHOUT_CLASSIFICATION	//get major dimension
WITHOUT_CLASSIFICATION	//ellipse diameter is the minor dimension
WITHOUT_CLASSIFICATION	// draw the wafer
WITHOUT_CLASSIFICATION	// no data in the parent plot
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	// draw the shared axis
WITHOUT_CLASSIFICATION	// draw all the charts
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	//set upperLeft point // x is minor
WITHOUT_CLASSIFICATION	//set upperLeft point // x is minor
WITHOUT_CLASSIFICATION	// calculate and draw the notch // horizontal orientation is considered notch right // vertical orientation is considered notch down
WITHOUT_CLASSIFICATION	//this.axisOffset.trim(dataArea);
WITHOUT_CLASSIFICATION	//// SECTION PAINT ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// is there an override?
WITHOUT_CLASSIFICATION	// if not, check if there is a paint defined for the specified key
WITHOUT_CLASSIFICATION	// if not, check if there is a paint defined for the specified key
WITHOUT_CLASSIFICATION	// nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	// nothing defined - do we autoPopulate?
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	// null argument check delegated...
WITHOUT_CLASSIFICATION	//// SECTION OUTLINE PAINT ////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// SECTION OUTLINE STROKE ///////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// if not, check if there is a stroke defined for the specified key
WITHOUT_CLASSIFICATION	// adjust the plot area for interior spacing and labels...
WITHOUT_CLASSIFICATION	// make the link area a square if the pie chart is to be circular...
WITHOUT_CLASSIFICATION	// work out the space required by the domain axis...
WITHOUT_CLASSIFICATION	// work out the maximum height or width of the non-shared axes...
WITHOUT_CLASSIFICATION	// calculate sub-plot area
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// the pie area defines the circle/ellipse for regular pie sections. // it is defined by shrinking the explodeArea by the explodeMargin // factor.
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	// no data in the parent plot
WITHOUT_CLASSIFICATION	// update the linking line target for later // add an entity for the pie section
WITHOUT_CLASSIFICATION	// work out the mid angle (0 - 90 and 270 - 360) = right, // otherwise left
WITHOUT_CLASSIFICATION	// classify the keys according to which side the label will appear...
WITHOUT_CLASSIFICATION	// calculate the max label width from the plot dimensions, because // a circular pie can leave a lot more room for labels...
WITHOUT_CLASSIFICATION	// draw the labels...
WITHOUT_CLASSIFICATION	// draw the right labels...
WITHOUT_CLASSIFICATION	//hh * getInteriorGap();
WITHOUT_CLASSIFICATION	// line not visible
WITHOUT_CLASSIFICATION	// for a RadialGradientPaint we adjust the center and radius to match // the current pie segment...
WITHOUT_CLASSIFICATION	// can't find any difference...
WITHOUT_CLASSIFICATION	// DEPRECATED FIELDS AND METHODS...
WITHOUT_CLASSIFICATION	// no range axis // no renderer
WITHOUT_CLASSIFICATION	// backgroundImage
WITHOUT_CLASSIFICATION	// set the width and height of non-shared axis of all sub-plots
WITHOUT_CLASSIFICATION	// draw the shared axis
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// delegate 'info' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	// draw all the subplots
WITHOUT_CLASSIFICATION	// send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// delegate 'state' and 'source' argument checks...
WITHOUT_CLASSIFICATION	// after setting up all the subplots, the shared domain axis may need // reconfiguring
WITHOUT_CLASSIFICATION	// 20% // 20% // 20%
WITHOUT_CLASSIFICATION	// create the bounds for the inner arc
WITHOUT_CLASSIFICATION	// calculate inner arc in reverse direction, for later // GeneralPath construction
WITHOUT_CLASSIFICATION	// add an entity for the pie section
WITHOUT_CLASSIFICATION	// check that there is some data to display...
WITHOUT_CLASSIFICATION	// the columns variable is always >= rows
WITHOUT_CLASSIFICATION	// swap rows and columns to match plotArea shape
WITHOUT_CLASSIFICATION	// update the section colors to match the global colors...
WITHOUT_CLASSIFICATION	// pre-fetch the colors for each key...this is because the subplots // may not display every key, but we need the coloring to be // consistent...
WITHOUT_CLASSIFICATION	// column keys provide potential keys for individual pies
WITHOUT_CLASSIFICATION	// row keys provide potential keys for individual pies
WITHOUT_CLASSIFICATION	/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates. * Other names may be trademarks of their respective owners.] * * ----------------- * CategoryPlot.java * ----------------- * (C) Copyright 2000-2014, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Jeremy Bowman; *                   Arnaud Lelievre; *                   Richard West, Advanced Micro Devices, Inc.; *                   Ulrich Voigt - patch 2686040; *                   Peter Kolb - patches 2603321 and 2809117; * * Changes * ------- * 21-Jun-2001 : Removed redundant JFreeChart parameter from constructors (DG); * 21-Aug-2001 : Added standard header. Fixed DOS encoding problem (DG); * 18-Sep-2001 : Updated header (DG); * 15-Oct-2001 : Data source classes moved to com.jrefinery.data.* (DG); * 22-Oct-2001 : Renamed DataSource.java --> Dataset.java etc. (DG); * 23-Oct-2001 : Changed intro and trail gaps on bar plots to use percentage of *               available space rather than a fixed number of units (DG); * 12-Dec-2001 : Changed constructors to protected (DG); * 13-Dec-2001 : Added tooltips (DG); * 16-Jan-2002 : Increased maximum intro and trail gap percents, plus added *               some argument checking code.  Thanks to Taoufik Romdhane for *               suggesting this (DG); * 05-Feb-2002 : Added accessor methods for the tooltip generator, incorporated *               alpha-transparency for Plot and subclasses (DG); * 06-Mar-2002 : Updated import statements (DG); * 14-Mar-2002 : Renamed BarPlot.java --> CategoryPlot.java, and changed code *               to use the CategoryItemRenderer interface (DG); * 22-Mar-2002 : Dropped the getCategories() method (DG); * 23-Apr-2002 : Moved the dataset from the JFreeChart class to the Plot *               class (DG); * 29-Apr-2002 : New methods to support printing values at the end of bars, *               contributed by Jeremy Bowman (DG); * 11-May-2002 : New methods for label visibility and overlaid plot support, *               contributed by Jeremy Bowman (DG); * 06-Jun-2002 : Removed the tooltip generator, this is now stored with the *               renderer.  Moved constants into the CategoryPlotConstants *               interface.  Updated Javadoc comments (DG); * 10-Jun-2002 : Overridden datasetChanged() method to update the upper and *               lower bound on the range axis (if necessary), updated *               Javadocs (DG); * 25-Jun-2002 : Removed redundant imports (DG); * 20-Aug-2002 : Changed the constructor for Marker (DG); * 28-Aug-2002 : Added listener notification to setDomainAxis() and *               setRangeAxis() (DG); * 23-Sep-2002 : Added getLegendItems() method and fixed errors reported by *               Checkstyle (DG); * 28-Oct-2002 : Changes to the CategoryDataset interface (DG); * 05-Nov-2002 : Base dataset is now TableDataset not CategoryDataset (DG); * 07-Nov-2002 : Renamed labelXXX as valueLabelXXX (DG); * 18-Nov-2002 : Added grid settings for both domain and range axis (previously *               these were set in the axes) (DG); * 19-Nov-2002 : Added axis location parameters to constructor (DG); * 17-Jan-2003 : Moved to com.jrefinery.chart.plot package (DG); * 14-Feb-2003 : Fixed bug in auto-range calculation for secondary axis (DG); * 26-Mar-2003 : Implemented Serializable (DG); * 02-May-2003 : Moved render() method up from subclasses. Added secondary *               range markers. Added an attribute to control the dataset *               rendering order.  Added a drawAnnotations() method.  Changed *               the axis location from an int to an AxisLocation (DG); * 07-May-2003 : Merged HorizontalCategoryPlot and VerticalCategoryPlot into *               this class (DG); * 02-Jun-2003 : Removed check for range axis compatibility (DG); * 04-Jul-2003 : Added a domain gridline position attribute (DG); * 21-Jul-2003 : Moved DrawingSupplier to Plot superclass (DG); * 19-Aug-2003 : Added equals() method and implemented Cloneable (DG); * 01-Sep-2003 : Fixed bug 797466 (no change event when secondary dataset *               changes) (DG); * 02-Sep-2003 : Fixed bug 795209 (wrong dataset checked in render2 method) and *               790407 (initialise method) (DG); * 08-Sep-2003 : Added internationalization via use of properties *               resourceBundle (RFE 690236) (AL); * 08-Sep-2003 : Fixed bug (wrong secondary range axis being used).  Changed *               ValueAxis API (DG); * 10-Sep-2003 : Fixed bug in setRangeAxis() method (DG); * 15-Sep-2003 : Fixed two bugs in serialization, implemented *               PublicCloneable (DG); * 23-Oct-2003 : Added event notification for changes to renderer (DG); * 26-Nov-2003 : Fixed bug (849645) in clearRangeMarkers() method (DG); * 03-Dec-2003 : Modified draw method to accept anchor (DG); * 21-Jan-2004 : Update for renamed method in ValueAxis (DG); * 10-Mar-2004 : Fixed bug in axis range calculation when secondary renderer is *               stacked (DG); * 12-May-2004 : Added fixed legend items (DG); * 19-May-2004 : Added check for null legend item from renderer (DG); * 02-Jun-2004 : Updated the DatasetRenderingOrder class (DG); * 05-Nov-2004 : Renamed getDatasetsMappedToRangeAxis() *               --> datasetsMappedToRangeAxis(), and ensured that returned *               list doesn't contain null datasets (DG); * 12-Nov-2004 : Implemented new Zoomable interface (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds() in *               CategoryItemRenderer (DG); * 04-May-2005 : Fixed serialization of range markers (DG); * 05-May-2005 : Updated draw() method parameters (DG); * 20-May-2005 : Added setDomainAxes() and setRangeAxes() methods, as per *               RFE 1183100 (DG); * 01-Jun-2005 : Upon deserialization, register plot as a listener with its *               axes, dataset(s) and renderer(s) - see patch 1209475 (DG); * 02-Jun-2005 : Added support for domain markers (DG); * 06-Jun-2005 : Fixed equals() method for use with GradientPaint (DG); * 09-Jun-2005 : Added setRenderers(), as per RFE 1183100 (DG); * 16-Jun-2005 : Added getDomainAxisCount() and getRangeAxisCount() methods, to *               match XYPlot (see RFE 1220495) (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 11-Jan-2006 : Added configureRangeAxes() to rendererChanged(), since the *               renderer might influence the axis range (DG); * 27-Jan-2006 : Added various null argument checks (DG); * 18-Aug-2006 : Added getDatasetCount() method, plus a fix for bug drawing *               category labels, thanks to Adriaan Joubert (1277726) (DG); * 05-Sep-2006 : Added MarkerChangeEvent support (DG); * 30-Oct-2006 : Added getDomainAxisIndex(), datasetsMappedToDomainAxis() and *               getCategoriesForAxis() methods (DG); * 22-Nov-2006 : Fire PlotChangeEvent from setColumnRenderingOrder() and *               setRowRenderingOrder() (DG); * 29-Nov-2006 : Fix for bug 1605207 (IntervalMarker exceeds bounds of data *               area) (DG); * 26-Feb-2007 : Fix for bug 1669218 (setDomainAxisLocation() notify argument *               ignored) (DG); * 13-Mar-2007 : Added null argument checks for setRangeCrosshairPaint() and *               setRangeCrosshairStroke(), fixed clipping for *               annotations (DG); * 07-Jun-2007 : Override drawBackground() for new GradientPaint handling (DG); * 10-Jul-2007 : Added getRangeAxisIndex(ValueAxis) method (DG); * 24-Sep-2007 : Implemented new zoom methods (DG); * 25-Oct-2007 : Added some argument checks (DG); * 05-Nov-2007 : Applied patch 1823697, by Richard West, for removal of domain *               and range markers (DG); * 14-Nov-2007 : Added missing event notifications (DG); * 25-Mar-2008 : Added new methods with optional notification - see patch *               1913751 (DG); * 07-Apr-2008 : Fixed NPE in removeDomainMarker() and *               removeRangeMarker() (DG); * 23-Apr-2008 : Fixed equals() and clone() methods (DG); * 26-Jun-2008 : Fixed crosshair support (DG); * 10-Jul-2008 : Fixed outline visibility for 3D renderers (DG); * 12-Aug-2008 : Added rendererCount() method (DG); * 25-Nov-2008 : Added facility to map datasets to multiples axes (DG); * 15-Dec-2008 : Cleaned up grid drawing methods (DG); * 18-Dec-2008 : Use ResourceBundleWrapper - see patch 1607918 by *               Jess Thrysoee (DG); * 21-Jan-2009 : Added rangeMinorGridlinesVisible flag (DG); * 18-Mar-2009 : Modified anchored zoom behaviour (DG); * 19-Mar-2009 : Implemented Pannable interface - see patch 2686040 (DG); * 19-Mar-2009 : Added entity support - see patch 2603321 by Peter Kolb (DG); * 24-Jun-2009 : Implemented AnnotationChangeListener (see patch 2809117 by *               PK) (DG); * 06-Jul-2009 : Fix for cloning of renderers - see bug 2817504 (DG) * 10-Jul-2009 : Added optional drop shadow generator (DG); * 27-Sep-2011 : Fixed annotation import (DG); * 18-Oct-2011 : Fixed tooltip offset with shadow generator (DG); * 20-Nov-2011 : Initialise shadow generator as null (DG); * 02-Jul-2013 : Use ParamChecks (DG); * 12-Sep-2013 : Check for KEY_SUPPRESS_SHADOW_GENERATION rendering hint (DG); * 10-Mar-2014 : Updated Javadocs for issue #1123 (DG); * 09-Apr-2014 : Remove use of ObjectList (DG); *  */
WITHOUT_CLASSIFICATION	// allocate storage for dataset, axes and renderers
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// calculate the data area...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// set the anchor value for the range axis...
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// get the legend items for the datasets...
WITHOUT_CLASSIFICATION	// this should never happen with the existing code, but throw // an exception in case future changes make it possible...
WITHOUT_CLASSIFICATION	// should be equal...
WITHOUT_CLASSIFICATION	// reserve some space for the domain axis...
WITHOUT_CLASSIFICATION	// reserve space for the primary domain axis...
WITHOUT_CLASSIFICATION	// reserve space for any domain axes...
WITHOUT_CLASSIFICATION	// reserve some space for the range axis...
WITHOUT_CLASSIFICATION	// reserve space for the range axes (if any)...
WITHOUT_CLASSIFICATION	// if the incoming state is null, no information will be passed // back to the caller - but we create a temporary state to record // the plot area, since that is used later by the axes
WITHOUT_CLASSIFICATION	// if there is a renderer, it draws the background, otherwise use the // default background...
WITHOUT_CLASSIFICATION	// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...
WITHOUT_CLASSIFICATION	// specify the anchor X and Y coordinates in Java2D space, for the // cases where these are not updated during rendering (i.e. no lock // on data)
WITHOUT_CLASSIFICATION	// don't let anyone draw outside the data area
WITHOUT_CLASSIFICATION	// draw the markers...
WITHOUT_CLASSIFICATION	// now render data items...
WITHOUT_CLASSIFICATION	// set up the alpha-transparency...
WITHOUT_CLASSIFICATION	// if the flag is being set to true, there may be queued up changes...
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// draw the foreground markers...
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// draw the annotations (if any)...
WITHOUT_CLASSIFICATION	// draw domain crosshair if required...
WITHOUT_CLASSIFICATION	// draw range crosshair if required...
WITHOUT_CLASSIFICATION	// draw an outline around the plot area...
WITHOUT_CLASSIFICATION	// add domain axes to lists...
WITHOUT_CLASSIFICATION	// add range axes to lists...
WITHOUT_CLASSIFICATION	// draw the top axes
WITHOUT_CLASSIFICATION	// draw the bottom axes
WITHOUT_CLASSIFICATION	// draw the left axes
WITHOUT_CLASSIFICATION	// draw the right axes
WITHOUT_CLASSIFICATION	// draw the range grid lines, if any...
WITHOUT_CLASSIFICATION	// no renderer, no gridlines...
WITHOUT_CLASSIFICATION	// iterate through the datasets that map to the axis and get the union // of the ranges.
WITHOUT_CLASSIFICATION	// add the unique categories from this dataset
WITHOUT_CLASSIFICATION	// do nothing, because the plot is not pannable along the domain axes
WITHOUT_CLASSIFICATION	// can't zoom domain axis
WITHOUT_CLASSIFICATION	// delegate to other method
WITHOUT_CLASSIFICATION	// perform the zoom on each range axis
WITHOUT_CLASSIFICATION	// get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	// AxisLocation is immutable, so we can just copy the maps
WITHOUT_CLASSIFICATION	// not currently serialized
WITHOUT_CLASSIFICATION	// some subclasses override this method completely, so don't put // anything here that *must* be done
WITHOUT_CLASSIFICATION	// provides a 'no action' default
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// try the parent plot
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// no renderer, no gridlines...
WITHOUT_CLASSIFICATION	// iterate through the datasets that map to the axis and get the union // of the ranges.
WITHOUT_CLASSIFICATION	// create the dataset...
WITHOUT_CLASSIFICATION	// the above should cover all the options...
WITHOUT_CLASSIFICATION	// define the default locations for up to 8 axes...
WITHOUT_CLASSIFICATION	// normalize angle
WITHOUT_CLASSIFICATION	// draw the plot background and axes...
WITHOUT_CLASSIFICATION	// now for each dataset, get the renderer and the appropriate axis // and render the dataset...
WITHOUT_CLASSIFICATION	// now get the data and plot it (the visual representation will depend // on the m_Renderer that has been set)...
WITHOUT_CLASSIFICATION	// draw the domain grid lines, if any...
WITHOUT_CLASSIFICATION	// draw the radius grid lines, if any...
WITHOUT_CLASSIFICATION	// the datasets are not cloned, but listeners need to be added...
WITHOUT_CLASSIFICATION	// square
WITHOUT_CLASSIFICATION	// circle
WITHOUT_CLASSIFICATION	// up-pointing triangle
WITHOUT_CLASSIFICATION	// diamond
WITHOUT_CLASSIFICATION	// horizontal rectangle
WITHOUT_CLASSIFICATION	// down-pointing triangle
WITHOUT_CLASSIFICATION	// horizontal ellipse
WITHOUT_CLASSIFICATION	// right-pointing triangle
WITHOUT_CLASSIFICATION	// vertical rectangle
WITHOUT_CLASSIFICATION	// left-pointing triangle
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// adjust the plot area by the interior spacing value
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self to trigger plot change event
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	//// SERIES PAINT /////////////////////////
WITHOUT_CLASSIFICATION	// otherwise look up the paint list
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	//// SERIES OUTLINE PAINT ////////////////////////////
WITHOUT_CLASSIFICATION	// otherwise look up the paint list
WITHOUT_CLASSIFICATION	// otherwise look up the paint list
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// ensure we have a maximum value to use on the axes
WITHOUT_CLASSIFICATION	//// SERIES OUTLINE STROKE /////////////////////
WITHOUT_CLASSIFICATION	// Next, setup the plot area
WITHOUT_CLASSIFICATION	// make the chart area a square
WITHOUT_CLASSIFICATION	// draw the axis and category label
WITHOUT_CLASSIFICATION	// 1 = end of axis
WITHOUT_CLASSIFICATION	// Now actually plot each of the series polygons..
WITHOUT_CLASSIFICATION	// plot the data...
WITHOUT_CLASSIFICATION	// draw the polygon series...
WITHOUT_CLASSIFICATION	// Finds our starting angle from the centre for this axis
WITHOUT_CLASSIFICATION	// The following angle calc will ensure there isn't a top // vertical axis - this may be useful if you don't want any // given criteria to 'appear' move important than the // others.. //  + (getDirection().getFactor() //        * (cat + 0.5) * 360 / catCount);
WITHOUT_CLASSIFICATION	// find the point at the appropriate distance end point // along the axis/angle identified above and add it to the // polygon
WITHOUT_CLASSIFICATION	// put an elipse at the point being plotted..
WITHOUT_CLASSIFICATION	// Plot the polygon
WITHOUT_CLASSIFICATION	// set the anchor value for the horizontal axis...
WITHOUT_CLASSIFICATION	/* shapeFilled=*/
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// plot is likely registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	// if the plot area is too small, just return...
WITHOUT_CLASSIFICATION	// record the plot area...
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// draw the background
WITHOUT_CLASSIFICATION	// plot the data (unless the dataset is null)...
WITHOUT_CLASSIFICATION	// adjust the drawing area for the plot insets (if any)...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// delegate...
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// fake a dataset change event to update axes...
WITHOUT_CLASSIFICATION	// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	// reserve some space for the domain axis...
WITHOUT_CLASSIFICATION	// reserve some space for the range axis...
WITHOUT_CLASSIFICATION	// draw the plot background and axes...
WITHOUT_CLASSIFICATION	// check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	// Lastly, fill the web polygon if this is required
WITHOUT_CLASSIFICATION	// if series are in rows, then the categories are the column keys
WITHOUT_CLASSIFICATION	// if series are in columns, then the categories are the row keys
WITHOUT_CLASSIFICATION	//          negatives = true;
WITHOUT_CLASSIFICATION	//  value = Math.pow(10,value);
WITHOUT_CLASSIFICATION	//  izV = steps*numSteps*(int)((value/minZ)/(maxZlog-minZlog)) + 2;
WITHOUT_CLASSIFICATION	// super.setSeriesPaint(series, paint);
WITHOUT_CLASSIFICATION	/// Squares
WITHOUT_CLASSIFICATION	/// Draw N, S, E, W
WITHOUT_CLASSIFICATION	// no zooming possible
WITHOUT_CLASSIFICATION	// clone share data sets => add the clone as listener to the dataset
WITHOUT_CLASSIFICATION	// only relevant when this is a subplot
WITHOUT_CLASSIFICATION	// allocate storage for datasets, axes and renderers (all optional)
WITHOUT_CLASSIFICATION	// reserve space for the domain axes...
WITHOUT_CLASSIFICATION	// reserve space for the range axes...
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// the first axis in the list is used for data <--> Java2D
WITHOUT_CLASSIFICATION	// draw domain crosshair if required...
WITHOUT_CLASSIFICATION	// draw range crosshair if required...
WITHOUT_CLASSIFICATION	// add domain axes to lists...
WITHOUT_CLASSIFICATION	// add range axes to lists...
WITHOUT_CLASSIFICATION	// draw the top axes
WITHOUT_CLASSIFICATION	// draw the bottom axes
WITHOUT_CLASSIFICATION	// draw the left axes
WITHOUT_CLASSIFICATION	// draw the right axes
WITHOUT_CLASSIFICATION	// draw the range grid lines, if any...
WITHOUT_CLASSIFICATION	// no renderer, no gridlines...
WITHOUT_CLASSIFICATION	// no renderer, no gridlines...
WITHOUT_CLASSIFICATION	// draw the domain grid lines, if any...
WITHOUT_CLASSIFICATION	// draw the markers that are associated with a specific dataset...
WITHOUT_CLASSIFICATION	// now draw annotations and render data items...
WITHOUT_CLASSIFICATION	// draw background annotations
WITHOUT_CLASSIFICATION	// render data items...
WITHOUT_CLASSIFICATION	// draw foreground annotations
WITHOUT_CLASSIFICATION	//  0 | 1 //  --+-- //  2 | 3
WITHOUT_CLASSIFICATION	// we can't draw quadrants without a valid x-axis
WITHOUT_CLASSIFICATION	// we can't draw quadrants without a valid y-axis
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// can't render anything without axes
WITHOUT_CLASSIFICATION	// no default renderer available
WITHOUT_CLASSIFICATION	//render series in reverse order
WITHOUT_CLASSIFICATION	//render series in forward order
WITHOUT_CLASSIFICATION	// use the TextTitle class because it is a concrete subclass
WITHOUT_CLASSIFICATION	// set up info collection...
WITHOUT_CLASSIFICATION	// adjust the drawing area for plot insets (if any)...
WITHOUT_CLASSIFICATION	// try the parent plot
WITHOUT_CLASSIFICATION	// try the parent plot
WITHOUT_CLASSIFICATION	// iterate through the datasets that map to the axis and get the union // of the ranges.
WITHOUT_CLASSIFICATION	// delegate to other method
WITHOUT_CLASSIFICATION	// delegate to other method
WITHOUT_CLASSIFICATION	// perform the zoom on each range axis
WITHOUT_CLASSIFICATION	// get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	// get the relevant source coordinate given the plot orientation
WITHOUT_CLASSIFICATION	// draw the plot background and axes...
WITHOUT_CLASSIFICATION	// the datasets are not cloned, but listeners need to be added...
WITHOUT_CLASSIFICATION	// if the event was caused by a change to series visibility, then // the axis ranges might need updating...
WITHOUT_CLASSIFICATION	// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)
WITHOUT_CLASSIFICATION	// check that the renderer has a corresponding dataset (it doesn't // matter if the dataset is null)
WITHOUT_CLASSIFICATION	// set the anchor value for the vertical axis...
WITHOUT_CLASSIFICATION	// grab the plot's annotations
WITHOUT_CLASSIFICATION	// is it a domain axis?
WITHOUT_CLASSIFICATION	// or is it a range axis?
WITHOUT_CLASSIFICATION	// if the axes use a linear scale, you can uncomment the code below and // switch to the alternative transX/transY calculation inside the loop // that follows - it is a little bit faster then. // // int xx = (int) dataArea.getMinX(); // int ww = (int) dataArea.getWidth(); // int yy = (int) dataArea.getMaxY(); // int hh = (int) dataArea.getHeight(); // double domainMin = this.domainAxis.getLowerBound(); // double domainLength = this.domainAxis.getUpperBound() - domainMin; // double rangeMin = this.rangeAxis.getLowerBound(); // double rangeLength = this.rangeAxis.getUpperBound() - rangeMin;
WITHOUT_CLASSIFICATION	// register the plot as a listener with its axes, datasets, and // renderers...
WITHOUT_CLASSIFICATION	// perform the zoom on each domain axis
WITHOUT_CLASSIFICATION	// lineVisible
WITHOUT_CLASSIFICATION	// adjust for insets...
WITHOUT_CLASSIFICATION	// set the new dataset, and register the chart as a change listener...
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// draw the background
WITHOUT_CLASSIFICATION	// intentionally blank
WITHOUT_CLASSIFICATION	// get the source coordinate - this plot has always a VERTICAL // orientation
WITHOUT_CLASSIFICATION	// images considered equal only if they're the SAME object // TODO: is there a way to do a better test?
WITHOUT_CLASSIFICATION	//int transX = (int) (xx + ww * (x - domainMin) / domainLength); //int transY = (int) (yy - hh * (y - rangeMin) / rangeLength);
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list // of change listeners...
WITHOUT_CLASSIFICATION	// plot is registered as a listener with the existing axis...
WITHOUT_CLASSIFICATION	// adjust for padding...
WITHOUT_CLASSIFICATION	// already calculated // already calculated
WITHOUT_CLASSIFICATION	// draw range indicators...
WITHOUT_CLASSIFICATION	// draw start of normal range
WITHOUT_CLASSIFICATION	// draw start of warning range
WITHOUT_CLASSIFICATION	// draw start of critical range
WITHOUT_CLASSIFICATION	// draw the axis...
WITHOUT_CLASSIFICATION	//cursor = midX - COLUMN_RADIUS - AXIS_GAP;
WITHOUT_CLASSIFICATION	// draw text value on screen
WITHOUT_CLASSIFICATION	//  draw units indicator
WITHOUT_CLASSIFICATION	// draw thermometer outline
WITHOUT_CLASSIFICATION	// no domain axis to zoom
WITHOUT_CLASSIFICATION	// work out the anchor point
WITHOUT_CLASSIFICATION	// calculate the bounds of the template value
WITHOUT_CLASSIFICATION	// align this rectangle to the frameAnchor
WITHOUT_CLASSIFICATION	// add the insets
WITHOUT_CLASSIFICATION	// draw the border
WITHOUT_CLASSIFICATION	// now find the text anchor point
WITHOUT_CLASSIFICATION	/* lineVisible= */
WITHOUT_CLASSIFICATION	// send a dataset change event to self...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// otherwise look up the paint list
WITHOUT_CLASSIFICATION	// work out the anchor point
WITHOUT_CLASSIFICATION	// urlText
WITHOUT_CLASSIFICATION	// first, expand the viewing area into a drawing frame
WITHOUT_CLASSIFICATION	// draw the background if there is one...
WITHOUT_CLASSIFICATION	// draw the pointers
WITHOUT_CLASSIFICATION	// draw the cap if there is one...
WITHOUT_CLASSIFICATION	// now do the minor tick marks
WITHOUT_CLASSIFICATION	// lowerBound
WITHOUT_CLASSIFICATION	// upperBound
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// extent
WITHOUT_CLASSIFICATION	// tickRadius
WITHOUT_CLASSIFICATION	// we don't clone the listeners
WITHOUT_CLASSIFICATION	// use item paint for fills by default
WITHOUT_CLASSIFICATION	// draw the outline of the filled polygon
WITHOUT_CLASSIFICATION	// just the lines, no filling
WITHOUT_CLASSIFICATION	// draw the item shapes
WITHOUT_CLASSIFICATION	// SERIES VISIBLE (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	// PAINT
WITHOUT_CLASSIFICATION	//// FILL PAINT //////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// return the override, if there is one...
WITHOUT_CLASSIFICATION	// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// OUTLINE PAINT //////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// STROKE
WITHOUT_CLASSIFICATION	// OUTLINE STROKE
WITHOUT_CLASSIFICATION	// otherwise look up the stroke table
WITHOUT_CLASSIFICATION	// SHAPE
WITHOUT_CLASSIFICATION	// otherwise look up the shape list
WITHOUT_CLASSIFICATION	// ITEM LABEL VISIBILITY...
WITHOUT_CLASSIFICATION	// otherwise look up the boolean table
WITHOUT_CLASSIFICATION	// this should have been defined as a boolean primitive, because // allowing null values is a nuisance...but it is part of the final // API now, so we'll have to support it.
WITHOUT_CLASSIFICATION	//// ITEM LABEL FONT //////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// ITEM LABEL PAINT  ////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// otherwise look up the position table
WITHOUT_CLASSIFICATION	// NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// otherwise look up the position list
WITHOUT_CLASSIFICATION	// the commented out code would be better, but only if // RendererChangeEvent is immutable, which it isn't.  See if there is // a way to fix this...
WITHOUT_CLASSIFICATION	// 'paint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'basePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'outlinePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseOutlinePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'stroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...
WITHOUT_CLASSIFICATION	// 'basePaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// shapeList // baseShape
WITHOUT_CLASSIFICATION	// 'outlineStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseOutlineStroke' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'itemLabelsVisible' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'itemLabelFont' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseItemLabelFont' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'itemLabelPaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseItemLabelPaint' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'postiveItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'negativeItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// 'baseNegativeItemLabelAnchor' : immutable, no need to clone reference
WITHOUT_CLASSIFICATION	// listeners are not restored automatically, but storage must be // provided...
WITHOUT_CLASSIFICATION	// === DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	// The following alternative is only supported in JDK 1.4 - we support // JDK 1.3.1 onwards // setItemLabelsVisible(Boolean.valueOf(visible));
WITHOUT_CLASSIFICATION	//System.err.print(" creating new outlier list ");
WITHOUT_CLASSIFICATION	//// TOOL TIP GENERATOR ///////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// URL GENERATOR ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// handle value outside bounds...
WITHOUT_CLASSIFICATION	// handle special case where value is less that item zero
WITHOUT_CLASSIFICATION	// special case where the lowest x-value is >= xLow
WITHOUT_CLASSIFICATION	// special case where the highest x-value is < xLow
WITHOUT_CLASSIFICATION	// skip any items that don't need including...
WITHOUT_CLASSIFICATION	// skip any items that don't need including...
WITHOUT_CLASSIFICATION	// assign a color for each unique value
WITHOUT_CLASSIFICATION	// assign a color for each unique value
WITHOUT_CLASSIFICATION	// in this case, every color has a unique value
WITHOUT_CLASSIFICATION	// in this case, every color has a range of values
WITHOUT_CLASSIFICATION	// end class wafermaprenderer
WITHOUT_CLASSIFICATION	// if there is no plot, there is no dataset to access...
WITHOUT_CLASSIFICATION	// we don't know anything about the ordering of the x-values, // but we can still skip any initial values that fall outside the // range...
WITHOUT_CLASSIFICATION	// when the x-values are descending, the upper bound is found by // comparing against xLow
WITHOUT_CLASSIFICATION	// more values than paints so map // multiple values to the same color
WITHOUT_CLASSIFICATION	// end foreach map entry // end else
WITHOUT_CLASSIFICATION	// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	// FIXME: calculate xxLeft and xxRight
WITHOUT_CLASSIFICATION	// handle positive value
WITHOUT_CLASSIFICATION	// LEFT POLYGON
WITHOUT_CLASSIFICATION	// LEFT POLYGON
WITHOUT_CLASSIFICATION	// RIGHT POLYGON
WITHOUT_CLASSIFICATION	// RIGHT POLYGON
WITHOUT_CLASSIFICATION	// handle negative value
WITHOUT_CLASSIFICATION	// calculate the bar width
WITHOUT_CLASSIFICATION	// '+' because v is negative
WITHOUT_CLASSIFICATION	// handle rendering separately for the two plot orientations...
WITHOUT_CLASSIFICATION	// draw the blocks
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// SHAPES VISIBLE
WITHOUT_CLASSIFICATION	// SHAPES FILLED
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// a list to store the series index and bar region, so we can draw // all the labels at the end...
WITHOUT_CLASSIFICATION	// draw the blocks
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// LINES VISIBLE
WITHOUT_CLASSIFICATION	// preserves old behaviour
WITHOUT_CLASSIFICATION	// contained titles
WITHOUT_CLASSIFICATION	// SHAPES FILLED
WITHOUT_CLASSIFICATION	// return the overall setting, if there is one...
WITHOUT_CLASSIFICATION	// delegate
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// do nothing if both the line and shape are not visible
WITHOUT_CLASSIFICATION	// nothing is drawn for null...
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// set the default item label positions
WITHOUT_CLASSIFICATION	// fill background...
WITHOUT_CLASSIFICATION	// highlight the background corners...
WITHOUT_CLASSIFICATION	// draw background image, if there is one...
WITHOUT_CLASSIFICATION	// both axes
WITHOUT_CLASSIFICATION	// === DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	// put an outline around the data area...
WITHOUT_CLASSIFICATION	// check the value we are plotting...
WITHOUT_CLASSIFICATION	// the bar is not visible
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	// return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	// return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	// otherwise look up the generator table
WITHOUT_CLASSIFICATION	// otherwise look up the generator table
WITHOUT_CLASSIFICATION	// TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	// URL GENERATOR
WITHOUT_CLASSIFICATION	// clip left and right bounds to data area
WITHOUT_CLASSIFICATION	// clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	// now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// defensive check
WITHOUT_CLASSIFICATION	// BAR Y
WITHOUT_CLASSIFICATION	// BAR X
WITHOUT_CLASSIFICATION	// cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	// you can add a null list - it would have been better if this // required EMPTY_LIST
WITHOUT_CLASSIFICATION	// BAR Y
WITHOUT_CLASSIFICATION	// BAR X
WITHOUT_CLASSIFICATION	// cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	// let the superclass handle it...
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	// cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	// cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	// cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// standard deviation lines
WITHOUT_CLASSIFICATION	// standard deviation lines
WITHOUT_CLASSIFICATION	// no new methods
WITHOUT_CLASSIFICATION	// value 0
WITHOUT_CLASSIFICATION	// get the clipping values...
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// cases 5, 6, 7 and 8
WITHOUT_CLASSIFICATION	// cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// if we modify the original list, it's best if the URL generator is // not affected
WITHOUT_CLASSIFICATION	// value 1
WITHOUT_CLASSIFICATION	// DRAW THE BARS...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// Y0
WITHOUT_CLASSIFICATION	// Y1
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// X
WITHOUT_CLASSIFICATION	// Y
WITHOUT_CLASSIFICATION	// subtitle 1 is the legend
WITHOUT_CLASSIFICATION	// calculate the bar width
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// BAR Y
WITHOUT_CLASSIFICATION	// BAR X
WITHOUT_CLASSIFICATION	// cases 1, 2, 3 and 4
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// cases 9, 10, 11 and 12
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// the clone contains a reference to a CLONE of the original object
WITHOUT_CLASSIFICATION	// draw the item labels if there are any...
WITHOUT_CLASSIFICATION	// calculate bar width...
WITHOUT_CLASSIFICATION	// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
WITHOUT_CLASSIFICATION	// no fields to compute...
WITHOUT_CLASSIFICATION	//plotBackgroundPaint;
WITHOUT_CLASSIFICATION	// PlotOrientation.VERTICAL
WITHOUT_CLASSIFICATION	// calculate the bar width
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// the bar is not visible
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// bar is not visible
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// draw the item labels if there are any...
WITHOUT_CLASSIFICATION	// calculate bar width...
WITHOUT_CLASSIFICATION	// check that clone is independent of the original
WITHOUT_CLASSIFICATION	// do nothing if item is not visible or null
WITHOUT_CLASSIFICATION	// 100 percent, so it will not apply unless changed
WITHOUT_CLASSIFICATION	// work out the label anchor point...
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// add an item entity, if this information is being collected
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// draw the item labels if there are any...
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// in the following code, barL0 is (in Java2D coordinates) the LEFT // end of the bar for a horizontal bar chart, and the TOP end of the // bar for a vertical bar chart.  Whether this is the BASE of the bar // or not depends also on (a) whether the data value is 'negative' // relative to the base value and (b) whether or not the range axis is // inverted.  This only matters if/when we apply the minimumBarLength // attribute, because we should extend the non-base end of the bar
WITHOUT_CLASSIFICATION	// switch x and y
WITHOUT_CLASSIFICATION	// or: x1s + 2*(x1-x1s)
WITHOUT_CLASSIFICATION	// or: x0s + 2*(x0-x0s)
WITHOUT_CLASSIFICATION	// extend x0's flat bar
WITHOUT_CLASSIFICATION	// upright bar
WITHOUT_CLASSIFICATION	// x1's flat bar
WITHOUT_CLASSIFICATION	//standard deviation lines
WITHOUT_CLASSIFICATION	//// OUTLINE PAINT /////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//plotOutlinePaint;
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// BAR Y
WITHOUT_CLASSIFICATION	// BAR X
WITHOUT_CLASSIFICATION	// Y0
WITHOUT_CLASSIFICATION	// Y1
WITHOUT_CLASSIFICATION	// draw the standard deviation lines *before* the shapes (if they're // visible) - it looks better if the shape fill colour is different to // the line colour
WITHOUT_CLASSIFICATION	// BAR WIDTH
WITHOUT_CLASSIFICATION	// BAR HEIGHT
WITHOUT_CLASSIFICATION	// there are no fields to check
WITHOUT_CLASSIFICATION	/* =========================================================== * JFreeChart : a free chart library for the Java(tm) platform * =========================================================== * * (C) Copyright 2000-2013, by Object Refinery Limited and Contributors. * * Project Info:  http://www.jfree.org/jfreechart/index.html * * This library is free software; you can redistribute it and/or modify it * under the terms of the GNU Lesser General Public License as published by * the Free Software Foundation; either version 2.1 of the License, or * (at your option) any later version. * * This library is distributed in the hope that it will be useful, but * WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY * or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public * License for more details. * * You should have received a copy of the GNU Lesser General Public * License along with this library; if not, write to the Free Software * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, * USA. * * [Oracle and Java are registered trademarks of Oracle and/or its affiliates.  * Other names may be trademarks of their respective owners.] * * ------------------------- * CategoryItemRenderer.java * ------------------------- * * (C) Copyright 2001-2011, by Object Refinery Limited and Contributors. * * Original Author:  David Gilbert (for Object Refinery Limited); * Contributor(s):   Mark Watson (www.markwatson.com); * * Changes * ------- * 23-Oct-2001 : Version 1 (DG); * 16-Jan-2002 : Renamed HorizontalCategoryItemRenderer.java *               --> CategoryItemRenderer.java (DG); * 05-Feb-2002 : Changed return type of the drawCategoryItem method from void *               to Shape, as part of the tooltips implementation (DG) * *               NOTE (30-May-2002) : this has subsequently been changed back *               to void, tooltips are now collected along with entities in *               ChartRenderingInfo (DG); * * 14-Mar-2002 : Added the initialise method, and changed all bar plots to use *               this renderer (DG); * 23-May-2002 : Added ChartRenderingInfo to the initialise method (DG); * 29-May-2002 : Added the getAxisArea(Rectangle2D) method (DG); * 06-Jun-2002 : Updated Javadoc comments (DG); * 26-Jun-2002 : Added range axis to the initialise method (DG); * 24-Sep-2002 : Added getLegendItem() method (DG); * 23-Oct-2002 : Added methods to get/setToolTipGenerator (DG); * 05-Nov-2002 : Replaced references to CategoryDataset with TableDataset (DG); * 06-Nov-2002 : Added the domain axis to the drawCategoryItem method.  Renamed *               drawCategoryItem() --> drawItem() (DG); * 20-Nov-2002 : Changed signature of drawItem() method to reflect use of *               TableDataset (DG); * 26-Nov-2002 : Replaced the isStacked() method with the getRangeType() *               method (DG); * 08-Jan-2003 : Changed getSeriesCount() --> getRowCount() and *               getCategoryCount() --> getColumnCount() (DG); * 09-Jan-2003 : Changed name of grid-line methods (DG); * 21-Jan-2003 : Merged TableDataset with CategoryDataset (DG); * 10-Apr-2003 : Changed CategoryDataset to KeyedValues2DDataset in *               drawItem() method (DG); * 29-Apr-2003 : Eliminated Renderer interface (DG); * 02-Sep-2003 : Fix for bug 790407 (DG); * 16-Sep-2003 : Changed ChartRenderingInfo --> PlotRenderingInfo (DG); * 20-Oct-2003 : Added setOutlinePaint() method (DG); * 06-Feb-2004 : Added missing methods, and moved deprecated methods (DG); * 19-Feb-2004 : Added extra setXXXLabelsVisible() methods (DG); * 29-Apr-2004 : Changed Integer --> int in initialise() method (DG); * 18-May-2004 : Added methods for item label paint (DG); * 05-Nov-2004 : Added getPassCount() method and 'pass' parameter to drawItem() *               method (DG); * 07-Jan-2005 : Renamed getRangeExtent() --> findRangeBounds (DG); * 11-Jan-2005 : Removed deprecated code in preparation for 1.0.0 release (DG); * 23-Feb-2005 : Now extends LegendItemSource (DG); * 20-Apr-2005 : Renamed CategoryLabelGenerator *               --> CategoryItemLabelGenerator (DG); * 20-May-2005 : Added drawDomainMarker() method (DG); * ------------- JFREECHART 1.0.x --------------------------------------------- * 20-Feb-2007 : Updated API docs (DG); * 19-Apr-2007 : Deprecated seriesVisible and seriesVisibleInLegend flags (DG); * 20-Apr-2007 : Deprecated paint, fillPaint, outlinePaint, stroke, *               outlineStroke, shape, itemLabelsVisible, itemLabelFont, *               itemLabelPaint, positiveItemLabelPosition, *               negativeItemLabelPosition and createEntities override *               fields (DG); * 26-Jun-2008 : Added new method required for crosshair support - THIS CHANGES *               THE API as of version 1.0.11 (DG); * */
WITHOUT_CLASSIFICATION	//// PAINT /////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesPaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// FIXME: add setBasePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	//// FILL PAINT /////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	// TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesPaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// ITEM LABELS VISIBLE
WITHOUT_CLASSIFICATION	// FIXME: add setBaseOutlinePaint(Paint, boolean)?
WITHOUT_CLASSIFICATION	//// STROKE ////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	//// OUTLINE STROKE ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	//// SHAPE /////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesShape(int, Shape, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseShape(Shape, boolean) ?
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesItemLabelGenerator(int, CategoryItemLabelGenerator, //            boolean)
WITHOUT_CLASSIFICATION	// FIXME: add setBaseToolTipGenerator(CategoryToolTipGenerator, boolean) ?
WITHOUT_CLASSIFICATION	//// ITEM LABEL FONT  //////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesItemLabelFont(int, Font, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseItemLabelFont(Font, boolean) ?
WITHOUT_CLASSIFICATION	//// ITEM LABEL PAINT  /////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesItemLabelPaint(int, Paint, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseItemLabelPaint(Paint, boolean) ?
WITHOUT_CLASSIFICATION	// ITEM URL GENERATOR
WITHOUT_CLASSIFICATION	// as a special case, if the bar colour has alpha == 0, we draw // nothing.
WITHOUT_CLASSIFICATION	/*&& state.getBarWidth() > renderer.BAR_OUTLINE_WIDTH_THRESHOLD*/
WITHOUT_CLASSIFICATION	// standard ResourceBundle behaviour
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// nothing is drawn for null...
WITHOUT_CLASSIFICATION	// current data point...
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// previous data point...
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// submit the current data point as a crosshair candidate
WITHOUT_CLASSIFICATION	// fill background...
WITHOUT_CLASSIFICATION	// draw background image, if there is one...
WITHOUT_CLASSIFICATION	// put an outline around the data area...
WITHOUT_CLASSIFICATION	// draw the bar...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	// 100 percent, so it will not apply unless // changed
WITHOUT_CLASSIFICATION	// set the outline paint to fully transparent, then the legend shape // will just have the same colour as the lines drawn by the renderer
WITHOUT_CLASSIFICATION	// first check the number we are plotting...
WITHOUT_CLASSIFICATION	// reset the min and max
WITHOUT_CLASSIFICATION	// connect to the previous point
WITHOUT_CLASSIFICATION	// create a line renderer only
WITHOUT_CLASSIFICATION	// higlight the background corners...
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// check that a legend item needs to be displayed...
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// Y0
WITHOUT_CLASSIFICATION	// Y1
WITHOUT_CLASSIFICATION	// nothing is drawn for null values...
WITHOUT_CLASSIFICATION	// BAR WIDTH
WITHOUT_CLASSIFICATION	// BAR HEIGHT
WITHOUT_CLASSIFICATION	// we'll set this to false if there is at // least one non-null data item...
WITHOUT_CLASSIFICATION	// set the default item label positions, which will only be used if // the user requests visible item labels...
WITHOUT_CLASSIFICATION	// treat the last column value as an absolute
WITHOUT_CLASSIFICATION	// only needed if calculating percentages
WITHOUT_CLASSIFICATION	// calculate the box width
WITHOUT_CLASSIFICATION	// offset the start of the boxes if the total width used is smaller // than the category width
WITHOUT_CLASSIFICATION	// offset the start of the box if the box width is smaller than // the category width
WITHOUT_CLASSIFICATION	// draw the box...
WITHOUT_CLASSIFICATION	// draw the upper shadow...
WITHOUT_CLASSIFICATION	// draw the lower shadow...
WITHOUT_CLASSIFICATION	// FIXME: add setBasePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// offset the start of the boxes if the total width used is smaller // than the category width
WITHOUT_CLASSIFICATION	// draw the upper shadow...
WITHOUT_CLASSIFICATION	// draw the lower shadow...
WITHOUT_CLASSIFICATION	// here we check that the average marker will in fact be // visible before drawing it...
WITHOUT_CLASSIFICATION	// draw mean - SPECIAL AIMS REQUIREMENT...
WITHOUT_CLASSIFICATION	// average radius
WITHOUT_CLASSIFICATION	// average radius
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// draw median...
WITHOUT_CLASSIFICATION	// draw median...
WITHOUT_CLASSIFICATION	// offset the start of the box if the box width is smaller than the // category width
WITHOUT_CLASSIFICATION	// draw the body...
WITHOUT_CLASSIFICATION	// draw yOutliers...
WITHOUT_CLASSIFICATION	// draw farout indicators
WITHOUT_CLASSIFICATION	// start from Y = rangeBase
WITHOUT_CLASSIFICATION	// Process outliers. Each outlier is either added to the // appropriate outlier list or a new outlier list is made
WITHOUT_CLASSIFICATION	// disable visible items optimisation - it doesn't work for this // renderer...
WITHOUT_CLASSIFICATION	// Get the item count for the series, so that we can know which is the // end of the series.
WITHOUT_CLASSIFICATION	// avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	// Create a new Area for the series
WITHOUT_CLASSIFICATION	// The first point is (x, this.baseYValue)
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// not just a horizontal bar but need to perform a 'step'.
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// avoid possible sun.dc.pr.PRException: endPath: bad path
WITHOUT_CLASSIFICATION	// retrieve an item
WITHOUT_CLASSIFICATION	// Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	// Check if the item is the last item for the series or if it // is a NULL value and number of items > 0.  We can't draw an area for // a single point.
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// fill the polygon
WITHOUT_CLASSIFICATION	// draw an outline around the Area.
WITHOUT_CLASSIFICATION	// start new area when needed (see above)
WITHOUT_CLASSIFICATION	// do nothing...this is just a hook for subclasses
WITHOUT_CLASSIFICATION	// TODO getSeriesShape(n).getBounds().width / 2;
WITHOUT_CLASSIFICATION	// TODO getSeriesShape(n).getBounds().height / 2;
WITHOUT_CLASSIFICATION	// can't draw anything
WITHOUT_CLASSIFICATION	// draw optional guide lines
WITHOUT_CLASSIFICATION	// calculate the arrow head and draw it...
WITHOUT_CLASSIFICATION	// orientation is HORIZONTAL
WITHOUT_CLASSIFICATION	//labelLinkStyle;
WITHOUT_CLASSIFICATION	// request width index == itemCount
WITHOUT_CLASSIFICATION	// check if either series is a degenerate case (i.e. less than 2 points)
WITHOUT_CLASSIFICATION	// check if series are disjoint (i.e. domain-spans do not overlap)
WITHOUT_CLASSIFICATION	// polygon definitions
WITHOUT_CLASSIFICATION	// state
WITHOUT_CLASSIFICATION	// actual value set below
WITHOUT_CLASSIFICATION	// if a subtrahend is not specified, assume it is zero
WITHOUT_CLASSIFICATION	// fast-forward through leading tails
WITHOUT_CLASSIFICATION	// get the x and y coordinates
WITHOUT_CLASSIFICATION	// minuend needs to be fast forwarded
WITHOUT_CLASSIFICATION	// subtrahend needs to be fast forwarded
WITHOUT_CLASSIFICATION	// project onto subtrahend
WITHOUT_CLASSIFICATION	// project onto minuend
WITHOUT_CLASSIFICATION	// start of algorithm
WITHOUT_CLASSIFICATION	// this won't happen :)
WITHOUT_CLASSIFICATION	// deassert b_*FastForward (only matters for 1st time through loop)
WITHOUT_CLASSIFICATION	// check for intersect
WITHOUT_CLASSIFICATION	// check if line segments are colinear
WITHOUT_CLASSIFICATION	// compute common denominator
WITHOUT_CLASSIFICATION	// compute common deltas
WITHOUT_CLASSIFICATION	// compute numerators
WITHOUT_CLASSIFICATION	// check if previously colinear
WITHOUT_CLASSIFICATION	// clear colinear points and flag
WITHOUT_CLASSIFICATION	// set new starting point for the polygon
WITHOUT_CLASSIFICATION	// compute slope components
WITHOUT_CLASSIFICATION	// test if both grahphs have a vertical rise at the same x-value
WITHOUT_CLASSIFICATION	// check if the line segments intersect
WITHOUT_CLASSIFICATION	// compute the point of intersection
WITHOUT_CLASSIFICATION	// advance minuend and subtrahend to intesect
WITHOUT_CLASSIFICATION	// add intersection point to the polygon
WITHOUT_CLASSIFICATION	// add the subtrahend's points to the polygon in reverse
WITHOUT_CLASSIFICATION	// create an actual polygon
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// SERIES VISIBLE IN LEGEND (not yet respected by all renderers)
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// draw an outline around the Area.
WITHOUT_CLASSIFICATION	// project onto subtrahend
WITHOUT_CLASSIFICATION	// project onto minuend
WITHOUT_CLASSIFICATION	// add the subtrahend's points to the polygon in reverse
WITHOUT_CLASSIFICATION	// create an actual polygon
WITHOUT_CLASSIFICATION	// set the maxY and minY values to intersect y-value
WITHOUT_CLASSIFICATION	// add interection point to new polygon
WITHOUT_CLASSIFICATION	// advance the minuend if needed
WITHOUT_CLASSIFICATION	// advance the subtrahend if needed
WITHOUT_CLASSIFICATION	// check if the final polygon needs to be clipped
WITHOUT_CLASSIFICATION	// consider last point of minuend and subtrahend for determining // positivity
WITHOUT_CLASSIFICATION	// add the last point of the minuned and subtrahend
WITHOUT_CLASSIFICATION	// vertical orientation
WITHOUT_CLASSIFICATION	//// VISIBLE //////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// PAINT ////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesOutlinePaint(int, Paint, boolean)?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseOutlinePaint(Paint, boolean)?
WITHOUT_CLASSIFICATION	// create the polygon // add the minuend's points to polygon
WITHOUT_CLASSIFICATION	// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	//// OUTLINE PAINT ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// bad axisNumber
WITHOUT_CLASSIFICATION	// a Range object cannot be equal to a different object type
WITHOUT_CLASSIFICATION	// POSITIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	// NEGATIVE ITEM LABEL POSITION...
WITHOUT_CLASSIFICATION	//// TOOL TIP GENERATOR ///////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// URL GENERATOR ////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesOutlineStroke(int, Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseOutlineStroke(Stroke, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesShape(int, Shape, boolean) ?
WITHOUT_CLASSIFICATION	// FIXME: add setBaseShape(Shape, boolean) ?
WITHOUT_CLASSIFICATION	// allowDuplicateXValues
WITHOUT_CLASSIFICATION	//// STROKE ///////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// OUTLINE STROKE ///////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// SHAPE ////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// LEGEND ITEMS /////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// LEGEND ITEM LABEL GENERATOR //////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// ITEM LABEL GENERATOR /////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// FIXME:
WITHOUT_CLASSIFICATION	//// ITEM LABEL FONT ///////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// ANNOTATIONS //////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	//// DRAWING //////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// DEPRECATED METHODS
WITHOUT_CLASSIFICATION	// need to handle cluster centering as a special case
WITHOUT_CLASSIFICATION	// may be negative
WITHOUT_CLASSIFICATION	/*             * Legacy? Just return the original Paint.             * (this corresponds EXACTLY to how Paints used to be darkened)             */
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// Create a new Area for the series
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// first pass draws the shading
WITHOUT_CLASSIFICATION	// last item in series, draw the lot... // set up the alpha-transparency...
WITHOUT_CLASSIFICATION	// second pass adds shapes where the items are ..
WITHOUT_CLASSIFICATION	// return straight away if the item is not visible
WITHOUT_CLASSIFICATION	// add an entity if this info is being collected
WITHOUT_CLASSIFICATION	//  Get height adjustment based on stack and translate to Java2D values
WITHOUT_CLASSIFICATION	//  Get series Paint and Stroke
WITHOUT_CLASSIFICATION	//  On first pass render the areas, line and outlines
WITHOUT_CLASSIFICATION	// start from previous height (ph1)
WITHOUT_CLASSIFICATION	// should not get here
WITHOUT_CLASSIFICATION	// use item paint for fills by default
WITHOUT_CLASSIFICATION	// === DEPRECATED CODE ===
WITHOUT_CLASSIFICATION	// LINES VISIBLE
WITHOUT_CLASSIFICATION	// SHAPES VISIBLE
WITHOUT_CLASSIFICATION	// SHAPES FILLED
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// Get the item count for the series, so that we can know which is the // end of the series.
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only
WITHOUT_CLASSIFICATION	// The first point is (x, 0)
WITHOUT_CLASSIFICATION	//  Fill the polygon
WITHOUT_CLASSIFICATION	//  Draw an outline around the Area.
WITHOUT_CLASSIFICATION	// first pass draws the background (lines, for instance)
WITHOUT_CLASSIFICATION	//labelLinkPaint;
WITHOUT_CLASSIFICATION	// only draw if we have good values
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// get the data points
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// second pass adds shapes where the items are ..
WITHOUT_CLASSIFICATION	// Add points from last series to complete the base of the // polygon
WITHOUT_CLASSIFICATION	// On second pass render shapes and collect entity and tooltip // information
WITHOUT_CLASSIFICATION	// update path to reflect latest point
WITHOUT_CLASSIFICATION	// if this is the last item, draw the path ...
WITHOUT_CLASSIFICATION	// draw path
WITHOUT_CLASSIFICATION	// Collect points
WITHOUT_CLASSIFICATION	// construct path
WITHOUT_CLASSIFICATION	// we need at least two points to draw something
WITHOUT_CLASSIFICATION	// we need at least 3 points to spline. Draw simple line // for two points
WITHOUT_CLASSIFICATION	// construct spline // number of points // Newton form coefficients // x-coordinates of nodes
WITHOUT_CLASSIFICATION	// note that a[0]=a[np-1]=0
WITHOUT_CLASSIFICATION	// loop over intervals between nodes
WITHOUT_CLASSIFICATION	// we're running on JRE 1.3.1 so this is the best we have...
WITHOUT_CLASSIFICATION	// both axes
WITHOUT_CLASSIFICATION	// ITEM LABEL GENERATOR
WITHOUT_CLASSIFICATION	// return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	// return the generator for ALL series, if there is one...
WITHOUT_CLASSIFICATION	// otherwise look up the generator table
WITHOUT_CLASSIFICATION	// otherwise look up the generator table
WITHOUT_CLASSIFICATION	// TOOL TIP GENERATOR
WITHOUT_CLASSIFICATION	// URL GENERATOR
WITHOUT_CLASSIFICATION	// clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	// clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	// now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	// now draw the outlines, if visible...
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// work out the label anchor point...
WITHOUT_CLASSIFICATION	// map a key to the default group
WITHOUT_CLASSIFICATION	// Add last point @ y=0 for fillPath and close path
WITHOUT_CLASSIFICATION	// fill under the curve...
WITHOUT_CLASSIFICATION	// then draw the line...
WITHOUT_CLASSIFICATION	// reset points vector
WITHOUT_CLASSIFICATION	/*      factorization and forward substitution */
WITHOUT_CLASSIFICATION	// now draw the real shape
WITHOUT_CLASSIFICATION	// should never get here
WITHOUT_CLASSIFICATION	// 'plot' : just retain reference, not a deep copy
WITHOUT_CLASSIFICATION	// just the domain axis...
WITHOUT_CLASSIFICATION	// just the range axis...
WITHOUT_CLASSIFICATION	// get the label position..
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// collect entity and tool tip information...
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// Add each point to Area (x, y)
WITHOUT_CLASSIFICATION	// vertical orientation
WITHOUT_CLASSIFICATION	// in the rendering process, there is special handling for item // zero, so we can't support processing of visible data items only
WITHOUT_CLASSIFICATION	// this represents the situation // for drawing a horizontal bar.
WITHOUT_CLASSIFICATION	//this handles the need to perform a 'step'.
WITHOUT_CLASSIFICATION	// calculate the step point
WITHOUT_CLASSIFICATION	//this handles the need to perform a 'step'. // calculate the step point
WITHOUT_CLASSIFICATION	// submit this data item as a candidate for the crosshair point
WITHOUT_CLASSIFICATION	// create a new area polygon for the series
WITHOUT_CLASSIFICATION	// the first point is (x, 0)
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// otherwise look up the paint table
WITHOUT_CLASSIFICATION	// SHAPES FILLED
WITHOUT_CLASSIFICATION	// return the overall setting, if there is one...
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// && state.getBarWidth() > BAR_OUTLINE_WIDTH_THRESHOLD) {
WITHOUT_CLASSIFICATION	// no fields to compute...
WITHOUT_CLASSIFICATION	// Add the last point (x,0)
WITHOUT_CLASSIFICATION	// draw an outline around the Area.
WITHOUT_CLASSIFICATION	// Check if the item is the last item for the series. // and number of items > 0.  We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	// a new map always has 1 group (the default group)
WITHOUT_CLASSIFICATION	// we make the clip region slightly larger than the // dataArea so that the clipped edges don't show lines // on the chart
WITHOUT_CLASSIFICATION	// no change
WITHOUT_CLASSIFICATION	// here we use BooleanUtilities to remain compatible with JDKs < 1.4
WITHOUT_CLASSIFICATION	// need to make sure we are adding *after* any duplicates
WITHOUT_CLASSIFICATION	// update the max value
WITHOUT_CLASSIFICATION	// only draw if we have good values
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// draw the item label if there is one...
WITHOUT_CLASSIFICATION	// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// update path to reflect latest point
WITHOUT_CLASSIFICATION	// draw path
WITHOUT_CLASSIFICATION	// we are starting a new series path
WITHOUT_CLASSIFICATION	// only draw a line if the gap between the current and // previous data point is within the threshold
WITHOUT_CLASSIFICATION	// we needed to get this far even for invisible items, to ensure that // seriesPath updates happened, but now there is nothing more we need // to do for non-visible items...
WITHOUT_CLASSIFICATION	// this method must be overridden if you want to display images
WITHOUT_CLASSIFICATION	// draw the upper shadow
WITHOUT_CLASSIFICATION	// draw the lower shadow
WITHOUT_CLASSIFICATION	// draw the body
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// draw the upper shadow
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // PROTECTED METHODS // These provide the opportunity to subclass the standard renderer and // create custom effects. ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// draw the lower shadow
WITHOUT_CLASSIFICATION	// draw the body
WITHOUT_CLASSIFICATION	// draw median
WITHOUT_CLASSIFICATION	// draw average - SPECIAL AIMS REQUIREMENT
WITHOUT_CLASSIFICATION	// draw average - SPECIAL AIMS REQUIREMENT
WITHOUT_CLASSIFICATION	// here we check that the average marker will in fact be visible // before drawing it...
WITHOUT_CLASSIFICATION	// yOutliers can be null, but we'd prefer it to be an empty list in // that case...
WITHOUT_CLASSIFICATION	/* From outlier array sort out which are outliers and put these into         * an arraylist. If there are any farouts, set the flag on the         * OutlierListCollection         */
WITHOUT_CLASSIFICATION	// draw yOutliers
WITHOUT_CLASSIFICATION	// draw outliers
WITHOUT_CLASSIFICATION	// draw farout
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// get the data point...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// get the previous data point...
WITHOUT_CLASSIFICATION	// here we check that the average marker will in fact be visible // before drawing it...
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// Process outliers. Each outlier is either added to the appropriate // outlier list or a new outlier list is made
WITHOUT_CLASSIFICATION	// for item labels, we have a special case because there is the // possibility to draw (a) the regular item label near to just the // upper y-value, or (b) the regular item label near the upper y-value // PLUS an additional item label near the lower y-value.
WITHOUT_CLASSIFICATION	// If null, don't draw line => then delegate to parent
WITHOUT_CLASSIFICATION	// If null, don't draw line at all
WITHOUT_CLASSIFICATION	// Now split the segment as needed
WITHOUT_CLASSIFICATION	// If the segment must be splitted, insert a new point // Strict test forces to have real segments (not 2 equal points) // and avoids division by 0
WITHOUT_CLASSIFICATION	// If the line is not wrapping, then parent is OK
WITHOUT_CLASSIFICATION	// calculate the highest volume in the dataset...
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// PlotOrientation.HORIZONTAL
WITHOUT_CLASSIFICATION	// draw the outline...
WITHOUT_CLASSIFICATION	// as a special case, if the bar colour has alpha == 0, we draw // nothing.
WITHOUT_CLASSIFICATION	// update path to reflect latest point
WITHOUT_CLASSIFICATION	// if this is the last item, draw the path ...
WITHOUT_CLASSIFICATION	// draw path
WITHOUT_CLASSIFICATION	// transpose the dimensions, because the title is rotated
WITHOUT_CLASSIFICATION	// The split may occur in either x splitted segments, if any, but // not in both
WITHOUT_CLASSIFICATION	// the x value is not within the axis range
WITHOUT_CLASSIFICATION	// not a HighLowDataset, so just draw a line connecting this point // with the previous point...
WITHOUT_CLASSIFICATION	// include the interval if there is one
WITHOUT_CLASSIFICATION	// include the interval if there is one
WITHOUT_CLASSIFICATION	// draw the error bar for the x-interval
WITHOUT_CLASSIFICATION	// draw the error bar for the y-interval
WITHOUT_CLASSIFICATION	//domainGridlinePaint;
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// get the previous point and the next point so we can calculate a // "hot spot" for the area (used by the chart entity)...
WITHOUT_CLASSIFICATION	// do nothing if item is not visible
WITHOUT_CLASSIFICATION	// no new methods
WITHOUT_CLASSIFICATION	// set the default item label positions, which will only be used if // the user requests visible item labels...
WITHOUT_CLASSIFICATION	// handle item label drawing, now that we know all the bars have // been drawn...
WITHOUT_CLASSIFICATION	// if the renderer isn't assigned to a plot, then we don't have a // dataset...
WITHOUT_CLASSIFICATION	//initalize xValues, yValues, and zValues arrays.
WITHOUT_CLASSIFICATION	// setup for collecting optional entity info...
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// handle positive value
WITHOUT_CLASSIFICATION	// LEFT POLYGON
WITHOUT_CLASSIFICATION	// RIGHT POLYGON
WITHOUT_CLASSIFICATION	// RIGHT POLYGON
WITHOUT_CLASSIFICATION	// handle negative value
WITHOUT_CLASSIFICATION	// clip left and right bounds to data area
WITHOUT_CLASSIFICATION	// clip top and bottom bounds to data area
WITHOUT_CLASSIFICATION	// work out the label anchor point...
WITHOUT_CLASSIFICATION	//  Get series Paint and Stroke
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// is there an alignment adjustment to be made?
WITHOUT_CLASSIFICATION	// update the crosshair point
WITHOUT_CLASSIFICATION	// calculate the maximum allowed candle width from the axis...
WITHOUT_CLASSIFICATION	// Absolute value, since the relative x // positions are reversed for horizontal orientation
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// pdfDocument class will be null so the function will return false
WITHOUT_CLASSIFICATION	// add an entity for the item...
WITHOUT_CLASSIFICATION	// draw the upper shadow
WITHOUT_CLASSIFICATION	// draw the lower shadow
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// draw the body
WITHOUT_CLASSIFICATION	// this won't happen :)
WITHOUT_CLASSIFICATION	// --- DEPRECATED CODE ----------------------------------------------------
WITHOUT_CLASSIFICATION	// create the temporary directory if it doesn't exist
WITHOUT_CLASSIFICATION	//  Add chart to deletion list in session
WITHOUT_CLASSIFICATION	//  Set HTTP headers
WITHOUT_CLASSIFICATION	//  Replace ".." with "" //  This is to prevent access to the rest of the file system
WITHOUT_CLASSIFICATION	//  Check the file exists
WITHOUT_CLASSIFICATION	//  Serve it up
WITHOUT_CLASSIFICATION	// draw the block without collecting entities
WITHOUT_CLASSIFICATION	// RectangleInsets is immutable => same reference in clone OK
WITHOUT_CLASSIFICATION	// suppress compiler warning
WITHOUT_CLASSIFICATION	// suppress compiler warning
WITHOUT_CLASSIFICATION	// determine the space required for the axis
WITHOUT_CLASSIFICATION	// transpose the dimensions, because the title is rotated
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// don't bother with parsing
WITHOUT_CLASSIFICATION	// don't bother with parsing
WITHOUT_CLASSIFICATION	// no need to instantiate this class   
WITHOUT_CLASSIFICATION	//yAdj = -descent - leading + (float) bounds.getHeight();
WITHOUT_CLASSIFICATION	// svgClass will be null so the function will return false
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	// don't bother with parsing
WITHOUT_CLASSIFICATION	// standard ResourceBundle behaviour
WITHOUT_CLASSIFICATION	// update (x1, y1), (x2, y2) and f1 and f2 using intersections // then recheck
WITHOUT_CLASSIFICATION	// first point is outside, so we update it against one of the // four sides then continue
WITHOUT_CLASSIFICATION	// second point is outside, so we update it against one of the // four sides then continue
WITHOUT_CLASSIFICATION	// the line is visible - if it wasn't, we'd have // returned false from within the while loop above
WITHOUT_CLASSIFICATION	/*                 * Lots can go wrong while fiddling with Images, Color Models                 * & such!  If anything at all goes awry, just return the original                 * TexturePaint.  (TexturePaint's are immutable anyway, so no harm                 * done)                 */
WITHOUT_CLASSIFICATION	/* Placeholder */
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	/**/
WITHOUT_CLASSIFICATION	/* (pix-buffer is large enough for all pixels of one row) */
WITHOUT_CLASSIFICATION	// RGB (+ optional Alpha which we leave // unchanged)
WITHOUT_CLASSIFICATION	// Red // Green // Blue. Now map computed colour to // nearest in Palette...
WITHOUT_CLASSIFICATION	// Red // Green // Blue
WITHOUT_CLASSIFICATION	/* Ignore alpha-channel -> */
WITHOUT_CLASSIFICATION	// <- this is the code that actually COPIES the pixels
WITHOUT_CLASSIFICATION	/*         * Buffered Images may have properties, but NEVER disclose them!         * Nevertheless, just in case someone implements getPropertyNames()         * one day...         */
WITHOUT_CLASSIFICATION	// ALWAYS null
WITHOUT_CLASSIFICATION	// all methods are static, no need to instantiate
WITHOUT_CLASSIFICATION	// substitute the filtered URL list
WITHOUT_CLASSIFICATION	// adjust text bounds to match string position
WITHOUT_CLASSIFICATION	// horizontal pass
WITHOUT_CLASSIFICATION	// substract the oldest pixel from the sum
WITHOUT_CLASSIFICATION	// substract the oldest pixel from the sum
WITHOUT_CLASSIFICATION	// get the lastest pixel
WITHOUT_CLASSIFICATION	// get the lastest pixel
WITHOUT_CLASSIFICATION	// vertical pass
WITHOUT_CLASSIFICATION	//get the coordinates of the original GradientPaint
WITHOUT_CLASSIFICATION	//get the coordinates of the shape that is to be filled
WITHOUT_CLASSIFICATION	//reserve variables to store the coordinates of the resulting GradientPaint
WITHOUT_CLASSIFICATION	//start point is upper left corner
WITHOUT_CLASSIFICATION	//end point is lower right corner --> diagonal gradient
WITHOUT_CLASSIFICATION	//start point is lower left right corner --> diagonal gradient
WITHOUT_CLASSIFICATION	// delegate argument checking to XYDataItem...
WITHOUT_CLASSIFICATION	//end point is either lower left corner --> vertical gradient //or end point is upper right corner --> horizontal gradient
WITHOUT_CLASSIFICATION	// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already
WITHOUT_CLASSIFICATION	// it is too slow to look at every data item, so let's just look at // the first, middle and last items...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another ComparableObjectItem object // ---------------------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to a general object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider these to be ordered after general objects
WITHOUT_CLASSIFICATION	// the row may not have an entry for this key, in which case the // return value is null
WITHOUT_CLASSIFICATION	// check that the column key is defined in the 2D structure
WITHOUT_CLASSIFICATION	// 1. check whether the row is now empty.
WITHOUT_CLASSIFICATION	// 1. check whether the row is now empty.
WITHOUT_CLASSIFICATION	// 2. check whether the column is now empty.
WITHOUT_CLASSIFICATION	// 2. check whether the column is now empty.
WITHOUT_CLASSIFICATION	//int columnIndex = getColumnIndex(columnKey);
WITHOUT_CLASSIFICATION	// for the keys, a shallow copy should be fine because keys // should be immutable...
WITHOUT_CLASSIFICATION	// but the row data requires a deep copy
WITHOUT_CLASSIFICATION	// already know 'a' isn't null
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// this will include the case where the underlying dataset is null
WITHOUT_CLASSIFICATION	// this includes the case where the underlying dataset is null
WITHOUT_CLASSIFICATION	// we didn't find the key
WITHOUT_CLASSIFICATION	// set up the category names...
WITHOUT_CLASSIFICATION	// check arguments...
WITHOUT_CLASSIFICATION	// fetch the value...
WITHOUT_CLASSIFICATION	// does the series exist?
WITHOUT_CLASSIFICATION	// does the series exist?
WITHOUT_CLASSIFICATION	// is the category valid?
WITHOUT_CLASSIFICATION	// update the data...
WITHOUT_CLASSIFICATION	// update the data...
WITHOUT_CLASSIFICATION	// no additional methods required
WITHOUT_CLASSIFICATION	// Find min, max for the x and y axes
WITHOUT_CLASSIFICATION	// Determine the cell size
WITHOUT_CLASSIFICATION	// Generate the grid
WITHOUT_CLASSIFICATION	// Map the nongrid data into the new regular grid
WITHOUT_CLASSIFICATION	// scale by the inverse of distance^power
WITHOUT_CLASSIFICATION	//remove distance of the sum
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// we didn't find the key
WITHOUT_CLASSIFICATION	// handle the special case where the dataset has y-intervals that // we want to measure
WITHOUT_CLASSIFICATION	// the CategoryDataset interface expects a list of categories, but // we've stored them in an array...
WITHOUT_CLASSIFICATION	// the CategoryDataset interface expects a list of series, but // we've stored them in an array...
WITHOUT_CLASSIFICATION	// if d is real small set the inverse to a large number // to avoid INF
WITHOUT_CLASSIFICATION	//store data as Long
WITHOUT_CLASSIFICATION	// store Number as Double
WITHOUT_CLASSIFICATION	// check if starting new column
WITHOUT_CLASSIFICATION	//store index where new //column starts
WITHOUT_CLASSIFICATION	// set x to most recent value
WITHOUT_CLASSIFICATION	// create array xIndex to hold // new column indices
WITHOUT_CLASSIFICATION	// store y and z axes // as Doubles
WITHOUT_CLASSIFICATION	// calculate constant values
WITHOUT_CLASSIFICATION	// look for any keys that we don't already know about...
WITHOUT_CLASSIFICATION	// fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	// remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	//step through all the values and add them to the hash
WITHOUT_CLASSIFICATION	// no new methods required
WITHOUT_CLASSIFICATION	// can't find any differences
WITHOUT_CLASSIFICATION	// now try to instantiate this ;-)
WITHOUT_CLASSIFICATION	//  Create new dataset with keys above threshold percentThreshold
WITHOUT_CLASSIFICATION	//  Do not add key to dataset
WITHOUT_CLASSIFICATION	//  Add key to dataset
WITHOUT_CLASSIFICATION	//  Add other category if applicable
WITHOUT_CLASSIFICATION	// now do the work...
WITHOUT_CLASSIFICATION	// if the dataset implements DomainInfo, life is easier
WITHOUT_CLASSIFICATION	// handle the standard case (plain CategoryDataset)
WITHOUT_CLASSIFICATION	// update the min value
WITHOUT_CLASSIFICATION	// handle the standard case (plain CategoryDataset)
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // New Methods ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // Private ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// handle the special case where the dataset has y-intervals that // we want to measure
WITHOUT_CLASSIFICATION	// handle three cases by dataset type
WITHOUT_CLASSIFICATION	// handle three cases by dataset type
WITHOUT_CLASSIFICATION	// handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	// handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	// handle special case of IntervalXYDataset
WITHOUT_CLASSIFICATION	// handle special case of OHLCDataset
WITHOUT_CLASSIFICATION	// handle special case of OHLCDataset
WITHOUT_CLASSIFICATION	// standard case - plain XYDataset
WITHOUT_CLASSIFICATION	// standard case - plain XYDataset
WITHOUT_CLASSIFICATION	// handle special case of BoxAndWhiskerXYDataset
WITHOUT_CLASSIFICATION	// if the dataset implements DomainInfo, life is easy
WITHOUT_CLASSIFICATION	// if the dataset implements DomainInfo, life is easy
WITHOUT_CLASSIFICATION	// hasn't implemented DomainInfo, so iterate...
WITHOUT_CLASSIFICATION	// hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	// hasn't implemented RangeInfo, so we'll have to iterate...
WITHOUT_CLASSIFICATION	// work out the minimum value...
WITHOUT_CLASSIFICATION	// work out the minimum value...
WITHOUT_CLASSIFICATION	// work out the minimum value...
WITHOUT_CLASSIFICATION	// '+', remember value is negative
WITHOUT_CLASSIFICATION	// create an array holding the group indices for each series...
WITHOUT_CLASSIFICATION	// minimum and maximum for each group...
WITHOUT_CLASSIFICATION	// no new methods
WITHOUT_CLASSIFICATION	// no new methods
WITHOUT_CLASSIFICATION	// we'll set this to false if there is at // least one non-null data item...
WITHOUT_CLASSIFICATION	// no additional methods required
WITHOUT_CLASSIFICATION	// no new methods required
WITHOUT_CLASSIFICATION	// no new methods required
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From XYDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// handle the special case where the dataset has y-intervals that // we want to measure
WITHOUT_CLASSIFICATION	// '+', remember value is negative
WITHOUT_CLASSIFICATION	// '+', remember value is negative
WITHOUT_CLASSIFICATION	// we don't know anything about the ordering of the x-values, // so we iterate until we find the first crossing of x (if any) // we know there are at least 2 items in the series at this point
WITHOUT_CLASSIFICATION	// delegate null check on dataset
WITHOUT_CLASSIFICATION	// exact match on first item
WITHOUT_CLASSIFICATION	// no crossing of x
WITHOUT_CLASSIFICATION	// spanning match
WITHOUT_CLASSIFICATION	// exact match
WITHOUT_CLASSIFICATION	// maps our series into our parent's
WITHOUT_CLASSIFICATION	// prior to 1.0.14, we just fired a PropertyChange - so we need to // keep doing this
WITHOUT_CLASSIFICATION	// no new methods added.
WITHOUT_CLASSIFICATION	// first line contains column keys
WITHOUT_CLASSIFICATION	// remaining lines contain a row key and data values
WITHOUT_CLASSIFICATION	// first field contains the row key
WITHOUT_CLASSIFICATION	// update the max value
WITHOUT_CLASSIFICATION	// remaining fields contain values
WITHOUT_CLASSIFICATION	// Remove any previous old data
WITHOUT_CLASSIFICATION	// first column contains the row key...
WITHOUT_CLASSIFICATION	// suppress (value defaults to null)
WITHOUT_CLASSIFICATION	// not a value, can't use it (defaults to null)
WITHOUT_CLASSIFICATION	/// First column is X data
WITHOUT_CLASSIFICATION	/// Get the column names and cache them.
WITHOUT_CLASSIFICATION	// Might need to add, to free memory from any previous result sets
WITHOUT_CLASSIFICATION	// Are we working with a time series.
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// defer null argument check
WITHOUT_CLASSIFICATION	// check arguments...
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From SeriesDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From IntervalXYDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // New methods from CombinationDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// if this series belongs to a dataset, the dataset might veto the // change if it results in two series within the dataset having the // same key
WITHOUT_CLASSIFICATION	// see comments about priority of // 10 in validateObject()
WITHOUT_CLASSIFICATION	// first field is ignored, since // column 0 is for row keys
WITHOUT_CLASSIFICATION	// Get all rows. // rows = new ArrayList();
WITHOUT_CLASSIFICATION	/// Determine max and min values.
WITHOUT_CLASSIFICATION	// Tell the listeners a new table has arrived.
WITHOUT_CLASSIFICATION	// fill the bins
WITHOUT_CLASSIFICATION	// generic map for each series
WITHOUT_CLASSIFICATION	// pretty sure this shouldn't ever happen
WITHOUT_CLASSIFICATION	// lower bounds are the same
WITHOUT_CLASSIFICATION	// overridden to make public
WITHOUT_CLASSIFICATION	// update the cached range values...
WITHOUT_CLASSIFICATION	// check that the new bin doesn't overlap with any existing bin
WITHOUT_CLASSIFICATION	// pass values to other constructor
WITHOUT_CLASSIFICATION	// update cached min and max values
WITHOUT_CLASSIFICATION	// defer null argument checks
WITHOUT_CLASSIFICATION	// check for zero pivot element
WITHOUT_CLASSIFICATION	// treat nulls the same as NaNs
WITHOUT_CLASSIFICATION	// calculate the sum and count
WITHOUT_CLASSIFICATION	// intercept
WITHOUT_CLASSIFICATION	// sum of x, x^2, x * y, y
WITHOUT_CLASSIFICATION	// holds the moving average sum
WITHOUT_CLASSIFICATION	// defer null argument checks
WITHOUT_CLASSIFICATION	// make sure bins[bins.length]'s upper boundary ends at maximum // to avoid the rounding issue. the bins[0] lower boundary is // guaranteed start from min
WITHOUT_CLASSIFICATION	// iterate over all data items and update mins and maxes
WITHOUT_CLASSIFICATION	// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...
WITHOUT_CLASSIFICATION	// ********* stat function for linear slope ******** // y = a + bx // a = ybar - b * xbar //     sum(x * y) - (sum (x) * sum(y)) / n // b = ------------------------------------ //     sum (x^2) - (sum(x)^2 / n // *************************************************
WITHOUT_CLASSIFICATION	// update cached range values
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// update the min value
WITHOUT_CLASSIFICATION	// iterate over all data items and update mins and maxes
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// we are at the last minute in the hour...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Minute object // -------------------------------------------
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// won't get here...
WITHOUT_CLASSIFICATION	// remove old items and notify if necessary
WITHOUT_CLASSIFICATION	// make the change (if it's not a duplicate time period)...
WITHOUT_CLASSIFICATION	// check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	// check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	// find the serial index of the period specified by 'latest'
WITHOUT_CLASSIFICATION	// it is too slow to look at every data item, so let's just look at // the first, middle and last items...
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// since the items are ordered, we could be more clever here and avoid // iterating over all the data
WITHOUT_CLASSIFICATION	// remove old items if necessary, but // don't notify anyone, because that // happens next anyway...
WITHOUT_CLASSIFICATION	// figure out if we need to iterate through all the y-values // to find the revised minY / maxY
WITHOUT_CLASSIFICATION	// check if there are any values earlier than specified by the history // count...
WITHOUT_CLASSIFICATION	// check if there are any values earlier than specified by the history // count...
WITHOUT_CLASSIFICATION	// start is after last data item
WITHOUT_CLASSIFICATION	// update the time series appropriately
WITHOUT_CLASSIFICATION	// we are at the first hour in the day...
WITHOUT_CLASSIFICATION	// we are at the last hour in the day...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Hour object // -----------------------------------------
WITHOUT_CLASSIFICATION	// if the hour is 0 - 23 then create an hour
WITHOUT_CLASSIFICATION	// parse the string...
WITHOUT_CLASSIFICATION	// create the year...
WITHOUT_CLASSIFICATION	// get the current data item...
WITHOUT_CLASSIFICATION	// work out the average for the earlier values...
WITHOUT_CLASSIFICATION	// work out the average for the earlier values...
WITHOUT_CLASSIFICATION	// remove the point i-periodCount out of the rolling sum.
WITHOUT_CLASSIFICATION	// an arbitrary safe default value
WITHOUT_CLASSIFICATION	// default value;
WITHOUT_CLASSIFICATION	// as a class variable, initializes == 0
WITHOUT_CLASSIFICATION	// cached values used for interface DomainInfo:
WITHOUT_CLASSIFICATION	//rangeGridlinePaint;
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// autoinit's to null.
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Year object // -----------------------------------------
WITHOUT_CLASSIFICATION	// if the initial averaging period is to be excluded, then // calculate the lowest x-value to have an average calculated...
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	// if the initial averaging period is to be excluded, then // calculate the index of the // first data item to have an average calculated...
WITHOUT_CLASSIFICATION	// Cached values used for interface RangeInfo: (note minValue pinned at 0) //   A single set of extrema covers the entire SeriesCollection
WITHOUT_CLASSIFICATION	///  .. etc....
WITHOUT_CLASSIFICATION	/// Expand the following for all defined TimePeriods:
WITHOUT_CLASSIFICATION	// initialize the members of "seriesNames" array so they won't be null:
WITHOUT_CLASSIFICATION	//{ // deep copy from values[], caller // can safely discard that array
WITHOUT_CLASSIFICATION	// Avoid IndexOutOfBoundsException:
WITHOUT_CLASSIFICATION	// But if that series array already exists, just overwrite its contents
WITHOUT_CLASSIFICATION	// But if that series array already exists, just overwrite its contents //synchronized(this) //{
WITHOUT_CLASSIFICATION	// all arrays equal length, // so ignore argument:
WITHOUT_CLASSIFICATION	// Methods for managing the FIFO's:
WITHOUT_CLASSIFICATION	// no translation needed
WITHOUT_CLASSIFICATION	// else  [implicit here]
WITHOUT_CLASSIFICATION	// newestAt takes value previously held // by oldestAT
WITHOUT_CLASSIFICATION	// if the oldest data contained a maximum Y-value, invalidate the stored //   Y-max and Y-range data:
WITHOUT_CLASSIFICATION	// deregister the collection as a change listener to each series in the // collection
WITHOUT_CLASSIFICATION	//  wipe the next (about to be used) set of data slots
WITHOUT_CLASSIFICATION	// Update the array of TimePeriods:
WITHOUT_CLASSIFICATION	// Now advance "oldestAt", wrapping at end of the array
WITHOUT_CLASSIFICATION	// Update the domain limits: //(time is kept in msec)
WITHOUT_CLASSIFICATION	//  If data can be < 0, the next 2 methods should be modified
WITHOUT_CLASSIFICATION	// index to select the "series"
WITHOUT_CLASSIFICATION	/* // "Extras" found useful when analyzing/verifying class behavior:    public Number getUntranslatedXValue(int series, int item)    {      return super.getXValue(series, item);    }    public float getUntranslatedY(int series, int item)    {      return super.getY(series, item);    }  */
WITHOUT_CLASSIFICATION	// a Long kept updated by advanceTime()
WITHOUT_CLASSIFICATION	// a Long kept updated by advanceTime()
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a null argument
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// parse the string...
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// appendData() writes new data at the index position given by newestAt/ // When adding new data dynamically, use advanceTime(), followed by this:
WITHOUT_CLASSIFICATION	// check whether the "valueHistory" array member exists; if not, // create them:
WITHOUT_CLASSIFICATION	// getXxx() ftns can ignore the "series" argument: // Don't synchronize this!! Instead, synchronize the loop that calls it.
WITHOUT_CLASSIFICATION	// Don't synchronize this!! // Instead, synchronize the loop that calls it.
WITHOUT_CLASSIFICATION	// The next 3 functions implement the RangeInfo interface. // Using saved limits (updated by each updateTime() call) significantly // improves performance.  WARNING: this code makes the simplifying // assumption that data is never negative.  Expand as needed for the // general case.
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Quarter object // --------------------------------------------
WITHOUT_CLASSIFICATION	// find the Q and the integer following it (remove both from the // string)...
WITHOUT_CLASSIFICATION	// replace any / , or - with a space
WITHOUT_CLASSIFICATION	// do nothing, so null is returned
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Day object // ----------------------------------------
WITHOUT_CLASSIFICATION	// check arguments...delegated // fetch the series name...
WITHOUT_CLASSIFICATION	// deregister the collection as a change listener to each series in the // collection
WITHOUT_CLASSIFICATION	// if it is not the series name, then we have no interest
WITHOUT_CLASSIFICATION	// to be defensive, let's check that the source series does in fact // belong to this collection
WITHOUT_CLASSIFICATION	// check if the new series name already exists for another series
WITHOUT_CLASSIFICATION	// we need to work out if the previous year has 52 or 53 weeks...
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to a general object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Second object // -------------------------------------------
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to another TimePeriod object // -----------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// more difficult case - evaluate later...
WITHOUT_CLASSIFICATION	// won't get here...
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// sometimes the last few days of the year are considered to fall in // the *first* week of the following year.  Refer to the Javadocs for // GregorianCalendar.
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Week object // --------------------------------------------
WITHOUT_CLASSIFICATION	// trim whitespace from either end of the string
WITHOUT_CLASSIFICATION	// trim whitespace from either end of the string
WITHOUT_CLASSIFICATION	// suppress
WITHOUT_CLASSIFICATION	// suppress
WITHOUT_CLASSIFICATION	// suppress
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Month object // --------------------------------------------
WITHOUT_CLASSIFICATION	// if there is no separator, we assume the first four characters // are YYYY
WITHOUT_CLASSIFICATION	// now it is trickier to determine if the month or year is first
WITHOUT_CLASSIFICATION	// --- DEPRECATED METHODS -------------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another TimeSeriesDataItem object // -------------------------------------------------------
WITHOUT_CLASSIFICATION	//private Comparable key;
WITHOUT_CLASSIFICATION	//this.key = null;
WITHOUT_CLASSIFICATION	// no attributes to read
WITHOUT_CLASSIFICATION	//axisOffset;
WITHOUT_CLASSIFICATION	// check arguments...
WITHOUT_CLASSIFICATION	// fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	// remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// if it is not the series name, then we have no interest
WITHOUT_CLASSIFICATION	// check if the new series name already exists for another series
WITHOUT_CLASSIFICATION	// Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// XYDataset only provides methods for reading a dataset...
WITHOUT_CLASSIFICATION	// check arguments...delegated
WITHOUT_CLASSIFICATION	// check arguments...delegated
WITHOUT_CLASSIFICATION	// Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// add a new series
WITHOUT_CLASSIFICATION	// need to configure the intervalDelegate to match the original
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// we can't be sure of the order
WITHOUT_CLASSIFICATION	// replace an existing series
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// either autoWidth is off or autoIntervalWidth was not set.
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	// argument checking delegated...
WITHOUT_CLASSIFICATION	// delegate argument checking to XYDataItem...
WITHOUT_CLASSIFICATION	// need to make sure we are adding *after* any duplicates
WITHOUT_CLASSIFICATION	// can't allow duplicate values, so we need to check whether // there is an item with the given x-value already
WITHOUT_CLASSIFICATION	// CASE 2 : Comparing to a general object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// check arguments...
WITHOUT_CLASSIFICATION	// consider time periods to be ordered after general objects
WITHOUT_CLASSIFICATION	// won't get here...
WITHOUT_CLASSIFICATION	// check if this addition will exceed the maximum item count...
WITHOUT_CLASSIFICATION	// to be defensive, let's check that the source series does in fact // belong to this collection
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// Remove all the series from the collection and notify listeners.
WITHOUT_CLASSIFICATION	// need to configure the intervalDelegate to match the original
WITHOUT_CLASSIFICATION	// add a new series
WITHOUT_CLASSIFICATION	// add a new series
WITHOUT_CLASSIFICATION	// replace an existing series
WITHOUT_CLASSIFICATION	// replace an existing series
WITHOUT_CLASSIFICATION	// null is ignored
WITHOUT_CLASSIFICATION	// everything is fine: autoWidth is on, and an autoIntervalWidth // was set.
WITHOUT_CLASSIFICATION	// first get the range without the interval, then expand it for the // interval width
WITHOUT_CLASSIFICATION	// all series have the same number of items in // this dataset
WITHOUT_CLASSIFICATION	// this.x is not allowed to be null...
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another TimeSeriesDataPair object // -------------------------------------------------------
WITHOUT_CLASSIFICATION	// In version 0.9.12, in response to several developer requests, I changed // the 'data' attribute from 'private' to 'protected', so that others can // make subclasses that work directly with the underlying data structure.
WITHOUT_CLASSIFICATION	// figure out if we need to iterate through all the y-values
WITHOUT_CLASSIFICATION	// figure out if we need to iterate through all the y-values
WITHOUT_CLASSIFICATION	// if we get to here, we know that duplicate X values are not permitted
WITHOUT_CLASSIFICATION	/*         * we assum super is always initialized to all-zero matrix, so the         * total sum should be 0 upon initialization. However, we set it to         * Double.MIN_VALUE to get the same effect and yet avoid division by 0         * upon initialization.         */
WITHOUT_CLASSIFICATION	// add the series...
WITHOUT_CLASSIFICATION	// try a class that isn't a listener
WITHOUT_CLASSIFICATION	// set up popup menu...
WITHOUT_CLASSIFICATION	// stop listening for changes to the existing chart
WITHOUT_CLASSIFICATION	// add the new chart
WITHOUT_CLASSIFICATION	// work out if scaling is required...
WITHOUT_CLASSIFICATION	// are we using the chart buffer?
WITHOUT_CLASSIFICATION	// does nothing - override if necessary
WITHOUT_CLASSIFICATION	// selected rectangle shouldn't extend outside the data area...
WITHOUT_CLASSIFICATION	// we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	// we need to guard against this.zoomPoint being null
WITHOUT_CLASSIFICATION	// force a redraw
WITHOUT_CLASSIFICATION	// it is too slow to look at every data item, so let's just look at // the first, middle and last items...
WITHOUT_CLASSIFICATION	// fetch the series, remove the change listener, then remove the series.
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// Unregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// check that minItem limit is observed
WITHOUT_CLASSIFICATION	//assert itemIndex >= 0 && itemIndex < getItemCount();
WITHOUT_CLASSIFICATION	//assert itemIndex >= 0 && itemIndex < getItemCount();
WITHOUT_CLASSIFICATION	//TODO private boolean fillZoomRectangle = true;
WITHOUT_CLASSIFICATION	// create the canvas and add the required listeners
WITHOUT_CLASSIFICATION	//ChartEditorManager.getChartEditor(canvas.getDisplay(), this.chart);
WITHOUT_CLASSIFICATION	/* in the next zoomPoint.x and y replace by e.x and y for now.         * this helps to handle the mouse events and besides,         * those values are unused AFAIK. */
WITHOUT_CLASSIFICATION	// do nothing, override if necessary
WITHOUT_CLASSIFICATION	// new entity code
WITHOUT_CLASSIFICATION	// new entity code
WITHOUT_CLASSIFICATION	// pass mouse down event if some ChartMouseListener are listening
WITHOUT_CLASSIFICATION	// if the box has been drawn backwards, restore the auto bounds
WITHOUT_CLASSIFICATION	// handle axis trace
WITHOUT_CLASSIFICATION	// handle tool tips in a simple way
WITHOUT_CLASSIFICATION	// handle zoom box
WITHOUT_CLASSIFICATION	// skip if chart is null
WITHOUT_CLASSIFICATION	//axisLabelPaint;
WITHOUT_CLASSIFICATION	// get the origin of the zoom selection in the Java2D space used for // drawing the chart (that is, before any scaling to fit the panel)
WITHOUT_CLASSIFICATION	// go through each zoom menu item and decide whether or not to // enable it...
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	// title // x-axis label // y-axis label // data // create legend? // generate tooltips? // generate URLs?
WITHOUT_CLASSIFICATION	// check that minItem limit is observed
WITHOUT_CLASSIFICATION	//SwtGraphics2D sg2 = new SwtGraphics2D(e.gc);
WITHOUT_CLASSIFICATION	// do we need to fill the buffer?
WITHOUT_CLASSIFICATION	// Performs the actual drawing here ...
WITHOUT_CLASSIFICATION	// anti-aliasing
WITHOUT_CLASSIFICATION	// zap the buffer onto the canvas...
WITHOUT_CLASSIFICATION	// or redrawing the chart every time...
WITHOUT_CLASSIFICATION	// de-register the composite as a listener for the chart.
WITHOUT_CLASSIFICATION	// AXIS 2
WITHOUT_CLASSIFICATION	// AXIS 3
WITHOUT_CLASSIFICATION	//axis3.setPositiveArrowVisible(true);
WITHOUT_CLASSIFICATION	// AXIS 4
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// create the dataset...
WITHOUT_CLASSIFICATION	// NOW DO SOME OPTIONAL CUSTOMISATION OF THE CHART...
WITHOUT_CLASSIFICATION	// get a reference to the plot for further customisation...
WITHOUT_CLASSIFICATION	// set the range axis to display integers only...
WITHOUT_CLASSIFICATION	// disable bar outlines...
WITHOUT_CLASSIFICATION	// OPTIONAL CUSTOMISATION COMPLETED.
WITHOUT_CLASSIFICATION	// chart title // data // include legend
WITHOUT_CLASSIFICATION	//frame.setDisplayToolTips(false);
WITHOUT_CLASSIFICATION	// row 1: antialiasing
WITHOUT_CLASSIFICATION	//row 2: background paint for the chart
WITHOUT_CLASSIFICATION	// row 1
WITHOUT_CLASSIFICATION	//empty cell // row 2
WITHOUT_CLASSIFICATION	// Create the color-change dialog
WITHOUT_CLASSIFICATION	// Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	// build second tab
WITHOUT_CLASSIFICATION	// don't need to do anything
WITHOUT_CLASSIFICATION	// set the plot properties...
WITHOUT_CLASSIFICATION	// row 1
WITHOUT_CLASSIFICATION	// Create the color-change dialog
WITHOUT_CLASSIFICATION	// Create the color-change dialog
WITHOUT_CLASSIFICATION	// Dispose of any fonts we have created
WITHOUT_CLASSIFICATION	// check a regular value
WITHOUT_CLASSIFICATION	// Create the new font and set it into the title // label
WITHOUT_CLASSIFICATION	// Create the new font and set it into the title // label
WITHOUT_CLASSIFICATION	//label.setFont(font);
WITHOUT_CLASSIFICATION	// row 3
WITHOUT_CLASSIFICATION	// row 3
WITHOUT_CLASSIFICATION	// Use a colored text field to show the color
WITHOUT_CLASSIFICATION	//tickLabelFontField.setFont(SwtUtils.toSwtFontData(getDisplay(), // axis.getTickLabelFont()));
WITHOUT_CLASSIFICATION	// Create the font-change dialog
WITHOUT_CLASSIFICATION	// Create the font-change dialog
WITHOUT_CLASSIFICATION	//tickLabelFontField.setFont(font);
WITHOUT_CLASSIFICATION	// return the appropriate axis editor
WITHOUT_CLASSIFICATION	//this.minimumRangeValue.addModifyListener(this); //this.minimumRangeValue.addVerifyListener(this);
WITHOUT_CLASSIFICATION	//this.maximumRangeValue.addModifyListener(this); //this.maximumRangeValue.addVerifyListener(this);
WITHOUT_CLASSIFICATION	// verify min value
WITHOUT_CLASSIFICATION	// verify max value
WITHOUT_CLASSIFICATION	//deal with domain axis
WITHOUT_CLASSIFICATION	//deal with range axis
WITHOUT_CLASSIFICATION	//deal with plot appearance
WITHOUT_CLASSIFICATION	// set the axis properties
WITHOUT_CLASSIFICATION	// row 1: stroke
WITHOUT_CLASSIFICATION	// row 3: background paint
WITHOUT_CLASSIFICATION	// row 4: orientation
WITHOUT_CLASSIFICATION	// row 2
WITHOUT_CLASSIFICATION	//titleField.setFont(font);
WITHOUT_CLASSIFICATION	// row 4
WITHOUT_CLASSIFICATION	// build first tab
WITHOUT_CLASSIFICATION	// we can't do anything
WITHOUT_CLASSIFICATION	// backgroundImage
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// since this is only used by clearRect(), we don't update the GC yet
WITHOUT_CLASSIFICATION	// build the third tab
WITHOUT_CLASSIFICATION	// ok and cancel buttons
WITHOUT_CLASSIFICATION	// to be consistent with other Graphics2D implementations
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// apply dash style if any
WITHOUT_CLASSIFICATION	// handle transparency and compositing.
WITHOUT_CLASSIFICATION	// we can't use the following valueOf() method, because it // won't compile with JDK1.4 // this.colorsPool.get(Integer.valueOf(awtColor.getRGB()));
WITHOUT_CLASSIFICATION	// set the line style to solid by default
WITHOUT_CLASSIFICATION	// retrieve the swt font description in an os indept way
WITHOUT_CLASSIFICATION	// Note that for consistency with the AWT implementation, it is // necessary to switch temporarily the foreground and background // colours
WITHOUT_CLASSIFICATION	// for now we simply want to extract the chars from the iterator // and call an unstyled text renderer
WITHOUT_CLASSIFICATION	// create a new awt font with the appropiate data
WITHOUT_CLASSIFICATION	// we dispose resources we own but user must dispose gc
WITHOUT_CLASSIFICATION	// see comment above //this.colorsPool.put(Integer.valueOf(awtColor.getRGB()), swtColor);
WITHOUT_CLASSIFICATION	// SWT and AWT share the same style constants.
WITHOUT_CLASSIFICATION	// convert the font size (in pt for awt) to height in pixels for swt
WITHOUT_CLASSIFICATION	//this.myColor = new Color(getDisplay(), color.getRGB());
WITHOUT_CLASSIFICATION	// renderingHints
WITHOUT_CLASSIFICATION	// borderStroke
WITHOUT_CLASSIFICATION	// borderVisible
WITHOUT_CLASSIFICATION	// borderPaint
WITHOUT_CLASSIFICATION	// title
WITHOUT_CLASSIFICATION	// subtitles
WITHOUT_CLASSIFICATION	// plot
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// backgroundImageAlignment
WITHOUT_CLASSIFICATION	// backgroundImageAlpha
WITHOUT_CLASSIFICATION	// no event is generated if the dataset is already empty
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	// create the chart...
WITHOUT_CLASSIFICATION	// try a Double.POSITIVE_INFINITY
WITHOUT_CLASSIFICATION	// adding something to the returned list should NOT change the chart
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// fillPaintTransformer
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// labelPaint
WITHOUT_CLASSIFICATION	// linePaint
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// the clone references the same dataset as the original
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// chart title
WITHOUT_CLASSIFICATION	// data // include legend // tooltips // urls
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	// a null key should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// include legend
WITHOUT_CLASSIFICATION	// data
WITHOUT_CLASSIFICATION	// data
WITHOUT_CLASSIFICATION	// data
WITHOUT_CLASSIFICATION	// data
WITHOUT_CLASSIFICATION	/* BufferedImage img =*/
WITHOUT_CLASSIFICATION	// try a listener type that isn't registered
WITHOUT_CLASSIFICATION	// name
WITHOUT_CLASSIFICATION	//extraLargeFont
WITHOUT_CLASSIFICATION	//largeFont
WITHOUT_CLASSIFICATION	//regularFont;
WITHOUT_CLASSIFICATION	//titlePaint;
WITHOUT_CLASSIFICATION	//subtitlePaint;
WITHOUT_CLASSIFICATION	//chartBackgroundPaint;
WITHOUT_CLASSIFICATION	//legendBackgroundPaint;
WITHOUT_CLASSIFICATION	//legendItemPaint;
WITHOUT_CLASSIFICATION	//drawingSupplier;
WITHOUT_CLASSIFICATION	// value 1
WITHOUT_CLASSIFICATION	// create a dataset...
WITHOUT_CLASSIFICATION	// test independence
WITHOUT_CLASSIFICATION	//tickLabelPaint;
WITHOUT_CLASSIFICATION	//itemLabelPaint;
WITHOUT_CLASSIFICATION	//shadowVisible;
WITHOUT_CLASSIFICATION	//shadowPaint;
WITHOUT_CLASSIFICATION	//barPainter;
WITHOUT_CLASSIFICATION	//xyBarPainter;
WITHOUT_CLASSIFICATION	//thermometerPaint;
WITHOUT_CLASSIFICATION	//wallPaint;
WITHOUT_CLASSIFICATION	//errorIndicatorPaint;
WITHOUT_CLASSIFICATION	//gridBandAlternatePaint
WITHOUT_CLASSIFICATION	//private double angle;
WITHOUT_CLASSIFICATION	//private double tipRadius;
WITHOUT_CLASSIFICATION	//private double tipRadius;
WITHOUT_CLASSIFICATION	//private double baseRadius;
WITHOUT_CLASSIFICATION	//private double arrowLength;
WITHOUT_CLASSIFICATION	//private double arrowLength;
WITHOUT_CLASSIFICATION	//private double arrowWidth;
WITHOUT_CLASSIFICATION	//private Stroke arrowStroke;
WITHOUT_CLASSIFICATION	//private Stroke arrowStroke;
WITHOUT_CLASSIFICATION	//private Paint arrowPaint;
WITHOUT_CLASSIFICATION	//private Paint arrowPaint;
WITHOUT_CLASSIFICATION	//private double labelOffset;
WITHOUT_CLASSIFICATION	// text
WITHOUT_CLASSIFICATION	// text
WITHOUT_CLASSIFICATION	// x
WITHOUT_CLASSIFICATION	// y
WITHOUT_CLASSIFICATION	// font
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// rotation anchor
WITHOUT_CLASSIFICATION	// rotation angle
WITHOUT_CLASSIFICATION	// text anchor
WITHOUT_CLASSIFICATION	// textAnchor
WITHOUT_CLASSIFICATION	// rotationAnchor
WITHOUT_CLASSIFICATION	// rotationAngle
WITHOUT_CLASSIFICATION	// category 1
WITHOUT_CLASSIFICATION	// category 2
WITHOUT_CLASSIFICATION	// value 2
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// category
WITHOUT_CLASSIFICATION	// categoryAnchor
WITHOUT_CLASSIFICATION	// value
WITHOUT_CLASSIFICATION	// x0
WITHOUT_CLASSIFICATION	// tickUnit
WITHOUT_CLASSIFICATION	// tickMarkPosition
WITHOUT_CLASSIFICATION	// timeline
WITHOUT_CLASSIFICATION	// range
WITHOUT_CLASSIFICATION	// check that setting the min date to something on or after the // current min date works...
WITHOUT_CLASSIFICATION	// five dates to check...
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// START: check d0 and d1
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// MIDDLE: check d1, d2 and d3
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// END: check d3 and d4
WITHOUT_CLASSIFICATION	// START: check d0
WITHOUT_CLASSIFICATION	// START: check d0
WITHOUT_CLASSIFICATION	// END: check d0
WITHOUT_CLASSIFICATION	// MIDDLE: check d0
WITHOUT_CLASSIFICATION	// MIDDLE: check d0
WITHOUT_CLASSIFICATION	// END: check d0
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// test independence
WITHOUT_CLASSIFICATION	// now repeat for a vertical axis
WITHOUT_CLASSIFICATION	// set start and end date
WITHOUT_CLASSIFICATION	// if the bug is still present, this leads to an endless loop
WITHOUT_CLASSIFICATION	//private boolean autoRangeIncludesZero;
WITHOUT_CLASSIFICATION	//private NumberTickUnit tickUnit;
WITHOUT_CLASSIFICATION	//private NumberFormat numberFormatOverride;
WITHOUT_CLASSIFICATION	// now replacing the dataset should update the axis range...
WITHOUT_CLASSIFICATION	//axis.setRangeType(RangeType.POSITIVE); //axis.setLowerBound(-5.0); //assertEquals(0.0, axis.getLowerBound(), EPSILON);
WITHOUT_CLASSIFICATION	// check that changing a tick label font in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// check that changing a tick label paint in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// check that changing a category label tooltip in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// set axis bounds to be both greater than 1
WITHOUT_CLASSIFICATION	// check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	// check for bounds interval that includes 1
WITHOUT_CLASSIFICATION	// check for both bounds smaller than 1
WITHOUT_CLASSIFICATION	// check for both bounds smaller than 1
WITHOUT_CLASSIFICATION	// lowerMargin
WITHOUT_CLASSIFICATION	// upperMargin
WITHOUT_CLASSIFICATION	// categoryMargin
WITHOUT_CLASSIFICATION	// maxCategoryLabelWidthRatio
WITHOUT_CLASSIFICATION	// categoryLabelPositionOffset
WITHOUT_CLASSIFICATION	// categoryLabelPositions
WITHOUT_CLASSIFICATION	// check that changing a tick label font in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// check that changing a tick label paint in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// check that changing a category label tooltip in a1 doesn't change a2
WITHOUT_CLASSIFICATION	// 4-ms test base timeline for ms2Timeline using 1 included and 1 // excluded segments // // timeline start time = 0 //   | //   v //   0  1  2  3  4  5  6  7  8  9 10 11 12 13 14 15 16 17 18 19 ... // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... // |  |  |  |  |EE|EE|EE|EE|  |  |  |  |EE|EE|EE|EE|  |  |  |  |    <-- ms2BaseTimeline // +--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+--+... //  \__________  _________/            \____  _____/ //             \/                           \/ //        segment group              segment size = 4 ms //
WITHOUT_CLASSIFICATION	// categoryLabelToolTips
WITHOUT_CLASSIFICATION	// categoryLabelURLs
WITHOUT_CLASSIFICATION	// tickLabelPaint
WITHOUT_CLASSIFICATION	// tickLabelPaint2
WITHOUT_CLASSIFICATION	// period
WITHOUT_CLASSIFICATION	// offset
WITHOUT_CLASSIFICATION	// advance line Stroke
WITHOUT_CLASSIFICATION	// advance line Visible
WITHOUT_CLASSIFICATION	// cycle bound mapping
WITHOUT_CLASSIFICATION	// Create a segmented time line (segment size : 15 minutes)
WITHOUT_CLASSIFICATION	// Set start time
WITHOUT_CLASSIFICATION	/* PUT exclusions in test */
WITHOUT_CLASSIFICATION	/** These constants control test cycles in the validateXXXX methods. */
WITHOUT_CLASSIFICATION	// test 9am-4pm Monday through Friday timeline
WITHOUT_CLASSIFICATION	// calculate 9am on the first Monday after 2001-01-01
WITHOUT_CLASSIFICATION	// verify attributes set during object construction
WITHOUT_CLASSIFICATION	// verify attributes set during object construction
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test one-segment and adjacent segments //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// get two consecutive segments for various tests
WITHOUT_CLASSIFICATION	// verify segments are consecutive and correct
WITHOUT_CLASSIFICATION	// verify various indices inside a segment are the same segment
WITHOUT_CLASSIFICATION	// try next segment
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test inc methods //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// test inc() method
WITHOUT_CLASSIFICATION	// logically consecutive segments non-physically consecutive // (with non-contained time in between)
WITHOUT_CLASSIFICATION	// physically consecutive
WITHOUT_CLASSIFICATION	// test inc(n) method
WITHOUT_CLASSIFICATION	// go to another segment to continue test
WITHOUT_CLASSIFICATION	// clear any exceptions in this timeline
WITHOUT_CLASSIFICATION	// test some included and excluded segments
WITHOUT_CLASSIFICATION	// should be an included segment
WITHOUT_CLASSIFICATION	// should be an excluded segment
WITHOUT_CLASSIFICATION	// fill in the exceptions
WITHOUT_CLASSIFICATION	// verify list of exceptions
WITHOUT_CLASSIFICATION	// include current exception and last one
WITHOUT_CLASSIFICATION	// exclude current exception and last one
WITHOUT_CLASSIFICATION	// make sure there are no exceptions
WITHOUT_CLASSIFICATION	// add our exceptions and store locally in ArrayList of Longs
WITHOUT_CLASSIFICATION	// only add an exception if it is currently an included segment
WITHOUT_CLASSIFICATION	// make array of exceptions
WITHOUT_CLASSIFICATION	// add the base timeline exclusions as timeline's esceptions
WITHOUT_CLASSIFICATION	// validate base timeline exclusions added as timeline's esceptions
WITHOUT_CLASSIFICATION	// start time...
WITHOUT_CLASSIFICATION	// 1-Jan-2000
WITHOUT_CLASSIFICATION	//long v = stl.toTimelineValue(946684800020L);
WITHOUT_CLASSIFICATION	// tick labels visible flag...
WITHOUT_CLASSIFICATION	// lowerMargin
WITHOUT_CLASSIFICATION	// upperMargin
WITHOUT_CLASSIFICATION	// the reverse transformed value will be in the start of the // next non-excluded and non-exception segment
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test serialization //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// verify all timeline segments included in the // baseTimeline.segment are now exceptions
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // utility methods //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// subcategories
WITHOUT_CLASSIFICATION	// subLabelFont
WITHOUT_CLASSIFICATION	// subLabelPaint
WITHOUT_CLASSIFICATION	// some checks that the clone is independent of the original
WITHOUT_CLASSIFICATION	// visible flag...
WITHOUT_CLASSIFICATION	// label...
WITHOUT_CLASSIFICATION	// label font...
WITHOUT_CLASSIFICATION	// label paint...
WITHOUT_CLASSIFICATION	// attributed label...
WITHOUT_CLASSIFICATION	// label insets...
WITHOUT_CLASSIFICATION	// label angle...
WITHOUT_CLASSIFICATION	// label location...
WITHOUT_CLASSIFICATION	// axis line visible...
WITHOUT_CLASSIFICATION	// axis line stroke...
WITHOUT_CLASSIFICATION	// axis line paint...
WITHOUT_CLASSIFICATION	// tick label font...
WITHOUT_CLASSIFICATION	// tick label paint...
WITHOUT_CLASSIFICATION	// tick marks visible flag...
WITHOUT_CLASSIFICATION	// tick mark inside length...
WITHOUT_CLASSIFICATION	// tick mark outside length...
WITHOUT_CLASSIFICATION	// tick mark stroke...
WITHOUT_CLASSIFICATION	// fixed dimension...
WITHOUT_CLASSIFICATION	// axis line visible flag...
WITHOUT_CLASSIFICATION	// positiveArrowVisible;
WITHOUT_CLASSIFICATION	//private Shape upArrow;
WITHOUT_CLASSIFICATION	//private Shape downArrow;
WITHOUT_CLASSIFICATION	//private Shape leftArrow;
WITHOUT_CLASSIFICATION	//private Shape rightArrow;
WITHOUT_CLASSIFICATION	// axisLineStroke
WITHOUT_CLASSIFICATION	// inverted
WITHOUT_CLASSIFICATION	//private TickUnits standardTickUnits;
WITHOUT_CLASSIFICATION	// verticalTickLabels
WITHOUT_CLASSIFICATION	// time zone
WITHOUT_CLASSIFICATION	// locale
WITHOUT_CLASSIFICATION	// chars
WITHOUT_CLASSIFICATION	// showYear[]
WITHOUT_CLASSIFICATION	// yearFormatter
WITHOUT_CLASSIFICATION	// NONE / NONE
WITHOUT_CLASSIFICATION	// NONE / RANGE
WITHOUT_CLASSIFICATION	// NONE / FIXED
WITHOUT_CLASSIFICATION	// RANGE / NONE
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// RANGE / RANGE
WITHOUT_CLASSIFICATION	// RANGE / FIXED
WITHOUT_CLASSIFICATION	// FIXED / NONE
WITHOUT_CLASSIFICATION	// FIXED / RANGE
WITHOUT_CLASSIFICATION	// FIXED / FIXED
WITHOUT_CLASSIFICATION	// TBLRC // 00010 - right item only
WITHOUT_CLASSIFICATION	// TBLRC // 00010 - right item only
WITHOUT_CLASSIFICATION	// TBLRC // 00011 - right and center items
WITHOUT_CLASSIFICATION	// TBLRC // 00011 - right and center items
WITHOUT_CLASSIFICATION	// try case where right item is shorter than center item
WITHOUT_CLASSIFICATION	// TBLRC // 00100 - left item only
WITHOUT_CLASSIFICATION	// TBLRC // 00101 - left and center items
WITHOUT_CLASSIFICATION	// TBLRC // 00101 - left and center items
WITHOUT_CLASSIFICATION	// try case where left item is shorter than center item
WITHOUT_CLASSIFICATION	// TBLRC // 00110 - left and right items
WITHOUT_CLASSIFICATION	// TBLRC // 00111 - left, right and center items
WITHOUT_CLASSIFICATION	// TBLRC // 01000 - bottom item only
WITHOUT_CLASSIFICATION	// TBLRC // 01001 - bottom and center only
WITHOUT_CLASSIFICATION	// TBLRC // 01010 - bottom and right only
WITHOUT_CLASSIFICATION	// TBLRC // 10110 - top, left and right
WITHOUT_CLASSIFICATION	// TBLRC // 10111
WITHOUT_CLASSIFICATION	// TBLRC // 11000 - top and bottom only
WITHOUT_CLASSIFICATION	// TBLRC // 11001
WITHOUT_CLASSIFICATION	// TBLRC // 11010 - top, bottom and right
WITHOUT_CLASSIFICATION	// TBLRC // 11100
WITHOUT_CLASSIFICATION	// TBLRC // 11101
WITHOUT_CLASSIFICATION	// TBLRC // 11110
WITHOUT_CLASSIFICATION	// TBLRC // 11111 - all
WITHOUT_CLASSIFICATION	// create dataset 1...
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// TBLRC // 00110 - left and right items
WITHOUT_CLASSIFICATION	// TBLRC // 00111 - left, right and center items
WITHOUT_CLASSIFICATION	// TBLRC // 01000 - bottom item only
WITHOUT_CLASSIFICATION	// TBLRC // 01001 - bottom and center only
WITHOUT_CLASSIFICATION	// TBLRC // 01010 - bottom and right only
WITHOUT_CLASSIFICATION	// TBLRC // 01011 - bottom, right and center
WITHOUT_CLASSIFICATION	// TBLRC // 01100
WITHOUT_CLASSIFICATION	// TBLRC // 01101 - bottom, left and center
WITHOUT_CLASSIFICATION	// TBLRC // 01110 - bottom. left and right
WITHOUT_CLASSIFICATION	// TBLRC // 01111
WITHOUT_CLASSIFICATION	// TBLRC // 10000 - top item only
WITHOUT_CLASSIFICATION	// TBLRC // 10001 - top and center only
WITHOUT_CLASSIFICATION	// TBLRC // 10010 - right and top only
WITHOUT_CLASSIFICATION	// TBLRC // 10011 - top, right and center
WITHOUT_CLASSIFICATION	// TBLRC // 10100 - top and left only
WITHOUT_CLASSIFICATION	// TBLRC // 10101 - top, left and center
WITHOUT_CLASSIFICATION	// TBLRC // 10111
WITHOUT_CLASSIFICATION	// standard test
WITHOUT_CLASSIFICATION	// tooltip format
WITHOUT_CLASSIFICATION	// tooltip format
WITHOUT_CLASSIFICATION	// date format
WITHOUT_CLASSIFICATION	// Y format
WITHOUT_CLASSIFICATION	// some setup...
WITHOUT_CLASSIFICATION	// some setup...
WITHOUT_CLASSIFICATION	// another test...
WITHOUT_CLASSIFICATION	// try a null value
WITHOUT_CLASSIFICATION	// format string...
WITHOUT_CLASSIFICATION	// x number format
WITHOUT_CLASSIFICATION	// y number format
WITHOUT_CLASSIFICATION	// z number format
WITHOUT_CLASSIFICATION	// x date format
WITHOUT_CLASSIFICATION	// y date format
WITHOUT_CLASSIFICATION	// z date format
WITHOUT_CLASSIFICATION	// remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	// create subplot 1...
WITHOUT_CLASSIFICATION	// create subplot 2...
WITHOUT_CLASSIFICATION	// add the subplots...
WITHOUT_CLASSIFICATION	// separatorsVisible
WITHOUT_CLASSIFICATION	// separatorStroke
WITHOUT_CLASSIFICATION	// separatorPaint
WITHOUT_CLASSIFICATION	// outerSeparatorExtension
WITHOUT_CLASSIFICATION	// sectionDepth
WITHOUT_CLASSIFICATION	// orientation...
WITHOUT_CLASSIFICATION	// axisOffset...
WITHOUT_CLASSIFICATION	// domainAxes...
WITHOUT_CLASSIFICATION	// TBLRC // 00000 - no items
WITHOUT_CLASSIFICATION	// TBLRC // 11001
WITHOUT_CLASSIFICATION	// TBLRC // 11010 - top, bottom and right
WITHOUT_CLASSIFICATION	// TBLRC // 11011
WITHOUT_CLASSIFICATION	// TBLRC // 11100
WITHOUT_CLASSIFICATION	// TBLRC // 11101
WITHOUT_CLASSIFICATION	// TBLRC // 11110
WITHOUT_CLASSIFICATION	// check handling when the dataset is a regular XYDataset, not an // XYZDataset...
WITHOUT_CLASSIFICATION	// domainAxisLocation - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// domainAxisLocations...
WITHOUT_CLASSIFICATION	// draw shared domain axis...
WITHOUT_CLASSIFICATION	// rangeAxes...
WITHOUT_CLASSIFICATION	// rangeAxisLocation - no longer a separate field but test anyway...
WITHOUT_CLASSIFICATION	// rangeAxisLocations...
WITHOUT_CLASSIFICATION	// datasetToDomainAxisMap...
WITHOUT_CLASSIFICATION	// datasetToRangeAxisMap...
WITHOUT_CLASSIFICATION	// renderers...
WITHOUT_CLASSIFICATION	// rendering order...
WITHOUT_CLASSIFICATION	// columnRenderingOrder...
WITHOUT_CLASSIFICATION	// rowRenderingOrder...
WITHOUT_CLASSIFICATION	// domainGridlinesVisible
WITHOUT_CLASSIFICATION	// domainGridlineStroke
WITHOUT_CLASSIFICATION	// domainGridlinePaint
WITHOUT_CLASSIFICATION	// rangeGridlinesVisible
WITHOUT_CLASSIFICATION	// rangeGridlineStroke
WITHOUT_CLASSIFICATION	// rangeGridlinePaint
WITHOUT_CLASSIFICATION	// rangeCrosshairVisible
WITHOUT_CLASSIFICATION	// rangeCrosshairValue
WITHOUT_CLASSIFICATION	// rangeCrosshairStroke
WITHOUT_CLASSIFICATION	// rangeCrosshairLockedOnData
WITHOUT_CLASSIFICATION	// foreground domain markers
WITHOUT_CLASSIFICATION	// background domain markers
WITHOUT_CLASSIFICATION	// foreground range markers...
WITHOUT_CLASSIFICATION	// background range markers...
WITHOUT_CLASSIFICATION	// annotations
WITHOUT_CLASSIFICATION	// weight
WITHOUT_CLASSIFICATION	// fixed domain axis space...
WITHOUT_CLASSIFICATION	// fixed range axis space...
WITHOUT_CLASSIFICATION	// crosshairDatasetIndex
WITHOUT_CLASSIFICATION	// domainCrosshairColumnKey
WITHOUT_CLASSIFICATION	// domainCrosshairRowKey
WITHOUT_CLASSIFICATION	// domainCrosshairVisible
WITHOUT_CLASSIFICATION	// domainCrosshairStroke
WITHOUT_CLASSIFICATION	// shadowGenerator
WITHOUT_CLASSIFICATION	// check for independence
WITHOUT_CLASSIFICATION	// we didn't get an exception so all is good
WITHOUT_CLASSIFICATION	// should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	// should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	// we should be able to give a dataset an arbitrary index
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// labelPaint
WITHOUT_CLASSIFICATION	// dial outline paint
WITHOUT_CLASSIFICATION	// if multiple axes are mapped, the first in the list should be // returned...
WITHOUT_CLASSIFICATION	// we should be able to give a renderer an arbitrary index
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// by default, the renderer with index 0 is used
WITHOUT_CLASSIFICATION	// add a second renderer with the same index as dataset2, now it will // be used
WITHOUT_CLASSIFICATION	// now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	// now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	// add a second dataset, plotted against a second x axis
WITHOUT_CLASSIFICATION	// add a second dataset, plotted against a second axis
WITHOUT_CLASSIFICATION	// needle paint
WITHOUT_CLASSIFICATION	// value font
WITHOUT_CLASSIFICATION	// value paint
WITHOUT_CLASSIFICATION	// tick label font
WITHOUT_CLASSIFICATION	// tick label paint
WITHOUT_CLASSIFICATION	// tick label format
WITHOUT_CLASSIFICATION	// tick paint
WITHOUT_CLASSIFICATION	// draw border
WITHOUT_CLASSIFICATION	// meter angle
WITHOUT_CLASSIFICATION	//key
WITHOUT_CLASSIFICATION	//paint
WITHOUT_CLASSIFICATION	//stroke
WITHOUT_CLASSIFICATION	//outlinePaint
WITHOUT_CLASSIFICATION	//outlineStroke
WITHOUT_CLASSIFICATION	//alpha
WITHOUT_CLASSIFICATION	// check null argument...
WITHOUT_CLASSIFICATION	// drawBorder
WITHOUT_CLASSIFICATION	// rosePaint
WITHOUT_CLASSIFICATION	// roseCenterPaint
WITHOUT_CLASSIFICATION	// roseHighlightPaint
WITHOUT_CLASSIFICATION	// interiorGap...
WITHOUT_CLASSIFICATION	// circular
WITHOUT_CLASSIFICATION	// direction
WITHOUT_CLASSIFICATION	// ignoreNullValues
WITHOUT_CLASSIFICATION	// sectionPaint
WITHOUT_CLASSIFICATION	// sectionPaintMap
WITHOUT_CLASSIFICATION	// baseSectionPaint
WITHOUT_CLASSIFICATION	// sectionOutlinePaint
WITHOUT_CLASSIFICATION	// sectionOutlinePaintList
WITHOUT_CLASSIFICATION	// baseSectionOutlinePaint
WITHOUT_CLASSIFICATION	// sectionOutlineStrokeList
WITHOUT_CLASSIFICATION	// baseSectionOutlineStroke
WITHOUT_CLASSIFICATION	// shadowPaint
WITHOUT_CLASSIFICATION	// shadowXOffset
WITHOUT_CLASSIFICATION	// shadowYOffset
WITHOUT_CLASSIFICATION	// labelOutlinePaint
WITHOUT_CLASSIFICATION	// labelOutlineStroke
WITHOUT_CLASSIFICATION	// labelShadowPaint
WITHOUT_CLASSIFICATION	// explodePercentages
WITHOUT_CLASSIFICATION	// backgroundImage
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// backgroundImageAlignment
WITHOUT_CLASSIFICATION	// backgroundImageAlpha
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// shadowGenerator
WITHOUT_CLASSIFICATION	// direction
WITHOUT_CLASSIFICATION	// labelLinkPaint
WITHOUT_CLASSIFICATION	// maximumLabelWidth
WITHOUT_CLASSIFICATION	// links visible
WITHOUT_CLASSIFICATION	// labelGap
WITHOUT_CLASSIFICATION	// toolTipGenerator
WITHOUT_CLASSIFICATION	// linkMargin
WITHOUT_CLASSIFICATION	// legendItemShape
WITHOUT_CLASSIFICATION	// labelLinkStroke
WITHOUT_CLASSIFICATION	// minimumArcAngleToDraw
WITHOUT_CLASSIFICATION	// urlGenerator
WITHOUT_CLASSIFICATION	// legendLabelGenerator
WITHOUT_CLASSIFICATION	// legendItemShape
WITHOUT_CLASSIFICATION	// legendLabelToolTipGenerator
WITHOUT_CLASSIFICATION	// legendLabelURLGenerator
WITHOUT_CLASSIFICATION	// autoPopulateSectionPaint
WITHOUT_CLASSIFICATION	// autoPopulateSectionOutlinePaint
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// autoPopulateSectionOutlineStroke
WITHOUT_CLASSIFICATION	// check that the URL generator has been cloned
WITHOUT_CLASSIFICATION	// check that the URL generator has been cloned
WITHOUT_CLASSIFICATION	// change the shape and make sure it only affects p1
WITHOUT_CLASSIFICATION	// change the generator and make sure it only affects p1
WITHOUT_CLASSIFICATION	// change the generator and make sure it only affects p1
WITHOUT_CLASSIFICATION	// check that null items are ignored if requested
WITHOUT_CLASSIFICATION	// check that zero items are ignored if requested
WITHOUT_CLASSIFICATION	// check that negative items are always ignored
WITHOUT_CLASSIFICATION	// noDataMessage
WITHOUT_CLASSIFICATION	// noDataMessageFont
WITHOUT_CLASSIFICATION	// noDataMessagePaint
WITHOUT_CLASSIFICATION	// outlineVisible
WITHOUT_CLASSIFICATION	// outlineStroke
WITHOUT_CLASSIFICATION	// foregroundAlpha
WITHOUT_CLASSIFICATION	// backgroundAlpha
WITHOUT_CLASSIFICATION	// drawingSupplier
WITHOUT_CLASSIFICATION	// try a null collection
WITHOUT_CLASSIFICATION	// dataExtractOrder
WITHOUT_CLASSIFICATION	// headPercent
WITHOUT_CLASSIFICATION	// interiorGap
WITHOUT_CLASSIFICATION	// maxValue
WITHOUT_CLASSIFICATION	// secondary renderers
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// row keys...
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// column keys...
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// labelFont
WITHOUT_CLASSIFICATION	// labelPaint
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// axisLinePaint
WITHOUT_CLASSIFICATION	// axisLineStroke
WITHOUT_CLASSIFICATION	// remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	// orientation...
WITHOUT_CLASSIFICATION	// axisOffset...
WITHOUT_CLASSIFICATION	// labelGenerator
WITHOUT_CLASSIFICATION	// toolTipGenerator
WITHOUT_CLASSIFICATION	// urlGenerator
WITHOUT_CLASSIFICATION	// change a series paint
WITHOUT_CLASSIFICATION	// baseSeriesOutlineStroke
WITHOUT_CLASSIFICATION	// valueFont
WITHOUT_CLASSIFICATION	// webFilled
WITHOUT_CLASSIFICATION	// change a series outline paint
WITHOUT_CLASSIFICATION	// axisLabelGap
WITHOUT_CLASSIFICATION	// thermometerPaint
WITHOUT_CLASSIFICATION	// change the legendItemShape
WITHOUT_CLASSIFICATION	// secondary DomainAxisLocations...
WITHOUT_CLASSIFICATION	// change a series outline stroke
WITHOUT_CLASSIFICATION	// valueLocation
WITHOUT_CLASSIFICATION	// thermometerStroke
WITHOUT_CLASSIFICATION	// valuePaint
WITHOUT_CLASSIFICATION	// axisLocation
WITHOUT_CLASSIFICATION	// showValueLines
WITHOUT_CLASSIFICATION	// domainAxisLocation...
WITHOUT_CLASSIFICATION	// valueFormat
WITHOUT_CLASSIFICATION	// this doesn't work
WITHOUT_CLASSIFICATION	// mercuryPaint
WITHOUT_CLASSIFICATION	// rangeAxisLocation...
WITHOUT_CLASSIFICATION	// domainAxis...
WITHOUT_CLASSIFICATION	// secondary DomainAxes...
WITHOUT_CLASSIFICATION	// secondary RangeAxisLocations...
WITHOUT_CLASSIFICATION	// rangeAxis...
WITHOUT_CLASSIFICATION	// renderer
WITHOUT_CLASSIFICATION	// secondary RangeAxes...
WITHOUT_CLASSIFICATION	// secondaryDatasetRangeAxisMap...
WITHOUT_CLASSIFICATION	// secondary DatasetDomainAxisMap...
WITHOUT_CLASSIFICATION	// try a collection with a single number plus a null
WITHOUT_CLASSIFICATION	// create dataset 1...
WITHOUT_CLASSIFICATION	// create dataset 1...
WITHOUT_CLASSIFICATION	// lowerBound
WITHOUT_CLASSIFICATION	// remove plot2, but plot1 is removed instead
WITHOUT_CLASSIFICATION	// create subplot 1...
WITHOUT_CLASSIFICATION	// create subplot 2...
WITHOUT_CLASSIFICATION	// parent plot...
WITHOUT_CLASSIFICATION	// add the subplots...
WITHOUT_CLASSIFICATION	// domainGridlineStroke
WITHOUT_CLASSIFICATION	// domainGridlinePaint
WITHOUT_CLASSIFICATION	// rangeGridlinesVisible
WITHOUT_CLASSIFICATION	// rangeGridlineStroke
WITHOUT_CLASSIFICATION	// rangeCrosshairVisible
WITHOUT_CLASSIFICATION	// rangeCrosshairValue
WITHOUT_CLASSIFICATION	// rangeCrosshairStroke
WITHOUT_CLASSIFICATION	// rangeCrosshairLockedOnData
WITHOUT_CLASSIFICATION	// weight
WITHOUT_CLASSIFICATION	// fixed legend items
WITHOUT_CLASSIFICATION	// shadowGenerator
WITHOUT_CLASSIFICATION	// should get IllegalArgumentException for negative index
WITHOUT_CLASSIFICATION	// we should be able to give a dataset an arbitrary index
WITHOUT_CLASSIFICATION	// we should be able to give a renderer an arbitrary index
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// add a second dataset
WITHOUT_CLASSIFICATION	// by default, the renderer with index 0 is used
WITHOUT_CLASSIFICATION	// now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	// now map the dataset to the second xAxis
WITHOUT_CLASSIFICATION	// add a second dataset, plotted against a second x axis
WITHOUT_CLASSIFICATION	// add a second dataset, plotted against a second axis
WITHOUT_CLASSIFICATION	// rangeZeroBaselineVisible
WITHOUT_CLASSIFICATION	// rangeZeroBaselineStroke
WITHOUT_CLASSIFICATION	// rangeZeroBaselinePaint
WITHOUT_CLASSIFICATION	// range markers
WITHOUT_CLASSIFICATION	// secondary range markers
WITHOUT_CLASSIFICATION	// quadrant origin
WITHOUT_CLASSIFICATION	// quadrant paint
WITHOUT_CLASSIFICATION	// verify that the plot is listening to the cloned renderer
WITHOUT_CLASSIFICATION	// no renderer 1
WITHOUT_CLASSIFICATION	// actually removes a1
WITHOUT_CLASSIFICATION	// set up some objects...
WITHOUT_CLASSIFICATION	// paint sequence
WITHOUT_CLASSIFICATION	// outline paint sequence
WITHOUT_CLASSIFICATION	// outline stroke sequence
WITHOUT_CLASSIFICATION	// shape sequence
WITHOUT_CLASSIFICATION	// paint index
WITHOUT_CLASSIFICATION	// outline paint index
WITHOUT_CLASSIFICATION	// outline stroke index
WITHOUT_CLASSIFICATION	// shape index
WITHOUT_CLASSIFICATION	// create dataset 2...
WITHOUT_CLASSIFICATION	// lowerBound
WITHOUT_CLASSIFICATION	// upperBound
WITHOUT_CLASSIFICATION	// startAngle
WITHOUT_CLASSIFICATION	// extent
WITHOUT_CLASSIFICATION	// tickRadius
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// font
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// textAnchor
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	// now make a change to the renderer and see if it triggers a plot // change event...
WITHOUT_CLASSIFICATION	// if multiple axes are mapped, the first in the list should be // returned...
WITHOUT_CLASSIFICATION	// add a second renderer with the same index as dataset2, now it will // be used
WITHOUT_CLASSIFICATION	// outlineStroke
WITHOUT_CLASSIFICATION	// check the case where there is a secondary dataset that doesn't // have a renderer (i.e. falls back to renderer 0)
WITHOUT_CLASSIFICATION	// now remove a3, but since a3.equals(a1), this will in fact remove // a1...
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// visible
WITHOUT_CLASSIFICATION	// radius
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// radius
WITHOUT_CLASSIFICATION	// radius
WITHOUT_CLASSIFICATION	// foregroundPaint
WITHOUT_CLASSIFICATION	// background paint
WITHOUT_CLASSIFICATION	// foreground paint
WITHOUT_CLASSIFICATION	// inner radius
WITHOUT_CLASSIFICATION	// outer radius
WITHOUT_CLASSIFICATION	// dataset index
WITHOUT_CLASSIFICATION	// dataset index
WITHOUT_CLASSIFICATION	// angle
WITHOUT_CLASSIFICATION	// frameAnchor
WITHOUT_CLASSIFICATION	// templateValue
WITHOUT_CLASSIFICATION	// valueAnchor
WITHOUT_CLASSIFICATION	// fill paint
WITHOUT_CLASSIFICATION	// outline paint
WITHOUT_CLASSIFICATION	// outline stroke
WITHOUT_CLASSIFICATION	// test a customised instance
WITHOUT_CLASSIFICATION	// test a custom instance
WITHOUT_CLASSIFICATION	// background
WITHOUT_CLASSIFICATION	// dial cap
WITHOUT_CLASSIFICATION	// frame
WITHOUT_CLASSIFICATION	// view
WITHOUT_CLASSIFICATION	// layer
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// font
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	// stroke
WITHOUT_CLASSIFICATION	// shape
WITHOUT_CLASSIFICATION	// tickLabelFont
WITHOUT_CLASSIFICATION	// tickLabelPaint
WITHOUT_CLASSIFICATION	// outlineStroke
WITHOUT_CLASSIFICATION	// check an inherited attribute
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// check that the listener lists are independent
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// test a default instance
WITHOUT_CLASSIFICATION	// radius
WITHOUT_CLASSIFICATION	// angle
WITHOUT_CLASSIFICATION	// test a customised instance
WITHOUT_CLASSIFICATION	// test a customised instance
WITHOUT_CLASSIFICATION	// test a custom instance
WITHOUT_CLASSIFICATION	// majorTickIncrement
WITHOUT_CLASSIFICATION	// majorTickLength
WITHOUT_CLASSIFICATION	// majorTickPaint
WITHOUT_CLASSIFICATION	// majorTickStroke
WITHOUT_CLASSIFICATION	// minorTickLength
WITHOUT_CLASSIFICATION	// tickLabelOffset
WITHOUT_CLASSIFICATION	// try a default instance
WITHOUT_CLASSIFICATION	// try a customised instance
WITHOUT_CLASSIFICATION	// label
WITHOUT_CLASSIFICATION	// gradient paint transformer
WITHOUT_CLASSIFICATION	// test default instance
WITHOUT_CLASSIFICATION	// have to use a concrete subclass...
WITHOUT_CLASSIFICATION	// seriesVisible
WITHOUT_CLASSIFICATION	// seriesVisibleList
WITHOUT_CLASSIFICATION	// baseSeriesVisible
WITHOUT_CLASSIFICATION	// seriesVisibleInLegendList
WITHOUT_CLASSIFICATION	// baseSeriesVisibleInLegend
WITHOUT_CLASSIFICATION	// paintList
WITHOUT_CLASSIFICATION	// basePaint
WITHOUT_CLASSIFICATION	// baseFillPaint
WITHOUT_CLASSIFICATION	// outlinePaintList
WITHOUT_CLASSIFICATION	// baseOutlinePaint
WITHOUT_CLASSIFICATION	// strokeList
WITHOUT_CLASSIFICATION	// outlineStrokeList
WITHOUT_CLASSIFICATION	// baseOutlineStroke
WITHOUT_CLASSIFICATION	// shapeList
WITHOUT_CLASSIFICATION	// baseShape
WITHOUT_CLASSIFICATION	// itemLabelsVisibleList
WITHOUT_CLASSIFICATION	// baseItemLabelsVisible
WITHOUT_CLASSIFICATION	// itemLabelFont
WITHOUT_CLASSIFICATION	// baseItemLabelFont
WITHOUT_CLASSIFICATION	// itemLabelPaint
WITHOUT_CLASSIFICATION	// itemLabelPaintList
WITHOUT_CLASSIFICATION	// baseItemLabelPaint
WITHOUT_CLASSIFICATION	// positiveItemLabelPositionList;
WITHOUT_CLASSIFICATION	// basePositiveItemLabelPosition;
WITHOUT_CLASSIFICATION	// negativeItemLabelPosition;
WITHOUT_CLASSIFICATION	// OUTLINE STROKE
WITHOUT_CLASSIFICATION	// SHAPE
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// baseOutlinePaint
WITHOUT_CLASSIFICATION	// itemLabelAnchorOffset
WITHOUT_CLASSIFICATION	// createEntities;
WITHOUT_CLASSIFICATION	// createEntitiesList;
WITHOUT_CLASSIFICATION	// legendShape
WITHOUT_CLASSIFICATION	// baseLegendShape
WITHOUT_CLASSIFICATION	// legendTextFont
WITHOUT_CLASSIFICATION	// baseLegendTextFont
WITHOUT_CLASSIFICATION	// OUTLINE PAINT
WITHOUT_CLASSIFICATION	// ITEM_LABELS_VISIBLE
WITHOUT_CLASSIFICATION	// ITEM_LABEL_FONT
WITHOUT_CLASSIFICATION	// POSITIVE ITEM LABEL POSITION
WITHOUT_CLASSIFICATION	// NEGATIVE ITEM LABEL ANCHOR
WITHOUT_CLASSIFICATION	// failed
WITHOUT_CLASSIFICATION	// now check autoPopulate==true
WITHOUT_CLASSIFICATION	// now check autoPopulate==true
WITHOUT_CLASSIFICATION	// now check autoPopulate==true
WITHOUT_CLASSIFICATION	/*CategoryPlot plot =*/
WITHOUT_CLASSIFICATION	/*CategoryPlot plot =*/
WITHOUT_CLASSIFICATION	/*CategoryPlot plot =*/
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with repeating items
WITHOUT_CLASSIFICATION	// check a series with repeating items
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// check a series with no items
WITHOUT_CLASSIFICATION	// check a series with one item
WITHOUT_CLASSIFICATION	// check a series with two items
WITHOUT_CLASSIFICATION	// check a series with three items
WITHOUT_CLASSIFICATION	// check a series with four items
WITHOUT_CLASSIFICATION	// check a series with repeating items
WITHOUT_CLASSIFICATION	// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value
WITHOUT_CLASSIFICATION	// we're doing this for testing only, and make sure that we // only add data in descending order by x-value
WITHOUT_CLASSIFICATION	// try with gradient paint
WITHOUT_CLASSIFICATION	// should be equal...
WITHOUT_CLASSIFICATION	// should be equal...
WITHOUT_CLASSIFICATION	// and independent...
WITHOUT_CLASSIFICATION	// and independent...
WITHOUT_CLASSIFICATION	// and independent...
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	// the renderer should not be equal to a BarRenderer
WITHOUT_CLASSIFICATION	// firstBarPaint;
WITHOUT_CLASSIFICATION	// lastBarPaint;
WITHOUT_CLASSIFICATION	// positiveBarPaint;
WITHOUT_CLASSIFICATION	//private Paint negativeBarPaint;
WITHOUT_CLASSIFICATION	// quick check for independence
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// shadowXOffset
WITHOUT_CLASSIFICATION	// shadowYOffset
WITHOUT_CLASSIFICATION	// toolTipGenerator
WITHOUT_CLASSIFICATION	// urlGenerator
WITHOUT_CLASSIFICATION	// should be equal...
WITHOUT_CLASSIFICATION	// and independent...
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	// check that the series visible flag is observed
WITHOUT_CLASSIFICATION	// map
WITHOUT_CLASSIFICATION	// toolTipGeneratorList
WITHOUT_CLASSIFICATION	// baseToolTipGenerator
WITHOUT_CLASSIFICATION	// itemLabelGenerator
WITHOUT_CLASSIFICATION	// itemLabelGeneratorList
WITHOUT_CLASSIFICATION	// baseItemLabelGenerator
WITHOUT_CLASSIFICATION	// urlGeneratorList
WITHOUT_CLASSIFICATION	// baseItemURLGenerator
WITHOUT_CLASSIFICATION	// legendItemLabelGenerator
WITHOUT_CLASSIFICATION	// legendItemToolTipGenerator
WITHOUT_CLASSIFICATION	// legendItemURLGenerator
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// base value
WITHOUT_CLASSIFICATION	// itemMargin
WITHOUT_CLASSIFICATION	// drawBarOutline
WITHOUT_CLASSIFICATION	// maximumBarWidth
WITHOUT_CLASSIFICATION	// minimumBarLength
WITHOUT_CLASSIFICATION	// gradientPaintTransformer
WITHOUT_CLASSIFICATION	// positiveItemLabelPositionFallback
WITHOUT_CLASSIFICATION	// negativeItemLabelPositionFallback
WITHOUT_CLASSIFICATION	// barPainter
WITHOUT_CLASSIFICATION	// shadowsVisible
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// shadowXOffset
WITHOUT_CLASSIFICATION	// shadowYOffset
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	// check that the series visible flag is observed
WITHOUT_CLASSIFICATION	// barPainter
WITHOUT_CLASSIFICATION	// shadowsVisible
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// check that super class fields are being looked at...
WITHOUT_CLASSIFICATION	// setUseYInterval
WITHOUT_CLASSIFICATION	// setBase()
WITHOUT_CLASSIFICATION	// try empty dataset
WITHOUT_CLASSIFICATION	// setGradientPaintTransformer()
WITHOUT_CLASSIFICATION	// setDrawBarOutline()
WITHOUT_CLASSIFICATION	// setMargin()
WITHOUT_CLASSIFICATION	// legendBar
WITHOUT_CLASSIFICATION	// positiveItemLabelFallbackPosition
WITHOUT_CLASSIFICATION	// negativeItemLabelFallbackPosition
WITHOUT_CLASSIFICATION	// check a list containing a non-Number object
WITHOUT_CLASSIFICATION	// try something from the base class
WITHOUT_CLASSIFICATION	// positive paint
WITHOUT_CLASSIFICATION	// negative paint
WITHOUT_CLASSIFICATION	// shapesVisible
WITHOUT_CLASSIFICATION	// legendLine
WITHOUT_CLASSIFICATION	// roundXCoordinates
WITHOUT_CLASSIFICATION	// drawOpenTicks
WITHOUT_CLASSIFICATION	// drawCloseTicks
WITHOUT_CLASSIFICATION	// openTickPaint
WITHOUT_CLASSIFICATION	// closeTickPaint
WITHOUT_CLASSIFICATION	// tickLength
WITHOUT_CLASSIFICATION	// try an empty dataset - should return a null range
WITHOUT_CLASSIFICATION	// try a null dataset - should return a null range
WITHOUT_CLASSIFICATION	// drawXError
WITHOUT_CLASSIFICATION	// drawYError
WITHOUT_CLASSIFICATION	// capLength
WITHOUT_CLASSIFICATION	// errorPaint
WITHOUT_CLASSIFICATION	// errorStroke
WITHOUT_CLASSIFICATION	// check boxPaint null also
WITHOUT_CLASSIFICATION	// upPaint
WITHOUT_CLASSIFICATION	// downPaint
WITHOUT_CLASSIFICATION	// drawVolume
WITHOUT_CLASSIFICATION	// candleWidth
WITHOUT_CLASSIFICATION	// maxCandleWidthInMilliseconds
WITHOUT_CLASSIFICATION	// autoWidthMethod
WITHOUT_CLASSIFICATION	// autoWidthFactor
WITHOUT_CLASSIFICATION	// backgroundPaint
WITHOUT_CLASSIFICATION	// padding
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// fillPaintTransformer
WITHOUT_CLASSIFICATION	// fillPaint
WITHOUT_CLASSIFICATION	// outlinePaint
WITHOUT_CLASSIFICATION	// linePaint
WITHOUT_CLASSIFICATION	// paint
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	/* BufferedImage image = */
WITHOUT_CLASSIFICATION	// shape
WITHOUT_CLASSIFICATION	// outlineStroke
WITHOUT_CLASSIFICATION	// axisLocation
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	/*JFreeChart chart =*/
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// check that the generator has been cloned
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// try an empty dataset - should return a null range
WITHOUT_CLASSIFICATION	// try a null dataset - should return a null range
WITHOUT_CLASSIFICATION	// locale shouldn't matter here
WITHOUT_CLASSIFICATION	// autoWidthGap
WITHOUT_CLASSIFICATION	// check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	// check that a null dataset returns null bounds
WITHOUT_CLASSIFICATION	// check the bounds of a simple dataset
WITHOUT_CLASSIFICATION	// test findDomainBounds as well
WITHOUT_CLASSIFICATION	// blockHeight
WITHOUT_CLASSIFICATION	// blockWidth
WITHOUT_CLASSIFICATION	// paintScale
WITHOUT_CLASSIFICATION	// paintScale
WITHOUT_CLASSIFICATION	// the following fields are inherited from the AbstractXYItemRenderer
WITHOUT_CLASSIFICATION	// axis
WITHOUT_CLASSIFICATION	// axisOffset
WITHOUT_CLASSIFICATION	// stripWidth
WITHOUT_CLASSIFICATION	// stripOutlineVisible
WITHOUT_CLASSIFICATION	// stripOutlinePaint
WITHOUT_CLASSIFICATION	// stripOutlineStroke
WITHOUT_CLASSIFICATION	// shapeVisible
WITHOUT_CLASSIFICATION	// shapeFilled
WITHOUT_CLASSIFICATION	// shapeOutlineVisible
WITHOUT_CLASSIFICATION	// shapeAnchor
WITHOUT_CLASSIFICATION	// shapeLocation
WITHOUT_CLASSIFICATION	// line
WITHOUT_CLASSIFICATION	// lineStroke
WITHOUT_CLASSIFICATION	// maximumLinesToDisplay
WITHOUT_CLASSIFICATION	// toolTipText
WITHOUT_CLASSIFICATION	// expandToFitSpace
WITHOUT_CLASSIFICATION	// margin
WITHOUT_CLASSIFICATION	// border
WITHOUT_CLASSIFICATION	// is the clone independent
WITHOUT_CLASSIFICATION	// case 1 - object is mutable but not PublicCloneable
WITHOUT_CLASSIFICATION	// simple case
WITHOUT_CLASSIFICATION	// try a null value
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// you can add a null list - it would have been better if this // required EMPTY_LIST
WITHOUT_CLASSIFICATION	// case 1 - object is mutable but not PublicCloneable
WITHOUT_CLASSIFICATION	// if we modify the original list, it's best if the URL generator is // not affected
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// the clone contains a reference to the original object
WITHOUT_CLASSIFICATION	// the clone contains a reference to the original object
WITHOUT_CLASSIFICATION	// CASE 2 - object is mutable AND PublicCloneable
WITHOUT_CLASSIFICATION	// CASE 2 - object is mutable AND PublicCloneable
WITHOUT_CLASSIFICATION	// the clone contains a reference to a CLONE of the original object
WITHOUT_CLASSIFICATION	// check that clone is independent of the original
WITHOUT_CLASSIFICATION	// check sorted rows
WITHOUT_CLASSIFICATION	// check for unknown column
WITHOUT_CLASSIFICATION	// try null key
WITHOUT_CLASSIFICATION	// try null key
WITHOUT_CLASSIFICATION	/*v =*/
WITHOUT_CLASSIFICATION	// confirm that the clone is independent of the original
WITHOUT_CLASSIFICATION	// check null argument 1
WITHOUT_CLASSIFICATION	/* ComparableObjectItem item1 = */
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// retrieve an item
WITHOUT_CLASSIFICATION	// request with a negative index
WITHOUT_CLASSIFICATION	// request with a negative index
WITHOUT_CLASSIFICATION	// request width index == itemCount
WITHOUT_CLASSIFICATION	// check null argument
WITHOUT_CLASSIFICATION	// replace an existing value
WITHOUT_CLASSIFICATION	// try a null key - should throw an exception
WITHOUT_CLASSIFICATION	// try unknown key
WITHOUT_CLASSIFICATION	// try negative key index
WITHOUT_CLASSIFICATION	// try key index == itemCount
WITHOUT_CLASSIFICATION	/*Range r2 =*/
WITHOUT_CLASSIFICATION	// Expand by 0% does not change the range
WITHOUT_CLASSIFICATION	// Lower > upper: mid point is used
WITHOUT_CLASSIFICATION	// Shifting with a delta of 0 does not change the range
WITHOUT_CLASSIFICATION	// Scaling with a factor of 1 does not change the range
WITHOUT_CLASSIFICATION	/*s1 = */
WITHOUT_CLASSIFICATION	// key
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// remove an item
WITHOUT_CLASSIFICATION	// map a key to a new group
WITHOUT_CLASSIFICATION	// clear a mapping
WITHOUT_CLASSIFICATION	// check handling of null key
WITHOUT_CLASSIFICATION	// a new map always has 1 group (the default group)
WITHOUT_CLASSIFICATION	// now overwrite group "G2"...
WITHOUT_CLASSIFICATION	// if there is an explicit mapping to the default group, it is counted
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// confirm that the clone is independent of the original
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// check key order
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// check retrieve value by key
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// check retrieve value by index
WITHOUT_CLASSIFICATION	// now overwrite group "G2"...
WITHOUT_CLASSIFICATION	// if the default group is not mapped to, it should still count towards // the group count...
WITHOUT_CLASSIFICATION	// now when the default group is mapped to, it shouldn't increase the // group count...
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// the default group is always at index 0
WITHOUT_CLASSIFICATION	// a non-existent group should return -1
WITHOUT_CLASSIFICATION	// indices are assigned in the order that groups are originally mapped
WITHOUT_CLASSIFICATION	// a key that hasn't been mapped should return the default group
WITHOUT_CLASSIFICATION	// a null argument should throw an exception
WITHOUT_CLASSIFICATION	// a small check for independence
WITHOUT_CLASSIFICATION	// check invalid indices
WITHOUT_CLASSIFICATION	// check invalid indices
WITHOUT_CLASSIFICATION	// confirm overwriting an existing value
WITHOUT_CLASSIFICATION	// try null keys
WITHOUT_CLASSIFICATION	// try negative row index
WITHOUT_CLASSIFICATION	// try row index too high
WITHOUT_CLASSIFICATION	// try negative column index
WITHOUT_CLASSIFICATION	// try column index too high
WITHOUT_CLASSIFICATION	// try unknown row key
WITHOUT_CLASSIFICATION	// try null row key
WITHOUT_CLASSIFICATION	// try unknown column key
WITHOUT_CLASSIFICATION	// try null column key
WITHOUT_CLASSIFICATION	/* Comparable k = */
WITHOUT_CLASSIFICATION	/* Comparable k = */
WITHOUT_CLASSIFICATION	// try null
WITHOUT_CLASSIFICATION	// it's OK to use an index equal to the size of the list
WITHOUT_CLASSIFICATION	// try replacing an existing value
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// try a null source
WITHOUT_CLASSIFICATION	// check negative index throws exception
WITHOUT_CLASSIFICATION	// check negative index throws exception
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// check index == getItemCount() throws exception
WITHOUT_CLASSIFICATION	// test null source
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// an empty dataset should return a null range
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	/* Number n = */
WITHOUT_CLASSIFICATION	// try null
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// basic check for independence
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// this is expected
WITHOUT_CLASSIFICATION	// check index == getItemCount() throws exception
WITHOUT_CLASSIFICATION	// test null source
WITHOUT_CLASSIFICATION	// another item
WITHOUT_CLASSIFICATION	/* Number n =*/
WITHOUT_CLASSIFICATION	// increment a null value
WITHOUT_CLASSIFICATION	// increment an unknown row
WITHOUT_CLASSIFICATION	// increment an unknown column
WITHOUT_CLASSIFICATION	// a row of all null values is still counted...
WITHOUT_CLASSIFICATION	// a column of all null values is still counted...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// check that two empty datasets are equal
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// check an empty dataset
WITHOUT_CLASSIFICATION	// make sure that modifying the returned array doesn't change the // function
WITHOUT_CLASSIFICATION	// note that we don't define taskB1
WITHOUT_CLASSIFICATION	// define subtasks
WITHOUT_CLASSIFICATION	/* Number start = */
WITHOUT_CLASSIFICATION	// test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	// test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	// test collection 3, which doesn't define all tasks in all series
WITHOUT_CLASSIFICATION	/* int count = */
WITHOUT_CLASSIFICATION	/* Number end = */
WITHOUT_CLASSIFICATION	// try a single item
WITHOUT_CLASSIFICATION	// simple check for independence
WITHOUT_CLASSIFICATION	// what if we don't want the interval?
WITHOUT_CLASSIFICATION	// an item in series 2
WITHOUT_CLASSIFICATION	// another empty series
WITHOUT_CLASSIFICATION	// a dataset with a single value
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// a dataset with a single value
WITHOUT_CLASSIFICATION	// null is ignored
WITHOUT_CLASSIFICATION	// a Double.NaN should be ignored
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// check that clone is independent of the original
WITHOUT_CLASSIFICATION	/* Number n =*/
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// simple check for independence
WITHOUT_CLASSIFICATION	// simple check for independence
WITHOUT_CLASSIFICATION	// try a single item
WITHOUT_CLASSIFICATION	// another item
WITHOUT_CLASSIFICATION	// another empty series
WITHOUT_CLASSIFICATION	// an item in series 2
WITHOUT_CLASSIFICATION	// Double.NaN DOESN'T mess things up
WITHOUT_CLASSIFICATION	// got it!
WITHOUT_CLASSIFICATION	// check that empty dataset is handled OK
WITHOUT_CLASSIFICATION	// and that simple aggregation works
WITHOUT_CLASSIFICATION	// an empty dataset should return a null max
WITHOUT_CLASSIFICATION	// an empty dataset should return a null max
WITHOUT_CLASSIFICATION	// null dataset throws IllegalArgumentException
WITHOUT_CLASSIFICATION	// null list throws IllegalArgumentException
WITHOUT_CLASSIFICATION	// null range throws IllegalArgumentException
WITHOUT_CLASSIFICATION	// empty dataset returns null
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// check a null value
WITHOUT_CLASSIFICATION	// check a NaN
WITHOUT_CLASSIFICATION	// check another regular value
WITHOUT_CLASSIFICATION	// add a second series
WITHOUT_CLASSIFICATION	// add a value to the second series
WITHOUT_CLASSIFICATION	// add a value that isn't in the xRange
WITHOUT_CLASSIFICATION	// try some nulls
WITHOUT_CLASSIFICATION	// an empty dataset should return null for bounds
WITHOUT_CLASSIFICATION	// try a dataset with a single value
WITHOUT_CLASSIFICATION	// try a dataset with two values
WITHOUT_CLASSIFICATION	// try a Double.NaN
WITHOUT_CLASSIFICATION	// try a Double.NEGATIVE_INFINITY
WITHOUT_CLASSIFICATION	// overwrite the value
WITHOUT_CLASSIFICATION	// test independence
WITHOUT_CLASSIFICATION	// now overwrite this item with another
WITHOUT_CLASSIFICATION	// try null list
WITHOUT_CLASSIFICATION	// try a list containing a single value
WITHOUT_CLASSIFICATION	// try null array
WITHOUT_CLASSIFICATION	// try an array containing no items
WITHOUT_CLASSIFICATION	// try an array containing a single Number
WITHOUT_CLASSIFICATION	// try an array containing a single Number and a null
WITHOUT_CLASSIFICATION	// try an array containing a single Number and a NaN
WITHOUT_CLASSIFICATION	// try a null argument
WITHOUT_CLASSIFICATION	// OK
WITHOUT_CLASSIFICATION	// try null argument
WITHOUT_CLASSIFICATION	// test independence
WITHOUT_CLASSIFICATION	// try an empty collection
WITHOUT_CLASSIFICATION	// try a collection with a single number
WITHOUT_CLASSIFICATION	// try a collection with a single number plus a NaN
WITHOUT_CLASSIFICATION	// try a collection with several numbers
WITHOUT_CLASSIFICATION	// a Collection containing a NaN will return Double.NaN for the result
WITHOUT_CLASSIFICATION	// check null list
WITHOUT_CLASSIFICATION	// check empty list
WITHOUT_CLASSIFICATION	// check list containing null
WITHOUT_CLASSIFICATION	// try zero length array
WITHOUT_CLASSIFICATION	// try single value
WITHOUT_CLASSIFICATION	// locale shouldn't matter here
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try deleting a time period that doesn't exist...
WITHOUT_CLASSIFICATION	// try deleting null
WITHOUT_CLASSIFICATION	// copy a range before the start of the series data...
WITHOUT_CLASSIFICATION	// copy a range that includes only the first item in the series...
WITHOUT_CLASSIFICATION	// copy a range that begins before and ends in the middle of the // series...
WITHOUT_CLASSIFICATION	// copy just the first item...
WITHOUT_CLASSIFICATION	// copy the first two items...
WITHOUT_CLASSIFICATION	// copy the middle three items...
WITHOUT_CLASSIFICATION	// copy the last two items...
WITHOUT_CLASSIFICATION	// copy the last item...
WITHOUT_CLASSIFICATION	// check negative first argument
WITHOUT_CLASSIFICATION	/* TimeSeries result = */
WITHOUT_CLASSIFICATION	/* TimeSeries result = */
WITHOUT_CLASSIFICATION	// check second argument less than first argument
WITHOUT_CLASSIFICATION	// changing the overwritten record shouldn't affect the series
WITHOUT_CLASSIFICATION	// changing the item that was added should not change the series
WITHOUT_CLASSIFICATION	// can't get anything yet...just an exception
WITHOUT_CLASSIFICATION	/*TimeSeriesDataItem item =*/
WITHOUT_CLASSIFICATION	/*item = */
WITHOUT_CLASSIFICATION	/* TimeSeriesDataItem item = */
WITHOUT_CLASSIFICATION	// test empty series
WITHOUT_CLASSIFICATION	// test series with one item
WITHOUT_CLASSIFICATION	// test series with two items
WITHOUT_CLASSIFICATION	// milliseconds somewhere in 2006
WITHOUT_CLASSIFICATION	// test a series with 1 item
WITHOUT_CLASSIFICATION	// test a series with two items
WITHOUT_CLASSIFICATION	// this line triggers the defect
WITHOUT_CLASSIFICATION	// check that removing by index also works
WITHOUT_CLASSIFICATION	// null items are ignored
WITHOUT_CLASSIFICATION	// if there are only null items, we get a NaNRange
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// test 3...
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// domain description - null
WITHOUT_CLASSIFICATION	// test 2...
WITHOUT_CLASSIFICATION	// a null item should throw an IllegalArgumentException
WITHOUT_CLASSIFICATION	/*Quarter q =*/
WITHOUT_CLASSIFICATION	/*Quarter q =*/
WITHOUT_CLASSIFICATION	// range description
WITHOUT_CLASSIFICATION	// domain description
WITHOUT_CLASSIFICATION	// check dataset with one time period
WITHOUT_CLASSIFICATION	// check empty dataset
WITHOUT_CLASSIFICATION	// range description - null
WITHOUT_CLASSIFICATION	// check dataset with one time period
WITHOUT_CLASSIFICATION	// check empty dataset
WITHOUT_CLASSIFICATION	// add a fourth time period
WITHOUT_CLASSIFICATION	// add a third time period
WITHOUT_CLASSIFICATION	// check dataset with two time periods
WITHOUT_CLASSIFICATION	// check dataset with two time periods
WITHOUT_CLASSIFICATION	// first day of week is Sunday
WITHOUT_CLASSIFICATION	// first day of week is monday
WITHOUT_CLASSIFICATION	// try null zone
WITHOUT_CLASSIFICATION	// add series to collection 1, should be not equal
WITHOUT_CLASSIFICATION	// newly created collections should be equal
WITHOUT_CLASSIFICATION	// now add the same series to collection 2 to make them equal again...
WITHOUT_CLASSIFICATION	// now remove series 2 from collection 2
WITHOUT_CLASSIFICATION	// now remove series 2 from collection 1 to make them equal again
WITHOUT_CLASSIFICATION	// for a series with no data, we expect {-1, -1}...
WITHOUT_CLASSIFICATION	// now test with a single value in the series...
WITHOUT_CLASSIFICATION	// now add a second value to the series...
WITHOUT_CLASSIFICATION	// now add a third value to the series...
WITHOUT_CLASSIFICATION	/* TimeSeries s = */
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// store the current time zone
WITHOUT_CLASSIFICATION	// restore the default time zone
WITHOUT_CLASSIFICATION	// when the dataset contains no series, we expect the range to be null
WITHOUT_CLASSIFICATION	// tests with values
WITHOUT_CLASSIFICATION	// adding a second series
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// x
WITHOUT_CLASSIFICATION	// y
WITHOUT_CLASSIFICATION	// period
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// locale shouldn't matter here
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// test 1...
WITHOUT_CLASSIFICATION	// test 2...
WITHOUT_CLASSIFICATION	// test 2...
WITHOUT_CLASSIFICATION	// test 2...
WITHOUT_CLASSIFICATION	// test 3...
WITHOUT_CLASSIFICATION	// test 3...
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// now test that the clone is independent of the original
WITHOUT_CLASSIFICATION	// Make sure there's nothing left
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	// the moving average series has 7 items, the first three // days (11, 12, 13 August are skipped)
WITHOUT_CLASSIFICATION	// add a series
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// and check the first series too...
WITHOUT_CLASSIFICATION	// now add another series
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	// yLow
WITHOUT_CLASSIFICATION	// allowDuplicateValues
WITHOUT_CLASSIFICATION	// allowDuplicateValues
WITHOUT_CLASSIFICATION	// check for series key out of bounds
WITHOUT_CLASSIFICATION	// yHigh
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// x
WITHOUT_CLASSIFICATION	// y
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// try a dataset with some content...
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// check that the clone doesn't share the same underlying arrays.
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// tests with values
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// add a series
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	// and check the first series too...
WITHOUT_CLASSIFICATION	// allowDuplicateValues
WITHOUT_CLASSIFICATION	// check for series key out of bounds
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	// check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	// check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	// check that adding a series will overwrite the old series
WITHOUT_CLASSIFICATION	// check null key
WITHOUT_CLASSIFICATION	// check null key
WITHOUT_CLASSIFICATION	// check null key
WITHOUT_CLASSIFICATION	// try an index out of bounds
WITHOUT_CLASSIFICATION	// now add some more data
WITHOUT_CLASSIFICATION	// xLow
WITHOUT_CLASSIFICATION	// xHigh
WITHOUT_CLASSIFICATION	// first check that a valid renaming works
WITHOUT_CLASSIFICATION	// next, check that setting a duplicate key fails
WITHOUT_CLASSIFICATION	// create an array of items in reverse order
WITHOUT_CLASSIFICATION	// got the required exception
WITHOUT_CLASSIFICATION	// set a theme using the new shadow generator feature available in // 1.0.14 - for backwards compatibility it is not enabled by default
WITHOUT_CLASSIFICATION	// call parent method // setup flag based on bounds values
WITHOUT_CLASSIFICATION	//if flag then change to log version of lowest value // to make range begin at a 10^n value:
WITHOUT_CLASSIFICATION	//if less than 1.0 then make it 1.0 //add in margin and get exponential value:
WITHOUT_CLASSIFICATION	//negatives not allowed and upper bound between 0 & 1 //round up to nearest significant digit for bound: //get negative exponent:
WITHOUT_CLASSIFICATION	//not first tick to be displayed //no tick label
WITHOUT_CLASSIFICATION	// check independence
WITHOUT_CLASSIFICATION	// x
WITHOUT_CLASSIFICATION	// y
WITHOUT_CLASSIFICATION	// default instances
WITHOUT_CLASSIFICATION	// TBLRC // 00000 - no items
WITHOUT_CLASSIFICATION	// try a few checks to ensure that the clone is independent of the // original
WITHOUT_CLASSIFICATION	// autoSort
WITHOUT_CLASSIFICATION	// add a value
WITHOUT_CLASSIFICATION	// add another value
WITHOUT_CLASSIFICATION	// add an empty series
WITHOUT_CLASSIFICATION	// now we should be allowed to change s1's key to anything but "S2"
WITHOUT_CLASSIFICATION	// after s1 is removed from the collection, we should be able to set // the key to anything we want...
WITHOUT_CLASSIFICATION	// check that removing by index also works
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// remove a value
WITHOUT_CLASSIFICATION	// add a series
WITHOUT_CLASSIFICATION	/* XYSeries s = */
WITHOUT_CLASSIFICATION	// yLow
WITHOUT_CLASSIFICATION	// yHigh
WITHOUT_CLASSIFICATION	// xLow
WITHOUT_CLASSIFICATION	// xHigh
WITHOUT_CLASSIFICATION	// when the dataset contains no series, we expect the value range to  // be null
WITHOUT_CLASSIFICATION	// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	// the series name should not  // change because "C" is already the key for the other series in the // collection
WITHOUT_CLASSIFICATION	//  Test that there are 6 X points and some specific values
WITHOUT_CLASSIFICATION	// after adding a point to a series, check that there are now 7 // items in each series
WITHOUT_CLASSIFICATION	//  Remove series 1
WITHOUT_CLASSIFICATION	//  Test that there are still 7 X points
WITHOUT_CLASSIFICATION	//  Remove series 2 and add new series
WITHOUT_CLASSIFICATION	//  Test that there are now 4 X points
WITHOUT_CLASSIFICATION	// WITH AUTOPRUNING
WITHOUT_CLASSIFICATION	// should be 2 items
WITHOUT_CLASSIFICATION	// should be 2 items
WITHOUT_CLASSIFICATION	// still 2
WITHOUT_CLASSIFICATION	// still 2
WITHOUT_CLASSIFICATION	// 1 value pruned.
WITHOUT_CLASSIFICATION	// WITHOUT AUTOPRUNING
WITHOUT_CLASSIFICATION	// still 2.
WITHOUT_CLASSIFICATION	// ****************************************************************** //  More than 150 demo applications are included with the JFreeChart //  Developer Guide...for more information, see: // //  >   http://www.object-refinery.com/jfreechart/guide.html // // ******************************************************************
WITHOUT_CLASSIFICATION	// here we do a check to see if the user is installing the "Legacy" // theme, and reset the bar painters in that case...
WITHOUT_CLASSIFICATION	// since the flow layout is relatively straightforward, // no information needs to be recorded here
WITHOUT_CLASSIFICATION	// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...
WITHOUT_CLASSIFICATION	// calculate the bar width - this calculation differs from the // BarRenderer calculation because the bars are layered on top of one // another, so there is effectively only one bar per category for // the purpose of the bar width calculation
WITHOUT_CLASSIFICATION	// the link area defines the dog leg points for the linking lines to // the labels
WITHOUT_CLASSIFICATION	// if the current stroke is not a BasicStroke then it is handled as // a special case
WITHOUT_CLASSIFICATION	// after setting up all the subplots, the shared range axis may need // reconfiguring
WITHOUT_CLASSIFICATION	// if there is an existing dataset, remove the plot from the list of // change listeners...
WITHOUT_CLASSIFICATION	// the segment is entirely at the // front of the chart
WITHOUT_CLASSIFICATION	// starts at back and wraps right around to the // back again
WITHOUT_CLASSIFICATION	// if the source point doesn't fall within a subplot, we do the // zoom on all subplots...
WITHOUT_CLASSIFICATION	//  double range = this.domainAxis.getRange().getLength(); //  double scaledRange = range * percent; //  domainAxis.setAnchoredRange(scaledRange);
WITHOUT_CLASSIFICATION	// the anchor point is typically the point where the mouse last // clicked - the crosshairs will be driven off this point...
WITHOUT_CLASSIFICATION	// axisIndices can be: // 1.  null; // 2.  non-empty, containing only Integer objects that are unique.
WITHOUT_CLASSIFICATION	// if this cell held a maximum and/or minimum value, we'll need to // update the cached bounds...
WITHOUT_CLASSIFICATION	// if the 'notify' flag has been switched to false, we don't notify // the listeners
WITHOUT_CLASSIFICATION	// private Plot parent <-- don't clone the parent plot, but take care // childs in combined plots instead
WITHOUT_CLASSIFICATION	// For the case were the first tick is greater // than minZ
WITHOUT_CLASSIFICATION	// add an entity for the item, but only if it falls within the // data area...
WITHOUT_CLASSIFICATION	// we create an event with a special flag set...the purpose of // this is to communicate to the plot (the default receiver of // the event) that series visibility has changed so the axis // ranges might need updating...
WITHOUT_CLASSIFICATION	// when the x-values are sorted in descending order, the lower // bound is found by calculating relative to the xHigh value
WITHOUT_CLASSIFICATION	// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// nothing is drawn if the row index is not included in the list with // the indices of the visible rows...
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////// // From HighLowDataset ///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	// handle a special case - if the bar colour has alpha == 0, it is // invisible so we shouldn't draw any shadow
WITHOUT_CLASSIFICATION	// if the dataset is not a StatisticalCategoryDataset then just revert // to the superclass (LineAndShapeRenderer) behaviour...
WITHOUT_CLASSIFICATION	// FIXME: add setSeriesToolTipGenerator(int, CategoryToolTipGenerator, //            boolean) ?
WITHOUT_CLASSIFICATION	// average radius // outlier radius
WITHOUT_CLASSIFICATION	// false preserves the old behaviour // prior to introducing this flag
WITHOUT_CLASSIFICATION	// These are deliberately not bounded to minimums/maxCandleWidth to //  retain old behaviour.
WITHOUT_CLASSIFICATION	// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...
WITHOUT_CLASSIFICATION	// the noCodeBaseClassLoader is configured by a call to the // removeCodeBase() method, typically in the init() method of an // applet...
WITHOUT_CLASSIFICATION	// deregister the collection as a change listener to each series in // the collection.
WITHOUT_CLASSIFICATION	// handle the special case where the dataset has y-intervals that // we want to measure
WITHOUT_CLASSIFICATION	// CASE 3 : Comparing to a non-TimePeriod object // ---------------------------------------------
WITHOUT_CLASSIFICATION	// CASE 1 : Comparing to another Second object // -------------------------------------------
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// end period is not in original series // this is first item AFTER end period // so this is last item BEFORE end
WITHOUT_CLASSIFICATION	// the first initialization must precede creation of the ValueSet array: // establishes length of each array
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// here we check that the average marker will in fact be // visible before drawing it...
WITHOUT_CLASSIFICATION	// draw outliers // outlier radius
WITHOUT_CLASSIFICATION	// NULL value -> insert point on base line // instead of 'step point'
WITHOUT_CLASSIFICATION	// coordinate pairs // current minuend point // next minuend point // current subtrahend point // next subtrahend point
WITHOUT_CLASSIFICATION	// the intersect is at the next point for both the minuend // and subtrahend
WITHOUT_CLASSIFICATION	// create the polygon // add the minuend's points to polygon
WITHOUT_CLASSIFICATION	// the following code handles the line for the y-values...it's // all done by code in the super class
WITHOUT_CLASSIFICATION	// Check if the item is the last item for the series and number of // items > 0.  We can't draw an area for a single point.
WITHOUT_CLASSIFICATION	// use item paint for outlines by // default, not outline paint
WITHOUT_CLASSIFICATION	// add an entity for the item, but only if it falls within the data // area...
WITHOUT_CLASSIFICATION	// the bounds should be calculated using just the items within // the current range of the x-axis...if there is one
WITHOUT_CLASSIFICATION	// We organise the data with the following assumption: // 1) the data are sorted by x then y // 2) that the data will be represented by a rectangle formed by //    using x[i+1], x, y[j+1], and y. // 3) we march along the y-axis at the same value of x until a new //    value x is found at which point we will flag the index //    where x[i+1]<>x[i]
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// create the new color and set it to the // SwtPaintCanvas
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// we're doing this for testing only, and make sure that we // only add data in ascending order by x-value
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// try null calendar
WITHOUT_CLASSIFICATION	// have to use a subclass of // AbstractRenderer
WITHOUT_CLASSIFICATION	// include legend // tooltips // urls
WITHOUT_CLASSIFICATION	// setup our test timelines // // Legend for comments below: // <spaces> = Segments included in the final timeline // EE       = Excluded segments via timeline rules // xx       = Exception segments inherited from base timeline exclusions
WITHOUT_CLASSIFICATION	////////////////////////////////////////////////////////////////////////// // test exception segments //////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// we use ValueMarker for the tests, because we need a concrete // subclass...
WITHOUT_CLASSIFICATION	// now check that all datasets, renderers and axes are being listened // too...
WITHOUT_CLASSIFICATION	// now check that all datasets, renderers and axes are being listened // too...
WITHOUT_CLASSIFICATION	// after clearing, reverts to // default group
WITHOUT_CLASSIFICATION	// regular equality for the datasets doesn't check the fields, just // the data values...so let's check some more things...
WITHOUT_CLASSIFICATION	// these methods should throw an IndexOutOfBoundsException since the // column is too high...
WITHOUT_CLASSIFICATION	// this replaces the entry with the current minimum value, but the new // minimum value is now in a different item
WITHOUT_CLASSIFICATION	// the dataset should prevent the addition of a series with the // same name as an existing series in the dataset
WITHOUT_CLASSIFICATION	/*item = */
WITHOUT_CLASSIFICATION	// test empty series
WITHOUT_CLASSIFICATION	// now we should be allowed to change s1's key to anything but "S2"
WITHOUT_CLASSIFICATION	// after s1 is removed from the collection, we should be able to set // the key to anything we want...
WITHOUT_CLASSIFICATION	// locale should not matter here
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// correct outcome
WITHOUT_CLASSIFICATION	// wrong outcome
WITHOUT_CLASSIFICATION	// when the dataset contains one or more series, but those series // contain no items, we still expect the range to be null
WITHOUT_CLASSIFICATION	// tests with values
WITHOUT_CLASSIFICATION	// tests with values
WITHOUT_CLASSIFICATION	// seriesKey
WITHOUT_CLASSIFICATION	// open
WITHOUT_CLASSIFICATION	// add a series
WITHOUT_CLASSIFICATION	// allowDuplicateValues
WITHOUT_CLASSIFICATION	// check for series key out of bounds
WITHOUT_CLASSIFICATION	// check for series key out of bounds
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	/*Comparable k =*/
WITHOUT_CLASSIFICATION	// when the dataset contains no series, we expect the value range to  // be null
WITHOUT_CLASSIFICATION	// when the dataset contains no series, we expect the value range to  // be null
WITHOUT_CLASSIFICATION	// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	// when the dataset contains one or more series, but those series  // contain no items, we expect the value range to be null
WITHOUT_CLASSIFICATION	// complicate things a little...
WITHOUT_CLASSIFICATION	// seem to be the same...
WITHOUT_CLASSIFICATION	// what is our alignment?
WITHOUT_CLASSIFICATION	// what is our alignment?
WITHOUT_CLASSIFICATION	// seem to be the same...
WITHOUT_CLASSIFICATION	// slope
WITHOUT_CLASSIFICATION	// complicate things a little...
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusGained(     * org.eclipse.swt.events.FocusEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)     * @see org.eclipse.swt.events.FocusListener#focusLost(     * org.eclipse.swt.events.FocusEvent)     */
WITHOUT_CLASSIFICATION	/* (non-Javadoc)         * @see org.jfree.chart.axis.LogarithmicAxis#switchedLog10(double)         */
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	// find out where to place the label...
WITHOUT_CLASSIFICATION	// find out where to place the label...
WITHOUT_CLASSIFICATION	// Anwender hat abgebrochen.
WITHOUT_CLASSIFICATION	// insets
WITHOUT_CLASSIFICATION	// insets
WITHOUT_CLASSIFICATION	// ...but this does!
WITHOUT_CLASSIFICATION	// insets
WITHOUT_CLASSIFICATION	// check defaults
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// OK
IMPLEMENTATION	// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )
IMPLEMENTATION	// todo : add support for READ_WRITE ( + NONSTRICT_READ_WRITE ??? )
IMPLEMENTATION	//TODO: return new Lock(ts);
IMPLEMENTATION	//TODO: if lock.getTimestamp().equals(ts)
IMPLEMENTATION	//TODO mappings.getLogicalTableName(ownerTable)
IMPLEMENTATION	// TODO: handle TypeDefs
IMPLEMENTATION	//TODO check there is no actual definition elemnents when a ref is defined
IMPLEMENTATION	// TODO: bindpropertyresults(alias, returnElem)
IMPLEMENTATION	//TODO: validate existing of property with the chosen name. (secondpass )
IMPLEMENTATION	//TODO: native ids
IMPLEMENTATION	//TODO: if we are using identity columns, fetch the identifier
IMPLEMENTATION	//TODO: handle property-ref
IMPLEMENTATION	//TODO: get all properties, not just the fetched ones!
IMPLEMENTATION	//TODO: get all properties, not just the fetched ones!
IMPLEMENTATION	/**	 * TODO: Check if Mimer SQL cannot handle the way DB2 does	 */
IMPLEMENTATION	// TODO: RESTRICT VIOLATION
IMPLEMENTATION	// TODO: lowercasing done here. Was done "at random" before; maybe not needed at all ?
IMPLEMENTATION	// TODO: toLowerCase was not done before. Only used in Template.
IMPLEMENTATION	// add an entry for this type of entity. // we can be assured that all referenced entities have already // been processed, // so specify that this entity is with the latest batch. // doing the batch number before adding the name to the list is // a faster way to get an accurate number.
IMPLEMENTATION	//TODO: avoid this for non-new instances where mightBeDirty==false
IMPLEMENTATION	//TODO: optimize away this lookup for entities w/o unsaved-value="undefined"
IMPLEMENTATION	// we could move this inside if we wanted to // tolerate collection initializations during // collection dirty checking:
IMPLEMENTATION	//TODO: assertion only, could be optimized away
IMPLEMENTATION	//TODO: check that entry.getIdentifier().equals(requestedId)
IMPLEMENTATION	//TODO: check that entry.getIdentifier().equals(requestedId)
IMPLEMENTATION	// TODO : why aren't these the same?
IMPLEMENTATION	//TODO: always true for now, but not if we later decide to support elements() in the from clause
IMPLEMENTATION	// TODO : or should we return 'containsTableAlias'??
IMPLEMENTATION	//TODO: arithmetic expressions, multiple new Foo(...)
IMPLEMENTATION	//TODO: for some dialects it would be appropriate to add the renderOrderByPropertiesSelect() to other select strings
IMPLEMENTATION	//TODO: cache the persister, this shows up in yourkit
IMPLEMENTATION	//TODO: theoretically non-threadsafe...
IMPLEMENTATION	// todo : look at optimizing these...
IMPLEMENTATION	//TODO: maybe call it getRowSelection() ?
IMPLEMENTATION	//TODO: make this handle multiple collection roles!
IMPLEMENTATION	//TODO: can we limit stored procedures ?!
IMPLEMENTATION	// TODO: not visible to the user!
IMPLEMENTATION	//TODO: unnecessary for databases with ANSI-style joins
IMPLEMENTATION	//TODO: use these in methods above
IMPLEMENTATION	// TODO: better error message since we actually support composites if names are explicitly listed.
IMPLEMENTATION	// TODO: better error message since we actually support composites if names are explicitly listed.
IMPLEMENTATION	// TODO : temporary initial step towards HHH-1907
IMPLEMENTATION	// todo : remove this once ComponentMetamodel is complete and merged
IMPLEMENTATION	//TODO handle supportsNotNullUnique=false, but such a case does not exist in the wild so far
IMPLEMENTATION	// TODO : still need to make CollectionPersisters EntityMode-aware
IMPLEMENTATION	//TODO: add owner argument!!
IMPLEMENTATION	//TODO: formulas ?
IMPLEMENTATION	//TODO: include the rowids!!!!
IMPLEMENTATION	// todo : cache this sql...
IMPLEMENTATION	//TODO: create uk loaders for component properties
IMPLEMENTATION	//TODO: cache this in an instvar
IMPLEMENTATION	/////////////////////////////////////////////////////////////////////// // TODO : look at perhaps caching this...
IMPLEMENTATION	//TODO: eventually put this back in, once we think all is fixed //Object otherAlias = columnsUnique.put(qualifiedColumn, columnAlias);
IMPLEMENTATION	//TODO: if we support multiple fetch groups, we would need //      to clone the set of lazy properties!
IMPLEMENTATION	//TODO: proxies!
IMPLEMENTATION	//TODO: terrible implementation!
IMPLEMENTATION	//TODO: proxies!
IMPLEMENTATION	// TODO: I don't really like this implementation; it would be better if // this was handled by searchForDirtyCollections()
IMPLEMENTATION	// TODO: check if key contains the owner ID
IMPLEMENTATION	//TODO: proxies!
IMPLEMENTATION	// table=null -> an association // - fill it in later //TODO fill in the mappings for table == null
IMPLEMENTATION	// table=null -> an association - fill // it in later //TODO fill in the mappings for table == null
IMPLEMENTATION	// if we are still not resolved, we might represent a constant. //      needed to add this here because the allowance of //      naked-prop-refs in the grammar collides with the //      definition of literals/constants ("nondeterminism"). //      TODO: cleanup the grammar so that "processConstants" is always just handled from here
IMPLEMENTATION	//TODO: add referencedClass to disambiguate to FKs on the same //      columns, pointing to different tables
WITHOUT_CLASSIFICATION	//test out the optimizer:
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// return
WITHOUT_CLASSIFICATION	// return
WITHOUT_CLASSIFICATION	/* | this | bean | args | raw bean | */
WITHOUT_CLASSIFICATION	// invokeinterface
WITHOUT_CLASSIFICATION	// astore 4 // store the raw bean
WITHOUT_CLASSIFICATION	/* current stack len = 0 */
WITHOUT_CLASSIFICATION	/* current stack len = 0 */
WITHOUT_CLASSIFICATION	/* local variables | target obj | each oldvalue | */
WITHOUT_CLASSIFICATION	// invokeinterface // invoke Enabled.getInterceptFieldCallback()
WITHOUT_CLASSIFICATION	// putfield // new value of the field
WITHOUT_CLASSIFICATION	// reference type
WITHOUT_CLASSIFICATION	// double
WITHOUT_CLASSIFICATION	// double
WITHOUT_CLASSIFICATION	// long
WITHOUT_CLASSIFICATION	// just decrement the lock, don't recache // (we don't know which transaction won)
WITHOUT_CLASSIFICATION	// decode row selection...
WITHOUT_CLASSIFICATION	//disassembled state gets put in a new array (we write to cache by value!)
WITHOUT_CLASSIFICATION	// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.
WITHOUT_CLASSIFICATION	// CHECK
WITHOUT_CLASSIFICATION	// ROW ID
WITHOUT_CLASSIFICATION	// COMPOSITE-ID
WITHOUT_CLASSIFICATION	// DISCRIMINATOR
WITHOUT_CLASSIFICATION	/*				 * Property prop = new Property(); prop.setName("id");				 * prop.setPropertyAccessorName("embedded"); prop.setValue(id);				 * entity.setIdentifierProperty(prop);				 */
WITHOUT_CLASSIFICATION	// DYNAMIC INSERT
WITHOUT_CLASSIFICATION	// PERSISTER
WITHOUT_CLASSIFICATION	// get meta's from <subclass>
WITHOUT_CLASSIFICATION	// PROPERTIES
WITHOUT_CLASSIFICATION	// PROPERTIES
WITHOUT_CLASSIFICATION	// generated properties can *never* be insertable...
WITHOUT_CLASSIFICATION	// TABLE
WITHOUT_CLASSIFICATION	//by default, natural-ids are "immutable" (constant)
WITHOUT_CLASSIFICATION	// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);
WITHOUT_CLASSIFICATION	// we found some extends attributes referencing entities which were // not already processed.  here we need to locate all entity-names // and class-names contained in this document itself, making sure // that these get removed from the extendz list such that only // extends names which require us to delay processing (i.e. // external to this document and not yet processed) are contained // in the returned result
WITHOUT_CLASSIFICATION	/**	 * Build a ResultSetMappingDefinition given a containing element for the "return-XXX" elements	 *	 * @param resultSetElem The element containing the return definitions.	 * @param path No clue...	 * @param mappings The current processing state.	 * @return The description of the mappings...	 */
WITHOUT_CLASSIFICATION	//	private boolean showSql; //	private boolean formatSql;
WITHOUT_CLASSIFICATION	//	public boolean isShowSqlEnabled() { //		return showSql; //	} // //	public boolean isFormatSqlEnabled() { //		return formatSql; //	}
WITHOUT_CLASSIFICATION	/**	 * Set a custom entity resolver. This entity resolver must be	 * set before addXXX(misc) call.	 * Default value is {@link org.hibernate.util.DTDEntityResolver}	 *	 * @param entityResolver entity resolver to use	 */
WITHOUT_CLASSIFICATION	//			final List extendsQueue,
WITHOUT_CLASSIFICATION	// If close() is called, guarantee unbind()
WITHOUT_CLASSIFICATION	// if a ThreadLocalSessionContext-bound session happens to get // serialized, to be completely correct, we need to make sure // that unbinding of that session occurs.
WITHOUT_CLASSIFICATION	// on the inverse, it makes sense that if a ThreadLocalSessionContext- // bound session then gets deserialized to go ahead and re-bind it to // the ThreadLocalSessionContext session map.
WITHOUT_CLASSIFICATION	//cannot be instantiated
WITHOUT_CLASSIFICATION	// 60 second lock timeout
WITHOUT_CLASSIFICATION	// OptimisticCache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Cache impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//			option.setDataVersion( NonLockingDataVersion.INSTANCE );
WITHOUT_CLASSIFICATION	// do the put outside the scope of the JTA txn
WITHOUT_CLASSIFICATION	//ignore!
WITHOUT_CLASSIFICATION	// tree cache in optimistic mode seems to have as very difficult // time with remove calls on non-existent nodes (NPEs)...
WITHOUT_CLASSIFICATION	//60 seconds
WITHOUT_CLASSIFICATION	//ignore!
WITHOUT_CLASSIFICATION	//60 seconds
WITHOUT_CLASSIFICATION	//do the failfast put outside the scope of the JTA txn
WITHOUT_CLASSIFICATION	// NOTE : evict() operates locally only (i.e., does not propogate // to any other nodes in the potential cluster).  This is // exactly what is needed when we destroy() here; destroy() is used // as part of the process of shutting down a SessionFactory; thus // these removals should not be propogated
WITHOUT_CLASSIFICATION	//    protected RegionRootListener listener;
WITHOUT_CLASSIFICATION	// Establish the region root node with a non-locking data version
WITHOUT_CLASSIFICATION	// If we've been blocking for the mutex, perhaps another // thread has already reestablished the root. // In case the node was reestablised via replication, confirm it's  // marked "resident" (a status which doesn't replicate)
WITHOUT_CLASSIFICATION	// For pessimistic locking, we just want to toss out our ref // to any old invalid root node and get the latest (may be null)            
WITHOUT_CLASSIFICATION	// The rest only matters for optimistic locking, where we // need to establish the proper data version on the region root
WITHOUT_CLASSIFICATION	// Don't hold a transactional lock for this 
WITHOUT_CLASSIFICATION	// Make sure the root node for the region exists and  // has a DataVersion that never complains
WITHOUT_CLASSIFICATION	// Never evict this node
WITHOUT_CLASSIFICATION	// Fix up the resident flag
WITHOUT_CLASSIFICATION	// 60 seconds
WITHOUT_CLASSIFICATION	// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists
WITHOUT_CLASSIFICATION	// no-op. We don't own the cache so we shouldn't stop it.
WITHOUT_CLASSIFICATION	// This should only be possible if the caches are constructor injected 
WITHOUT_CLASSIFICATION	// We only build caches if *none* were passed in.  Passing in // caches counts as a clear statement of exactly what is wanted
WITHOUT_CLASSIFICATION	// Set up the cache factory
WITHOUT_CLASSIFICATION	// See if the user configured a multiplexer stack
WITHOUT_CLASSIFICATION	// Default to collections sharing entity cache if there is one
WITHOUT_CLASSIFICATION	// Default to sharing the entity cache if there is one
WITHOUT_CLASSIFICATION	// For Timestamps, we default to a separate config
WITHOUT_CLASSIFICATION	// We can't change the TM on a running cache; just check // if the cache has no TM and we're OK with that
WITHOUT_CLASSIFICATION	// Configure the cache to use our TM
WITHOUT_CLASSIFICATION	// Make sure JBC doesn't look one up
WITHOUT_CLASSIFICATION	// This method should be implemented assuming it's valid to  // do start/stop/start -- leave state appropriate for another start
WITHOUT_CLASSIFICATION	// Make sure we don't re-release the same cache
WITHOUT_CLASSIFICATION	// We use a different delegate than the non-optimistic superclass default
WITHOUT_CLASSIFICATION	// Following methods we don't delegate since they have so little logic // it's clearer to just implement them here
WITHOUT_CLASSIFICATION	// If JBC is using INVALIDATION, we don't want to propagate changes. // We use the Timestamps cache to manage invalidation
WITHOUT_CLASSIFICATION	// We don't want to waste effort setting an option if JBC is // already in LOCAL mode. If JBC is REPL_(A)SYNC then check // if they passed an config option to disable query replication
WITHOUT_CLASSIFICATION	// Don't hold the JBC node lock throughout the tx, as that // prevents updates // Add a zero (or low) timeout option so we don't block // waiting for tx's that did a put to commit
WITHOUT_CLASSIFICATION	// Double check the distributed cache
WITHOUT_CLASSIFICATION	// Get an exclusive right to update JBC for this key from this node.
WITHOUT_CLASSIFICATION	// We ensure ASYNC semantics (JBCACHE-1175)
WITHOUT_CLASSIFICATION	// Initial load from JBC
WITHOUT_CLASSIFICATION	// See if we had a 2nd invalidation from the same initial // preinvalidation timestamp. If so, only increment // if the new current value is an increase
WITHOUT_CLASSIFICATION	// We ensure ASYNC semantics (JBCACHE-1175)
WITHOUT_CLASSIFICATION	// If the workspace node has null as well, OK; if not we've // been modified in a non-comparable manner, which we have to // treat as us being newer
WITHOUT_CLASSIFICATION	// The standard comparator types are not Serializable but are singletons
WITHOUT_CLASSIFICATION	// ignore!
WITHOUT_CLASSIFICATION	// ignore it
WITHOUT_CLASSIFICATION	// construct the cache
WITHOUT_CLASSIFICATION	// local cache, so we use synchronization
WITHOUT_CLASSIFICATION	// local cache, so we use synchronization
WITHOUT_CLASSIFICATION	//ie. 60 seconds
WITHOUT_CLASSIFICATION	//swaldman 2006-08-28: define c3p0-style configuration parameters for initialPoolSize, which //                     hibernate sensibly lets default to minPoolSize, but we'll let users //                     override it with the c3p0-style property if they want.
WITHOUT_CLASSIFICATION	/*DataSource unpooled = DataSources.unpooledDataSource(				jdbcUrl, props.getProperty(Environment.USER), props.getProperty(Environment.PASS)			);*/
WITHOUT_CLASSIFICATION	// TRUE if the pool is borrowed from the outside, FALSE if we used to create it
WITHOUT_CLASSIFICATION	// get a connection from the pool (thru DriverManager, cfr. Proxool doc)
WITHOUT_CLASSIFICATION	// set the Transaction Isolation if defined
WITHOUT_CLASSIFICATION	// toggle autoCommit to false if set
WITHOUT_CLASSIFICATION	// return the connection
WITHOUT_CLASSIFICATION	// Get the configurator files (if available)
WITHOUT_CLASSIFICATION	// Default the Proxool alias setting
WITHOUT_CLASSIFICATION	// Validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	// Validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	// Append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	// Set the existing pool flag to true
WITHOUT_CLASSIFICATION	// Configured using the JAXP Configurator
WITHOUT_CLASSIFICATION	// Validate that an alias name was provided to determine which pool to use
WITHOUT_CLASSIFICATION	// Append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	// Append the stem to the proxool pool alias
WITHOUT_CLASSIFICATION	// Configured using the Properties File Configurator
WITHOUT_CLASSIFICATION	// Remember Isolation level
WITHOUT_CLASSIFICATION	// If the provider was leeching off an existing pool don't close it
WITHOUT_CLASSIFICATION	// We have created the pool ourselves, so shut it down
WITHOUT_CLASSIFICATION	// not really a many-to-one association *necessarily*
WITHOUT_CLASSIFICATION	// not really a many-to-one association *necessarily*
WITHOUT_CLASSIFICATION	//always overwrite nonversioned data
WITHOUT_CLASSIFICATION	//public Currency getCurrency(int col) throws HibernateException;
WITHOUT_CLASSIFICATION	// default is POJO
WITHOUT_CLASSIFICATION	// use setParameter for null values
WITHOUT_CLASSIFICATION	// use setParameter for null values
WITHOUT_CLASSIFICATION	//private CacheEntry cacheEntry;
WITHOUT_CLASSIFICATION	// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail
WITHOUT_CLASSIFICATION	//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!
WITHOUT_CLASSIFICATION	// get the updated snapshot of the entity state by cloning current state; // it is safe to copy in place, since by this time no-one else (should have) // has a reference  to the array
WITHOUT_CLASSIFICATION	// this entity defines proeprty generation, so process those generated // values...
WITHOUT_CLASSIFICATION	// have the entity entry perform post-update processing, passing it the // update state and the new version (if one).
WITHOUT_CLASSIFICATION	/*!persister.isCacheInvalidationRequired()*/
WITHOUT_CLASSIFICATION	// need to look it up from the persistence-context
WITHOUT_CLASSIFICATION	//sort first by role name
WITHOUT_CLASSIFICATION	//Make 100% certain that this is called before any subsequent ScheduledUpdate.afterTransactionCompletion()!!
WITHOUT_CLASSIFICATION	//then by fk
WITHOUT_CLASSIFICATION	// nothing to do		
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// an existing collection that was either non-empty or uninitialized // is replaced by null or a different collection // (if the collection is uninitialized, hibernate has no way of // knowing if the collection is actually empty without querying the db)
WITHOUT_CLASSIFICATION	// this method is called when a new non-null collection is persisted // or when an existing (non-null) collection is moved to a new owner
WITHOUT_CLASSIFICATION	//			boolean put = persister.getCache().insert(ck, cacheEntry);
WITHOUT_CLASSIFICATION	// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush
WITHOUT_CLASSIFICATION	//do nothing - we only need to notify the cache...
WITHOUT_CLASSIFICATION	//sort first by entity name
WITHOUT_CLASSIFICATION	//then by id
WITHOUT_CLASSIFICATION	// to be safe...
WITHOUT_CLASSIFICATION	// no transformations took place, so handle it as we would a // non-instrumented class
WITHOUT_CLASSIFICATION	// see if the entry represents a class file
WITHOUT_CLASSIFICATION	// see if the entry represents a class file
WITHOUT_CLASSIFICATION	// intentionally empty
WITHOUT_CLASSIFICATION	//test out the optimizer:
WITHOUT_CLASSIFICATION	// set the name of bulk accessor.
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// invokespecial
WITHOUT_CLASSIFICATION	// return
WITHOUT_CLASSIFICATION	// aload_1 // load bean
WITHOUT_CLASSIFICATION	// checkcast // cast bean
WITHOUT_CLASSIFICATION	// astore_3 // store bean
WITHOUT_CLASSIFICATION	// aload_2 // args
WITHOUT_CLASSIFICATION	// iconst_i // continue to aastore // growing stack is 1
WITHOUT_CLASSIFICATION	// new
WITHOUT_CLASSIFICATION	// dup
WITHOUT_CLASSIFICATION	// aload_3 // load the raw bean
WITHOUT_CLASSIFICATION	// invokeinterface
WITHOUT_CLASSIFICATION	// invokevirtual
WITHOUT_CLASSIFICATION	// invokevirtual
WITHOUT_CLASSIFICATION	// aastore // args
WITHOUT_CLASSIFICATION	/* | this | bean | args | i | raw bean | exception | */
WITHOUT_CLASSIFICATION	// required to exception table // iconst_0 // i
WITHOUT_CLASSIFICATION	// istore_3 // store i
WITHOUT_CLASSIFICATION	// aload_1 // load the bean
WITHOUT_CLASSIFICATION	// checkcast // cast the bean into a raw bean
WITHOUT_CLASSIFICATION	/* current stack len = 0 */
WITHOUT_CLASSIFICATION	// start region to handling exception (BulkAccessorException)
WITHOUT_CLASSIFICATION	// iinc 3, 1
WITHOUT_CLASSIFICATION	// aload 4 // load the raw bean
WITHOUT_CLASSIFICATION	// aload_2 // load the args
WITHOUT_CLASSIFICATION	// iconst_i
WITHOUT_CLASSIFICATION	// aaload
WITHOUT_CLASSIFICATION	// checkcast
WITHOUT_CLASSIFICATION	// checkcast (case of primitive type) // invokevirtual (case of primitive type)
WITHOUT_CLASSIFICATION	// checkcast (case of reference type)
WITHOUT_CLASSIFICATION	/* current stack len = 2 */
WITHOUT_CLASSIFICATION	// end region to handling exception (BulkAccessorException)
WITHOUT_CLASSIFICATION	// register in exception table
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// aload_0
WITHOUT_CLASSIFICATION	// return
WITHOUT_CLASSIFICATION	// return
WITHOUT_CLASSIFICATION	// dup
WITHOUT_CLASSIFICATION	// invokevirtual
WITHOUT_CLASSIFICATION	// checkcast
WITHOUT_CLASSIFICATION	/* local variables | target obj | each oldvalue | */
WITHOUT_CLASSIFICATION	// astore 5 // store exception
WITHOUT_CLASSIFICATION	// new // BulkAccessorException
WITHOUT_CLASSIFICATION	// aload 5 // load exception
WITHOUT_CLASSIFICATION	// iload_3 // i
WITHOUT_CLASSIFICATION	// invokespecial // BulkAccessorException.<init>
WITHOUT_CLASSIFICATION	// athrow
WITHOUT_CLASSIFICATION	// WARNING: classfile only
WITHOUT_CLASSIFICATION	//swallow
WITHOUT_CLASSIFICATION	/* local variable | this | */
WITHOUT_CLASSIFICATION	// aload_0 // load this
WITHOUT_CLASSIFICATION	// aload_0 // load this
WITHOUT_CLASSIFICATION	// getfield // get field "$JAVASSIST_CALLBACK" defined already
WITHOUT_CLASSIFICATION	// areturn // return the value of the field
WITHOUT_CLASSIFICATION	/* local variables | this | callback | */
WITHOUT_CLASSIFICATION	// aload_1 // load callback
WITHOUT_CLASSIFICATION	// putfield // put field "$JAVASSIST_CALLBACK" defined already
WITHOUT_CLASSIFICATION	// case of non-static field
WITHOUT_CLASSIFICATION	// getfield // get each field
WITHOUT_CLASSIFICATION	// invokeinterface // invoke Enabled.getInterceptFieldCallback()
WITHOUT_CLASSIFICATION	// ifnonnull
WITHOUT_CLASSIFICATION	// *return // each type
WITHOUT_CLASSIFICATION	// *return // each type
WITHOUT_CLASSIFICATION	// *store_1 // each type
WITHOUT_CLASSIFICATION	// ldc // name of the field
WITHOUT_CLASSIFICATION	// *load_1 // each type
WITHOUT_CLASSIFICATION	// invokeinterface // invoke Callback.read*() // each type
WITHOUT_CLASSIFICATION	// int
WITHOUT_CLASSIFICATION	// return
WITHOUT_CLASSIFICATION	// dup
WITHOUT_CLASSIFICATION	// invokeinterface
WITHOUT_CLASSIFICATION	// checkcast
WITHOUT_CLASSIFICATION	// checkcast
WITHOUT_CLASSIFICATION	// invokeinterface // enabled.getInterceptFieldCallback()
WITHOUT_CLASSIFICATION	// invokeinterface // enabled.getInterceptFieldCallback()
WITHOUT_CLASSIFICATION	// ifnonnull (label1)
WITHOUT_CLASSIFICATION	// *load_1
WITHOUT_CLASSIFICATION	// *load_1
WITHOUT_CLASSIFICATION	// putfield
WITHOUT_CLASSIFICATION	// return ;
WITHOUT_CLASSIFICATION	// ldc // field name
WITHOUT_CLASSIFICATION	// getfield // old value of the field
WITHOUT_CLASSIFICATION	// invokeinterface // callback.write*(..)
WITHOUT_CLASSIFICATION	// reference type
WITHOUT_CLASSIFICATION	// reference type
WITHOUT_CLASSIFICATION	// not array
WITHOUT_CLASSIFICATION	// array of reference type
WITHOUT_CLASSIFICATION	// boolean
WITHOUT_CLASSIFICATION	// byte
WITHOUT_CLASSIFICATION	// char
WITHOUT_CLASSIFICATION	// short
WITHOUT_CLASSIFICATION	// double
WITHOUT_CLASSIFICATION	// float
WITHOUT_CLASSIFICATION	// float
WITHOUT_CLASSIFICATION	// long
WITHOUT_CLASSIFICATION	// long
WITHOUT_CLASSIFICATION	// bad type
WITHOUT_CLASSIFICATION	// bad type
WITHOUT_CLASSIFICATION	// boolean, byte, char, int, short
WITHOUT_CLASSIFICATION	// boolean, byte, char, int, short
WITHOUT_CLASSIFICATION	// reference type
WITHOUT_CLASSIFICATION	// double
WITHOUT_CLASSIFICATION	// float
WITHOUT_CLASSIFICATION	// float
WITHOUT_CLASSIFICATION	// long
WITHOUT_CLASSIFICATION	// bad type
WITHOUT_CLASSIFICATION	// bad type
WITHOUT_CLASSIFICATION	// boolean, byte, char, int, short
WITHOUT_CLASSIFICATION	// skip finalize methods
WITHOUT_CLASSIFICATION	//Mainly for OSCache
WITHOUT_CLASSIFICATION	//decrement the lock
WITHOUT_CLASSIFICATION	// create new lock that times out immediately
WITHOUT_CLASSIFICATION	//recache the updated state
WITHOUT_CLASSIFICATION	// noop
WITHOUT_CLASSIFICATION	//null clientLock is remotely possible but will never happen in practice
WITHOUT_CLASSIFICATION	// we really could refresh the item if it // is not a lock, but it might be slower //return freshTimestamp < txTimestamp
WITHOUT_CLASSIFICATION	//by requiring <, we rely on lock timeout in the case of an unsuccessful update!
WITHOUT_CLASSIFICATION	// the user provided resulttransformer, not the one used with "select new". Here to avoid mangling // transformed/non-transformed results.
WITHOUT_CLASSIFICATION	// disassemble positional parameters
WITHOUT_CLASSIFICATION	// disassemble named parameters
WITHOUT_CLASSIFICATION	//ie. 60 seconds
WITHOUT_CLASSIFICATION	// noop
WITHOUT_CLASSIFICATION	//noop
WITHOUT_CLASSIFICATION	//noop
WITHOUT_CLASSIFICATION	// this is called from SettingsFactory irregardless; trivial to simply disregard
WITHOUT_CLASSIFICATION	// Do nothing; subclasses may override.
WITHOUT_CLASSIFICATION	// Do nothing; subclasses may override.
WITHOUT_CLASSIFICATION	//throw new UnsupportedOperationException("Can't write to a readonly object");
WITHOUT_CLASSIFICATION	//assembled state gets put in a new array (we read from cache by value!)
WITHOUT_CLASSIFICATION	//persister.setIdentifier(result, id); //before calling interceptor, for consistency with normal load
WITHOUT_CLASSIFICATION	// no-op; CCS did not have such a concept
WITHOUT_CLASSIFICATION	// no-op; CCS did not have such a concept
WITHOUT_CLASSIFICATION	// again, CCS did not have such a concept; but a reasonable // proximity is to clear the cache after transaction *as long as* // the underlying cache is not JTA aware.
WITHOUT_CLASSIFICATION	// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction
WITHOUT_CLASSIFICATION	// again, CCS did not have such a concept; however a reasonable // proximity is to clear the cache.  For non-transaction aware // caches, we will also do a clear at the end of the transaction
WITHOUT_CLASSIFICATION	// classes mentioned in extends not available - so put it in queue
WITHOUT_CLASSIFICATION	// get meta's from <hibernate-mapping>
WITHOUT_CLASSIFICATION	// get meta's from <class>
WITHOUT_CLASSIFICATION	// DB-OBJECTNAME
WITHOUT_CLASSIFICATION	// MUTABLE
WITHOUT_CLASSIFICATION	// WHERE
WITHOUT_CLASSIFICATION	// CHECK
WITHOUT_CLASSIFICATION	// POLYMORPHISM
WITHOUT_CLASSIFICATION	// TODO:
WITHOUT_CLASSIFICATION	// ID
WITHOUT_CLASSIFICATION	// VERSION / TIMESTAMP
WITHOUT_CLASSIFICATION	// DISCRIMINATOR
WITHOUT_CLASSIFICATION	// Primary key constraint
WITHOUT_CLASSIFICATION	// this is either a <version/> tag with no type attribute, // or a <timestamp/> tag
WITHOUT_CLASSIFICATION	// for version properties marked as being generated, make sure they are "always" // generated; aka, "insert" is invalid; this is dis-allowed by the DTD, // but just to make sure...
WITHOUT_CLASSIFICATION	// DISCRIMINATOR
WITHOUT_CLASSIFICATION	// ( (Column) discrim.getColumnIterator().next() ).setType(type);
WITHOUT_CLASSIFICATION	// go ahead and set the lazy here, since pojo.proxy can override it.
WITHOUT_CLASSIFICATION	// DYNAMIC UPDATE
WITHOUT_CLASSIFICATION	// IMPORT
WITHOUT_CLASSIFICATION	// BATCH SIZE
WITHOUT_CLASSIFICATION	// SELECT BEFORE UPDATE
WITHOUT_CLASSIFICATION	// OPTIMISTIC LOCK MODE
WITHOUT_CLASSIFICATION	// PERSISTER
WITHOUT_CLASSIFICATION	// CUSTOM SQL
WITHOUT_CLASSIFICATION	// get meta's from <subclass>
WITHOUT_CLASSIFICATION	// properties
WITHOUT_CLASSIFICATION	// joined subclasses
WITHOUT_CLASSIFICATION	// KEY
WITHOUT_CLASSIFICATION	// CHECK
WITHOUT_CLASSIFICATION	// CUSTOM SQL
WITHOUT_CLASSIFICATION	// properties
WITHOUT_CLASSIFICATION	// KEY
WITHOUT_CLASSIFICATION	// model.getKey().setType( new Type( model.getIdentifier() ) );
WITHOUT_CLASSIFICATION	// TABLENAME
WITHOUT_CLASSIFICATION	// join.getKey().setType( new Type( lazz.getIdentifier() ) );
WITHOUT_CLASSIFICATION	// PROPERTIES
WITHOUT_CLASSIFICATION	// COLUMN(S)
WITHOUT_CLASSIFICATION	// column index
WITHOUT_CLASSIFICATION	//column unique-key
WITHOUT_CLASSIFICATION	// automatically makes a column with the default name if none is specifed by XML
WITHOUT_CLASSIFICATION	// for an any
WITHOUT_CLASSIFICATION	// insertable simply because that is the user did not specify // anything; just override it
WITHOUT_CLASSIFICATION	// the user specifically supplied insert="true", // which constitutes an illegal combo
WITHOUT_CLASSIFICATION	// properties generated on update can never be updateable...
WITHOUT_CLASSIFICATION	// updateable only because the user did not specify  // anything; just override it
WITHOUT_CLASSIFICATION	// the user specifically supplied update="true", // which constitutes an illegal combo
WITHOUT_CLASSIFICATION	// ROLENAME
WITHOUT_CLASSIFICATION	// FETCH STRATEGY
WITHOUT_CLASSIFICATION	// TABLE
WITHOUT_CLASSIFICATION	//tableName = mappings.getNamingStrategy().propertyToTableName( className, path );
WITHOUT_CLASSIFICATION	// SORT
WITHOUT_CLASSIFICATION	// CUSTOM SQL
WITHOUT_CLASSIFICATION	// unsorted, natural, comparator.class.name
WITHOUT_CLASSIFICATION	// ORPHAN DELETE (used for programmer error detection)
WITHOUT_CLASSIFICATION	// set up second pass
WITHOUT_CLASSIFICATION	// an "embedded" component (composite ids and unique) // note that this does not handle nested components
WITHOUT_CLASSIFICATION	// a nested composite element
WITHOUT_CLASSIFICATION	// for an any // we will have to use reflection
WITHOUT_CLASSIFICATION	//NOTE SPECIAL CASE: // one-to-one constrained=false cannot be proxied, // so default to join and non-lazy
WITHOUT_CLASSIFICATION	// use old (HB 2.1) defaults if outer-join is specified
WITHOUT_CLASSIFICATION	//lazy = !join;
WITHOUT_CLASSIFICATION	// GENERATOR
WITHOUT_CLASSIFICATION	// ID UNSAVED-VALUE
WITHOUT_CLASSIFICATION	// VERSION UNSAVED-VALUE
WITHOUT_CLASSIFICATION	// not necessarily a *unique* property reference
WITHOUT_CLASSIFICATION	// ( (Column) ( (SimpleValue) ic.getIndex() ).getColumnIterator().next() // ).setNullable(false);
WITHOUT_CLASSIFICATION	// contained elements:
WITHOUT_CLASSIFICATION	// for non-inverse one-to-many, with a not-null fk, add a backref!
WITHOUT_CLASSIFICATION	// Bind the where
WITHOUT_CLASSIFICATION	// Bind the order-by
WITHOUT_CLASSIFICATION	// Bind the filters
WITHOUT_CLASSIFICATION	// overriding inherited meta attribute. HBX-621 & HBX-793			
WITHOUT_CLASSIFICATION	// first, iterate over all elements capable of defining an extends attribute // collecting all found extends references if they cannot be resolved // against the already processed mappings.
WITHOUT_CLASSIFICATION	// mappings might contain either the "raw" extends name (in the case of // an entity-name mapping) or a FQN (in the case of a POJO mapping).
WITHOUT_CLASSIFICATION	//+ "_" + referencedColumnName not used for backward compatibility
WITHOUT_CLASSIFICATION	//SessionFactory name:
WITHOUT_CLASSIFICATION	//JDBC and connection settings:
WITHOUT_CLASSIFICATION	//JDBC and connection settings:
WITHOUT_CLASSIFICATION	//Interrogate JDBC metadata
WITHOUT_CLASSIFICATION	// user supplied JDBC connections
WITHOUT_CLASSIFICATION	//use dialect default properties
WITHOUT_CLASSIFICATION	// Transaction settings:
WITHOUT_CLASSIFICATION	//SQL Generation settings:
WITHOUT_CLASSIFICATION	//Query parser settings:
WITHOUT_CLASSIFICATION	// Second-level / query cache:
WITHOUT_CLASSIFICATION	// The cache provider is needed when we either have second-level cache enabled // or query cache enabled.  Note that useSecondLevelCache is enabled by default
WITHOUT_CLASSIFICATION	//SQL Exception converter:
WITHOUT_CLASSIFICATION	//Statistics and logging:
WITHOUT_CLASSIFICATION	//		settings.setShowSqlEnabled(showSql);
WITHOUT_CLASSIFICATION	//		settings.setFormatSqlEnabled(formatSql);
WITHOUT_CLASSIFICATION	//Schema export:
WITHOUT_CLASSIFICATION	//		String provider = properties.getProperty( Environment.BYTECODE_PROVIDER ); //		log.info( "Bytecode provider name : " + provider ); //		BytecodeProvider bytecodeProvider = buildBytecodeProvider( provider ); //		settings.setBytecodeProvider( bytecodeProvider );
WITHOUT_CLASSIFICATION	// legacy behavior, apply the bridge...
WITHOUT_CLASSIFICATION	// maybe a concrete SQLpropertyresult type, but Map is exactly what is required at the moment
WITHOUT_CLASSIFICATION	//if dotted and not load-collection nor return-join //regular property
WITHOUT_CLASSIFICATION	//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907 //	private BytecodeProvider bytecodeProvider;
WITHOUT_CLASSIFICATION	// public getters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	}
WITHOUT_CLASSIFICATION	// package protected setters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//	void setShowSqlEnabled(boolean b) { //		showSql = b; //	} // //	void setFormatSqlEnabled(boolean b) { //		formatSql = b; //	}
WITHOUT_CLASSIFICATION	//	public BytecodeProvider getBytecodeProvider() { //		return bytecodeProvider; //	} // //	void setBytecodeProvider(BytecodeProvider bytecodeProvider) { //		this.bytecodeProvider = bytecodeProvider; //	}
WITHOUT_CLASSIFICATION	// using local since the inheritedMetas at this point is not the correct map since it is always the empty map
WITHOUT_CLASSIFICATION	//	private ComponentTuplizerFactory componentTuplizerFactory; todo : HHH-3517 and HHH-1907
WITHOUT_CLASSIFICATION	//	protected List extendsQueue;
WITHOUT_CLASSIFICATION	//		extendsQueue = new ArrayList();
WITHOUT_CLASSIFICATION	//		componentTuplizerFactory = new ComponentTuplizerFactory();
WITHOUT_CLASSIFICATION	// if doc is null, then for whatever reason, the cached file cannot be used...
WITHOUT_CLASSIFICATION	// drop them in reverse order in case db needs it done that way...
WITHOUT_CLASSIFICATION	//	public ComponentTuplizerFactory getComponentTuplizerFactory() { //		return componentTuplizerFactory; //	}
WITHOUT_CLASSIFICATION	// This method may be called many times!!
WITHOUT_CLASSIFICATION	//			Iterator iterator = extendsQueue.iterator();
WITHOUT_CLASSIFICATION	//		Iterator iter = extendsQueue.iterator();
WITHOUT_CLASSIFICATION	// found
WITHOUT_CLASSIFICATION	// found
WITHOUT_CLASSIFICATION	//		settings.setComponentTuplizerFactory( this.getComponentTuplizerFactory() );
WITHOUT_CLASSIFICATION	//	private final List extendsQueue;
WITHOUT_CLASSIFICATION	//<String, String>
WITHOUT_CLASSIFICATION	//<String, String>
WITHOUT_CLASSIFICATION	//+ "_" + referencedColumnName not used for backward compatibility
WITHOUT_CLASSIFICATION	//Set USE_REFLECTION_OPTIMIZER to false to fix HHH-227
WITHOUT_CLASSIFICATION	//orphan delete not supported for EntityMode.DOM4J
WITHOUT_CLASSIFICATION	//element = XMLHelper.generateDom4jElement( persister.getNodeName() );
WITHOUT_CLASSIFICATION	// intentionally empty
WITHOUT_CLASSIFICATION	//orphan delete not supported for EntityMode.DOM4J
WITHOUT_CLASSIFICATION	//element = XMLHelper.generateDom4jElement( persister.getNodeName() );
WITHOUT_CLASSIFICATION	//needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	//maintain correct duplication if loaded in a cartesian product
WITHOUT_CLASSIFICATION	// the element has been removed from the set
WITHOUT_CLASSIFICATION	// the element has changed
WITHOUT_CLASSIFICATION	//Careful: these methods do not initialize the collection.
WITHOUT_CLASSIFICATION	//needed so that we remove this collection from the second-level cache
WITHOUT_CLASSIFICATION	// override on some subclasses
WITHOUT_CLASSIFICATION	//override on some subclasses
WITHOUT_CLASSIFICATION	//do this bit after setting initialized to true or it will recurse
WITHOUT_CLASSIFICATION	// short-circuit(s) // no new elements, the old list contains only Orphans // no old elements, so no Orphans neither
WITHOUT_CLASSIFICATION	// create the collection holding the Orphans
WITHOUT_CLASSIFICATION	// collect EntityIdentifier(s) of the *current* elements - add them into a HashSet for fast access
WITHOUT_CLASSIFICATION	// iterate over the *old* list
WITHOUT_CLASSIFICATION	/*(array==null) ? tempList.size() :*/
WITHOUT_CLASSIFICATION	// intentionally empty
WITHOUT_CLASSIFICATION	/*(array==null) ? tempList.get(i) :*/
WITHOUT_CLASSIFICATION	//write(); -- doesn't
WITHOUT_CLASSIFICATION	//write(); -- doesn't
WITHOUT_CLASSIFICATION	// amazingly, these two will work because AbstractCollection // uses iterator() to fill the array
WITHOUT_CLASSIFICATION	//needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	// finally, what it's all about...
WITHOUT_CLASSIFICATION	// note that if we load this collection from a cartesian product // the multiplicity would be broken ... so use an idbag instead
WITHOUT_CLASSIFICATION	// Anyway, here we implement <set> semantics for a // <one-to-many> <bag>!
WITHOUT_CLASSIFICATION	//a shortcut if its location didn't change!
WITHOUT_CLASSIFICATION	//search for it //note that this code is incorrect for other than one-to-many
WITHOUT_CLASSIFICATION	//needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	//a shortcut if its location didn't change!
WITHOUT_CLASSIFICATION	//search for it //note that this code is incorrect for other than one-to-many
WITHOUT_CLASSIFICATION	/*public boolean equals(Object other) {		read();		return bag.equals(other);	}	public int hashCode(Object other) {		read();		return bag.hashCode();	}*/
WITHOUT_CLASSIFICATION	// List OPERATIONS:
WITHOUT_CLASSIFICATION	//pad with nulls from the current last element up to the new index
WITHOUT_CLASSIFICATION	//needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	//needed for SOAP libraries, etc
WITHOUT_CLASSIFICATION	// from Map
WITHOUT_CLASSIFICATION	// from SortedMap
WITHOUT_CLASSIFICATION	//inject the data
WITHOUT_CLASSIFICATION	// cannot be instantiated
WITHOUT_CLASSIFICATION	//default pool size 20
WITHOUT_CLASSIFICATION	// trying via forName() first to be as close to DriverManager's semantics
WITHOUT_CLASSIFICATION	// if debug level is enabled, then log the password, otherwise mask it
WITHOUT_CLASSIFICATION	// register a cleanup synch
WITHOUT_CLASSIFICATION	// wrap the session in the transaction-protection proxy
WITHOUT_CLASSIFICATION	// then bind it
WITHOUT_CLASSIFICATION	// try to make sure we don't wrap and already wrapped session
WITHOUT_CLASSIFICATION	// allow these to go through the the real session no matter what
WITHOUT_CLASSIFICATION	// limit the methods available if no transaction is active
WITHOUT_CLASSIFICATION	// allow these (deprecated) methods to pass through
WITHOUT_CLASSIFICATION	// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// We could register the session against the transaction even though it is // not started, but we'd have no guarentee of ever getting the map // entries cleaned up (aside from spawning threads).
WITHOUT_CLASSIFICATION	//cannot be instantiated
WITHOUT_CLASSIFICATION	//private String propertyName;
WITHOUT_CLASSIFICATION	/*public PropertyProjection project() {		return Projections.property(getPropertyName());	}*/
WITHOUT_CLASSIFICATION	//String[] fk = StringHelper.qualify( "collection_", cp.getKeyColumnNames() );
WITHOUT_CLASSIFICATION	//" collection_ where " +
WITHOUT_CLASSIFICATION	//unsupported
WITHOUT_CLASSIFICATION	//unsupported
WITHOUT_CLASSIFICATION	//cannot be instantiated
WITHOUT_CLASSIFICATION	//the following two lines were added to ensure that this.params is not null, which //can happen with two-deep nested subqueries
WITHOUT_CLASSIFICATION	//with two-deep subqueries, the same alias would get generated for //both using the old method (criteriaQuery.generateSQLAlias()), so //that is now used as a fallback if the main criteria alias isn't set
WITHOUT_CLASSIFICATION	//implicit polymorphism not supported (would need a union)
WITHOUT_CLASSIFICATION	//pull off the last ", "
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	// we have the form: trim(trimSource) //      so we trim leading and trailing spaces
WITHOUT_CLASSIFICATION	// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource)
WITHOUT_CLASSIFICATION	// NOT_SUPPORTED_SHOULD_USE_JDBC3_PreparedStatement.getGeneratedKeys_method
WITHOUT_CLASSIFICATION	// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Oracle did add support for ANSI CASE statements in 9i
WITHOUT_CLASSIFICATION	// the standard SQL function name is current_timestamp...
WITHOUT_CLASSIFICATION	// Informix doesn't have a bit type
WITHOUT_CLASSIFICATION	// or BYTE // or TEXT? // or MONEY
WITHOUT_CLASSIFICATION	// strip table-owner because Informix always returns constraint names as "<table-owner>.<constraint-name>"
WITHOUT_CLASSIFICATION	// build the map of standard ANSI SQL aggregation functions ~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//pre H3.2 behavior: super.getReturnType(ct, m);
WITHOUT_CLASSIFICATION	// finally use the sqltype if == on Hibernate types did not find a match.
WITHOUT_CLASSIFICATION	//because numeric can be anything
WITHOUT_CLASSIFICATION	// constructors and factory methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// standard sql92 functions (can be overridden by subclasses)
WITHOUT_CLASSIFICATION	//map second/minute/hour/day/month/year to ANSI extract(), override on subclasses
WITHOUT_CLASSIFICATION	// register hibernate types for default use in scalar sqlquery type auto detection
WITHOUT_CLASSIFICATION	// database type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// hibernate type mapping support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// keyword support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// native identifier generatiion ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// GUID support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// limit/offset support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// by default we report no support
WITHOUT_CLASSIFICATION	// by default we report no support for NOWAIT lock semantics
WITHOUT_CLASSIFICATION	// table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// current timestamp support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// SQLException support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// identifier quoting support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// grrr... for differentiation of mysql storage engines
WITHOUT_CLASSIFICATION	// Informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// return false here, as most databases do not properly support this construct...
WITHOUT_CLASSIFICATION	// Mckoi has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	// Oracle8 and previous define only a "DATE" type which //      is used to represent all aspects of date/time
WITHOUT_CLASSIFICATION	//starts with 1, implicitly
WITHOUT_CLASSIFICATION	//" cascade";
WITHOUT_CLASSIFICATION	//trim off the length/precision/scale
WITHOUT_CLASSIFICATION	/*public boolean dropTemporaryTableAfterUse() {		//we have to, because postgres sets current tx		//to rollback only after a failed create table		return true;	}*/
WITHOUT_CLASSIFICATION	// CHECK VIOLATION
WITHOUT_CLASSIFICATION	// UNIQUE VIOLATION
WITHOUT_CLASSIFICATION	// FOREIGN KEY VIOLATION
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// NOT NULL VIOLATION
WITHOUT_CLASSIFICATION	// ALL OTHER
WITHOUT_CLASSIFICATION	// Register the type of the out param - PostgreSQL uses Types.OTHER
WITHOUT_CLASSIFICATION	// seems to not really... //	public boolean supportsRowValueConstructorSyntax() { //		return true; //	}
WITHOUT_CLASSIFICATION	// seems to have spotty LOB suppport
WITHOUT_CLASSIFICATION	// HHH-2300
WITHOUT_CLASSIFICATION	// ignore (probably H2 not in the classpath)
WITHOUT_CLASSIFICATION	// Numeric Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// String Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Time and Date Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// System Functions ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// not null is implicit
WITHOUT_CLASSIFICATION	// 23000: Check constraint violation: {0} // 23001: Unique index or primary key violation: {0}
WITHOUT_CLASSIFICATION	// Display the dialect version.
WITHOUT_CLASSIFICATION	// The RDMS concat() function only supports 2 parameters
WITHOUT_CLASSIFICATION	// Dialect method overrides ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Original Dialect.java returns " for update";
WITHOUT_CLASSIFICATION	// Verify the state of this new method in Hibernate 3.0 Dialect.java
WITHOUT_CLASSIFICATION	// Origial Dialect.java returns true;
WITHOUT_CLASSIFICATION	// The keyword used to specify a nullable column.
WITHOUT_CLASSIFICATION	// *** Sequence methods - start. The RDMS dialect needs these
WITHOUT_CLASSIFICATION	// methods to make it possible to use the Native Id generator
WITHOUT_CLASSIFICATION	// The where clause was added to eliminate this statement from Brute Force Searches.
WITHOUT_CLASSIFICATION	// *** Sequence methods - end
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//starts with 1, implicitly
WITHOUT_CLASSIFICATION	// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400
WITHOUT_CLASSIFICATION	// Used with DROP TABLE to delete all records in the table.
WITHOUT_CLASSIFICATION	// RDMS supports the UNION ALL clause.
WITHOUT_CLASSIFICATION	// RDMS has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	// Multi-param dialect functions...
WITHOUT_CLASSIFICATION	// function templates
WITHOUT_CLASSIFICATION	//not null is implicit
WITHOUT_CLASSIFICATION	// this assumes schema support, which is present in 1.8.0 and later...
WITHOUT_CLASSIFICATION	// HSQLDB only supports READ_UNCOMMITTED transaction isolation
WITHOUT_CLASSIFICATION	// Multi-param string dialect functions...
WITHOUT_CLASSIFICATION	// Multi-param numeric dialect functions...
WITHOUT_CLASSIFICATION	// Multi-param date dialect functions...
WITHOUT_CLASSIFICATION	// simple nullability constraint
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// not final-static to avoid possible classcast exceptions if using different oracle drivers.
WITHOUT_CLASSIFICATION	//	register the type of the out param - an Oracle specific type
WITHOUT_CLASSIFICATION	// TimesTen has no BLOB/CLOB support, but these types may be suitable  // for some applications. The length is limited to 4 million bytes.
WITHOUT_CLASSIFICATION	// new methods in dialect3
WITHOUT_CLASSIFICATION	/*public boolean supportsForUpdateNowait() {		return false;	}*/
WITHOUT_CLASSIFICATION	// TimesTen has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	// iterate entries ordered by capacity to find first fit
WITHOUT_CLASSIFICATION	// add new ordered map
WITHOUT_CLASSIFICATION	//		registerColumnType( Types.VARCHAR, 16777215, "mediumtext" );
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//		 This assumes you will want to ignore any update counts 
WITHOUT_CLASSIFICATION	// sql server just returns automatically
WITHOUT_CLASSIFICATION	//		return "select CURRENT_TIMESTAMP from RDB$DATABASE";
WITHOUT_CLASSIFICATION	//registerColumnType data types
WITHOUT_CLASSIFICATION	// hibernate seems to ignore this type...
WITHOUT_CLASSIFICATION	// IBID for current_time and current_date
WITHOUT_CLASSIFICATION	// Tell hibernate to use getBytes instead of getBinaryStream
WITHOUT_CLASSIFICATION	// No batch statements
WITHOUT_CLASSIFICATION	/*		 * We might want a special case for 19,2. This is very common for money types		 * and here it is converted to 18,1		 */
WITHOUT_CLASSIFICATION	//no pointbase BIT
WITHOUT_CLASSIFICATION	//no pointbase TINYINT
WITHOUT_CLASSIFICATION	// Pointbase has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	//starts with 1, implicitly
WITHOUT_CLASSIFICATION	// The current_timestamp is more accurate, but only known to be supported // in SQL Server 7.0 and later (i.e., Sybase not known to support it at all)
WITHOUT_CLASSIFICATION	// SQL Server (at least up through 2005) does not support defining // cascade delete constraints which can circel back to the mutating // table
WITHOUT_CLASSIFICATION	// here assume SQLServer2005 using snapshot isolation, which does not have this problem
WITHOUT_CLASSIFICATION	//		registerColumnType( Types.BLOB, 16777215, "mediumblob" ); //		registerColumnType( Types.BLOB, 65535, "blob" );
WITHOUT_CLASSIFICATION	//		registerColumnType( Types.CLOB, 16777215, "mediumtext" ); //		registerColumnType( Types.CLOB, 65535, "text" );
WITHOUT_CLASSIFICATION	//		registerColumnType( Types.VARCHAR, 16777215, "mediumtext" ); //		registerColumnType( Types.VARCHAR, 65535, "text" );
WITHOUT_CLASSIFICATION	//starts with 1, implicitly
WITHOUT_CLASSIFICATION	/* package-private */
WITHOUT_CLASSIFICATION	// sql server just returns automatically
WITHOUT_CLASSIFICATION	//Sybase BIT type does not support null values
WITHOUT_CLASSIFICATION	//		 This assumes you will want to ignore any update counts
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//		 You may still have other ResultSets or update counts left to process here //		 but you can't do it now or the ResultSet you just got will be closed
WITHOUT_CLASSIFICATION	//not null ... (start with 1) is implicit
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.
WITHOUT_CLASSIFICATION	// Multi-param string dialect functions...
WITHOUT_CLASSIFICATION	// Multi-param numeric dialect functions...
WITHOUT_CLASSIFICATION	// Multi-param date dialect functions...
WITHOUT_CLASSIFICATION	// add another (inner) nested select // add the main query // close off the inner nested select
WITHOUT_CLASSIFICATION	// add the main query
WITHOUT_CLASSIFICATION	//add the restriction to the outer select
WITHOUT_CLASSIFICATION	// This assumes you will want to ignore any update counts 
WITHOUT_CLASSIFICATION	// You may still have other ResultSets or update counts left to process here  // but you can't do it now or the ResultSet you just got will be closed 
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//starts with 1, implicitly
WITHOUT_CLASSIFICATION	// simple nullability constraint
WITHOUT_CLASSIFICATION	// not final-static to avoid possible classcast exceptions if using different oracle drivers.
WITHOUT_CLASSIFICATION	//	register the type of the out param - an Oracle specific type
WITHOUT_CLASSIFICATION	// features which change between 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// features which remain constant across 8i, 9i, and 10g ~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// binary %Stream // character %Stream
WITHOUT_CLASSIFICATION	//getDefaultProperties().setProperty(Environment.STATEMENT_BATCH_SIZE, NO_BATCH);
WITHOUT_CLASSIFICATION	// hibernate impelemnts cast in Dialect.java
WITHOUT_CLASSIFICATION	// aggregate functions shouldn't be registered, right? //registerFunction( "list", new StandardSQLFunction("list",Hibernate.STRING) ); // stopped on $list
WITHOUT_CLASSIFICATION	// DDL support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// below is for Cache' that don't have str in 2007.1 there is str and we register str directly
WITHOUT_CLASSIFICATION	// note that %string is deprecated
WITHOUT_CLASSIFICATION	// %upper is deprecated
WITHOUT_CLASSIFICATION	// The syntax used to add a foreign key constraint to a table.
WITHOUT_CLASSIFICATION	// identifier-commalist
WITHOUT_CLASSIFICATION	// IDENTITY support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// SEQUENCE support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// temporary table support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// identifier-commalist
WITHOUT_CLASSIFICATION	// The syntax used to add a column to a table
WITHOUT_CLASSIFICATION	// Completely optional cascading drop clause.
WITHOUT_CLASSIFICATION	// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// LIMIT support (ala TOP) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// InterSystems Cache' does not current support "SELECT ... FOR UPDATE" syntax... // Set your transaction mode to READ_COMMITTED before using
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	/*<String>*/
WITHOUT_CLASSIFICATION	// callable statement support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// miscellaneous support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// The keyword used to specify a nullable column.
WITHOUT_CLASSIFICATION	// Does the LIMIT clause come at the start of the SELECT statement, rather than at the end?
WITHOUT_CLASSIFICATION	// Does the LIMIT clause take a "maximum" row number instead of a total number of returned rows?
WITHOUT_CLASSIFICATION	// The name of the SQL function that transforms a string to lowercase
WITHOUT_CLASSIFICATION	// Create an OuterJoinGenerator for this dialect.
WITHOUT_CLASSIFICATION	// The keyword used to insert a row without specifying // any column values
WITHOUT_CLASSIFICATION	//registerFunction( "trim", new StandardSQLFunction( "trim", Hibernate.STRING ) );
WITHOUT_CLASSIFICATION	//skip the FROM keyword in params
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	// potentialTrimCharacterArgIndex = 1 assumes that a // trim-specification has been specified.  we handle the // exception to that explicitly
WITHOUT_CLASSIFICATION	// SQLFunction implementation
WITHOUT_CLASSIFICATION	// conceivable that the dialect ctor could throw HibernateExceptions, so don't re-wrap
WITHOUT_CLASSIFICATION	// register the standard dialect resolver
WITHOUT_CLASSIFICATION	// register resolvers set via Environment property
WITHOUT_CLASSIFICATION	// kept for backward compatibility until after the 3.1beta5 release of HA
WITHOUT_CLASSIFICATION	//cache the hashcode
WITHOUT_CLASSIFICATION	// the CascadingAction contract ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// the CascadingAction implementations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// delete does cascade to uninitialized collections
WITHOUT_CLASSIFICATION	// orphans should be deleted during delete
WITHOUT_CLASSIFICATION	/*(LockMode) anything*/
WITHOUT_CLASSIFICATION	// lock doesn't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	// refresh doesn't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	// evicts don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	// saves / updates don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	// orphans should be deleted during save/update
WITHOUT_CLASSIFICATION	// for deprecated saveOrUpdateCopy()
WITHOUT_CLASSIFICATION	// persists don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	//a proxy cannot be transient and it breaks ForeignKeys.isTransient
WITHOUT_CLASSIFICATION	// replicate does cascade to uninitialized collections
WITHOUT_CLASSIFICATION	// static helper methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// handles arrays and newly instantiated collections
WITHOUT_CLASSIFICATION	// Actually the semantics of the next three are really "Bag" // Note that, unlike objects, collection insertions, updates, // deletions are not really remembered between flushes. We // just re-use the same Lists for convenience.
WITHOUT_CLASSIFICATION	// Add these directly to the executions queue
WITHOUT_CLASSIFICATION	// continue loop
WITHOUT_CLASSIFICATION	//sort the updates by fk
WITHOUT_CLASSIFICATION	//sort the updates by pk
WITHOUT_CLASSIFICATION	// the mapping of entity names to their latest batch numbers.
WITHOUT_CLASSIFICATION	// the map of batch numbers to EntityInsertAction lists
WITHOUT_CLASSIFICATION	//optimize the hash size to eliminate a rehash.
WITHOUT_CLASSIFICATION	// the list of entity names that indicate the batch number
WITHOUT_CLASSIFICATION	// remove the current element from insertions. It will be added back later.
WITHOUT_CLASSIFICATION	// the entity associated with the current action.
WITHOUT_CLASSIFICATION	// There is already an existing batch for this type of entity. // Check to see if the latest batch is acceptable.
WITHOUT_CLASSIFICATION	// now rebuild the insertions list. There is a batch for each entry in the name list.
WITHOUT_CLASSIFICATION	// the current batch number is the latest batch for this entity type.
WITHOUT_CLASSIFICATION	// loop through all the associations of the current entity and make sure that they are processed // before the current batch number
WITHOUT_CLASSIFICATION	// find the batch number associated with the current association, if any.
WITHOUT_CLASSIFICATION	// create a new batch for this type. The batch number is the number of current batches.
WITHOUT_CLASSIFICATION	// loop through all the associated entities and make sure they have been // processed before the latest // batch associated with this entity type.
WITHOUT_CLASSIFICATION	// since this entity will now be processed in the latest possible batch, // we can be assured that it will come after all other associations, // there's not need to continue checking.
WITHOUT_CLASSIFICATION	//cascade to current collection elements
WITHOUT_CLASSIFICATION	//not really necessary, but good for consistency...
WITHOUT_CLASSIFICATION	// we can't cascade to non-embedded elements
WITHOUT_CLASSIFICATION	//a newly instantiated collection can't have orphans
WITHOUT_CLASSIFICATION	// handle orphaned entities!!
WITHOUT_CLASSIFICATION	// Loaded entity instances, by EntityUniqueKey
WITHOUT_CLASSIFICATION	// Identity map of EntityEntry instances, by the entity instance
WITHOUT_CLASSIFICATION	// Entity proxies, by EntityKey
WITHOUT_CLASSIFICATION	// Snapshots of current database state for entities // that have *not* been loaded
WITHOUT_CLASSIFICATION	// Identity map of array holder ArrayHolder instances, by the array instance
WITHOUT_CLASSIFICATION	// Collection wrappers, by the CollectionKey //key=CollectionKey, value=PersistentCollection
WITHOUT_CLASSIFICATION	// Set of EntityKeys of deleted objects
WITHOUT_CLASSIFICATION	// properties that we have tried to load, and not found in the database
WITHOUT_CLASSIFICATION	// A list of collection wrappers that were instantiating during result set // processing, that we will need to initialize at the end of the query
WITHOUT_CLASSIFICATION	// A container for collections we load up when the owning entity is not // yet loaded ... for now, this is purely transient!
WITHOUT_CLASSIFICATION	// Downgrade locks
WITHOUT_CLASSIFICATION	// any earlier proxy takes precedence
WITHOUT_CLASSIFICATION	//unwrap the object
WITHOUT_CLASSIFICATION	//initialize + unwrap the object
WITHOUT_CLASSIFICATION	//return the proxied object
WITHOUT_CLASSIFICATION	//overwrite old proxy
WITHOUT_CLASSIFICATION	// early exit...
WITHOUT_CLASSIFICATION	// or should it actually throw an exception?
WITHOUT_CLASSIFICATION	//treat it just like a new collection
WITHOUT_CLASSIFICATION	//do this work only at the very highest level of the load //don't let this method be called recursively
WITHOUT_CLASSIFICATION	//note that each iteration of the loop may add new elements
WITHOUT_CLASSIFICATION	//it might be an unwrapped collection reference! //try to find a wrapper (slowish)
WITHOUT_CLASSIFICATION	/*public boolean isNonExistant(EntityKey key) {		return nonExistantEntityKeys.contains(key);	}*/
WITHOUT_CLASSIFICATION	/*public boolean isNonExistant(EntityUniqueKey key) {		return nonExistentEntityUniqueKeys.contains(key);	}*/
WITHOUT_CLASSIFICATION	// iterate all the entities currently associated with the persistence context.
WITHOUT_CLASSIFICATION	// does this entity entry pertain to the entity persister in which we are interested (owner)?
WITHOUT_CLASSIFICATION	//check if the managed object is the parent
WITHOUT_CLASSIFICATION	// otherwise, the proxy was pruned during the serialization process
WITHOUT_CLASSIFICATION	// adds remove as a sort-of alias for delete...
WITHOUT_CLASSIFICATION	//bad cast
WITHOUT_CLASSIFICATION	//return lhsPersister.getSubclassPropertyColumnNames(property);
WITHOUT_CLASSIFICATION	//property-refs for associations defined on a //component are not supported, so no need to slice
WITHOUT_CLASSIFICATION	//if there is no property-ref, assume the join //is to the subclass table (ie. the table of the //subclass that the association belongs to)
WITHOUT_CLASSIFICATION	//handle a property-ref
WITHOUT_CLASSIFICATION	/*NativeSQLQueryReturn*/
WITHOUT_CLASSIFICATION	//final boolean forceCacheRefresh,
WITHOUT_CLASSIFICATION	// why is all others non final ?
WITHOUT_CLASSIFICATION	//this.forceCacheRefresh = forceCacheRefresh;
WITHOUT_CLASSIFICATION	// HELLA IMPORTANT OPTIMIZATION!!!
WITHOUT_CLASSIFICATION	/*return that.type.equals(type) && 			EqualsHelper.equals(that.value, value);*/
WITHOUT_CLASSIFICATION	//Must occur after resolving identifiers!
WITHOUT_CLASSIFICATION	//take a snapshot
WITHOUT_CLASSIFICATION	// do a check
WITHOUT_CLASSIFICATION	// the owning entity may have been deleted and its identifier unset due to // identifier-rollback; in which case, try to look up its identifier from // the persistence context
WITHOUT_CLASSIFICATION	// do the work
WITHOUT_CLASSIFICATION	// We've been here before
WITHOUT_CLASSIFICATION	// it is or was referenced _somewhere_
WITHOUT_CLASSIFICATION	// do the work
WITHOUT_CLASSIFICATION	// if either its role changed,
WITHOUT_CLASSIFICATION	// or its key changed
WITHOUT_CLASSIFICATION	// we will need to create new entries
WITHOUT_CLASSIFICATION	// we will need to remove ye olde entries
WITHOUT_CLASSIFICATION	// force initialize!
WITHOUT_CLASSIFICATION	// else if it's elements changed
WITHOUT_CLASSIFICATION	//ATTRIBUTES MAINTAINED BETWEEN FLUSH CYCLES
WITHOUT_CLASSIFICATION	// session-start/post-flush persistent state
WITHOUT_CLASSIFICATION	// allow the CollectionSnapshot to be serialized
WITHOUT_CLASSIFICATION	// ATTRIBUTES USED ONLY DURING FLUSH CYCLE
WITHOUT_CLASSIFICATION	// "current" means the reference that was found during flush() 
WITHOUT_CLASSIFICATION	// "loaded" means the reference that is consistent  // with the current database state
WITHOUT_CLASSIFICATION	// during flush, we navigate the object graph to // collections and decide what to do with them
WITHOUT_CLASSIFICATION	// if we instantiate a collection during the flush() process, // we must ignore it for the rest of the flush()
WITHOUT_CLASSIFICATION	// new collections that get found + wrapped // during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	//a newly wrapped collection is NOT dirty (or we get unnecessary version updates)
WITHOUT_CLASSIFICATION	//collection.clearDirty()
WITHOUT_CLASSIFICATION	//collection.clearDirty()
WITHOUT_CLASSIFICATION	// detached collections that get found + reattached // during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	//optimization
WITHOUT_CLASSIFICATION	//optimization //optimization
WITHOUT_CLASSIFICATION	//re-snapshot
WITHOUT_CLASSIFICATION	// for convenience to save some lookups
WITHOUT_CLASSIFICATION	//NOTE: this is not updated when properties are fetched lazily!
WITHOUT_CLASSIFICATION	//memory optimization
WITHOUT_CLASSIFICATION	// use the id value of a newly instantiated instance as the unsaved-value
WITHOUT_CLASSIFICATION	// copied from Session:
WITHOUT_CLASSIFICATION	// this should not happen since the DTD prevents it
WITHOUT_CLASSIFICATION	// JoinProcessor needs to know if the where clause fragment came from a dynamic filter or not so it // can put the where clause fragment in the right place in the SQL AST.   'hasFilterCondition' keeps track // of that fact.
WITHOUT_CLASSIFICATION	// the current join represents the join between a many-to-many association table // and its "target" table.  Here we need to apply any additional filters // defined specifically on the many-to-many
WITHOUT_CLASSIFICATION	//check basic level one nullablilty
WITHOUT_CLASSIFICATION	//values is not null and is checkable, we'll look deeper
WITHOUT_CLASSIFICATION	//for non null args, check for components and elements containing components
WITHOUT_CLASSIFICATION	//cache the hashcode
WITHOUT_CLASSIFICATION	//persistent collections may have components
WITHOUT_CLASSIFICATION	//check for all components values in the collection
WITHOUT_CLASSIFICATION	/* will check current level if some of them are not null		 * or sublevels if they exist		 */
WITHOUT_CLASSIFICATION	//do the test
WITHOUT_CLASSIFICATION	// if its an uninitialized proxy it can't be transient
WITHOUT_CLASSIFICATION	//unwrap it
WITHOUT_CLASSIFICATION	// See if the entity is already bound to this session, if not look at the // entity identifier and assume that the entity is persistent if the // id is not "unsaved" (that is, we rely on foreign keys to keep // database integrity)
WITHOUT_CLASSIFICATION	// an unfetched association can only point to // an entity that already exists in the db
WITHOUT_CLASSIFICATION	// let the interceptor inspect the instance to decide
WITHOUT_CLASSIFICATION	// let the persister inspect the instance to decide
WITHOUT_CLASSIFICATION	// we use the assumed value, if there is one, to avoid hitting // the database
WITHOUT_CLASSIFICATION	// hit the database, after checking the session cache for a snapshot
WITHOUT_CLASSIFICATION	// context-entity-identifier returns null explicitly if the entity // is not associated with the persistence context; so make some // deeper checks...
WITHOUT_CLASSIFICATION	//int count = 0;
WITHOUT_CLASSIFICATION	//the first key found after the given key
WITHOUT_CLASSIFICATION	//checkForEnd = false;
WITHOUT_CLASSIFICATION	//count++;
WITHOUT_CLASSIFICATION	//end of array, start filling again from start
WITHOUT_CLASSIFICATION	//we ran out of keys to try
WITHOUT_CLASSIFICATION	//first element of array is reserved for the actual instance we are loading!
WITHOUT_CLASSIFICATION	//the first id found after the given id
WITHOUT_CLASSIFICATION	//we ran out of ids to try
WITHOUT_CLASSIFICATION	// look for existing collection as part of the persistence context
WITHOUT_CLASSIFICATION	// ignore this row of results! Note the early exit
WITHOUT_CLASSIFICATION	// initialize this collection
WITHOUT_CLASSIFICATION	// create one
WITHOUT_CLASSIFICATION	// warning: can cause a recursive calls! (proxy initialization)
WITHOUT_CLASSIFICATION	// there were no queued additions // and the role has a cache
WITHOUT_CLASSIFICATION	// and this is not a forced initialization during flush
WITHOUT_CLASSIFICATION	// some filters affecting the collection are enabled on the session, so do not do the put into the cache.
WITHOUT_CLASSIFICATION	// cleanup code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// loading collection xrefs ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Collection load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// simple cache of param metadata based on query string.  Ideally, the // original "user-supplied query" string should be used to retreive this // metadata (i.e., not the para-list-expanded query string) to avoid // unnecessary cache entries. // Used solely for caching param metadata for native-sql queries, see // getSQLParameterMetadata() for a discussion as to why...
WITHOUT_CLASSIFICATION	// the cache of the actual plans...
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	// assumes that types are all of span 1
WITHOUT_CLASSIFICATION	// for native-sql queries, the param metadata is determined outside // any relation to a query plan, because query plan creation and/or // retreival for a native-sql query depends on all of the return // types having been set, which might not be the case up-front when // param metadata would be most useful
WITHOUT_CLASSIFICATION	// don't care...
WITHOUT_CLASSIFICATION	// Recognition code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// don't care...
WITHOUT_CLASSIFICATION	// NOTE : firstRow is zero-based
WITHOUT_CLASSIFICATION	// break the outer loop !!!
WITHOUT_CLASSIFICATION	// named parameter
WITHOUT_CLASSIFICATION	// could be either an ordinal or JPA-positional parameter
WITHOUT_CLASSIFICATION	// a peek ahead showed this as an JPA-positional parameter
WITHOUT_CLASSIFICATION	// make sure this "name" is an integral
WITHOUT_CLASSIFICATION	// pre-determine and cache the hashcode
WITHOUT_CLASSIFICATION	// perform the actual work
WITHOUT_CLASSIFICATION	// if everything went ok, commit the transaction and close the obtained // connection handle...
WITHOUT_CLASSIFICATION	// at some point the processing went bad, so we need to: //      1) make sure the connection handle gets released //      2) try to cleanup the JTA context as much as possible
WITHOUT_CLASSIFICATION	// finally handle the exception
WITHOUT_CLASSIFICATION	// a "detached" collection that belonged to a different entity
WITHOUT_CLASSIFICATION	//saveOrUpdateCopy() is deprecated!
WITHOUT_CLASSIFICATION	// collectionPersister should not be null, but we don't want to throw // an exception if it is null
WITHOUT_CLASSIFICATION	// otherwise a null or brand new collection // this will also (inefficiently) handle arrays, which // have no snapshot, so we can't do any better //processArrayOrNewCollection(collection, type);
WITHOUT_CLASSIFICATION	// a "detached" collection that originally belonged to the same entity
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	//Force a substitution!
WITHOUT_CLASSIFICATION	// The user requested a "greater" (i.e. more restrictive) form of // pessimistic lock
WITHOUT_CLASSIFICATION	// the database now holds a lock + the object is flushed from the cache, // so release the soft lock
WITHOUT_CLASSIFICATION	// now update the object .. has to be outside the main if block above (because of collections)
WITHOUT_CLASSIFICATION	// Search for collections by reachability, updating their role. // We don't want to touch collections reachable from a deleted object
WITHOUT_CLASSIFICATION	// this is a situation where the entity id is assigned by a post-insert generator // and was saved outside the transaction forcing it to be delayed
WITHOUT_CLASSIFICATION	// NOTE: we need to do the wrap here even if its not "dirty", // because collections need wrapping but changes to _them_ // don't dirty the container. Also, for versioned data, we // need to wrap before calling searchForDirtyCollections
WITHOUT_CLASSIFICATION	//grab its state saved at deletion
WITHOUT_CLASSIFICATION	// grab its current state
WITHOUT_CLASSIFICATION	// schedule the update // note that we intentionally do _not_ pass in currentPersistentState!
WITHOUT_CLASSIFICATION	// substitutes into values by side-effect
WITHOUT_CLASSIFICATION	// give the Interceptor a chance to process property values, if the properties // were modified by the Interceptor, we need to set them back to the object
WITHOUT_CLASSIFICATION	// compare to cached state (ignoring collections unless versioned)
WITHOUT_CLASSIFICATION	// if it was dirtied by a collection only
WITHOUT_CLASSIFICATION	// increment the version number (if necessary)
WITHOUT_CLASSIFICATION	// check nullability but do not perform command execute // we'll use scheduled updates for that.
WITHOUT_CLASSIFICATION	//give the Interceptor a chance to modify property values
WITHOUT_CLASSIFICATION	//now we might need to recalculate the dirtyProperties array
WITHOUT_CLASSIFICATION	//use the current version
WITHOUT_CLASSIFICATION	// Interceptor returned null, so do the dirtycheck ourself, if possible
WITHOUT_CLASSIFICATION	// object loaded by update()
WITHOUT_CLASSIFICATION	// dirty check against the usual snapshot of the entity
WITHOUT_CLASSIFICATION	// dirty check against the database snapshot, if possible/necessary
WITHOUT_CLASSIFICATION	// the Interceptor handled the dirty checking
WITHOUT_CLASSIFICATION	//even process null collections
WITHOUT_CLASSIFICATION	// get the id from the object
WITHOUT_CLASSIFICATION	//always do an INSERT, and let it fail by constraint violation
WITHOUT_CLASSIFICATION	//what is the version on the database?
WITHOUT_CLASSIFICATION	/// HHH-2378
WITHOUT_CLASSIFICATION	//will result in a SQL UPDATE:
WITHOUT_CLASSIFICATION	//else do nothing (don't even reassociate object!)
WITHOUT_CLASSIFICATION	// no existing row - do an insert
WITHOUT_CLASSIFICATION	//refresh() does not pass an entityName
WITHOUT_CLASSIFICATION	//do not return a proxy! //(this option indicates we are initializing a proxy)
WITHOUT_CLASSIFICATION	//return a proxy if appropriate
WITHOUT_CLASSIFICATION	// return existing object or initialized proxy (unless deleted)
WITHOUT_CLASSIFICATION	// return new uninitialized proxy
WITHOUT_CLASSIFICATION	// this object was already loaded
WITHOUT_CLASSIFICATION	// Entity was found in second-level cache...
WITHOUT_CLASSIFICATION	// make it circular-reference safe
WITHOUT_CLASSIFICATION	// intializes result by side-effect
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Pre-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//some statistics
WITHOUT_CLASSIFICATION	//safe from concurrent modification because of how entryList() is implemented on IdentityMap
WITHOUT_CLASSIFICATION	// Initialize dirty flags for arrays + collections with composite elements // and reset reached, doupdate, etc.
WITHOUT_CLASSIFICATION	// Among other things, updateReachables() will recursively load all // collections that are moving roles. This might cause entities to // be loaded.
WITHOUT_CLASSIFICATION	// So this needs to be safe from concurrent modification problems. // It is safe because of how IdentityMap implements entrySet()
WITHOUT_CLASSIFICATION	// Update the status of the object and if necessary, schedule an update
WITHOUT_CLASSIFICATION	// Schedule updates to collections:
WITHOUT_CLASSIFICATION	// we need to lock the collection caches before // executing entity inserts/updates in order to // account for bidi associations
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // Post-flushing section // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//the database has changed now, so the subselect results need to be invalidated
WITHOUT_CLASSIFICATION	//if the collection is dereferenced, remove from the session cache //iter.remove(); //does not work, since the entrySet is not backed by the set
WITHOUT_CLASSIFICATION	//otherwise recreate the mapping between the collection and its key
WITHOUT_CLASSIFICATION	//get a snapshot
WITHOUT_CLASSIFICATION	/* package-private */
WITHOUT_CLASSIFICATION	/* package-private */
WITHOUT_CLASSIFICATION	// key is an entity involved with the operation performed by the listener; // value is a flag indicating if the listener explicitly operates on the entity
WITHOUT_CLASSIFICATION	// EARLY EXIT!!!
WITHOUT_CLASSIFICATION	//ie. the entity came in from update()
WITHOUT_CLASSIFICATION	// before any callbacks, etc, so subdeletions see that this deletion happened first
WITHOUT_CLASSIFICATION	// Ensures that containing deletions happen before sub-deletions
WITHOUT_CLASSIFICATION	//		TypeFactory.deepCopy( currentState, propTypes, persister.getPropertyUpdateability(), deletedState, session );
WITHOUT_CLASSIFICATION	// cascade-delete to collections BEFORE the collection owner is deleted
WITHOUT_CLASSIFICATION	// cascade-delete to many-to-one AFTER the parent was deleted
WITHOUT_CLASSIFICATION	// if it is an initialized proxy, let cascade // handle it later on
WITHOUT_CLASSIFICATION	//assign the requested id to the proxy, *before* //reassociating the proxy
WITHOUT_CLASSIFICATION	// an uninitialized proxy, noop, don't even need to // return an id, since it is never a save()
WITHOUT_CLASSIFICATION	//initialize properties of the event:
WITHOUT_CLASSIFICATION	//return the id in the event object
WITHOUT_CLASSIFICATION	//TRANSIENT or DELETED
WITHOUT_CLASSIFICATION	// use the id assigned to the instance
WITHOUT_CLASSIFICATION	// assume this is a newly instantiated transient object // which should be saved rather than updated
WITHOUT_CLASSIFICATION	// this is a transient object with existing persistent state not loaded by the session
WITHOUT_CLASSIFICATION	// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()
WITHOUT_CLASSIFICATION	//cachedState,
WITHOUT_CLASSIFICATION	//assume true, since we don't really know, and it doesn't matter
WITHOUT_CLASSIFICATION	//a "detached" collection!
WITHOUT_CLASSIFICATION	// if the collection belonged to a different entity, // clean up the existing state of the collection
WITHOUT_CLASSIFICATION	//log.debug( "calling onLoad()" );
WITHOUT_CLASSIFICATION	//EARLY EXIT!
WITHOUT_CLASSIFICATION	// note: performExecutions() clears all collectionXxxxtion  // collections (the collection actions) in the session
WITHOUT_CLASSIFICATION	// if no array holder we found an unwrappered array (this can't occur, // because we now always call wrap() before getting to here) // return (ah==null) ? true : searchForDirtyCollections(ah, type);
WITHOUT_CLASSIFICATION	// if not wrappered yet, its dirty (this can't occur, because // we now always call wrap() before getting to here) // return ( ! (obj instanceof PersistentCollection) ) ? //true : searchForDirtyCollections( (PersistentCollection) obj, type );
WITHOUT_CLASSIFICATION	//we need to check even if it was not initialized, because of delayed adds!
WITHOUT_CLASSIFICATION	//NOTE: EARLY EXIT!
WITHOUT_CLASSIFICATION	// find any entities that are still transient after retry
WITHOUT_CLASSIFICATION	//EARLY EXIT!
WITHOUT_CLASSIFICATION	// Check the persistence context for an entry relating to this // entity to be merged...
WITHOUT_CLASSIFICATION	// we have specialized case of a detached entity from the // perspective of the merge operation.  Specifically, we // have an incoming entity instance which has a corresponding // entry in the current persistence context, but registered // under a different entity instance
WITHOUT_CLASSIFICATION	//DELETED
WITHOUT_CLASSIFICATION	//before cascade!
WITHOUT_CLASSIFICATION	// cascade first, so that all unsaved objects get their // copy created before we actually copy //cascadeOnMerge(event, persister, entity, copyCache, Cascades.CASCADE_BEFORE_MERGE);
WITHOUT_CLASSIFICATION	//this bit is only *really* absolutely necessary for handling //requestedId, but is also good if we merge multiple object //graphs, since it helps ensure uniqueness
WITHOUT_CLASSIFICATION	// continue...; we'll find out if it ends up not getting saved later
WITHOUT_CLASSIFICATION	// cascade first, so that all unsaved objects get their // copy created before we actually copy
WITHOUT_CLASSIFICATION	// check that entity id = requestedId
WITHOUT_CLASSIFICATION	//before cascade!
WITHOUT_CLASSIFICATION	// we got here because we assumed that an instance // with an assigned id was detached, when it was // really persistent
WITHOUT_CLASSIFICATION	// cascade first, so that all unsaved objects get their  // copy created before we actually copy
WITHOUT_CLASSIFICATION	//copyValues works by reflection, so explicitly mark the entity instance dirty
WITHOUT_CLASSIFICATION	//EARLY EXIT
WITHOUT_CLASSIFICATION	//source.getBatcher().executeBatch(); //found another way to ensure that all batched joined inserts have been executed
WITHOUT_CLASSIFICATION	// substitutes into values by side-effect
WITHOUT_CLASSIFICATION	//now done in EntityIdentityInsertAction //persister.setIdentifier( entity, id, source.getEntityMode() );
WITHOUT_CLASSIFICATION	//source.getPersistenceContext().removeNonExist( new EntityKey( id, persister, source.getEntityMode() ) );
WITHOUT_CLASSIFICATION	//keep the existing version number in the case of replicate!
WITHOUT_CLASSIFICATION	// cascade-save to many-to-one BEFORE the parent is saved
WITHOUT_CLASSIFICATION	//pass this as an argument only to avoid double looking
WITHOUT_CLASSIFICATION	// the object is persistent
WITHOUT_CLASSIFICATION	//the entity is associated with the session, so check its status
WITHOUT_CLASSIFICATION	// do nothing for persistent instances
WITHOUT_CLASSIFICATION	//ie. e.status==DELETED
WITHOUT_CLASSIFICATION	// the object is transient or detached
WITHOUT_CLASSIFICATION	//NOTE EARLY EXIT!
WITHOUT_CLASSIFICATION	// Private constructor - stops checkstyle from complaining.
WITHOUT_CLASSIFICATION	// First, try to find a matching constructor accepting a ViolatedConstraintNameExtracter param...
WITHOUT_CLASSIFICATION	// eat it and try next
WITHOUT_CLASSIFICATION	// Otherwise, try to use the no-arg constructor
WITHOUT_CLASSIFICATION	// oracle sql-state code for deadlock
WITHOUT_CLASSIFICATION	// CollectionPropertyMapping processes everything except 'index'.
WITHOUT_CLASSIFICATION	// remove initial ", "
WITHOUT_CLASSIFICATION	// remove initial " and "
WITHOUT_CLASSIFICATION	//beforeClassTokens.add("new"); DEFINITELY DON'T HAVE THIS!!
WITHOUT_CLASSIFICATION	//notAfterClassTokens.add(",");
WITHOUT_CLASSIFICATION	// just especially for the trivial collection filter
WITHOUT_CLASSIFICATION	//update last non-whitespace token, if necessary
WITHOUT_CLASSIFICATION	// select-range is terminated by declaration of "from"
WITHOUT_CLASSIFICATION	//scan for next non-whitespace token
WITHOUT_CLASSIFICATION	// Note this!!
WITHOUT_CLASSIFICATION	// Error message constants.
WITHOUT_CLASSIFICATION	// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// semantic action handling ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Handle collection-fiter compilation. // IMPORTANT NOTE: This is modifying the INPUT (HQL) tree, not the output tree!
WITHOUT_CLASSIFICATION	// Show the modified AST.
WITHOUT_CLASSIFICATION	// Create a parameter specification for the collection filter...
WITHOUT_CLASSIFICATION	// Use the delegate.
WITHOUT_CLASSIFICATION	// Use the delegate.
WITHOUT_CLASSIFICATION	// Get the names of the columns used to link between the collection // owner and the collection elements.
WITHOUT_CLASSIFICATION	// The path AST should be a DotNode, and it should have been evaluated already.
WITHOUT_CLASSIFICATION	// Tell the dot node about the join type.
WITHOUT_CLASSIFICATION	// Re-arrange the tree so that the collection function is the root and the lhs is the path.
WITHOUT_CLASSIFICATION	// Don't forget to resolve the argument! // Resolve the collection function now.
WITHOUT_CLASSIFICATION	// Resolve everything up to this dot, but don't resolve the placeholders yet.
WITHOUT_CLASSIFICATION	// Should mean that no such property was found
WITHOUT_CLASSIFICATION	// Was there an explicit select expression?
WITHOUT_CLASSIFICATION	// Attach any mapping-defined "ORDER BY" fragments
WITHOUT_CLASSIFICATION	// Use the explicitly declared select expression; determine the // return types indicated by each select token
WITHOUT_CLASSIFICATION	// After that, process the JOINs. // Invoke a delegate to do the work, as this is farily complex.
WITHOUT_CLASSIFICATION	// Make #@%$^#^&# sure no alias is applied to the table name
WITHOUT_CLASSIFICATION	// We need to generate ids as part of this bulk insert. // // Note that this is only supported for sequence-style generators and // post-insert-style generators; basically, only in-db generators
WITHOUT_CLASSIFICATION	// Use the delegate.
WITHOUT_CLASSIFICATION	// We need to seed the version value as part of this bulk insert
WITHOUT_CLASSIFICATION	// we need to wrtap the param in a cast()
WITHOUT_CLASSIFICATION	// This is called when it's time to fully resolve a path expression.
WITHOUT_CLASSIFICATION	// Generate implicit joins, only if necessary.
WITHOUT_CLASSIFICATION	// Notify the FROM element that it is being referenced by the select.
WITHOUT_CLASSIFICATION	// Turn off includeSubclasses on all FromElements.
WITHOUT_CLASSIFICATION	// create the node initially with the param name so that it shows // appropriately in the "original text" attribute
WITHOUT_CLASSIFICATION	// Use the delegate, resolve identifiers as FROM element aliases.
WITHOUT_CLASSIFICATION	// select clauses for insert statements should alwasy be treated as shallow
WITHOUT_CLASSIFICATION	// no need to even collect this information if the persister is considered multi-table
WITHOUT_CLASSIFICATION	// Make sure that the persister is versioned
WITHOUT_CLASSIFICATION	// handle trace logging ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Use the delegate.
WITHOUT_CLASSIFICATION	// --Commented out by Inspection (12/11/04 10:56 AM): int getWarningCount();
WITHOUT_CLASSIFICATION	// Alias references and identifiers use the same node class.
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// make a new one
WITHOUT_CLASSIFICATION	// just do the regular thing if you can't find the ctor // Your AST must have default ctor to use this.
WITHOUT_CLASSIFICATION	// Initialize SQL nodes here.
WITHOUT_CLASSIFICATION	// semantic action processing ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// if template is null we just write the function out as it appears in the hql statement
WITHOUT_CLASSIFICATION	// this function has a template -> redirect output and catch the arguments
WITHOUT_CLASSIFICATION	// --- Inner classes (moved here from sql-gen.g) ---
WITHOUT_CLASSIFICATION	// check two "adjecent" nodes at the top of the from-clause tree
WITHOUT_CLASSIFICATION	///////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// these are just two unrelated table references
WITHOUT_CLASSIFICATION	// again, both should be FromElements
WITHOUT_CLASSIFICATION	// NOTE : firstRow is zero-based
WITHOUT_CLASSIFICATION	// right represents a joins originating from left; or // both right and left reprersent joins originating from the same FromElement
WITHOUT_CLASSIFICATION	// check a set of parent/child nodes in the from-clause tree // to determine if a comma is required between them
WITHOUT_CLASSIFICATION	// right represents a joins originating from left...
WITHOUT_CLASSIFICATION	// all clear
WITHOUT_CLASSIFICATION	// Ignore the token class name parameter, and use a specific token class.
WITHOUT_CLASSIFICATION	//overriden to avoid System.exit
WITHOUT_CLASSIFICATION	//overriden to avoid System.exit
WITHOUT_CLASSIFICATION	// remember that ordinal parameters numbers are 1-based!!!
WITHOUT_CLASSIFICATION	// don't care about other param types here, just those explicitly user-defined...
WITHOUT_CLASSIFICATION	// If the query is already compiled, skip the compilation.
WITHOUT_CLASSIFICATION	// Remember the parameters for the compilation.
WITHOUT_CLASSIFICATION	// PHASE 1 : Parse the HQL into an AST.
WITHOUT_CLASSIFICATION	// PHASE 2 : Analyze the HQL AST, and produce an SQL AST.
WITHOUT_CLASSIFICATION	// PHASE 3 : Generate the SQL.
WITHOUT_CLASSIFICATION	// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes
WITHOUT_CLASSIFICATION	// we do not actually propogate ANTLRExceptions as a cause, so // log it here for diagnostic purposes
WITHOUT_CLASSIFICATION	//only needed during compilation phase...
WITHOUT_CLASSIFICATION	// Transform the tree.
WITHOUT_CLASSIFICATION	// Parse the query string into an HQL AST.
WITHOUT_CLASSIFICATION	// Delegate to the QueryLoader...
WITHOUT_CLASSIFICATION	// Delegate to the QueryLoader...
WITHOUT_CLASSIFICATION	// Delegate to the QueryLoader...
WITHOUT_CLASSIFICATION	// NOTE : ( max - 1 ) because first is zero-based while max is not...
WITHOUT_CLASSIFICATION	// -- Package local methods for the QueryLoader delegate --
WITHOUT_CLASSIFICATION	// If there are no collection fetches, then no further checks are needed
WITHOUT_CLASSIFICATION	// A shallow query is ok (although technically there should be no fetching here...)
WITHOUT_CLASSIFICATION	// should be the first, but just to be safe...
WITHOUT_CLASSIFICATION	// Use the delegate.
WITHOUT_CLASSIFICATION	// Use the delegate.
WITHOUT_CLASSIFICATION	// Impl Note: allows multiple collection fetches as long as the // entire fecthed graph still "points back" to a single // root entity for return
WITHOUT_CLASSIFICATION	// Otherwise, we have a non-scalar select with defined collection fetch(es). // Make sure that there is only a single root entity in the return (no tuples)
WITHOUT_CLASSIFICATION	// This is not strictly true.  We actually just need to make sure that // it is ordered by root-entity PK and that that order-by comes before // any non-root-entity ordering...
WITHOUT_CLASSIFICATION	//			paramTranslations = new ParameterTranslationsImpl( collectedParameterSpecifications );
WITHOUT_CLASSIFICATION	// we are already processing a dot-structure
WITHOUT_CLASSIFICATION	// igndore it...
WITHOUT_CLASSIFICATION	// we are now at a new tree level
WITHOUT_CLASSIFICATION	// [jsd] The fix for HHH-558...
WITHOUT_CLASSIFICATION	// If the token can tell us if it could be an identifier...
WITHOUT_CLASSIFICATION	// ... and the expected token type was an identifier, then:
WITHOUT_CLASSIFICATION	// Use the token as an identifier.
WITHOUT_CLASSIFICATION	// Add the token to the AST.
WITHOUT_CLASSIFICATION	// (NOT (EQ a b) ) => (NE a b)
WITHOUT_CLASSIFICATION	// (NOT (NE a b) ) => (EQ a b)
WITHOUT_CLASSIFICATION	// (NOT (LT a b) ) => (GE a b)
WITHOUT_CLASSIFICATION	// (NOT (GE a b) ) => (LT a b)
WITHOUT_CLASSIFICATION	// (NOT (LE a b) ) => (GT a b)
WITHOUT_CLASSIFICATION	// (NOT (LIKE a b) ) => (NOT_LIKE a b)
WITHOUT_CLASSIFICATION	// (NOT (NOT_LIKE a b) ) => (LIKE a b)
WITHOUT_CLASSIFICATION	// (NOT (IS_NOT_NULL a b) ) => (IS_NULL a b)
WITHOUT_CLASSIFICATION	// (NOT (BETWEEN a b) ) => (NOT_BETWEEN a b)
WITHOUT_CLASSIFICATION	// Initialize the error handling delegate.
WITHOUT_CLASSIFICATION	//overriden to avoid System.exit
WITHOUT_CLASSIFICATION	// if // if // Otherwise, handle the error normally.
WITHOUT_CLASSIFICATION	// (NOT (NOT_BETWEEN a b) ) => (BETWEEN a b)
WITHOUT_CLASSIFICATION	/* This can never happen because this rule will always eliminate the child NOT.			case NOT:				return x.getFirstChild();			// (NOT (NOT x) ) => (x)*/
WITHOUT_CLASSIFICATION	// Just add a 'not' parent.
WITHOUT_CLASSIFICATION	// (EQ NULL b) => (IS_NULL b)
WITHOUT_CLASSIFICATION	// (EQ a NULL) => (IS_NULL a)
WITHOUT_CLASSIFICATION	// NOTE: Because we're using ASTUtil.createParent(), the tree must be created from the bottom up. // IS EMPTY x => (EXISTS (QUERY (SELECT_FROM (FROM x) ) ) )
WITHOUT_CLASSIFICATION	// Add NOT if it's negated.
WITHOUT_CLASSIFICATION	// Create nodes that track line and column number.
WITHOUT_CLASSIFICATION	// Case 1: Multi token keywords GROUP BY and ORDER BY // The next token ( LT(2) ) should be 'by'... otherwise, this is just an ident.
WITHOUT_CLASSIFICATION	// Case 2: The current token is after FROM and before '.'.
WITHOUT_CLASSIFICATION	// This handles HHH-354, where there is a strange property name in a where clause. // If the lookahead contains a DOT then something that isn't an IDENT...
WITHOUT_CLASSIFICATION	// See if the second lookahed token can be an identifier.
WITHOUT_CLASSIFICATION	// Set it!
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// strip the " where "
WITHOUT_CLASSIFICATION	// Don't really know all the codes required to adequately decipher returned jdbc exceptions here. // simply allow the failure to be eaten and the subsequent insert-selects/deletes should fail
WITHOUT_CLASSIFICATION	// at the very least cleanup the data :)
WITHOUT_CLASSIFICATION	// First, save off the pertinent ids, as the return value
WITHOUT_CLASSIFICATION	// jdbc params are 1-based
WITHOUT_CLASSIFICATION	// jdbc params are 1-based
WITHOUT_CLASSIFICATION	// Start performing the updates
WITHOUT_CLASSIFICATION	// First, save off the pertinent ids, saving the number of pertinent ids for return
WITHOUT_CLASSIFICATION	// Start performing the deletes
WITHOUT_CLASSIFICATION	// otherwise, everything ok.
WITHOUT_CLASSIFICATION	// visit width-first, then depth
WITHOUT_CLASSIFICATION	// if the types report logical equivalence, return true...
WITHOUT_CLASSIFICATION	// otherwise, perform a "deep equivalence" check...
WITHOUT_CLASSIFICATION	// If there is no WHERE node, make one.
WITHOUT_CLASSIFICATION	// inject the WHERE after the parent
WITHOUT_CLASSIFICATION	// Never include subclasses for implied from elements.
WITHOUT_CLASSIFICATION	// Moved here from SelectClause [jsd]
WITHOUT_CLASSIFICATION	///////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// Use the table fromElement and the property name to get the array of column names.
WITHOUT_CLASSIFICATION	// Set the attributes of the property reference expression.
WITHOUT_CLASSIFICATION	// If the uresolved property path isn't set yet, just use the property name.
WITHOUT_CLASSIFICATION	// The 'from element' that the property is in.
WITHOUT_CLASSIFICATION	// Prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	// Prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	// If this dot has already been resolved, stop now.
WITHOUT_CLASSIFICATION	// If there is no data type for this node, and we're at the end of the path (top most dot node), then // this might be a Java constant.
WITHOUT_CLASSIFICATION	// The property is a collection...
WITHOUT_CLASSIFICATION	// The property is a component...
WITHOUT_CLASSIFICATION	// The property is another class..
WITHOUT_CLASSIFICATION	// Otherwise, this is a primitive type.
WITHOUT_CLASSIFICATION	//foo.bars.size (also handles deprecated stuff like foo.bars.maxelement for backwardness)
WITHOUT_CLASSIFICATION	// This 'dot' expression now refers to the resulting from element.
WITHOUT_CLASSIFICATION	// Always add the collection's query spaces.
WITHOUT_CLASSIFICATION	// in non-select queries, the only time we should need to join is if we are in a subquery from clause
WITHOUT_CLASSIFICATION	// this is the regression style determination which matches the logic of the classic translator
WITHOUT_CLASSIFICATION	// This 'dot' expression now refers to the resulting from element.
WITHOUT_CLASSIFICATION	// even though we might find a pre-existing element by join path, we may not be able to reuse it...
WITHOUT_CLASSIFICATION	// NOTE : addDuplicateAlias() already performs nullness checks on the alias.
WITHOUT_CLASSIFICATION	// if the from-clauses are the same, we can be a little more aggressive in terms of what we reuse
WITHOUT_CLASSIFICATION	// again, null != null here
WITHOUT_CLASSIFICATION	// If this is an implied join in a from element, then use the impled join type which is part of the // tree parser's state (set by the gramamar actions).
WITHOUT_CLASSIFICATION	// otherwise (subquery case) dont reuse the fromElement if we are processing the from-clause of the subquery
WITHOUT_CLASSIFICATION	// we know only the lhs-hand type, so use that
WITHOUT_CLASSIFICATION	// the referenced node text is the special 'id'
WITHOUT_CLASSIFICATION	// only the identifier property field name can be a reference to the associated entity's PK...
WITHOUT_CLASSIFICATION	// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression
WITHOUT_CLASSIFICATION	// Append the new property name onto the unresolved path.
WITHOUT_CLASSIFICATION	// If the lhs is a collection, use CollectionPropertyMapping
WITHOUT_CLASSIFICATION	// Tell the destination fromElement to 'includeSubclasses'.
WITHOUT_CLASSIFICATION	// Use theta style (for regression) // Move the node up, after the origin node.
WITHOUT_CLASSIFICATION	// Don't resolve the node again.
WITHOUT_CLASSIFICATION	// for expected parameter type injection, we expect that the lhs represents // some form of property ref and that the children of the in-list represent // one-or-more params.
WITHOUT_CLASSIFICATION	// we need to strip off the embedded parens so that sql-gen does not double these up
WITHOUT_CLASSIFICATION	// we have something like : "? [op] rhs"
WITHOUT_CLASSIFICATION	// we have something like : "lhs [op] ?"
WITHOUT_CLASSIFICATION	// we know only the rhs-hand type, so use that
WITHOUT_CLASSIFICATION	// handle the (assumed) valid cases: // #1 - the only valid datetime addition synatx is one or the other is a datetime (but not both)
WITHOUT_CLASSIFICATION	// one or the other needs to be a datetime for us to get into this method in the first place...
WITHOUT_CLASSIFICATION	// #3 - note that this is also true of "datetime - :param"...
WITHOUT_CLASSIFICATION	// #2
WITHOUT_CLASSIFICATION	// Generate the inner join -- The elements need to be joined to the collection they are in.
WITHOUT_CLASSIFICATION	// nothing to do
WITHOUT_CLASSIFICATION	// The 'from element' that represents the elements of the collection.
WITHOUT_CLASSIFICATION	// Add the condition to the join sequence that qualifies the indexed element.
WITHOUT_CLASSIFICATION	// Sometimes use the element table alias, sometimes use the... umm... collection table alias (many to many)
WITHOUT_CLASSIFICATION	// Now, set the text for this node.  It should be the element columns.
WITHOUT_CLASSIFICATION	// Get the function return value type, based on the type of the first argument.
WITHOUT_CLASSIFICATION	// This will call initialize(tok)!
WITHOUT_CLASSIFICATION	// mutation depends on the types of nodes invloved...
WITHOUT_CLASSIFICATION	// "pass along" our initial embedded parameter node(s) to the first generated // sql fragment so that it can be handled later for parameter binding...
WITHOUT_CLASSIFICATION	// logic operators by definition resolve to booleans
WITHOUT_CLASSIFICATION	// Generated select expressions are already resolved, nothing to do.
WITHOUT_CLASSIFICATION	// The path may be a reference to an alias defined in the parent query.
WITHOUT_CLASSIFICATION	// The HQL class alias refers to the class name.
WITHOUT_CLASSIFICATION	// Associate the table alias with the element.
WITHOUT_CLASSIFICATION	// try the parent FromClause...
WITHOUT_CLASSIFICATION	// Add the new node to the map so that we don't create it twice.
WITHOUT_CLASSIFICATION	// Make sure that all from elements registered with this FROM clause are actually in the AST.
WITHOUT_CLASSIFICATION	// Invoke setScalarColumnText on each constructor argument.
WITHOUT_CLASSIFICATION	// Collect the select expressions, skip the first child because it is the class name.
WITHOUT_CLASSIFICATION	// return an empty Type array
WITHOUT_CLASSIFICATION	// Constructors are always considered scalar results.
WITHOUT_CLASSIFICATION	// this is the exception returned by ReflectHelper.getConstructor() if it cannot // locate an appropriate constructor
WITHOUT_CLASSIFICATION	// if there is no order by, make one
WITHOUT_CLASSIFICATION	// Find the WHERE; if there is no WHERE, find the FROM...
WITHOUT_CLASSIFICATION	// Now, inject the newly built ORDER BY into the tree
WITHOUT_CLASSIFICATION	// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// logic operators by definition resolve to boolean.
WITHOUT_CLASSIFICATION	// Render the identifier select fragment using the table alias.
WITHOUT_CLASSIFICATION	// Class names in the FROM clause result in a JoinSequence (the old FromParser does this).
WITHOUT_CLASSIFICATION	// For many-to-many joins, use the tablename from the queryable collection for the default text.
WITHOUT_CLASSIFICATION	// Otherwise, use the property mapping.
WITHOUT_CLASSIFICATION	// should be safe to only ever expect EntityPersister references here
WITHOUT_CLASSIFICATION	// If the property is a special collection property name, return a CollectionPropertyMapping.
WITHOUT_CLASSIFICATION	// Collection of components.
WITHOUT_CLASSIFICATION	// make sure the lhs is "assignable"...
WITHOUT_CLASSIFICATION	// false indicates to not generate parens around the assignment
WITHOUT_CLASSIFICATION	// Register the FromElement with the FROM clause, now that we have the names and aliases.
WITHOUT_CLASSIFICATION	// currently allowed...
WITHOUT_CLASSIFICATION	// HHH-276 : implied joins in a subselect where clause - The destination needs to be added // to the destination's from clause. // Not sure if this is will fix everything, but it works.
WITHOUT_CLASSIFICATION	//return classAlias == null ? className : classAlias;
WITHOUT_CLASSIFICATION	// This is an explicit FROM element.
WITHOUT_CLASSIFICATION	// ParameterContainer impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Fetch can't be used with scroll() or iterate().
WITHOUT_CLASSIFICATION	// If it's not implied or it is implied and it's a many to many join where the target wasn't found.
WITHOUT_CLASSIFICATION	// Since this is an explicit FROM element, it can't be implied in the FROM clause.
WITHOUT_CLASSIFICATION	// Do nothing, eplicit from elements are *always* in the projection list.
WITHOUT_CLASSIFICATION	// propertyName refers to something like collection.size...
WITHOUT_CLASSIFICATION	// property name is a sub-path of a component...
WITHOUT_CLASSIFICATION	// Always add the collection's query spaces.
WITHOUT_CLASSIFICATION	// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here
WITHOUT_CLASSIFICATION	// logic operators by definition resolve to booleans
WITHOUT_CLASSIFICATION	// DotNode uses null here...
WITHOUT_CLASSIFICATION	// We represent a from-clause alias
WITHOUT_CLASSIFICATION	// we are the LHS of the DOT representing a naked comp-prop-ref
WITHOUT_CLASSIFICATION	// we are the RHS of the DOT representing a naked comp-prop-ref
WITHOUT_CLASSIFICATION	// we represent a naked (simple) prop-ref
WITHOUT_CLASSIFICATION	// EARLY EXIT!!!  return so the resolve call explicitly coming from DotNode can // resolve this...
WITHOUT_CLASSIFICATION	// assume this ident's text does *not* refer to a property on the given persister
WITHOUT_CLASSIFICATION	// just ignore it for now, it'll get resolved later...
WITHOUT_CLASSIFICATION	// This is not actually a constant, but a reference to FROM element.
WITHOUT_CLASSIFICATION	// check to see if our "propPath" actually // represents a property on the persister
WITHOUT_CLASSIFICATION	// these pieces are needed for usage in select clause
WITHOUT_CLASSIFICATION	// used to set the type of the parent dot node
WITHOUT_CLASSIFICATION	// assume we do *not* refer to a property on the given persister
WITHOUT_CLASSIFICATION	// assume we do *not* refer to a property on the given persister
WITHOUT_CLASSIFICATION	// naked property-refs cannot be used with an aliased from element
WITHOUT_CLASSIFICATION	// this piece is needed for usage in select clause
WITHOUT_CLASSIFICATION	// do *not* over-write the column text, as that has already been // "rendered" during resolve
WITHOUT_CLASSIFICATION	// for some reason the antlr.CommonAST initialization routines force // this method to get called twice.  The first time with an empty string
WITHOUT_CLASSIFICATION	// Look up class name using the first identifier in the path.
WITHOUT_CLASSIFICATION	// Add to the query spaces.
WITHOUT_CLASSIFICATION	// If the from element isn't in the same clause, create a new from element.
WITHOUT_CLASSIFICATION	// This is the root level node. // Generate an explicit from clause at the root.
WITHOUT_CLASSIFICATION	// Correlated subqueries create 'special' implied from nodes // because correlated subselects can't use an ANSI-style join
WITHOUT_CLASSIFICATION	// super-duper-classic-parser-regression-testing-mojo-magic...
WITHOUT_CLASSIFICATION	// A collection of entities...
WITHOUT_CLASSIFICATION	// A collection of components...
WITHOUT_CLASSIFICATION	// A collection of scalar elements...
WITHOUT_CLASSIFICATION	// according to both the ANSI-SQL and EJB3 specs, trim can either take // exactly one parameter or a variable number of parameters between 1 and 4. // from the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If only <trim specification> is omitted, BOTH is assumed; // if <trim character> is omitted, space is assumed
WITHOUT_CLASSIFICATION	// Don't include sub-classes for implied collection joins or subquery joins.
WITHOUT_CLASSIFICATION	// Treat explict from elements in sub-queries properly.
WITHOUT_CLASSIFICATION	//			        ( implied && DotNode.useThetaStyleImplicitJoins ) ) {
WITHOUT_CLASSIFICATION	// the "root from-element" in correlated subqueries do need this piece
WITHOUT_CLASSIFICATION	// Create the FROM element for the target (the elements of the collection).
WITHOUT_CLASSIFICATION	// If the join is implied, then don't include sub-classes on the element.
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// The associated entity is implied, but it must be included in the FROM. // The collection alias is the role.
WITHOUT_CLASSIFICATION	// Tag this node as a JOIN. // Don't include subclasses in the join. // This is a clollection join.
WITHOUT_CLASSIFICATION	// Get the class name of the associated entity.
WITHOUT_CLASSIFICATION	//  origin, path, implied, columns, classAlias,
WITHOUT_CLASSIFICATION	/*implied*/
WITHOUT_CLASSIFICATION	// For implied many-to-many, just add the end join.
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Overridden informational metadata ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// the standard SQL function name is current_timestamp...
WITHOUT_CLASSIFICATION	// This causes the factory to instantiate the desired class.
WITHOUT_CLASSIFICATION	//private Type[] sqlResultTypes;
WITHOUT_CLASSIFICATION	// Frontbase has no known variation of a "SELECT ... FOR UPDATE" syntax...
WITHOUT_CLASSIFICATION	/*	 * The types represented in the SQL result set.	 *	 * @return The types represented in the SQL result set.	 */
WITHOUT_CLASSIFICATION	/*public Type[] getSqlResultTypes() {		return sqlResultTypes;	}*/
WITHOUT_CLASSIFICATION	// First, collect all of the select expressions. // NOTE: This must be done *before* invoking setScalarColumnText() because setScalarColumnText() // changes the AST!!!
WITHOUT_CLASSIFICATION	// First allow the actual type to control the return value. (the actual underlying sqltype could actually be different)
WITHOUT_CLASSIFICATION	//sqlResultTypeList.addAll( constructorArgumentTypeList );
WITHOUT_CLASSIFICATION	// If the data type is not an association type, it could not have been in the FROM clause.
WITHOUT_CLASSIFICATION	//sqlResultTypeList.add( type );
WITHOUT_CLASSIFICATION	// Always add the type to the return type list.
WITHOUT_CLASSIFICATION	// add the fetched entities
WITHOUT_CLASSIFICATION	// Get ready to start adding nodes.
WITHOUT_CLASSIFICATION	// function support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// If there are any scalars (non-entities) selected, render the select column aliases.
WITHOUT_CLASSIFICATION	/*sqlResultTypeList,*/
WITHOUT_CLASSIFICATION	/*ArrayList sqlResultTypeList,*/
WITHOUT_CLASSIFICATION	//sqlResultTypes = ( Type[] ) sqlResultTypeList.toArray( new Type[sqlResultTypeList.size()] );
WITHOUT_CLASSIFICATION	// lock acquisition support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//TODO:
WITHOUT_CLASSIFICATION	// Add the type to the list of returned sqlResultTypes.
WITHOUT_CLASSIFICATION	// Generate an 2d array of column names, the first dimension is parallel with the // return types array.  The second dimension is the list of column names for each // type.
WITHOUT_CLASSIFICATION	// Generate the select expression.
WITHOUT_CLASSIFICATION	// union subclass support ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Skip 'DISTINCT' and 'ALL', so we return the first expression node.
WITHOUT_CLASSIFICATION	// Create SQL_TOKEN nodes for the columns.
WITHOUT_CLASSIFICATION	// Generate the property select tokens.
WITHOUT_CLASSIFICATION	// Get the function name node.
WITHOUT_CLASSIFICATION	// Method expressions in a SELECT should always be considered scalar.
WITHOUT_CLASSIFICATION	// If this is 'elements' then create a new FROM element.
WITHOUT_CLASSIFICATION	// Not elements(x)
WITHOUT_CLASSIFICATION	// Dialect function
WITHOUT_CLASSIFICATION	// Collection 'property function'
WITHOUT_CLASSIFICATION	// If the constant is an IDENT, figure out what it means...
WITHOUT_CLASSIFICATION	// IDENT is a class alias in the FROM.
WITHOUT_CLASSIFICATION	// Resolve to an identity column.
WITHOUT_CLASSIFICATION	// Otherwise, it's a literal.
WITHOUT_CLASSIFICATION	// the name of an entity class
WITHOUT_CLASSIFICATION	//the class discriminator value
WITHOUT_CLASSIFICATION	// Chop off the rest of the tree.
WITHOUT_CLASSIFICATION	// Add a space before the display text.
WITHOUT_CLASSIFICATION	// Find or create the WHERE clause
WITHOUT_CLASSIFICATION	// child == parent.getFirstChild()
WITHOUT_CLASSIFICATION	// Find or create the WHERE clause
WITHOUT_CLASSIFICATION	// Filter conditions need to be inserted before the HQL where condition and the // theta join node.  This is because org.hibernate.loader.Loader binds the filter parameters first, // then it binds all the HQL query parameters, see org.hibernate.loader.Loader.processFilterParameters().
WITHOUT_CLASSIFICATION	// Put the FILTERS node before the HQL condition and theta joins
WITHOUT_CLASSIFICATION	// add the current fragment to the FILTERS node
WITHOUT_CLASSIFICATION	// Create a new THETA_JOINS node as a parent of all filters
WITHOUT_CLASSIFICATION	// Put the THETA_JOINS node before the HQL condition, after the filters.
WITHOUT_CLASSIFICATION	// add the current fragment to the THETA_JOINS node
WITHOUT_CLASSIFICATION	// First, try to get the persister using the given name directly.
WITHOUT_CLASSIFICATION	// unable to locate it using this name
WITHOUT_CLASSIFICATION	// If that didn't work, try using the 'import' name.
WITHOUT_CLASSIFICATION	// Implicit joins use theta style (WHERE pk = fk), explicit joins use JOIN (after from)
WITHOUT_CLASSIFICATION	// locate the registered function by the given name
WITHOUT_CLASSIFICATION	// determine the type of the first argument...
WITHOUT_CLASSIFICATION	// Use the DOT node to emit the first column name. // Create the column names, folled by the column aliases.
WITHOUT_CLASSIFICATION	// Note: this simply constructs a "raw" SQL_TOKEN representing the // where fragment and injects this into the tree.  This "works"; // however it is probably not the best long-term solution. // // At some point we probably want to apply an additional grammar to // properly tokenize this where fragment into constituent parts // focused on the operators embedded within the fragment.
WITHOUT_CLASSIFICATION	// Append the text of the current node.
WITHOUT_CLASSIFICATION	// If the node has a first child, recurse into the first child.
WITHOUT_CLASSIFICATION	// If there is a second child (RHS), recurse into that child.
WITHOUT_CLASSIFICATION	// Iterate through the alias,JoinSequence pairs and generate SQL token nodes.
WITHOUT_CLASSIFICATION	// If the from element represents a JOIN_FRAGMENT and it is // a theta-style join, convert its type from JOIN_FRAGMENT // to FROM_FRAGMENT
WITHOUT_CLASSIFICATION	// this is used during SqlGenerator processing
WITHOUT_CLASSIFICATION	// If there is a FROM fragment and the FROM element is an explicit, then add the from part.
WITHOUT_CLASSIFICATION	/*&& StringHelper.isNotEmpty( frag )*/
WITHOUT_CLASSIFICATION	// The FROM fragment will probably begin with ', '.  Remove this if it is present.
WITHOUT_CLASSIFICATION	// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:
WITHOUT_CLASSIFICATION	// SELECT p FROM p IN CLASS eg.Person ORDER BY p.Name, p.Address, p
WITHOUT_CLASSIFICATION	// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.
WITHOUT_CLASSIFICATION	//named query parameter
WITHOUT_CLASSIFICATION	//default mode
WITHOUT_CLASSIFICATION	//QueryJoinFragment join = q.createJoinFragment(useThetaStyleJoin);
WITHOUT_CLASSIFICATION	//reset the dotcount (but not the path) //after reset!
WITHOUT_CLASSIFICATION	//after reset!
WITHOUT_CLASSIFICATION	// we don't need to worry about any condition in the ON clause // here (toFromFragmentString), since anything in the ON condition // is already applied to the whole query
WITHOUT_CLASSIFICATION	// bit_length feels a bit broken to me. We have to cast to char in order to // pass when a numeric value is supplied. But of course the answers given will // be wildly different for these two datatypes. 1234.5678 will be 9 bytes as // a char string but will be 8 or 16 bytes as a true numeric. // Jay Nance 2006-09-22
WITHOUT_CLASSIFICATION	// dotcount>=2
WITHOUT_CLASSIFICATION	// Do the corresponding RHS
WITHOUT_CLASSIFICATION	//if its "id"
WITHOUT_CLASSIFICATION	//or its the id property name
WITHOUT_CLASSIFICATION	//join = q.createJoinFragment(useThetaStyleJoin);
WITHOUT_CLASSIFICATION	//important!!
WITHOUT_CLASSIFICATION	//String[] keyCols = collPersister.getKeyColumnNames();
WITHOUT_CLASSIFICATION	// an association
WITHOUT_CLASSIFICATION	//allow index() function:
WITHOUT_CLASSIFICATION	// here assume SQLServer2005 using snapshot isolation, which does not have this problem
WITHOUT_CLASSIFICATION	// The reason for this is SQL doesn't let you sort by an expression you are // not returning in the result set.
WITHOUT_CLASSIFICATION	//many-to-many
WITHOUT_CLASSIFICATION	// collections of values
WITHOUT_CLASSIFICATION	//opening paren in new Foo ( ... )
WITHOUT_CLASSIFICATION	//if we are inside a new Result(), but not inside a nested function
WITHOUT_CLASSIFICATION	//special case
WITHOUT_CLASSIFICATION	// the name of an SQL function
WITHOUT_CLASSIFICATION	//null child could occur for no from clause in a filter
WITHOUT_CLASSIFICATION	//this is basically a copy/paste of OrderByParser ... might be worth refactoring
WITHOUT_CLASSIFICATION	// SELECT p FROM p IN CLASS eg.Person GROUP BY p.Name, p.Address, p
WITHOUT_CLASSIFICATION	// return aliases not supported in classic translator!
WITHOUT_CLASSIFICATION	//register collection role
WITHOUT_CLASSIFICATION	// The keyword used to specify an identity column, if identity column key generation is supported.
WITHOUT_CLASSIFICATION	//.getElementPropertyMapping();
WITHOUT_CLASSIFICATION	//crossJoins.add(name);
WITHOUT_CLASSIFICATION	//ie no select clause in HQL
WITHOUT_CLASSIFICATION	// initialize the Set of queried identifier spaces (ie. tables)
WITHOUT_CLASSIFICATION	//ie. no select clause
WITHOUT_CLASSIFICATION	//there _was_ a select clause
WITHOUT_CLASSIFICATION	// return the concrete type, or the underlying type if a concrete type // was not specified
WITHOUT_CLASSIFICATION	//many-to-many
WITHOUT_CLASSIFICATION	//q.addCollection(collectionName, collectionRole);
WITHOUT_CLASSIFICATION	// classic parser does not support bulk manipulation statements
WITHOUT_CLASSIFICATION	// can't cache this stuff either (per-invocation)
WITHOUT_CLASSIFICATION	// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance
WITHOUT_CLASSIFICATION	// This is the legacy behaviour for HQL queries...
WITHOUT_CLASSIFICATION	// not known!
WITHOUT_CLASSIFICATION	// not known!
WITHOUT_CLASSIFICATION	// we have the form: trim(trimSource) //      so we trim leading and trailing spaces // EARLY EXIT!!!!
WITHOUT_CLASSIFICATION	// not known!
WITHOUT_CLASSIFICATION	// not known!
WITHOUT_CLASSIFICATION	//Need this, since join condition can appear inside parens!
WITHOUT_CLASSIFICATION	//tokens that close a sub expression //tokens that open a sub expression //tokens that would indicate a sub expression is a boolean expression
WITHOUT_CLASSIFICATION	//expressionTerminators.add(","); // deliberately excluded
WITHOUT_CLASSIFICATION	//expressionOpeners.add(","); // deliberately excluded
WITHOUT_CLASSIFICATION	// we have the form: trim(from trimSource). //      This is functionally equivalent to trim(trimSource) // EARLY EXIT!!!!
WITHOUT_CLASSIFICATION	// otherwise, a trim-specification and/or a trim-character // have been specified;  we need to decide which options // are present and "do the right thing" // should leading trim-characters be trimmed? // should trailing trim-characters be trimmed? // the trim-character (what is to be trimmed off?) // the trim-source (from where should it be trimmed?)
WITHOUT_CLASSIFICATION	//Inside a BETWEEN ... AND ... expression
WITHOUT_CLASSIFICATION	//were an odd or even number of NOTs encountered //the join string built up by compound paths inside this expression //a flag indicating if the subexpression is known to be boolean
WITHOUT_CLASSIFICATION	//ie. a many-to-many
WITHOUT_CLASSIFICATION	//Cope with [,]
WITHOUT_CLASSIFICATION	//Cope with a continued path expression (ie. ].baz)
WITHOUT_CLASSIFICATION	//NOTE: early return
WITHOUT_CLASSIFICATION	//Cope with a subselect
WITHOUT_CLASSIFICATION	//Cope with special cases of AND, NOT, ()
WITHOUT_CLASSIFICATION	//Close extra brackets we opened
WITHOUT_CLASSIFICATION	//take note when this is a boolean expression
WITHOUT_CLASSIFICATION	// assumes that types are all of span 1
WITHOUT_CLASSIFICATION	//process a token, mapping OO path expressions to SQL expressions
WITHOUT_CLASSIFICATION	//Open any extra brackets we might need.
WITHOUT_CLASSIFICATION	//Cope with special cases of AND, NOT, )
WITHOUT_CLASSIFICATION	// the next one up must also be
WITHOUT_CLASSIFICATION	// Add any joins
WITHOUT_CLASSIFICATION	// assumes that types are all of span 1
WITHOUT_CLASSIFICATION	//named query parameter
WITHOUT_CLASSIFICATION	//path expression
WITHOUT_CLASSIFICATION	// saves / updates don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	// persists don't cascade to uninitialized collections
WITHOUT_CLASSIFICATION	//anything else
WITHOUT_CLASSIFICATION	// the path expression continues after a ]
WITHOUT_CLASSIFICATION	// careful with this!
WITHOUT_CLASSIFICATION	// the path expression ends at the ]
WITHOUT_CLASSIFICATION	// "finish off" the join
WITHOUT_CLASSIFICATION	//NOTICE: no " or . since they are part of (compound) identifiers
WITHOUT_CLASSIFICATION	//cannot instantiate
WITHOUT_CLASSIFICATION	// start by looking for HQL keywords...
WITHOUT_CLASSIFICATION	// inner joins can be abbreviated to 'join'
WITHOUT_CLASSIFICATION	// 'outer' is optional and is ignored
WITHOUT_CLASSIFICATION	// now anything that is not a HQL keyword
WITHOUT_CLASSIFICATION	// process the "old" HQL style where aliases appear _first_ // ie. using the IN or IN CLASS constructions
WITHOUT_CLASSIFICATION	// treat it as a classname
WITHOUT_CLASSIFICATION	// treat it as a path expression
WITHOUT_CLASSIFICATION	// starts with the name of a mapped class (new style)
WITHOUT_CLASSIFICATION	// starts with a path expression (new style)
WITHOUT_CLASSIFICATION	//allow ODMG OQL style: from Person p, p.cars c
WITHOUT_CLASSIFICATION	//handle quoted strings
WITHOUT_CLASSIFICATION	// Object insertions, updates, and deletions have list semantics because // they must happen in the right order so as to respect referential // integrity
WITHOUT_CLASSIFICATION	// "finish off" the join
WITHOUT_CLASSIFICATION	//ignore whitespace
WITHOUT_CLASSIFICATION	//do replacements
WITHOUT_CLASSIFICATION	//handle HQL2 collection syntax
WITHOUT_CLASSIFICATION	// uuid.hex is deprecated
WITHOUT_CLASSIFICATION	// AbstractSelectingDelegate impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//hilo params
WITHOUT_CLASSIFICATION	//sql = query;
WITHOUT_CLASSIFICATION	// performance opt
WITHOUT_CLASSIFICATION	//sql = update;
WITHOUT_CLASSIFICATION	//hilo config
WITHOUT_CLASSIFICATION	// so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	// don't allow comments on these insert statements as comments totally // blow up the Oracle getGeneratedKeys "support" :(
WITHOUT_CLASSIFICATION	//abort the save (the object is already saved by a circular cascade)
WITHOUT_CLASSIFICATION	//throw new IdentifierGenerationException("save associated object first, or disable cascade for inverse association");
WITHOUT_CLASSIFICATION	// intentionally empty
WITHOUT_CLASSIFICATION	//do nothing to avoid a lazy property initialization
WITHOUT_CLASSIFICATION	//keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	// so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	// do nothing until we hit the rsult set containing the generated id
WITHOUT_CLASSIFICATION	/* COLUMN and TABLE should be renamed but it would break the public API */
WITHOUT_CLASSIFICATION	// Loaded entity instances, by EntityKey
WITHOUT_CLASSIFICATION	// if the given name is un-qualified we may neen to qualify it
WITHOUT_CLASSIFICATION	// the default...
WITHOUT_CLASSIFICATION	// unfortunately not really safe to normalize this // to 1 as an initial value like we do the others // because we would not be able to control this if // we are using a sequence...
WITHOUT_CLASSIFICATION	// intentionally empty
WITHOUT_CLASSIFICATION	// Identity map of CollectionEntry instances, by the collection wrapper
WITHOUT_CLASSIFICATION	// general purpose parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// table-specific parameters ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Configurable implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// IdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// PersistentIdentifierGenerator implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// prepare and execute the insert
WITHOUT_CLASSIFICATION	// prepare and execute the insert
WITHOUT_CLASSIFICATION	//fetch the generated id in a separate query
WITHOUT_CLASSIFICATION	// we just hit the last position
WITHOUT_CLASSIFICATION	// scroll ahead
WITHOUT_CLASSIFICATION	// scroll backward
WITHOUT_CLASSIFICATION	// we have not yet hit the last result...
WITHOUT_CLASSIFICATION	// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// do this when all the properties are updateable since there is // a certain likelihood that the information will already be // snapshot-cached.
WITHOUT_CLASSIFICATION	// Inner classes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Constructors ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// State ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Criteria impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Caches
WITHOUT_CLASSIFICATION	//Generators:
WITHOUT_CLASSIFICATION	// cache region is defined by the root-class in the hierarchy...
WITHOUT_CLASSIFICATION	//check if the detached object being merged is the parent
WITHOUT_CLASSIFICATION	// after *all* persisters and named queries are registered
WITHOUT_CLASSIFICATION	// if we get here, it is possible that we have a proxy 'in the way' of the merge map resolution... // 		NOTE: decided to put this here rather than in the above loop as I was nervous about the performance //		of the loop-in-loop especially considering this is far more likely the 'edge case'
WITHOUT_CLASSIFICATION	//JNDI + Serialization:
WITHOUT_CLASSIFICATION	//checking for named queries
WITHOUT_CLASSIFICATION	//stats
WITHOUT_CLASSIFICATION	// EntityNotFoundDelegate
WITHOUT_CLASSIFICATION	// Check named HQL queries
WITHOUT_CLASSIFICATION	// this will throw an error if there's something wrong.
WITHOUT_CLASSIFICATION	//prevents this session from adding things to cache
WITHOUT_CLASSIFICATION	// from javax.naming.Referenceable
WITHOUT_CLASSIFICATION	// look for the instance by uuid
WITHOUT_CLASSIFICATION	//for a dynamic-class
WITHOUT_CLASSIFICATION	//test this entity to see if we must query it
WITHOUT_CLASSIFICATION	//NOTE EARLY EXIT
WITHOUT_CLASSIFICATION	// for backward-compatability
WITHOUT_CLASSIFICATION	// ignore this error for now
WITHOUT_CLASSIFICATION	//to stop the class from being unloaded
WITHOUT_CLASSIFICATION	// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)
WITHOUT_CLASSIFICATION	//must add to JNDI _after_ adding to HashMaps, because some JNDI servers use serialization
WITHOUT_CLASSIFICATION	// Make sure this is a defined parameter and check the incoming value type
WITHOUT_CLASSIFICATION	// for each of the defined parameters, make sure its value // has been set
WITHOUT_CLASSIFICATION	//we never need to apply locks to the SQL
WITHOUT_CLASSIFICATION	// inserts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// deletes ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// during deserialization, we need to reconnect all proxies and // collections to this session, as well as the EntityEntry and // CollectionEntry instances; these associations are transient // because serialization is used for different things.
WITHOUT_CLASSIFICATION	// updates ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// loading ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//final boolean forceCacheRefresh,
WITHOUT_CLASSIFICATION	//final boolean forceCacheRefresh,
WITHOUT_CLASSIFICATION	// first, try to load it from the temp PC associated to this SS
WITHOUT_CLASSIFICATION	// if the metadata allowed proxy creation and caller did not request forceful eager loading, // generate a proxy
WITHOUT_CLASSIFICATION	// otherwise immediately materialize it
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// no auto-flushing to support in stateless session
WITHOUT_CLASSIFICATION	//after setting values to object, entityMode
WITHOUT_CLASSIFICATION	//for EJB3
WITHOUT_CLASSIFICATION	// just ignore
WITHOUT_CLASSIFICATION	// do a check
WITHOUT_CLASSIFICATION	// saveOrUpdate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// update() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// lock() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// persist() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// persistOnFlush() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// merge() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// saveOrUpdateCopy() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// delete() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// load()/get() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// refresh() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// replicate() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// do not auto-flush while outside a transaction
WITHOUT_CLASSIFICATION	// this is an internal error of some sort...
WITHOUT_CLASSIFICATION	//stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	//only collections belonging to deleted entities are allowed to be dereferenced in the case of orphan delete
WITHOUT_CLASSIFICATION	// if it was previously unreferenced, we need to flush in order to // get its state into the database in order to execute query
WITHOUT_CLASSIFICATION	// not for internal use:
WITHOUT_CLASSIFICATION	// otherwise, we only need to flush if there are in-memory changes // to the queried tables
WITHOUT_CLASSIFICATION	// might need to run a different filter entirely after the flush // because the collection role may have changed
WITHOUT_CLASSIFICATION	//stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	//stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	//if it is initialized, see if the underlying //instance is contained, since we need to  //account for the fact that it might have been //evicted
WITHOUT_CLASSIFICATION	// basically just an adapted copy of find(CriteriaImpl)
WITHOUT_CLASSIFICATION	// it is possible for this method to be called during flush processing, // so make certain that we do not accidently initialize an uninitialized proxy
WITHOUT_CLASSIFICATION	// nothing to do in a stateful session
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore this error for now
WITHOUT_CLASSIFICATION	// we need to writeObject() on this since interceptor is user defined
WITHOUT_CLASSIFICATION	// the old-time stand-by...
WITHOUT_CLASSIFICATION	// parameter bind values...
WITHOUT_CLASSIFICATION	// Parameter handling code ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// prepend value and type list with null for any positions before the wanted position.
WITHOUT_CLASSIFICATION	// Execution methods ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// we have a CGLIB enhanced entity
WITHOUT_CLASSIFICATION	// we have a CGLIB enhanced entity
WITHOUT_CLASSIFICATION	// we have a Javassist enhanced entity
WITHOUT_CLASSIFICATION	// we have a Javassist enhanced entity
WITHOUT_CLASSIFICATION	// FieldInterceptor impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// subclass accesses ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//let's assume that there is only one lazy fetch group, for now!
WITHOUT_CLASSIFICATION	// FieldHandler impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// should *not* need to grow beyond the size of the total number of columns in the rs
WITHOUT_CLASSIFICATION	// should probably no-op commit/rollback here, at least in JTA scenarios
WITHOUT_CLASSIFICATION	// Base Expectation impls ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Various Expectation instances ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// explicitly perform no checking...
WITHOUT_CLASSIFICATION	// used from testsuite
WITHOUT_CLASSIFICATION	// assume we are in an auto-commit state
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	// register synch; stats.connect()
WITHOUT_CLASSIFICATION	//noncritical, swallow and let the other propagate!
WITHOUT_CLASSIFICATION	// calls executeBatch()
WITHOUT_CLASSIFICATION	//no big deal
WITHOUT_CLASSIFICATION	// no big deal
WITHOUT_CLASSIFICATION	// no big deal
WITHOUT_CLASSIFICATION	// sybase driver (jConnect) throwing NPE here in certain // cases, but we'll just handle the general "unexpected" case
WITHOUT_CLASSIFICATION	// see explanation above...
WITHOUT_CLASSIFICATION	// If we are in the process of releasing, no sense // checking for aggressive-release possibility.
WITHOUT_CLASSIFICATION	// EARLY EXIT!!!!
WITHOUT_CLASSIFICATION	// ResultSet impl ("overridden") ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// ResultSet impl (delegated) ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// refer to comment in StatefulPersistenceContext.addCollection()
WITHOUT_CLASSIFICATION	// ConnectionManager.Callback implementation ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Note : success = false, because we don't know the outcome of the transaction
WITHOUT_CLASSIFICATION	// we already have a callback registered; either a local // (org.hibernate.Transaction) transaction has accepted // callback responsibilities, or we have previously // registered a transaction synch.
WITHOUT_CLASSIFICATION	// the configured transaction-factory says it only supports // local callback mode, so no sense attempting to register a // JTA Synchronization
WITHOUT_CLASSIFICATION	// transactions marked for rollback-only cause some TM impls to throw exceptions
WITHOUT_CLASSIFICATION	// serialization ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//postInitialize() will be called after initialization
WITHOUT_CLASSIFICATION	// cannot handle single quotes
WITHOUT_CLASSIFICATION	// todo : for 4.0 //	private static final Logger log = LoggerFactory.getLogger( SQLStatementLogger.class ); // this is the legacy logging 'category'...
WITHOUT_CLASSIFICATION	// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"
WITHOUT_CLASSIFICATION	// don't even bother trying to read further
WITHOUT_CLASSIFICATION	// don't even bother trying to read any further
WITHOUT_CLASSIFICATION	// position cursor to the last row
WITHOUT_CLASSIFICATION	// sequentially read the result set in reverse until we recognize // a change in the key value.  At that point, we are pointed at // the last physical sequential row for the logical row in which // we are interested in processing
WITHOUT_CLASSIFICATION	// Read backwards until we read past the first physical sequential // row with the key we are interested in loading
WITHOUT_CLASSIFICATION	// Finally, read ahead one row to position result set cursor // at the first physical row we are interested in loading
WITHOUT_CLASSIFICATION	// now get an existing proxy for each row element (if there is one)
WITHOUT_CLASSIFICATION	// force the proxy to resolve itself
WITHOUT_CLASSIFICATION	// this is equivalent to the old behavior...
WITHOUT_CLASSIFICATION	//if null, owner will be retrieved from session
WITHOUT_CLASSIFICATION	//final String queryString, 
WITHOUT_CLASSIFICATION	// if it was a reference to self, don't need to nullify // unless we are using native id generation, in which // case we definitely need to nullify
WITHOUT_CLASSIFICATION	//end of array, start filling again from start
WITHOUT_CLASSIFICATION	// in an effort to avoid concurrent-modification-exceptions (from // potential recursive calls back through here as a result of the // eventual call to PersistentCollection#endRead), we scan the // internal loadingCollections map for matches and store those matches // in a temp collection.  the temp collection is then used to "drive" // the #endRead processing.
WITHOUT_CLASSIFICATION	//we can reuse it for each row
WITHOUT_CLASSIFICATION	//can't reuse in this case
WITHOUT_CLASSIFICATION	// First we need to suspend any current JTA transaction and obtain // a JDBC connection
WITHOUT_CLASSIFICATION	//getResultList(results);
WITHOUT_CLASSIFICATION	//if we only returned one entity, query by key is more efficient
WITHOUT_CLASSIFICATION	// a collection loaded in the current session // can not possibly be the collection belonging // to the entity passed to update()
WITHOUT_CLASSIFICATION	// handle empty collection
WITHOUT_CLASSIFICATION	// else no collection element, but also no owner
WITHOUT_CLASSIFICATION	//handle empty collections
WITHOUT_CLASSIFICATION	// else this is not a collection initializer (and empty collections will // be detected by looking for the owner's identifier in the result set)
WITHOUT_CLASSIFICATION	// validate() instances of Validatable
WITHOUT_CLASSIFICATION	// if we know there is exactly 1 row, we can skip. // it would be great if we could _always_ skip this; // it is a problem for <key-many-to-one>
WITHOUT_CLASSIFICATION	// remove all collections for the entity from the session-level cache
WITHOUT_CLASSIFICATION	//null version means the object is in the process of being loaded somewhere else in the ResultSet
WITHOUT_CLASSIFICATION	//problematic for <key-many-to-one>!
WITHOUT_CLASSIFICATION	//use the id passed in
WITHOUT_CLASSIFICATION	//do nothing
WITHOUT_CLASSIFICATION	// prefer re-generation of identity!
WITHOUT_CLASSIFICATION	//no point doing this if NONE was requested
WITHOUT_CLASSIFICATION	//If the object is already loaded, return the loaded one
WITHOUT_CLASSIFICATION	//its already loaded so don't need to hydrate it
WITHOUT_CLASSIFICATION	// cascade the refresh prior to refreshing this entity
WITHOUT_CLASSIFICATION	//the load() which takes an entity does not pass an entityName
WITHOUT_CLASSIFICATION	//we only check the version when _upgrading_ lock modes
WITHOUT_CLASSIFICATION	// look for a proxy
WITHOUT_CLASSIFICATION	//we need to upgrade the lock mode to the mode requested
WITHOUT_CLASSIFICATION	//its the given optional object
WITHOUT_CLASSIFICATION	// instantiate a new instance
WITHOUT_CLASSIFICATION	//need to hydrate it.
WITHOUT_CLASSIFICATION	// return a newly loaded object
WITHOUT_CLASSIFICATION	//will be ignored, using the existing Entry instead
WITHOUT_CLASSIFICATION	// key is an entity involved with the operation performed by the listener; // value can be either a copy of the entity or the entity itself
WITHOUT_CLASSIFICATION	//materialize associations (and initialize the object) later
WITHOUT_CLASSIFICATION	// Get the persister for the _subclass_
WITHOUT_CLASSIFICATION	// ok in normal Hibernate usage to delete a detached entity; JPA however // forbids it, thus this is a hook for HEM to affect this behavior
WITHOUT_CLASSIFICATION	// the entry will be removed after the flush, and will no longer // override the stale snapshot // This is now handled by removeEntity() in EntityDeleteAction //persistenceContext.removeDatabaseSnapshot(key);
WITHOUT_CLASSIFICATION	//addInitializedCollection(collection, persister, id);
WITHOUT_CLASSIFICATION	//EARLY EXIT!
WITHOUT_CLASSIFICATION	//EARLY EXIT!
WITHOUT_CLASSIFICATION	/*|| oj.getJoinable().consumesCollectionAlias() */
WITHOUT_CLASSIFICATION	// here we do not bother with the discriminator.
WITHOUT_CLASSIFICATION	// Code to handle subclasses of topClass
WITHOUT_CLASSIFICATION	//woops we got an instance of another class hierarchy branch
WITHOUT_CLASSIFICATION	// we can go straight to the first required row
WITHOUT_CLASSIFICATION	// we need to step through the rows one row at a time (slow)
WITHOUT_CLASSIFICATION	// synchronized to avoid multi-thread access issues; defined as method synch to avoid // potential deadlock issues due to nature of code.
WITHOUT_CLASSIFICATION	// Allows various loaders (ok mainly the QueryLoader :) to check // whether scrolling of their result set should be allowed. // // By default it is allowed.
WITHOUT_CLASSIFICATION	//before adding to collection!
WITHOUT_CLASSIFICATION	// if the current depth is 0, the root thing being loaded is the // many-to-many collection itself.  Here, it is alright to use // an inner join...
WITHOUT_CLASSIFICATION	//operations which cascade as far as the collection also cascade to collection elements
WITHOUT_CLASSIFICATION	// simple, because we can't have a one-to-one or a collection  // (or even a property-ref) in a composite-element:
WITHOUT_CLASSIFICATION	//a composite key
WITHOUT_CLASSIFICATION	// if no batch, use "foo = ? and bar = ?"
WITHOUT_CLASSIFICATION	//it must be a collection fetch
WITHOUT_CLASSIFICATION	// needed later for many-to-many/filter application
WITHOUT_CLASSIFICATION	/*&& etype.isReferenceToPrimaryKey()*/
WITHOUT_CLASSIFICATION	// it might still need to apply a collection ordering based on a // many-to-many defined order-by...
WITHOUT_CLASSIFICATION	// if a composite key, use "( (foo = ? and bar = ?) or (foo = ? and bar = ?) )" for batching //TODO: unnecessary for databases with ANSI-style joins
WITHOUT_CLASSIFICATION	// belong to other persister // belong to other persister
WITHOUT_CLASSIFICATION	// we found it
WITHOUT_CLASSIFICATION	//we can use an inner join for the many-to-many
WITHOUT_CLASSIFICATION	//disable a join back to this same association
WITHOUT_CLASSIFICATION	//NOTE: unlike all other Loaders, this one is NOT //      multithreaded, or cacheable!!
WITHOUT_CLASSIFICATION	//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases
WITHOUT_CLASSIFICATION	//root entity comes *last*
WITHOUT_CLASSIFICATION	//deliberately ignore return value!
WITHOUT_CLASSIFICATION	//alias may be null //EARLY EXIT
WITHOUT_CLASSIFICATION	// if it is a compound path
WITHOUT_CLASSIFICATION	// otherwise assume the parent is the the criteria that created us
WITHOUT_CLASSIFICATION	// if its the root criteria, we are done
WITHOUT_CLASSIFICATION	// otherwise, recurse
WITHOUT_CLASSIFICATION	//the criteria instance
WITHOUT_CLASSIFICATION	// the entity name
WITHOUT_CLASSIFICATION	//not found in inner query , try the outer query
WITHOUT_CLASSIFICATION	//not found in inner query , try the outer query
WITHOUT_CLASSIFICATION	//it refers to an alias of a projection
WITHOUT_CLASSIFICATION	//should never happen, i think
WITHOUT_CLASSIFICATION	// Detect discriminator values...
WITHOUT_CLASSIFICATION	// Convert the string value into the proper type.
WITHOUT_CLASSIFICATION	// and the qualifier is not the alias of this criteria //      -> check to see if we belong to some criteria other //          than the one that created us
WITHOUT_CLASSIFICATION	//it does not refer to an alias of a projection, //look for a property
WITHOUT_CLASSIFICATION	// Otherwise, this is an ordinary value.
WITHOUT_CLASSIFICATION	// Currently *not* cachable if autodiscover types is in effect (e.g. "select * ...")
WITHOUT_CLASSIFICATION	//	private final String[] sqlAliases; //	private final String[] sqlAliasSuffixes;
WITHOUT_CLASSIFICATION	// this is only needed (afaict) for ResultTransformer processing...
WITHOUT_CLASSIFICATION	// determine if the collection elements are entities...
WITHOUT_CLASSIFICATION	// build an array with indices equal to the total number // of actual returns in the result Hibernate will return // for this query (scalars + non-scalars)
WITHOUT_CLASSIFICATION	// replace {....} with corresponding column aliases
WITHOUT_CLASSIFICATION	// No additional open braces found in the string, append the // rest of the string in its entirty and quit this loop
WITHOUT_CLASSIFICATION	// apend everything up until the next encountered open brace
WITHOUT_CLASSIFICATION	// it is a simple table alias {foo}
WITHOUT_CLASSIFICATION	// passing through anything we do not know : to support jdbc escape sequences HB-898
WITHOUT_CLASSIFICATION	// passing through anything we do not know : to support jdbc escape sequences HB-898
WITHOUT_CLASSIFICATION	// The current alias is referencing the collection to be eagerly fetched
WITHOUT_CLASSIFICATION	// it is a property reference {foo.bar}
WITHOUT_CLASSIFICATION	// Possibly handle :something parameters for the query ?
WITHOUT_CLASSIFICATION	// Let return-propertys override whatever the persister has for aliases.
WITHOUT_CLASSIFICATION	//	private final List persisters = new ArrayList();
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	//NOTE: EARLY EXIT!
WITHOUT_CLASSIFICATION	//	private final List scalarTypes = new ArrayList(); //	private final List scalarColumnAliases = new ArrayList();
WITHOUT_CLASSIFICATION	// Now, process the returns
WITHOUT_CLASSIFICATION	//	private List collectionOwnerAliases = new ArrayList(); //	private List collectionAliases = new ArrayList(); //	private List collectionPersisters = new ArrayList(); //	private List collectionResults = new ArrayList();
WITHOUT_CLASSIFICATION	// already been processed...
WITHOUT_CLASSIFICATION	// already been processed...
WITHOUT_CLASSIFICATION	// Make sure the owner alias is known...
WITHOUT_CLASSIFICATION	// first, break down the returns into maps keyed by alias // so that role returns can be more easily resolved to their owners
WITHOUT_CLASSIFICATION	//		scalarColumnAliases.add( typeReturn.getColumnAlias() ); //		scalarTypes.add( typeReturn.getType() );
WITHOUT_CLASSIFICATION	// If this return's alias has not been processed yet, do so b4 further processing of this return
WITHOUT_CLASSIFICATION	//			collectionOwnerAliases.add( ownerAlias );
WITHOUT_CLASSIFICATION	// for merging of versioned entities, we consider the version having // been changed only when: // 1) the two version values are different; //      *AND* // 2) The target actually represents database state! // // This second condition is a special case which allows // an entity to be merged during the same transaction // (though during a seperate operation) in which it was // originally persisted/saved
WITHOUT_CLASSIFICATION	// this is the second pass through on a merge op, so here we limit the // replacement to associations types (value types were already replaced // during the first pass)
WITHOUT_CLASSIFICATION	//EARLY EXIT
WITHOUT_CLASSIFICATION	// cascade-save to collections AFTER the collection owner was saved
WITHOUT_CLASSIFICATION	// Initialize the error handling delegate.
WITHOUT_CLASSIFICATION	// Use the delegate.
WITHOUT_CLASSIFICATION	// currently only the Hibernate-supplied DbTimestampType is supported here
WITHOUT_CLASSIFICATION	// This is called when it's time to fully resolve a path expression.
WITHOUT_CLASSIFICATION	// make a new one
WITHOUT_CLASSIFICATION	// not so sure this is even valid subtree.  but if it was, it'd // represent two unrelated table references...
WITHOUT_CLASSIFICATION	// (NOT (GT a b) ) => (LE a b)
WITHOUT_CLASSIFICATION	//private Type[] sqlResultTypes;
WITHOUT_CLASSIFICATION	//include the discriminator and class-level where, but not filters
WITHOUT_CLASSIFICATION	//sqlResultTypes = selectClause.getSqlResultTypes();
WITHOUT_CLASSIFICATION	//by default
WITHOUT_CLASSIFICATION	// This is now handled earlier in this method.
WITHOUT_CLASSIFICATION	// -- Loader implementation --
WITHOUT_CLASSIFICATION	// -- Loader overrides --
WITHOUT_CLASSIFICATION	// (NOT (IS_NULL a b) ) => (IS_NOT_NULL a b)
WITHOUT_CLASSIFICATION	//NONE, because its the requested lock mode, not the actual! 
WITHOUT_CLASSIFICATION	// meant to handle dynamic instantiation queries...
WITHOUT_CLASSIFICATION	// --- Query translator methods ---
WITHOUT_CLASSIFICATION	// -- Implementation private methods --
WITHOUT_CLASSIFICATION	//deduplicate unique constraints sharing the same columns //this is needed by Hibernate Annotations since it creates automagically // unique constraints for the user
WITHOUT_CLASSIFICATION	// Try to find out the name of the primary key to create it as identity if the IdentityGenerator is used
WITHOUT_CLASSIFICATION	// to support dialects that have their own identity data type
WITHOUT_CLASSIFICATION	// Prepare the left hand side and get the data type.
WITHOUT_CLASSIFICATION	//used also for generation of FK names!
WITHOUT_CLASSIFICATION	//usually useless
WITHOUT_CLASSIFICATION	// added this caching as I noticed that getType() is being called multiple times...
WITHOUT_CLASSIFICATION	//do not add unique constraint on DB not supporting unique and nullable columns
WITHOUT_CLASSIFICATION	//for backward compatibility, disable this:
WITHOUT_CLASSIFICATION	//may be final //may be final //may be final
WITHOUT_CLASSIFICATION	//may be final
WITHOUT_CLASSIFICATION	// may be final
WITHOUT_CLASSIFICATION	// Custom SQL
WITHOUT_CLASSIFICATION	//Primary key constraint
WITHOUT_CLASSIFICATION	// the root of the incoming property path matched one // of the embedded composite identifier properties
WITHOUT_CLASSIFICATION	// ignore it...
WITHOUT_CLASSIFICATION	//flat recursive algorithm
WITHOUT_CLASSIFICATION	//an identifier mapper => getKey will be included in the getNonDuplicatedPropertyIterator() //and checked later, so it needs to be excluded
WITHOUT_CLASSIFICATION	//if the hibernate-mapping did not specify a schema/catalog, use the defaults //specified by properties - but note that if the schema/catalog were specified //in hibernate-mapping, or as params, they will already be initialized and //will override the values set here (they are in identifierGeneratorProperties)
WITHOUT_CLASSIFICATION	//pass the entity-name, if not a collection-id
WITHOUT_CLASSIFICATION	// Custom SQL
WITHOUT_CLASSIFICATION	//Primary key constraint
WITHOUT_CLASSIFICATION	//pass the column name (a generated id almost always has a single column)
WITHOUT_CLASSIFICATION	//needed to satisfy KeyValue
WITHOUT_CLASSIFICATION	// empty means no scoping
WITHOUT_CLASSIFICATION	// index should be last column listed
WITHOUT_CLASSIFICATION	//if it is a formula index, use the element columns in the PK
WITHOUT_CLASSIFICATION	// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns
WITHOUT_CLASSIFICATION	/*ArrayList list = new ArrayList();			list.addAll( getKey().getConstraintColumns() );			list.addAll( getIndex().getConstraintColumns() );			getCollectionTable().createUniqueKey(list);*/
WITHOUT_CLASSIFICATION	// }
WITHOUT_CLASSIFICATION	// no foreign key element of for a one-to-many
WITHOUT_CLASSIFICATION	//TODO: we could just return all false...
WITHOUT_CLASSIFICATION	// the case of a foreign key to something other than the pk is handled in createPropertyRefConstraints
WITHOUT_CLASSIFICATION	//TODO: we could just return all false...
WITHOUT_CLASSIFICATION	// if the property mapping consists of all formulas,  // make it non-updateable
WITHOUT_CLASSIFICATION	//columnUpdateability.length==0 ||
WITHOUT_CLASSIFICATION	// if the property mapping consists of all formulas,  // make it insertable
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// expected type is intrinsic here...
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	//}
WITHOUT_CLASSIFICATION	//return memberPersister.getPropertyType(propertyName);
WITHOUT_CLASSIFICATION	//return memberPersister.toColumns(alias, propertyName);
WITHOUT_CLASSIFICATION	//return memberPersister.getType();
WITHOUT_CLASSIFICATION	/*&& !indexIsFormula*/
WITHOUT_CLASSIFICATION	//		return !isOneToMany();
WITHOUT_CLASSIFICATION	//instanceof AssociationType;
WITHOUT_CLASSIFICATION	// we need to determine the best way to know that two joinables // represent a single many-to-many...
WITHOUT_CLASSIFICATION	//strip leading ','
WITHOUT_CLASSIFICATION	//public boolean isSubselectLoadable();
WITHOUT_CLASSIFICATION	// KEY
WITHOUT_CLASSIFICATION	//columns
WITHOUT_CLASSIFICATION	//SQL statements
WITHOUT_CLASSIFICATION	//extra information about the element type
WITHOUT_CLASSIFICATION	//types
WITHOUT_CLASSIFICATION	// custom sql
WITHOUT_CLASSIFICATION	//private final String unquotedIdentifierColumnName;
WITHOUT_CLASSIFICATION	// dynamic filters specifically for many-to-many inside the collection
WITHOUT_CLASSIFICATION	// dynamic filters for the collection
WITHOUT_CLASSIFICATION	// NativeSQL: collect key column and auto-aliases
WITHOUT_CLASSIFICATION	//unquotedKeyColumnNames = StringHelper.unQuote(keyColumnAliases);
WITHOUT_CLASSIFICATION	//ELEMENT
WITHOUT_CLASSIFICATION	// NativeSQL: collect element column and auto-aliases
WITHOUT_CLASSIFICATION	// INDEX AND ROW SELECT
WITHOUT_CLASSIFICATION	// NativeSQL: collect index column and auto-aliases
WITHOUT_CLASSIFICATION	//unquotedIdentifierColumnName = identifierColumnAlias;
WITHOUT_CLASSIFICATION	//unquotedIdentifierColumnName = null;
WITHOUT_CLASSIFICATION	//GENERATE THE SQL:
WITHOUT_CLASSIFICATION	// for non-arrays, we don't need to know the element class //elementType.returnedClass();
WITHOUT_CLASSIFICATION	//not all classpersisters implement PropertyMapping!
WITHOUT_CLASSIFICATION	// Handle any filters applied to this collection
WITHOUT_CLASSIFICATION	// Handle any filters applied to this collection for many-to-many
WITHOUT_CLASSIFICATION	//if there is a user-specified loader, return that //TODO: filters!?
WITHOUT_CLASSIFICATION	// Take care of any entities that might have // been evicted!	
WITHOUT_CLASSIFICATION	//strip leading ','
WITHOUT_CLASSIFICATION	// Run a subquery loader
WITHOUT_CLASSIFICATION	//needed by arrays
WITHOUT_CLASSIFICATION	//TODO: something with formulas...
WITHOUT_CLASSIFICATION	//an assertion
WITHOUT_CLASSIFICATION	// Remove all the old entries
WITHOUT_CLASSIFICATION	//create all the new entries
WITHOUT_CLASSIFICATION	/*&& !indexIsFormula*/
WITHOUT_CLASSIFICATION	/*&& !indexIsFormula*/
WITHOUT_CLASSIFICATION	//delete all the deleted entries
WITHOUT_CLASSIFICATION	//insert all the new entries
WITHOUT_CLASSIFICATION	//==elementType ??
WITHOUT_CLASSIFICATION	//update all the modified entries
WITHOUT_CLASSIFICATION	//identifier collections not supported for 1-to-many
WITHOUT_CLASSIFICATION	// update removed rows fks to null
WITHOUT_CLASSIFICATION	// will still be issued when it used to be null
WITHOUT_CLASSIFICATION	// now update all changed or added rows fks
WITHOUT_CLASSIFICATION	//			buf.append( selectFragment( lhsAlias, "" ) )//ignore suffix for collection columns!
WITHOUT_CLASSIFICATION	//use suffix for the entity columns
WITHOUT_CLASSIFICATION	// the class hierarchy structure
WITHOUT_CLASSIFICATION	//private final String rootTableName;
WITHOUT_CLASSIFICATION	//INITIALIZATION:
WITHOUT_CLASSIFICATION	//Custom SQL
WITHOUT_CLASSIFICATION	// the class hierarchy structure
WITHOUT_CLASSIFICATION	// Execute the SQL:
WITHOUT_CLASSIFICATION	// This could also just be true all the time...
WITHOUT_CLASSIFICATION	//chop the last union (all)
WITHOUT_CLASSIFICATION	//TODO: check this....
WITHOUT_CLASSIFICATION	//INITIALIZATION:
WITHOUT_CLASSIFICATION	// properties of this class, including inherited properties
WITHOUT_CLASSIFICATION	// the closure of all properties in the entire hierarchy including // subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	// subclass discrimination works by assigning particular // values to certain combinations of null primary key // values in the outer join using an SQL CASE
WITHOUT_CLASSIFICATION	//MULTITABLES
WITHOUT_CLASSIFICATION	// Custom sql
WITHOUT_CLASSIFICATION	// subclass closure properties
WITHOUT_CLASSIFICATION	// SUBCLASSES
WITHOUT_CLASSIFICATION	//( (Column) model.getTable().getPrimaryKey().getColumnIterator().next() ).getName();
WITHOUT_CLASSIFICATION	//( (Column) sc.getTable().getPrimaryKey().getColumnIterator().next() ).getName();
WITHOUT_CLASSIFICATION	// don't need subclass tables, because they can't appear in conditions
WITHOUT_CLASSIFICATION	// special case where we need to force incloude all subclass joins
WITHOUT_CLASSIFICATION	// the class hierarchy structure
WITHOUT_CLASSIFICATION	// properties of this class, including inherited properties
WITHOUT_CLASSIFICATION	// the closure of all columns used by the entire hierarchy including // subclasses and superclasses of this class
WITHOUT_CLASSIFICATION	//get em on the second pass!
WITHOUT_CLASSIFICATION	// now look up the object we are really interested in! // (this lets us correctly handle proxies and multi-row // or multi-column queries)
WITHOUT_CLASSIFICATION	// discriminator column
WITHOUT_CLASSIFICATION	//INITIALIZATION:
WITHOUT_CLASSIFICATION	//private final Map propertyTableNumbersByName = new HashMap();
WITHOUT_CLASSIFICATION	// CLASS + TABLE
WITHOUT_CLASSIFICATION	// DISCRIMINATOR
WITHOUT_CLASSIFICATION	// PROPERTIES
WITHOUT_CLASSIFICATION	// SUBCLASSES
WITHOUT_CLASSIFICATION	// Execute the SQL:
WITHOUT_CLASSIFICATION	// JOINS
WITHOUT_CLASSIFICATION	//propertyTableNumbersByName.put( prop.getName(), join );
WITHOUT_CLASSIFICATION	//Access cached SQL
WITHOUT_CLASSIFICATION	//figure out which tables need to be fetched
WITHOUT_CLASSIFICATION	//figure out which columns are needed
WITHOUT_CLASSIFICATION	//figure out which formulas are needed
WITHOUT_CLASSIFICATION	//render the SQL
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is Tuplizer-centric ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// The optional SQL string defined in the where attribute
WITHOUT_CLASSIFICATION	//information about lazy properties of this class
WITHOUT_CLASSIFICATION	//information about all properties in class hierarchy
WITHOUT_CLASSIFICATION	//information about all columns/formulas in class hierarchy
WITHOUT_CLASSIFICATION	// dynamic filters attached to the class-level
WITHOUT_CLASSIFICATION	// SQL strings
WITHOUT_CLASSIFICATION	// for objects that came in via update()
WITHOUT_CLASSIFICATION	// PROPERTIES
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// IDENTIFIER
WITHOUT_CLASSIFICATION	// VERSION
WITHOUT_CLASSIFICATION	//WHERE STRING
WITHOUT_CLASSIFICATION	// SUBCLASS PROPERTY CLOSURE
WITHOUT_CLASSIFICATION	//before add :-)
WITHOUT_CLASSIFICATION	// Handle any filters applied to the class level
WITHOUT_CLASSIFICATION	// only one-to-one is lazy fetched
WITHOUT_CLASSIFICATION	//note early exit here:
WITHOUT_CLASSIFICATION	// object have been loaded with setReadOnly(true); HHH-2236
WITHOUT_CLASSIFICATION	// NOTE: this assumes something about how propertySelectFragment is implemented by the subclass!
WITHOUT_CLASSIFICATION	//strip leading ", "
WITHOUT_CLASSIFICATION	//if there is no resulting row, return null
WITHOUT_CLASSIFICATION	//otherwise return the "hydrated" state (ie. associations are not resolved)
WITHOUT_CLASSIFICATION	//null owner ok??
WITHOUT_CLASSIFICATION	// null sql means that the only lazy properties // are shared PK one-to-one associations which are // handled differently in the Type#nullSafeGet code...
WITHOUT_CLASSIFICATION	// Create a new FROM node for the referenced class.
WITHOUT_CLASSIFICATION	// the difficulty here is exactly what do we update in order to // force the version to be incremented in the db...
WITHOUT_CLASSIFICATION	// performance op to avoid the array search
WITHOUT_CLASSIFICATION	// properly handle property-ref-based associations
WITHOUT_CLASSIFICATION	//Enable for HHH-440, which we don't like:
WITHOUT_CLASSIFICATION	// ALIASES
WITHOUT_CLASSIFICATION	// aliases named identifier ( alias.idname )
WITHOUT_CLASSIFICATION	// aliases for composite-id's
WITHOUT_CLASSIFICATION	// Fetch embedded identifiers propertynames from the "virtual" identifier component
WITHOUT_CLASSIFICATION	// embedded composite ids ( alias.idname1, alias.idname2 )
WITHOUT_CLASSIFICATION	// TODO: skip formulas?
WITHOUT_CLASSIFICATION	//don't need filters for the static loaders
WITHOUT_CLASSIFICATION	//do two passes, for collection property-ref!
WITHOUT_CLASSIFICATION	// select the correct row by either pk or rowid
WITHOUT_CLASSIFICATION	//TODO: eventually, rowIdName[j]
WITHOUT_CLASSIFICATION	// this is a property of the table, which we are updating
WITHOUT_CLASSIFICATION	// special shortcut for id properties, skip the join! // this must only occur at the _end_ of a path expression
WITHOUT_CLASSIFICATION	// we are using "all" or "dirty" property-based optimistic locking
WITHOUT_CLASSIFICATION	// nothing to do; even if the operand is a parameter, no way we could // infer an appropriate expected type here
WITHOUT_CLASSIFICATION	// this property belongs on the table and is to be inserted
WITHOUT_CLASSIFICATION	// add normal properties
WITHOUT_CLASSIFICATION	// add the discriminator
WITHOUT_CLASSIFICATION	// more specifically : "? [op] datetime" //      1) if the operator is MINUS, the param needs to be of //          some datetime type //      2) if the operator is PLUS, the param needs to be of //          some numeric type
WITHOUT_CLASSIFICATION	// add normal properties
WITHOUT_CLASSIFICATION	// this property belongs on the table and is to be inserted
WITHOUT_CLASSIFICATION	// add the discriminator
WITHOUT_CLASSIFICATION	// add the primary key
WITHOUT_CLASSIFICATION	// delegate already handles PK columns
WITHOUT_CLASSIFICATION	// we can't batch joined inserts, *especially* not if it is an identity insert; // nor can we batch statements where the expectation is based on an output param
WITHOUT_CLASSIFICATION	// Render the SQL query
WITHOUT_CLASSIFICATION	// Write the values of fields onto the prepared statement - we MUST use the state at the time the // insert was issued (cos of foreign key constraints). Not necessarily the object's current state
WITHOUT_CLASSIFICATION	// TODO : shouldnt inserts be Expectations.NONE?
WITHOUT_CLASSIFICATION	//don't bother trying to update, we know there is no row there yet
WITHOUT_CLASSIFICATION	//if all fields are null, we might need to delete existing row
WITHOUT_CLASSIFICATION	//there is probably a row there, so try to update //if no rows were updated, we will find out
WITHOUT_CLASSIFICATION	//note: updates to joined tables can't be batched...
WITHOUT_CLASSIFICATION	// starting index
WITHOUT_CLASSIFICATION	//Now write the values of fields onto the prepared statement
WITHOUT_CLASSIFICATION	// Write any appropriate versioning conditional parameters
WITHOUT_CLASSIFICATION	//Render the SQL query
WITHOUT_CLASSIFICATION	// Do the key. The key is immutable so we can use the _current_ object state - not necessarily // the state at the time the delete was issued
WITHOUT_CLASSIFICATION	// We should use the _current_ object state (ie. after any updates that occurred during flush)
WITHOUT_CLASSIFICATION	// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	//note: dirtyFields==null means we had no snapshot, and we couldn't get one using select-before-update //	  oldFields==null just means we had no snapshot to begin with (we might have used select-before-update to get the dirtyFields)
WITHOUT_CLASSIFICATION	// more specifically : "datetime [op] ?" //      1) if the operator is MINUS, we really cannot determine //          the expected type as either another datetime or //          numeric would be valid //      2) if the operator is PLUS, the param needs to be of //          some numeric type
WITHOUT_CLASSIFICATION	// For the case of dynamic-update="true", we need to generate the UPDATE SQL
WITHOUT_CLASSIFICATION	// don't need to check laziness (dirty checking algorithm handles that)
WITHOUT_CLASSIFICATION	// For the case of dynamic-update="false", or no snapshot, we use the static SQL
WITHOUT_CLASSIFICATION	// if not "get", then try "is"
WITHOUT_CLASSIFICATION	// Now update only the tables with dirty properties (and the table with the version number)
WITHOUT_CLASSIFICATION	// For the case of dynamic-insert="true", we need to generate the INSERT SQL
WITHOUT_CLASSIFICATION	// For the case of dynamic-insert="true", we need to generate the INSERT SQL
WITHOUT_CLASSIFICATION	// For the case of dynamic-insert="false", use the static SQL
WITHOUT_CLASSIFICATION	// For the case of dynamic-insert="false", use the static SQL
WITHOUT_CLASSIFICATION	// not supported
WITHOUT_CLASSIFICATION	// this property belongs to the table and it is not specifically // excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	// we need to utilize dynamic delete statements
WITHOUT_CLASSIFICATION	// otherwise, utilize the static delete statements
WITHOUT_CLASSIFICATION	//just a performance opt!
WITHOUT_CLASSIFICATION	//just a performance opt!
WITHOUT_CLASSIFICATION	//all joins join to the pk of the driving table
WITHOUT_CLASSIFICATION	//notice that we skip the first table; it is the driving table!
WITHOUT_CLASSIFICATION	//we can inner join to superclass tables (the row MUST be there) //we can never inner join to subclass tables
WITHOUT_CLASSIFICATION	//skip the driving table
WITHOUT_CLASSIFICATION	//get 'em in the right order (not that it really matters)
WITHOUT_CLASSIFICATION	// here, we work under the following assumptions: //      ------------ valid cases -------------------------------------- //      1) datetime + {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      2) datetime - datetime : always results in a DOUBLE //      3) datetime - {something other than datetime} : always results //              in a datetime ( db will catch invalid conversions ) //      ------------ invalid cases ------------------------------------ //      4) datetime + datetime //      5) {something other than datetime} - datetime //      6) datetime * {any type} //      7) datetime / {any type} //      8) {any type} / datetime // doing so allows us to properly handle parameters as either the left // or right side here in the majority of cases
WITHOUT_CLASSIFICATION	//render the where and from parts
WITHOUT_CLASSIFICATION	//we *could* regerate this inside each called method!
WITHOUT_CLASSIFICATION	//now render the joins
WITHOUT_CLASSIFICATION	// This will add the new from element to the origin.
WITHOUT_CLASSIFICATION	//now render the select clause
WITHOUT_CLASSIFICATION	//now tie it all together
WITHOUT_CLASSIFICATION	//insert/update/delete SQL
WITHOUT_CLASSIFICATION	//select SQL
WITHOUT_CLASSIFICATION	//no need to check laziness, dirty checking handles that
WITHOUT_CLASSIFICATION	// Fully resolve the map reference, create implicit joins.
WITHOUT_CLASSIFICATION	// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// The basic implementation is to simply use the node's text
WITHOUT_CLASSIFICATION	// for dialects which are known to not support ANSI-SQL row-value-constructor syntax, // we should mutate the tree.
WITHOUT_CLASSIFICATION	// Due to the complexity in initializing the SelectClause, do not generate one here. // If it is not found; simply return null... // // Also, do not cache since it gets generated well after we are created.
WITHOUT_CLASSIFICATION	// check the version unsaved-value, if appropriate
WITHOUT_CLASSIFICATION	// let this take precedence if defined, since it works for // assigned identifiers
WITHOUT_CLASSIFICATION	// check the id unsaved-value
WITHOUT_CLASSIFICATION	// check to see if it is in the second-level cache
WITHOUT_CLASSIFICATION	///////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// For property references generate <tablealias>.<columnname> as <projectionalias>
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//if there is no resulting row, return null
WITHOUT_CLASSIFICATION	//force immediate execution of the insert
WITHOUT_CLASSIFICATION	// If this from element is a collection and the path is a collection property (maxIndex, etc.) then // generate a sub-query.
WITHOUT_CLASSIFICATION	// entities ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// collections ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//cannot occur
WITHOUT_CLASSIFICATION	//cannot occur
WITHOUT_CLASSIFICATION	// only carry on if the method has no parameters
WITHOUT_CLASSIFICATION	// try "get"
WITHOUT_CLASSIFICATION	// do nothing...
WITHOUT_CLASSIFICATION	// do nothing...
WITHOUT_CLASSIFICATION	// should be safe to only ever expect EntityPersister references here
WITHOUT_CLASSIFICATION	// this page intentionally left blank :)
WITHOUT_CLASSIFICATION	// do not do anything
WITHOUT_CLASSIFICATION	//
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	//cant instantiate
WITHOUT_CLASSIFICATION	//if it is a property of an embedded component, invoke on the "identifier"
WITHOUT_CLASSIFICATION	// otherwise:
WITHOUT_CLASSIFICATION	// skip finalize methods
WITHOUT_CLASSIFICATION	// note: interfaces is assumed to already contain HibernateProxy.class
WITHOUT_CLASSIFICATION	// note: interfaces is assumed to already contain HibernateProxy.class
WITHOUT_CLASSIFICATION	// HHH-2481 make sure the callback gets cleared, otherwise the instance stays in a static thread local.
WITHOUT_CLASSIFICATION	// while constructor is running
WITHOUT_CLASSIFICATION	// while constructor is running
WITHOUT_CLASSIFICATION	// note: interface is assumed to already contain HibernateProxy.class
WITHOUT_CLASSIFICATION	// interfaces // arguments
WITHOUT_CLASSIFICATION	//TODO!
WITHOUT_CLASSIFICATION	// Get the caller
WITHOUT_CLASSIFICATION	// Get the caller principals
WITHOUT_CLASSIFICATION	//private static final Alias DEFAULT_ALIAS = new Alias(10, null);
WITHOUT_CLASSIFICATION	// Needed to bump this up to DotNode, because that is the only thing which currently // knows about the property-ref path in the correct format; it is either this, or // recurse over the DotNodes constructing the property path just like DotNode does // internally
WITHOUT_CLASSIFICATION	//if the identifier is quoted, remove the quotes
WITHOUT_CLASSIFICATION	//truncate the identifier to the max alias length, less the suffix length
WITHOUT_CLASSIFICATION	//full joins are not supported.. yet!
WITHOUT_CLASSIFICATION	// null is not considered the same type as Integer. //$NON-NLS-1 //$NON-NLS-1
WITHOUT_CLASSIFICATION	// the outerJoinsAfterWhere needs to come before where clause to properly // handle dynamic filters
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	//$NON-NLS-1
WITHOUT_CLASSIFICATION	// strip off any leading 'and' token
WITHOUT_CLASSIFICATION	// if the condition is not already there...
WITHOUT_CLASSIFICATION	//dontSpace.add("'");
WITHOUT_CLASSIFICATION	//for MySQL
WITHOUT_CLASSIFICATION	//HashMap columnsUnique = new HashMap();
WITHOUT_CLASSIFICATION	//null caused some problems
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	//not sure if this would ever be null but wanted to be careful
WITHOUT_CLASSIFICATION	//even on inverse="true"
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	// If true then execute db updates, otherwise just generate and display updates
WITHOUT_CLASSIFICATION	// we only release the connection
WITHOUT_CLASSIFICATION	// deprecated option...
WITHOUT_CLASSIFICATION	//if an exception occurs during flush, user must call rollback()
WITHOUT_CLASSIFICATION	//actually, this last test is probably unnecessary, since  //beforeCompletion() doesn't get called during rollback
WITHOUT_CLASSIFICATION	// this one only really needed for badly-behaved applications! // (if the TransactionManager has a Sychronization registered, // its a noop) // (actually we do need it for downgrading locks)
WITHOUT_CLASSIFICATION	// Create an DotNode AST for the path and resolve it.
WITHOUT_CLASSIFICATION	//if an exception occurs during flush, user must call rollback()
WITHOUT_CLASSIFICATION	//if we could not register a synchronization, //do the before/after completion callbacks //ourself (but we need to let jdbcContext //know that this is what we are going to //do, so it doesn't keep trying to register //synchronizations)
WITHOUT_CLASSIFICATION	// swallow it, and continue to roll back JTA transaction
WITHOUT_CLASSIFICATION	// so the transaction is already rolled back, by JTA spec
WITHOUT_CLASSIFICATION	// this method is a noop if there is a Synchronization!
WITHOUT_CLASSIFICATION	// two conditions where we need to transform this to a theta-join syntax: //      1) 'elem' is the "root from-element" in correlated subqueries //      2) The DotNode.useThetaStyleImplicitJoins has been set to true //          and 'elem' represents an implicit join
WITHOUT_CLASSIFICATION	// WebSphere, however, is not a sane JEE/JTA container...
WITHOUT_CLASSIFICATION	// for sane JEE/JTA containers, the transaction itself functions as its identifier...
WITHOUT_CLASSIFICATION	//swallow, the transaction was finished
WITHOUT_CLASSIFICATION	// all AliasToEntityMapResultTransformer are considered equal ~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// Create the join element under the from element.
WITHOUT_CLASSIFICATION	// all DistinctRootEntityResultTransformer are considered equal ~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// map of EntityMode -> Tuplizer
WITHOUT_CLASSIFICATION	// this is a virtual id property...
WITHOUT_CLASSIFICATION	//this one needed only for guessEntityMode()
WITHOUT_CLASSIFICATION	// create our own copy of the user-supplied tuplizer impl map
WITHOUT_CLASSIFICATION	// todo : move this to SF per HHH-3517; also see HHH-1907 and ComponentMetamodel
WITHOUT_CLASSIFICATION	// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available
WITHOUT_CLASSIFICATION	// Build the dynamic-map tuplizer...
WITHOUT_CLASSIFICATION	// then dom4j tuplizer, if dom4j representation is available
WITHOUT_CLASSIFICATION	// Build the dynamic-map tuplizer...
WITHOUT_CLASSIFICATION	// put the "standard" tuplizers into the tuplizer map first
WITHOUT_CLASSIFICATION	// found a ctor, but it was not publicly accessible so try to request accessibility
WITHOUT_CLASSIFICATION	//	private final SessionFactoryImplementor sessionFactory;
WITHOUT_CLASSIFICATION	// cached for efficiency...
WITHOUT_CLASSIFICATION	//	public ComponentMetamodel(Component component, SessionFactoryImplementor sessionFactory) {
WITHOUT_CLASSIFICATION	//		this.sessionFactory = sessionFactory;
WITHOUT_CLASSIFICATION	//it was not embedded, so the argument is just an id
WITHOUT_CLASSIFICATION	// then the pojo tuplizer, using the dynamic-map tuplizer if no pojo representation is available
WITHOUT_CLASSIFICATION	// then dom4j tuplizer, if dom4j representation is available
WITHOUT_CLASSIFICATION	// put the "standard" tuplizers into the tuplizer map first
WITHOUT_CLASSIFICATION	// then handle any user-defined entity modes...
WITHOUT_CLASSIFICATION	//return currentId;
WITHOUT_CLASSIFICATION	//reset the id
WITHOUT_CLASSIFICATION	//		origin.addDestination( destination ); // This was the cause of HHH-242 //		origin.setType( FROM_FRAGMENT );			// Set the parent node type so that the AST is properly formed. // The destination node will have all the FROM text. // The parent node is a collection join too (voodoo - see JoinProcessor)
WITHOUT_CLASSIFICATION	//reset the version
WITHOUT_CLASSIFICATION	// the default is to simply not lazy fetch properties for now...
WITHOUT_CLASSIFICATION	// Add the second join, the one that ends in the destination table.
WITHOUT_CLASSIFICATION	// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// found a ctor, but it was not publicly accessible so try to request accessibility
WITHOUT_CLASSIFICATION	// determine the id getter and setter methods from the proxy interface (if any) // determine all interfaces needed by the resulting proxy
WITHOUT_CLASSIFICATION	//		return getFactory().getSettings().getBytecodeProvider().getProxyFactoryFactory().buildProxyFactory();
WITHOUT_CLASSIFICATION	//not final because proxy factory creation can fail
WITHOUT_CLASSIFICATION	// superclass entity-name
WITHOUT_CLASSIFICATION	// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//init the aliases, after initing the constructornode
WITHOUT_CLASSIFICATION	// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// legacy behavior (with no abstract attribute specified)
WITHOUT_CLASSIFICATION	// Get ready to start adding nodes.
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//note: this affects the return value!
WITHOUT_CLASSIFICATION	// Need to account for allowable '_' within the variant
WITHOUT_CLASSIFICATION	// Add the type to the list of returned sqlResultTypes.
WITHOUT_CLASSIFICATION	// Collection Types:
WITHOUT_CLASSIFICATION	// convenience methods relating to operations across arrays of types...
WITHOUT_CLASSIFICATION	//lobs cannot be compared
WITHOUT_CLASSIFICATION	//Blobs are ignored by merge()
WITHOUT_CLASSIFICATION	//value is the entity name
WITHOUT_CLASSIFICATION	//EARLY EXIT!
WITHOUT_CLASSIFICATION	// generate id select fragment and then property select fragment for // each expression, just like generateSelectFragments().
WITHOUT_CLASSIFICATION	//TODO!
WITHOUT_CLASSIFICATION	//xml is the entity name
WITHOUT_CLASSIFICATION	//special case ... this is the leaf of the containment graph, even though not immutable
WITHOUT_CLASSIFICATION	//tolerates nulls
WITHOUT_CLASSIFICATION	/*sqlResultTypeList,*/
WITHOUT_CLASSIFICATION	// metaType is assumed to be single-column type
WITHOUT_CLASSIFICATION	// Get all the select expressions (that we just generated) and render the select.
WITHOUT_CLASSIFICATION	// Look through the FromElement's children to find any collections of values that should be fetched...
WITHOUT_CLASSIFICATION	//return AssociationType.FOREIGN_KEY_TO_PARENT; //this is better but causes a transient object exception...
WITHOUT_CLASSIFICATION	// Use the lower case function name. // Remember whether we're in a SELECT clause or not.
WITHOUT_CLASSIFICATION	// IDENT might be the name of a class.
WITHOUT_CLASSIFICATION	//TODO!!!
WITHOUT_CLASSIFICATION	//st.setTimestamp( index,  new Timestamp( cal.getTimeInMillis() ), cal ); //JDK 1.5 only
WITHOUT_CLASSIFICATION	//st.setDate( index,  new Date( cal.getTimeInMillis() ), cal ); //JDK 1.5 only
WITHOUT_CLASSIFICATION	// both are Timestamps
WITHOUT_CLASSIFICATION	// at least one is a plain old Date
WITHOUT_CLASSIFICATION	//noop
WITHOUT_CLASSIFICATION	// if the corresponding SQL value is NULL, the reader we got is NULL as well
WITHOUT_CLASSIFICATION	// Fetch Reader content up to the end - and put characters in a StringBuffer
WITHOUT_CLASSIFICATION	// Return StringBuffer content as a large String
WITHOUT_CLASSIFICATION	//or Types.LONGVARCHAR?
WITHOUT_CLASSIFICATION	//Not called at runtime so doesn't matter if its slow :)
WITHOUT_CLASSIFICATION	//TODO
WITHOUT_CLASSIFICATION	// Chop off the rest of the tree.
WITHOUT_CLASSIFICATION	//different nullability rules for pk/fk
WITHOUT_CLASSIFICATION	//cache this
WITHOUT_CLASSIFICATION	//only really need new array during semiresolve!
WITHOUT_CLASSIFICATION	// Forcefully remove leading ands from where fragments; the grammar will // handle adding them
WITHOUT_CLASSIFICATION	//TODO!!!!!!!
WITHOUT_CLASSIFICATION	// Create a new FILTERS node as a parent of all filters
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//public Object instantiate(Object parent, SessionImplementor session) throws HibernateException;
WITHOUT_CLASSIFICATION	//nothing to do
WITHOUT_CLASSIFICATION	//nothing to do
WITHOUT_CLASSIFICATION	// VersionType impl ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ //      Note : simply returns null for seed() and next() as the only known //      application of binary types for versioning is for use with the //      TIMESTAMP datatype supported by Sybase and SQL Server, which //      are completely db-generated values...
WITHOUT_CLASSIFICATION	//lobs cannot be compared
WITHOUT_CLASSIFICATION	//not really necessary, I guess...
WITHOUT_CLASSIFICATION	//Clobs are ignored by merge() operation
WITHOUT_CLASSIFICATION	// we do not have to worry about queued additions to uninitialized // collections, since they can only occur for inverse collections!
WITHOUT_CLASSIFICATION	// collections cannot be compared
WITHOUT_CLASSIFICATION	//remember the uk value
WITHOUT_CLASSIFICATION	//NOOP
WITHOUT_CLASSIFICATION	//processCollectionProperty(token, q.getCollectionPersister(collectionRole), collectionName);
WITHOUT_CLASSIFICATION	//we must use the "remembered" uk value, since it is  //not available from the EntityEntry during assembly
WITHOUT_CLASSIFICATION	// collections don't dirty an unversioned parent entity
WITHOUT_CLASSIFICATION	// return false;
WITHOUT_CLASSIFICATION	// This just handles a particular case of component // projection, perhaps get rid of it and throw an exception
WITHOUT_CLASSIFICATION	//NOTE: we avoid joining to the next table if the named property is just the foreign key value
WITHOUT_CLASSIFICATION	// the key is the owning entity itself, so get the ID from the key
WITHOUT_CLASSIFICATION	// if the original is a PersistentCollection, and that original // was not flagged as dirty, then reset the target's dirty flag // here after the copy operation. // </p> // One thing to be careful of here is a "bare" original collection // in which case we should never ever ever reset the dirty flag // on the target because we simply do not know...
WITHOUT_CLASSIFICATION	//ignore subselect keywords
WITHOUT_CLASSIFICATION	// copy elements into newly empty target collection
WITHOUT_CLASSIFICATION	// for a null target, or a target which is the same as the original, we // need to put the merged elements in a new collection
WITHOUT_CLASSIFICATION	// by default just use an unanticipated capacity since we don't // know how to extract the capacity to use from original here...
WITHOUT_CLASSIFICATION	// get the elements back into the target making sure to handle dirty flag
WITHOUT_CLASSIFICATION	// check if collection is currently being loaded
WITHOUT_CLASSIFICATION	// check if it is already completely loaded, but unowned
WITHOUT_CLASSIFICATION	// cache the actual id of the object, not the value of the // property-ref, which might not be initialized
WITHOUT_CLASSIFICATION	//TODO!!!!!!!
WITHOUT_CLASSIFICATION	// create a new collection wrapper, to be initialized later
WITHOUT_CLASSIFICATION	// Some JDBC drivers erroneously return an empty array here for a null DB value :/
WITHOUT_CLASSIFICATION	// our column span is the number of columns in the PK
WITHOUT_CLASSIFICATION	//cannot batch fetch by unique key (property-ref associations)
WITHOUT_CLASSIFICATION	// we already know current is not null...
WITHOUT_CLASSIFICATION	// the ids are fully resolved, so compare them with isDirty(), not isModified()
WITHOUT_CLASSIFICATION	//the owner of the association is not the owner of the id
WITHOUT_CLASSIFICATION	// ----------------------------------------------------------- Constructors
WITHOUT_CLASSIFICATION	// ----------------------------------------------------- Instance Variables
WITHOUT_CLASSIFICATION	//	public static JDBCException newJDBCException(String string, SQLException root, String sql) { //		string = string + " [" + sql + ']'; //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root, sql); //	} // //	public static JDBCException newJDBCException(String string, SQLException root) { //		log.error(string, root); //		logExceptions(root); //		return new JDBCException(string, root); //	}
WITHOUT_CLASSIFICATION	// --------------------------------------------------------- Public Methods
WITHOUT_CLASSIFICATION	// Compare the two maps for equality
WITHOUT_CLASSIFICATION	// Simple tests that require no synchronization
WITHOUT_CLASSIFICATION	//Sybase fail if we don't do that, sigh...
WITHOUT_CLASSIFICATION	// Handles things like: // a and b or c // a and ( b or c ) // not a and not b // not ( a and b ) // x between y and z            (overloaded "and") // x in ( a, b, c )             (overloaded brackets) // not not a // a is not null                (overloaded "not") // etc...... // and expressions like // foo = bar                    (maps to: foo.id = bar.id) // foo.Bar = 'foo'              (maps to: foo.bar = 'foo') // foo.Bar.Baz = 1.0            (maps to: foo.bar = bar.id and bar.baz = 1.0) // 1.0 = foo.Bar.Baz            (maps to: bar.baz = 1.0 and foo.Bar = bar.id) // foo.Bar.Baz = a.B.C          (maps to: bar.Baz = b.C and foo.Bar = bar.id and a.B = b.id) // foo.Bar.Baz + a.B.C          (maps to: bar.Baz + b.C and foo.Bar = bar.id and a.B = b.id) // ( foo.Bar.Baz + 1.0 ) < 2.0  (maps to: ( bar.Baz + 1.0 ) < 2.0 and foo.Bar = bar.id)
WITHOUT_CLASSIFICATION	// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders
WITHOUT_CLASSIFICATION	// release the jdk internal caches everytime to ensure this // plays nicely with destroyable class-loaders
WITHOUT_CLASSIFICATION	// try to "pretty print" it
WITHOUT_CLASSIFICATION	// otherwise, just dump it
WITHOUT_CLASSIFICATION	//its an interface so we can't really tell anything...
WITHOUT_CLASSIFICATION	//its an interface so we can't really tell anything...
WITHOUT_CLASSIFICATION	// use default behavior
WITHOUT_CLASSIFICATION	//NOTE: early return
WITHOUT_CLASSIFICATION	// the MRU cache used to keep hard references to the most recently used query plans; // note : LRU here is a bit of a misnomer, it indicates that LRU entries are removed, the // actual kept entries are the MRU entries
WITHOUT_CLASSIFICATION	// we want to be able to just use the defaults, // if JNDI environment properties are not supplied // so don't put null in anywhere
WITHOUT_CLASSIFICATION	// Clone //-----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// Serialize //-----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	// stream closed in the finally
WITHOUT_CLASSIFICATION	// stream closed in the finally
WITHOUT_CLASSIFICATION	// Deserialize //-----------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/* static methods only - hide constructor */
WITHOUT_CLASSIFICATION	/*&& !('_'==character)*/
WITHOUT_CLASSIFICATION	// returnign null!
WITHOUT_CLASSIFICATION	// returnign null!
WITHOUT_CLASSIFICATION	// includes last '.'
WITHOUT_CLASSIFICATION	// +1 to include the following '.'
WITHOUT_CLASSIFICATION	// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...
WITHOUT_CLASSIFICATION	// first time we find match!
WITHOUT_CLASSIFICATION	// entityNames may now include slashes for the representations //classname may be an inner class
WITHOUT_CLASSIFICATION	// wrapped iterators
WITHOUT_CLASSIFICATION	// index of current iterator in the wrapped iterators array
WITHOUT_CLASSIFICATION	// the current iterator
WITHOUT_CLASSIFICATION	// the last used iterator
WITHOUT_CLASSIFICATION	//it was a boolean expression
WITHOUT_CLASSIFICATION	/*public static Object[] clone(Class elementClass, Object[] array) {		Object[] result = (Object[]) Array.newInstance( elementClass, array.length );		System.arraycopy(array, 0, result, 0, array.length);		return result;	}*/
WITHOUT_CLASSIFICATION	// call this before any Iterator method to make sure that the current Iterator // is not exhausted
WITHOUT_CLASSIFICATION	//doable if needed
WITHOUT_CLASSIFICATION	// set last used iterator here, in case the user calls remove // before calling hasNext() or next() (although they shouldn't)
WITHOUT_CLASSIFICATION	// peek ahead
WITHOUT_CLASSIFICATION	// if we reach the end of the string w/o finding the // matching end, that is an exception
WITHOUT_CLASSIFICATION	// we have a placeholder, spin forward till we find the end
WITHOUT_CLASSIFICATION	// make sure spinning forward did not put us past the end of the buffer...
WITHOUT_CLASSIFICATION	// First, try to locate this resource through the current // context classloader.
WITHOUT_CLASSIFICATION	// Next, try to locate this resource through this class's classloader
WITHOUT_CLASSIFICATION	// Next, try to locate this resource through the system classloader
WITHOUT_CLASSIFICATION	// Anywhere else we should look?
WITHOUT_CLASSIFICATION	// would need an IdentitySet for this!
WITHOUT_CLASSIFICATION	//Arrays.asList doesn't do primitive arrays
WITHOUT_CLASSIFICATION	//faster?
WITHOUT_CLASSIFICATION	// the name of a class
WITHOUT_CLASSIFICATION	// Its the listener class name
WITHOUT_CLASSIFICATION	//allow 9,8,7,6,5,4,3,2,1
WITHOUT_CLASSIFICATION	// default to element set if no elements() specified
WITHOUT_CLASSIFICATION	// look for the instance by uuid
WITHOUT_CLASSIFICATION	// in case we were deserialized in a different JVM, look for an instance with the same name // (alternatively we could do an actual JNDI lookup here....)
WITHOUT_CLASSIFICATION	// first, lets determine whether to apply cglib or javassist based instrumentation...
WITHOUT_CLASSIFICATION	// Make sure we don't override previous set values
WITHOUT_CLASSIFICATION	//entirely optional!!
WITHOUT_CLASSIFICATION	// Its the listener instance (or better be)
WITHOUT_CLASSIFICATION	//context.unbind(boundName);
WITHOUT_CLASSIFICATION	//readResolveObject
WITHOUT_CLASSIFICATION	//cfg.setProperty("hibernate.show_sql", "true");
WITHOUT_CLASSIFICATION	// Defensive, convenience methods
WITHOUT_CLASSIFICATION	// Create the SessionFactory from hibernate.cfg.xml
WITHOUT_CLASSIFICATION	// Make sure you log the exception, as it might be swallowed
WITHOUT_CLASSIFICATION	// Begin unit of work
WITHOUT_CLASSIFICATION	// Write HTML header
WITHOUT_CLASSIFICATION	// Handle actions
WITHOUT_CLASSIFICATION	// Print page
WITHOUT_CLASSIFICATION	// Write HTML footer
WITHOUT_CLASSIFICATION	// End unit of work
WITHOUT_CLASSIFICATION	// Start the session to be used for this request
WITHOUT_CLASSIFICATION	// make the session available to the session factory's "current context"
WITHOUT_CLASSIFICATION	// pass control along to the rest of the processing chain
WITHOUT_CLASSIFICATION	// remove session from "current context"
WITHOUT_CLASSIFICATION	// Eager fetch the collection so we can use it detached
WITHOUT_CLASSIFICATION	// If we want to handle it bidirectional and detached, we also need to load this // collection with an eager outer-join fetch, this time with Criteria and not HQL:
WITHOUT_CLASSIFICATION	/*        Event anEvent = (Event) session                .createCriteria(Event.class).setFetchMode("participants", FetchMode.JOIN)                .add( Expression.eq("id", eventId) )                .uniqueResult(); // Eager fetch the colleciton so we can use it detached        */
WITHOUT_CLASSIFICATION	// End of first unit of work
WITHOUT_CLASSIFICATION	// or bidirectional safety method, setting both sides: aPerson.addToEvent(anEvent);
WITHOUT_CLASSIFICATION	// Begin second unit of work
WITHOUT_CLASSIFICATION	// Reattachment of aPerson
WITHOUT_CLASSIFICATION	// The getEmailAddresses() might trigger a lazy load of the collection
WITHOUT_CLASSIFICATION	// We need our tm, so get it now and avoid doing other work // if there is a problem
WITHOUT_CLASSIFICATION	// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates
WITHOUT_CLASSIFICATION	// Don't hold the JBC node lock throughout the tx, as that // prevents reads and other updates
WITHOUT_CLASSIFICATION	// JBC put a version in the node when it created as part of // some internal operation. We are always newer, but if // the JBC version is > 1 something odd has happened
WITHOUT_CLASSIFICATION	//swaldman 2006-08-28: define c3p0-style configuration parameters for properties with //                     hibernate-specific overrides to detect and warn about conflicting //                     declarations
WITHOUT_CLASSIFICATION	// Not null if the Isolation level has been specified in the configuration file. // Otherwise, it is left to the Driver's default value.
WITHOUT_CLASSIFICATION	// Configured outside of Hibernate (i.e. Servlet container, or Java Bean Container // already has Proxool pools running, and this provider is to just borrow one of these
WITHOUT_CLASSIFICATION	// If you're closing down the ConnectionProvider chances are an // is not a real big deal, just warn
WITHOUT_CLASSIFICATION	// (AS is always optional, for consistency with SQL/OQL)
WITHOUT_CLASSIFICATION	// process the "new" HQL style where aliases are assigned // _after_ the class name or path expression ie. using // the AS construction
WITHOUT_CLASSIFICATION	// the loaded owner will be set to null after the collection is removed, // so capture its value as the affected owner so it is accessible to // both pre- and post- events
WITHOUT_CLASSIFICATION	// is a primitive type // invokespecial
WITHOUT_CLASSIFICATION	// array of primitive type // do nothing
WITHOUT_CLASSIFICATION	// handle a path expression or class name that // appears at the start, in the "new" HQL // style or an alias that appears at the start // in the "old" HQL style
WITHOUT_CLASSIFICATION	//handle <=, >=, !=, is not, not between, not in
WITHOUT_CLASSIFICATION	// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level
WITHOUT_CLASSIFICATION	// transfer an explicitly defined entity name // handle the lazy attribute
WITHOUT_CLASSIFICATION	//keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	//keep the behavior consistent even for boundary usages
WITHOUT_CLASSIFICATION	// get meta's from // <joined-subclass>
WITHOUT_CLASSIFICATION	// parameters on the property mapping should // override parameters in the typedef
WITHOUT_CLASSIFICATION	//fetch="join" overrides default laziness //fetch="join" overrides default laziness
WITHOUT_CLASSIFICATION	//NOTE SPECIAL CASE: // default to join and non-lazy for the "second join" // of the many-to-many
WITHOUT_CLASSIFICATION	// so we "clock over" on the first invocation
WITHOUT_CLASSIFICATION	// state ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//	void setComponentTuplizerFactory(ComponentTuplizerFactory componentTuplizerFactory) { //		this.componentTuplizerFactory = componentTuplizerFactory; //	}
WITHOUT_CLASSIFICATION	//element //index -> id
WITHOUT_CLASSIFICATION	// note that it might be better to iterate the snapshot but this is safe, // assuming the user implements equals() properly, as required by the Set // contract!
WITHOUT_CLASSIFICATION	// collections detect changes made via their public interface and mark // themselves as dirty as a performance optimization
WITHOUT_CLASSIFICATION	// essentially, if the real session is closed allow any // method call to pass through since the real session // will complain by throwing an appropriate exception; // NOTE that allowing close() above has the same basic effect, //   but we capture that there simply to perform the unbind...
WITHOUT_CLASSIFICATION	// The default SQLExceptionConverter for all dialects is based on SQLState // since SQLErrorCode is extremely vendor-specific.  Specific Dialects // may override to return whatever is most appropriate for that vendor.
WITHOUT_CLASSIFICATION	//only necessary for postgre < 7.4 //http://anoncvs.postgresql.org/cvsweb.cgi/pgsql/doc/src/sgml/ref/create_sequence.sgml
WITHOUT_CLASSIFICATION	// select topic, syntax from information_schema.help // where section like 'Function%' order by section, topic // // see also ->  http://www.h2database.com/html/functions.html
WITHOUT_CLASSIFICATION	// registerColumnType(Types.VARBINARY, "CHARACTER($l)"); // registerColumnType(Types.BLOB, "CHARACTER($l)" );  // For use prior to CP 11.0 // registerColumnType(Types.CLOB, "CHARACTER($l)" );
WITHOUT_CLASSIFICATION	//the BLOB type requires a size arguement - this defaults to //bytes - no arg defaults to 1 whole byte! //other argument mods include K - kilobyte, M - megabyte, G - gigabyte. //refer to the PBdevelopers guide for more info.
WITHOUT_CLASSIFICATION	// We must return a valid RDMS/RSA command from this method to // prevent RDMS/RSA from issuing *ERROR 400
WITHOUT_CLASSIFICATION	// Oracle driver reports to support getGeneratedKeys(), but they only // support the version taking an array of the names of the columns to // be returned (via its RETURNING clause).  No other driver seems to // support this overloaded version.
WITHOUT_CLASSIFICATION	// add the comment // nest the main query in an outer select // add the rownnumber bit into the outer query select list
WITHOUT_CLASSIFICATION	//		 You may still have other ResultSets or update counts left to process here  //		 but you can't do it now or the ResultSet you just got will be closed 
WITHOUT_CLASSIFICATION	// Note: For object <-> SQL datatype mappings see: //	 Configuration Manager | Advanced | SQL | System DDL Datatype Mappings // //	TBD	registerColumnType(Types.BINARY,        "binary($1)"); // changed 08-11-2005, jsl
WITHOUT_CLASSIFICATION	// TRIM(end_keyword string-expression-1 FROM string-expression-2) // use Hibernate implementation "From" is one of the parameters they pass in position ?3 //registerFunction( "trim", new SQLFunctionTemplate(Hibernate.STRING, "trim(?1 ?2 from ?3)") );
WITHOUT_CLASSIFICATION	// Whether this dialect has an Identity clause added to the data type or a completely seperate identity // data type
WITHOUT_CLASSIFICATION	// According to both the ANSI-SQL and JPA specs, trim takes a variable number of parameters between 1 and 4. // at least one paramer (trimSource) is required.  From the SQL spec: // // <trim function> ::= //      TRIM <left paren> <trim operands> <right paren> // // <trim operands> ::= //      [ [ <trim specification> ] [ <trim character> ] FROM ] <trim source> // // <trim specification> ::= //      LEADING //      | TRAILING //      | BOTH // // If <trim specification> is omitted, BOTH is assumed. // If <trim character> is omitted, space is assumed
WITHOUT_CLASSIFICATION	/////////////////////////////////////////////////////////////////////// // Prepare persisters and link them up with their cache // region/access-strategy
WITHOUT_CLASSIFICATION	//Named Queries:
WITHOUT_CLASSIFICATION	// this will throw an error if there's something wrong.
WITHOUT_CLASSIFICATION	// does not handle arrays (thats ok, cos they can't be lazy) // or newly instantiated collections, so we can do the cast
WITHOUT_CLASSIFICATION	// collection deletions are a special case since update() can add // deletions of collections not loaded by the session.
WITHOUT_CLASSIFICATION	// we can do the cast since orphan-delete does not apply to: // 1. newly instantiated collections // 2. arrays (we can't track orphans for detached arrays)
WITHOUT_CLASSIFICATION	// if the natural-id is marked as non-mutable, it is not retrieved during a // normal database-snapshot operation...
WITHOUT_CLASSIFICATION	// watch out for a case where old is still referenced // somewhere in the object graph! (which is a user error)
WITHOUT_CLASSIFICATION	//slice, to get the columns for this component //property
WITHOUT_CLASSIFICATION	//int result = 17; //result = 37 * result + type.hashCode(); //result = 37 * result + ( value==null ? 0 : value.hashCode() ); //return result;
WITHOUT_CLASSIFICATION	// The CollectionEntry.isReached() stuff is just to detect any silly users   // who set up circular or shared references between/to collections.
WITHOUT_CLASSIFICATION	// detached collection wrappers that get found + reattached // during flush shouldn't be ignored
WITHOUT_CLASSIFICATION	// The unique property value represented here may or may not be // serializable, so we do an explicit check here in order to generate // a better error message
WITHOUT_CLASSIFICATION	// if the version of a newly instantiated object is not the same // as the version seed value, use that as the unsaved-value
WITHOUT_CLASSIFICATION	// ie. we never have to null out a reference to // an uninitialized proxy
WITHOUT_CLASSIFICATION	// ignore this row, the collection is in process of // being loaded somewhere further "up" the stack
WITHOUT_CLASSIFICATION	// Entity load contexts ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // 	* currently, not yet used...
WITHOUT_CLASSIFICATION	// should be ok performance-wise to generate new delegate instances for each // request since these are locally stack-scoped.  Besides, it makes the code // much easier to read than the old TransactionHelper stuff...
WITHOUT_CLASSIFICATION	// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility
WITHOUT_CLASSIFICATION	// this implementation is supposed to tolerate incorrect unsaved-value // mappings, for the purpose of backward-compatibility
WITHOUT_CLASSIFICATION	// wrap up any new collections directly referenced by the object // or its components
WITHOUT_CLASSIFICATION	// remove any snapshot, not really for memory management purposes, but // rather because it might now be stale, and there is no longer any  // EntityEntry to take precedence // This is now handled by removeEntity() //session.getPersistenceContext().removeDatabaseSnapshot(key);
WITHOUT_CLASSIFICATION	// skip this check for composite-ids relating to dom4j entity-mode; // alternatively, we could add a check to make sure the incoming id value is // an instance of Element...
WITHOUT_CLASSIFICATION	// upgrade the lock if necessary: //lock(result, lockMode);
WITHOUT_CLASSIFICATION	// now, any collections that are initialized // inside this block do not get updated - they // are ignored until the next flush
WITHOUT_CLASSIFICATION	//we must clone embedded composite identifiers, or  //we will get back the same instance that we pass in
WITHOUT_CLASSIFICATION	// Sub-insertions should occur before containing insertion so // Try to do the callback now
WITHOUT_CLASSIFICATION	//the entity is not associated with the session, so //try interceptor and unsaved-value
WITHOUT_CLASSIFICATION	//scan the query string for class names appearing in the from clause and replace //with all persistent implementors of the class/interface, returning multiple //query strings (make sure we don't pick up a class in the select clause!)
WITHOUT_CLASSIFICATION	// save() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// evict() operations ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//stops flush being called multiple times if this method is recursively called
WITHOUT_CLASSIFICATION	//if it is an uninitialized proxy, pointing //with this session, then when it is accessed, //the underlying instance will be "contained"
WITHOUT_CLASSIFICATION	// Generate an explicit join for the root dot node.   The implied joins will be collected and passed up // to the root dot node.
WITHOUT_CLASSIFICATION	// A session is considered to contain an entity only if the entity has // an entry in the session's persistence context and the entry reports // that the entity has not been removed
WITHOUT_CLASSIFICATION	// Does the collection referenced by this FromElement // specify an order-by attribute?  If so, attach it to // the query's order-by
WITHOUT_CLASSIFICATION	// ... and the token could be an identifer and the error is // a mismatched token error ...
WITHOUT_CLASSIFICATION	// If a where clause was specified in the update/delete query, use it to limit the // returned ids here...
WITHOUT_CLASSIFICATION	//					int parameterStart = getWalker().getNumberOfParametersInSetClause(); //					List allParams = getIdSelectParameterSpecifications(); //					Iterator whereParams = allParams.subList( parameterStart, allParams.size() ).iterator();
WITHOUT_CLASSIFICATION	// Default implementation: // If this node has a data type, and that data type is not an association, then this is scalar.
WITHOUT_CLASSIFICATION	// Resolve the LHS fully, generate implicit joins.  Pass in the property name so that the resolver can // discover foreign key (id) properties.
WITHOUT_CLASSIFICATION	// If the propertyType is null and there isn't a parent, just // stop now... there was a problem resolving the node anyway.
WITHOUT_CLASSIFICATION	//We do not look for an existing join on the same path, because //it makes sense to join twice on the same collection role
WITHOUT_CLASSIFICATION	// our parent is another dot node, meaning we are being further dereferenced. // thus we need to generate a join unless the parent refers to the associated // entity's PK (because 'our' table would know the FK).
WITHOUT_CLASSIFICATION	/*public final Currency getCurrency(int col) throws HibernateException {		return (Currency) get(col);	}*/
WITHOUT_CLASSIFICATION	// here, we have two possibilities: // 		1) the property-name matches the explicitly identifier property name //		2) the property-name matches the implicit 'id' property name
WITHOUT_CLASSIFICATION	// Set the unresolved path in this node and the parent. // Set the text for the parent.
WITHOUT_CLASSIFICATION	// Get the first child to be considered.  Sub-classes may do this differently in order to skip nodes that // are not select expressions (e.g. DISTINCT).
WITHOUT_CLASSIFICATION	// If this is an entity and the property is the identifier property, then use getIdentifierType(). //      Note that the propertyName.equals( propertyPath ) checks whether we have a component //      key reference, where the component class property name is the same as the //      entity id property name; if the two are not equal, this is the case and //      we'd need to "fall through" to using the property mapping.
WITHOUT_CLASSIFICATION	// for a subquery, the alias to use depends on a few things (we // already know this is not an overall SELECT): //      1) if this FROM_ELEMENT represents a correlation to the //          outer-most query //              A) if the outer query represents a multi-table //                  persister, we need to use the given alias //                  in anticipation of one of the multi-table //                  executors being used (as this subquery will //                  actually be used in the "id select" phase //                  of that multi-table executor) //              B) otherwise, we need to use the persister's //                  table name as the column qualification //      2) otherwise (not correlated), use the given alias
WITHOUT_CLASSIFICATION	// Not a collection? // Return the entity property mapping.
WITHOUT_CLASSIFICATION	// collection of <many-to-any/> mappings... // used to circumvent the component-collection check below...
WITHOUT_CLASSIFICATION	// Otherwise, the destination node was implied by the FROM clause and the FROM clause processor // will automatically add it in the right place.
WITHOUT_CLASSIFICATION	// If the first identifier in the path referrs to the class alias (not the class name), then this // is a correlated subselect.  If it's a correlated sub-select, use the existing table alias.  Otherwise // generate a new one.
WITHOUT_CLASSIFICATION	// check to see if our "propPath" actually // represents a property on the persister
WITHOUT_CLASSIFICATION	// An ident node can represent an index expression if the ident // represents a naked property ref //      *Note: this makes the assumption (which is currently the case //      in the hql-sql grammar) that the ident is first resolved //      itself (addrExpr -> resolve()).  The other option, if that //      changes, is to call resolve from here; but it is //      currently un-needed overhead.
WITHOUT_CLASSIFICATION	// This uses a PathExpressionParser but notice that compound paths are not valid, // only bare names and simple paths:
WITHOUT_CLASSIFICATION	// If this is an implied join in a FROM clause, then use ANSI-style joining, and set the // flag on the FromElement that indicates that it was implied in the FROM clause itself.
WITHOUT_CLASSIFICATION	//		origin.addDestination(destination); // Add the query spaces.
WITHOUT_CLASSIFICATION	// For an explicit many-to-many relationship, add a second join from the intermediate  // (many-to-many) table to the destination table.  Also, make sure that the from element's  // idea of the destination is the destination table.
WITHOUT_CLASSIFICATION	// Reset the node type, because the rest of the system is expecting FROM_FRAGMENT, all we wanted was // for the factory to create the right sub-class.  This might get reset again later on anyway to make the // SQL generation simpler.
WITHOUT_CLASSIFICATION	//explicit = true;	// This is an explict Select. //ArrayList sqlResultTypeList = new ArrayList();
WITHOUT_CLASSIFICATION	//sqlResultTypeList.add( type ); // Generate the select expression.
WITHOUT_CLASSIFICATION	// If the expression list has exactly one expression, and the type of the expression is a collection // then this might be a collection function, such as index(c) or size(c).
WITHOUT_CLASSIFICATION	// Need to parse off the column qualifiers; this is assuming (which is true as of now) // that this is only used from update and delete HQL statement parsing
WITHOUT_CLASSIFICATION	// for regression testing against output from the old parser... // found it easiest to simply reorder the FromElements here into ascending order // in terms of injecting them into the resulting sql ast in orders relative to those // expected by the old parser; this is definitely another of those "only needed // for regression purposes".  The SyntheticAndFactory, then, simply injects them as it // encounters them.
WITHOUT_CLASSIFICATION	// The uber-rule here is that we need to include  subclass joins if // the FromElement is in any way dereferenced by a property from // the subclass table; otherwise we end up with column references // qualified by a non-existent table reference in the resulting SQL...
WITHOUT_CLASSIFICATION	// classic translator does not support collection of ordinal // param metadata
WITHOUT_CLASSIFICATION	// The following variables are stacks that keep information about each subexpression // in the list of nested subexpressions we are currently processing.
WITHOUT_CLASSIFICATION	// The loop ensures atomicity of the // select + update even for no transaction // or read committed isolation level
WITHOUT_CLASSIFICATION	// should not be able to reach last without maxPosition being set // unless there are no results
WITHOUT_CLASSIFICATION	// we found it in the temp PC.  Should indicate we are in the midst of processing a result set // containing eager fetches via join fetch
WITHOUT_CLASSIFICATION	//do not use proxiesByKey, since not all //proxies that point to this session's //instances are in that collection!
WITHOUT_CLASSIFICATION	// if there is no TM configured, we will not be able to access // the javax.transaction.Transaction object in order to // register a synch anyway.
WITHOUT_CLASSIFICATION	// Since the result set cursor is always left at the first // physical row after the "last processed", we need to jump // back one position to get the key value we are interested // in skipping
WITHOUT_CLASSIFICATION	//true if this is a query and we are loading multiple instances of the same collection role //otherwise this is a CollectionInitializer and we are loading up a single collection or batch
WITHOUT_CLASSIFICATION	// we don't need to worry about existing version being uninitialized // because this block isn't called by a re-entrant load (re-entrant // loads _always_ have lock mode NONE)
WITHOUT_CLASSIFICATION	// add temp entry so that the next step is circular-reference // safe - only needed because some types don't take proper // advantage of two-phase-load (esp. components)
WITHOUT_CLASSIFICATION	// assume we are in an auto-commit state
WITHOUT_CLASSIFICATION	// log a message about potential connection leaks
WITHOUT_CLASSIFICATION	//			ps.close(); //just close it; do NOT try to return it to the pool! //NOTE: early exit!
WITHOUT_CLASSIFICATION	// this has been shown to happen occasionally in rare cases // when using a transaction manager + transaction-timeout // where the timeout calls back through Hibernate's // registered transaction synchronization on a separate // "reaping" thread.  In cases where that reaping thread // executes through this block at the same time the main // application thread does we can get into situations where // these CMEs occur.  And though it is not "allowed" per-se, // the end result without handling it specifically is infinite // looping.  So here, we simply break the loop
WITHOUT_CLASSIFICATION	// unfortunately this stuff can't be cached because // it is per-invocation, not constant for the // QueryTranslator instance
WITHOUT_CLASSIFICATION	// can't cache this stuff either (per-invocation) // we are given a map of user-alias -> lock mode // create a new map of sql-alias -> lock mode
WITHOUT_CLASSIFICATION	// don't create a unique key, 'cos some // databases don't like a UK on nullable // columns //getCollectionTable().createUniqueKey( getIdentifier().getConstraintColumns() );
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//isSet = collection.isSet(); //isSorted = collection.isSorted();
WITHOUT_CLASSIFICATION	//lists, arrays //sets, maps, bags
WITHOUT_CLASSIFICATION	// we finish all the "removes" first to take care of possible unique // constraints and so that we can take better advantage of batching
WITHOUT_CLASSIFICATION	//use a combination of foreign key columns and pk columns, since //the ordering of removal and addition is not guaranteed when //a child moves from one parent to another
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is persister-centric and/or EntityInfo-centric ~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//information about properties of this class, //including inherited properties //(only really needed for updatable/insertable properties)
WITHOUT_CLASSIFICATION	// all this only really needs to consider properties // of this class, not its subclasses, but since we // are reusing code used for sequential selects, we // use the subclass closure
WITHOUT_CLASSIFICATION	// Here we render the select column list based on the properties defined as being generated. // For partial component generation, we currently just re-select the whole component // rather than trying to handle the individual generated portions.
WITHOUT_CLASSIFICATION	// this is the root (versioned) table, and we are using version-based // optimistic locking;  if we are not updating the version, also don't // check it (unless this is a "generated" version column)!
WITHOUT_CLASSIFICATION	//optimistic-lock="all", include all updatable properties //optimistic-lock="dirty", include all properties we are updating this time
WITHOUT_CLASSIFICATION	// this property belongs to the table, and it is not specifically // excluded from optimistic locking by optimistic-lock="false"
WITHOUT_CLASSIFICATION	// check to see if the connection is in auto-commit  // mode (no connection means aggressive connection // release outside a JTA transaction context, so MUST // be autocommit mode)
WITHOUT_CLASSIFICATION	// need to treat this as if it where optimistic-lock="all" (dirty does *not* make sense); // first we need to locate the "loaded" state // // Note, it potentially could be a proxy, so perform the location the safe way...
WITHOUT_CLASSIFICATION	// we *always* assume an instance with a null // identifier or no identifier property is unsaved!
WITHOUT_CLASSIFICATION	// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...
WITHOUT_CLASSIFICATION	//allow any identifier quoted with backtick //only recognizes identifiers beginning with a letter
WITHOUT_CLASSIFICATION	//following doesn't handle (null, not null) but unnecessary //since this would mean all rows
WITHOUT_CLASSIFICATION	// IMPL NOTE : due to the delayed population of setters (setters cached // 		for performance), we really cannot pro0perly define equality for // 		this transformer
WITHOUT_CLASSIFICATION	// we need to dirty check collections, since they can cause an owner // version number increment
WITHOUT_CLASSIFICATION	//return the id, so we can use it to reset the proxy id //return result;
WITHOUT_CLASSIFICATION	//			optimizer = getFactory().getSettings().getBytecodeProvider().getReflectionOptimizer( //					mappedClass, getterNames, setterNames, propTypes //			);
WITHOUT_CLASSIFICATION	// cache the actual id of the object, not the value of the // property-ref, which might not be initialized
WITHOUT_CLASSIFICATION	// We now have the value of the property-ref we reference.  However, // we need to dig a little deeper, as that property might also be // an entity type, in which case we need to resolve its identitifier
WITHOUT_CLASSIFICATION	// Retrieve the value of the designated column in the current row of this // ResultSet object as a java.io.Reader object
WITHOUT_CLASSIFICATION	//not absolutely necessary, but helps for some //equals()/hashCode() implementations
WITHOUT_CLASSIFICATION	//this should be a call to resolve(), not resolveIdentifier(),  //'cos it might be a property-ref, and we did not cache the //referenced value
WITHOUT_CLASSIFICATION	// If we have <tt>not-found="ignore"</tt> association mapped to a // formula, we always need to dirty check it, so we can update the // second-level cache
WITHOUT_CLASSIFICATION	// can't just return null here, since that would // cause an owning component to become null
WITHOUT_CLASSIFICATION	//for arrays, replaceElements() may return a different reference, since //the array length might not match
WITHOUT_CLASSIFICATION	// actual cache of the entries.  soft references are used for both the keys and the // values here since the values pertaining to the MRU entries are kept in a // seperate hard reference cache (to avoid their enqueuement/garbage-collection).
WITHOUT_CLASSIFICATION	// as soon as we encounter our first letter, return the substring // from that position
WITHOUT_CLASSIFICATION	// Note : expected in the syntax: //      type=listenerClass //          ({sep}type=listenerClass)* // where {sep} is any whitespace or comma
WITHOUT_CLASSIFICATION	// isTransactionCallbackRegistered denotes whether any Hibernate // Transaction has registered as a callback against this // JDBCContext; only one such callback is allowed.  Directly // serializing this value causes problems with JDBCTransaction, // or really any Transaction impl where the callback is local // to the Transaction instance itself, since that Transaction // is not serialized along with the JDBCContext.  Thus we // handle that fact here explicitly...
WITHOUT_CLASSIFICATION	// note that for sequential scrolling, we make the assumption that // the first persister element is the "root entity"
WITHOUT_CLASSIFICATION	// We call getKeyFromResultSet() here so that we can know the // key value upon which to perform the breaking logic.  However, // it is also then called from getRowFromResultSet() which is certainly // not the most efficient.  But the call here is needed, and there // currently is no other way without refactoring of the doQuery()/getRowFromResultSet() // methods
WITHOUT_CLASSIFICATION	// This check is needed since processing leaves the cursor // after the last physical row for the current logical row; // thus if we are after the last physical row, this might be // caused by either: //      1) scrolling to the last logical row //      2) scrolling past the last logical row // In the latter scenario, the previous logical row // really is the last logical row. // // In all other cases, we should process back two // logical records (the current logic row, plus the // previous logical row).
WITHOUT_CLASSIFICATION	// and perform the load
WITHOUT_CLASSIFICATION	//important: reuse the same event instances for performance!
WITHOUT_CLASSIFICATION	//this is a query and we are loading multiple instances of the same collection role
WITHOUT_CLASSIFICATION	// we found a collection element in the result set
WITHOUT_CLASSIFICATION	// we did not find a collection element in the result set, so we // ensure that a collection is created with the owner's identifier, // since what we have is an empty collection
WITHOUT_CLASSIFICATION	// this is a collection initializer, so we must create a collection // for each of the passed-in keys, to account for the possibility // that the collection is empty and has no rows in the result set
WITHOUT_CLASSIFICATION	// grab its state from the ResultSet and keep it in the Session // (but don't yet initialize the object itself) // note that we acquire LockMode.READ even if it was not requested
WITHOUT_CLASSIFICATION	// a many-to-many; // decrement currentDepth here to allow join across the association table // without exceeding MAX_FETCH_DEPTH (i.e. the "currentDepth - 1" bit)
WITHOUT_CLASSIFICATION	// if not a composite key, use "foo in (?, ?, ?)" for batching // if no batch, and not a composite key, use "foo = ?"
WITHOUT_CLASSIFICATION	//the user visible aliases, which are unknown to the superclass, //these are not the actual "physical" SQL aliases
WITHOUT_CLASSIFICATION	//first look for a reference to a projection alias
WITHOUT_CLASSIFICATION	//first look for a reference to a projection alias
WITHOUT_CLASSIFICATION	//it does not refer to an alias of a projection, //look for a property
WITHOUT_CLASSIFICATION	// determine if the collection elements are entities...
WITHOUT_CLASSIFICATION	// Let return-propertys override whatever the persister has for aliases.
WITHOUT_CLASSIFICATION	/**	 * Translates an AST join type (i.e., the token type) into a JoinFragment.XXX join type.	 *	 * @param astJoinType The AST join type (from HqlSqlTokenTypes or SqlTokenTypes)	 * @return a JoinFragment.XXX join type.	 * @see JoinFragment	 * @see SqlTokenTypes	 */
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	//        }
WITHOUT_CLASSIFICATION	//	public List getCollectionAliases() { //		return collectionAliases; //	} // //	/*public List getCollectionOwners() { //		return collectionOwners; //	}*/ // //	public List getCollectionOwnerAliases() { //		return collectionOwnerAliases; //	} // //	public List getCollectionPersisters() { //		return collectionPersisters; //	} // //	public Map getAlias2Persister() { //		return alias2Persister; //	} // //	/*public boolean isCollectionInitializer() { //		return isCollectionInitializer; //	}*/ // ////	public List getPersisters() { ////		return persisters; ////	} // //	public Map getAlias2OwnerAlias() { //		return alias2OwnerAlias; //	} // //	public List getScalarTypes() { //		return scalarTypes; //	} //	public List getScalarColumnAliases() { //		return scalarColumnAliases; //	} // //	public List getPropertyResults() { //		return propertyResults; //	} // //	public List getCollectionPropertyResults() { //		return collectionResults; //	} // // //	public Map getAlias2Return() { //		return alias2Return; //	}
WITHOUT_CLASSIFICATION	//		SQLQueryParser parser = new SQLQueryParser( //				sqlQuery, //				processor.getAlias2Persister(), //				processor.getAlias2Return(), //				aliases, //				collAliases, //				collPersisters, //				suffixes, //				collSuffixes //		); // //		sql = parser.process(); // //		namedParameterBindPoints = parser.getNamedParameters();
WITHOUT_CLASSIFICATION	//include the discriminator and class-level where, but not filters
WITHOUT_CLASSIFICATION	//			sqlAliasSuffixes[i] = element.getColumnAliasSuffix();
WITHOUT_CLASSIFICATION	//NONE, because its the requested lock mode, not the actual! 
WITHOUT_CLASSIFICATION	// at this point we have (drivingSqlAlias) the SQL alias of the driving table // corresponding to the given user alias.  However, the driving table is not // (necessarily) the table against which we want to apply locks.  Mainly, // the exception case here is joined-subclass hierarchies where we instead // want to apply the lock against the root table (for all other strategies, // it just happens that driving and root are the same).
WITHOUT_CLASSIFICATION	// the column doesnt exist at all.
WITHOUT_CLASSIFICATION	// we have a mapped identifier property and the root of // the incoming property path matched that identifier // property
WITHOUT_CLASSIFICATION	// we have an embedded composite identifier
WITHOUT_CLASSIFICATION	// both many-to-one and one-to-one are represented as a // Property.  EntityPersister is relying on this value to // determine "lazy fetch groups" in terms of field-level // interception.  So we need to make sure that we return // true here for the case of many-to-one and one-to-one // with lazy="no-proxy" // // * impl note - lazy="no-proxy" currently forces both // lazy and unwrap to be set to true.  The other case we // are extremely interested in here is that of lazy="proxy" // where lazy is set to true, but unwrap is set to false. // thus we use both here under the assumption that this // return is really only ever used during persister // construction to determine the lazy property/field fetch // groupings.  If that assertion changes then this check // needs to change as well.  Partially, this is an issue with // the overloading of the term "lazy" here...
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ // stuff that is tuplizer-centric, but is passed a session ~~~~~~~~~~~~~~~~ // ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	/*rootTableName = persistentClass.getRootTable().getQualifiedName( 				factory.getDialect(), 				factory.getDefaultCatalog(), 				factory.getDefaultSchema() 		);*/
WITHOUT_CLASSIFICATION	// SUBCLASSES
WITHOUT_CLASSIFICATION	// Custom sql
WITHOUT_CLASSIFICATION	/*protected void initPropertyPaths(			final String path,			final Type type,			final String[] columns,			final String[] formulaTemplates,			final Mapping factory)	throws MappingException {		//addFormulaPropertyPath(path, type, formulaTemplates);		initPropertyPaths(path, type, columns, formulaTemplates, factory);	}*/
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	//Custom SQL (would be better if these were private)
WITHOUT_CLASSIFICATION	// moved up from AbstractEntityPersister ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// aliases for identifier ( alias.id ); skip if the entity defines a non-id property named 'id'
WITHOUT_CLASSIFICATION	//decide which ResultSet to get the property value from:
WITHOUT_CLASSIFICATION	//note: it is conceptually possible that a UserType could map null to //	  a non-null value, so the following is arguable:
WITHOUT_CLASSIFICATION	// the contract of EntityTuplizer.determineConcreteSubclassEntityName says that returning null // is an indication that the specified entity-name (this.getEntityName) should be used.
WITHOUT_CLASSIFICATION	// Need to use the identifier type of the collection owner // since the incoming is value is actually the owner's id. // Using the collection's key type causes problems with // property-ref keys...
WITHOUT_CLASSIFICATION	// cache these since they are stateless // this one could even be static...
WITHOUT_CLASSIFICATION	//"as" is not in KEYWORDS
WITHOUT_CLASSIFICATION	// --Commented out by Inspection (12/4/04 9:10 AM): public abstract void addCondition(String alias, String[] columns, String condition);
WITHOUT_CLASSIFICATION	//use the id column alias
WITHOUT_CLASSIFICATION	//private List aliases = new ArrayList();
WITHOUT_CLASSIFICATION	//columns.add(columnName); //aliases.add(tableAlias);
WITHOUT_CLASSIFICATION	//where fragment must be empty!
WITHOUT_CLASSIFICATION	// revert to traditional hibernate behavior of setting initialPoolSize to minPoolSize // unless otherwise specified with a c3p0.*-style parameter.
WITHOUT_CLASSIFICATION	//arbitrary on clause ignored!!
WITHOUT_CLASSIFICATION	// might happen with a managed connection
WITHOUT_CLASSIFICATION	// might happen with a managed connection
WITHOUT_CLASSIFICATION	//if an exception occurs during flush, user must call rollback()
WITHOUT_CLASSIFICATION	// Essentially: // 1) If we have a local (Hibernate) transaction in progress //      and it already has the UserTransaction cached, use that //      UserTransaction to determine the status. // 2) If a transaction manager has been located, use //      that transaction manager to determine the status. // 3) Finally, as the last resort, try to lookup the //      UserTransaction via JNDI and use that to determine the //      status.
WITHOUT_CLASSIFICATION	/*package*/
WITHOUT_CLASSIFICATION	//swallow it (the transaction _was_ successful or successfully rolled back)
WITHOUT_CLASSIFICATION	// ignore it
WITHOUT_CLASSIFICATION	// we need to dirty check many-to-ones with not-found="ignore" in order  // to update the cache (not the database), since in this case a null // entity reference can lose information
WITHOUT_CLASSIFICATION	// create our own copy of the user-supplied tuplizer impl map
WITHOUT_CLASSIFICATION	// Regions can get instantiated in the course of normal work (e.g. // a named query region will be created the first time the query is // executed), so suspend any ongoing tx
WITHOUT_CLASSIFICATION	// then handle any user-defined entity modes...
WITHOUT_CLASSIFICATION	// Establish the region root node with a non-locking data version
WITHOUT_CLASSIFICATION	// temporary ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
WITHOUT_CLASSIFICATION	// NOTE : this is being used from the process of shutting down a // SessionFactory. Specific things to consider: // (1) this clearing of the region should not propagate to // other nodes on the cluster (if any); this is the // cache-mode-local option bit... // (2) really just trying a best effort to cleanup after // ourselves; lock failures, etc are not critical here; // this is the fail-silently option bit...
WITHOUT_CLASSIFICATION	// need to extract the component values and check for subtype replacements...
WITHOUT_CLASSIFICATION	// We ignore minimalPutOverride. JBossCache putForExternalRead is // already about as minimal as we can get; it will promptly return // if it discovers that the node we want to write to already exists
WITHOUT_CLASSIFICATION	// for now, just "re-flatten" the metamodel since this is temporary stuff anyway (HHH-1907)
WITHOUT_CLASSIFICATION	// Configure the cache to use our TM
WITHOUT_CLASSIFICATION	//This solution would allow us to eliminate the owner arg to disassemble(), but //what if the collection was null, and then later had elements added? seems unsafe //session.getPersistenceContext().getCollectionEntry( (PersistentCollection) value ).getKey();
WITHOUT_CLASSIFICATION	// Make sure JBC doesn't look one up
WITHOUT_CLASSIFICATION	// some collections are not lazy:
WITHOUT_CLASSIFICATION	// Here we don't want to suspend the tx. If we do: // 1) We might be caching query results that reflect uncommitted // changes. No tx == no WL on cache node, so other threads // can prematurely see those query results // 2) No tx == immediate replication. More overhead, plus we // spread issue #1 above around the cluster
WITHOUT_CLASSIFICATION	// return the (fully resolved) identifier value, but do not resolve // to the actual referenced entity instance // NOTE: the owner of the association is not really the owner of the id!
WITHOUT_CLASSIFICATION	// Add a zero (or quite low) timeout option so we don't block. // Ignore any TimeoutException. Basically we forego caching the // query result in order to avoid blocking. // Reads are done with suspended tx, so they should not hold the // lock for long.  Not caching the query result is OK, since // any subsequent read will just see the old result with its // out-of-date timestamp; that result will be discarded and the // db query performed again.
WITHOUT_CLASSIFICATION	// Impl note: takes advantage of the fact that an escpaed single quote // embedded within a quote-block can really be handled as two seperate // quote-blocks for the purposes of this method...
WITHOUT_CLASSIFICATION	// We have the JBCWriteMutex, so no other *local* thread will  // be trying to write this key.  // It's possible here some remote thread has come in and // changed the values again, but since we are reading the // values to write to JBC right now, we know we are writing // the latest values; i.e. we don't assume that what we cached // in entry.update() above is what we should write to JBC *now*. // Our write could be redundant, i.e. we are writing what // some remote thread just came in an wrote.  There is a chance  // that yet another remote thread will update us, and we'll then // overwrite that later data in JBC.  But, all remote nodes will // ignore that change in their localCache; the only place it  // will live will be in JBC, where it can only effect the  // initial state transfer values on newly joined nodes  // (i.e. populateLocalCache()).
WITHOUT_CLASSIFICATION	// local cache, so we use synchronization
WITHOUT_CLASSIFICATION	// local cache, so we use synchronization
WITHOUT_CLASSIFICATION	// Don't need to lock the cache here, since if someone // else inserted the same pk first, the insert would fail
WITHOUT_CLASSIFICATION	// we need to grab the version value from the entity, otherwise // we have issues with generated-version entities that may have // multiple actions queued during the same flush
WITHOUT_CLASSIFICATION	// we need to obtain the lock before any actions are // executed, since this may be an inverse="true" // bidirectional association and it is one of the // earlier entity actions which actually updates // the database (this action is resposible for // second-level cache invalidation only)
WITHOUT_CLASSIFICATION	//postDelete: // After actually deleting a row, record the fact that the instance no longer  // exists on the database (needed for identity-column key generation), and // remove it from the session cache
WITHOUT_CLASSIFICATION	// intentionally empty
IMPLEMENTATION	// TODO: warn "tried to create Proc object without a block"
IMPLEMENTATION	// TODO: CLONE_SETUP here
IMPLEMENTATION	// TODO: Someday, enable.
IMPLEMENTATION	// Bunch of methods still not implemented
IMPLEMENTATION	// TODO: non-strict option
IMPLEMENTATION	// TODO: opt for 2 and 3 ?
IMPLEMENTATION	// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?
IMPLEMENTATION	// TODO: rescan code range ?
IMPLEMENTATION	// TODO: rescan code range ?
IMPLEMENTATION	// TODO: pass this in?
IMPLEMENTATION	// FIXME: Pass block down?
IMPLEMENTATION	// TODO: do something here?
IMPLEMENTATION	// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block
IMPLEMENTATION	// TODO: check if too many open files, GC and try again
IMPLEMENTATION	//TODO deal with UNC names
IMPLEMENTATION	// FIXME: When we get JNA3 we need to properly write this to errno.
IMPLEMENTATION	//FIXME: When we get JNA3 we need to properly write this to errno.
IMPLEMENTATION	// TODO: SafeStringValue here
IMPLEMENTATION	// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;
IMPLEMENTATION	// TODO: check safe, taint on incoming string
IMPLEMENTATION	// TODO: pipe handler to be reopened with path and "w" mode
IMPLEMENTATION	// FIXME: add text mode to mode flags
IMPLEMENTATION	// TODO: Something about pipe buffer length here
IMPLEMENTATION	// TODO: handle errors in buffered write by retrying until finished or file is closed
IMPLEMENTATION	// TODO: notify threads waiting on descriptors/IO? probably not...
IMPLEMENTATION	// TODO: Ruby re-checks that the buffer string hasn't been modified
IMPLEMENTATION	// TODO: Ruby unlocks the string here
IMPLEMENTATION	// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?
IMPLEMENTATION	// TODO: Ruby unlocks the string here
IMPLEMENTATION	// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?
IMPLEMENTATION	// TODO: ruby locks the string here
IMPLEMENTATION	// TODO same zero-length checks as file above
IMPLEMENTATION	// TODO: MRI also can hadle Bignum here
IMPLEMENTATION	// TODO: make threadsafe
IMPLEMENTATION	// TODO: must override in RubyModule to pick up constants
IMPLEMENTATION	// TODO: must override in RubyModule to pick up constants
IMPLEMENTATION	// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access
IMPLEMENTATION	// Do not clone cached methods // FIXME: MRI copies all methods here
IMPLEMENTATION	// TODO: don't calculate the same value 3 times
IMPLEMENTATION	// TODO: 3 times calculate the same value below
IMPLEMENTATION	// TODO: no need to calculate every time.
IMPLEMENTATION	// TODO: Store BEGIN and END information into this node
IMPLEMENTATION	// TODO: put these nil guards into tree (bigger than I want to do right now)
IMPLEMENTATION	// FIXME: Make bodyNode non-null in parser
IMPLEMENTATION	// TODO: call config with scope but no frame
IMPLEMENTATION	// TODO: add trace call?
IMPLEMENTATION	// FIXME: missing arity check
IMPLEMENTATION	// FIXME: optimize for cases where we have no false branch
IMPLEMENTATION	// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();
IMPLEMENTATION	// TODO: build arg list based on number of args, optionals, etc
IMPLEMENTATION	// FIXME: missing arity check
IMPLEMENTATION	// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope
IMPLEMENTATION	// SSS FIXME: Should I be returning the operand constructed here?
IMPLEMENTATION	// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);
IMPLEMENTATION	// FIXME: Ruby 1.9 post args code needs to come here
IMPLEMENTATION	// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String
IMPLEMENTATION	// FIXME: Translate this call below! // s.unwrapPassedBlock();
IMPLEMENTATION	// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.
IMPLEMENTATION	// SSS FIXME: Incomplete!
IMPLEMENTATION	// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation
IMPLEMENTATION	// SSS FIXME: To be done
IMPLEMENTATION	//TODO: implement, won't do this now
IMPLEMENTATION	//TODO: implement, won't do this now
IMPLEMENTATION	// TODO: validate port as numeric
IMPLEMENTATION	// TODO: this code should really check if a Ruby equals method is implemented or not.
IMPLEMENTATION	// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic
IMPLEMENTATION	// TODO: deal with varargs
IMPLEMENTATION	// TODO: deal with varargs
IMPLEMENTATION	// TODO: other reserved names?
IMPLEMENTATION	// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 
IMPLEMENTATION	// TODO: Formalize conversion mechanisms between Java and Ruby
IMPLEMENTATION	// XXX: Check if it's appropriate type?
IMPLEMENTATION	// TODO: call ruby method
IMPLEMENTATION	// TODO: call ruby method
IMPLEMENTATION	// TODO: Add safety check for taintedness
IMPLEMENTATION	// FIXME: Need to detect magic_comment in 1.9 here for encoding
IMPLEMENTATION	/* xxx shouldn't check if valid option variable */
IMPLEMENTATION	// TODO: this isn't handling multibyte yet
IMPLEMENTATION	// TODO: This should be something else like a tCHAR
IMPLEMENTATION	// FIXME: \r logic needed
IMPLEMENTATION	// TODO: note lack of command.com support for Win 9x...
IMPLEMENTATION	// FIXME: Make thread pool threads daemons if necessary
IMPLEMENTATION	/* FIXME: We may be intern'ing more than once.*/
IMPLEMENTATION	/* FIXME: We may be intern'ing more than once.*/
IMPLEMENTATION	/* FIXME: arg_concat missing for opt_call_args*/
IMPLEMENTATION	/* FIXME: arg_concat logic missing for opt_call_args*/
IMPLEMENTATION	// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);
IMPLEMENTATION	// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);
IMPLEMENTATION	// TODO: make it cross runtime safe by COW or eager copy
IMPLEMENTATION	// FIXME: don't use RubyIO for this
IMPLEMENTATION	// FIXME: don't use RubyIO for this
IMPLEMENTATION	// FIXME: don't use RubyIO for this
IMPLEMENTATION	// TODO: check the return value here
IMPLEMENTATION	// TODO: check the return value here
IMPLEMENTATION	// TODO: Make sure all appropriate open flags are added to this check.
IMPLEMENTATION	//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);
IMPLEMENTATION	// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!
IMPLEMENTATION	// TODO Auto-generated method stub
IMPLEMENTATION	// TODO Auto-generated catch block
IMPLEMENTATION	// TODO Auto-generated catch block
IMPLEMENTATION	// TODO Auto-generated catch block
IMPLEMENTATION	// TODO: no need to calculate every time.
IMPLEMENTATION	// TODO: no need to calculate every time.
IMPLEMENTATION	// TODO: check for ascii string
IMPLEMENTATION	// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives
IMPLEMENTATION	// TODO: must override in RubyModule to pick up constants
IMPLEMENTATION	// TODO: must override in RubyModule to pick up constants
IMPLEMENTATION	// TODO: missing additional logic for dealing with conflicting protected fields.
IMPLEMENTATION	// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.
IMPLEMENTATION	// FIXME: When we get JNA3 we need to properly write this to errno.
IMPLEMENTATION	// FIX replace type() == ... with isInstanceOf(...)
IMPLEMENTATION	/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/
IMPLEMENTATION	// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.
IMPLEMENTATION	// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.
WITHOUT_CLASSIFICATION	// set constants now that they're initialized
WITHOUT_CLASSIFICATION	// line 335
WITHOUT_CLASSIFICATION	//yyLen 542
WITHOUT_CLASSIFICATION	//yyLen 542
WITHOUT_CLASSIFICATION	//yyDefRed 945
WITHOUT_CLASSIFICATION	//yyDefRed 945
WITHOUT_CLASSIFICATION	//yyDgoto 152
WITHOUT_CLASSIFICATION	// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?
WITHOUT_CLASSIFICATION	// line 362
WITHOUT_CLASSIFICATION	// line 372
WITHOUT_CLASSIFICATION	//yySindex 945
WITHOUT_CLASSIFICATION	//yySindex 945
WITHOUT_CLASSIFICATION	// line 391
WITHOUT_CLASSIFICATION	//yyRindex 945
WITHOUT_CLASSIFICATION	//yyRindex 945
WITHOUT_CLASSIFICATION	/* ^D */
WITHOUT_CLASSIFICATION	/* ^Z */
WITHOUT_CLASSIFICATION	//yyLen 496
WITHOUT_CLASSIFICATION	//yyLen 496
WITHOUT_CLASSIFICATION	//yyLen 496
WITHOUT_CLASSIFICATION	//yyLen 496
WITHOUT_CLASSIFICATION	//yyLen 496
WITHOUT_CLASSIFICATION	//yyLen 496
WITHOUT_CLASSIFICATION	//yyLen 496
WITHOUT_CLASSIFICATION	//yyDefRed 889
WITHOUT_CLASSIFICATION	//yyDefRed 889
WITHOUT_CLASSIFICATION	//yyDefRed 889
WITHOUT_CLASSIFICATION	//yyDefRed 889
WITHOUT_CLASSIFICATION	//yyDefRed 889
WITHOUT_CLASSIFICATION	//yyDefRed 889
WITHOUT_CLASSIFICATION	//yyDefRed 889
WITHOUT_CLASSIFICATION	//yyDgoto 136
WITHOUT_CLASSIFICATION	//yyDgoto 136
WITHOUT_CLASSIFICATION	//yyDgoto 136
WITHOUT_CLASSIFICATION	//yyDgoto 136
WITHOUT_CLASSIFICATION	//yyDgoto 136
WITHOUT_CLASSIFICATION	//yyDgoto 136
WITHOUT_CLASSIFICATION	//yySindex 889
WITHOUT_CLASSIFICATION	//yySindex 889
WITHOUT_CLASSIFICATION	//yySindex 889
WITHOUT_CLASSIFICATION	//yySindex 889
WITHOUT_CLASSIFICATION	//yySindex 889
WITHOUT_CLASSIFICATION	//yySindex 889
WITHOUT_CLASSIFICATION	//yyRindex 889
WITHOUT_CLASSIFICATION	//yyRindex 889
WITHOUT_CLASSIFICATION	//yyRindex 889
WITHOUT_CLASSIFICATION	//yyRindex 889
WITHOUT_CLASSIFICATION	//yyRindex 889
WITHOUT_CLASSIFICATION	//yyRindex 889
WITHOUT_CLASSIFICATION	//yyRindex 889
WITHOUT_CLASSIFICATION	//yyGindex 136
WITHOUT_CLASSIFICATION	//yyGindex 136
WITHOUT_CLASSIFICATION	//yyGindex 136
WITHOUT_CLASSIFICATION	//yyGindex 136
WITHOUT_CLASSIFICATION	//Do nothing
WITHOUT_CLASSIFICATION	//Do nothing
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// switch
WITHOUT_CLASSIFICATION	// return result
WITHOUT_CLASSIFICATION	// name
WITHOUT_CLASSIFICATION	// Define System.getProperties() in ENV_JAVA
WITHOUT_CLASSIFICATION	// Accessor methods.
WITHOUT_CLASSIFICATION	// MRI behavior
WITHOUT_CLASSIFICATION	// MRI behavior
WITHOUT_CLASSIFICATION	// MRI behavior
WITHOUT_CLASSIFICATION	// MRI behavior
WITHOUT_CLASSIFICATION	// call getpwent to fail early if unsupported
WITHOUT_CLASSIFICATION	// fall back on env entry for USER
WITHOUT_CLASSIFICATION	// try to read grent to fail fast
WITHOUT_CLASSIFICATION	// define ARGV and $* for this runtime
WITHOUT_CLASSIFICATION	// Version information:
WITHOUT_CLASSIFICATION	// after defn of $stderr as the call may produce warnings
WITHOUT_CLASSIFICATION	// ARGF, $< object
WITHOUT_CLASSIFICATION	// if the environment variables can't be obtained, define an empty ENV
WITHOUT_CLASSIFICATION	// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.
WITHOUT_CLASSIFICATION	//$@ returns nil if $!.backtrace is not an array
WITHOUT_CLASSIFICATION	// include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.
WITHOUT_CLASSIFICATION	// this _is_ legal (when removing an undef)
WITHOUT_CLASSIFICATION	// What we passed to the constructor for method 'path'
WITHOUT_CLASSIFICATION	// ----- Ruby Class Methods ----------------------------------------------------
WITHOUT_CLASSIFICATION	// // CONSTANT TABLE METHODS - pass to delegate //
WITHOUT_CLASSIFICATION	// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?
WITHOUT_CLASSIFICATION	// MRI behavior
WITHOUT_CLASSIFICATION	// ----- Ruby Instance Methods -------------------------------------------------
WITHOUT_CLASSIFICATION	// Make sure any read()s after close fail.
WITHOUT_CLASSIFICATION	// ----- Helper Methods --------------------------------------------------------
WITHOUT_CLASSIFICATION	// try to use POSIX for this first
WITHOUT_CLASSIFICATION	// otherwise fall back on the old way
WITHOUT_CLASSIFICATION	// Proc class
WITHOUT_CLASSIFICATION	// No passed in block, lets check next outer frame for one ('Proc.new')
WITHOUT_CLASSIFICATION	// modify the block with a new backref/lastline-grabbing scope
WITHOUT_CLASSIFICATION	// for future compatibility as constructors move toward not accepting metaclass?
WITHOUT_CLASSIFICATION	//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;
WITHOUT_CLASSIFICATION	// This looks wrong, but it's the way MRI does it.
WITHOUT_CLASSIFICATION	// rb_exc_new3
WITHOUT_CLASSIFICATION	// NOTE: The indicies here match exactly the signal values; do not reorder
WITHOUT_CLASSIFICATION	//registerThreadDumpSignalHandler(runtime);
WITHOUT_CLASSIFICATION	// IOT is also 6
WITHOUT_CLASSIFICATION	// CLD is also 20
WITHOUT_CLASSIFICATION	// RubySignal
WITHOUT_CLASSIFICATION	// ZStream actually *isn't* allocatable
WITHOUT_CLASSIFICATION	// MRI behavior, enforced by tests
WITHOUT_CLASSIFICATION	// it's safe since adler.update doesn't modify the array
WITHOUT_CLASSIFICATION	// MRI behavior: in finished mode, we work as pass-through
WITHOUT_CLASSIFICATION	// SYNC_FLUSH
WITHOUT_CLASSIFICATION	// By default, NO_FLUSH
WITHOUT_CLASSIFICATION	//io.finish();
WITHOUT_CLASSIFICATION	// should invoke seek on realIo
WITHOUT_CLASSIFICATION	// hmm...
WITHOUT_CLASSIFICATION	// Called before any write to make sure the // header is always written before the first bytes
WITHOUT_CLASSIFICATION	// For JDK 1.4 we can use "cal.getTimeInMillis()"
WITHOUT_CLASSIFICATION	// We can just use dt, since it is immutable
WITHOUT_CLASSIFICATION	// float number of seconds
WITHOUT_CLASSIFICATION	// modified to match how hash is calculated in 1.8.2
WITHOUT_CLASSIFICATION	// dump usec, not msec
WITHOUT_CLASSIFICATION	/* Time class methods */
WITHOUT_CLASSIFICATION	// marsaling dumps usec, not msec
WITHOUT_CLASSIFICATION	// MRI accepts additional wday argument which appears to be ignored.
WITHOUT_CLASSIFICATION	// set up with min values and then add to allow rolling over
WITHOUT_CLASSIFICATION	// the instant at which we will ask dtz what the difference between DST and // standard time is
WITHOUT_CLASSIFICATION	// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST
WITHOUT_CLASSIFICATION	// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.
WITHOUT_CLASSIFICATION	/*  ================     *  Utility Methods     *  ================      */
WITHOUT_CLASSIFICATION	/* If the value will fit in a Fixnum, return one of those. */
WITHOUT_CLASSIFICATION	/*  ================     *  Instance Methods     *  ================      */
WITHOUT_CLASSIFICATION	// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)
WITHOUT_CLASSIFICATION	// num2int is also implemented
WITHOUT_CLASSIFICATION	// num2int is also implemented
WITHOUT_CLASSIFICATION	// no bignorm here needed
WITHOUT_CLASSIFICATION	// wow, the only time we can use the java protocol ;)
WITHOUT_CLASSIFICATION	// Pad with a 0
WITHOUT_CLASSIFICATION	// BigInteger required a sign byte in incoming array
WITHOUT_CLASSIFICATION	// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.
WITHOUT_CLASSIFICATION	// We do this b/c make_tmpname might be overridden
WITHOUT_CLASSIFICATION	// ???
WITHOUT_CLASSIFICATION	// PID
WITHOUT_CLASSIFICATION	/*  ================     *  Instance Methods     *  ================      */
WITHOUT_CLASSIFICATION	// elements and trailing nils
WITHOUT_CLASSIFICATION	// Dir::tmpdir
WITHOUT_CLASSIFICATION	// volatile to ensure that initial nil-fill is visible to other threads
WITHOUT_CLASSIFICATION	/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */
WITHOUT_CLASSIFICATION	/* rb_ary_new2     * just allocates the internal array     */
WITHOUT_CLASSIFICATION	/*      * plain internal array assignment     */
WITHOUT_CLASSIFICATION	/*      * plain internal array assignment     */
WITHOUT_CLASSIFICATION	/*      * plain internal array assignment     */
WITHOUT_CLASSIFICATION	/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */
WITHOUT_CLASSIFICATION	/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */
WITHOUT_CLASSIFICATION	// Create global constants and variables
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.
WITHOUT_CLASSIFICATION	// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// 1.9 seems to just do inspect for to_s now
WITHOUT_CLASSIFICATION	// possibly should not in object space
WITHOUT_CLASSIFICATION	// only fill if there actually will remain trailing storage
WITHOUT_CLASSIFICATION	// rb_ary_new4
WITHOUT_CLASSIFICATION	// rb_ary_new4
WITHOUT_CLASSIFICATION	// from DUP_SETUP
WITHOUT_CLASSIFICATION	// If already inspecting, there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	// See [ruby-core:17483]
WITHOUT_CLASSIFICATION	// See [ruby-core:17483]
WITHOUT_CLASSIFICATION	// Satisfy java.util.List interface (for Java integration)
WITHOUT_CLASSIFICATION	// pre-set for the sake of terminating recursive calls
WITHOUT_CLASSIFICATION	/* root fiber */
WITHOUT_CLASSIFICATION	// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.
WITHOUT_CLASSIFICATION	//  See http://www.gzip.org/zlib/rfc-gzip.html
WITHOUT_CLASSIFICATION	// extras flag
WITHOUT_CLASSIFICATION	// Zlib::NO_FLUSH
WITHOUT_CLASSIFICATION	// ...nothing
WITHOUT_CLASSIFICATION	// utility method
WITHOUT_CLASSIFICATION	// Prepare LoadService and load path
WITHOUT_CLASSIFICATION	/*  ================     *  Instance Methods     *  ================      */
WITHOUT_CLASSIFICATION	// flags // 4 bytes of modified time
WITHOUT_CLASSIFICATION	// range_each_func(range, step_i, b, e, args);
WITHOUT_CLASSIFICATION	// 1.8 "include?"
WITHOUT_CLASSIFICATION	// any BigInteger is bigger than Fixnum and we don't have FIXABLE
WITHOUT_CLASSIFICATION	// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal
WITHOUT_CLASSIFICATION	// MRI does it!
WITHOUT_CLASSIFICATION	// won't hurt fixnums
WITHOUT_CLASSIFICATION	// it won't hurt fixnums
WITHOUT_CLASSIFICATION	// RubyClassPathVariable
WITHOUT_CLASSIFICATION	// not to be confused with RubyObject's flags
WITHOUT_CLASSIFICATION	// second argument is allowed, but ignored (MRI)
WITHOUT_CLASSIFICATION	// we are presumably running a precompiled class; load directly
WITHOUT_CLASSIFICATION	// terminate; tryCompile will have printed out an error and we're done
WITHOUT_CLASSIFICATION	// Used for the 'redo' command
WITHOUT_CLASSIFICATION	// do nothing, this iteration restarts
WITHOUT_CLASSIFICATION	// recheck condition
WITHOUT_CLASSIFICATION	// Get the main threadcontext (gets constructed for us)
WITHOUT_CLASSIFICATION	// Construct key services
WITHOUT_CLASSIFICATION	// initialize the root of the class hierarchy completely
WITHOUT_CLASSIFICATION	// Construct the top-level execution frame and scope for the main thread
WITHOUT_CLASSIFICATION	// Initialize all the core classes
WITHOUT_CLASSIFICATION	// Initialize the "dummy" class used as a marker
WITHOUT_CLASSIFICATION	// Initialize Kernel and include into Object
WITHOUT_CLASSIFICATION	// Object is ready, create top self
WITHOUT_CLASSIFICATION	// Pre-create all the core classes potentially referenced during startup
WITHOUT_CLASSIFICATION	// Math depends on all numeric types
WITHOUT_CLASSIFICATION	// depends on IO, FileTest
WITHOUT_CLASSIFICATION	// initialize builtin libraries
WITHOUT_CLASSIFICATION	// Require in all libraries specified on command line
WITHOUT_CLASSIFICATION	// Bootstrap the top of the hierarchy
WITHOUT_CLASSIFICATION	// we try to get the classloader that loaded JRuby, falling back on System
WITHOUT_CLASSIFICATION	// determine spacing
WITHOUT_CLASSIFICATION	/* should alter global state */
WITHOUT_CLASSIFICATION	// For JSR 223 support: see http://scripting.java.net/
WITHOUT_CLASSIFICATION	// use this for JRuby-internal finalizers
WITHOUT_CLASSIFICATION	// this method is for finalizers registered via ObjectSpace
WITHOUT_CLASSIFICATION	// new factory methods ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	//        assert internedName == internedName.intern() : internedName + " is not interned";
WITHOUT_CLASSIFICATION	// Equivalent of Data_Wrap_Struct
WITHOUT_CLASSIFICATION	// default: don't retain
WITHOUT_CLASSIFICATION	// ChannelDescriptors opened by sysopen are cached to avoid collection
WITHOUT_CLASSIFICATION	// Default objects
WITHOUT_CLASSIFICATION	// record separator var, to speed up io ops that use it
WITHOUT_CLASSIFICATION	// former java.lang.System concepts now internalized for MVM
WITHOUT_CLASSIFICATION	// Java support
WITHOUT_CLASSIFICATION	// Parser stats
WITHOUT_CLASSIFICATION	// Compilation
WITHOUT_CLASSIFICATION	// can't read non-standard properties
WITHOUT_CLASSIFICATION	// can't create custom classloaders
WITHOUT_CLASSIFICATION	// mutex that controls modifications of user-defined finalizers
WITHOUT_CLASSIFICATION	// mutex that controls modifications of internal finalizers
WITHOUT_CLASSIFICATION	// A thread pool to use for executing this runtime's Ruby threads
WITHOUT_CLASSIFICATION	// A global object lock for class hierarchy mutations
WITHOUT_CLASSIFICATION	// initial spaces // spaces before "at"
WITHOUT_CLASSIFICATION	// event name // filename // line numbers should be 1-based
WITHOUT_CLASSIFICATION	// The method is intentionally not public, since it typically should // not be used outside of the core.
WITHOUT_CLASSIFICATION	// Note: this field and the following static initializer // must be located be in this order!
WITHOUT_CLASSIFICATION	// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.
WITHOUT_CLASSIFICATION	// quoted-printable
WITHOUT_CLASSIFICATION	// default options
WITHOUT_CLASSIFICATION	// iso-2022-jp
WITHOUT_CLASSIFICATION	// iso-2022-jp
WITHOUT_CLASSIFICATION	// Shift_JIS
WITHOUT_CLASSIFICATION	// Shift_JIS
WITHOUT_CLASSIFICATION	// EUC-JP
WITHOUT_CLASSIFICATION	// EUC-JP
WITHOUT_CLASSIFICATION	// UTF-8
WITHOUT_CLASSIFICATION	// UTF-8
WITHOUT_CLASSIFICATION	// long name option
WITHOUT_CLASSIFICATION	// conversion
WITHOUT_CLASSIFICATION	/*  ================     *  Singleton Methods     *  ================      */
WITHOUT_CLASSIFICATION	// string doesn't share any resources
WITHOUT_CLASSIFICATION	// string has it's own ByteList, but it's pointing to a shared buffer (byte[])
WITHOUT_CLASSIFICATION	// string doesn't have it's own ByteList (values)
WITHOUT_CLASSIFICATION	// ENC_CODERANGE_ASCIIONLY
WITHOUT_CLASSIFICATION	// rb_enc_str_asciionly_p
WITHOUT_CLASSIFICATION	// rb_enc_str_coderange
WITHOUT_CLASSIFICATION	// rb_str_hash_cmp
WITHOUT_CLASSIFICATION	// Deprecated String construction routines
WITHOUT_CLASSIFICATION	// String construction routines by NOT byte[] buffer and NOT making the target String shared 
WITHOUT_CLASSIFICATION	/* rb_str_subseq */
WITHOUT_CLASSIFICATION	// no need to assign encoding, same bytelist shared
WITHOUT_CLASSIFICATION	// if len == 0 then shared empty
WITHOUT_CLASSIFICATION	/* rb_str_cmp_m */
WITHOUT_CLASSIFICATION	// we limit to int because ByteBuffer can only allocate int sizes
WITHOUT_CLASSIFICATION	// // rb_str_buf_append
WITHOUT_CLASSIFICATION	// encoding doesn't have to be copied.
WITHOUT_CLASSIFICATION	// this really needs to be inlined here
WITHOUT_CLASSIFICATION	// must not reallocate
WITHOUT_CLASSIFICATION	// Illegal combination
WITHOUT_CLASSIFICATION	// use 1.8 impl
WITHOUT_CLASSIFICATION	/* RubyString aka rb_string_value */
WITHOUT_CLASSIFICATION	/* bang: true, no match, no substitution */
WITHOUT_CLASSIFICATION	// out of byte range // there will be no match for sure
WITHOUT_CLASSIFICATION	/* len + margin */
WITHOUT_CLASSIFICATION	// block given
WITHOUT_CLASSIFICATION	// block given
WITHOUT_CLASSIFICATION	/* copy pre-match substr */
WITHOUT_CLASSIFICATION	// string given
WITHOUT_CLASSIFICATION	// hash given
WITHOUT_CLASSIFICATION	// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"
WITHOUT_CLASSIFICATION	/* substring longer than string */
WITHOUT_CLASSIFICATION	/* rb_str_substr */
WITHOUT_CLASSIFICATION	// nothing
WITHOUT_CLASSIFICATION	// nothing
WITHOUT_CLASSIFICATION	/* rb_str_splice */
WITHOUT_CLASSIFICATION	// TODO: keep cr // TODO: rb_str_splice_0
WITHOUT_CLASSIFICATION	// keep cr ?
WITHOUT_CLASSIFICATION	// keep cr ?
WITHOUT_CLASSIFICATION	/* wrapped to \0...\0.  search next valid char. */
WITHOUT_CLASSIFICATION	// only this case affects backrefs 
WITHOUT_CLASSIFICATION	// only this case affects backrefs 
WITHOUT_CLASSIFICATION	// modified
WITHOUT_CLASSIFICATION	// modified
WITHOUT_CLASSIFICATION	// 1.8
WITHOUT_CLASSIFICATION	// 1.8
WITHOUT_CLASSIFICATION	// QTRUE
WITHOUT_CLASSIFICATION	/* retrieve last replacer */
WITHOUT_CLASSIFICATION	// Check the length every iteration, since // the block can modify this string.
WITHOUT_CLASSIFICATION	// long size * bits in byte
WITHOUT_CLASSIFICATION	// from encoding, special-casing ASCII* to ASCII
WITHOUT_CLASSIFICATION	// to encoding, same special-casing
WITHOUT_CLASSIFICATION	// create a lightweight thunk
WITHOUT_CLASSIFICATION	// decode from "from" and encode to "to"
WITHOUT_CLASSIFICATION	// create a lightweight thunk
WITHOUT_CLASSIFICATION	//Kernel is the only Module that doesn't need an implementor
WITHOUT_CLASSIFICATION	// no binding given, use (eval)
WITHOUT_CLASSIFICATION	// interned, OK for "fast" methods
WITHOUT_CLASSIFICATION	// File to be loaded by autoload has already been or is being loaded.
WITHOUT_CLASSIFICATION	// rb_cstr_to_dbl case
WITHOUT_CLASSIFICATION	// We break if we know this sleep was explicitly woken up/interrupted
WITHOUT_CLASSIFICATION	// exec process, create IO with process
WITHOUT_CLASSIFICATION	// Zero sleeps forever
WITHOUT_CLASSIFICATION	// file given, use it and force it into binding
WITHOUT_CLASSIFICATION	// Explicit zero in MRI returns immediately
WITHOUT_CLASSIFICATION	// Spurious wakeup-loop
WITHOUT_CLASSIFICATION	// adjusts paths started with '/' or '\\', on windows.
WITHOUT_CLASSIFICATION	// file not given
WITHOUT_CLASSIFICATION	// string to eval
WITHOUT_CLASSIFICATION	// binding given, use binding's file
WITHOUT_CLASSIFICATION	// ?g  | boolean | True if file1 has the \CF{setgid} bit
WITHOUT_CLASSIFICATION	// bomb out, it's not a binding or a proc
WITHOUT_CLASSIFICATION	// Ordering of array traversal not important, just intuitive
WITHOUT_CLASSIFICATION	//Catch active, throw for catch to handle
WITHOUT_CLASSIFICATION	// No catch active for this throw
WITHOUT_CLASSIFICATION	// without full tracing, many events will not fire
WITHOUT_CLASSIFICATION	// ignore if it's not a global var
WITHOUT_CLASSIFICATION	// MRI behavior: use first byte of string value if len > 0
WITHOUT_CLASSIFICATION	// MRI behavior: now check arg count
WITHOUT_CLASSIFICATION	// ?A  | Time    | Last access time for file1
WITHOUT_CLASSIFICATION	// ?b  | boolean | True if file1 is a block device
WITHOUT_CLASSIFICATION	// ?c  | boolean | True if file1 is a character device
WITHOUT_CLASSIFICATION	// ?C  | Time    | Last change time for file1
WITHOUT_CLASSIFICATION	// ?d  | boolean | True if file1 exists and is a directory
WITHOUT_CLASSIFICATION	// ?e  | boolean | True if file1 exists
WITHOUT_CLASSIFICATION	// ?f  | boolean | True if file1 exists and is a regular file
WITHOUT_CLASSIFICATION	// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group
WITHOUT_CLASSIFICATION	// ?k  | boolean | True if file1 exists and has the sticky bit set
WITHOUT_CLASSIFICATION	// ?M  | Time    | Last modification time for file1
WITHOUT_CLASSIFICATION	// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid
WITHOUT_CLASSIFICATION	// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 
WITHOUT_CLASSIFICATION	// ?p  | boolean | True if file1 exists and is a fifo
WITHOUT_CLASSIFICATION	// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller
WITHOUT_CLASSIFICATION	// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil
WITHOUT_CLASSIFICATION	// ?S  | boolean | True if file1 exists and is a socket
WITHOUT_CLASSIFICATION	// ?u  | boolean | True if file1 has the setuid bit set
WITHOUT_CLASSIFICATION	// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid
WITHOUT_CLASSIFICATION	// ?X  | boolean | True if file1 exists and is executable by the real uid/gid
WITHOUT_CLASSIFICATION	// ?z  | boolean | True if file1 exists and has a zero length
WITHOUT_CLASSIFICATION	// ?=  | boolean | True if the modification times of file1 and file2 are equal
WITHOUT_CLASSIFICATION	// ?<  | boolean | True if the modification time of file1 is prior to that of file2
WITHOUT_CLASSIFICATION	// ?>  | boolean | True if the modification time of file1 is after that of file2
WITHOUT_CLASSIFICATION	// ?-  | boolean | True if file1 and file2 are identical
WITHOUT_CLASSIFICATION	// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	// Error info is per-thread
WITHOUT_CLASSIFICATION	// init errorInfo to nil
WITHOUT_CLASSIFICATION	// if we're already aborting, we can receive no further mail
WITHOUT_CLASSIFICATION	// If this thread is sleeping or stopped, wake it
WITHOUT_CLASSIFICATION	// new interrupt, to hopefully wake it out of any blocking IO
WITHOUT_CLASSIFICATION	// set to default thread group
WITHOUT_CLASSIFICATION	// set to default thread group
WITHOUT_CLASSIFICATION	// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately
WITHOUT_CLASSIFICATION	// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately
WITHOUT_CLASSIFICATION	// for Thread::start, which does not call the subclass's initialize
WITHOUT_CLASSIFICATION	// JRUBY-3568, inherit threadgroup or use default
WITHOUT_CLASSIFICATION	// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil
WITHOUT_CLASSIFICATION	// If the target thread is sleeping or stopped, wake it
WITHOUT_CLASSIFICATION	// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.
WITHOUT_CLASSIFICATION	// attempt to decriticalize all if we're the critical thread
WITHOUT_CLASSIFICATION	// not valid for "dead" state
WITHOUT_CLASSIFICATION	// If the killee thread is the same as the killer thread, just die
WITHOUT_CLASSIFICATION	// check for thread events, in case we've been woken up to die
WITHOUT_CLASSIFICATION	// check for thread events, in case we've been woken up to die
WITHOUT_CLASSIFICATION	// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...
WITHOUT_CLASSIFICATION	// can't select, just have to do a blocking call
WITHOUT_CLASSIFICATION	// compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	// Create Constants class
WITHOUT_CLASSIFICATION	// Create constants for open flags
WITHOUT_CLASSIFICATION	// Strip off the O_ prefix, so they become File::RDONLY, and so on
WITHOUT_CLASSIFICATION	// Create constants for flock
WITHOUT_CLASSIFICATION	// File::Constants module is included in IO.
WITHOUT_CLASSIFICATION	// Make sure any existing lock is released before we try and close the file
WITHOUT_CLASSIFICATION	// null channel always succeeds for all locking operations
WITHOUT_CLASSIFICATION	// Paths which end in "/" or "\\" must be stripped off.
WITHOUT_CLASSIFICATION	// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.
WITHOUT_CLASSIFICATION	// Return false here
WITHOUT_CLASSIFICATION	// Return false here
WITHOUT_CLASSIFICATION	// We're not actually a real file, so we can't flock
WITHOUT_CLASSIFICATION	// Should we do anything?
WITHOUT_CLASSIFICATION	/* File class methods */
WITHOUT_CLASSIFICATION	// MRI-compatible basename handling for windows drive letter paths
WITHOUT_CLASSIFICATION	// strip c: away from relative-pathed name
WITHOUT_CLASSIFICATION	// C:\ is returned unchanged
WITHOUT_CLASSIFICATION	// -1 no match; 0 it is dot file not extension
WITHOUT_CLASSIFICATION	// trim trailing slashes
WITHOUT_CLASSIFICATION	// Dot is not at beginning and not at end of filename. 
WITHOUT_CLASSIFICATION	// Handle ~user paths 
WITHOUT_CLASSIFICATION	// compensate for missing slash after drive letter on windows
WITHOUT_CLASSIFICATION	// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")
WITHOUT_CLASSIFICATION	// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.
WITHOUT_CLASSIFICATION	// No directory delimeter.  Rest of string is username
WITHOUT_CLASSIFICATION	// If there's a second argument, it's the path to which the first  // argument is relative.
WITHOUT_CLASSIFICATION	// Handle ~user paths.
WITHOUT_CLASSIFICATION	// If there's no second argument, simply use the working directory  // of the runtime.
WITHOUT_CLASSIFICATION	// Find out which string to check.
WITHOUT_CLASSIFICATION	// Single '~' as whole path to expand
WITHOUT_CLASSIFICATION	// Count number of extra slashes in the beginning of the string.
WITHOUT_CLASSIFICATION	// '~user/...' as path to expand
WITHOUT_CLASSIFICATION	// '~/...' as path to expand
WITHOUT_CLASSIFICATION	// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.
WITHOUT_CLASSIFICATION	// If there are N slashes, then we want N-1.
WITHOUT_CLASSIFICATION	// no canonical path yet or length is zero, and we have a / followed by a dot...
WITHOUT_CLASSIFICATION	// we don't have another slash after this, so replace /. with /
WITHOUT_CLASSIFICATION	// we do have another slash; omit both / and . (JRUBY-1606)
WITHOUT_CLASSIFICATION	// do nothing, we should not delete the drive letter
WITHOUT_CLASSIFICATION	/* rb: check_modifiable */
WITHOUT_CLASSIFICATION	/* rb: readable */
WITHOUT_CLASSIFICATION	// rename is successful
WITHOUT_CLASSIFICATION	// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 
WITHOUT_CLASSIFICATION	// try to rename one more time
WITHOUT_CLASSIFICATION	// Can we produce IOError which bypasses a close?
WITHOUT_CLASSIFICATION	// Fast path since JNA stat is about 10x slower than this
WITHOUT_CLASSIFICATION	// RubyContinuation
WITHOUT_CLASSIFICATION	/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */
WITHOUT_CLASSIFICATION	// 16 ?
WITHOUT_CLASSIFICATION	// generation count for O(1) clears
WITHOUT_CLASSIFICATION	// size + 1;
WITHOUT_CLASSIFICATION	// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen
WITHOUT_CLASSIFICATION	// ------------------------------
WITHOUT_CLASSIFICATION	// ------------------------------
WITHOUT_CLASSIFICATION	// put implementation
WITHOUT_CLASSIFICATION	// get implementation
WITHOUT_CLASSIFICATION	// specialized for value
WITHOUT_CLASSIFICATION	// delete implementation
WITHOUT_CLASSIFICATION	// n.b. we need to recompute the hash in case the key object was modified
WITHOUT_CLASSIFICATION	/* ============================     * End of hash internals     * ============================     */
WITHOUT_CLASSIFICATION	/*  ================     *  Instance Methods     *  ================     */
WITHOUT_CLASSIFICATION	// update the hash value
WITHOUT_CLASSIFICATION	// other hash does not contain key
WITHOUT_CLASSIFICATION	// rb_yield_values(2,...) equivalent
WITHOUT_CLASSIFICATION	// Satisfy java.util.Set interface (for Java integration)
WITHOUT_CLASSIFICATION	// remain where we are
WITHOUT_CLASSIFICATION	// We use file test since it is faster than a stat; also euid == uid in Java always
WITHOUT_CLASSIFICATION	// default: don't retain
WITHOUT_CLASSIFICATION	// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted
WITHOUT_CLASSIFICATION	// Not exposed by filetest, but so similiar in nature that it is stored here
WITHOUT_CLASSIFICATION	// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.
WITHOUT_CLASSIFICATION	// first try as directory
WITHOUT_CLASSIFICATION	// next as regular file
WITHOUT_CLASSIFICATION	// We only want IO objects with valid streams (better to error now). 
WITHOUT_CLASSIFICATION	// NIO-based
WITHOUT_CLASSIFICATION	// NIO-based
WITHOUT_CLASSIFICATION	// Stream-based
WITHOUT_CLASSIFICATION	// special constructor that accepts stream, not channel
WITHOUT_CLASSIFICATION	/*     * We use FILE versus IO to match T_FILE in MRI.     */
WITHOUT_CLASSIFICATION	// Constants for seek
WITHOUT_CLASSIFICATION	// confirm we're not reopening self's channel
WITHOUT_CLASSIFICATION	// check if we're a stdio IO, and ensure we're not badly mutilated
WITHOUT_CLASSIFICATION	// dup2 new fd into self to preserve fileno and references to it
WITHOUT_CLASSIFICATION	// re-register, since fileno points at something new now
WITHOUT_CLASSIFICATION	// re-register the descriptor
WITHOUT_CLASSIFICATION	// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler
WITHOUT_CLASSIFICATION	// re-register
WITHOUT_CLASSIFICATION	// A potentially previously close IO is being 'reopened'.
WITHOUT_CLASSIFICATION	/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */
WITHOUT_CLASSIFICATION	// loop until we see the nth separator char
WITHOUT_CLASSIFICATION	// if we hit EOF or reached limit then we're done
WITHOUT_CLASSIFICATION	// this is for a range check, near as I can tell
WITHOUT_CLASSIFICATION	// IO class methods.
WITHOUT_CLASSIFICATION	// use original modes
WITHOUT_CLASSIFICATION	// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).
WITHOUT_CLASSIFICATION	// redundant, done above as well
WITHOUT_CLASSIFICATION	// MRI behavior: swallow StandardErorrs
WITHOUT_CLASSIFICATION	// -1 == don't set permissions
WITHOUT_CLASSIFICATION	// isRetained=true
WITHOUT_CLASSIFICATION	// This appears to be some windows-only mode.  On a java platform this is a no-op
WITHOUT_CLASSIFICATION	// if not sync, we switch to write buffered mode
WITHOUT_CLASSIFICATION	/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */
WITHOUT_CLASSIFICATION	//Everything written
WITHOUT_CLASSIFICATION	//            return len - n;
WITHOUT_CLASSIFICATION	// Claims conversion is done via 'to_s' in docs.
WITHOUT_CLASSIFICATION	// Of course this isn't particularly useful.
WITHOUT_CLASSIFICATION	// Must be back on first line on rewind.
WITHOUT_CLASSIFICATION	// Register the new descriptor
WITHOUT_CLASSIFICATION	// cleanup, raising errors if any
WITHOUT_CLASSIFICATION	// hmmmm
WITHOUT_CLASSIFICATION	// I believe Ruby bails out with a "bug" if closing fails
WITHOUT_CLASSIFICATION	// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!
WITHOUT_CLASSIFICATION	// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.
WITHOUT_CLASSIFICATION	// Length to read
WITHOUT_CLASSIFICATION	// String/Buffer to read it into
WITHOUT_CLASSIFICATION	// cryptic for the uninitiated...
WITHOUT_CLASSIFICATION	// select until read is ready
WITHOUT_CLASSIFICATION	//        ByteList buffer = null;
WITHOUT_CLASSIFICATION	//            buffer = str.getByteList();
WITHOUT_CLASSIFICATION	// READ_CHECK from MRI io.c
WITHOUT_CLASSIFICATION	/* rb: writable */
WITHOUT_CLASSIFICATION	// READ_CHECK from MRI io.c
WITHOUT_CLASSIFICATION	// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...
WITHOUT_CLASSIFICATION	// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);
WITHOUT_CLASSIFICATION	// truncate buffer string to zero, if provided
WITHOUT_CLASSIFICATION	// TODO: READ_CHECK from MRI
WITHOUT_CLASSIFICATION	/* class methods for IO */
WITHOUT_CLASSIFICATION	// save blocking state
WITHOUT_CLASSIFICATION	// write
WITHOUT_CLASSIFICATION	// Java's select doesn't do anything about this, so we leave it be.
WITHOUT_CLASSIFICATION	// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes
WITHOUT_CLASSIFICATION	// FIXME: process options
WITHOUT_CLASSIFICATION	// Enebo: annotation processing forced me to do pangea method here...
WITHOUT_CLASSIFICATION	// NIO based pipe
WITHOUT_CLASSIFICATION	// not using remove(Object) here to avoid the equals() call
WITHOUT_CLASSIFICATION	// raise will also wake the thread from selection
WITHOUT_CLASSIFICATION	/* may need to handle ENC_CODERANGE_BROKEN */
WITHOUT_CLASSIFICATION	// TODO: rb_usascii_str_new2
WITHOUT_CLASSIFICATION	// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.
WITHOUT_CLASSIFICATION	// The class of this object
WITHOUT_CLASSIFICATION	// zeroed by jvm
WITHOUT_CLASSIFICATION	//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);
WITHOUT_CLASSIFICATION	// JRUBY-4113: callers should not call setTaint on immediate objects
WITHOUT_CLASSIFICATION	// rb_class_boot
WITHOUT_CLASSIFICATION	/* 6:tags 16:addr 1:eos */
WITHOUT_CLASSIFICATION	// 1.9 rb_check_to_integer
WITHOUT_CLASSIFICATION	// for interface impls
WITHOUT_CLASSIFICATION	// We're cloning ourselves, so we know the result should be a RubyObject
WITHOUT_CLASSIFICATION	// Methods of the Object class (rb_obj_*):
WITHOUT_CLASSIFICATION	// can't use -v and stdin
WITHOUT_CLASSIFICATION	// include its parent (and in turn that module's parents)
WITHOUT_CLASSIFICATION	// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.
WITHOUT_CLASSIFICATION	// // COMMON VARIABLE METHODS //
WITHOUT_CLASSIFICATION	// // INTERNAL VARIABLE METHODS //
WITHOUT_CLASSIFICATION	// // INSTANCE VARIABLE API METHODS //
WITHOUT_CLASSIFICATION	// Struct methods
WITHOUT_CLASSIFICATION	//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);
WITHOUT_CLASSIFICATION	// define access methods.
WITHOUT_CLASSIFICATION	// if we are storing a name as well, index is one too high for values
WITHOUT_CLASSIFICATION	// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.
WITHOUT_CLASSIFICATION	// For binding purposes on the newly created struct types
WITHOUT_CLASSIFICATION	// OBJ_INFECT        
WITHOUT_CLASSIFICATION	// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()
WITHOUT_CLASSIFICATION	// Execute iterateMethod again.
WITHOUT_CLASSIFICATION	/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */
WITHOUT_CLASSIFICATION	// Atomic ?
WITHOUT_CLASSIFICATION	// Atomic ?
WITHOUT_CLASSIFICATION	// MUST NOT be used across threads
WITHOUT_CLASSIFICATION	// superClass may be null.
WITHOUT_CLASSIFICATION	// Containing class...The parent of Object is null. Object should always be last in chain.
WITHOUT_CLASSIFICATION	// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.
WITHOUT_CLASSIFICATION	// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 
WITHOUT_CLASSIFICATION	// update superclass reference
WITHOUT_CLASSIFICATION	// Make sure the module we include does not already exist
WITHOUT_CLASSIFICATION	// MRI checks all types first:
WITHOUT_CLASSIFICATION	// we need full traces, use default (slow) populator
WITHOUT_CLASSIFICATION	// module/singleton methods are all defined public
WITHOUT_CLASSIFICATION	// See if module is in chain...Cannot match against itself so start at superClass.
WITHOUT_CLASSIFICATION	// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.
WITHOUT_CLASSIFICATION	// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway
WITHOUT_CLASSIFICATION	// update all hierarchies into which this module has been included
WITHOUT_CLASSIFICATION	// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.
WITHOUT_CLASSIFICATION	// need to skip IncludedModuleWrappers
WITHOUT_CLASSIFICATION	// superClazz = null;
WITHOUT_CLASSIFICATION	// reopen a java class
WITHOUT_CLASSIFICATION	// This method is intended only for defining new modules in Ruby code
WITHOUT_CLASSIFICATION	// reopen a java module
WITHOUT_CLASSIFICATION	//FIXME warning
WITHOUT_CLASSIFICATION	// FIXME warning
WITHOUT_CLASSIFICATION	// a normal block passed to define_method changes to do arity checking; make it a lambda
WITHOUT_CLASSIFICATION	// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope
WITHOUT_CLASSIFICATION	// just using required is broken...but no more broken than before zsuper refactoring
WITHOUT_CLASSIFICATION	// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.
WITHOUT_CLASSIFICATION	// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	// MRI error message says Class, even though Module is ok 
WITHOUT_CLASSIFICATION	// scan class hierarchy for module
WITHOUT_CLASSIFICATION	/* Module class methods */
WITHOUT_CLASSIFICATION	// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).
WITHOUT_CLASSIFICATION	// next in hierarchy is an included version of the module we're attempting, // so we skip including it
WITHOUT_CLASSIFICATION	// if we haven't encountered a real superclass, use the found module as the new inclusion point
WITHOUT_CLASSIFICATION	// build a list of all modules to consider for inclusion
WITHOUT_CLASSIFICATION	// if the insertion point is a class, update subclass lists
WITHOUT_CLASSIFICATION	// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships
WITHOUT_CLASSIFICATION	// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //
WITHOUT_CLASSIFICATION	// ////////////////// CONSTANT RUBY METHODS //////////////// //
WITHOUT_CLASSIFICATION	// Note: includes part of fix for JRUBY-1339
WITHOUT_CLASSIFICATION	// ////////////////// CLASS VARIABLE API METHODS //////////////// //
WITHOUT_CLASSIFICATION	// Wrong Parameter ?
WITHOUT_CLASSIFICATION	// not actually called anywhere (all known uses call the fast version)
WITHOUT_CLASSIFICATION	// Not that is loaded loop around to resolve it next pass
WITHOUT_CLASSIFICATION	// if adding a module under a constant name, set that module's basename to the constant name
WITHOUT_CLASSIFICATION	// Fix for JRUBY-1339 - search hierarchy for constant
WITHOUT_CLASSIFICATION	// returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	// removes and returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	// we can't rename a file while it's open in windows
WITHOUT_CLASSIFICATION	//reopen
WITHOUT_CLASSIFICATION	// ARGF methods
WITHOUT_CLASSIFICATION	//         data.currentFile.callMethod(context, "lineno=", line);
WITHOUT_CLASSIFICATION	// one optional, one required args
WITHOUT_CLASSIFICATION	// one optional and no required args
WITHOUT_CLASSIFICATION	// try to get errno value out of the class
WITHOUT_CLASSIFICATION	// we got a valid errno value
WITHOUT_CLASSIFICATION	// Ensure we're not running on GCJ, since it's not supported and leads to weird errors
WITHOUT_CLASSIFICATION	// print out as a nice Ruby backtrace
WITHOUT_CLASSIFICATION	// produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	// set thread context JRuby classloader here, for the main thread
WITHOUT_CLASSIFICATION	// can't set TC classloader
WITHOUT_CLASSIFICATION	// no script to run, return success below
WITHOUT_CLASSIFICATION	// Skip /usr/bin/env if it's first
WITHOUT_CLASSIFICATION	// Skip any assignments if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	// Skip any commandline args if /usr/bin/env is in play
WITHOUT_CLASSIFICATION	// ignore error
WITHOUT_CLASSIFICATION	// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //
WITHOUT_CLASSIFICATION	// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //
WITHOUT_CLASSIFICATION	// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //
WITHOUT_CLASSIFICATION	// odd
WITHOUT_CLASSIFICATION	// JRubyClient
WITHOUT_CLASSIFICATION	/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */
WITHOUT_CLASSIFICATION	// Make mantissa same sign so we only have one code path.
WITHOUT_CLASSIFICATION	// Increase value to hit lower range.
WITHOUT_CLASSIFICATION	/*     * r = x * 2 ** y     */
WITHOUT_CLASSIFICATION	/*  0! */
WITHOUT_CLASSIFICATION	/*  1! */
WITHOUT_CLASSIFICATION	/*  2! */
WITHOUT_CLASSIFICATION	/*  3! */
WITHOUT_CLASSIFICATION	/*  4! */
WITHOUT_CLASSIFICATION	/*  5! */
WITHOUT_CLASSIFICATION	/*  6! */
WITHOUT_CLASSIFICATION	/*  7! */
WITHOUT_CLASSIFICATION	/*  8! */
WITHOUT_CLASSIFICATION	/*  9! */
WITHOUT_CLASSIFICATION	/* 11! */
WITHOUT_CLASSIFICATION	/* 12! */
WITHOUT_CLASSIFICATION	/* 13! */
WITHOUT_CLASSIFICATION	/* 15! */
WITHOUT_CLASSIFICATION	/* 16! */
WITHOUT_CLASSIFICATION	/* 17! */
WITHOUT_CLASSIFICATION	/* 19! */
WITHOUT_CLASSIFICATION	/* 20! */
WITHOUT_CLASSIFICATION	/* 21! */
WITHOUT_CLASSIFICATION	// Static constants
WITHOUT_CLASSIFICATION	// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators
WITHOUT_CLASSIFICATION	// 2. MRI allows underscores anywhere
WITHOUT_CLASSIFICATION	// 3. MRI ignores the trailing junk
WITHOUT_CLASSIFICATION	// MRI behavior: -0 and +0 are two different things
WITHOUT_CLASSIFICATION	// Java and MRI definitions of modulo are different.
WITHOUT_CLASSIFICATION	// Java and MRI definitions of remainder are the same.
WITHOUT_CLASSIFICATION	// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:
WITHOUT_CLASSIFICATION	// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)
WITHOUT_CLASSIFICATION	// it doesn't handle special cases
WITHOUT_CLASSIFICATION	// TODO: why this: .setResult();
WITHOUT_CLASSIFICATION	// integer division
WITHOUT_CLASSIFICATION	// MRI behavior: "If digits is 0, the result is the same as the / operator."
WITHOUT_CLASSIFICATION	// rounding neccessary
WITHOUT_CLASSIFICATION	// rounding neccessary
WITHOUT_CLASSIFICATION	// Java and MRI definitions of divmod are different.        
WITHOUT_CLASSIFICATION	// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it
WITHOUT_CLASSIFICATION	// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.
WITHOUT_CLASSIFICATION	// ...round to that digit
WITHOUT_CLASSIFICATION	// ...and shift the result back to the left (multiply by 10**(abs(scale)))
WITHOUT_CLASSIFICATION	//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are
WITHOUT_CLASSIFICATION	// sign
WITHOUT_CLASSIFICATION	// significant digits and exponent
WITHOUT_CLASSIFICATION	// normalize the value
WITHOUT_CLASSIFICATION	// base
WITHOUT_CLASSIFICATION	// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.
WITHOUT_CLASSIFICATION	// just in case, add a bit of extra precision
WITHOUT_CLASSIFICATION	// eh?!
WITHOUT_CLASSIFICATION	// Note: #fix has only no-arg form, but truncate allows optional parameter.
WITHOUT_CLASSIFICATION	// General number and precision checking
WITHOUT_CLASSIFICATION	// the requested precision
WITHOUT_CLASSIFICATION	// Proc class
WITHOUT_CLASSIFICATION	//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")
WITHOUT_CLASSIFICATION	// even shift.. // ..floors to 62 or 63 bit BigInteger
WITHOUT_CLASSIFICATION	// 5 -> 2, -5 -> -3 need half a scale more..
WITHOUT_CLASSIFICATION	// ..where 100 -> 10 shifts the scale
WITHOUT_CLASSIFICATION	// Initial x - use double root - multiply by halfBack to unshift - set new scale
WITHOUT_CLASSIFICATION	// x0 ~ sqrt()
WITHOUT_CLASSIFICATION	// for prec 15 root x0 must surely be OK // return small prec roots without iterations
WITHOUT_CLASSIFICATION	// Initial v - the reciprocal // v0 = 1/(2*x)
WITHOUT_CLASSIFICATION	// Collect iteration precisions beforehand
WITHOUT_CLASSIFICATION	// assume nInit = 16 <= prec
WITHOUT_CLASSIFICATION	// The loop of "Square Root by Coupled Newton Iteration"
WITHOUT_CLASSIFICATION	// Increase precision - next iteration supplies n exact digits
WITHOUT_CLASSIFICATION	// Next x                                        // e = d - x^2
WITHOUT_CLASSIFICATION	// x += e*v     ~ sqrt()
WITHOUT_CLASSIFICATION	// root x is ready!
WITHOUT_CLASSIFICATION	// Next v                                        // g = 1 - 2*x*v
WITHOUT_CLASSIFICATION	// v += g*v     ~ 1/2/sqrt()
WITHOUT_CLASSIFICATION	// RubyBigdecimal
WITHOUT_CLASSIFICATION	// c: bind_eval
WITHOUT_CLASSIFICATION	/*  ================     *  Module Methods     *  ================      */
WITHOUT_CLASSIFICATION	// from CommandlineParser
WITHOUT_CLASSIFICATION	// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true
WITHOUT_CLASSIFICATION	// default ClassCache using jitMax as a soft upper bound
WITHOUT_CLASSIFICATION	// Until we get a little more solid on 1.9 support we will only run interpreted mode
WITHOUT_CLASSIFICATION	// Setting the loader needs to reset the class cache
WITHOUT_CLASSIFICATION	// try the normal property first
WITHOUT_CLASSIFICATION	// verify it if it's there
WITHOUT_CLASSIFICATION	// verify it if it's there
WITHOUT_CLASSIFICATION	// try loading from classloader resources
WITHOUT_CLASSIFICATION	// otherwise fall back on system temp location
WITHOUT_CLASSIFICATION	// We require the home directory to be absolute
WITHOUT_CLASSIFICATION	//consume the file name
WITHOUT_CLASSIFICATION	// Specify something that can't separate
WITHOUT_CLASSIFICATION	// try cwd first
WITHOUT_CLASSIFICATION	// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])
WITHOUT_CLASSIFICATION	// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change
WITHOUT_CLASSIFICATION	// @JRubyMethod(name = "complex?")
WITHOUT_CLASSIFICATION	// @JRubyMethod(name = "exact?")
WITHOUT_CLASSIFICATION	// @JRubyMethod(name = "inexact?")
WITHOUT_CLASSIFICATION	// symbol string *must* be interned
WITHOUT_CLASSIFICATION	//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";
WITHOUT_CLASSIFICATION	/* Symbol class methods.     *      */
WITHOUT_CLASSIFICATION	// TODO: 1.9 rb_enc_symname_p
WITHOUT_CLASSIFICATION	// This is needed to unpack stuff
WITHOUT_CLASSIFICATION	// we already confirmed above that length > 0
WITHOUT_CLASSIFICATION	// *must* be power of 2!
WITHOUT_CLASSIFICATION	// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.
WITHOUT_CLASSIFICATION	//            assert internedName == internedName.intern() : internedName + " is not interned";
WITHOUT_CLASSIFICATION	// try lookup again under lock
WITHOUT_CLASSIFICATION	// try lookup again under lock
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// backwards-compatibility, but threadsafe now
WITHOUT_CLASSIFICATION	//  Single node on list
WITHOUT_CLASSIFICATION	// Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	// Clone all remaining nodes
WITHOUT_CLASSIFICATION	// Check the length every iteration, since // the block can modify this string.
WITHOUT_CLASSIFICATION	// we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	// not so backwards-compatible here, but no one should have been // calling this anyway.
WITHOUT_CLASSIFICATION	// Profile
WITHOUT_CLASSIFICATION	//static private final String TRANSLIT = "//translit";
WITHOUT_CLASSIFICATION	// treat start and end as start...end for end >= 0, start..end for end < 0
WITHOUT_CLASSIFICATION	// invalid ranges result in an empty string
WITHOUT_CLASSIFICATION	// Methods of the Nil Class (nil_*):
WITHOUT_CLASSIFICATION	// Has read/write been closed or is it still open for business
WITHOUT_CLASSIFICATION	// Support IO modes that this object was opened with
WITHOUT_CLASSIFICATION	// must let original string know we're modifying, so shared buffers aren't damaged
WITHOUT_CLASSIFICATION	// reset the state
WITHOUT_CLASSIFICATION	// Tainting here if we ever want it. (secure 4)
WITHOUT_CLASSIFICATION	// rb_match_busy
WITHOUT_CLASSIFICATION	//str is frozen
WITHOUT_CLASSIFICATION	// MRI also does a pointer comparison here
WITHOUT_CLASSIFICATION	// JRubyServer
WITHOUT_CLASSIFICATION	// Class.allocate object is not allocatable before it is initialized
WITHOUT_CLASSIFICATION	// boot the Object class 
WITHOUT_CLASSIFICATION	// Methods of the Object class (rb_obj_*):
WITHOUT_CLASSIFICATION	// update superclass reference
WITHOUT_CLASSIFICATION	// undo check
WITHOUT_CLASSIFICATION	// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));
WITHOUT_CLASSIFICATION	// boot the Module and Class classes
WITHOUT_CLASSIFICATION	// this is the only case it might be null here (in MetaClass construction)
WITHOUT_CLASSIFICATION	// use parent's marshal
WITHOUT_CLASSIFICATION	// use parent's marshal
WITHOUT_CLASSIFICATION	// could be pulled down to RubyClass in future // rb_class_boot
WITHOUT_CLASSIFICATION	// remove us from old superclass's child classes
WITHOUT_CLASSIFICATION	// add us to new superclass's child classes
WITHOUT_CLASSIFICATION	// update all subclasses
WITHOUT_CLASSIFICATION	// fields to hold Ruby and RubyClass references
WITHOUT_CLASSIFICATION	// static initializing method
WITHOUT_CLASSIFICATION	// standard constructor that accepts Ruby, RubyClass
WITHOUT_CLASSIFICATION	// no-arg constructor using static references to Ruby and RubyClass
WITHOUT_CLASSIFICATION	// non-signature signature with just IRubyObject
WITHOUT_CLASSIFICATION	// indices for temp values
WITHOUT_CLASSIFICATION	// self // method name
WITHOUT_CLASSIFICATION	// the default allocator
WITHOUT_CLASSIFICATION	// Equivalent of T_DATA
WITHOUT_CLASSIFICATION	// do nothing, leave empty
WITHOUT_CLASSIFICATION	// Double.MAX_EXPONENT since Java 1.6
WITHOUT_CLASSIFICATION	/*  ================     *  Singleton Methods     *  ================      */
WITHOUT_CLASSIFICATION	// Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	// Make sure all arguments are modules before calling the callbacks
WITHOUT_CLASSIFICATION	// MRI extends in order from last to first
WITHOUT_CLASSIFICATION	// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.
WITHOUT_CLASSIFICATION	// write out ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	// rest in ivar count followed by name/value pairs
WITHOUT_CLASSIFICATION	// 0x3fff_ffff // -0x4000_0000
WITHOUT_CLASSIFICATION	// a gotcha
WITHOUT_CLASSIFICATION	// Java / and % are not the same as ruby
WITHOUT_CLASSIFICATION	// A gotcha for Long.MIN_VALUE: value = -value
WITHOUT_CLASSIFICATION	// Piece of mri rb_to_id
WITHOUT_CLASSIFICATION	// Java Doubles are 64 bit long:            
WITHOUT_CLASSIFICATION	// Double.MAX_EXPONENT since Java 1.6            
WITHOUT_CLASSIFICATION	// don't override Numeric#div !
WITHOUT_CLASSIFICATION	// Modelled after c ruby implementation (java /,% not same as ruby)
WITHOUT_CLASSIFICATION	// MRI behavior:
WITHOUT_CLASSIFICATION	// Numeric.equal            
WITHOUT_CLASSIFICATION	// provider is not available
WITHOUT_CLASSIFICATION	// bouncy castle doesn't support algorithm
WITHOUT_CLASSIFICATION	// fall back to system JCA providers
WITHOUT_CLASSIFICATION	// RubyDigest
WITHOUT_CLASSIFICATION	// ENEBO: Can these be fast?
WITHOUT_CLASSIFICATION	// synchronize on the RubyThread for threadgroup updates
WITHOUT_CLASSIFICATION	// we only add live threads
WITHOUT_CLASSIFICATION	// use same ClassIndex as metaclass, since we're technically still of that type
WITHOUT_CLASSIFICATION	// handle everything after -- as arguments to the jruby process
WITHOUT_CLASSIFICATION	// JRubyService
WITHOUT_CLASSIFICATION	// while
WITHOUT_CLASSIFICATION	/* \OOO */
WITHOUT_CLASSIFICATION	// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.
WITHOUT_CLASSIFICATION	// mask off "once" flag
WITHOUT_CLASSIFICATION	// used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	// internal usage (Complex/Rational)
WITHOUT_CLASSIFICATION	// silent ?
WITHOUT_CLASSIFICATION	/* \xHH */
WITHOUT_CLASSIFICATION	/* \M-X, \M-\C-X, \M-\cX */
WITHOUT_CLASSIFICATION	/* \C-X, \C-\M-X */
WITHOUT_CLASSIFICATION	/* \cX, \c\M-X */
WITHOUT_CLASSIFICATION	/* \O, \OO, \OOO or backref */
WITHOUT_CLASSIFICATION	// MBCLEN_NEEDMORE_P
WITHOUT_CLASSIFICATION	// MBCLEN_INVALID_P
WITHOUT_CLASSIFICATION	// Unicode is can be only 21 bits long, int is enough
WITHOUT_CLASSIFICATION	/* Surrogates */
WITHOUT_CLASSIFICATION	// do not load the class if not used
WITHOUT_CLASSIFICATION	/* \0, \0O, \0OO */
WITHOUT_CLASSIFICATION	/* \xHH */
WITHOUT_CLASSIFICATION	/* \C-X, \C-\M-X */
WITHOUT_CLASSIFICATION	/* \M-X, \M-\C-X, \M-\cX */
WITHOUT_CLASSIFICATION	/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */
WITHOUT_CLASSIFICATION	/* \\uHHHH */
WITHOUT_CLASSIFICATION	/* \p{Hiragana} */
WITHOUT_CLASSIFICATION	// inner switch
WITHOUT_CLASSIFICATION	// newInstance here
WITHOUT_CLASSIFICATION	// rb_reg_raise
WITHOUT_CLASSIFICATION	// rb_reg_desc
WITHOUT_CLASSIFICATION	// rb_enc_reg_raise
WITHOUT_CLASSIFICATION	// rb_enc_reg_error_desc
WITHOUT_CLASSIFICATION	// rb_reg_initialize_str
WITHOUT_CLASSIFICATION	// rb_reg_initialize
WITHOUT_CLASSIFICATION	// JRUBY-3625: delay setting backref until the MatchData is completely initialized
WITHOUT_CLASSIFICATION	// rb_reg_expr_str
WITHOUT_CLASSIFICATION	// option_to_str
WITHOUT_CLASSIFICATION	// Don't initialize with class // Don't put in object space and don't taint
WITHOUT_CLASSIFICATION	// args should be before block
WITHOUT_CLASSIFICATION	// args should be at end
WITHOUT_CLASSIFICATION	// minus one more for IRubyObject[]
WITHOUT_CLASSIFICATION	// minus one more for IRubyObject[]
WITHOUT_CLASSIFICATION	// skip anything not related to jruby
WITHOUT_CLASSIFICATION	// start a new populator
WITHOUT_CLASSIFICATION	// check for frame field reads or writes
WITHOUT_CLASSIFICATION	// add all names for this annotation
WITHOUT_CLASSIFICATION	// no annotated methods found, skip
WITHOUT_CLASSIFICATION	// write out a static initializer for frame names, so it only fires once
WITHOUT_CLASSIFICATION	// single method, use normal logic
WITHOUT_CLASSIFICATION	// multimethod, new logic
WITHOUT_CLASSIFICATION	// declared type returns the qualified name without $ for inner classes!!!
WITHOUT_CLASSIFICATION	// inner class, use $ to delimit
WITHOUT_CLASSIFICATION	//                        RubyModule singletonClass = module.getSingletonClass();
WITHOUT_CLASSIFICATION	//                }
WITHOUT_CLASSIFICATION	// fallback on non-pregenerated logic
WITHOUT_CLASSIFICATION	// refresh call adapter, since it matters if this is iter-based or not
WITHOUT_CLASSIFICATION	// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced
WITHOUT_CLASSIFICATION	// attribute set.
WITHOUT_CLASSIFICATION	// element set
WITHOUT_CLASSIFICATION	// If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	// If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	// colon3
WITHOUT_CLASSIFICATION	// Colon3
WITHOUT_CLASSIFICATION	// array created for rescue args doesn't need to be in ObjectSpace.
WITHOUT_CLASSIFICATION	// For b.foo
WITHOUT_CLASSIFICATION	// instance config for the script run
WITHOUT_CLASSIFICATION	// If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	// If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	//RubyModule module = context.getRubyClass();
WITHOUT_CLASSIFICATION	// For 'b.foo'
WITHOUT_CLASSIFICATION	// We define an actual list to get around bug in java integration (1387115)
WITHOUT_CLASSIFICATION	// something in here is used to build up ruby stack trace...
WITHOUT_CLASSIFICATION	// Ruby Grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	// Ruby Grammar productions return plenty of nulls.
WITHOUT_CLASSIFICATION	// do nothing, allow loop to retry
WITHOUT_CLASSIFICATION	// We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	// Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	// never visited, should be fine
WITHOUT_CLASSIFICATION	// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	// The name of the variable
WITHOUT_CLASSIFICATION	// If we have more than one argument, then make sure the array is not ObjectSpaced.
WITHOUT_CLASSIFICATION	// Only in ruby 1.9 methods
WITHOUT_CLASSIFICATION	// Bind 'normal' parameter values to the local scope for this method.
WITHOUT_CLASSIFICATION	// no arg grouping, just use bulk assignment methods
WITHOUT_CLASSIFICATION	// optArgs and restArgs require more work, so isolate them and ArrayList creation here
WITHOUT_CLASSIFICATION	//        arity.checkArity(runtime, argsLength);
WITHOUT_CLASSIFICATION	// no more values to stick in rest arg
WITHOUT_CLASSIFICATION	// set argv from main's args
WITHOUT_CLASSIFICATION	// attribute set.
WITHOUT_CLASSIFICATION	// If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	// The name of the variable
WITHOUT_CLASSIFICATION	// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";
WITHOUT_CLASSIFICATION	// assign given optional arguments to their variables
WITHOUT_CLASSIFICATION	// in-frame EvalState should already have receiver set as self, continue to use it
WITHOUT_CLASSIFICATION	// assign the default values, adding to the end of allArgs
WITHOUT_CLASSIFICATION	// Make sure the appropriate scope has proper size. See JRUBY-2046.
WITHOUT_CLASSIFICATION	// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening
WITHOUT_CLASSIFICATION	// This should never happen past parse, but just bulletproof this just in case
WITHOUT_CLASSIFICATION	// Make a nil node if no body.  Notice this is not part of AST.
WITHOUT_CLASSIFICATION	// 'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	// now used as an interpreter event
WITHOUT_CLASSIFICATION	// never visited, should be ok
WITHOUT_CLASSIFICATION	// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil
WITHOUT_CLASSIFICATION	// JRUBY-530 until case
WITHOUT_CLASSIFICATION	// element set
WITHOUT_CLASSIFICATION	// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	// We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	// Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	// Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	// The name of the variable
WITHOUT_CLASSIFICATION	// The name of the variable
WITHOUT_CLASSIFICATION	// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode
WITHOUT_CLASSIFICATION	//assert !(value instanceof RubyArray)  : "Not an array";
WITHOUT_CLASSIFICATION	// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).
WITHOUT_CLASSIFICATION	// Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	// We could probably also detect if LHS value came out of cache and avoid some of this
WITHOUT_CLASSIFICATION	//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";
WITHOUT_CLASSIFICATION	// add in reverse order
WITHOUT_CLASSIFICATION	// in order to make pragma's noops we set location to a special value
WITHOUT_CLASSIFICATION	// ignore compiler pragmas
WITHOUT_CLASSIFICATION	// We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	// Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	// Store to temp so it does null out on us mid-stream
WITHOUT_CLASSIFICATION	// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	// Make a nil node if no body.  Notice this is not part of AST.
WITHOUT_CLASSIFICATION	// now used as an interpreter event
WITHOUT_CLASSIFICATION	// No actual test, so do 'when' if when expression is not nil
WITHOUT_CLASSIFICATION	// save entering the try if there's nothing to ensure
WITHOUT_CLASSIFICATION	// For 'foo'
WITHOUT_CLASSIFICATION	// For 'foo'
WITHOUT_CLASSIFICATION	// admittedly inefficient
WITHOUT_CLASSIFICATION	// JRUBY-530, while case
WITHOUT_CLASSIFICATION	// What static scoping relationship exists when it comes into being.
WITHOUT_CLASSIFICATION	// let RescuedBlock continue
WITHOUT_CLASSIFICATION	// just rethrow
WITHOUT_CLASSIFICATION	// just rethrow
WITHOUT_CLASSIFICATION	// clear exception when handled or retried
WITHOUT_CLASSIFICATION	// clear exception when handled or retried
WITHOUT_CLASSIFICATION	// no takers; bubble up
WITHOUT_CLASSIFICATION	// no takers; bubble up
WITHOUT_CLASSIFICATION	// Execute rescue block
WITHOUT_CLASSIFICATION	// If no exception is thrown execute else block
WITHOUT_CLASSIFICATION	// index of variable for this arg
WITHOUT_CLASSIFICATION	// only a marker interface
WITHOUT_CLASSIFICATION	// don't attempt to coerce to array, just wrap and return
WITHOUT_CLASSIFICATION	// pragmas
WITHOUT_CLASSIFICATION	// The method also needs a scope, do both
WITHOUT_CLASSIFICATION	// We're doing normal framed compilation or the method needs a frame
WITHOUT_CLASSIFICATION	// The method doesn't need a scope or static scope; frame only
WITHOUT_CLASSIFICATION	// The method doesn't need a scope, but has static scope needs; use a dummy scope
WITHOUT_CLASSIFICATION	// Proc.new needs the caller's block to instantiate a proc
WITHOUT_CLASSIFICATION	// check for Proc.new, an especially magic method
WITHOUT_CLASSIFICATION	// long, slow way causes disabling
WITHOUT_CLASSIFICATION	// ok, we have fast paths
WITHOUT_CLASSIFICATION	// ok, we have fast paths
WITHOUT_CLASSIFICATION	// long, slow way causes disabling for defined
WITHOUT_CLASSIFICATION	// we set scope-aware to true to force heap-based locals
WITHOUT_CLASSIFICATION	// Because Regexp#=== sets backref, we have to make this backref-aware
WITHOUT_CLASSIFICATION	// encountered a node we don't recognize, set everything to true to disable optz
WITHOUT_CLASSIFICATION	// only arrays that are "lightweight" are being used as args arrays
WITHOUT_CLASSIFICATION	// otherwise, it's a literal array
WITHOUT_CLASSIFICATION	// use array as-is, it's a literal array
WITHOUT_CLASSIFICATION	// unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	// compile first node as non-expr and then second node
WITHOUT_CLASSIFICATION	// last node, either !instanceof WhenNode or null, is the else
WITHOUT_CLASSIFICATION	// compile first node only
WITHOUT_CLASSIFICATION	// splatted when, can't do it yet
WITHOUT_CLASSIFICATION	// if __send__ with a literal symbol, compile it as a direct fcall
WITHOUT_CLASSIFICATION	// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.
WITHOUT_CLASSIFICATION	// aggregate when nodes into a list, unfortunately, this is no
WITHOUT_CLASSIFICATION	// one arg but it's an array, treat it as a proper array
WITHOUT_CLASSIFICATION	// can't do it
WITHOUT_CLASSIFICATION	// otherwise, use normal args compiler
WITHOUT_CLASSIFICATION	// colon3, assign in Object
WITHOUT_CLASSIFICATION	// colon3, assign in Object
WITHOUT_CLASSIFICATION	// these are all simple cases that don't require the heavier defined logic
WITHOUT_CLASSIFICATION	//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]
WITHOUT_CLASSIFICATION	//[]
WITHOUT_CLASSIFICATION	//[]
WITHOUT_CLASSIFICATION	//          context.swapValues(); //context.consumeCurrentValue();
WITHOUT_CLASSIFICATION	//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]
WITHOUT_CLASSIFICATION	//[RubyClass]
WITHOUT_CLASSIFICATION	//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]
WITHOUT_CLASSIFICATION	// if root of method is rescue, compile as a light rescue
WITHOUT_CLASSIFICATION	// inspect body and args
WITHOUT_CLASSIFICATION	// inspect body and args
WITHOUT_CLASSIFICATION	// check args first, since body inspection can depend on args
WITHOUT_CLASSIFICATION	// if root of method is rescue, compile as light rescue
WITHOUT_CLASSIFICATION	// invoke run with threadcontext and topself
WITHOUT_CLASSIFICATION	//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]
WITHOUT_CLASSIFICATION	//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]
WITHOUT_CLASSIFICATION	//[RubyClass] //[]
WITHOUT_CLASSIFICATION	//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]
WITHOUT_CLASSIFICATION	//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]
WITHOUT_CLASSIFICATION	// no args, do not pass args processor
WITHOUT_CLASSIFICATION	// create the closure class and instantiate it
WITHOUT_CLASSIFICATION	// create the closure class and instantiate it
WITHOUT_CLASSIFICATION	// not an expression, only compile the elements
WITHOUT_CLASSIFICATION	// not an expression, only compile the elements
WITHOUT_CLASSIFICATION	// not an expression, only compile the elements
WITHOUT_CLASSIFICATION	// create the closure class and instantiate it
WITHOUT_CLASSIFICATION	// create the closure class and instantiate it
WITHOUT_CLASSIFICATION	// no args, do not pass args processor
WITHOUT_CLASSIFICATION	// force heap-scope behavior, since it uses parent's scope
WITHOUT_CLASSIFICATION	// always false or nil
WITHOUT_CLASSIFICATION	// optimizations if we know ahead of time it will always be true or false
WITHOUT_CLASSIFICATION	// normal
WITHOUT_CLASSIFICATION	// compile condition as non-expr and just compile "then" body
WITHOUT_CLASSIFICATION	// need the array, use unoptz version
WITHOUT_CLASSIFICATION	// just push nil for pragmas
WITHOUT_CLASSIFICATION	// "assignment" means the value is already on the stack
WITHOUT_CLASSIFICATION	// compile first node only
WITHOUT_CLASSIFICATION	// create the closure class and instantiate it
WITHOUT_CLASSIFICATION	// create the closure class and instantiate it
WITHOUT_CLASSIFICATION	// eval new value, call operator on old value, and assign
WITHOUT_CLASSIFICATION	// try optz version
WITHOUT_CLASSIFICATION	// sizes must match
WITHOUT_CLASSIFICATION	// expect value to be an array of nodes
WITHOUT_CLASSIFICATION	// normal items at the "head" of the masgn
WITHOUT_CLASSIFICATION	// head must not be null and there must be no "args" (like *arg)
WITHOUT_CLASSIFICATION	// "head" must have no non-trivial assigns (array groupings, basically)
WITHOUT_CLASSIFICATION	// only supports simple parallel assignment of up to 10 values to the same number of assignees
WITHOUT_CLASSIFICATION	// perform assignment for the next node
WITHOUT_CLASSIFICATION	// if we get here, no optz cases work; fall back on unoptz.
WITHOUT_CLASSIFICATION	//RedoNode redoNode = (RedoNode)node;
WITHOUT_CLASSIFICATION	// done processing args
WITHOUT_CLASSIFICATION	// all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	// assign to appropriate variable
WITHOUT_CLASSIFICATION	// if arity 1, just compile the one element to save us the array cost
WITHOUT_CLASSIFICATION	// [recv]
WITHOUT_CLASSIFICATION	// [recv]
WITHOUT_CLASSIFICATION	// [recv]
WITHOUT_CLASSIFICATION	// compile into array
WITHOUT_CLASSIFICATION	// compile first node as non-expr and compile second node
WITHOUT_CLASSIFICATION	// check if it's an immediate, and don't outline
WITHOUT_CLASSIFICATION	// condition is always true, just compile it and not body
WITHOUT_CLASSIFICATION	// force static scope to claim restarg at 0, so it only implements the [] version of __file__
WITHOUT_CLASSIFICATION	// create method for toplevel of script
WITHOUT_CLASSIFICATION	// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long
WITHOUT_CLASSIFICATION	// send it along as arity-specific, we don't need the array
WITHOUT_CLASSIFICATION	// single-statement body, just compile it
WITHOUT_CLASSIFICATION	// leave as a normal array
WITHOUT_CLASSIFICATION	// This method has JITed already or has been abandoned. Bail out.
WITHOUT_CLASSIFICATION	// The cache is full. Abandon JIT for this method and bail out.
WITHOUT_CLASSIFICATION	// check args first, since body inspection can depend on args
WITHOUT_CLASSIFICATION	// create the closure class and instantiate it
WITHOUT_CLASSIFICATION	// create the closure class and instantiate it
WITHOUT_CLASSIFICATION	// no args, do not pass args processor
WITHOUT_CLASSIFICATION	// need the array, use unoptz version
WITHOUT_CLASSIFICATION	// try optz version
WITHOUT_CLASSIFICATION	// expect value to be an array of nodes
WITHOUT_CLASSIFICATION	// head must not be null and there must be no "args" (like *arg)
WITHOUT_CLASSIFICATION	// sizes must match
WITHOUT_CLASSIFICATION	// "head" must have no non-trivial assigns (array groupings, basically)
WITHOUT_CLASSIFICATION	// if we get here, no optz cases work; fall back on unoptz.
WITHOUT_CLASSIFICATION	// perform assignment for the next node
WITHOUT_CLASSIFICATION	// done processing args
WITHOUT_CLASSIFICATION	// Check if the method has been explicitly excluded
WITHOUT_CLASSIFICATION	// class could not be found nor generated; give up on JIT and bail out
WITHOUT_CLASSIFICATION	// successfully got back a jitted method
WITHOUT_CLASSIFICATION	// finally, grab the script
WITHOUT_CLASSIFICATION	// logEvery n methods based on configuration
WITHOUT_CLASSIFICATION	// Time the compilation
WITHOUT_CLASSIFICATION	// we have a body, do a full-on method
WITHOUT_CLASSIFICATION	// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop
WITHOUT_CLASSIFICATION	// if we haven't already decided on a do-nothing call
WITHOUT_CLASSIFICATION	// only supports simple parallel assignment of up to 4 values to the same number of assignees
WITHOUT_CLASSIFICATION	// normal items at the front or back of the masgn
WITHOUT_CLASSIFICATION	// set up a local IRuby variable
WITHOUT_CLASSIFICATION	// grab nil for local variables
WITHOUT_CLASSIFICATION	// visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	// return last value from execution
WITHOUT_CLASSIFICATION	// end of variable scope
WITHOUT_CLASSIFICATION	// method is done, declare all variables
WITHOUT_CLASSIFICATION	// Define the annotation for the method
WITHOUT_CLASSIFICATION	// check arity in the variable-arity version
WITHOUT_CLASSIFICATION	// load block from [] version of method
WITHOUT_CLASSIFICATION	// normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	// in method body with no containing loop, issue jump error // load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	// in method body with no containing loop, issue jump error // load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	// value is already on stack, save it for later
WITHOUT_CLASSIFICATION	// receiver first, so we know which call site to use
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*arg0*/
WITHOUT_CLASSIFICATION	/*arg0*/
WITHOUT_CLASSIFICATION	/*arg0*/
WITHOUT_CLASSIFICATION	/*arg1*/
WITHOUT_CLASSIFICATION	/*arg1*/
WITHOUT_CLASSIFICATION	/*arg2*/
WITHOUT_CLASSIFICATION	/*args*/
WITHOUT_CLASSIFICATION	// receiver first, so we know which call site to use
WITHOUT_CLASSIFICATION	// select appropriate call site // dup receiver // load self
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*arg0*/
WITHOUT_CLASSIFICATION	/*arg0*/
WITHOUT_CLASSIFICATION	/*arg1*/
WITHOUT_CLASSIFICATION	/*args*/
WITHOUT_CLASSIFICATION	// get call site and thread context
WITHOUT_CLASSIFICATION	// get call site and thread context
WITHOUT_CLASSIFICATION	// evaluate and save receiver and args
WITHOUT_CLASSIFICATION	// evaluate and save receiver and args
WITHOUT_CLASSIFICATION	// invoke
WITHOUT_CLASSIFICATION	// invoke
WITHOUT_CLASSIFICATION	// check if it's true, ending if so
WITHOUT_CLASSIFICATION	// not true, eval value and assign
WITHOUT_CLASSIFICATION	// not true, eval value and assign
WITHOUT_CLASSIFICATION	// thread context, receiver and original args
WITHOUT_CLASSIFICATION	// thread context, receiver and original args
WITHOUT_CLASSIFICATION	// eval value for assignment
WITHOUT_CLASSIFICATION	// call site
WITHOUT_CLASSIFICATION	// call site
WITHOUT_CLASSIFICATION	// depending on size of original args, call appropriate utility method
WITHOUT_CLASSIFICATION	// check if it's true, ending if not
WITHOUT_CLASSIFICATION	// eval value and save it
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	// depending on size of original args, call appropriate utility method
WITHOUT_CLASSIFICATION	// receiver, args, result, value
WITHOUT_CLASSIFICATION	// [adapter, tc]
WITHOUT_CLASSIFICATION	// [adapter, tc]
WITHOUT_CLASSIFICATION	// [adapter, tc]
WITHOUT_CLASSIFICATION	// super uses current block if none given
WITHOUT_CLASSIFICATION	// args
WITHOUT_CLASSIFICATION	// block
WITHOUT_CLASSIFICATION	// block
WITHOUT_CLASSIFICATION	// no args, no block
WITHOUT_CLASSIFICATION	// no args, with block
WITHOUT_CLASSIFICATION	// with args, no block
WITHOUT_CLASSIFICATION	// with args, with block
WITHOUT_CLASSIFICATION	// adapter, tc, recv, args{0,1}, block{0,1}]
WITHOUT_CLASSIFICATION	// pop extra attr value
WITHOUT_CLASSIFICATION	// pop extra attr value
WITHOUT_CLASSIFICATION	// arg and receiver already present on the stack
WITHOUT_CLASSIFICATION	/*arg*/
WITHOUT_CLASSIFICATION	/*arg*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	// [adapter, tc]
WITHOUT_CLASSIFICATION	// args
WITHOUT_CLASSIFICATION	// block
WITHOUT_CLASSIFICATION	// no args, no block
WITHOUT_CLASSIFICATION	// no args, with block
WITHOUT_CLASSIFICATION	// with args, no block
WITHOUT_CLASSIFICATION	// with args, with block
WITHOUT_CLASSIFICATION	/*arg*/
WITHOUT_CLASSIFICATION	// retrieve scope from scopes array
WITHOUT_CLASSIFICATION	// use numbered access method
WITHOUT_CLASSIFICATION	// retrieve call site from sites array
WITHOUT_CLASSIFICATION	// add name to call site list
WITHOUT_CLASSIFICATION	// module is on top of stack
WITHOUT_CLASSIFICATION	// build scope names string
WITHOUT_CLASSIFICATION	// build descriptor string
WITHOUT_CLASSIFICATION	// build descriptor string
WITHOUT_CLASSIFICATION	// generate call sites initialization code
WITHOUT_CLASSIFICATION	// generate symbols initialization code
WITHOUT_CLASSIFICATION	// generate fixnums initialization code
WITHOUT_CLASSIFICATION	// generate constants initialization code
WITHOUT_CLASSIFICATION	// generate regexps initialization code
WITHOUT_CLASSIFICATION	// generate regexps initialization code
WITHOUT_CLASSIFICATION	// generate variable readers initialization code
WITHOUT_CLASSIFICATION	// generate variable writers initialization code
WITHOUT_CLASSIFICATION	// generate block bodies initialization code
WITHOUT_CLASSIFICATION	// generate block bodies initialization code
WITHOUT_CLASSIFICATION	// generate bytelists initialization code
WITHOUT_CLASSIFICATION	// generate method cache initialization code
WITHOUT_CLASSIFICATION	// adapter, tc, recv, args{0,1}, block{0,1}]
WITHOUT_CLASSIFICATION	// use IRubyObject[]
WITHOUT_CLASSIFICATION	// do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	// if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	// No point in updating number if last number was same value.
WITHOUT_CLASSIFICATION	// load Object under value
WITHOUT_CLASSIFICATION	// put under object array already present
WITHOUT_CLASSIFICATION	// if element count is less than 6, use helper methods
WITHOUT_CLASSIFICATION	// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements
WITHOUT_CLASSIFICATION	// if we have a specific-arity helper to construct an array for us, use that
WITHOUT_CLASSIFICATION	// if we have a specific-arity helper to construct an array for us, use that
WITHOUT_CLASSIFICATION	// brute force construction inline
WITHOUT_CLASSIFICATION	// brute force construction inline
WITHOUT_CLASSIFICATION	// use specific-arity for as much as possible
WITHOUT_CLASSIFICATION	// call isTrue on the result
WITHOUT_CLASSIFICATION	// call isTrue on the result
WITHOUT_CLASSIFICATION	// call isTrue on the result
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	// dup it since we need to return appropriately if it's false
WITHOUT_CLASSIFICATION	// clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	// check the condition
WITHOUT_CLASSIFICATION	// NE == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	// skip catch block
WITHOUT_CLASSIFICATION	// catch logic for flow-control: next, break
WITHOUT_CLASSIFICATION	// next jump
WITHOUT_CLASSIFICATION	// exceptionNext target is for a next that doesn't push a new value, like this one
WITHOUT_CLASSIFICATION	// grab nil for local variables
WITHOUT_CLASSIFICATION	// grab nil for local variables
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// clear body or next result after each successful loop
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND
WITHOUT_CLASSIFICATION	// check the condition
WITHOUT_CLASSIFICATION	// NE == nonzero (i.e. true)
WITHOUT_CLASSIFICATION	// synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	// break jump
WITHOUT_CLASSIFICATION	// Done with closure compilation
WITHOUT_CLASSIFICATION	//[reg]
WITHOUT_CLASSIFICATION	// for regular expressions with the /o flag
WITHOUT_CLASSIFICATION	// inside a loop, jump to body
WITHOUT_CLASSIFICATION	// inside a loop, jump to conditional
WITHOUT_CLASSIFICATION	// synthetic methods always have zero arg parameters
WITHOUT_CLASSIFICATION	// store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	// store previous exception for restoration if we rescue something
WITHOUT_CLASSIFICATION	// if more than 4 vars, get values array too
WITHOUT_CLASSIFICATION	// retry handling in the rescue block
WITHOUT_CLASSIFICATION	// any exceptions raised must continue to be raised, skipping $! restoration
WITHOUT_CLASSIFICATION	// and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	// restore the original exception
WITHOUT_CLASSIFICATION	// Handle Flow exceptions, just propagating them
WITHOUT_CLASSIFICATION	// rethrow to outer flow catcher
WITHOUT_CLASSIFICATION	// Handle Ruby exceptions (RaiseException)
WITHOUT_CLASSIFICATION	// inside a loop, break out of it // go to end of loop, leaving break value on stack
WITHOUT_CLASSIFICATION	// false // zero
WITHOUT_CLASSIFICATION	// load all arguments straight through
WITHOUT_CLASSIFICATION	// and remaining jump exceptions should restore $!
WITHOUT_CLASSIFICATION	// restore the original exception
WITHOUT_CLASSIFICATION	// retry handling in the rescue blocks
WITHOUT_CLASSIFICATION	// push false
WITHOUT_CLASSIFICATION	//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));
WITHOUT_CLASSIFICATION	//method.ifnonnull(trueLabel);
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)   //[C]
WITHOUT_CLASSIFICATION	//[C, C] //[C, C, String] //[C, null|C]
WITHOUT_CLASSIFICATION	//[C]
WITHOUT_CLASSIFICATION	// push true
WITHOUT_CLASSIFICATION	// EQ != 0 (i.e. true)
WITHOUT_CLASSIFICATION	//[?, ?] //[?, boolean]
WITHOUT_CLASSIFICATION	//[RubyModule] //[RubyModule, String]
WITHOUT_CLASSIFICATION	//[boolean]
WITHOUT_CLASSIFICATION	// no receiver for singleton class
WITHOUT_CLASSIFICATION	// but there's a superclass passed in, use it
WITHOUT_CLASSIFICATION	// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived
WITHOUT_CLASSIFICATION	// set self to the class
WITHOUT_CLASSIFICATION	// CLASS BODY
WITHOUT_CLASSIFICATION	// static scope
WITHOUT_CLASSIFICATION	// Here starts the logic for the class definition
WITHOUT_CLASSIFICATION	// new instance to invoke run against
WITHOUT_CLASSIFICATION	// CLASS BODY
WITHOUT_CLASSIFICATION	// static scope
WITHOUT_CLASSIFICATION	// Here starts the logic for the class definition
WITHOUT_CLASSIFICATION	// finally with exception
WITHOUT_CLASSIFICATION	// prepare to call class definition method
WITHOUT_CLASSIFICATION	// otherwise, there's a receiver, so we pass that in directly for the sclass logic
WITHOUT_CLASSIFICATION	// original exception is on stack
WITHOUT_CLASSIFICATION	// RaiseException is on stack, get RubyException out
WITHOUT_CLASSIFICATION	// updating position for same line; skip
WITHOUT_CLASSIFICATION	// callbacks to fill in method body
WITHOUT_CLASSIFICATION	// prepare to call "def" utility method to handle def logic
WITHOUT_CLASSIFICATION	// script object
WITHOUT_CLASSIFICATION	// arities
WITHOUT_CLASSIFICATION	// TODO assuming case is a fixnum
WITHOUT_CLASSIFICATION	// we have an input case, prepare branching logic
WITHOUT_CLASSIFICATION	// we have optimized switch cases, build a lookupswitch
WITHOUT_CLASSIFICATION	// checkcast the value; if match, fast path; otherwise proceed to slow logic
WITHOUT_CLASSIFICATION	// expression-based tests + bodies
WITHOUT_CLASSIFICATION	// normal case, create a new label
WITHOUT_CLASSIFICATION	// last conditional case, use defaultCase
WITHOUT_CLASSIFICATION	// do nothing; arity check is done before call
WITHOUT_CLASSIFICATION	// just confirm minimum args provided
WITHOUT_CLASSIFICATION	// just confirm args length == required
WITHOUT_CLASSIFICATION	// extract item from array
WITHOUT_CLASSIFICATION	// index for the item
WITHOUT_CLASSIFICATION	// index for the item
WITHOUT_CLASSIFICATION	// prepare labels for opt logic
WITHOUT_CLASSIFICATION	// prepare labels for opt logic
WITHOUT_CLASSIFICATION	// next, iterate over all optional args, until no more arguments
WITHOUT_CLASSIFICATION	// next, iterate over all optional args, until no more arguments
WITHOUT_CLASSIFICATION	// now logic for each optional value
WITHOUT_CLASSIFICATION	// otherwise no items left available, use the code for default
WITHOUT_CLASSIFICATION	// pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	// if there's args left and we want them, assign to rest arg
WITHOUT_CLASSIFICATION	// assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	// block argument assignment, if there's a block arg
WITHOUT_CLASSIFICATION	// first, iterate over all pre args
WITHOUT_CLASSIFICATION	// then optional args
WITHOUT_CLASSIFICATION	// grab nil for local variables
WITHOUT_CLASSIFICATION	// now logic for each optional value
WITHOUT_CLASSIFICATION	// otherwise no items left available, use the code for default
WITHOUT_CLASSIFICATION	// pop extra failed value from first cycle and we're done
WITHOUT_CLASSIFICATION	// assign remaining elements as an array for rest args (or empty array)
WITHOUT_CLASSIFICATION	// block argument assignment, if there's a block arg
WITHOUT_CLASSIFICATION	// if rest args, excluding post args
WITHOUT_CLASSIFICATION	// finally, post args
WITHOUT_CLASSIFICATION	// not an expression, don't want result; pop it
WITHOUT_CLASSIFICATION	// not an expression, don't want result; pop it
WITHOUT_CLASSIFICATION	// unwrap scopes to appropriate depth
WITHOUT_CLASSIFICATION	// fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	// chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	// temp locals must start after last real local
WITHOUT_CLASSIFICATION	// temp locals must start after last real local
WITHOUT_CLASSIFICATION	// declare locals for Java debugging purposes
WITHOUT_CLASSIFICATION	// class bodies prepare their own dynamic scope, so let it do that
WITHOUT_CLASSIFICATION	// store the local vars in a local variable
WITHOUT_CLASSIFICATION	// load args[0] which will be the IRubyObject representing block args
WITHOUT_CLASSIFICATION	// return in a class body raises error
WITHOUT_CLASSIFICATION	// visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	// return last value from execution
WITHOUT_CLASSIFICATION	// end of variable scope
WITHOUT_CLASSIFICATION	// method is done, declare all variables
WITHOUT_CLASSIFICATION	// load block from [] version of method
WITHOUT_CLASSIFICATION	// normal return for method body. return jump for within a begin/rescue/ensure
WITHOUT_CLASSIFICATION	// declare locals for Java debugging purposes
WITHOUT_CLASSIFICATION	// class bodies prepare their own dynamic scope, so let it do that
WITHOUT_CLASSIFICATION	// load args[0] which will be the IRubyObject representing block args
WITHOUT_CLASSIFICATION	// we force argParamCount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	// chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	// chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	// load all arguments straight through
WITHOUT_CLASSIFICATION	// load all arguments straight through
WITHOUT_CLASSIFICATION	// we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	// we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	// store the local vars in a local variable if there are any
WITHOUT_CLASSIFICATION	// if more than 4 locals, get and populate the locals array too
WITHOUT_CLASSIFICATION	// fill local vars with nil, to avoid checking every access.
WITHOUT_CLASSIFICATION	// default for starting tempVariableIndex is ok
WITHOUT_CLASSIFICATION	// store the local vars in a local variable for preparing the class (using previous scope)
WITHOUT_CLASSIFICATION	// store the new local vars in a local variable
WITHOUT_CLASSIFICATION	// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]
WITHOUT_CLASSIFICATION	// no variable initialization, because we're reusing parent's scope (flat)
WITHOUT_CLASSIFICATION	// for specific-index cases, clean up non-expression values
WITHOUT_CLASSIFICATION	// set up a local Ruby variable
WITHOUT_CLASSIFICATION	// if that succeeds, the others should as well
WITHOUT_CLASSIFICATION	// verify the class
WITHOUT_CLASSIFICATION	// create dir if necessary
WITHOUT_CLASSIFICATION	// Create the class with the appropriate class name and source file
WITHOUT_CLASSIFICATION	// add setPosition impl, which stores filename as constant to speed updates
WITHOUT_CLASSIFICATION	// thread context
WITHOUT_CLASSIFICATION	// line number
WITHOUT_CLASSIFICATION	// invoke __file__ with threadcontext, self, args (null), and block (null)
WITHOUT_CLASSIFICATION	// load always uses IRubyObject[], so simple closure offset calculation here
WITHOUT_CLASSIFICATION	// return last value from execution
WITHOUT_CLASSIFICATION	// method is done, declare all variables
WITHOUT_CLASSIFICATION	// in method body with no containing loop, issue jump error // load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	// block
WITHOUT_CLASSIFICATION	// block
WITHOUT_CLASSIFICATION	// we force argParamCount to 1 since we always know we'll have [] args
WITHOUT_CLASSIFICATION	// chain to the next segment of this giant method
WITHOUT_CLASSIFICATION	// load all arguments straight through
WITHOUT_CLASSIFICATION	// we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method
WITHOUT_CLASSIFICATION	// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0
WITHOUT_CLASSIFICATION	// construct static scope list of names
WITHOUT_CLASSIFICATION	// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here
WITHOUT_CLASSIFICATION	// ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	// ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	// lazily create class init only if necessary
WITHOUT_CLASSIFICATION	// boxed arg list __file__
WITHOUT_CLASSIFICATION	// invoke static __file__
WITHOUT_CLASSIFICATION	// exact arg list __file__
WITHOUT_CLASSIFICATION	// declare the field
WITHOUT_CLASSIFICATION	// declare the field
WITHOUT_CLASSIFICATION	// not using a new scope, use saved one for a flat closure
WITHOUT_CLASSIFICATION	// normal closure
WITHOUT_CLASSIFICATION	// end of scoping for closure's vars
WITHOUT_CLASSIFICATION	// we only need full-on redo exception handling if there's logic that might produce it
WITHOUT_CLASSIFICATION	// handle redos by restarting the block
WITHOUT_CLASSIFICATION	// jump back to the top of the main body of this closure
WITHOUT_CLASSIFICATION	// Ruby name 
WITHOUT_CLASSIFICATION	// Accumulate call arguments
WITHOUT_CLASSIFICATION	// Fix FileNameCompletor to work mid-line
WITHOUT_CLASSIFICATION	// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!
WITHOUT_CLASSIFICATION	// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.
WITHOUT_CLASSIFICATION	// Map of constants defined in this scope (not valid for methods!)
WITHOUT_CLASSIFICATION	// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases
WITHOUT_CLASSIFICATION	// Map keep track of the next available variable index for a particular prefix
WITHOUT_CLASSIFICATION	// Control flow graph for this scope
WITHOUT_CLASSIFICATION	//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;
WITHOUT_CLASSIFICATION	// List of modules, classes, and methods defined in this scope!
WITHOUT_CLASSIFICATION	// Returns the containing parent scope!
WITHOUT_CLASSIFICATION	// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);
WITHOUT_CLASSIFICATION	// get "self"
WITHOUT_CLASSIFICATION	// variable is never read, variable is never live
WITHOUT_CLASSIFICATION	// inline script
WITHOUT_CLASSIFICATION	// inline script
WITHOUT_CLASSIFICATION	// This method is called to build assignments for a multiple-assignment instruction
WITHOUT_CLASSIFICATION	// Build the class body!
WITHOUT_CLASSIFICATION	// unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	// unwrap newline nodes to get their actual type
WITHOUT_CLASSIFICATION	// SSS FIXME: Can this ever be null?
WITHOUT_CLASSIFICATION	// Run the pass on the passed in scope!
WITHOUT_CLASSIFICATION	// done // done // done // done
WITHOUT_CLASSIFICATION	// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	// This method is called to build arguments for a block!
WITHOUT_CLASSIFICATION	// build first node (and ignore its result) and then second node
WITHOUT_CLASSIFICATION	// build first node only and return false
WITHOUT_CLASSIFICATION	// Value of the last expression in the block 
WITHOUT_CLASSIFICATION	// If this is not a closure, the break is equivalent to jumping to the loop end label
WITHOUT_CLASSIFICATION	// get the incoming case value
WITHOUT_CLASSIFICATION	// the CASE instruction
WITHOUT_CLASSIFICATION	// lists to aggregate variables and bodies for whens
WITHOUT_CLASSIFICATION	// build each "when"
WITHOUT_CLASSIFICATION	// multiple conditions for when
WITHOUT_CLASSIFICATION	// build "else" if it exists
WITHOUT_CLASSIFICATION	// now emit bodies
WITHOUT_CLASSIFICATION	// close it out
WITHOUT_CLASSIFICATION	// By default, the container for this class is 's'
WITHOUT_CLASSIFICATION	// Do we have a dynamic container?
WITHOUT_CLASSIFICATION	// Return a meta object corresponding to the class
WITHOUT_CLASSIFICATION	// 1. Load the module first (lhs of node) // 2. Then load the constant from the module
WITHOUT_CLASSIFICATION	// Build IR for args
WITHOUT_CLASSIFICATION	// Build IR for body
WITHOUT_CLASSIFICATION	// if root of method is rescue, build as a light rescue
WITHOUT_CLASSIFICATION	// Instance method
WITHOUT_CLASSIFICATION	// Class method
WITHOUT_CLASSIFICATION	// Other args begin at index 1
WITHOUT_CLASSIFICATION	// Both for fixed arity and variable arity methods
WITHOUT_CLASSIFICATION	// Now for the rest
WITHOUT_CLASSIFICATION	// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!
WITHOUT_CLASSIFICATION	// This is not an expression that computes anything
WITHOUT_CLASSIFICATION	// Create a new closure context
WITHOUT_CLASSIFICATION	// Build args
WITHOUT_CLASSIFICATION	// Build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	// Assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	// By default, the container for this class is 's'
WITHOUT_CLASSIFICATION	// Create a new closure context
WITHOUT_CLASSIFICATION	// Build args
WITHOUT_CLASSIFICATION	// Assign the closure to the block variable in the parent scope and return it
WITHOUT_CLASSIFICATION	// Get the container for this new module
WITHOUT_CLASSIFICATION	// Build the new module
WITHOUT_CLASSIFICATION	// Build the module body
WITHOUT_CLASSIFICATION	// First, build an assignment for a splat, if any, with the rest of the args!
WITHOUT_CLASSIFICATION	// rest of the argument array!
WITHOUT_CLASSIFICATION	// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration
WITHOUT_CLASSIFICATION	// get attr
WITHOUT_CLASSIFICATION	// call operator
WITHOUT_CLASSIFICATION	// set attr
WITHOUT_CLASSIFICATION	// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //
WITHOUT_CLASSIFICATION	// This does the assignment!
WITHOUT_CLASSIFICATION	// This does the assignment!
WITHOUT_CLASSIFICATION	// if v1 is defined and true, we are done! 
WITHOUT_CLASSIFICATION	// build first node only and return true
WITHOUT_CLASSIFICATION	// build first node as non-expr and build second node
WITHOUT_CLASSIFICATION	// Top-level script!
WITHOUT_CLASSIFICATION	// we won't enter the loop -- just build the condition node
WITHOUT_CLASSIFICATION	/* ----------- Private Interface ------------ */
WITHOUT_CLASSIFICATION	// What handles warnings
WITHOUT_CLASSIFICATION	// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop
WITHOUT_CLASSIFICATION	// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit
WITHOUT_CLASSIFICATION	// Dummy top-level method for the class
WITHOUT_CLASSIFICATION	// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit
WITHOUT_CLASSIFICATION	// ------ Define the operations below ----
WITHOUT_CLASSIFICATION	// value copy and type conversion operations
WITHOUT_CLASSIFICATION	// alu operations
WITHOUT_CLASSIFICATION	// method handle, arg receive, return value, and  call instructions
WITHOUT_CLASSIFICATION	// closure instructions
WITHOUT_CLASSIFICATION	// eval instructions
WITHOUT_CLASSIFICATION	// def instructions
WITHOUT_CLASSIFICATION	// exception instructions
WITHOUT_CLASSIFICATION	// Loads
WITHOUT_CLASSIFICATION	// Stores
WITHOUT_CLASSIFICATION	// jump and branch operations
WITHOUT_CLASSIFICATION	// others
WITHOUT_CLASSIFICATION	// a case/when branch
WITHOUT_CLASSIFICATION	// optimization guards
WITHOUT_CLASSIFICATION	// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.
WITHOUT_CLASSIFICATION	// Returns the containing parent scope -- can be a dynamic value (hence Operand)!
WITHOUT_CLASSIFICATION	// scripts
WITHOUT_CLASSIFICATION	// scripts and modules
WITHOUT_CLASSIFICATION	// scripts, classes, and modules
WITHOUT_CLASSIFICATION	// methods and closures
WITHOUT_CLASSIFICATION	// create a new variable using the prefix
WITHOUT_CLASSIFICATION	// create a new temporary variable
WITHOUT_CLASSIFICATION	// Get a new label using a generic prefix
WITHOUT_CLASSIFICATION	// Build the CFG for this scope -- supported only by methods & closures
WITHOUT_CLASSIFICATION	// Get the control flow graph for this scope -- only valid for methods & closures
WITHOUT_CLASSIFICATION	// While processing loops, this returns the loop that we are processing.
WITHOUT_CLASSIFICATION	// Record the loop we are beginning to process
WITHOUT_CLASSIFICATION	// Indicate that we are done processing the loop
WITHOUT_CLASSIFICATION	// Run the passed in compiler pass on this scope!
WITHOUT_CLASSIFICATION	// Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	// Readline
WITHOUT_CLASSIFICATION	// If the cfg of the method is around, print the CFG!
WITHOUT_CLASSIFICATION	// Optimize some core class method calls for constant values
WITHOUT_CLASSIFICATION	// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.
WITHOUT_CLASSIFICATION	// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!
WITHOUT_CLASSIFICATION	// If we got a simplified value, mark the call dead and insert a copy in its place!
WITHOUT_CLASSIFICATION	// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!
WITHOUT_CLASSIFICATION	/* ----------- Public abstract methods ---------- */
WITHOUT_CLASSIFICATION	/* ----------- Public methods with a default implementation ---------- */
WITHOUT_CLASSIFICATION	// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem
WITHOUT_CLASSIFICATION	// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.
WITHOUT_CLASSIFICATION	/* --------- Protected fields/methods below --------- */
WITHOUT_CLASSIFICATION	// Dataflow problem with which this node is associated // CFG node for which this node contains info.
WITHOUT_CLASSIFICATION	/* -------------- Public fields and methods below ---------------- */
WITHOUT_CLASSIFICATION	// ------- Abstract methods without a default implementation -------
WITHOUT_CLASSIFICATION	// ------- Default implementation methods below -------
WITHOUT_CLASSIFICATION	/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */
WITHOUT_CLASSIFICATION	/* Individual analyses should override this */
WITHOUT_CLASSIFICATION	/* Individual analyses should override this */
WITHOUT_CLASSIFICATION	/* -------------- Packaged/protected fields and methods below ---------------- */
WITHOUT_CLASSIFICATION	// We want unique ids for dataflow variables
WITHOUT_CLASSIFICATION	/* -------------- Protected fields and methods below ---------------- */
WITHOUT_CLASSIFICATION	/* -------------- Private fields and methods below ---------------- */
WITHOUT_CLASSIFICATION	// Initialize all flow graph nodes 
WITHOUT_CLASSIFICATION	/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */
WITHOUT_CLASSIFICATION	/* ******************** PUBLIC INTERFACE ******************* */
WITHOUT_CLASSIFICATION	// Unique ID assigned to this variable
WITHOUT_CLASSIFICATION	// start out with a default RubyObject allocator
WITHOUT_CLASSIFICATION	// switch to an allocator based on a default constructor
WITHOUT_CLASSIFICATION	/* ----------- Public Interface ------------ */
WITHOUT_CLASSIFICATION	// class or module
WITHOUT_CLASSIFICATION	// OUT = UNION(IN(succs))
WITHOUT_CLASSIFICATION	// Traverse the instructions in this basic block in reverse order!
WITHOUT_CLASSIFICATION	// v is defined => It is no longer live before 'i'
WITHOUT_CLASSIFICATION	// IN is the same!
WITHOUT_CLASSIFICATION	// IN changed!
WITHOUT_CLASSIFICATION	/* ---------- Protected / package fields, methods --------- */
WITHOUT_CLASSIFICATION	// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!
WITHOUT_CLASSIFICATION	// Do not mark this instruction's operands live if the instruction itself is dead!
WITHOUT_CLASSIFICATION	/* ---------- Private fields, methods --------- */
WITHOUT_CLASSIFICATION	// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 
WITHOUT_CLASSIFICATION	// Used during optimization passes to propagate type and other information
WITHOUT_CLASSIFICATION	// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes
WITHOUT_CLASSIFICATION	/* --------- "Abstract"/"please-override" methods --------- */
WITHOUT_CLASSIFICATION	/* Array of all operands for this instruction */
WITHOUT_CLASSIFICATION	/* List of all variables used by all operands of this instruction */
WITHOUT_CLASSIFICATION	/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */
WITHOUT_CLASSIFICATION	// By default, no simplifications!
WITHOUT_CLASSIFICATION	// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code
WITHOUT_CLASSIFICATION	// By default, return instructions cannot be deleted
WITHOUT_CLASSIFICATION	// If true, returns the rest of the array starting at the index
WITHOUT_CLASSIFICATION	// ---------- These methods below are used during compile-time optimizations ------- 
WITHOUT_CLASSIFICATION	// Map of label & basic blocks with that label
WITHOUT_CLASSIFICATION	// ---------- These methods below are used during compile-time optimizations ------- 
WITHOUT_CLASSIFICATION	// You can only value-replace atomic values
WITHOUT_CLASSIFICATION	// If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	// If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	// If divisor is zero, don't simplify!
WITHOUT_CLASSIFICATION	// For simplification, get the target value, even if compound
WITHOUT_CLASSIFICATION	// For simplification, get the target value, even if compound
WITHOUT_CLASSIFICATION	// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value
WITHOUT_CLASSIFICATION	// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values
WITHOUT_CLASSIFICATION	// Get the target class of this operand, if we know it!
WITHOUT_CLASSIFICATION	// The following constants capture pre-known static call sites -- used to implement ruby internals
WITHOUT_CLASSIFICATION	/* Nothing to do by default */
WITHOUT_CLASSIFICATION	// Map of label & basic blocks which are waiting for a bb with that label
WITHOUT_CLASSIFICATION	// Init before building basic blocks below!
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id
WITHOUT_CLASSIFICATION	// Jump instruction bbs dont add an edge to the succeeding bb by default
WITHOUT_CLASSIFICATION	// Add forward ref. edges
WITHOUT_CLASSIFICATION	// currBB cannot be null!
WITHOUT_CLASSIFICATION	// Add a forward reference from tgt -> currBB
WITHOUT_CLASSIFICATION	// root-level logic
WITHOUT_CLASSIFICATION	// root-level methods
WITHOUT_CLASSIFICATION	// root-level classes
WITHOUT_CLASSIFICATION	//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;
WITHOUT_CLASSIFICATION	// load receiver
WITHOUT_CLASSIFICATION	// load receiver
WITHOUT_CLASSIFICATION	// receiver
WITHOUT_CLASSIFICATION	// load arguments
WITHOUT_CLASSIFICATION	// load arguments
WITHOUT_CLASSIFICATION	//        case 4: //        case 5:
WITHOUT_CLASSIFICATION	// Object[] args
WITHOUT_CLASSIFICATION	// load handle
WITHOUT_CLASSIFICATION	// args array
WITHOUT_CLASSIFICATION	// i'th argument
WITHOUT_CLASSIFICATION	// invoke specific arity version
WITHOUT_CLASSIFICATION	// Object arg0
WITHOUT_CLASSIFICATION	// useful for code completion inside the IRB
WITHOUT_CLASSIFICATION	// No editing before startPos
WITHOUT_CLASSIFICATION	// no silly ticks!
WITHOUT_CLASSIFICATION	// no candidates? Fail.
WITHOUT_CLASSIFICATION	// at end
WITHOUT_CLASSIFICATION	// undo check
WITHOUT_CLASSIFICATION	// Explicit reference to these vars as symbols...
WITHOUT_CLASSIFICATION	// ignore
WITHOUT_CLASSIFICATION	//\t\n\"\\'`@$><=;|&{(
WITHOUT_CLASSIFICATION	// Assign the values.
WITHOUT_CLASSIFICATION	// no check for '*'
WITHOUT_CLASSIFICATION	// no check for '*'
WITHOUT_CLASSIFICATION	// Binding provided for scope, use it
WITHOUT_CLASSIFICATION	// this is ensured by the callers
WITHOUT_CLASSIFICATION	// no binding, just eval in "current" frame (caller's frame)
WITHOUT_CLASSIFICATION	// restore position
WITHOUT_CLASSIFICATION	/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */
WITHOUT_CLASSIFICATION	// Used by the compiler to simplify arg processing
WITHOUT_CLASSIFICATION	// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace
WITHOUT_CLASSIFICATION	// MRI does similar thing on MacOS X with 'EditLine wrapper'.
WITHOUT_CLASSIFICATION	// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)
WITHOUT_CLASSIFICATION	// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)
WITHOUT_CLASSIFICATION	// not overridden, let's go
WITHOUT_CLASSIFICATION	/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */
WITHOUT_CLASSIFICATION	// FIXME: JRUBY-3604
WITHOUT_CLASSIFICATION	// Complete using a Proc object
WITHOUT_CLASSIFICATION	// clear basename so it's anonymous when raising
WITHOUT_CLASSIFICATION	// These are not really used by timeout, but exposed for compatibility
WITHOUT_CLASSIFICATION	// Timeout module methods
WITHOUT_CLASSIFICATION	// Toplevel defines
WITHOUT_CLASSIFICATION	// No seconds, just yield
WITHOUT_CLASSIFICATION	// No timeout in critical section
WITHOUT_CLASSIFICATION	// if it's the exception we're expecting
WITHOUT_CLASSIFICATION	// and we were given a specific exception
WITHOUT_CLASSIFICATION	// otherwise, rethrow
WITHOUT_CLASSIFICATION	// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //
WITHOUT_CLASSIFICATION	// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //
WITHOUT_CLASSIFICATION	// NetProtocolBufferedIO
WITHOUT_CLASSIFICATION	/* When a length is given, read_string acts like get_bytes */
WITHOUT_CLASSIFICATION	// Replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	// ARRAY and STRUCT are only used internally
WITHOUT_CLASSIFICATION	// If no release method is defined, then memory leaks will result.
WITHOUT_CLASSIFICATION	/*     * This variant of newStruct is called from StructLayoutBuilder     */
WITHOUT_CLASSIFICATION	// This also handles unsigned int -> negative signed int conversion
WITHOUT_CLASSIFICATION	// Windows is LLP64
WITHOUT_CLASSIFICATION	// Older JDK on linux map 'c' to 'libc.so' which doesn't work
WITHOUT_CLASSIFICATION	// Ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	// $blah
WITHOUT_CLASSIFICATION	// Replace memory object with one that throws an exception on any access
WITHOUT_CLASSIFICATION	// // A specific version was requested - use as is for search //
WITHOUT_CLASSIFICATION	// Ensure room for terminating zero byte
WITHOUT_CLASSIFICATION	// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //
WITHOUT_CLASSIFICATION	// Add Pointer::NULL as a constant
WITHOUT_CLASSIFICATION	// Create the ordered list of field names from the map
WITHOUT_CLASSIFICATION	// Assemble a [ :name, offset ] array
WITHOUT_CLASSIFICATION	//                case FLOAT:
WITHOUT_CLASSIFICATION	// keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	// keep a reference to avoid the memory being freed
WITHOUT_CLASSIFICATION	// No auto cleanup needed
WITHOUT_CLASSIFICATION	// Wire up Function#call(*args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	// Get the convention from the options hash
WITHOUT_CLASSIFICATION	// Get the convention from the options hash
WITHOUT_CLASSIFICATION	/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */
WITHOUT_CLASSIFICATION	/*------------------------------------------------------------------------*/
WITHOUT_CLASSIFICATION	//AF_INET
WITHOUT_CLASSIFICATION	//AF_INET
WITHOUT_CLASSIFICATION	// RubyUNIXServer
WITHOUT_CLASSIFICATION	// line 321
WITHOUT_CLASSIFICATION	// // Set up for potentially fast-int operations //
WITHOUT_CLASSIFICATION	// // Hook up the MemoryPointer class if its not already there //
WITHOUT_CLASSIFICATION	// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases
WITHOUT_CLASSIFICATION	// no UNIXSockets on Windows
WITHOUT_CLASSIFICATION	// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.
WITHOUT_CLASSIFICATION	// There is something valid in the sun_path component
WITHOUT_CLASSIFICATION	// RubyIPSocket
WITHOUT_CLASSIFICATION	// host is nil or the empty string, bind to INADDR_ANY
WITHOUT_CLASSIFICATION	// host and port given
WITHOUT_CLASSIFICATION	// RubyUDPSocket
WITHOUT_CLASSIFICATION	// By default we always reverse lookup unless do_not_reverse_lookup set.
WITHOUT_CLASSIFICATION	// make sure descriptor is registered
WITHOUT_CLASSIFICATION	// continue with normal initialization
WITHOUT_CLASSIFICATION	// recv returns nil on EOF
WITHOUT_CLASSIFICATION	// Can't support the rest with Java
WITHOUT_CLASSIFICATION	// RubyBasicSocket
WITHOUT_CLASSIFICATION	// we don't have to define any that we don't support; see socket.c
WITHOUT_CLASSIFICATION	// mandatory constants we haven't implemented
WITHOUT_CLASSIFICATION	// constants webrick crashes without
WITHOUT_CLASSIFICATION	// More constants needed by specs
WITHOUT_CLASSIFICATION	// normal file descriptor..try to work with it
WITHOUT_CLASSIFICATION	// AF_INET
WITHOUT_CLASSIFICATION	// 255.255.255.255
WITHOUT_CLASSIFICATION	// 0.0.0.0
WITHOUT_CLASSIFICATION	//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)
WITHOUT_CLASSIFICATION	// line 323
WITHOUT_CLASSIFICATION	// can't set TC classloader
WITHOUT_CLASSIFICATION	// can't set TC classloader
WITHOUT_CLASSIFICATION	// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...
WITHOUT_CLASSIFICATION	// datagram, set accordingly // again, AF_INET
WITHOUT_CLASSIFICATION	//IRubyObject family = args[2];
WITHOUT_CLASSIFICATION	// When Socket::AI_PASSIVE and host is nil, return 'any' address. 
WITHOUT_CLASSIFICATION	// The value of 1 is for Socket::AI_PASSIVE.
WITHOUT_CLASSIFICATION	// RubySocket
WITHOUT_CLASSIFICATION	// numeric host, use it for port
WITHOUT_CLASSIFICATION	//            e.printStackTrace();
WITHOUT_CLASSIFICATION	// we were woken up without being selected...poll for thread events and go back to sleep
WITHOUT_CLASSIFICATION	// otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	// no connection immediately accepted, let them try again
WITHOUT_CLASSIFICATION	// do nothing, just exit
WITHOUT_CLASSIFICATION	//nativeThread.setPriority(priority);
WITHOUT_CLASSIFICATION	// set thread context JRuby classloader here, for Ruby-owned thread
WITHOUT_CLASSIFICATION	// uber-ThreadKill catcher, since it should always just mean "be dead"
WITHOUT_CLASSIFICATION	// Call the thread's code
WITHOUT_CLASSIFICATION	// Someone called exit!, so we need to kill the main thread
WITHOUT_CLASSIFICATION	// restore context classloader, in case we're using a thread pool
WITHOUT_CLASSIFICATION	// be dead
WITHOUT_CLASSIFICATION	// loop until a context is available, to clean up softrefs that might have been collected
WITHOUT_CLASSIFICATION	// all threads in ruby thread group plus main thread
WITHOUT_CLASSIFICATION	// thread is not alive, skip it
WITHOUT_CLASSIFICATION	// future is done or cancelled, skip it
WITHOUT_CLASSIFICATION	// first, check if the sender has unreceived mail
WITHOUT_CLASSIFICATION	// then deliver mail to the target
WITHOUT_CLASSIFICATION	// UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	// Define a second version that doesn't take a block, so we have unique code paths for both cases.
WITHOUT_CLASSIFICATION	// invoke pre method stuff
WITHOUT_CLASSIFICATION	// main body
WITHOUT_CLASSIFICATION	// return jump handling
WITHOUT_CLASSIFICATION	// finally
WITHOUT_CLASSIFICATION	// return result if we're still good
WITHOUT_CLASSIFICATION	// redo jump handling
WITHOUT_CLASSIFICATION	// clear the redo
WITHOUT_CLASSIFICATION	// get runtime, create jump error, and throw it
WITHOUT_CLASSIFICATION	// throw redo error if we're still good
WITHOUT_CLASSIFICATION	// finally handling for abnormal exit
WITHOUT_CLASSIFICATION	//call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	// No required specified, check actual number of required args
WITHOUT_CLASSIFICATION	// actual required is less than 3, so we use specific arity
WITHOUT_CLASSIFICATION	// actual required is greater than 3, raise error (we don't support actual required > 3)
WITHOUT_CLASSIFICATION	// simple path, no multimethod
WITHOUT_CLASSIFICATION	// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)
WITHOUT_CLASSIFICATION	// normal all-rest method
WITHOUT_CLASSIFICATION	// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check
WITHOUT_CLASSIFICATION	// promise to implement zero to N
WITHOUT_CLASSIFICATION	// return
WITHOUT_CLASSIFICATION	// just confirm minimum args provided
WITHOUT_CLASSIFICATION	// just confirm args length == required
WITHOUT_CLASSIFICATION	// confirm minimum args provided
WITHOUT_CLASSIFICATION	// confirm maximum not greater than optional
WITHOUT_CLASSIFICATION	// Raise an error if arity does not match requirements
WITHOUT_CLASSIFICATION	// tc
WITHOUT_CLASSIFICATION	// self // name
WITHOUT_CLASSIFICATION	// no args
WITHOUT_CLASSIFICATION	// variable args with block
WITHOUT_CLASSIFICATION	// variable args no block, load null block
WITHOUT_CLASSIFICATION	// zero args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	// one arg with block
WITHOUT_CLASSIFICATION	// one arg, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	// two args with block
WITHOUT_CLASSIFICATION	// two args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	// three args with block
WITHOUT_CLASSIFICATION	// three args, no block; load NULL_BLOCK
WITHOUT_CLASSIFICATION	// load block if it accepts block
WITHOUT_CLASSIFICATION	// all other arg cases with block
WITHOUT_CLASSIFICATION	// all other arg cases without block
WITHOUT_CLASSIFICATION	// one arg, no block; do nothing
WITHOUT_CLASSIFICATION	// two args, no block; do nothing
WITHOUT_CLASSIFICATION	// three args, no block; do nothing
WITHOUT_CLASSIFICATION	// load target for invocations
WITHOUT_CLASSIFICATION	// load receiver as original type for virtual invocation
WITHOUT_CLASSIFICATION	// static invocation
WITHOUT_CLASSIFICATION	// virtual invocation
WITHOUT_CLASSIFICATION	// void return type, so we need to load a nil for returning below
WITHOUT_CLASSIFICATION	// normal finally and exit
WITHOUT_CLASSIFICATION	// promise to implement one to N
WITHOUT_CLASSIFICATION	//call post method stuff (exception raised)
WITHOUT_CLASSIFICATION	// these are only needed if we have a non-noop call config
WITHOUT_CLASSIFICATION	// method itself // ThreadContext // invoked name
WITHOUT_CLASSIFICATION	// method itself // ThreadContext // invoked name
WITHOUT_CLASSIFICATION	// singleton classes don't get their own visibility domain
WITHOUT_CLASSIFICATION	// For visibility we need real meta class and not anonymous one from class << self
WITHOUT_CLASSIFICATION	// SimpleInvocationMethod
WITHOUT_CLASSIFICATION	// never reached
WITHOUT_CLASSIFICATION	// promise to implement N with block
WITHOUT_CLASSIFICATION	// promise to implement zero to N with block
WITHOUT_CLASSIFICATION	// promise to implement one to N with block
WITHOUT_CLASSIFICATION	// promise to implement two to N with block
WITHOUT_CLASSIFICATION	// promise to implement zero to three with block
WITHOUT_CLASSIFICATION	// promise to implement one to three with block
WITHOUT_CLASSIFICATION	// promise to implement two to three with block
WITHOUT_CLASSIFICATION	// promise to implement three with block
WITHOUT_CLASSIFICATION	// promise to implement N
WITHOUT_CLASSIFICATION	// DumpingInvocationMethodFactory
WITHOUT_CLASSIFICATION	// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.
WITHOUT_CLASSIFICATION	// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.
WITHOUT_CLASSIFICATION	// promise to implement two to N
WITHOUT_CLASSIFICATION	// promise to implement three to N
WITHOUT_CLASSIFICATION	// promise to implement zero to three
WITHOUT_CLASSIFICATION	// promise to implement one to three
WITHOUT_CLASSIFICATION	// promise to implement two to three
WITHOUT_CLASSIFICATION	// promise to implement three
WITHOUT_CLASSIFICATION	// all other arities use "n" dispatch path
WITHOUT_CLASSIFICATION	// load up object and add a few useful methods
WITHOUT_CLASSIFICATION	// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel
WITHOUT_CLASSIFICATION	// construct the class, implementing all supertypes
WITHOUT_CLASSIFICATION	// fields needed for dispatch and such
WITHOUT_CLASSIFICATION	// create constructor
WITHOUT_CLASSIFICATION	// wrap self and store the wrapper
WITHOUT_CLASSIFICATION	// end constructor
WITHOUT_CLASSIFICATION	// start setup method
WITHOUT_CLASSIFICATION	// set RubyClass
WITHOUT_CLASSIFICATION	// set Ruby
WITHOUT_CLASSIFICATION	// all methods dispatch to the simple version by default, which is method_missing normally
WITHOUT_CLASSIFICATION	// try specific name first, falling back on simple name
WITHOUT_CLASSIFICATION	// get current context
WITHOUT_CLASSIFICATION	// load self, class, and name
WITHOUT_CLASSIFICATION	// construct the class, implementing all supertypes
WITHOUT_CLASSIFICATION	// fields needed for dispatch and such
WITHOUT_CLASSIFICATION	// create constructor
WITHOUT_CLASSIFICATION	// end constructor
WITHOUT_CLASSIFICATION	// for each simple method name, implement the complex methods, calling the simple version
WITHOUT_CLASSIFICATION	// load arguments into IRubyObject[] for dispatch
WITHOUT_CLASSIFICATION	// convert to IRubyObject
WITHOUT_CLASSIFICATION	// load null block
WITHOUT_CLASSIFICATION	// invoke method
WITHOUT_CLASSIFICATION	// if we expect a return value, unwrap it
WITHOUT_CLASSIFICATION	// end setup method
WITHOUT_CLASSIFICATION	// end class
WITHOUT_CLASSIFICATION	// create static init, for a monitor object
WITHOUT_CLASSIFICATION	// store the wrapper
WITHOUT_CLASSIFICATION	// prepare temp locals
WITHOUT_CLASSIFICATION	// Try to look up field for simple name // get field; if nonnull, go straight to dispatch
WITHOUT_CLASSIFICATION	// field is null, lock class and try to populate
WITHOUT_CLASSIFICATION	// try/finally block to ensure unlock
WITHOUT_CLASSIFICATION	// store it
WITHOUT_CLASSIFICATION	// end of try block
WITHOUT_CLASSIFICATION	// finally block to release monitor
WITHOUT_CLASSIFICATION	// exception handling for monitor release
WITHOUT_CLASSIFICATION	// re-get, re-check method; if not null now, go to dispatch
WITHOUT_CLASSIFICATION	// load self, class, and name
WITHOUT_CLASSIFICATION	// load arguments into IRubyObject[] for dispatch
WITHOUT_CLASSIFICATION	// convert to IRubyObject
WITHOUT_CLASSIFICATION	// invoke method
WITHOUT_CLASSIFICATION	// if we expect a return value, unwrap it
WITHOUT_CLASSIFICATION	// end setup method
WITHOUT_CLASSIFICATION	// end class
WITHOUT_CLASSIFICATION	// create the class
WITHOUT_CLASSIFICATION	// method still not available, call method_missing
WITHOUT_CLASSIFICATION	// perform the dispatch
WITHOUT_CLASSIFICATION	// try to load the specified name; only if that fails, try to define the class
WITHOUT_CLASSIFICATION	// up two slots, for long's two halves
WITHOUT_CLASSIFICATION	// up two slots, for long's two halves
WITHOUT_CLASSIFICATION	// setup the class
WITHOUT_CLASSIFICATION	// now, create a method_added that can replace the DynamicMethod fields as they're redefined
WITHOUT_CLASSIFICATION	// do nothing, it's a non-impl method
WITHOUT_CLASSIFICATION	// probably a primitive
WITHOUT_CLASSIFICATION	// interfaces are handled as modules
WITHOUT_CLASSIFICATION	// construct the mirror class and parent classes
WITHOUT_CLASSIFICATION	// set the full name
WITHOUT_CLASSIFICATION	// include all interfaces
WITHOUT_CLASSIFICATION	// if it's an array, only add methods for aref, aset, and length
WITHOUT_CLASSIFICATION	// add array construction methods
WITHOUT_CLASSIFICATION	// add all public constructors (note: getConstructors only returns public ones)
WITHOUT_CLASSIFICATION	// add all instance and static methods
WITHOUT_CLASSIFICATION	// proxy is complete, return it
WITHOUT_CLASSIFICATION	// too much array creation!
WITHOUT_CLASSIFICATION	// only include static methods if specified
WITHOUT_CLASSIFICATION	// add a few type-specific special methods
WITHOUT_CLASSIFICATION	// add all static variables
WITHOUT_CLASSIFICATION	// only public static fields that are valid constants
WITHOUT_CLASSIFICATION	// looks like someone's trying to raise a Java exception. Let them.
WITHOUT_CLASSIFICATION	// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.
WITHOUT_CLASSIFICATION	// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive
WITHOUT_CLASSIFICATION	// long first because it's what Fixnum claims to be
WITHOUT_CLASSIFICATION	// double first because it's what float claims to be
WITHOUT_CLASSIFICATION	// TODO: varargs?
WITHOUT_CLASSIFICATION	// read-volatile
WITHOUT_CLASSIFICATION	// initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	// we set all Java methods to optional, since many/most have overloads
WITHOUT_CLASSIFICATION	// If we hold a Java object, we need a java_class accessor
WITHOUT_CLASSIFICATION	// line 326
WITHOUT_CLASSIFICATION	// read-volatile
WITHOUT_CLASSIFICATION	// initialize cache of parameter types to method
WITHOUT_CLASSIFICATION	// too much array creation!
WITHOUT_CLASSIFICATION	// construct new array proxy (ArrayJavaProxy)
WITHOUT_CLASSIFICATION	// Get map of all fields we want to define.  
WITHOUT_CLASSIFICATION	// Look through all mappings to find a match entry for this field
WITHOUT_CLASSIFICATION	// Hit a non-java proxy class (included Modules can be a cause of this...skip)
WITHOUT_CLASSIFICATION	// We could not find all of them print out first one (we could print them all?)
WITHOUT_CLASSIFICATION	// dummy bodies for default impls
WITHOUT_CLASSIFICATION	// initialize this if it hasn't been
WITHOUT_CLASSIFICATION	// initialize these if they haven't been
WITHOUT_CLASSIFICATION	// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes
WITHOUT_CLASSIFICATION	// setup new, etc unless this is a ConcreteJavaProxy subclass
WITHOUT_CLASSIFICATION	// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type
WITHOUT_CLASSIFICATION	// list of interfaces we implement
WITHOUT_CLASSIFICATION	// We capture the original "new" and make it private
WITHOUT_CLASSIFICATION	// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!
WITHOUT_CLASSIFICATION	// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object
WITHOUT_CLASSIFICATION	// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object
WITHOUT_CLASSIFICATION	// Now we add an "implement" and "implement_all" methods to the class
WITHOUT_CLASSIFICATION	// implement all forces implementation of all interfaces we intend // for this class to implement
WITHOUT_CLASSIFICATION	// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface
WITHOUT_CLASSIFICATION	// walk all superclasses aggregating interfaces
WITHOUT_CLASSIFICATION	// construct the new interface impl and set it into the object
WITHOUT_CLASSIFICATION	// assuming the user wants a collection of interfaces that can be // included together. make it so.
WITHOUT_CLASSIFICATION	// not allowed for existing Java interface modules
WITHOUT_CLASSIFICATION	// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well
WITHOUT_CLASSIFICATION	// already set up append_features, just add the interface if we haven't already
WITHOUT_CLASSIFICATION	// array-of-interface-type creation/identity
WITHOUT_CLASSIFICATION	// keep this variant for kind_of? testing
WITHOUT_CLASSIFICATION	// array creation should use this variant
WITHOUT_CLASSIFICATION	// parent.setConstant(name, proxyClass); // where the name should come from ?
WITHOUT_CLASSIFICATION	// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.
WITHOUT_CLASSIFICATION	// add reference to interface module
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// proxy is complete, return it
WITHOUT_CLASSIFICATION	// same as argument_types, but matches name in java.lang.reflect.Constructor/Method
WITHOUT_CLASSIFICATION	// This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	// weakly reserved names
WITHOUT_CLASSIFICATION	// called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	// called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	// modified only by addMethod; no synchronization required
WITHOUT_CLASSIFICATION	// if there's no constructor, we must prevent construction
WITHOUT_CLASSIFICATION	// caching constructors, as they're accessed for each new instance
WITHOUT_CLASSIFICATION	// proxy module for interfaces
WITHOUT_CLASSIFICATION	// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields
WITHOUT_CLASSIFICATION	// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).
WITHOUT_CLASSIFICATION	// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.
WITHOUT_CLASSIFICATION	// Now add all aliases for the static methods (fields) as appropriate
WITHOUT_CLASSIFICATION	// proxy is under construction, building thread can // safely read non-volatile value
WITHOUT_CLASSIFICATION	// Add property name aliases
WITHOUT_CLASSIFICATION	// getFoo      => foo // getFoo(int) => foo(int)
WITHOUT_CLASSIFICATION	// setFoo(Foo) => foo=(Foo)
WITHOUT_CLASSIFICATION	// isFoo() => foo, isFoo(*) => foo(*)
WITHOUT_CLASSIFICATION	// Additionally add ?-postfixed aliases to any boolean methods and properties.
WITHOUT_CLASSIFICATION	// is_something?, contains_thing?
WITHOUT_CLASSIFICATION	// something?
WITHOUT_CLASSIFICATION	// setup constants for public inner classes
WITHOUT_CLASSIFICATION	// setup constants for public inner classes
WITHOUT_CLASSIFICATION	// Ignore bad constant named inner classes pending JRUBY-697
WITHOUT_CLASSIFICATION	// Ignore bad constant named inner classes pending JRUBY-697
WITHOUT_CLASSIFICATION	// create constructorInstaller; if there are no constructors, it will disable construction
WITHOUT_CLASSIFICATION	// we need to collect all methods, though we'll only // install the ones that are named in this class
WITHOUT_CLASSIFICATION	// Install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	// now iterate over all installers and make sure they also have appropriate aliases
WITHOUT_CLASSIFICATION	// old (quasi-deprecated) interface class
WITHOUT_CLASSIFICATION	// 1.9 support for encodings
WITHOUT_CLASSIFICATION	// double-check the cache now that we're synchronized
WITHOUT_CLASSIFICATION	// setFoo(Foo) => foo=(Foo)
WITHOUT_CLASSIFICATION	// isFoo() => foo, isFoo(*) => foo(*)
WITHOUT_CLASSIFICATION	// is_something?, contains_thing?
WITHOUT_CLASSIFICATION	// one word type name that starts lower-case...it may be a primitive type
WITHOUT_CLASSIFICATION	// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here
WITHOUT_CLASSIFICATION	// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.
WITHOUT_CLASSIFICATION	// see note above re: return type
WITHOUT_CLASSIFICATION	// restrictive security policy; no matter, we only want public // classes anyway
WITHOUT_CLASSIFICATION	// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case
WITHOUT_CLASSIFICATION	// one-dimensional array
WITHOUT_CLASSIFICATION	// n-dimensional array
WITHOUT_CLASSIFICATION	// if it's an array of arrays, recurse with the component type
WITHOUT_CLASSIFICATION	// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130
WITHOUT_CLASSIFICATION	// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface
WITHOUT_CLASSIFICATION	// can't be converted any more, return it
WITHOUT_CLASSIFICATION	// getFooBar() => fooBar?, foo_bar?(*)
WITHOUT_CLASSIFICATION	// If not a property, but is boolean add ?-postfixed aliases.
WITHOUT_CLASSIFICATION	// many cases are ok to convert to float; if not one of these, error
WITHOUT_CLASSIFICATION	// for Object, default to natural wrapper type
WITHOUT_CLASSIFICATION	// rubyObject is already of the required jruby class (or subclass)
WITHOUT_CLASSIFICATION	// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()
WITHOUT_CLASSIFICATION	// it's not one of the types we convert, so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	// we've found a Java type to which we've coerced the Ruby value, wrap it
WITHOUT_CLASSIFICATION	// set of utility methods for Java-based proxy objects
WITHOUT_CLASSIFICATION	// the proxy (wrapper) type hierarchy
WITHOUT_CLASSIFICATION	//InterfaceJavaProxy.createInterfaceJavaProxy(context);
WITHOUT_CLASSIFICATION	// also create the JavaProxy* classes
WITHOUT_CLASSIFICATION	// The template for interface modules
WITHOUT_CLASSIFICATION	// Now attach Java-related extras to core classes
WITHOUT_CLASSIFICATION	// add all name-to-class mappings
WITHOUT_CLASSIFICATION	// add some base Java classes everyone will need
WITHOUT_CLASSIFICATION	// finally, set JavaSupport.isEnabled to true
WITHOUT_CLASSIFICATION	// shouldn't happen, but if a superclass is specified, it's not ours
WITHOUT_CLASSIFICATION	// include any interfaces we extend
WITHOUT_CLASSIFICATION	// java.lang.Object is added at root of java proxy classes
WITHOUT_CLASSIFICATION	// other java proxy classes added under their superclass' java proxy
WITHOUT_CLASSIFICATION	// include interface modules into the proxy class
WITHOUT_CLASSIFICATION	// JRUBY-2938 the proxy class might already exist
WITHOUT_CLASSIFICATION	// add java_method for unbound use
WITHOUT_CLASSIFICATION	// add alias to meta
WITHOUT_CLASSIFICATION	// we'll only map conventional class names to modules 
WITHOUT_CLASSIFICATION	/* expected */
WITHOUT_CLASSIFICATION	// Haven't found a class, continue on as though it were a package
WITHOUT_CLASSIFICATION	// upper case name, so most likely a class
WITHOUT_CLASSIFICATION	// This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	// add alias to meta
WITHOUT_CLASSIFICATION	// this is where we'll get connected when classes are opened using // package module syntax.
WITHOUT_CLASSIFICATION	// save package module as ivar in parent, and add method to parent so // we don't have to come back here.
WITHOUT_CLASSIFICATION	// this covers primitives and (unlikely) lower-case class names
WITHOUT_CLASSIFICATION	/* not primitive or lc class */
WITHOUT_CLASSIFICATION	/* not primitive or lc class */
WITHOUT_CLASSIFICATION	// Is there a supplied proc argument or do we assume a block was supplied
WITHOUT_CLASSIFICATION	// Create list of interfaces to proxy (and make sure they really are interfaces)
WITHOUT_CLASSIFICATION	// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them
WITHOUT_CLASSIFICATION	// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode
WITHOUT_CLASSIFICATION	// normal new class implementing interfaces
WITHOUT_CLASSIFICATION	/*         * Initialize some components.         */
WITHOUT_CLASSIFICATION	// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)
WITHOUT_CLASSIFICATION	// Java reflection does not allow retrieving constructors like methods
WITHOUT_CLASSIFICATION	// for zero args case we can stop searching
WITHOUT_CLASSIFICATION	// for zero args case we can stop searching
WITHOUT_CLASSIFICATION	// no matching ctor found
WITHOUT_CLASSIFICATION	// Create Ruby proxies for any input arguments that are not primitives.
WITHOUT_CLASSIFICATION	// prepare a faster handle if handles are enabled and the method and class are public
WITHOUT_CLASSIFICATION	// must be a public method
WITHOUT_CLASSIFICATION	// must be a public class
WITHOUT_CLASSIFICATION	// must have been loaded from our known classloader hierarchy
WITHOUT_CLASSIFICATION	// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 
WITHOUT_CLASSIFICATION	// search through all declared methods to find a closest match
WITHOUT_CLASSIFICATION	// no matching method found
WITHOUT_CLASSIFICATION	// this test really means, that this is a ruby-defined subclass of a java class
WITHOUT_CLASSIFICATION	/*         * First we need to register the JRuby engine.         */
WITHOUT_CLASSIFICATION	/*         * Now we create a new BSFManager.         */
WITHOUT_CLASSIFICATION	/*         * Initialize a simple Frame.          */
WITHOUT_CLASSIFICATION	//e.printStackTrace();
WITHOUT_CLASSIFICATION	//e.printStackTrace();
WITHOUT_CLASSIFICATION	// JRUBY-530, while case
WITHOUT_CLASSIFICATION	// end class
WITHOUT_CLASSIFICATION	// // this test really means, that this is a ruby-defined subclass of a java class //
WITHOUT_CLASSIFICATION	// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.
WITHOUT_CLASSIFICATION	/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */
WITHOUT_CLASSIFICATION	/*              * Execute a Ruby script (add the menubar to the frame).             */
WITHOUT_CLASSIFICATION	/*                     * Execute Ruby statements.                     */
WITHOUT_CLASSIFICATION	/*                     * Evaluates a Ruby expression and display the result.                     */
WITHOUT_CLASSIFICATION	// Populate values for the parameter names
WITHOUT_CLASSIFICATION	/* package scope */
WITHOUT_CLASSIFICATION	// This point is only reached if there was an exception handler // installed.
WITHOUT_CLASSIFICATION	// // Ruby-level methods //
WITHOUT_CLASSIFICATION	// need names ordered for key generation later
WITHOUT_CLASSIFICATION	// we only collect methods and interfaces for  // user-defined proxy classes.
WITHOUT_CLASSIFICATION	// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.
WITHOUT_CLASSIFICATION	// get any included interfaces
WITHOUT_CLASSIFICATION	// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.
WITHOUT_CLASSIFICATION	// statically initialized below
WITHOUT_CLASSIFICATION	// finish class initializer
WITHOUT_CLASSIFICATION	// trigger class initialization for the class
WITHOUT_CLASSIFICATION	// should not happen!
WITHOUT_CLASSIFICATION	// start class
WITHOUT_CLASSIFICATION	// make getter for handler
WITHOUT_CLASSIFICATION	// make getter for proxy class
WITHOUT_CLASSIFICATION	// add (potentially) overridden names to the key. // TODO: see note above re: optimizations
WITHOUT_CLASSIFICATION	// We generate all constructors and let some fail during invocation later
WITHOUT_CLASSIFICATION	// create static private method field
WITHOUT_CLASSIFICATION	// load static empty array
WITHOUT_CLASSIFICATION	// box arguments
WITHOUT_CLASSIFICATION	// this is a simple rethrow handler
WITHOUT_CLASSIFICATION	// // construct the super-proxy method //
WITHOUT_CLASSIFICATION	// do a void return
WITHOUT_CLASSIFICATION	// // utility methods //
WITHOUT_CLASSIFICATION	// Is there a supplied proc argument or do we assume a block was // supplied
WITHOUT_CLASSIFICATION	// store call information so method_missing impl can use it
WITHOUT_CLASSIFICATION	// use the same logic as in EvaluationState
WITHOUT_CLASSIFICATION	// no opt, no rest, exact match
WITHOUT_CLASSIFICATION	// only rest, must be at least required
WITHOUT_CLASSIFICATION	// opt but no rest, must be at least required and no more than required + opt
WITHOUT_CLASSIFICATION	// opt and rest, must be at least required
WITHOUT_CLASSIFICATION	// No block from a nil proc
WITHOUT_CLASSIFICATION	// If not already a proc then we should try and make it one.
WITHOUT_CLASSIFICATION	// The current block is already associated with proc.  No need to create a new one
WITHOUT_CLASSIFICATION	// Has the method that is calling super received a block argument
WITHOUT_CLASSIFICATION	/* NUL */
WITHOUT_CLASSIFICATION	// Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	// Clone all remaining nodes
WITHOUT_CLASSIFICATION	// 'class << state.self' and 'class << obj' uses defn as opposed to defs
WITHOUT_CLASSIFICATION	// Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	// read-volatile
WITHOUT_CLASSIFICATION	// read-volatile
WITHOUT_CLASSIFICATION	// classes are directly in the hierarchy, so no special logic is necessary for implementer
WITHOUT_CLASSIFICATION	// must be power of 2 // must be power of 2
WITHOUT_CLASSIFICATION	// Find power-of-two sizes best matching arguments
WITHOUT_CLASSIFICATION	// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)
WITHOUT_CLASSIFICATION	//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());
WITHOUT_CLASSIFICATION	//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }
WITHOUT_CLASSIFICATION	// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue
WITHOUT_CLASSIFICATION	// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.
WITHOUT_CLASSIFICATION	// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.
WITHOUT_CLASSIFICATION	// ctor used by remove/rehash
WITHOUT_CLASSIFICATION	// must be called under lock
WITHOUT_CLASSIFICATION	// must be called under lock
WITHOUT_CLASSIFICATION	// must be called under lock
WITHOUT_CLASSIFICATION	// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.
WITHOUT_CLASSIFICATION	// temp method to verify tableSize value // must be called under lock
WITHOUT_CLASSIFICATION	// Single node in list
WITHOUT_CLASSIFICATION	// indirect read-/write- volatile
WITHOUT_CLASSIFICATION	// indirect read-/write- volatile
WITHOUT_CLASSIFICATION	// entry exists, proxy has been gc'ed. replace entry.
WITHOUT_CLASSIFICATION	// Where we get new positions from.
WITHOUT_CLASSIFICATION	// Start of string ([, (, {, <, ', ", \n) 
WITHOUT_CLASSIFICATION	// Number of newlines read from the reader
WITHOUT_CLASSIFICATION	// How many bytes into the source are we?
WITHOUT_CLASSIFICATION	// For 'list' and only populated if list is not null.
WITHOUT_CLASSIFICATION	// Last full line read.
WITHOUT_CLASSIFICATION	// Save sourceLine for error reporting to display line where error occurred
WITHOUT_CLASSIFICATION	// Get rest of line. lineBuffer filled as side-effect...
WITHOUT_CLASSIFICATION	// Expand variables, Indentation of final marker
WITHOUT_CLASSIFICATION	// Expand variables, Indentation of final marker
WITHOUT_CLASSIFICATION	// End of string (], ), }, >, ', ", \0)
WITHOUT_CLASSIFICATION	// How many strings are nested in the current string term
WITHOUT_CLASSIFICATION	// Single-quote fast path
WITHOUT_CLASSIFICATION	// Regexp engine 'java'
WITHOUT_CLASSIFICATION	// Was a goto in original ruby lexer
WITHOUT_CLASSIFICATION	/* just ignore */
WITHOUT_CLASSIFICATION	/* octal constant */
WITHOUT_CLASSIFICATION	/* hex constant */
WITHOUT_CLASSIFICATION	// PUSH(1)
WITHOUT_CLASSIFICATION	// POP
WITHOUT_CLASSIFICATION	// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.
WITHOUT_CLASSIFICATION	// LEXPOP
WITHOUT_CLASSIFICATION	// SET_P
WITHOUT_CLASSIFICATION	// Marker delimiting heredoc boundary
WITHOUT_CLASSIFICATION	// Found end marker for this heredoc
WITHOUT_CLASSIFICATION	// Put back lastLine for any elements past start of heredoc marker
WITHOUT_CLASSIFICATION	// Last token read via yylex().
WITHOUT_CLASSIFICATION	// Value of last token which had a value associated with it.
WITHOUT_CLASSIFICATION	// Stream of data that yylex() examines.
WITHOUT_CLASSIFICATION	// Used for tiny smidgen of grammar in lexer (see setParserSupport())
WITHOUT_CLASSIFICATION	// Give a name to a value.  Enebo: This should be used more.
WITHOUT_CLASSIFICATION	// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').
WITHOUT_CLASSIFICATION	// Are we lexing Ruby 1.8 or 1.9+ syntax
WITHOUT_CLASSIFICATION	// Count of nested parentheses (1.9 only)
WITHOUT_CLASSIFICATION	// 1.9 only
WITHOUT_CLASSIFICATION	// Short-hand (e.g. %{,%.,%!,... versus %Q{).
WITHOUT_CLASSIFICATION	// Long-hand (e.g. %Q{}).
WITHOUT_CLASSIFICATION	/* no mb || ismbchar(term)*/
WITHOUT_CLASSIFICATION	/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */
WITHOUT_CLASSIFICATION	// DEBUGGING HELP 
WITHOUT_CLASSIFICATION	/* '\v' */
WITHOUT_CLASSIFICATION	/* end of script. */
WITHOUT_CLASSIFICATION	/* white spaces */
WITHOUT_CLASSIFICATION	/* '\v' */
WITHOUT_CLASSIFICATION	/* it's a comment */
WITHOUT_CLASSIFICATION	// Replace a string of newlines with a single one
WITHOUT_CLASSIFICATION	/* $\: output record separator */
WITHOUT_CLASSIFICATION	// EOF (ENEBO: After default?
WITHOUT_CLASSIFICATION	// documentation nodes
WITHOUT_CLASSIFICATION	// In case last next was the newline.
WITHOUT_CLASSIFICATION	// Just a plain bang
WITHOUT_CLASSIFICATION	/* $_: last read line string */
WITHOUT_CLASSIFICATION	/* $~: match-data */
WITHOUT_CLASSIFICATION	/* $*: argv */
WITHOUT_CLASSIFICATION	/* $$: pid */
WITHOUT_CLASSIFICATION	/* $?: last status */
WITHOUT_CLASSIFICATION	/* $!: error string */
WITHOUT_CLASSIFICATION	/* $@: error position */
WITHOUT_CLASSIFICATION	/* $/: input record separator */
WITHOUT_CLASSIFICATION	/* $;: field separator */
WITHOUT_CLASSIFICATION	/* $,: output field separator */
WITHOUT_CLASSIFICATION	/* $.: last read line number */
WITHOUT_CLASSIFICATION	/* $=: ignorecase */
WITHOUT_CLASSIFICATION	/* $:: load path */
WITHOUT_CLASSIFICATION	/* $<: reading filename */
WITHOUT_CLASSIFICATION	/* $": already loaded files */
WITHOUT_CLASSIFICATION	/* $&: last match */
WITHOUT_CLASSIFICATION	/* $`: string before last match */
WITHOUT_CLASSIFICATION	/* $': string after last match */
WITHOUT_CLASSIFICATION	// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop
WITHOUT_CLASSIFICATION	/* See if it is a reserved word.  */
WITHOUT_CLASSIFICATION	// enum lex_state
WITHOUT_CLASSIFICATION	// block (primary)
WITHOUT_CLASSIFICATION	// block (expr)
WITHOUT_CLASSIFICATION	// hash
WITHOUT_CLASSIFICATION	// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.
WITHOUT_CLASSIFICATION	// FIXME: peek('u') utf8 stuff for 1.9
WITHOUT_CLASSIFICATION	// We don't append '+' since Java number parser gets confused
WITHOUT_CLASSIFICATION	//  hexadecimal
WITHOUT_CLASSIFICATION	// binary
WITHOUT_CLASSIFICATION	// decimal
WITHOUT_CLASSIFICATION	//Octal
WITHOUT_CLASSIFICATION	//  '_' in number just ignored
WITHOUT_CLASSIFICATION	// backslash
WITHOUT_CLASSIFICATION	// newline
WITHOUT_CLASSIFICATION	// horizontal tab
WITHOUT_CLASSIFICATION	// form feed
WITHOUT_CLASSIFICATION	// vertical tab
WITHOUT_CLASSIFICATION	// alarm(bell)
WITHOUT_CLASSIFICATION	// escape
WITHOUT_CLASSIFICATION	// hex constant
WITHOUT_CLASSIFICATION	//char hexValue = scanHex(2);
WITHOUT_CLASSIFICATION	// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).
WITHOUT_CLASSIFICATION	// space
WITHOUT_CLASSIFICATION	// Where we started this marker match
WITHOUT_CLASSIFICATION	// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.
WITHOUT_CLASSIFICATION	// We use offset here to keep track of extra newlines for windows
WITHOUT_CLASSIFICATION	// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).
WITHOUT_CLASSIFICATION	// FIXME: Old Mac format strings?
WITHOUT_CLASSIFICATION	// FIXME: Old Mac format strings?
WITHOUT_CLASSIFICATION	// Where we get our newest char's
WITHOUT_CLASSIFICATION	// Our readback/pushback buffer.
WITHOUT_CLASSIFICATION	// index of last character in pushback buffer
WITHOUT_CLASSIFICATION	// Character read before previous read
WITHOUT_CLASSIFICATION	// keep value of twoAgo around so we can restore after we unread
WITHOUT_CLASSIFICATION	// NetProtocolBufferedIOLibrary
WITHOUT_CLASSIFICATION	// BigDecimalLibrary
WITHOUT_CLASSIFICATION	// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now
WITHOUT_CLASSIFICATION	// Ruby's designation for some platforms, minus version numbers in some cases
WITHOUT_CLASSIFICATION	// that's what JDK5 produces on Windows Vista
WITHOUT_CLASSIFICATION	// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));
WITHOUT_CLASSIFICATION	// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).
WITHOUT_CLASSIFICATION	// this set is only for darwin
WITHOUT_CLASSIFICATION	// DigestLibrary
WITHOUT_CLASSIFICATION	// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error
WITHOUT_CLASSIFICATION	// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error
WITHOUT_CLASSIFICATION	// do nothing, return dummy version below
WITHOUT_CLASSIFICATION	//yyLhs 496
WITHOUT_CLASSIFICATION	//yyLhs 496
WITHOUT_CLASSIFICATION	//yyLhs 496
WITHOUT_CLASSIFICATION	//yyLhs 496
WITHOUT_CLASSIFICATION	//yyLhs 496
WITHOUT_CLASSIFICATION	// line 329
WITHOUT_CLASSIFICATION	//new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	//yyGindex 152
WITHOUT_CLASSIFICATION	// dynamically increase
WITHOUT_CLASSIFICATION	// discarding a token does not change stack
WITHOUT_CLASSIFICATION	// else [default] reduce (yyN)
WITHOUT_CLASSIFICATION	// shift to yyN
WITHOUT_CLASSIFICATION	// reduce (yyN)
WITHOUT_CLASSIFICATION	// leave stack alone
WITHOUT_CLASSIFICATION	// line 271
WITHOUT_CLASSIFICATION	// line 274
WITHOUT_CLASSIFICATION	// line 303
WITHOUT_CLASSIFICATION	// line 311
WITHOUT_CLASSIFICATION	// line 314
WITHOUT_CLASSIFICATION	// line 317
WITHOUT_CLASSIFICATION	// line 332
WITHOUT_CLASSIFICATION	// line 338
WITHOUT_CLASSIFICATION	// line 341
WITHOUT_CLASSIFICATION	// line 344
WITHOUT_CLASSIFICATION	// line 351
WITHOUT_CLASSIFICATION	// line 358
WITHOUT_CLASSIFICATION	// line 367
WITHOUT_CLASSIFICATION	// line 372
WITHOUT_CLASSIFICATION	// line 378
WITHOUT_CLASSIFICATION	// line 382
WITHOUT_CLASSIFICATION	// line 407
WITHOUT_CLASSIFICATION	// line 411
WITHOUT_CLASSIFICATION	// line 414
WITHOUT_CLASSIFICATION	// line 417
WITHOUT_CLASSIFICATION	// line 420
WITHOUT_CLASSIFICATION	// line 426
WITHOUT_CLASSIFICATION	// line 434
WITHOUT_CLASSIFICATION	// line 443
WITHOUT_CLASSIFICATION	// line 446
WITHOUT_CLASSIFICATION	// line 452
WITHOUT_CLASSIFICATION	// line 457
WITHOUT_CLASSIFICATION	// line 464
WITHOUT_CLASSIFICATION	// line 467
WITHOUT_CLASSIFICATION	// line 470
WITHOUT_CLASSIFICATION	// line 479
WITHOUT_CLASSIFICATION	// line 484
WITHOUT_CLASSIFICATION	// line 486
WITHOUT_CLASSIFICATION	// line 492
WITHOUT_CLASSIFICATION	// line 498
WITHOUT_CLASSIFICATION	// line 501
WITHOUT_CLASSIFICATION	// line 504
WITHOUT_CLASSIFICATION	// line 507
WITHOUT_CLASSIFICATION	// line 510
WITHOUT_CLASSIFICATION	// line 519
WITHOUT_CLASSIFICATION	// line 525
WITHOUT_CLASSIFICATION	//yyGindex 152
WITHOUT_CLASSIFICATION	// line 537
WITHOUT_CLASSIFICATION	// line 540
WITHOUT_CLASSIFICATION	// line 543
WITHOUT_CLASSIFICATION	// line 546
WITHOUT_CLASSIFICATION	// line 556
WITHOUT_CLASSIFICATION	// line 559
WITHOUT_CLASSIFICATION	// line 563
WITHOUT_CLASSIFICATION	// line 566
WITHOUT_CLASSIFICATION	// line 569
WITHOUT_CLASSIFICATION	// line 575
WITHOUT_CLASSIFICATION	// line 578
WITHOUT_CLASSIFICATION	// line 587
WITHOUT_CLASSIFICATION	// line 596
WITHOUT_CLASSIFICATION	// line 604
WITHOUT_CLASSIFICATION	// line 607
WITHOUT_CLASSIFICATION	// line 610
WITHOUT_CLASSIFICATION	// line 613
WITHOUT_CLASSIFICATION	// line 616
WITHOUT_CLASSIFICATION	// line 634
WITHOUT_CLASSIFICATION	// line 638
WITHOUT_CLASSIFICATION	// line 643
WITHOUT_CLASSIFICATION	// line 646
WITHOUT_CLASSIFICATION	// line 655
WITHOUT_CLASSIFICATION	// line 660
WITHOUT_CLASSIFICATION	// line 667
WITHOUT_CLASSIFICATION	// line 670
WITHOUT_CLASSIFICATION	// line 672
WITHOUT_CLASSIFICATION	// line 696
WITHOUT_CLASSIFICATION	// line 701
WITHOUT_CLASSIFICATION	// line 717
WITHOUT_CLASSIFICATION	// line 720
WITHOUT_CLASSIFICATION	// line 726
WITHOUT_CLASSIFICATION	// line 729
WITHOUT_CLASSIFICATION	// line 732
WITHOUT_CLASSIFICATION	// line 735
WITHOUT_CLASSIFICATION	// line 738
WITHOUT_CLASSIFICATION	// line 751
WITHOUT_CLASSIFICATION	// line 754
WITHOUT_CLASSIFICATION	// line 757
WITHOUT_CLASSIFICATION	// line 760
WITHOUT_CLASSIFICATION	// line 763
WITHOUT_CLASSIFICATION	// line 769
WITHOUT_CLASSIFICATION	// line 772
WITHOUT_CLASSIFICATION	// line 775
WITHOUT_CLASSIFICATION	// line 782
WITHOUT_CLASSIFICATION	// line 788
WITHOUT_CLASSIFICATION	// line 791
WITHOUT_CLASSIFICATION	// line 794
WITHOUT_CLASSIFICATION	// line 797
WITHOUT_CLASSIFICATION	// line 803
WITHOUT_CLASSIFICATION	// line 806
WITHOUT_CLASSIFICATION	// line 809
WITHOUT_CLASSIFICATION	// line 815
WITHOUT_CLASSIFICATION	// line 818
WITHOUT_CLASSIFICATION	// line 821
WITHOUT_CLASSIFICATION	// line 824
WITHOUT_CLASSIFICATION	// line 830
WITHOUT_CLASSIFICATION	// line 833
WITHOUT_CLASSIFICATION	// line 836
WITHOUT_CLASSIFICATION	// line 839
WITHOUT_CLASSIFICATION	// line 842
WITHOUT_CLASSIFICATION	// line 848
WITHOUT_CLASSIFICATION	// line 852
WITHOUT_CLASSIFICATION	// line 858
WITHOUT_CLASSIFICATION	// line 861
WITHOUT_CLASSIFICATION	// line 868
WITHOUT_CLASSIFICATION	// line 871
WITHOUT_CLASSIFICATION	// line 876
WITHOUT_CLASSIFICATION	// line 879
WITHOUT_CLASSIFICATION	// line 883
WITHOUT_CLASSIFICATION	// line 893
WITHOUT_CLASSIFICATION	// line 896
WITHOUT_CLASSIFICATION	// line 899
WITHOUT_CLASSIFICATION	// line 903
WITHOUT_CLASSIFICATION	// line 907
WITHOUT_CLASSIFICATION	// line 915
WITHOUT_CLASSIFICATION	// line 920
WITHOUT_CLASSIFICATION	// line 923
WITHOUT_CLASSIFICATION	// line 926
WITHOUT_CLASSIFICATION	// line 932
WITHOUT_CLASSIFICATION	// line 936
WITHOUT_CLASSIFICATION	// line 940
WITHOUT_CLASSIFICATION	// line 944
WITHOUT_CLASSIFICATION	// line 948
WITHOUT_CLASSIFICATION	// line 956
WITHOUT_CLASSIFICATION	// line 960
WITHOUT_CLASSIFICATION	// line 964
WITHOUT_CLASSIFICATION	// line 967
WITHOUT_CLASSIFICATION	// line 972
WITHOUT_CLASSIFICATION	// line 978
WITHOUT_CLASSIFICATION	// line 980
WITHOUT_CLASSIFICATION	// line 984
WITHOUT_CLASSIFICATION	// line 986
WITHOUT_CLASSIFICATION	// line 996
WITHOUT_CLASSIFICATION	// line 1001
WITHOUT_CLASSIFICATION	// line 1004
WITHOUT_CLASSIFICATION	// line 1008
WITHOUT_CLASSIFICATION	// line 1014
WITHOUT_CLASSIFICATION	// line 1029
WITHOUT_CLASSIFICATION	// line 1032
WITHOUT_CLASSIFICATION	// line 1034
WITHOUT_CLASSIFICATION	// line 1045
WITHOUT_CLASSIFICATION	// line 1048
WITHOUT_CLASSIFICATION	// line 1051
WITHOUT_CLASSIFICATION	// line 1058
WITHOUT_CLASSIFICATION	// line 1070
WITHOUT_CLASSIFICATION	// line 1073
WITHOUT_CLASSIFICATION	// line 1076
WITHOUT_CLASSIFICATION	// line 1079
WITHOUT_CLASSIFICATION	// line 1082
WITHOUT_CLASSIFICATION	// line 1089
WITHOUT_CLASSIFICATION	// line 1097
WITHOUT_CLASSIFICATION	// line 1100
WITHOUT_CLASSIFICATION	// line 1103
WITHOUT_CLASSIFICATION	// line 1107
WITHOUT_CLASSIFICATION	// line 1111
WITHOUT_CLASSIFICATION	// line 1113
WITHOUT_CLASSIFICATION	// line 1115
WITHOUT_CLASSIFICATION	// line 1119
WITHOUT_CLASSIFICATION	// line 1130
WITHOUT_CLASSIFICATION	// line 1133
WITHOUT_CLASSIFICATION	// line 1135
WITHOUT_CLASSIFICATION	// line 1137
WITHOUT_CLASSIFICATION	// line 1140
WITHOUT_CLASSIFICATION	// line 1151
WITHOUT_CLASSIFICATION	// line 1154
WITHOUT_CLASSIFICATION	// line 1158
WITHOUT_CLASSIFICATION	// line 1164
WITHOUT_CLASSIFICATION	// line 1175
WITHOUT_CLASSIFICATION	// line 1178
WITHOUT_CLASSIFICATION	// line 1187
WITHOUT_CLASSIFICATION	// line 1189
WITHOUT_CLASSIFICATION	// line 1193
WITHOUT_CLASSIFICATION	// line 1204
WITHOUT_CLASSIFICATION	// line 1207
WITHOUT_CLASSIFICATION	// line 1210
WITHOUT_CLASSIFICATION	// line 1214
WITHOUT_CLASSIFICATION	// line 1234
WITHOUT_CLASSIFICATION	// line 1239
WITHOUT_CLASSIFICATION	// line 1243
WITHOUT_CLASSIFICATION	// line 1247
WITHOUT_CLASSIFICATION	// line 1251
WITHOUT_CLASSIFICATION	// line 1263
WITHOUT_CLASSIFICATION	// line 1269
WITHOUT_CLASSIFICATION	// line 1280
WITHOUT_CLASSIFICATION	// line 1283
WITHOUT_CLASSIFICATION	// line 1290
WITHOUT_CLASSIFICATION	// line 1296
WITHOUT_CLASSIFICATION	// line 1299
WITHOUT_CLASSIFICATION	// line 1302
WITHOUT_CLASSIFICATION	// line 1309
WITHOUT_CLASSIFICATION	// line 1313
WITHOUT_CLASSIFICATION	// line 1315
WITHOUT_CLASSIFICATION	// line 1320
WITHOUT_CLASSIFICATION	// line 1328
WITHOUT_CLASSIFICATION	// line 1335
WITHOUT_CLASSIFICATION	// line 1348
WITHOUT_CLASSIFICATION	// line 1352
WITHOUT_CLASSIFICATION	// line 1358
WITHOUT_CLASSIFICATION	// line 1374
WITHOUT_CLASSIFICATION	// line 1381
WITHOUT_CLASSIFICATION	// line 1387
WITHOUT_CLASSIFICATION	// line 1392
WITHOUT_CLASSIFICATION	// line 1415
WITHOUT_CLASSIFICATION	// line 1431
WITHOUT_CLASSIFICATION	// line 1434
WITHOUT_CLASSIFICATION	// line 1440
WITHOUT_CLASSIFICATION	// line 1443
WITHOUT_CLASSIFICATION	// line 1453
WITHOUT_CLASSIFICATION	// line 1456
WITHOUT_CLASSIFICATION	// line 1462
WITHOUT_CLASSIFICATION	// line 1465
WITHOUT_CLASSIFICATION	// line 1470
WITHOUT_CLASSIFICATION	// line 1477
WITHOUT_CLASSIFICATION	// line 1480
WITHOUT_CLASSIFICATION	// line 1485
WITHOUT_CLASSIFICATION	// line 1488
WITHOUT_CLASSIFICATION	// line 1496
WITHOUT_CLASSIFICATION	// line 1502
WITHOUT_CLASSIFICATION	// line 1510
WITHOUT_CLASSIFICATION	// line 1513
WITHOUT_CLASSIFICATION	// line 1516
WITHOUT_CLASSIFICATION	// line 1533
WITHOUT_CLASSIFICATION	// line 1550
WITHOUT_CLASSIFICATION	// line 1553
WITHOUT_CLASSIFICATION	// line 1556
WITHOUT_CLASSIFICATION	// line 1565
WITHOUT_CLASSIFICATION	// line 1568
WITHOUT_CLASSIFICATION	// line 1571
WITHOUT_CLASSIFICATION	// line 1574
WITHOUT_CLASSIFICATION	// line 1577
WITHOUT_CLASSIFICATION	// line 1587
WITHOUT_CLASSIFICATION	// line 1595
WITHOUT_CLASSIFICATION	// line 1598
WITHOUT_CLASSIFICATION	// line 1600
WITHOUT_CLASSIFICATION	// line 1609
WITHOUT_CLASSIFICATION	// line 1623
WITHOUT_CLASSIFICATION	// line 1626
WITHOUT_CLASSIFICATION	// line 1629
WITHOUT_CLASSIFICATION	// line 1632
WITHOUT_CLASSIFICATION	// line 1638
WITHOUT_CLASSIFICATION	// line 1641
WITHOUT_CLASSIFICATION	// line 1644
WITHOUT_CLASSIFICATION	// line 1649
WITHOUT_CLASSIFICATION	// line 1655
WITHOUT_CLASSIFICATION	// line 1658
WITHOUT_CLASSIFICATION	// line 1661
WITHOUT_CLASSIFICATION	// line 1672
WITHOUT_CLASSIFICATION	// line 1677
WITHOUT_CLASSIFICATION	// line 1687
WITHOUT_CLASSIFICATION	// line 1694
WITHOUT_CLASSIFICATION	// line 1705
WITHOUT_CLASSIFICATION	// line 1708
WITHOUT_CLASSIFICATION	// line 1725
WITHOUT_CLASSIFICATION	// line 1733
WITHOUT_CLASSIFICATION	// line 1742
WITHOUT_CLASSIFICATION	// line 1745
WITHOUT_CLASSIFICATION	// line 1749
WITHOUT_CLASSIFICATION	// line 1757
WITHOUT_CLASSIFICATION	// line 1769
WITHOUT_CLASSIFICATION	// line 1772
WITHOUT_CLASSIFICATION	// line 1775
WITHOUT_CLASSIFICATION	// line 1784
WITHOUT_CLASSIFICATION	// line 1808
WITHOUT_CLASSIFICATION	// line 1814
WITHOUT_CLASSIFICATION	// line 1818
WITHOUT_CLASSIFICATION	// line 1822
WITHOUT_CLASSIFICATION	/* force for args */
WITHOUT_CLASSIFICATION	/*XXX 0;*/
WITHOUT_CLASSIFICATION	/*                      $$ = $3;*/
WITHOUT_CLASSIFICATION	/*                  }*/
WITHOUT_CLASSIFICATION	/* last expression should not be void */
WITHOUT_CLASSIFICATION	/* compstmt position includes both parens around it*/
WITHOUT_CLASSIFICATION	/*$8 == null ? NilImplicitNode.NIL : $8;*/
WITHOUT_CLASSIFICATION	/*$5 == null ? NilImplicitNode.NIL : $5;*/
WITHOUT_CLASSIFICATION	/* NOEX_PRIVATE for toplevel */
WITHOUT_CLASSIFICATION	/*mirko: check*/
WITHOUT_CLASSIFICATION	/* Include pipes on multiple arg type*/
WITHOUT_CLASSIFICATION	// line 529
WITHOUT_CLASSIFICATION	/* .setPosFrom($2);*/
WITHOUT_CLASSIFICATION	/* XXX*/
WITHOUT_CLASSIFICATION	/* zero length array */
WITHOUT_CLASSIFICATION	/* DStrNode: :"some text #{some expression}"*/
WITHOUT_CLASSIFICATION	/* StrNode: :"some text"*/
WITHOUT_CLASSIFICATION	/* EvStrNode :"#{some expression}"*/
WITHOUT_CLASSIFICATION	// line 1827 "DefaultRubyParser.y"
WITHOUT_CLASSIFICATION	// ignore, no debugger present
WITHOUT_CLASSIFICATION	//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));
WITHOUT_CLASSIFICATION	// line 7713 "-"
WITHOUT_CLASSIFICATION	// local scopes are argument scopes by default
WITHOUT_CLASSIFICATION	// mark as captured if from containing scope
WITHOUT_CLASSIFICATION	// mark as captured if from containing scope
WITHOUT_CLASSIFICATION	// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.
WITHOUT_CLASSIFICATION	// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic
WITHOUT_CLASSIFICATION	// odd...but it is odd in ruby too.
WITHOUT_CLASSIFICATION	// What linenumber will the source think it starts from?
WITHOUT_CLASSIFICATION	// Is this inline source (aka -e "...source...")
WITHOUT_CLASSIFICATION	// We parse evals more often in source so assume an eval parse.
WITHOUT_CLASSIFICATION	// Should positions added extra IDE-friendly information and leave in all newline nodes
WITHOUT_CLASSIFICATION	// Will parser parse Duby grammar Extensions
WITHOUT_CLASSIFICATION	// Should we display extra debug information while parsing?
WITHOUT_CLASSIFICATION	// __END__ marker offset (-1 means none present)
WITHOUT_CLASSIFICATION	// Parser states:
WITHOUT_CLASSIFICATION	// Is the parser current within a singleton (value is number of nested singletons)
WITHOUT_CLASSIFICATION	// Is the parser currently within a method definition
WITHOUT_CLASSIFICATION	// LOCALVAR
WITHOUT_CLASSIFICATION	// CONSTANT
WITHOUT_CLASSIFICATION	// INSTANCE VARIABLE
WITHOUT_CLASSIFICATION	// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])
WITHOUT_CLASSIFICATION	/* MRI: block_append */
WITHOUT_CLASSIFICATION	// Reduces overhead in interp by not set position every single line we encounter. 
WITHOUT_CLASSIFICATION	// Assumption: tail is never a list node
WITHOUT_CLASSIFICATION	//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));
WITHOUT_CLASSIFICATION	// Node
WITHOUT_CLASSIFICATION	// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/
WITHOUT_CLASSIFICATION	// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/
WITHOUT_CLASSIFICATION	/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/
WITHOUT_CLASSIFICATION	// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"
WITHOUT_CLASSIFICATION	/* MRI: range_op */
WITHOUT_CLASSIFICATION	// Block and block pass passed in at same time....uh oh
WITHOUT_CLASSIFICATION	// foo()
WITHOUT_CLASSIFICATION	// foo()
WITHOUT_CLASSIFICATION	// foo()
WITHOUT_CLASSIFICATION	// tail must be EvStrNode at this point 
WITHOUT_CLASSIFICATION	//Do not add an empty string node
WITHOUT_CLASSIFICATION	// Zero-Argument declaration
WITHOUT_CLASSIFICATION	//yyLhs 542
WITHOUT_CLASSIFICATION	//yyLhs 542
WITHOUT_CLASSIFICATION	//yyLhs 542
WITHOUT_CLASSIFICATION	//yyLhs 542
WITHOUT_CLASSIFICATION	//yyLhs 542
WITHOUT_CLASSIFICATION	//yyLhs 542
WITHOUT_CLASSIFICATION	//yyLen 542
WITHOUT_CLASSIFICATION	//yyLen 542
WITHOUT_CLASSIFICATION	//yyLen 542
WITHOUT_CLASSIFICATION	//yyLen 542
WITHOUT_CLASSIFICATION	//yyLen 542
WITHOUT_CLASSIFICATION	//yyDefRed 945
WITHOUT_CLASSIFICATION	//yyDefRed 945
WITHOUT_CLASSIFICATION	//yyDefRed 945
WITHOUT_CLASSIFICATION	//yyDefRed 945
WITHOUT_CLASSIFICATION	//yyDefRed 945
WITHOUT_CLASSIFICATION	//yyDgoto 152
WITHOUT_CLASSIFICATION	//yyDgoto 152
WITHOUT_CLASSIFICATION	//yyDgoto 152
WITHOUT_CLASSIFICATION	//yyDgoto 152
WITHOUT_CLASSIFICATION	//yyDgoto 152
WITHOUT_CLASSIFICATION	//yyDgoto 152
WITHOUT_CLASSIFICATION	//yySindex 945
WITHOUT_CLASSIFICATION	//yySindex 945
WITHOUT_CLASSIFICATION	//yySindex 945
WITHOUT_CLASSIFICATION	//yySindex 945
WITHOUT_CLASSIFICATION	//yySindex 945
WITHOUT_CLASSIFICATION	//yyRindex 945
WITHOUT_CLASSIFICATION	//yyRindex 945
WITHOUT_CLASSIFICATION	//yyRindex 945
WITHOUT_CLASSIFICATION	//yyRindex 945
WITHOUT_CLASSIFICATION	//yyRindex 945
WITHOUT_CLASSIFICATION	//yyGindex 152
WITHOUT_CLASSIFICATION	//yyGindex 152
WITHOUT_CLASSIFICATION	//yyGindex 152
WITHOUT_CLASSIFICATION	//yyGindex 152
WITHOUT_CLASSIFICATION	//yyGindex 152
WITHOUT_CLASSIFICATION	// dynamically increase
WITHOUT_CLASSIFICATION	// else [default] reduce (yyN)
WITHOUT_CLASSIFICATION	// shift to yyN
WITHOUT_CLASSIFICATION	// reduce (yyN)
WITHOUT_CLASSIFICATION	// leave stack alone
WITHOUT_CLASSIFICATION	// line 321
WITHOUT_CLASSIFICATION	// line 351
WITHOUT_CLASSIFICATION	// line 382
WITHOUT_CLASSIFICATION	// line 417
WITHOUT_CLASSIFICATION	// line 420
WITHOUT_CLASSIFICATION	// line 423
WITHOUT_CLASSIFICATION	// line 426
WITHOUT_CLASSIFICATION	// line 280
WITHOUT_CLASSIFICATION	// line 283
WITHOUT_CLASSIFICATION	// line 296
WITHOUT_CLASSIFICATION	// line 324
WITHOUT_CLASSIFICATION	// line 327
WITHOUT_CLASSIFICATION	// line 331
WITHOUT_CLASSIFICATION	// line 333
WITHOUT_CLASSIFICATION	// line 336
WITHOUT_CLASSIFICATION	// line 342
WITHOUT_CLASSIFICATION	// line 345
WITHOUT_CLASSIFICATION	// line 348
WITHOUT_CLASSIFICATION	// line 354
WITHOUT_CLASSIFICATION	// line 368
WITHOUT_CLASSIFICATION	// line 377
WITHOUT_CLASSIFICATION	// line 388
WITHOUT_CLASSIFICATION	// line 392
WITHOUT_CLASSIFICATION	// line 397
WITHOUT_CLASSIFICATION	// line 429
WITHOUT_CLASSIFICATION	// line 432
WITHOUT_CLASSIFICATION	// line 436
WITHOUT_CLASSIFICATION	// line 445
WITHOUT_CLASSIFICATION	// line 448
WITHOUT_CLASSIFICATION	// line 454
WITHOUT_CLASSIFICATION	// line 459
WITHOUT_CLASSIFICATION	// line 466
WITHOUT_CLASSIFICATION	// line 469
WITHOUT_CLASSIFICATION	// line 478
WITHOUT_CLASSIFICATION	// line 481
WITHOUT_CLASSIFICATION	// line 488
WITHOUT_CLASSIFICATION	// line 494
WITHOUT_CLASSIFICATION	// line 497
WITHOUT_CLASSIFICATION	// line 503
WITHOUT_CLASSIFICATION	// line 506
WITHOUT_CLASSIFICATION	// line 509
WITHOUT_CLASSIFICATION	// line 512
WITHOUT_CLASSIFICATION	// line 521
WITHOUT_CLASSIFICATION	// line 526
WITHOUT_CLASSIFICATION	// line 540
WITHOUT_CLASSIFICATION	// line 543
WITHOUT_CLASSIFICATION	// line 546
WITHOUT_CLASSIFICATION	// line 566
WITHOUT_CLASSIFICATION	// line 610
WITHOUT_CLASSIFICATION	// line 672
WITHOUT_CLASSIFICATION	// line 691
WITHOUT_CLASSIFICATION	// line 696
WITHOUT_CLASSIFICATION	// line 772
WITHOUT_CLASSIFICATION	// line 782
WITHOUT_CLASSIFICATION	// line 785
WITHOUT_CLASSIFICATION	// line 788
WITHOUT_CLASSIFICATION	// line 791
WITHOUT_CLASSIFICATION	// line 534
WITHOUT_CLASSIFICATION	// line 549
WITHOUT_CLASSIFICATION	// line 552
WITHOUT_CLASSIFICATION	// line 558
WITHOUT_CLASSIFICATION	// line 561
WITHOUT_CLASSIFICATION	// line 571
WITHOUT_CLASSIFICATION	// line 574
WITHOUT_CLASSIFICATION	// line 579
WITHOUT_CLASSIFICATION	// line 586
WITHOUT_CLASSIFICATION	// line 589
WITHOUT_CLASSIFICATION	// line 592
WITHOUT_CLASSIFICATION	// line 595
WITHOUT_CLASSIFICATION	// line 598
WITHOUT_CLASSIFICATION	// line 623
WITHOUT_CLASSIFICATION	// line 627
WITHOUT_CLASSIFICATION	// line 630
WITHOUT_CLASSIFICATION	// line 633
WITHOUT_CLASSIFICATION	// line 639
WITHOUT_CLASSIFICATION	// line 648
WITHOUT_CLASSIFICATION	// line 657
WITHOUT_CLASSIFICATION	// line 661
WITHOUT_CLASSIFICATION	// line 666
WITHOUT_CLASSIFICATION	// line 678
WITHOUT_CLASSIFICATION	// line 682
WITHOUT_CLASSIFICATION	// line 688
WITHOUT_CLASSIFICATION	// line 699
WITHOUT_CLASSIFICATION	// line 706
WITHOUT_CLASSIFICATION	// line 708
WITHOUT_CLASSIFICATION	// line 727
WITHOUT_CLASSIFICATION	// line 737
WITHOUT_CLASSIFICATION	// line 753
WITHOUT_CLASSIFICATION	// line 779
WITHOUT_CLASSIFICATION	// line 801
WITHOUT_CLASSIFICATION	// line 808
WITHOUT_CLASSIFICATION	// line 811
WITHOUT_CLASSIFICATION	// line 817
WITHOUT_CLASSIFICATION	// line 842
WITHOUT_CLASSIFICATION	// line 845
WITHOUT_CLASSIFICATION	// line 848
WITHOUT_CLASSIFICATION	// line 893
WITHOUT_CLASSIFICATION	// line 899
WITHOUT_CLASSIFICATION	// line 932
WITHOUT_CLASSIFICATION	// line 944
WITHOUT_CLASSIFICATION	// line 960
WITHOUT_CLASSIFICATION	// line 980
WITHOUT_CLASSIFICATION	// line 1004
WITHOUT_CLASSIFICATION	// line 1038
WITHOUT_CLASSIFICATION	// line 820
WITHOUT_CLASSIFICATION	// line 826
WITHOUT_CLASSIFICATION	// line 829
WITHOUT_CLASSIFICATION	// line 832
WITHOUT_CLASSIFICATION	// line 851
WITHOUT_CLASSIFICATION	// line 857
WITHOUT_CLASSIFICATION	// line 860
WITHOUT_CLASSIFICATION	// line 863
WITHOUT_CLASSIFICATION	// line 866
WITHOUT_CLASSIFICATION	// line 869
WITHOUT_CLASSIFICATION	// line 875
WITHOUT_CLASSIFICATION	// line 884
WITHOUT_CLASSIFICATION	// line 887
WITHOUT_CLASSIFICATION	// line 890
WITHOUT_CLASSIFICATION	// line 902
WITHOUT_CLASSIFICATION	// line 909
WITHOUT_CLASSIFICATION	// line 912
WITHOUT_CLASSIFICATION	// line 916
WITHOUT_CLASSIFICATION	// line 922
WITHOUT_CLASSIFICATION	// line 928
WITHOUT_CLASSIFICATION	// line 941
WITHOUT_CLASSIFICATION	// line 947
WITHOUT_CLASSIFICATION	// line 951
WITHOUT_CLASSIFICATION	// line 955
WITHOUT_CLASSIFICATION	// line 965
WITHOUT_CLASSIFICATION	// line 969
WITHOUT_CLASSIFICATION	// line 977
WITHOUT_CLASSIFICATION	// line 983
WITHOUT_CLASSIFICATION	// line 1013
WITHOUT_CLASSIFICATION	// line 1023
WITHOUT_CLASSIFICATION	// line 1035
WITHOUT_CLASSIFICATION	// line 1041
WITHOUT_CLASSIFICATION	// line 1043
WITHOUT_CLASSIFICATION	// line 1054
WITHOUT_CLASSIFICATION	// line 1057
WITHOUT_CLASSIFICATION	// line 1060
WITHOUT_CLASSIFICATION	// line 1069
WITHOUT_CLASSIFICATION	// line 1075
WITHOUT_CLASSIFICATION	// line 1105
WITHOUT_CLASSIFICATION	// line 1111
WITHOUT_CLASSIFICATION	// line 1122
WITHOUT_CLASSIFICATION	// line 1130
WITHOUT_CLASSIFICATION	// line 1140
WITHOUT_CLASSIFICATION	// line 1158
WITHOUT_CLASSIFICATION	// line 1204
WITHOUT_CLASSIFICATION	// line 1207
WITHOUT_CLASSIFICATION	// line 1247
WITHOUT_CLASSIFICATION	// line 1251
WITHOUT_CLASSIFICATION	// line 1261
WITHOUT_CLASSIFICATION	// line 1078
WITHOUT_CLASSIFICATION	// line 1084
WITHOUT_CLASSIFICATION	// line 1087
WITHOUT_CLASSIFICATION	// line 1090
WITHOUT_CLASSIFICATION	// line 1093
WITHOUT_CLASSIFICATION	// line 1114
WITHOUT_CLASSIFICATION	// line 1116
WITHOUT_CLASSIFICATION	// line 1118
WITHOUT_CLASSIFICATION	// line 1124
WITHOUT_CLASSIFICATION	// line 1126
WITHOUT_CLASSIFICATION	// line 1138
WITHOUT_CLASSIFICATION	// line 1144
WITHOUT_CLASSIFICATION	// line 1149
WITHOUT_CLASSIFICATION	// line 1155
WITHOUT_CLASSIFICATION	// line 1162
WITHOUT_CLASSIFICATION	// line 1173
WITHOUT_CLASSIFICATION	// line 1179
WITHOUT_CLASSIFICATION	// line 1182
WITHOUT_CLASSIFICATION	// line 1190
WITHOUT_CLASSIFICATION	// line 1196
WITHOUT_CLASSIFICATION	// line 1213
WITHOUT_CLASSIFICATION	// line 1217
WITHOUT_CLASSIFICATION	// line 1231
WITHOUT_CLASSIFICATION	// line 1236
WITHOUT_CLASSIFICATION	// line 1244
WITHOUT_CLASSIFICATION	// line 1254
WITHOUT_CLASSIFICATION	// line 1258
WITHOUT_CLASSIFICATION	// line 1264
WITHOUT_CLASSIFICATION	// line 1270
WITHOUT_CLASSIFICATION	// line 1273
WITHOUT_CLASSIFICATION	// line 1276
WITHOUT_CLASSIFICATION	// line 1279
WITHOUT_CLASSIFICATION	// line 1282
WITHOUT_CLASSIFICATION	// line 1289
WITHOUT_CLASSIFICATION	// line 1292
WITHOUT_CLASSIFICATION	// line 1295
WITHOUT_CLASSIFICATION	// line 1298
WITHOUT_CLASSIFICATION	// line 1305
WITHOUT_CLASSIFICATION	// line 1348
WITHOUT_CLASSIFICATION	// line 1387
WITHOUT_CLASSIFICATION	// line 1392
WITHOUT_CLASSIFICATION	// line 1448
WITHOUT_CLASSIFICATION	// line 1462
WITHOUT_CLASSIFICATION	// line 1470
WITHOUT_CLASSIFICATION	// line 1496
WITHOUT_CLASSIFICATION	// line 1502
WITHOUT_CLASSIFICATION	// line 1595
WITHOUT_CLASSIFICATION	// line 1598
WITHOUT_CLASSIFICATION	// line 1308
WITHOUT_CLASSIFICATION	// line 1311
WITHOUT_CLASSIFICATION	// line 1317
WITHOUT_CLASSIFICATION	// line 1323
WITHOUT_CLASSIFICATION	// line 1326
WITHOUT_CLASSIFICATION	// line 1329
WITHOUT_CLASSIFICATION	// line 1337
WITHOUT_CLASSIFICATION	// line 1342
WITHOUT_CLASSIFICATION	// line 1345
WITHOUT_CLASSIFICATION	// line 1354
WITHOUT_CLASSIFICATION	// line 1359
WITHOUT_CLASSIFICATION	// line 1366
WITHOUT_CLASSIFICATION	// line 1369
WITHOUT_CLASSIFICATION	// line 1373
WITHOUT_CLASSIFICATION	// line 1377
WITHOUT_CLASSIFICATION	// line 1383
WITHOUT_CLASSIFICATION	// line 1399
WITHOUT_CLASSIFICATION	// line 1401
WITHOUT_CLASSIFICATION	// line 1406
WITHOUT_CLASSIFICATION	// line 1417
WITHOUT_CLASSIFICATION	// line 1424
WITHOUT_CLASSIFICATION	// line 1427
WITHOUT_CLASSIFICATION	// line 1430
WITHOUT_CLASSIFICATION	// line 1433
WITHOUT_CLASSIFICATION	// line 1436
WITHOUT_CLASSIFICATION	// line 1442
WITHOUT_CLASSIFICATION	// line 1445
WITHOUT_CLASSIFICATION	// line 1458
WITHOUT_CLASSIFICATION	// line 1464
WITHOUT_CLASSIFICATION	// line 1489
WITHOUT_CLASSIFICATION	// line 1493
WITHOUT_CLASSIFICATION	// line 1507
WITHOUT_CLASSIFICATION	// line 1519
WITHOUT_CLASSIFICATION	// line 1532
WITHOUT_CLASSIFICATION	// line 1538
WITHOUT_CLASSIFICATION	// line 1542
WITHOUT_CLASSIFICATION	// line 1557
WITHOUT_CLASSIFICATION	// line 1573
WITHOUT_CLASSIFICATION	// line 1591
WITHOUT_CLASSIFICATION	// line 1615
WITHOUT_CLASSIFICATION	// line 1629
WITHOUT_CLASSIFICATION	// line 1632
WITHOUT_CLASSIFICATION	// line 1705
WITHOUT_CLASSIFICATION	// line 1716
WITHOUT_CLASSIFICATION	// line 1725
WITHOUT_CLASSIFICATION	// line 1742
WITHOUT_CLASSIFICATION	// line 1749
WITHOUT_CLASSIFICATION	// line 1818
WITHOUT_CLASSIFICATION	// line 1822
WITHOUT_CLASSIFICATION	// line 1607
WITHOUT_CLASSIFICATION	// line 1610
WITHOUT_CLASSIFICATION	// line 1622
WITHOUT_CLASSIFICATION	// line 1625
WITHOUT_CLASSIFICATION	// line 1636
WITHOUT_CLASSIFICATION	// line 1639
WITHOUT_CLASSIFICATION	// line 1647
WITHOUT_CLASSIFICATION	// line 1651
WITHOUT_CLASSIFICATION	// line 1657
WITHOUT_CLASSIFICATION	// line 1660
WITHOUT_CLASSIFICATION	// line 1663
WITHOUT_CLASSIFICATION	// line 1678
WITHOUT_CLASSIFICATION	// line 1702
WITHOUT_CLASSIFICATION	// line 1711
WITHOUT_CLASSIFICATION	// line 1719
WITHOUT_CLASSIFICATION	// line 1722
WITHOUT_CLASSIFICATION	// line 1731
WITHOUT_CLASSIFICATION	// line 1734
WITHOUT_CLASSIFICATION	// line 1738
WITHOUT_CLASSIFICATION	// line 1746
WITHOUT_CLASSIFICATION	// line 1756
WITHOUT_CLASSIFICATION	// line 1758
WITHOUT_CLASSIFICATION	// line 1761
WITHOUT_CLASSIFICATION	// line 1767
WITHOUT_CLASSIFICATION	// line 1776
WITHOUT_CLASSIFICATION	// line 1782
WITHOUT_CLASSIFICATION	// line 1785
WITHOUT_CLASSIFICATION	// line 1788
WITHOUT_CLASSIFICATION	// line 1791
WITHOUT_CLASSIFICATION	// line 1797
WITHOUT_CLASSIFICATION	// line 1800
WITHOUT_CLASSIFICATION	// line 1803
WITHOUT_CLASSIFICATION	// line 1806
WITHOUT_CLASSIFICATION	// line 1809
WITHOUT_CLASSIFICATION	// line 1815
WITHOUT_CLASSIFICATION	// line 1825
WITHOUT_CLASSIFICATION	// line 1828
WITHOUT_CLASSIFICATION	// line 1831
WITHOUT_CLASSIFICATION	// line 1847
WITHOUT_CLASSIFICATION	/*$8 == null ? NilImplicitNode.NIL : $8;*/
WITHOUT_CLASSIFICATION	/*$5 == null ? NilImplicitNode.NIL : $5;*/
WITHOUT_CLASSIFICATION	/* .setPosFrom($2);*/
WITHOUT_CLASSIFICATION	/* zero length array */
WITHOUT_CLASSIFICATION	/* DStrNode: :"some text #{some expression}"*/
WITHOUT_CLASSIFICATION	/* StrNode: :"some text"*/
WITHOUT_CLASSIFICATION	/* EvStrNode :"#{some expression}"*/
WITHOUT_CLASSIFICATION	// // INSTANCE VARIABLE METHODS //
WITHOUT_CLASSIFICATION	// line 1854
WITHOUT_CLASSIFICATION	// line 1869
WITHOUT_CLASSIFICATION	// line 1872
WITHOUT_CLASSIFICATION	// line 1877
WITHOUT_CLASSIFICATION	// line 1886
WITHOUT_CLASSIFICATION	// line 1898
WITHOUT_CLASSIFICATION	// line 1902
WITHOUT_CLASSIFICATION	// line 1905
WITHOUT_CLASSIFICATION	// line 1911
WITHOUT_CLASSIFICATION	// line 1918
WITHOUT_CLASSIFICATION	// line 1935
WITHOUT_CLASSIFICATION	// line 1938
WITHOUT_CLASSIFICATION	// line 1942
WITHOUT_CLASSIFICATION	// line 1948
WITHOUT_CLASSIFICATION	// line 1960
WITHOUT_CLASSIFICATION	// line 1963
WITHOUT_CLASSIFICATION	// line 1968
WITHOUT_CLASSIFICATION	// line 1972
WITHOUT_CLASSIFICATION	// line 1982
WITHOUT_CLASSIFICATION	// line 1995
WITHOUT_CLASSIFICATION	// line 2000
WITHOUT_CLASSIFICATION	// line 2006
WITHOUT_CLASSIFICATION	// line 2010
WITHOUT_CLASSIFICATION	/* We may need to subtract addition offset off of first */
WITHOUT_CLASSIFICATION	/* string fragment (we optimistically take one off in*/
WITHOUT_CLASSIFICATION	/* ParserSupport.literal_concat).  Check token length*/
WITHOUT_CLASSIFICATION	/* and subtract as neeeded.*/
WITHOUT_CLASSIFICATION	/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */
WITHOUT_CLASSIFICATION	/* ENEBO: arg surrounded by in_defined set/unset*/
WITHOUT_CLASSIFICATION	// ignore, no debugger present
WITHOUT_CLASSIFICATION	//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));
WITHOUT_CLASSIFICATION	// mark as captured if from containing scope
WITHOUT_CLASSIFICATION	// mark as captured if from containing scope
WITHOUT_CLASSIFICATION	/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/
WITHOUT_CLASSIFICATION	/* was $$ = null;*/
WITHOUT_CLASSIFICATION	// line 2019 "Ruby19Parser.y"
WITHOUT_CLASSIFICATION	// line 8143 "-"
WITHOUT_CLASSIFICATION	// we know variables cannot be null since localstaticscope will create a 0 length one.
WITHOUT_CLASSIFICATION	// No bit math to store level since we know level is zero for this case
WITHOUT_CLASSIFICATION	// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.
WITHOUT_CLASSIFICATION	// Live reference to module
WITHOUT_CLASSIFICATION	// Next CRef down the lexical structure
WITHOUT_CLASSIFICATION	// Our name holder (offsets are assigned as variables are added
WITHOUT_CLASSIFICATION	// number of variables in this scope representing required arguments
WITHOUT_CLASSIFICATION	// number of variables in this scope representing optional arguments
WITHOUT_CLASSIFICATION	// index of variable that represents a "rest" arg
WITHOUT_CLASSIFICATION	// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.
WITHOUT_CLASSIFICATION	// Returns slot of variable
WITHOUT_CLASSIFICATION	// Returns slot of variable
WITHOUT_CLASSIFICATION	/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */
WITHOUT_CLASSIFICATION	// If we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	/* Try and unload the autoload specified from internedName */
WITHOUT_CLASSIFICATION	// We override that the logic which uses this
WITHOUT_CLASSIFICATION	// This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	// do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	// source extensions
WITHOUT_CLASSIFICATION	// do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument
WITHOUT_CLASSIFICATION	// A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	// Is this thread currently with in a function trace?
WITHOUT_CLASSIFICATION	// Is this thread currently doing an defined? defined should set things like $!
WITHOUT_CLASSIFICATION	//private UnsynchronizedStack parentStack;
WITHOUT_CLASSIFICATION	//private UnsynchronizedStack frameStack;
WITHOUT_CLASSIFICATION	// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.
WITHOUT_CLASSIFICATION	// File where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	// Line where current executing unit is being evaluated
WITHOUT_CLASSIFICATION	// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.
WITHOUT_CLASSIFICATION	// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.
WITHOUT_CLASSIFICATION	//////////////////// CATCH MANAGEMENT ////////////////////////
WITHOUT_CLASSIFICATION	//////////////////// FRAME MANAGEMENT ////////////////////////
WITHOUT_CLASSIFICATION	// happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	// assert level == 0;
WITHOUT_CLASSIFICATION	// assert level == 0;
WITHOUT_CLASSIFICATION	// look for mangling markers for compiled Ruby in method name
WITHOUT_CLASSIFICATION	// if it's not a rescue or ensure, there's a frame associated, so decrement
WITHOUT_CLASSIFICATION	// look for __file__ method name for compiled roots
WITHOUT_CLASSIFICATION	// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.
WITHOUT_CLASSIFICATION	// required and optional only
WITHOUT_CLASSIFICATION	// do nothing, allow loop to redo
WITHOUT_CLASSIFICATION	// look for mangling markers for bound, unframed methods in class name
WITHOUT_CLASSIFICATION	// set the binding's frame's "previous" file and line to current, so // trace will show who called the block
WITHOUT_CLASSIFICATION	// framed invokers will have Ruby frames associated with them
WITHOUT_CLASSIFICATION	// look for mangling markers for bound, framed methods in class name
WITHOUT_CLASSIFICATION	// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line
WITHOUT_CLASSIFICATION	// try to mine out a Ruby frame using our list of interpreter entry-point markers
WITHOUT_CLASSIFICATION	// Frame matches one of our markers for "interpreted" calls
WITHOUT_CLASSIFICATION	// Frame is extraneous runtime information, skip it unless debug
WITHOUT_CLASSIFICATION	/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */
WITHOUT_CLASSIFICATION	// new scope for this invocation of the block, based on parent scope
WITHOUT_CLASSIFICATION	// No argument blocks
WITHOUT_CLASSIFICATION	// just push the same empty scope, since we won't use one
WITHOUT_CLASSIFICATION	// Not sure if this is actually possible, but better safe than sorry
WITHOUT_CLASSIFICATION	// rest arg must be splatted
WITHOUT_CLASSIFICATION	// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).
WITHOUT_CLASSIFICATION	// Highest reserved id
WITHOUT_CLASSIFICATION	// binary typed calls
WITHOUT_CLASSIFICATION	// id must always be even
WITHOUT_CLASSIFICATION	// with block pass
WITHOUT_CLASSIFICATION	// no block
WITHOUT_CLASSIFICATION	// with block literal (iter)
WITHOUT_CLASSIFICATION	//            assert false : "can this happen?";
WITHOUT_CLASSIFICATION	// if we have multiple asgn with just *args, need a special type for that
WITHOUT_CLASSIFICATION	// && args.getMaxArgumentsCount() != 1) {
WITHOUT_CLASSIFICATION	//            return warnMultiReturnNil(ruby);
WITHOUT_CLASSIFICATION	// ensure zero is devoted to no method name
WITHOUT_CLASSIFICATION	// predefine a few other methods we invoke directly elsewhere
WITHOUT_CLASSIFICATION	// fast and safe respond_to? call site logic
WITHOUT_CLASSIFICATION	// Static scoping information for this scope
WITHOUT_CLASSIFICATION	// Captured dynamic scopes
WITHOUT_CLASSIFICATION	// Backref for $~, $1, etc
WITHOUT_CLASSIFICATION	// Lastline
WITHOUT_CLASSIFICATION	// No binding scope so we should create one
WITHOUT_CLASSIFICATION	// bindings scopes must always be ManyVars scopes since evals can grow them
WITHOUT_CLASSIFICATION	// Helper function to give a good view of current dynamic scope with captured scopes
WITHOUT_CLASSIFICATION	// try count specific args to determine required
WITHOUT_CLASSIFICATION	// Some helper functions:
WITHOUT_CLASSIFICATION	// silently ignore
WITHOUT_CLASSIFICATION	// used by compiler
WITHOUT_CLASSIFICATION	// initialize the static settings to determine which factory to use
WITHOUT_CLASSIFICATION	// // INSTANCE VARIABLE METHODS //
WITHOUT_CLASSIFICATION	// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	//  Single node on list
WITHOUT_CLASSIFICATION	// Reuse trailing consecutive sequence at same slot
WITHOUT_CLASSIFICATION	// Clone all remaining nodes
WITHOUT_CLASSIFICATION	// A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.
WITHOUT_CLASSIFICATION	// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.
WITHOUT_CLASSIFICATION	// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.
WITHOUT_CLASSIFICATION	// Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	// Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	// nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	// nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	// nil pad since we provided less values than block parms
WITHOUT_CLASSIFICATION	// no extra args for rest
WITHOUT_CLASSIFICATION	// no extra args for rest
WITHOUT_CLASSIFICATION	// extra args for rest
WITHOUT_CLASSIFICATION	// extra args for rest
WITHOUT_CLASSIFICATION	/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */
WITHOUT_CLASSIFICATION	/*     * This is the proper behavior for all non-expanded assigners.     */
WITHOUT_CLASSIFICATION	// prefill ?
WITHOUT_CLASSIFICATION	// prefill ?
WITHOUT_CLASSIFICATION	// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore
WITHOUT_CLASSIFICATION	// retrieve method // module // name
WITHOUT_CLASSIFICATION	// call is ok, punch it!
WITHOUT_CLASSIFICATION	// if undefined, branch to method_missing
WITHOUT_CLASSIFICATION	// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing
WITHOUT_CLASSIFICATION	// method object already present, push various args // tc // self // klazz // name
WITHOUT_CLASSIFICATION	// if it's method_missing, just invoke it
WITHOUT_CLASSIFICATION	// invoke callMethodMissing
WITHOUT_CLASSIFICATION	// caller
WITHOUT_CLASSIFICATION	// calltype // block
WITHOUT_CLASSIFICATION	// if no exception raised, jump to end to leave result on stack for return
WITHOUT_CLASSIFICATION	// load arity for check
WITHOUT_CLASSIFICATION	// throw
WITHOUT_CLASSIFICATION	// load arity for error
WITHOUT_CLASSIFICATION	// arity ok, continue
WITHOUT_CLASSIFICATION	//InvocationCallbackFactory
WITHOUT_CLASSIFICATION	// ENEBO: Perhaps slow but simple for now
WITHOUT_CLASSIFICATION	// FastInvocationCallback
WITHOUT_CLASSIFICATION	// InvocationCallback
WITHOUT_CLASSIFICATION	//DumpingInvocationCallbackFactory
WITHOUT_CLASSIFICATION	// for fast lookup: encoding entry => org.jruby.RubyEncoding
WITHOUT_CLASSIFICATION	// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding
WITHOUT_CLASSIFICATION	// load the encoding
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs
WITHOUT_CLASSIFICATION	// BreakJump, ThreadContext
WITHOUT_CLASSIFICATION	// ThreadContext
WITHOUT_CLASSIFICATION	// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject
WITHOUT_CLASSIFICATION	// Make Java class files in the jar reachable from Ruby
WITHOUT_CLASSIFICATION	// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject
WITHOUT_CLASSIFICATION	// add all startup load paths to the list first
WITHOUT_CLASSIFICATION	// if it's a compiled JRuby script, instantiate and run it
WITHOUT_CLASSIFICATION	// wrap in try/catch for security exceptions in an applet
WITHOUT_CLASSIFICATION	// add $RUBYLIB paths
WITHOUT_CLASSIFICATION	// Empty paths do not need to be added
WITHOUT_CLASSIFICATION	// "." dir is used for relative path loads from a given file, as in require '../foo/bar'
WITHOUT_CLASSIFICATION	// Add 1.8 libs
WITHOUT_CLASSIFICATION	// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.
WITHOUT_CLASSIFICATION	// Library has already been loaded in some form, bail out
WITHOUT_CLASSIFICATION	// We don't want a package name beginning with dots, so we remove them
WITHOUT_CLASSIFICATION	// If there is a jar-file with the required name, we add this to the class path.
WITHOUT_CLASSIFICATION	// quietly try to load the class
WITHOUT_CLASSIFICATION	// If there was a good library before, we go back to that
WITHOUT_CLASSIFICATION	// no library or extension found, try to load directly as a class
WITHOUT_CLASSIFICATION	// if an extension is specified, try more targetted searches
WITHOUT_CLASSIFICATION	// signed short, big-endian
WITHOUT_CLASSIFICATION	// source extensions
WITHOUT_CLASSIFICATION	// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support
WITHOUT_CLASSIFICATION	// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed
WITHOUT_CLASSIFICATION	// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.
WITHOUT_CLASSIFICATION	// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.
WITHOUT_CLASSIFICATION	// trim extension to try other options
WITHOUT_CLASSIFICATION	// extension extensions
WITHOUT_CLASSIFICATION	// unknown extension, fall back to search with extensions
WITHOUT_CLASSIFICATION	// try all extensions
WITHOUT_CLASSIFICATION	// if a source extension is specified, try all source extensions
WITHOUT_CLASSIFICATION	// unknown extension, fall back to exact search
WITHOUT_CLASSIFICATION	// try only literal search
WITHOUT_CLASSIFICATION	// attempt to load the found library
WITHOUT_CLASSIFICATION	// otherwise load the library we've found
WITHOUT_CLASSIFICATION	// allow MainExitException to propagate out for exec and friends
WITHOUT_CLASSIFICATION	// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".
WITHOUT_CLASSIFICATION	// check current directory; if file exists, retrieve URL and return resource
WITHOUT_CLASSIFICATION	// if a jar or file URL, return load service resource directly without further searching
WITHOUT_CLASSIFICATION	// end suffix iteration
WITHOUT_CLASSIFICATION	// if it's a ./ baseName, use CWD logic
WITHOUT_CLASSIFICATION	// if given path is absolute, just try it as-is (with extensions) and no load path
WITHOUT_CLASSIFICATION	// we check length == 0 for 'load', which does not use load path
WITHOUT_CLASSIFICATION	// we check length == 0 for 'load', which does not use load path
WITHOUT_CLASSIFICATION	// it's an absolute path, use it as-is
WITHOUT_CLASSIFICATION	// it's an absolute path, use it as-is
WITHOUT_CLASSIFICATION	// prepend ./ if . is not already there, since we're loading based on CWD
WITHOUT_CLASSIFICATION	// prepend ./ if . is not already there, since we're loading based on CWD
WITHOUT_CLASSIFICATION	//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));
WITHOUT_CLASSIFICATION	// handle security-sensitive case
WITHOUT_CLASSIFICATION	// if entry is an empty string, skip it
WITHOUT_CLASSIFICATION	// if entry starts with a slash, skip it since classloader resources never start with a /
WITHOUT_CLASSIFICATION	// otherwise, try to load from classpath (Note: Jar resources always uses '/')
WITHOUT_CLASSIFICATION	// Make sure this is not a directory or unavailable in some way
WITHOUT_CLASSIFICATION	// signed short, native
WITHOUT_CLASSIFICATION	// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.
WITHOUT_CLASSIFICATION	// write `I' instance var signet if class is NOT a direct subclass of Object
WITHOUT_CLASSIFICATION	// if name starts with a / we're done (classloader resources won't load with an initial /)
WITHOUT_CLASSIFICATION	// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")
WITHOUT_CLASSIFICATION	/* Directories and unavailable resources are not able to open a stream. */
WITHOUT_CLASSIFICATION	// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.
WITHOUT_CLASSIFICATION	// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here
WITHOUT_CLASSIFICATION	// flush afer whole dump is complete
WITHOUT_CLASSIFICATION	//            write('S');
WITHOUT_CLASSIFICATION	// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.
WITHOUT_CLASSIFICATION	// object is a custom class that extended one of the native types other than Object
WITHOUT_CLASSIFICATION	// We do not want to capture cached methods
WITHOUT_CLASSIFICATION	// w_symbol
WITHOUT_CLASSIFICATION	// w_unique
WITHOUT_CLASSIFICATION	// call the proc, but not for symbols
WITHOUT_CLASSIFICATION	// Major // Minor
WITHOUT_CLASSIFICATION	// any ivars, since we don't have __attached__ ivar now
WITHOUT_CLASSIFICATION	// "hashdef" object, a hash with a default
WITHOUT_CLASSIFICATION	// All "C" marshalled objects descend from core classes, which are all RubyObject
WITHOUT_CLASSIFICATION	// sic
WITHOUT_CLASSIFICATION	// if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	// if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	// if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	// copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	// copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	// rest arg must be splatted
WITHOUT_CLASSIFICATION	// rest arg must be splatted
WITHOUT_CLASSIFICATION	/*     * If we are setting post arguments we can assume there are no pre or others     */
WITHOUT_CLASSIFICATION	// XXX: 0xffff0000 on BE?
WITHOUT_CLASSIFICATION	// unsigned short, native
WITHOUT_CLASSIFICATION	// int, native // long, native
WITHOUT_CLASSIFICATION	// if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	// if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	// if we're not the "argument scope" for zsuper, try our parent
WITHOUT_CLASSIFICATION	// copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	// copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	// copy and splat arguments out of the scope to use for zsuper call
WITHOUT_CLASSIFICATION	// rest arg must be splatted
WITHOUT_CLASSIFICATION	// rest arg must be splatted
WITHOUT_CLASSIFICATION	// Look for slash, starting from 'start' position, until 'end'.
WITHOUT_CLASSIFICATION	// Our values holder (name of variables are kept in staticScope)
WITHOUT_CLASSIFICATION	// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	// SunSignalFacade
WITHOUT_CLASSIFICATION	// All braces pushed..
WITHOUT_CLASSIFICATION	/* failed : try next recursion */
WITHOUT_CLASSIFICATION	// leftToken made us start as nest 1
WITHOUT_CLASSIFICATION	// are we at '**/'
WITHOUT_CLASSIFICATION	// No or mismatched braces..Move along..nothing to see here
WITHOUT_CLASSIFICATION	// not enough bytes
WITHOUT_CLASSIFICATION	// Get index of last read byte
WITHOUT_CLASSIFICATION	// skip inner braces
WITHOUT_CLASSIFICATION	/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */
WITHOUT_CLASSIFICATION	/* complete, according to Posix.2 */
WITHOUT_CLASSIFICATION	/* Only accept an open brace if there is a close */
WITHOUT_CLASSIFICATION	/* brace to match it.  Bracket expressions must be */
WITHOUT_CLASSIFICATION	// index of left-most brace // index of right-most brace
WITHOUT_CLASSIFICATION	// Length check is a hack.  We should not be reeiving "" as a filename ever. 
WITHOUT_CLASSIFICATION	// NOT REACHED HERE
WITHOUT_CLASSIFICATION	// NOT REACHED HERE
WITHOUT_CLASSIFICATION	// NOT REACHED HERE
WITHOUT_CLASSIFICATION	// Pickaxe says @ must be followed by a name character, but MRI // does not require this.
WITHOUT_CLASSIFICATION	// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.
WITHOUT_CLASSIFICATION	// SimpleSampler
WITHOUT_CLASSIFICATION	/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */
WITHOUT_CLASSIFICATION	// b64_xtable for decoding Base 64
WITHOUT_CLASSIFICATION	// single precision, little-endian
WITHOUT_CLASSIFICATION	// single precision, big-endian
WITHOUT_CLASSIFICATION	// single precision, native
WITHOUT_CLASSIFICATION	// single precision, native // single precision, native
WITHOUT_CLASSIFICATION	// double precision, little-endian
WITHOUT_CLASSIFICATION	// double precision, big-endian
WITHOUT_CLASSIFICATION	// double precision, native
WITHOUT_CLASSIFICATION	// signed short, little-endian
WITHOUT_CLASSIFICATION	// signed char
WITHOUT_CLASSIFICATION	// unsigned char
WITHOUT_CLASSIFICATION	// long, little-endian
WITHOUT_CLASSIFICATION	// long, big-endian
WITHOUT_CLASSIFICATION	// unsigned int, native
WITHOUT_CLASSIFICATION	// int, native
WITHOUT_CLASSIFICATION	// 64-bit number, native (as fixnum)
WITHOUT_CLASSIFICATION	// How many occurrences of 'type' we want
WITHOUT_CLASSIFICATION	// See if we have a converter for the job...
WITHOUT_CLASSIFICATION	// Otherwise the unpack should be here...
WITHOUT_CLASSIFICATION	// Possible Checksum Byte
WITHOUT_CLASSIFICATION	// obtain a
WITHOUT_CLASSIFICATION	// obtain b
WITHOUT_CLASSIFICATION	// obtain c
WITHOUT_CLASSIFICATION	// obtain d
WITHOUT_CLASSIFICATION	/*encode.limit() - */
WITHOUT_CLASSIFICATION	/* 1 */
WITHOUT_CLASSIFICATION	/* 2 */
WITHOUT_CLASSIFICATION	/* 3 */
WITHOUT_CLASSIFICATION	/* 4 */
WITHOUT_CLASSIFICATION	/* 5 */
WITHOUT_CLASSIFICATION	/* 6 */
WITHOUT_CLASSIFICATION	/* 7 */
WITHOUT_CLASSIFICATION	// Skip all whitespace in pack format string
WITHOUT_CLASSIFICATION	// Skip embedded comments in pack format string
WITHOUT_CLASSIFICATION	// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.
WITHOUT_CLASSIFICATION	//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char
WITHOUT_CLASSIFICATION	// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.
WITHOUT_CLASSIFICATION	// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.
WITHOUT_CLASSIFICATION	// Determine how many of type are needed (default: 1)
WITHOUT_CLASSIFICATION	// 'Z' adds extra null pad (versus 'a')
WITHOUT_CLASSIFICATION	//if the low bit is set //set the high bit of the result
WITHOUT_CLASSIFICATION	//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte
WITHOUT_CLASSIFICATION	//if the length is not a multiple of 8 //we need to pad the last byte
WITHOUT_CLASSIFICATION	//if the length is not a multiple of 8 //we need to pad the last byte
WITHOUT_CLASSIFICATION	//do some padding, I don't understand the padding strategy
WITHOUT_CLASSIFICATION	// we filled up current byte; append it and create next one
WITHOUT_CLASSIFICATION	//if the index is not a multiple of 8, we are not on a byte boundary
WITHOUT_CLASSIFICATION	//this test may be too lax but it is the same as in MRI
WITHOUT_CLASSIFICATION	// we don't deal with negatives.
WITHOUT_CLASSIFICATION	// populate commandline with NG-provided stuff
WITHOUT_CLASSIFICATION	// are we recursing?
WITHOUT_CLASSIFICATION	// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	// default PidGetter
WITHOUT_CLASSIFICATION	// ignore and try windows version
WITHOUT_CLASSIFICATION	// ignore and use hashcode
WITHOUT_CLASSIFICATION	// ignore and use hashcode
WITHOUT_CLASSIFICATION	// ignore and use hashcode
WITHOUT_CLASSIFICATION	// ignore and use hashcode
WITHOUT_CLASSIFICATION	// try both
WITHOUT_CLASSIFICATION	// just unix
WITHOUT_CLASSIFICATION	// just windows
WITHOUT_CLASSIFICATION	// neither
WITHOUT_CLASSIFICATION	// CON: popen is a case where I think we should just always shell out.
WITHOUT_CLASSIFICATION	// single string command, pass to sh to expand wildcards
WITHOUT_CLASSIFICATION	// direct invocation of the command
WITHOUT_CLASSIFICATION	// break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	// break out if we've dug as deep as we can
WITHOUT_CLASSIFICATION	// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.
WITHOUT_CLASSIFICATION	// ignore, we're on the way out
WITHOUT_CLASSIFICATION	// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	// popen callers wants to be able to read, provide subprocess in directly
WITHOUT_CLASSIFICATION	// popen callers wants to be able to read, provide subprocess in directly
WITHOUT_CLASSIFICATION	// popen caller wants to be able to write, provide subprocess out directly
WITHOUT_CLASSIFICATION	// no read requested, hook up read to parents output
WITHOUT_CLASSIFICATION	// no read requested, hook up read to parents output
WITHOUT_CLASSIFICATION	// execute command with sh -c // this does shell expansion of wildcards
WITHOUT_CLASSIFICATION	// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".
WITHOUT_CLASSIFICATION	// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process
WITHOUT_CLASSIFICATION	// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!
WITHOUT_CLASSIFICATION	// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.
WITHOUT_CLASSIFICATION	// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.
WITHOUT_CLASSIFICATION	// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.
WITHOUT_CLASSIFICATION	//sequential
WITHOUT_CLASSIFICATION	// reverse the entire area of the array selected if it's reversed.
WITHOUT_CLASSIFICATION	// do median of 7 if the array is over 200 elements.
WITHOUT_CLASSIFICATION	// if it's less than 200 do median of 3
WITHOUT_CLASSIFICATION	// SignalFacade
WITHOUT_CLASSIFICATION	// this is the order in which MRI does these two tests
WITHOUT_CLASSIFICATION	// this is the order in which MRI does these tests
WITHOUT_CLASSIFICATION	// basically just forcing a TypeError here to match MRI
WITHOUT_CLASSIFICATION	// not saving DFS instance, as it will only be used once (at most) per call
WITHOUT_CLASSIFICATION	// Args
WITHOUT_CLASSIFICATION	// static methods only
WITHOUT_CLASSIFICATION	//System.err.println(" calculateLength()/str=" + str);
WITHOUT_CLASSIFICATION	// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.
WITHOUT_CLASSIFICATION	// last index (+1) accessed by next() // last index (+1) accessed by get()
WITHOUT_CLASSIFICATION	// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.
WITHOUT_CLASSIFICATION	// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.
WITHOUT_CLASSIFICATION	// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)
WITHOUT_CLASSIFICATION	// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 
WITHOUT_CLASSIFICATION	// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])
WITHOUT_CLASSIFICATION	// 'd' and 'i' are the same
WITHOUT_CLASSIFICATION	// 'u' with space or plus flags is same as 'd'
WITHOUT_CLASSIFICATION	// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).
WITHOUT_CLASSIFICATION	// skip '-' in bytes, will add where appropriate
WITHOUT_CLASSIFICATION	// ..
WITHOUT_CLASSIFICATION	// the 1 is for the stripped sign char
WITHOUT_CLASSIFICATION	// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)
WITHOUT_CLASSIFICATION	// gotta have at least a zero...
WITHOUT_CLASSIFICATION	// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.
WITHOUT_CLASSIFICATION	// intDigits isn't used here, but if it were, it would be 1
WITHOUT_CLASSIFICATION	/* intDigits = 1; */
WITHOUT_CLASSIFICATION	//System.err.println(" stringToLong/reading c=" + data[s]);
WITHOUT_CLASSIFICATION	//System.err.println(" stringToLong/converted c=" + c);
WITHOUT_CLASSIFICATION	// intDigits isn't used here, but if it were, it would be 1
WITHOUT_CLASSIFICATION	/* intDigits = 1; */
WITHOUT_CLASSIFICATION	// precision for G/g includes integer digits
WITHOUT_CLASSIFICATION	// deal with length/width
WITHOUT_CLASSIFICATION	// deal with length/width
WITHOUT_CLASSIFICATION	// first digit is always printed
WITHOUT_CLASSIFICATION	// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.
WITHOUT_CLASSIFICATION	// 5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	// 4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	// in this mode, '.' is always printed
WITHOUT_CLASSIFICATION	// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 
WITHOUT_CLASSIFICATION	// '.' is printed
WITHOUT_CLASSIFICATION	// all precision numebers printed
WITHOUT_CLASSIFICATION	// now some data...
WITHOUT_CLASSIFICATION	// '.'
WITHOUT_CLASSIFICATION	// decimal form, like (but not *just* like!) 'f'
WITHOUT_CLASSIFICATION	// digits array shifted, update all
WITHOUT_CLASSIFICATION	// will have a trailing '.' // g fills trailing zeroes if #
WITHOUT_CLASSIFICATION	// s/b true, since intLength > 0
WITHOUT_CLASSIFICATION	// s/b true, since intLength > 0
WITHOUT_CLASSIFICATION	// always need at least a 0
WITHOUT_CLASSIFICATION	// always need at least a 0
WITHOUT_CLASSIFICATION	// digits arr shifted, update all
WITHOUT_CLASSIFICATION	// (1|intlen).prec
WITHOUT_CLASSIFICATION	// (1|intlen)
WITHOUT_CLASSIFICATION	// will have a trailing '.'
WITHOUT_CLASSIFICATION	// fill up the rest with zeroes
WITHOUT_CLASSIFICATION	//System.err.println(" main/len=" + len);
WITHOUT_CLASSIFICATION	// 5 -> e+nnn / e-nnn
WITHOUT_CLASSIFICATION	// 4 -> e+nn / e-nn
WITHOUT_CLASSIFICATION	// now some data...
WITHOUT_CLASSIFICATION	// '.'
WITHOUT_CLASSIFICATION	// equivalent to MRI case '\0':
WITHOUT_CLASSIFICATION	// '.' and all precision digits printed
WITHOUT_CLASSIFICATION	// \v
WITHOUT_CLASSIFICATION	// dangling '%' char
WITHOUT_CLASSIFICATION	// main while loop (offset < length)
WITHOUT_CLASSIFICATION	// debugging code, keeping for now
WITHOUT_CLASSIFICATION	// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do
WITHOUT_CLASSIFICATION	// "%.0f" % 0.99
WITHOUT_CLASSIFICATION	// limit the length of negatives if possible (also faster)
WITHOUT_CLASSIFICATION	// negative values
WITHOUT_CLASSIFICATION	// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.
WITHOUT_CLASSIFICATION	// relatively cheap test for 32-bit values
WITHOUT_CLASSIFICATION	// no such luck...
WITHOUT_CLASSIFICATION	// ok, now it gets expensive...
WITHOUT_CLASSIFICATION	// go through negated powers of 32 until we find one small enough 
WITHOUT_CLASSIFICATION	// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...
WITHOUT_CLASSIFICATION	/* constant vector a */
WITHOUT_CLASSIFICATION	/* most significant w-r bits */
WITHOUT_CLASSIFICATION	/* least significant r bits */
WITHOUT_CLASSIFICATION	// state[j] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	// state[i] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	// state[i] &= 0xffffffffL;
WITHOUT_CLASSIFICATION	/* MSB is 1; assuring non-zero initial array */
WITHOUT_CLASSIFICATION	/* Tempering */
WITHOUT_CLASSIFICATION	// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.
WITHOUT_CLASSIFICATION	//System.err.println("byteListToInum(" + str + ")");
WITHOUT_CLASSIFICATION	//System.err.println("byteListToInum(" + str + ")");
WITHOUT_CLASSIFICATION	// \v
WITHOUT_CLASSIFICATION	//System.err.println("getSign()");
WITHOUT_CLASSIFICATION	//System.err.println(" getSign/" + sign);
WITHOUT_CLASSIFICATION	//System.err.println("figureOutBase()/base=" + base);
WITHOUT_CLASSIFICATION	//System.err.println(" figureOutBase/base=" + base);
WITHOUT_CLASSIFICATION	//System.err.println("calculateLength()/str=" + str);
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	//System.err.println(" stringToLong=" + val);
WITHOUT_CLASSIFICATION	// no number
WITHOUT_CLASSIFICATION	// trailing garbage
WITHOUT_CLASSIFICATION	//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);
WITHOUT_CLASSIFICATION	// it was not found at all!
WITHOUT_CLASSIFICATION	// can be overridden to be informed when objects are removed
WITHOUT_CLASSIFICATION	// we reached the end of a list
WITHOUT_CLASSIFICATION	// goto next bucket
WITHOUT_CLASSIFICATION	// we reached the end
WITHOUT_CLASSIFICATION	// entry is the first element of this bucket
WITHOUT_CLASSIFICATION	// states
WITHOUT_CLASSIFICATION	// remove leading whitespace (includes _ for lax) // get sign, if any
WITHOUT_CLASSIFICATION	// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible
WITHOUT_CLASSIFICATION	// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed
WITHOUT_CLASSIFICATION	// drop through for sign
WITHOUT_CLASSIFICATION	// switch // will use this if we have to go back the slow way
WITHOUT_CLASSIFICATION	// drop through for non-strict digits
WITHOUT_CLASSIFICATION	// first char must be digit or decimal point
WITHOUT_CLASSIFICATION	// ignore leading zeroes // switch
WITHOUT_CLASSIFICATION	// no digits, go calc (will return +/- 0.0 for lax)
WITHOUT_CLASSIFICATION	// ignore leading zeroes
WITHOUT_CLASSIFICATION	// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).
WITHOUT_CLASSIFICATION	// ok, got a non-zero, have to own up to our horded zeroes
WITHOUT_CLASSIFICATION	// else catch oversize below
WITHOUT_CLASSIFICATION	// else catch oversize below
WITHOUT_CLASSIFICATION	// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 
WITHOUT_CLASSIFICATION	// ignore // switch
WITHOUT_CLASSIFICATION	// ignore // switch
WITHOUT_CLASSIFICATION	// end of parseable data, go to calc
WITHOUT_CLASSIFICATION	// end of parseable data, go to calc
WITHOUT_CLASSIFICATION	// switch // for
WITHOUT_CLASSIFICATION	// first non_underscore char must be digit
WITHOUT_CLASSIFICATION	// no dec digits, end of parseable data, go to calc
WITHOUT_CLASSIFICATION	// switch // if
WITHOUT_CLASSIFICATION	// difficult case, send to Double/FloatingDecimal
WITHOUT_CLASSIFICATION	// block
WITHOUT_CLASSIFICATION	// block
WITHOUT_CLASSIFICATION	// first char must be digit or decimal point
WITHOUT_CLASSIFICATION	// first char must be digit or decimal point
WITHOUT_CLASSIFICATION	// first char must be digit or decimal point
WITHOUT_CLASSIFICATION	// ignore leading zeroes // switch
WITHOUT_CLASSIFICATION	// else catch oversize below
WITHOUT_CLASSIFICATION	// else catch oversize below
WITHOUT_CLASSIFICATION	// else catch oversize below
WITHOUT_CLASSIFICATION	// switch // for
WITHOUT_CLASSIFICATION	// switch // for
WITHOUT_CLASSIFICATION	// switch // for
WITHOUT_CLASSIFICATION	// switch // if
WITHOUT_CLASSIFICATION	// switch // if
WITHOUT_CLASSIFICATION	// lax (str.to_f) allows underscores between e/E and sign
WITHOUT_CLASSIFICATION	// switch // for // no exponent, so drop through for calculation
WITHOUT_CLASSIFICATION	// switch // for // no more data, OK for strict to go calc
WITHOUT_CLASSIFICATION	// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...
WITHOUT_CLASSIFICATION	// no digits, error
WITHOUT_CLASSIFICATION	// too big for us
WITHOUT_CLASSIFICATION	// too big for us
WITHOUT_CLASSIFICATION	// must be at least one digit for strict
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	// only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	// only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	// only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	// first char must be digit
WITHOUT_CLASSIFICATION	// no dec digits after '.', error for strict
WITHOUT_CLASSIFICATION	// ignore leading zeroes // switch
WITHOUT_CLASSIFICATION	// switch // for
WITHOUT_CLASSIFICATION	// switch // for
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	// only whitespace allowed after value for strict
WITHOUT_CLASSIFICATION	// must be at least one digit for strict
WITHOUT_CLASSIFICATION	// // Copy out any buffered bytes //
WITHOUT_CLASSIFICATION	// switch //while
WITHOUT_CLASSIFICATION	/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */
WITHOUT_CLASSIFICATION	// Zlib behavior: negative win_bits means no header and no checksum.
WITHOUT_CLASSIFICATION	// rb_enc_mbclen
WITHOUT_CLASSIFICATION	// rb_enc_precise_mbclen
WITHOUT_CLASSIFICATION	/*utf8 lead byte*/
WITHOUT_CLASSIFICATION	// arg cannot be negative
WITHOUT_CLASSIFICATION	// NoFunctionalitySignalFacade
WITHOUT_CLASSIFICATION	// Change visibility so others can see it
WITHOUT_CLASSIFICATION	// could not get canonical path, just use given path
WITHOUT_CLASSIFICATION	// strip off "_dot_rb" for .rb files
WITHOUT_CLASSIFICATION	// Makes sure the key is not already in the hashtable.
WITHOUT_CLASSIFICATION	// Rehash the table if the threshold is exceeded
WITHOUT_CLASSIFICATION	// Creates the new entry.
WITHOUT_CLASSIFICATION	// next entry to return // current slot // current entry
WITHOUT_CLASSIFICATION	// advance to first entry
WITHOUT_CLASSIFICATION	// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.
WITHOUT_CLASSIFICATION	/*package-protected*/
WITHOUT_CLASSIFICATION	// raw file URL, just open directly
WITHOUT_CLASSIFICATION	// We always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	// if refcount is at or below zero, we're no longer valid
WITHOUT_CLASSIFICATION	// if channel is already closed, we're no longer valid
WITHOUT_CLASSIFICATION	// otherwise decrement and possibly close as normal
WITHOUT_CLASSIFICATION	// r/w buffer // are we reading or writing?
WITHOUT_CLASSIFICATION	// this constructor is used by fdopen, so we don't increment descriptor ref count
WITHOUT_CLASSIFICATION	// unread back
WITHOUT_CLASSIFICATION	// iterate over remainder of buffer until we find a match
WITHOUT_CLASSIFICATION	// terminate and advance buffer when we find our char
WITHOUT_CLASSIFICATION	// no match, append remainder of buffer and continue with next block
WITHOUT_CLASSIFICATION	// found a match above, check if remaining separator characters match, appending as we go
WITHOUT_CLASSIFICATION	// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //
WITHOUT_CLASSIFICATION	// // Copy any buffered data (including ungetc byte) //
WITHOUT_CLASSIFICATION	// // Now read unbuffered directly from the file //
WITHOUT_CLASSIFICATION	// // Copy out any buffered bytes //
WITHOUT_CLASSIFICATION	// // Need to clamp source (buffer) size to avoid overrun //
WITHOUT_CLASSIFICATION	// not closing from finalize
WITHOUT_CLASSIFICATION	// clear runtime so it doesn't get stuck in memory (JRUBY-2933)
WITHOUT_CLASSIFICATION	// silence
WITHOUT_CLASSIFICATION	// silence
WITHOUT_CLASSIFICATION	// Don't bother
WITHOUT_CLASSIFICATION	// Don't bother
WITHOUT_CLASSIFICATION	// For Sockets, only write as much as will fit.
WITHOUT_CLASSIFICATION	// Correct position for read / write buffering (we could invalidate, but expensive)
WITHOUT_CLASSIFICATION	// Adjust for buffered data
WITHOUT_CLASSIFICATION	// for SEEK_CUR, need to adjust for buffered data
WITHOUT_CLASSIFICATION	// libc flushes writes on any read from the actual file, so we flush here
WITHOUT_CLASSIFICATION	// we have read ahead, and need to back up
WITHOUT_CLASSIFICATION	// 128K seems to be the minimum at which the stat+seek is faster than reallocation
WITHOUT_CLASSIFICATION	// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //
WITHOUT_CLASSIFICATION	// append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	// // Copy what is in the buffer, if there is some buffered data //
WITHOUT_CLASSIFICATION	// // Avoid double-copying for reads that are larger than the buffer size //
WITHOUT_CLASSIFICATION	// // Complete the request by filling the read buffer first //
WITHOUT_CLASSIFICATION	// // Complete the request by filling the read buffer first //
WITHOUT_CLASSIFICATION	// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //
WITHOUT_CLASSIFICATION	// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //
WITHOUT_CLASSIFICATION	// Ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	// Ruby ignores empty syswrites
WITHOUT_CLASSIFICATION	// Doesn't fit in buffer. Write immediately. // ensure nothing left to write
WITHOUT_CLASSIFICATION	// truncate can't lengthen files, so we save position, seek/write, and go back
WITHOUT_CLASSIFICATION	// how far ahead we are when reading
WITHOUT_CLASSIFICATION	// if the read buffer is ahead, back up
WITHOUT_CLASSIFICATION	// close without removing from finalizers
WITHOUT_CLASSIFICATION	// putting a bit back, so we're not at EOF anymore
WITHOUT_CLASSIFICATION	// save the ungot
WITHOUT_CLASSIFICATION	// otherwise, we try an unbuffered read to get whatever's available
WITHOUT_CLASSIFICATION	// ignore this; select() will set the correct mode when it is finished
WITHOUT_CLASSIFICATION	// flush first
WITHOUT_CLASSIFICATION	// // Wake up any channels that became unblocked //
WITHOUT_CLASSIFICATION	// // Register any new blocking I/O requests //
WITHOUT_CLASSIFICATION	// Now clear out any previously selected channels
WITHOUT_CLASSIFICATION	// // Wait for I/O on any channel //
WITHOUT_CLASSIFICATION	// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'
WITHOUT_CLASSIFICATION	// Java requires "w" for creating a file that does not exist
WITHOUT_CLASSIFICATION	// seek to force underlying buffer to flush
WITHOUT_CLASSIFICATION	// seek to force read buffer to invalidate
WITHOUT_CLASSIFICATION	/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */
WITHOUT_CLASSIFICATION	// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.
WITHOUT_CLASSIFICATION	// TODO: Ruby logic is somewhat more complicated here, see comments after
WITHOUT_CLASSIFICATION	// make sure the pipe stream is set to null
WITHOUT_CLASSIFICATION	// make sure the main stream is set to null
WITHOUT_CLASSIFICATION	// first try our custom-generated Unsafe
WITHOUT_CLASSIFICATION	// then try Sun's Unsafe
WITHOUT_CLASSIFICATION	// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly
WITHOUT_CLASSIFICATION	// else leave it null
WITHOUT_CLASSIFICATION	// TypeMatcher
WITHOUT_CLASSIFICATION	// This is now needed, since module Java // isn't in by default
WITHOUT_CLASSIFICATION	// Iterate over the RubyHash keySet, simultaneously iterating over the values()
WITHOUT_CLASSIFICATION	// Get the value from the map via the key
WITHOUT_CLASSIFICATION	// Get the value from the map via the values iterator
WITHOUT_CLASSIFICATION	// Check the 2 values obtained via different means
WITHOUT_CLASSIFICATION	// Set a value in the RubyHash
WITHOUT_CLASSIFICATION	// Set a value in the RubyHash
WITHOUT_CLASSIFICATION	// Check the entry.setValue values come back out ok
WITHOUT_CLASSIFICATION	// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.
WITHOUT_CLASSIFICATION	//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));
WITHOUT_CLASSIFICATION	// Init
WITHOUT_CLASSIFICATION	// Block
WITHOUT_CLASSIFICATION	// Copy constructor
WITHOUT_CLASSIFICATION	// presumably this require should fail
WITHOUT_CLASSIFICATION	// JRUBY-646 // presumably this require should fail
WITHOUT_CLASSIFICATION	// Test that requiring a normal Java class raises an error (JRUBY-3214
WITHOUT_CLASSIFICATION	// ok
WITHOUT_CLASSIFICATION	// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).
WITHOUT_CLASSIFICATION	//load should work several times in a row
WITHOUT_CLASSIFICATION	//reset the $loadTestvar
WITHOUT_CLASSIFICATION	//call throwException via JRuby
WITHOUT_CLASSIFICATION	// Notify the calling thread that we're about to go to sleep the first time
WITHOUT_CLASSIFICATION	// wait for the go signal
WITHOUT_CLASSIFICATION	// run ten separate calls into Ruby, with delay and explicit GC
WITHOUT_CLASSIFICATION	// wait until thread has initialized
WITHOUT_CLASSIFICATION	// notify thread to proceed
WITHOUT_CLASSIFICATION	// wait until thread has completed
WITHOUT_CLASSIFICATION	// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline
WITHOUT_CLASSIFICATION	// out of byte range // there will be no match for sure
WITHOUT_CLASSIFICATION	// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.
WITHOUT_CLASSIFICATION	// if any exceptions were raised, we fail
WITHOUT_CLASSIFICATION	// there should only be one more thread in thread group than before we started
WITHOUT_CLASSIFICATION	// construct a new cache with thread's classloader and no limit
WITHOUT_CLASSIFICATION	//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();
WITHOUT_CLASSIFICATION	//        assertSame(script1, script2);
WITHOUT_CLASSIFICATION	// void methods should work
WITHOUT_CLASSIFICATION	// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649
WITHOUT_CLASSIFICATION	// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.
WITHOUT_CLASSIFICATION	// Without a flush Ant will miss some of our output
WITHOUT_CLASSIFICATION	// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());
WITHOUT_CLASSIFICATION	//        int n = 10;
WITHOUT_CLASSIFICATION	// there might be more test classes in a single file, so we iterate over them
WITHOUT_CLASSIFICATION	//No ClassCastException!
WITHOUT_CLASSIFICATION	// value equality
WITHOUT_CLASSIFICATION	// identity equality
WITHOUT_CLASSIFICATION	// bench straight-up integer fib(30)
WITHOUT_CLASSIFICATION	// bench Integer fib
WITHOUT_CLASSIFICATION	// bench fully-boxed fib
WITHOUT_CLASSIFICATION	// bench fully-boxed fib
WITHOUT_CLASSIFICATION	// bench fixnum-boxed fib
WITHOUT_CLASSIFICATION	// bench straight-up long fib(30)
WITHOUT_CLASSIFICATION	// bench Long fib
WITHOUT_CLASSIFICATION	// skip this one, probably no 'ls' (windows)
WITHOUT_CLASSIFICATION	// start off with a neutral parent
WITHOUT_CLASSIFICATION	/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */
WITHOUT_CLASSIFICATION	// in method body with no containing loop, issue jump error // load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.
WITHOUT_CLASSIFICATION	// We are creating a new IO object that shares the same // IOHandler (and fileno).
WITHOUT_CLASSIFICATION	// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]
WITHOUT_CLASSIFICATION	// select appropriate call site // dup receiver // load self
WITHOUT_CLASSIFICATION	// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //
WITHOUT_CLASSIFICATION	// // Force the client socket to be blocking //
WITHOUT_CLASSIFICATION	// Additional context surrounding tokens that both the lexer and // grammar use.
WITHOUT_CLASSIFICATION	// Enebo:  c can never be antrhign but '.' // Why did I put this here?
WITHOUT_CLASSIFICATION	// save package module as ivar in parent, and add method to parent so // we don't have to come back here.
WITHOUT_CLASSIFICATION	//[C,C] //[C, boolean]
WITHOUT_CLASSIFICATION	// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)
WITHOUT_CLASSIFICATION	// ignore; job was cancelled // FIXME: is this ok?
WITHOUT_CLASSIFICATION	//                    // check arity //                    checkArity(mv, scope);
WITHOUT_CLASSIFICATION	// rethrow exception // rethrow it
WITHOUT_CLASSIFICATION	// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.
WITHOUT_CLASSIFICATION	// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.
WITHOUT_CLASSIFICATION	// proxy is under construction, building thread can // safely read non-volatile value
WITHOUT_CLASSIFICATION	// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping
WITHOUT_CLASSIFICATION	// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 
WITHOUT_CLASSIFICATION	// // construct the proxy method //
WITHOUT_CLASSIFICATION	// line 159 "-" // %token constants
WITHOUT_CLASSIFICATION	// +++ // Helper Methods
WITHOUT_CLASSIFICATION	// line 152 "-" // %token constants
WITHOUT_CLASSIFICATION	// initial size // state stack // value stack // current input // #tokens to shift
WITHOUT_CLASSIFICATION	// +++ // Helper Methods
WITHOUT_CLASSIFICATION	// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.
WITHOUT_CLASSIFICATION	// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 
WITHOUT_CLASSIFICATION	// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.
WITHOUT_CLASSIFICATION	// TODO: make it 16 now ? // MUST be power of 2!
WITHOUT_CLASSIFICATION	// check visibility // dup method
WITHOUT_CLASSIFICATION	// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];
WITHOUT_CLASSIFICATION	// unsigned int, native // unsigned long, native
WITHOUT_CLASSIFICATION	//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it
WITHOUT_CLASSIFICATION	// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.
WITHOUT_CLASSIFICATION	// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.
WITHOUT_CLASSIFICATION	// switch // for // no more data, OK for strict to go calc
WITHOUT_CLASSIFICATION	// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem
WITHOUT_CLASSIFICATION	// captures // begin and end are used when not groups defined // source string
WITHOUT_CLASSIFICATION	// // INSTANCE VARIABLE RUBY METHODS //
WITHOUT_CLASSIFICATION	// switch // while
WITHOUT_CLASSIFICATION	// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.
WITHOUT_CLASSIFICATION	// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.
WITHOUT_CLASSIFICATION	// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method
WITHOUT_CLASSIFICATION	// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //
WITHOUT_CLASSIFICATION	// expected
WITHOUT_CLASSIFICATION	// Do nothing
WITHOUT_CLASSIFICATION	// constructor
WITHOUT_CLASSIFICATION	// If a line is followed by a blank line put // it back.
WITHOUT_CLASSIFICATION	/* $>: default output handle */
WITHOUT_CLASSIFICATION	// line 423
WITHOUT_CLASSIFICATION	// line 486
WITHOUT_CLASSIFICATION	// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments
WITHOUT_CLASSIFICATION	// re-register, since fileno points at something new now
WITHOUT_CLASSIFICATION	// produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	// produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	// colon3, assign in Object
WITHOUT_CLASSIFICATION	// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass
WITHOUT_CLASSIFICATION	// Wire up Function#call(*args) to use the super-fast native invokers
WITHOUT_CLASSIFICATION	// TODO: varargs?
WITHOUT_CLASSIFICATION	// TODO: varargs?
WITHOUT_CLASSIFICATION	// TODO: varargs?
WITHOUT_CLASSIFICATION	// TODO: varargs?
WITHOUT_CLASSIFICATION	// Decrease value to hit upper range.  
WITHOUT_CLASSIFICATION	// assign to appropriate variable
WITHOUT_CLASSIFICATION	// "else" body
WITHOUT_CLASSIFICATION	// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done
WITHOUT_CLASSIFICATION	// read-volatile
WITHOUT_CLASSIFICATION	/* $+: string matches last paren. */
WITHOUT_CLASSIFICATION	/* should alter global state */
WITHOUT_CLASSIFICATION	/* should alter global state */
WITHOUT_CLASSIFICATION	// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out
WITHOUT_CLASSIFICATION	/* 10! */
WITHOUT_CLASSIFICATION	//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done
WITHOUT_CLASSIFICATION	// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.
WITHOUT_CLASSIFICATION	// all these types are immediately considered "defined"
WITHOUT_CLASSIFICATION	// first, iterate over all required args
WITHOUT_CLASSIFICATION	// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //
WITHOUT_CLASSIFICATION	//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());
WITHOUT_CLASSIFICATION	//yyLhs 496
WITHOUT_CLASSIFICATION	//yyLhs 496
WITHOUT_CLASSIFICATION	// initial size // state stack // value stack // current input // #tokens to shift
WITHOUT_CLASSIFICATION	// line 449
WITHOUT_CLASSIFICATION	// line 495
WITHOUT_CLASSIFICATION	// Management/monitoring
WITHOUT_CLASSIFICATION	// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done
WITHOUT_CLASSIFICATION	/* 14! */
WITHOUT_CLASSIFICATION	// Process any set of annotations // No supported options
WITHOUT_CLASSIFICATION	// add to the jitted methods set
WITHOUT_CLASSIFICATION	// extract item from array
WITHOUT_CLASSIFICATION	// extract item from array
WITHOUT_CLASSIFICATION	//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done
WITHOUT_CLASSIFICATION	// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //
WITHOUT_CLASSIFICATION	/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */
WITHOUT_CLASSIFICATION	// index for the item
WITHOUT_CLASSIFICATION	// Atomic integers for symbol and method IDs
WITHOUT_CLASSIFICATION	/* 18! */
WITHOUT_CLASSIFICATION	// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced
WITHOUT_CLASSIFICATION	// set up a local IRuby variable
WITHOUT_CLASSIFICATION	// set up a local IRuby variable
WITHOUT_CLASSIFICATION	// set up a local IRuby variable
WITHOUT_CLASSIFICATION	// set up a local IRuby variable
WITHOUT_CLASSIFICATION	// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable
WITHOUT_CLASSIFICATION	/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */
WITHOUT_CLASSIFICATION	// Can't support the rest with Java
WITHOUT_CLASSIFICATION	// An atomic long for generating DynamicMethod serial numbers
WITHOUT_CLASSIFICATION	// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.
WITHOUT_CLASSIFICATION	/* 22! */
WITHOUT_CLASSIFICATION	// attribute set.
WITHOUT_CLASSIFICATION	// grab nil for local variables
WITHOUT_CLASSIFICATION	// grab nil for local variables
WITHOUT_CLASSIFICATION	// grab nil for local variables
WITHOUT_CLASSIFICATION	// fill in all vars with nil so compiler is happy about future accesses
WITHOUT_CLASSIFICATION	// Build a new class and add it to the current scope (could be a script / module / class)
WITHOUT_CLASSIFICATION	// ---------- These methods below are used during compile-time optimizations ------- 
WITHOUT_CLASSIFICATION	// ---------- These methods below are used during compile-time optimizations ------- 
WITHOUT_CLASSIFICATION	// AF_INET
WITHOUT_CLASSIFICATION	//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////
WITHOUT_CLASSIFICATION	// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes
WITHOUT_CLASSIFICATION	// BASE64
WITHOUT_CLASSIFICATION	/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */
WITHOUT_CLASSIFICATION	// element set
WITHOUT_CLASSIFICATION	// visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	// visit a label to start scoping for local vars in this method
WITHOUT_CLASSIFICATION	// temp locals must start after last real local
WITHOUT_CLASSIFICATION	// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy
WITHOUT_CLASSIFICATION	// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.
WITHOUT_CLASSIFICATION	//IRubyObject protocol = args[4];
WITHOUT_CLASSIFICATION	// promise to implement three to N with block
WITHOUT_CLASSIFICATION	// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.
WITHOUT_CLASSIFICATION	// carriage return
WITHOUT_CLASSIFICATION	//yyDgoto 136
WITHOUT_CLASSIFICATION	// discarding a token does not change stack
WITHOUT_CLASSIFICATION	// String construction routines by NOT byte[] buffer and making the target String shared 
WITHOUT_CLASSIFICATION	// insert all nodes in sequence, hash them in the final instruction // KEY
WITHOUT_CLASSIFICATION	// return last value from execution
WITHOUT_CLASSIFICATION	// we append an index to ensure two identical method names will not conflict
WITHOUT_CLASSIFICATION	// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions
WITHOUT_CLASSIFICATION	// otherwise one key has been selected (ours) so we get the channel and hand it off
WITHOUT_CLASSIFICATION	// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.
WITHOUT_CLASSIFICATION	// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing
WITHOUT_CLASSIFICATION	// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks
WITHOUT_CLASSIFICATION	// check arity in the variable-arity version
WITHOUT_CLASSIFICATION	// leave it null and fall back on our normal invocation logic
WITHOUT_CLASSIFICATION	// Build closure body and return the result of the closure
WITHOUT_CLASSIFICATION	// for each simple method name, implement the complex methods, calling the simple version
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Need to initialize
WITHOUT_CLASSIFICATION	// Install direct java methods with mangled name so 'send' can call them directly.
WITHOUT_CLASSIFICATION	/* fall through */
WITHOUT_CLASSIFICATION	// deal with case when "other" is not a string
WITHOUT_CLASSIFICATION	// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...
WITHOUT_CLASSIFICATION	// in method body with no containing loop, issue jump error // load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	// in method body with no containing loop, issue jump error // load runtime and value, issue jump error
WITHOUT_CLASSIFICATION	// store argument count information into scope
WITHOUT_CLASSIFICATION	// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code
WITHOUT_CLASSIFICATION	// First, build assignments for specific named arguments
WITHOUT_CLASSIFICATION	//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }
WITHOUT_CLASSIFICATION	// get current context
WITHOUT_CLASSIFICATION	// octal constant
WITHOUT_CLASSIFICATION	// read
WITHOUT_CLASSIFICATION	// this really needs to be inlined here
WITHOUT_CLASSIFICATION	// it doesn't handle special cases
WITHOUT_CLASSIFICATION	// If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	// If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	// If reciever is self then we do the call the same way as vcall
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	// ignore; we won't use invokedynamic
WITHOUT_CLASSIFICATION	// at end
WITHOUT_CLASSIFICATION	/* bang: true, no match, no substitution */
WITHOUT_CLASSIFICATION	// save blocking state
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	/*receiver*/
WITHOUT_CLASSIFICATION	// invoke static __file__
WITHOUT_CLASSIFICATION	// rest of the argument array!
WITHOUT_CLASSIFICATION	// fall back on empty env when security disallows environment var access (like in an applet)
WITHOUT_CLASSIFICATION	// UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	// UndefinedMethod should be immutable
WITHOUT_CLASSIFICATION	// load null block
WITHOUT_CLASSIFICATION	// This point is only reached if there was an exception handler installed.
WITHOUT_CLASSIFICATION	// nothing else to here - the module version will be // included in the class.
WITHOUT_CLASSIFICATION	// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"
WITHOUT_CLASSIFICATION	// block given
WITHOUT_CLASSIFICATION	// block given
WITHOUT_CLASSIFICATION	// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //
WITHOUT_CLASSIFICATION	// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits
WITHOUT_CLASSIFICATION	// We can callsite cache const_missing if we want
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	/*self*/
WITHOUT_CLASSIFICATION	// declare the field
WITHOUT_CLASSIFICATION	// Assign the values.
WITHOUT_CLASSIFICATION	// Assign the values.
WITHOUT_CLASSIFICATION	// check arity
WITHOUT_CLASSIFICATION	// check arity
WITHOUT_CLASSIFICATION	// create the class
WITHOUT_CLASSIFICATION	// called only by initializing thread; no synchronization required
WITHOUT_CLASSIFICATION	// No hex value after the 'x'.
WITHOUT_CLASSIFICATION	// 1.8
WITHOUT_CLASSIFICATION	/* 6:tags 16:addr 1:eos */
WITHOUT_CLASSIFICATION	// Let m be the exact digits precision in an earlier! loop
WITHOUT_CLASSIFICATION	// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure
WITHOUT_CLASSIFICATION	// block
WITHOUT_CLASSIFICATION	// Label for the start of the method // Label for the end of the method
WITHOUT_CLASSIFICATION	// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...
WITHOUT_CLASSIFICATION	// FIXME: JRUBY-3604
WITHOUT_CLASSIFICATION	// invoke pre method stuff
WITHOUT_CLASSIFICATION	// all done with lookup attempts, release monitor
WITHOUT_CLASSIFICATION	// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.
WITHOUT_CLASSIFICATION	// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl
WITHOUT_CLASSIFICATION	// Construct local variables based on parameter names passed in
WITHOUT_CLASSIFICATION	// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.
WITHOUT_CLASSIFICATION	// file given, use it and force it into binding
WITHOUT_CLASSIFICATION	// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it
WITHOUT_CLASSIFICATION	// return sqrt(squarD) with precision of rootMC
WITHOUT_CLASSIFICATION	// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.
WITHOUT_CLASSIFICATION	/*arg*/
WITHOUT_CLASSIFICATION	// Get a new label using the provided label prefix
WITHOUT_CLASSIFICATION	// normal exit, perform finally and return
WITHOUT_CLASSIFICATION	// coerce arguments
WITHOUT_CLASSIFICATION	// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity
WITHOUT_CLASSIFICATION	/* expected */
WITHOUT_CLASSIFICATION	// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.
WITHOUT_CLASSIFICATION	/* ignore backslashed spaces in %w */
WITHOUT_CLASSIFICATION	// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".
WITHOUT_CLASSIFICATION	// no binding given, use 0 for both
WITHOUT_CLASSIFICATION	// <=> may return nil in many circumstances, e.g. 3 <=> NaN        
WITHOUT_CLASSIFICATION	// use numbered access method
WITHOUT_CLASSIFICATION	// Always use "GMT" since that's required by Java API.
WITHOUT_CLASSIFICATION	// ignore if it's not a global var
WITHOUT_CLASSIFICATION	// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;
WITHOUT_CLASSIFICATION	// Remaining arguments are for the script itself
WITHOUT_CLASSIFICATION	// arg grouping, use slower arg walking logic
WITHOUT_CLASSIFICATION	// build scope names string
WITHOUT_CLASSIFICATION	// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.
WITHOUT_CLASSIFICATION	// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.
WITHOUT_CLASSIFICATION	// finally
WITHOUT_CLASSIFICATION	// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.
WITHOUT_CLASSIFICATION	// ?l  | boolean | True if file1 exists and is a symbolic link
WITHOUT_CLASSIFICATION	// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.
WITHOUT_CLASSIFICATION	// Each root node has a top-level scope that we need to push
WITHOUT_CLASSIFICATION	// specific arity
WITHOUT_CLASSIFICATION	// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.
WITHOUT_CLASSIFICATION	// ?w  | boolean | True if file1 exists and is writable by effective uid/gid
WITHOUT_CLASSIFICATION	// // COMMON VARIABLE METHODS //
WITHOUT_CLASSIFICATION	/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */
WITHOUT_CLASSIFICATION	// let RescuedBlock continue
WITHOUT_CLASSIFICATION	// let RescuedBlock continue
WITHOUT_CLASSIFICATION	// do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	// do nothing, fall back on default compiler below
WITHOUT_CLASSIFICATION	// Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	// Should we run this pass on the current scope before running it on nested scopes?
WITHOUT_CLASSIFICATION	/*  ================     *  Utility Methods     *  ================      */
WITHOUT_CLASSIFICATION	/*  ================     *  Utility Methods     *  ================      */
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// write-volatile
WITHOUT_CLASSIFICATION	// if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	// if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	// if more than 4 locals, get the locals array too
WITHOUT_CLASSIFICATION	// Add property name aliases
WITHOUT_CLASSIFICATION	/*  ================     *  Instance Methods     *  ================      */
WITHOUT_CLASSIFICATION	/*  ================     *  Instance Methods     *  ================      */
WITHOUT_CLASSIFICATION	/*  ================     *  Instance Methods     *  ================      */
WITHOUT_CLASSIFICATION	// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)
WITHOUT_CLASSIFICATION	// // INTERNAL VARIABLE METHODS //
WITHOUT_CLASSIFICATION	// backspace
WITHOUT_CLASSIFICATION	//yySindex 889
WITHOUT_CLASSIFICATION	//yyGindex 136
WITHOUT_CLASSIFICATION	//yyGindex 136
WITHOUT_CLASSIFICATION	//yyGindex 136
WITHOUT_CLASSIFICATION	/* package-private */
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// fall through
WITHOUT_CLASSIFICATION	// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)
WITHOUT_CLASSIFICATION	// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();
WITHOUT_CLASSIFICATION	// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();
WITHOUT_CLASSIFICATION	/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */
WITHOUT_CLASSIFICATION	// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.
WITHOUT_CLASSIFICATION	// The name of this source (e.g. a filename: foo.rb)
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.
WITHOUT_CLASSIFICATION	// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact
WITHOUT_CLASSIFICATION	// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 
WITHOUT_CLASSIFICATION	/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/
WITHOUT_CLASSIFICATION	// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false)
WITHOUT_CLASSIFICATION	// No seconds, just yield
WITHOUT_CLASSIFICATION	// finally handling for abnormal exit
WITHOUT_CLASSIFICATION	// if it's an inner class and it's not public, we can't access it; // skip population of declared elements
WITHOUT_CLASSIFICATION	// getFoo      => foo // getFoo(int) => foo(int)
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// not reached
WITHOUT_CLASSIFICATION	// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.
WITHOUT_CLASSIFICATION	// this is the only case it might be null here (in MetaClass construction)
WITHOUT_CLASSIFICATION	// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND
WITHOUT_CLASSIFICATION	// get "self"
WITHOUT_CLASSIFICATION	// No timeout in critical section
WITHOUT_CLASSIFICATION	// rethrow exception // rethrow it
WITHOUT_CLASSIFICATION	// only public methods
WITHOUT_CLASSIFICATION	// If already inspecting, there is no need to register/unregister again.
WITHOUT_CLASSIFICATION	// First try to use drive letter from supplied dir value, // then try current work dir.
WITHOUT_CLASSIFICATION	// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.
WITHOUT_CLASSIFICATION	// generate a real method signature for the method, with to/from coercions
WITHOUT_CLASSIFICATION	// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry
WITHOUT_CLASSIFICATION	// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //
WITHOUT_CLASSIFICATION	// Create constants for flock
WITHOUT_CLASSIFICATION	// double-testing args.length here, but it avoids duplicating the proc-setup code in two places
WITHOUT_CLASSIFICATION	// indices for temp values
WITHOUT_CLASSIFICATION	// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop
WITHOUT_CLASSIFICATION	// Done with closure compilation
WITHOUT_CLASSIFICATION	// Done with closure compilation
WITHOUT_CLASSIFICATION	// Done with closure compilation
WITHOUT_CLASSIFICATION	// Done with closure compilation
WITHOUT_CLASSIFICATION	// snapshot of contents of directory // current position in directory
WITHOUT_CLASSIFICATION	// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.
WITHOUT_CLASSIFICATION	// explode array, it's an internal "args" array
WITHOUT_CLASSIFICATION	// explode array, it's an internal "args" array
WITHOUT_CLASSIFICATION	// set self to the class
WITHOUT_CLASSIFICATION	/* ---------- Public fields, methods --------- */
WITHOUT_CLASSIFICATION	// // A specific version was requested - use as is for search //
WITHOUT_CLASSIFICATION	// zero args, no block; do nothing
WITHOUT_CLASSIFICATION	// we need to collect all methods, though we'll only // install the ones that are named in this class
WITHOUT_CLASSIFICATION	// Store each line into this list if not null.
WITHOUT_CLASSIFICATION	// Portion of line right after beginning marker
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// do nothing
WITHOUT_CLASSIFICATION	// If an IO exception occurs (something odd, but possible) // A directory may return null.
WITHOUT_CLASSIFICATION	// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed
WITHOUT_CLASSIFICATION	// use array as-is, it's a literal array
WITHOUT_CLASSIFICATION	// finally with no exception
WITHOUT_CLASSIFICATION	// Now, for all variables used by 'i' mark them live before 'i'
WITHOUT_CLASSIFICATION	// TODO: varargs?
WITHOUT_CLASSIFICATION	// TODO: varargs?
WITHOUT_CLASSIFICATION	/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */
WITHOUT_CLASSIFICATION	// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned
WITHOUT_CLASSIFICATION	/* not a class */
WITHOUT_CLASSIFICATION	/* not a class */
WITHOUT_CLASSIFICATION	// Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	// Ruby uses Qnil here, we use "dummy" because we need a class
WITHOUT_CLASSIFICATION	// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF
WITHOUT_CLASSIFICATION	// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway
WITHOUT_CLASSIFICATION	// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);
WITHOUT_CLASSIFICATION	// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.
WITHOUT_CLASSIFICATION	// ////////////////// CONSTANT API METHODS //////////////// //
WITHOUT_CLASSIFICATION	// create the default thread group
WITHOUT_CLASSIFICATION	// range_each_func(range, step_i, b, e, args);
WITHOUT_CLASSIFICATION	/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */
WITHOUT_CLASSIFICATION	// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //
WITHOUT_CLASSIFICATION	// used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	// used only by the compiler/interpreter (will set the literal flag)
WITHOUT_CLASSIFICATION	// Used for the 'redo' command
WITHOUT_CLASSIFICATION	// Used for the 'redo' command
WITHOUT_CLASSIFICATION	// retuns null when not found to avoid unnecessary getRuntime().getNil() call
WITHOUT_CLASSIFICATION	// returns the stored value without processing undefs (autoloads)
WITHOUT_CLASSIFICATION	/* \cX, \c\M-X */
WITHOUT_CLASSIFICATION	//new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	//new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	//new Exception().printStackTrace();
WITHOUT_CLASSIFICATION	// line 286
WITHOUT_CLASSIFICATION	// line 476
WITHOUT_CLASSIFICATION	// line 513
WITHOUT_CLASSIFICATION	// line 530
WITHOUT_CLASSIFICATION	// line 533
WITHOUT_CLASSIFICATION	// line 537
WITHOUT_CLASSIFICATION	// line 551
WITHOUT_CLASSIFICATION	// end loop
WITHOUT_CLASSIFICATION	// MRI behavior: we don't print errno for actual Errno errors
WITHOUT_CLASSIFICATION	// prepare to call class definition method
WITHOUT_CLASSIFICATION	// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 
WITHOUT_CLASSIFICATION	// // fields should really be an immutable map as it is never modified after construction //
WITHOUT_CLASSIFICATION	// load self object as IRubyObject, for recv param
WITHOUT_CLASSIFICATION	// TODO: varargs?
WITHOUT_CLASSIFICATION	// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated
WITHOUT_CLASSIFICATION	// We only want IO objects with valid streams (better to error now). 
WITHOUT_CLASSIFICATION	// produce a nicer error since Rubyists aren't used to seeing this
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	//yyLhs 542
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	/*value*/
WITHOUT_CLASSIFICATION	// MRI has extra pointer which makes our code look a little bit // more strange in // comparison
WITHOUT_CLASSIFICATION	// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.
WITHOUT_CLASSIFICATION	//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.
WITHOUT_CLASSIFICATION	/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */
WITHOUT_CLASSIFICATION	/* Consider Thread aspects of this */
WITHOUT_CLASSIFICATION	// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.
WITHOUT_CLASSIFICATION	// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.
WITHOUT_CLASSIFICATION	// line 572
WITHOUT_CLASSIFICATION	// line 601
WITHOUT_CLASSIFICATION	// line 601
WITHOUT_CLASSIFICATION	// line 625
WITHOUT_CLASSIFICATION	// line 649
WITHOUT_CLASSIFICATION	// line 691
WITHOUT_CLASSIFICATION	// line 723
WITHOUT_CLASSIFICATION	// line 732
WITHOUT_CLASSIFICATION	// line 745
WITHOUT_CLASSIFICATION	// line 766
WITHOUT_CLASSIFICATION	// line 785
WITHOUT_CLASSIFICATION	// line 794
WITHOUT_CLASSIFICATION	// line 800
WITHOUT_CLASSIFICATION	// line 812
WITHOUT_CLASSIFICATION	// line 827
WITHOUT_CLASSIFICATION	// line 839
WITHOUT_CLASSIFICATION	// line 845
WITHOUT_CLASSIFICATION	// line 864
WITHOUT_CLASSIFICATION	// line 886
WITHOUT_CLASSIFICATION	// line 896
WITHOUT_CLASSIFICATION	// line 911
WITHOUT_CLASSIFICATION	// line 929
WITHOUT_CLASSIFICATION	// line 952
WITHOUT_CLASSIFICATION	// line 970
WITHOUT_CLASSIFICATION	// line 972
WITHOUT_CLASSIFICATION	// line 991
WITHOUT_CLASSIFICATION	// line 1011
WITHOUT_CLASSIFICATION	// line 1026
WITHOUT_CLASSIFICATION	// line 1038
WITHOUT_CLASSIFICATION	// line 1067
WITHOUT_CLASSIFICATION	// line 1085
WITHOUT_CLASSIFICATION	// line 1097
WITHOUT_CLASSIFICATION	// line 1105
WITHOUT_CLASSIFICATION	// line 1122
WITHOUT_CLASSIFICATION	// line 1133
WITHOUT_CLASSIFICATION	// line 1145
WITHOUT_CLASSIFICATION	// line 1169
WITHOUT_CLASSIFICATION	// line 1201
WITHOUT_CLASSIFICATION	// line 1210
WITHOUT_CLASSIFICATION	// line 1229
WITHOUT_CLASSIFICATION	// line 1261
WITHOUT_CLASSIFICATION	// line 1287
WITHOUT_CLASSIFICATION	// line 1293
WITHOUT_CLASSIFICATION	// line 1307
WITHOUT_CLASSIFICATION	// line 1320
WITHOUT_CLASSIFICATION	// line 1325
WITHOUT_CLASSIFICATION	// line 1363
WITHOUT_CLASSIFICATION	// line 1398
WITHOUT_CLASSIFICATION	// line 1448
WITHOUT_CLASSIFICATION	// line 1456
WITHOUT_CLASSIFICATION	// line 1473
WITHOUT_CLASSIFICATION	// line 1492
WITHOUT_CLASSIFICATION	// line 1513
WITHOUT_CLASSIFICATION	// line 1523
WITHOUT_CLASSIFICATION	// line 1562
WITHOUT_CLASSIFICATION	// line 1582
WITHOUT_CLASSIFICATION	// line 1603
WITHOUT_CLASSIFICATION	// line 1603
WITHOUT_CLASSIFICATION	// line 1615
WITHOUT_CLASSIFICATION	// line 1620
WITHOUT_CLASSIFICATION	// line 1635
WITHOUT_CLASSIFICATION	// line 1652
WITHOUT_CLASSIFICATION	// line 1681
WITHOUT_CLASSIFICATION	// line 1708
WITHOUT_CLASSIFICATION	// line 1716
WITHOUT_CLASSIFICATION	// line 1755
WITHOUT_CLASSIFICATION	// line 1772
WITHOUT_CLASSIFICATION	// line 1789
WITHOUT_CLASSIFICATION	// ACTIONS_END
WITHOUT_CLASSIFICATION	// ACTIONS_END
WITHOUT_CLASSIFICATION	/* force for args */
WITHOUT_CLASSIFICATION	/* last expression should not be void */
WITHOUT_CLASSIFICATION	/* compstmt position includes both parens around it*/
WITHOUT_CLASSIFICATION	// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).
WITHOUT_CLASSIFICATION	// ignore, no debugger present
WITHOUT_CLASSIFICATION	// ignore, no debugger present
WITHOUT_CLASSIFICATION	// ignore, no debugger present
WITHOUT_CLASSIFICATION	// ignore, no debugger present
WITHOUT_CLASSIFICATION	// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518
WITHOUT_CLASSIFICATION	/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */
WITHOUT_CLASSIFICATION	// line 313
WITHOUT_CLASSIFICATION	// line 339
WITHOUT_CLASSIFICATION	// line 361
WITHOUT_CLASSIFICATION	// line 413
WITHOUT_CLASSIFICATION	// line 451
WITHOUT_CLASSIFICATION	// line 472
WITHOUT_CLASSIFICATION	// line 500
WITHOUT_CLASSIFICATION	// line 515
WITHOUT_CLASSIFICATION	// line 555
WITHOUT_CLASSIFICATION	// line 582
WITHOUT_CLASSIFICATION	// line 619
WITHOUT_CLASSIFICATION	// line 636
WITHOUT_CLASSIFICATION	// line 669
WITHOUT_CLASSIFICATION	// line 703
WITHOUT_CLASSIFICATION	// line 776
WITHOUT_CLASSIFICATION	// line 814
WITHOUT_CLASSIFICATION	// line 823
WITHOUT_CLASSIFICATION	// line 854
WITHOUT_CLASSIFICATION	// line 872
WITHOUT_CLASSIFICATION	// line 905
WITHOUT_CLASSIFICATION	// line 925
WITHOUT_CLASSIFICATION	// line 958
WITHOUT_CLASSIFICATION	// line 992
WITHOUT_CLASSIFICATION	// line 1047
WITHOUT_CLASSIFICATION	// line 1072
WITHOUT_CLASSIFICATION	// line 1081
WITHOUT_CLASSIFICATION	// line 1108
WITHOUT_CLASSIFICATION	// line 1136
WITHOUT_CLASSIFICATION	// line 1168
WITHOUT_CLASSIFICATION	// line 1192
WITHOUT_CLASSIFICATION	// line 1241
WITHOUT_CLASSIFICATION	// line 1267
WITHOUT_CLASSIFICATION	// line 1286
WITHOUT_CLASSIFICATION	// line 1301
WITHOUT_CLASSIFICATION	// line 1314
WITHOUT_CLASSIFICATION	// line 1333
WITHOUT_CLASSIFICATION	// line 1362
WITHOUT_CLASSIFICATION	// line 1395
WITHOUT_CLASSIFICATION	// line 1420
WITHOUT_CLASSIFICATION	// line 1439
WITHOUT_CLASSIFICATION	// line 1476
WITHOUT_CLASSIFICATION	// line 1535
WITHOUT_CLASSIFICATION	// line 1588
WITHOUT_CLASSIFICATION	// line 1618
WITHOUT_CLASSIFICATION	// line 1643
WITHOUT_CLASSIFICATION	// line 1669
WITHOUT_CLASSIFICATION	// line 1728
WITHOUT_CLASSIFICATION	// line 1753
WITHOUT_CLASSIFICATION	// line 1779
WITHOUT_CLASSIFICATION	// line 1794
WITHOUT_CLASSIFICATION	// line 1812
WITHOUT_CLASSIFICATION	// line 1837
WITHOUT_CLASSIFICATION	// line 1895
WITHOUT_CLASSIFICATION	// line 1925
WITHOUT_CLASSIFICATION	// line 1950
WITHOUT_CLASSIFICATION	// line 1992
WITHOUT_CLASSIFICATION	// line 2014
WITHOUT_CLASSIFICATION	// Whether this scope is used as the "argument scope" for e.g. zsuper
WITHOUT_CLASSIFICATION	// If we could not find the constant from cref..then try getting from inheritence hierarchy
WITHOUT_CLASSIFICATION	// This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	// This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	// This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	// This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	// This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	// This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	// This while loop is for restarting the block call in case a 'redo' fires.
WITHOUT_CLASSIFICATION	// A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	// A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	// A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	// A 'next' is like a local return from the block, ending this call or yield.
WITHOUT_CLASSIFICATION	// happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	// happens with native exceptions, should not filter those out
WITHOUT_CLASSIFICATION	// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.
WITHOUT_CLASSIFICATION	// Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	// Populate up to shorter of calling arguments or local parameters in the block
WITHOUT_CLASSIFICATION	// tc // under method // self // under method // name // args
WITHOUT_CLASSIFICATION	// allow it to bubble up
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args
WITHOUT_CLASSIFICATION	// trim extension to try other options
WITHOUT_CLASSIFICATION	// trim extension to try other options
WITHOUT_CLASSIFICATION	// Check for a builtin first.
WITHOUT_CLASSIFICATION	// end suffix iteration
WITHOUT_CLASSIFICATION	// end suffix iteration
WITHOUT_CLASSIFICATION	// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e
WITHOUT_CLASSIFICATION	/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */
WITHOUT_CLASSIFICATION	// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.
WITHOUT_CLASSIFICATION	// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar
WITHOUT_CLASSIFICATION	// double precision, native // double precision, native
WITHOUT_CLASSIFICATION	// 64-bit number, native (as bignum)
WITHOUT_CLASSIFICATION	// Next indicates to decode using native encoding format
WITHOUT_CLASSIFICATION	// calculate based on a, b, c and d
WITHOUT_CLASSIFICATION	// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are
WITHOUT_CLASSIFICATION	// MRI behavior:  for 'Q', do not add trailing nils
WITHOUT_CLASSIFICATION	//this test may be too lax but it is the same as in MRI
WITHOUT_CLASSIFICATION	// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.
WITHOUT_CLASSIFICATION	// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script
WITHOUT_CLASSIFICATION	// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.
WITHOUT_CLASSIFICATION	// first digit is always printed
WITHOUT_CLASSIFICATION	// an empirically derived rule: precision applies to // significand length, irrespective of exponent
WITHOUT_CLASSIFICATION	// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form
WITHOUT_CLASSIFICATION	// in this mode, '.' is always printed
WITHOUT_CLASSIFICATION	// now some data...
WITHOUT_CLASSIFICATION	// now some data...
WITHOUT_CLASSIFICATION	// MRI behavior: validate only the unnumbered arguments
WITHOUT_CLASSIFICATION	// else catch oversize below
WITHOUT_CLASSIFICATION	// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal
WITHOUT_CLASSIFICATION	//switch
WITHOUT_CLASSIFICATION	/*utf8 lead byte*/
WITHOUT_CLASSIFICATION	/*utf8 lead byte*/
WITHOUT_CLASSIFICATION	/*utf8 lead byte*/
WITHOUT_CLASSIFICATION	// could not get canonical path, just use given path
WITHOUT_CLASSIFICATION	// We always open this rw since we can only open it r or rw.
WITHOUT_CLASSIFICATION	// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only
WITHOUT_CLASSIFICATION	// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.
WITHOUT_CLASSIFICATION	// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //
WITHOUT_CLASSIFICATION	// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //
WITHOUT_CLASSIFICATION	// // Cannot discern the total read length - allocate at least enough for the buffered data //
WITHOUT_CLASSIFICATION	// // Copy what is in the buffer, if there is some buffered data //
WITHOUT_CLASSIFICATION	// append what we read into our buffer and allow the loop to continue
WITHOUT_CLASSIFICATION	// already have some bytes buffered, just return those
WITHOUT_CLASSIFICATION	// reset buffer
WITHOUT_CLASSIFICATION	// // Synchronize and re-check to avoid creating more than one Selector per provider //
WITHOUT_CLASSIFICATION	// TODO: Ruby logic is somewhat more complicated here, see comments after
WITHOUT_CLASSIFICATION	// Is there something built into JRuby to do this?
WITHOUT_CLASSIFICATION	// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);
WITHOUT_CLASSIFICATION	// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);
WITHOUT_CLASSIFICATION	// Uncomment the "puts" lines if you want to see more detail
WITHOUT_CLASSIFICATION	// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.
WITHOUT_CLASSIFICATION	// change the thread context to include the class
