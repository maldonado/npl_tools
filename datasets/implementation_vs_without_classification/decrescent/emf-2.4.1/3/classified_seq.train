IMPLEMENTATION	TODO: Not implemented yet. If the given ToDoItem can be fixed automatically, and the user wants that to happen, then do it. Obviously, this depends on the specific Critic and problem. By default this method does nothing. @param item the todo item @param arg the design material (?)
IMPLEMENTATION	TODO: Maybe the exception strings should be internationalized
IMPLEMENTATION	Compute which critics should be active (i.e., they can be applied by applyAllCritics) for a given Designer. <p> Note: I am setting global data, i.e. the isEnabled bit in each critic, based on the needs of one designer. I don't really support more than one Designer. Which is why each designer (if we would support more than one designer) has his own Agency. TODO: should loop over simpler list of critics, not CompoundCritics @param d the designer
IMPLEMENTATION	FIX: set the application name for Mac OS X
IMPLEMENTATION	List of ChecklistStatus:es. Indexed on the model element itself. TODO: Should use weak references so that this is forgotten about when the object is removed.
IMPLEMENTATION	how to handle empty target lists? probably the wizstep should only show an empty pane in that case
IMPLEMENTATION	TODO: Once the default constructor is deleted we only set dirty flag
IMPLEMENTATION	TODO: i18n
IMPLEMENTATION	TODO: i18n
IMPLEMENTATION	Flag to indicate we are creating a new current project. TODO: This isn't a thread-safe way of doing mutual exclusion.
IMPLEMENTATION	TODO: Placeholder implementation until support for tracking on a per-project basis is implemented
IMPLEMENTATION	TODO: This should only be checking for the top level package (if anything at all)
IMPLEMENTATION	TODO: Placeholder implementation until support for tracking on a per-project basis is implemented return dirty;
IMPLEMENTATION	If it's a jar, clean it up and make it look like a file url
IMPLEMENTATION	TODO: This try-catch will be needed once the code below is improved.
IMPLEMENTATION	TODO: Is this a good way of handling nested notation? The following fails the tests: new TransitionNotationUml(t).parse(line);
IMPLEMENTATION	TODO: Do we want isaUMLElement here?
IMPLEMENTATION	TODO: Add implementation.
IMPLEMENTATION	ignored - it shouldn't have been in the project in the 1st place
IMPLEMENTATION	TODO: We need the project specific diagram settings here
IMPLEMENTATION	TODO Add all top level packages
IMPLEMENTATION	TODO: add stereotype application (eCore AnyType?)
IMPLEMENTATION	TODO: Can we just do this every time, no need for else - Bob
IMPLEMENTATION	TODO: Make this more efficient for large I/Os
IMPLEMENTATION	TODO: Reuse the offender List.
IMPLEMENTATION	TODO: handle parse error
IMPLEMENTATION	TODO: Shouldn't we do something here?
IMPLEMENTATION	If we weren't given a system ID, attempt to use the URL for the JAR that we were loaded from. (Why? - tfm)
IMPLEMENTATION	TODO: profile dependencies for UML2
IMPLEMENTATION	TODO: check if it's OK to just get the first zip entry since the zip file should contain only one xmi file - thn
IMPLEMENTATION	TODO: Allow .zargo as profile as well?
IMPLEMENTATION	TODO understand qualifiers
IMPLEMENTATION	TODO support other name kinds
IMPLEMENTATION	TODO support other name kinds
IMPLEMENTATION	TODO: check type!
IMPLEMENTATION	XXX: hypotheses no qualifiers (I don't know)
IMPLEMENTATION	TODO support real types
IMPLEMENTATION	TODO check types!
IMPLEMENTATION	TODO support other kinds of tail
IMPLEMENTATION	TODO: Convert this to some sensible logging
IMPLEMENTATION	TODO is it possible to use more than one variable?
IMPLEMENTATION	TODO implement iterate() TODO implement sortedBy() TODO implement subSequence()
IMPLEMENTATION	how to handle empty target lists? probably the TabText should only show an empty pane in that case
IMPLEMENTATION	StylePanel class which provides additional parameters for changing Text elements provided by GEF. TODO: i18n
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: This could be made more efficient by working with iterators directly and creating a composite iterator made up of all the various sub iterators.
IMPLEMENTATION	TODO: Do we want all enabled tabs to listen or only the one that is selected/visible? - tfm
IMPLEMENTATION	TODO: Why would this be null?
IMPLEMENTATION	TODO: Do we want to use the Project here instead of just its name?
IMPLEMENTATION	TODO: i18n
IMPLEMENTATION	Hide save action during load. Otherwise we get the appearing in title bar and the save enabling as models are updated TODO: Do we still need this now the save enablement is improved?
IMPLEMENTATION	TODO: Only fetch names and defer fetching panels until needed
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: Add a button to force garbage collection
IMPLEMENTATION	Empty implementation - not used.
IMPLEMENTATION	TODO: add recent patterns
IMPLEMENTATION	the text box containing the problem messages TODO: This should be hidden by default, but accessible on via a "details" button or tab to provide more info to the user.
IMPLEMENTATION	TODO: Beautify the 2nd part of this string:
IMPLEMENTATION	reorder submenu TODO: I think this requires I18N, but not sure - tfm
IMPLEMENTATION	TODO: Add empty placeholder here?
IMPLEMENTATION	TODO: Should be anything allowed by current diagram
IMPLEMENTATION	TODO: Replace the functioncall in the next line by .requestFocusInWindow() once we do not support Java 1.3 any more.
IMPLEMENTATION	TODO: support other types of drag. Here you set the owner by dragging into a namespace. An alternative could be to drag states into composite states...
IMPLEMENTATION	TODO: The copy function is not yet completely implemented - so we will have some exceptions here and there.
IMPLEMENTATION	TODO: A better implementation would be to batch events into logical groups and update the tree one time for the entire group, synchronizing access to the model repository so that it stays consistent during the query. This would likely require doing the updates in a different thread than the event delivery thread to prevent deadlocks, so for right now we protect ourselves with try/catch blocks.
IMPLEMENTATION	TODO: UML2 - what do we do here?
IMPLEMENTATION	TODO: handle n-way Associations
IMPLEMENTATION	Returns a set (union) of all unique applicable stereotypes for a given collection of model elements. TODO: This is not optimized for performance. @param elements the given collection of model elements @return the set with stereotype UML objects
IMPLEMENTATION	TODO: implement this - show some documentation?
IMPLEMENTATION	TODO: consider inherited attributes?
IMPLEMENTATION	Do we have 2 connection ends?
IMPLEMENTATION	TODO: not implemented
IMPLEMENTATION	TODO: not implemented
IMPLEMENTATION	TODO: consider inherited attributes?
IMPLEMENTATION	Don't know what to do otherwise
IMPLEMENTATION	Don't know what to do otherwise
IMPLEMENTATION	Called after the diagram font gets changed. <p> TODO: Do we need to do anything here? @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	A specialist Selection class for FigPartitions. This ensures that all swimlanes are the same length (ie height). TODO: Make sure that all swimlanes appear side by side (UML spec states "separated from neighboring swimlanes by vertical solid lines on both sides". TODO: Allow drag of the west and east edge to resize both the selected Fig and the fig connected to that side. TODO: Show NorthWest and SouthWest handle only on leftmost swimlane. TODO: Show NorthEast and SouthEast handle only on rightmost swimlane. @author Bob
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: We need to be more specific here about what to build
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: Before adding a new region make the last region its minimum size (smallest size that will still contain all enclosed)
IMPLEMENTATION	TODO: Do we really need to be listening for both of these events?
IMPLEMENTATION	TODO: After removing a region reset the overall size of the node.
IMPLEMENTATION	TODO: This comparison is very suspect, it should use equals method. The code within the block is in fact never executed. I hesitate to change this now as it will trigger code has never been used before and am not aware of any problems that it usage may introduce. I do think that we need to be able to find a different way to implement the intent here which seems to be to correct edge drawings that should actually not be allowed - Bob
IMPLEMENTATION	TODO: We may return something useful when the relocate() has been implemented, like all StateMachines that are not ActivityGraphs.
IMPLEMENTATION	TODO: We may return the following when the relocate() has been implemented.
IMPLEMENTATION	TODO: Make another pass to deal with overlaps?
IMPLEMENTATION	TODO: Do we have anything to add here?
IMPLEMENTATION	Associations not supported, yet TODO: Create appropriate ClassdiagramEdge
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	Stylepanel which adds a checkbox to show or hide the stereotype.<p> TODO: i18n. @author mvw@tigris.org
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: for UML 2.x this is isStatic
IMPLEMENTATION	TODO: It would be better here to continue the loop and try to build the rest of the compartment. Hence try/catch should be internal to the loop.
IMPLEMENTATION	TODO: Why are these different colors? - tfm
IMPLEMENTATION	TODO: Make this final asap.
IMPLEMENTATION	TODO: Should we require a GraphModel in the constructor since our implementations of setNamespace are going to try and set the namespace on the graphmodel as well?
IMPLEMENTATION	TODO: This must happen on the AWT thread
IMPLEMENTATION	TODO: We need a better algorithm.
IMPLEMENTATION	Perhaps something like the following would work instead Rectangle drawingArea = Globals.curEditor().getJComponent().getVisibleRect();
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: A more strongly typed data structure could be used here.
IMPLEMENTATION	TODO: how to handle changes in shadowsize from the project properties?
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: ToDoItem stuff should be made an opaque extension
IMPLEMENTATION	TODO: gone in UML 2.1
IMPLEMENTATION	TODO: Use this event mechanism to update the checkmark on the Presentation Tab:
IMPLEMENTATION	TODO: Why do we need this when we can just change the font and achieve the same effect?
IMPLEMENTATION	TODO: work here !
IMPLEMENTATION	TODO: Need to add FileChooser
IMPLEMENTATION	TODO: These have been used for most instances of new FigFoo(X0, Y0, ... but additional work is required to extract the constant from calculations, etc.
IMPLEMENTATION	Utility function to localize the given string with help text, and show it in the status bar of the ArgoUML window. This function is used in favour of the inline call to enable later improvements; e.g. it would be possible to show a help-balloon. TODO: Work this out. One matter to possibly improve: show multiple lines. @param s the given string to be localized and shown
IMPLEMENTATION	TODO: This next line prevent loading a UseCase with a stereotype to grow. Why?
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	TODO: I18N required
IMPLEMENTATION	_compileCheckBox = new JCheckBox(); nameButton(_compileCheckBox, "checkbox.compile-generated-source"); TODO: Implement the compile feature. For now, disable the checkbox. _compileCheckBox.setEnabled(false); southPanel.add(_compileCheckBox, BorderLayout.SOUTH);
IMPLEMENTATION	Save the source language in the model. <p> TODO: Support multiple languages now that we have UML 1.4 tagged values. @param node @param language
IMPLEMENTATION	Return the fully qualified name of a model element in Java (dot separated) format. <p> TODO: We really need a language independent format here. Perhaps the list of names that form the hierarchy? - tfm
IMPLEMENTATION	TODO: this needs to be improved even for nongui calling, the config panel needs to be initialized:
IMPLEMENTATION	A window that shows the progress bar and a cancel button. As a convenience to callers which may be executing on a thread other than the Swing event thread, all methods use SwingUtilities.invokeLater() or SwingUtilities.invokeAndWait() to make sure that Swing calls happen on the appropriate thread. <p> TODO: React on the close button as if the Cancel button was pressed.
IMPLEMENTATION	TODO: Add Up/Down buttons to control the ordering of items
IMPLEMENTATION	TODO: I18n
IMPLEMENTATION	The list with objects that should be shown in the combobox. TODO: Using a list here forces a linear search when we're trying to add a new element to the model which can be very slow for large models.
IMPLEMENTATION	TODO: Implement this!
IMPLEMENTATION	TODO: This is updating model on a per character basis as well as unregistering/reregistering event listeners every character - very wasteful - tfm
IMPLEMENTATION	TODO: We should assert this never happens before removing panels should control their own listeners
IMPLEMENTATION	This class provides a text field that can be used to display the text of all Comments associated with an annotated ModelElement. TODO: This could use more work. Currently it returns all Comment.name or Comment.body attributes concatenated together into a single read-only document. @since 1 Nov 2005 @author Tom Morris (tfmorris@gmail.com)
IMPLEMENTATION	TODO: Use the SVGWriter2D implementation cmd = new SaveSVGAction2(Translator.localize("action.save-svg"));
IMPLEMENTATION	TODO: Rework to use UML 1.4 TagDefinitions - tfm
IMPLEMENTATION	TODO: The project should be bound to the action when it is created?
IMPLEMENTATION	TODO: what to do with the return value?
IMPLEMENTATION	TODO: i18n
IMPLEMENTATION	TODO: do we want to fire targetRemoved here or is it enough to just stop updating the targets?
IMPLEMENTATION	TODO: Get Project or other necessary context from source?? e.getSource();
IMPLEMENTATION	TODO: Not all namespaces are useful here - any WFRs?
IMPLEMENTATION	This panel contains radio buttons that represent the Changeability of an asssociation-end. @author jaap.branderhorst@xs4all.nl @since Jan 4, 2003 TODO: For UML 2.x this needs to be changed to be just ReadOnly (frozen) or not (changeable).
IMPLEMENTATION	TODO: what shall we do with the exception?
IMPLEMENTATION	TODO: If this turns out to be a performance bottleneck, we can probably optimize the common case by caching our iterator and current position, assuming that the next request will be for a greater index
IMPLEMENTATION	TODO: is this the right range here?
IMPLEMENTATION	A mock ModelImplementation.<p> The Facade, the ModelEventPump, the Factories and Helpers are all created as mock objects using EasyMock. For each of them, there should also be a possibility to access their {@link MockControl} object. TODO: Create the rest of the getters for the control objects. @author Linus Tolke
IMPLEMENTATION	The UML 1.4 model elements to test. TODO: This needs to be updated with a version for UML 2.x.
IMPLEMENTATION	TODO Auto-generated constructor stub
IMPLEMENTATION	TODO Auto-generated constructor stub
IMPLEMENTATION	TODO Auto-generated constructor stub
IMPLEMENTATION	TODO Auto-generated constructor stub
IMPLEMENTATION	TODO: This is a linear search of a list that contain many thousands of items (one for every Fig in the entire project)
IMPLEMENTATION	For tagged values, use their containing ModelElement since they don't have property panels of their own TODO: May want to do this for other types too?
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: To enable models and subsystems, change this flag Work started by Markus I believe where does this stand? - Bob.
IMPLEMENTATION	TODO: What can we do with other kind of actions?
IMPLEMENTATION	TODO: Do we need this? Is this the same as emptyFig.getHeight()?
IMPLEMENTATION	TODO: What can we do with other kind of actions?
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: After removing a region reset the overall size of the node.
IMPLEMENTATION	Builds an actor in the same namespace as the given actor. If the object is not and actor nothing is built.<p> TODO: This shouldn't just silently fail if it is passed a bad argument. This contract will change. - tfm 20070607 @param model The namespace. @param actor the given actor @return Actor the newly built actor
IMPLEMENTATION	TODO: unfinished implementation
IMPLEMENTATION	there's more to be handled, which still need to be implemented:
IMPLEMENTATION	List<Transition> result = new ArrayList<Transition>(); TODO: not complete - how to retrieve the transitions?
IMPLEMENTATION	TODO: not implemented
IMPLEMENTATION	TODO: All build/create methods need Undo support - tfm
IMPLEMENTATION	Eclipse UML2 implementation of XmiWriter. TODO: We need facilities for writing and reading stable IDs to/from either xmi.id or xmi.uuid. @author Tom Morris
IMPLEMENTATION	TODO: Bob says - how can we auto-generate this list?
IMPLEMENTATION	TODO: gone in UML 2.1
IMPLEMENTATION	TODO: Need UML 2.x equivalent
IMPLEMENTATION	TODO Expression and InstanceValue (how) If anyone have an example.
IMPLEMENTATION	TODO: treat Message
IMPLEMENTATION	TODO: Needs undo support
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: implement
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: Needs completing - stub implementation only! - tfm
IMPLEMENTATION	TODO: Is this removed from UML2 ?
IMPLEMENTATION	additional cleanup needed, because this would not be removed by ext.destroy():
IMPLEMENTATION	TODO: Review - priority of public ID vs system ID has been reversed from original implementation
IMPLEMENTATION	TODO: This will need to change when we support multiple user models.
IMPLEMENTATION	TODO: Check if this is ok (this is literally adapted from NSUML)
IMPLEMENTATION	TODO: Bob says - how can we auto-generate this list?
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: else : alert
IMPLEMENTATION	TODO: Fully implement this!
IMPLEMENTATION	TODO: Not implemented
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	TODO: correctly implement next function in the model subsystem for issue 1942:
IMPLEMENTATION	TODO: correctly implement next function in the model subsystem for issue 1942:
IMPLEMENTATION	TODO: correctly implement next function in the model subsystem for issue 1942:
IMPLEMENTATION	TODO: review the tool tips ? stringField.setToolTipText(Translator.localize("label.body.tooltip"));
IMPLEMENTATION	The panel that shows a value specification for an other UML element. TODO: Do we need to implements ChangeListener If yes => ok If no => Can't be use without Optional class, or the Optional don't need to !
IMPLEMENTATION	TODO: Enhance the isValidNamespace function so that this never happens.
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	A language must be unique So, select the current empty language. TODO ? Alert
IMPLEMENTATION	TODO: this is not done yet. Eventually this will also feed the rational log.
IMPLEMENTATION	TODO: maybe should stop at first, or find highest priority.
IMPLEMENTATION	TODO: Should we be doing anything on deleted elements? This throws an exception on remove events. - skip for now - tfm
IMPLEMENTATION	The following debug line is now the single most memory consuming line in the whole of ArgoUML. It allocates approximately 18% of all memory allocated. Suggestions for solutions: Check if there is a LOG.log(Level.FINE,String, String) method that can be used instead. Use two calls. For now I (Linus) just comment it out. LOG.log(Level.FINE, "applying critic: " + _headline);
IMPLEMENTATION	Now we know that this critic is still valid. What we need to figure out is if the corresponding to-do item is still valid. The to-do item is to be replaced if the name of some offender has changed that affects its description or if the contents of the list of offenders has changed. We check that by creating a new ToDoItem and then verifying that it looks exactly the same. This really creates a lot of to-do items that goes to waste.
IMPLEMENTATION	TODO: Not implemented yet. The idea is that some problems identified by Critic's can be fixed with certain design manipulations (or transforms) that can be applied automatically to resolve the problem. This method replies true iff the given problem can be fixed. The fixIt() method actually does the fix. @see org.argouml.cognitive.Poster#canFixIt(org.argouml.cognitive.ToDoItem) Also @see Critic#fixIt
IMPLEMENTATION	Reply the ToDoItem that the designer should see iff predicate() returns true. By default it just fills in the fields of the ToDoItem from accessor methods of this Critic. Critic Subclasses may override this method or the accessor methods to add computed fields to the ToDoItem. TODO: Critic's may want to add new fields to a ToDoItem to make stillValid more efficent. @see Critic#critique @param dm the offender @param dsgr the designer @return ToDoItem
IMPLEMENTATION	Category.getRoot().getLoggerRepository().setThreshold(Level.OFF); TODO: Find the proper implementation in java.util.logging API
IMPLEMENTATION	TODO: Review all callers to make sure that they localize the title In process by Harold Braun 20070912
IMPLEMENTATION	TODO: Review all callers to make sure that they localize the title
IMPLEMENTATION	Removes a listener, eventtype pair from the listener list. TODO: replace the listener implementation with a EventListenerList for better performance @param event the event to which the listener will not listen any more @param listener the listener to be removed
IMPLEMENTATION	Make a read-only copy of the listeners list so that reentrant calls back to add/removeListener won't mess us up. TODO: Potential performance issue, but we need the correctness - tfm
IMPLEMENTATION	Check the offenders.<p> This is called from the constructors where the offenders are given. TODO: Why do we only care about checking the first 2 offenders above? @param offs The offenders.
IMPLEMENTATION	Apparently, this method is never called.
IMPLEMENTATION	TODO: These buttons for future enhancement:buttonPanel.add(configButton);buttonPanel.add(networkButton);
IMPLEMENTATION	TODO: should have an image of a wizard or some logo
IMPLEMENTATION	TODO: This shouldn't require two passes through the list - tfm
IMPLEMENTATION	Empty implementation.
IMPLEMENTATION	Empty implementation.
IMPLEMENTATION	Empty implementation.
IMPLEMENTATION	Empty implementation.
IMPLEMENTATION	TODO: Indicate the direction!
IMPLEMENTATION	Apparently, this method is never called.
IMPLEMENTATION	how to handle empty target lists? probably the wizstep should only show an empty pane in that case
IMPLEMENTATION	TODO: Allow other configuration handlers.
IMPLEMENTATION	TODO: What should we do here?
IMPLEMENTATION	TODO: This code can be removed when getCurrentProject is removed
IMPLEMENTATION	TODO: Why is this a special case? - tfm
IMPLEMENTATION	TODO: Why aren't we throwing an exception here? Returning null results in NPE and no explanation why.
IMPLEMENTATION	Use a little trick to find out where Argo is being loaded from. TODO: Use a different resource here. ARGOINI is unused and deprecated
IMPLEMENTATION	TODO: It is a performance drain to load all classes at startup time. They should be lazy loaded when needed. Instead of scanning all classes for ones which implement our loadable module interface, we should use a manifest entry or a special name/name pattern that we look for to find the single main module class to load here. - tfm
IMPLEMENTATION	Enable it. TODO: This by default selects all modules that are found. Eventually we would rather obey a default either from the modules themselves, from how they are found, and also have information on what modules are selected from the configuration.
IMPLEMENTATION	TODO: Why aren't we throwing an exception here? Returning null results in NPE and no explanation why.
IMPLEMENTATION	TODO: Why aren't we throwing an exception here? Returning null results in NPE and no explanation why.
IMPLEMENTATION	The constructor. TODO: Why does this method not handle all settings?
IMPLEMENTATION	TODO: Do we have any potential consumers of the unversioned name outside of the notation subsystem?
IMPLEMENTATION	TODO: Do we need to control separately for attributes and operations?
IMPLEMENTATION	TODO: These defaults need to be checked against historical ones
IMPLEMENTATION	TODO: Mark diagram/project as dirty?
IMPLEMENTATION	We also show tagged values for UML 1 TODO: what to do for UML2 here?
IMPLEMENTATION	TODO: needs I18N
IMPLEMENTATION	Unused currently StringBuffer taggedValuesSb = getTaggedValues(modelElement);
IMPLEMENTATION	TODO: This name of the expression language should be configurable by the user. <p> According to the UML standard, the expression language should be the same for all elements in one diagram. <p> UML is not a sensible default - usually this is some pseudo-language. @return the name of the expression language
IMPLEMENTATION	TODO: This needs more work! We simply throw the new extension point away?
IMPLEMENTATION	TODO: Can we put the static block within the init()?
IMPLEMENTATION	TODO: Find a better default language TODO: We should know the notation language, since it is us
IMPLEMENTATION	We need to extend the ExtensionMechanismsFactory so that we can replace the above deprecated call with something like this:
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: I18N
IMPLEMENTATION	TODO: Any special handling for null names? append will use "null"
IMPLEMENTATION	TODO: Is this a good way of handling nested notation?
IMPLEMENTATION	TODO: In the next line, I should use buildGuard(), but it doesn't show the guard on the diagram... Why? (MVW)
IMPLEMENTATION	TODO: This DTD doesn't exist, so we can't tell readers to look for it w.println("<!DOCTYPE profile SYSTEM \"profile.dtd\" >"); but we need a 2nd line to make the funky UML persister work remove this line if the above is uncommented
IMPLEMENTATION	TODO support real numbers
IMPLEMENTATION	TODO investigate: Abstraction.mapping is not in the Model Subsystem
IMPLEMENTATION	TODO investigate the "unnamed opposite end"
IMPLEMENTATION	TODO implement additional operations in 4.5.3.5
IMPLEMENTATION	TODO check this
IMPLEMENTATION	TODO implementation?
IMPLEMENTATION	TODO implementationLocation??
IMPLEMENTATION	TODO presentation??
IMPLEMENTATION	TODO: Removed from UML 2.x
IMPLEMENTATION	TODO how to implement this method properly?
IMPLEMENTATION	TODO implement the difference between oclIsKindOf and oclIsTypeOf
IMPLEMENTATION	TODO implement OCLExpression
IMPLEMENTATION	TODO: These can not simply be translated...
IMPLEMENTATION	TODO: This is going to cause the color to be reset on a refresh
IMPLEMENTATION	The Activity diagram.<p> TODO: Finish the work on subactivity states.
IMPLEMENTATION	TODO: All super constructors should take a GraphModel
IMPLEMENTATION	TODO: This needs to be modified for UML 2.x
IMPLEMENTATION	For backward compatibility everything is above and right TODO: Do in polar domain?
IMPLEMENTATION	TODO: Why do I need to do this?
IMPLEMENTATION	TODO: Add "unnamed" or "new" or something? (Localized, of course)
IMPLEMENTATION	let's test which situation we have. 3 Possibilities: 1. The nodes are already on the diagram, we can use canAddEdge for this. 2. One of the nodes is already on the diagram. The other has to be added. 3. Both of the nodes are not yet on the diagram. For the time being we will only implement situation 1. TODO: implement situation 2 and 3.
IMPLEMENTATION	TODO: i18n
IMPLEMENTATION	assert Arrays.asList(properties).contains( event.getPropertyName()) : event.getPropertyName(); TODO: Do we really always need to do this or only if notationProvider is null?
IMPLEMENTATION	Perform re-routing if src/dest nodes have changed. <p>This method needs to be 'armed' by a previous mouseDragged() to avoid the situation where the user just clicks on the node then clicks on some unrelated Fig, without moving the edge... <p>TODO: improve the fig finding algorithm to find the top most fig in the layer. will be useful for nested states in a statechart. @see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
IMPLEMENTATION	write TODO: Check if sections are not used within the file and put them as comments at the end of the file. Hint: use a second Map to compare with the used keys. @param filename the file name @param indent the current indentation @param outputLostSections true if lost sections are to be written
IMPLEMENTATION	TODO: What does the output directory have to do with the class path? Project p = ProjectManager.getManager().getCurrentProject(); entries.add(p.getProjectSettings().getGenerationOutputDir());
IMPLEMENTATION	TODO: This transformation is Java specific. We need a more language/notation scheme for specifying qualified names. Possible algorithm - replace all punctuation with our internal separator, replace multiple separators with a single instance (for languages like C++). What about I18N? - tfm
IMPLEMENTATION	If the property that this comboboxmodel depicts is changed in the UML model, this method will make sure that the changes will be done in the combobox-model equally. <p> TODO: This function is not yet completely written! {@inheritDoc} @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
IMPLEMENTATION	Generates a new unique ID and returns it as a String. The contents of the String is supposed to be unique with respect to all Strings generated by other instances of this class. TODO: We should consider using java.util.UUID for this instead. @returnA String with unique content.
IMPLEMENTATION	TODO: with new reference resolving scheme, the model sub-system will cache the systemId of the profile, open it and resolve the profile on its own. Thus, the java.util.List will be found and the return value will be present again... assertNotNull(returnParamType);
IMPLEMENTATION	TODO: Register listener for target ToDo item changes and for new showStep() requests
IMPLEMENTATION	TODO: Ignore and report exception until getTop implemented.
IMPLEMENTATION	This may not actually make any difference at present (the code behind addTrigger needs more work).
IMPLEMENTATION	TODO: property name will need to be updated for UML 2.x Unfortunately we can specify two property names here
IMPLEMENTATION	TODO: Use reflection against the test case to ensure that it does not import non-ArgoUML classes
IMPLEMENTATION	TODO: Maybe a return message already exists. Check first and and if the first found has no activator then set this call message as the activator and skip the code below.
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: why do we need to remove then add the Fig?
IMPLEMENTATION	TODO: Auto-generated constructor stub
IMPLEMENTATION	not implemented yet
IMPLEMENTATION	TODO: I suspect this isn't needed call isn't needed but don't remove till out of alpha/beta stage
IMPLEMENTATION	TODO: Before adding a new region make the last region its minimum size (smallest size that will still contain all enclosed)
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: not complete
IMPLEMENTATION	TODO: implement remaining supported types
IMPLEMENTATION	TODO: Implement
IMPLEMENTATION	TODO: Is it removed from UML2 ?
IMPLEMENTATION	TODO: implement
IMPLEMENTATION	TODO: implement
IMPLEMENTATION	TODO: implement
IMPLEMENTATION	TODO: implement
IMPLEMENTATION	TODO: implement
IMPLEMENTATION	TODO: not implemented
IMPLEMENTATION	TODO: Is it removed from UML2 ?
IMPLEMENTATION	TODO: Is it removed from UML2 ?
IMPLEMENTATION	TODO: We expect an association end here - check more carefully? - tfm
IMPLEMENTATION	TODO: We expect an association end here - check more carefully? - tfm
IMPLEMENTATION	TODO: Count/report unresolved references
IMPLEMENTATION	TODO: We failed to resolve URL - signal error
IMPLEMENTATION	TODO: Implement support for multiple TaggedValues
IMPLEMENTATION	TODO: 2nd next() for single hasNext()
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: For UML 2.x, powertypes are accessed indirectly through the GeneralizationSets that contain a Generalization. @since Nov 3, 2002 @author jaap.branderhorst@xs4all.nl
IMPLEMENTATION	TODO: Why is this disabled always?
IMPLEMENTATION	TODO: This is updating model on a per character basis as well as unregistering/reregistering event listeners every character - very wasteful - tfm
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	Identifier for addonly changeability. TODO: Note this should not be in UML2 version
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	TODO: First implementation will be to call buildPopop and extract all the contained actions. The toolbar will be built to the same structure. The toolbar will be displayed to the left of the JList under the label.
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	TODO: Auto-generated catch block
IMPLEMENTATION	If the property that this comboboxmodel depicts is changed in the UML model, this method will make sure that the changes will be done in the combobox-model equally. <p> TODO: This function is not yet completely written! {@inheritDoc} @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Need UML 2.x equivalent
IMPLEMENTATION	TODO: Need UML 2.x equivalent
IMPLEMENTATION	TODO: Need UML 2.x equivalent
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Need UML 2.x equivalent
IMPLEMENTATION	TODO: Implement following WFR for GeneralizableElements [4] The parent must be included in the Namespace of the GeneralizableElement. self.generalization->forAll(g | self.namespace.allContents->includes(g.parent) ) return ModelManagementHelperMDRImpl.getContents(ns).contains( gen.getParent());
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Before allowing this, we should really check that TemplateParameter.defaultElement is defined
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO Expression and InstanceValue (how) If anyone have an example.
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: implement remaining supported types
IMPLEMENTATION	TODO: implement
IMPLEMENTATION	TODO: implement
IMPLEMENTATION	TODO: not implemented
IMPLEMENTATION	TODO: treat Message
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO: Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	Get the innermost containing Model of a ModelElement. <p> If no containing Model can be found, the outermost containing ModelElement is returned (which could be the original element itself if it has no owner). <p> This method is intended to return the innermost containing Model, but there are circumstances where one may really expect the outermost containing Model or root package to be returned (e.g. where it's being used to test if two elements are from disjoint namespace hierarchies). Hence, there are two separate methods with different semantics. The method {@link #getRoot(Object)} returns the outermost containing object. <p> TODO: Note also that some code uses org.argouml.kernel.Project#getRoot() to navigate down from the top instead of up from the bottom. We need to use a consistent algorithm for this. - tfm 20070724 @param handle to the model element. @return model for the model element.
IMPLEMENTATION	TODO: This work should be deferred until actually needed for display
IMPLEMENTATION	TODO: This work should be deferred until actually needed for display
IMPLEMENTATION	TODO: This is a linear search of a list that contain many thousands of items (one for every Fig in the entire project)
IMPLEMENTATION	TODO: Tentative implementation. Do we want something that updates the list of open projects or just simple open and close events? -tfm
IMPLEMENTATION	TODO: Why aren't we throwing an exception here? Returning null results in NPE and no explanation why.
IMPLEMENTATION	TODO: Why aren't we throwing an exception here? Returning null results in NPE and no explanation why.
IMPLEMENTATION	TODO: Why aren't we throwing an exception here? Returning null results in NPE and no explanation why.
IMPLEMENTATION	TODO: Mark diagram/project as dirty?
IMPLEMENTATION	TODO is it possible to use more than one variable?
IMPLEMENTATION	TODO is it possible to use more than one variable?
IMPLEMENTATION	TODO: This should really be coded the other way round, to only act on associations which are important for representing the current perspective (and to only act on a single end of the association) - tfm
IMPLEMENTATION	The drag gesture listener is notified of drag gestures by a recognizer. The typical response is to initiate a drag by invoking DragSource.startDrag(). <p> TODO: find a way to show a different image when multiple elements are dragged. @param dragGestureEvent the DragGestureEvent describing the gesture that has just occurred @see java.awt.dnd.DragGestureListener#dragGestureRecognized(java.awt.dnd.DragGestureEvent)
IMPLEMENTATION	The list with objects that should be shown in the combobox. TODO: Using a list here forces a linear search when we're trying to add a new element to the model which can be very slow for large models.
IMPLEMENTATION	TODO: It would be better to defer this initialization until the panel actually needs to be displayed. Perhaps optimistically always return true and figure out later if we've got something to display - tfm - 20070110
IMPLEMENTATION	Finds the operation to which a CallEvent refers, based on the given transition. This function determines the context of the statemachine that contains the given transition. If the context is a Classifier, then all operations of this classifier are candidates. If the context is a BehavioralFeature, then all operations of the owner Classifier are candidates. The first operation of which the name matches is the result. For Activity diagrams: If the context is a Package, then all Operations of all Classifiers in the package are candidates. TODO: This function works for the most normal cases, but needs some testing for rare cases, e.g. internal transitions,... TODO: The Parameters of the candidates are ignored. Maybe this method should return a set of matching operations. @author MVW @param trans Object of type Transition @param opname the name of the operation sought @return Object the operation with the given name, or null
IMPLEMENTATION	TODO: We need a way to set the line color and width here, but TestDependencies thinks this creates a dependency cycle Fig line = new ArgoFigLine(snapX, snapY, snapX, snapY, ArgoFig.LINE_COLOR); line.setLineWidth(ArgoFig.LINE_WIDTH);
IMPLEMENTATION	TODO is it possible to use more than one variable?
IMPLEMENTATION	TODO is it possible to use more than one variable?
IMPLEMENTATION	TODO is it possible to use more than one variable?
IMPLEMENTATION	TODO is it possible to use more than one variable?
IMPLEMENTATION	TODO check this
IMPLEMENTATION	TODO: Why do I need to do this?
IMPLEMENTATION	TODO: minimum height should not be calculated every time, but only when an FigMessage has been added or removed. Currently doing that doesn't work because of an unknown problem. How to test: create only two CRs and a create message between them. Then move the create message to the bottom! Until that is fixed the workaround is to call updateMinimumHeight() every time the minimum size is needed
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	Is this item a copy? @see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	once one criticism is found, exit
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	issue resolutions
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	the critiquing thread should wait if disabled.
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	Performs critique asap. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	constructor and singeton methods
WITHOUT_CLASSIFICATION	why?
WITHOUT_CLASSIFICATION	&& getAutoCritique()
WITHOUT_CLASSIFICATION	Don't clear everything here, breaks loading!
WITHOUT_CLASSIFICATION	v71
WITHOUT_CLASSIFICATION	Don't let a transient error kill the thread
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	clear out queues! @@@
WITHOUT_CLASSIFICATION	decision model listener
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	end class ChildGenDMElements
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	user interface
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	TODO: This should be the name of the designer that created the todoitem, not the current username!
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "predicate() returned true, creating ToDoItem");
WITHOUT_CLASSIFICATION	corrective automations, wizards
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	critiquing
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	TODO: Make use of the constants defined in the ToDoItem class!
WITHOUT_CLASSIFICATION	if wizClass is not a subclass of Wizard, print a warning
WITHOUT_CLASSIFICATION	return getCriticName();
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	design feedback
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	end interface Poster
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Adding resolution for: " + c.getClass() + " " + canCreate);
WITHOUT_CLASSIFICATION	Use this for fast fail instead. Sacrificed for complete fail. d00mst throw new UnresolvableException( "Unable to create ItemUID for class: " + obj.getClass());
WITHOUT_CLASSIFICATION	TODO: values
WITHOUT_CLASSIFICATION	end class Goal
WITHOUT_CLASSIFICATION	check if we are using a supported java version
WITHOUT_CLASSIFICATION	implements java.io.Serialization
WITHOUT_CLASSIFICATION	end class CurDecisionCM
WITHOUT_CLASSIFICATION	end class StandardCM
WITHOUT_CLASSIFICATION	end class CompositeCM
WITHOUT_CLASSIFICATION	end class EnabledCM
WITHOUT_CLASSIFICATION	end class NotSnoozedCM
WITHOUT_CLASSIFICATION	end class AndCM
WITHOUT_CLASSIFICATION	end class DesignGoalsCM
WITHOUT_CLASSIFICATION	end class OrCM
WITHOUT_CLASSIFICATION	Register our last chance exception handler
WITHOUT_CLASSIFICATION	Get the splash screen up as early as possible
WITHOUT_CLASSIFICATION	We have to do this to set the LAF for the splash screen
WITHOUT_CLASSIFICATION	main initialization happens here
WITHOUT_CLASSIFICATION	ToolTipManager.sharedInstance().setInitialDelay(500);
WITHOUT_CLASSIFICATION	Force the configuration to load
WITHOUT_CLASSIFICATION	Synchronize the startup directory
WITHOUT_CLASSIFICATION	then, print out some version info for debuggers...
WITHOUT_CLASSIFICATION	Set the i18n locale
WITHOUT_CLASSIFICATION	set properties for application behaviour
WITHOUT_CLASSIFICATION	now, let's print it
WITHOUT_CLASSIFICATION	nothing else to do (?)
WITHOUT_CLASSIFICATION	We MUST have a project open before continuing. Create if necessary
WITHOUT_CLASSIFICATION	initPreinitialize(); initializeSubsystems(new SimpleTimer(), null); ArgoFrame.getInstance().setVisible(true);
WITHOUT_CLASSIFICATION	Perform one command.
WITHOUT_CLASSIFICATION	Now create a new object.
WITHOUT_CLASSIFICATION	initLogging();
WITHOUT_CLASSIFICATION	On uniprocessors wait until we're sure the splash screen has been painted so that we aren't competing for resources
WITHOUT_CLASSIFICATION	make the projectbrowser
WITHOUT_CLASSIFICATION	end Class Main
WITHOUT_CLASSIFICATION	end class PostLoad
WITHOUT_CLASSIFICATION	We don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	We don't care if optional modules aren't found.
WITHOUT_CLASSIFICATION	end class LoadModules
WITHOUT_CLASSIFICATION	All tabs are added at the end, except a TabToDoTarget:
WITHOUT_CLASSIFICATION	End interface GUISettingsTabInterface
WITHOUT_CLASSIFICATION	skip pos, we know it's not a valid char from above
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Store in the user configuration, and let gef know also.
WITHOUT_CLASSIFICATION	Use the configuration if it exists, otherwise use what gef thinks.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	failed to clone
WITHOUT_CLASSIFICATION	Remark: The code in ProjectSettings.init() currently presumes that nobody is using this event.
WITHOUT_CLASSIFICATION	NOTE: This is package scope to force callers to use ResourceLoaderWrapper
WITHOUT_CLASSIFICATION	Strip all characters out of <var>s</var> that could not be part of a valid Java identifier. Return either the given string (if all characters were valid), or a new string with all invalid characters stripped out. This allows automatic conversion of strings containing punctuation and spaces to a resource name that can be looked up.
WITHOUT_CLASSIFICATION	end class ResourceLoader
WITHOUT_CLASSIFICATION	the validity checking thread should wait if disabled.
WITHOUT_CLASSIFICATION	If element has been deleted, it's no longer valid
WITHOUT_CLASSIFICATION	History.TheHistory.addItemResolution(item, "no longer valid"); ((ToDoItem)item).resolve("no longer valid"); notifyObservers("removeElement", item);
WITHOUT_CLASSIFICATION	Notifications and Updates
WITHOUT_CLASSIFICATION	skip any identical items already on the list
WITHOUT_CLASSIFICATION	cat.debug("Checking for inhibitors " + rc);
WITHOUT_CLASSIFICATION	History.TheHistory.addItemResolution(item, reason);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	end class ArgoJMenu
WITHOUT_CLASSIFICATION	Block added by BobTarling 8-Jan-2002 Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true in order to remain compatible with previous versions of this code.
WITHOUT_CLASSIFICATION	EventListenerList.add() is synchronized, so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	End of block
WITHOUT_CLASSIFICATION	end interface Clarifier
WITHOUT_CLASSIFICATION	Set the checkbox on or off according to the SELECTED value of the action. If no SELECTED value is found then this defaults to true.
WITHOUT_CLASSIFICATION	Extra care to be taken since allOffenders can be reset while this method is running.
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	Cached expansions
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	Extra care to be taken since allPosters can be reset while this method is running.
WITHOUT_CLASSIFICATION	set the icon for this poster
WITHOUT_CLASSIFICATION	EventListenerList.remove() is synchronized, so we don't need to synchronize ourselves
WITHOUT_CLASSIFICATION	MVW
WITHOUT_CLASSIFICATION	event related stuff
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	Enable buttons when selection made. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	end class CheckManager
WITHOUT_CLASSIFICATION	Now lets search
WITHOUT_CLASSIFICATION	end class TabChecklist
WITHOUT_CLASSIFICATION	We found it!
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	Enter the class to speed up the next search.
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	criticism control
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	instance varables
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.
WITHOUT_CLASSIFICATION	in the past, 0 milliseconds after January 1, 1970, 00:00:00 GMT.
WITHOUT_CLASSIFICATION	by default, double the snooze interval each time
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	end class SnoozeOrder
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	wizard actions
WITHOUT_CLASSIFICATION	This changes the complete structure of the table, so we need to set the column widths again.
WITHOUT_CLASSIFICATION	TODO: do all following steps TODO: resolve item from ToDoList
WITHOUT_CLASSIFICATION	end class ActionOpenCritics
WITHOUT_CLASSIFICATION	Dialog box to list all critics and allow editing of some of their properties. <p> TODO: supported goals, critic network.
WITHOUT_CLASSIFICATION	Set initial sorting on Critic Headline
WITHOUT_CLASSIFICATION	Critics Table
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	Critic Details panel
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	TableModel implemetation
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	no maximum set, so it will stretch...
WITHOUT_CLASSIFICATION	and for advanced mode:
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	Set tableSP's preferred height to 0 so that details height is used in pack()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 0; JLabel priLabel = new JLabel("Priority:"); gb.setConstraints(priLabel, c); _mainPanel.add(priLabel);
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 1; JLabel offLabel = new JLabel("Off"); gb.setConstraints(offLabel, c); _mainPanel.add(offLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 2; JLabel lowLabel = new JLabel("Low"); gb.setConstraints(lowLabel, c); _mainPanel.add(lowLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 3; JLabel twoLabel = new JLabel("ad"); gb.setConstraints(twoLabel, c); _mainPanel.add(twoLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 4; JLabel threeLabel = new JLabel("asd"); gb.setConstraints(threeLabel, c); _mainPanel.add(threeLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 5; JLabel fourLabel = new JLabel("asd"); gb.setConstraints(fourLabel, c); _mainPanel.add(fourLabel);
WITHOUT_CLASSIFICATION	c.gridy = 0; c.gridx = 6; JLabel highLabel = new JLabel("High"); gb.setConstraints(highLabel, c); _mainPanel.add(highLabel);
WITHOUT_CLASSIFICATION	------------ other methods ------------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	TreeModel implementation - todo specific stuff
WITHOUT_CLASSIFICATION	class variables
WITHOUT_CLASSIFICATION	general icons for poster
WITHOUT_CLASSIFICATION	specialised icons for designer
WITHOUT_CLASSIFICATION	TreeCellRenderer implementation
WITHOUT_CLASSIFICATION	end class ToDoTreeRenderer
WITHOUT_CLASSIFICATION	public static Decision decisionUNCATEGORIZED = new Decision("Uncategorized", 1);
WITHOUT_CLASSIFICATION	end class ToDoByDecision
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	c.gridx = 1; c.gridy = 3; c.gridheight = GridBagConstraints.REMAINDER; SpacerPanel spacer2 = new SpacerPanel(); gb.setConstraints(spacer2, c); _mainPanel.add(spacer2);
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	end class WizStepTextField
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	end class WizDescription
WITHOUT_CLASSIFICATION	end class WizStepCue
WITHOUT_CLASSIFICATION	stop/start creating more critics
WITHOUT_CLASSIFICATION	end class ActionGoToCritique
WITHOUT_CLASSIFICATION	Correct lazy initialization of static field without further updates:
WITHOUT_CLASSIFICATION	does nothing
WITHOUT_CLASSIFICATION	end class ActionAutoCritique
WITHOUT_CLASSIFICATION	stop/start cleaning up invalid TodoItems.
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	end class ActionOpenGoals
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	? inform()
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	instead of making a new list, decrement index, return when found and index == 0
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	the target of description will always be set directly by tabtodo
WITHOUT_CLASSIFICATION	Request that we be made visible if we're not? topLevelTabbedPane.setSelectedComponent(t);
WITHOUT_CLASSIFICATION	------------- MouseListener implementation ---------------
WITHOUT_CLASSIFICATION	end class WizStepConfirm
WITHOUT_CLASSIFICATION	next line coming from projectbrowser
WITHOUT_CLASSIFICATION	------------ ItemListener implementation ----------------------
WITHOUT_CLASSIFICATION	-------------TreeSelectionListener implementation -----------
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	not needed in UML 1.x
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	Prepare for typing in rationale field when window is opened. @see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	keep nagging until the user solves the problem: This seems a nice way to nag:
WITHOUT_CLASSIFICATION	Only interrupt for one todoitem
WITHOUT_CLASSIFICATION	end class ActionOpenDecisions
WITHOUT_CLASSIFICATION	blinks?
WITHOUT_CLASSIFICATION	end class ToDoByOffender
WITHOUT_CLASSIFICATION	add the perspectives to a list for the combobox
WITHOUT_CLASSIFICATION	decSlide.setPaintLabels(true);
WITHOUT_CLASSIFICATION	constants instance variables
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	TODO: This looks O(n^2)
WITHOUT_CLASSIFICATION	TODO: make a new history item
WITHOUT_CLASSIFICATION	cat.debug("bad decision");
WITHOUT_CLASSIFICATION	cat.debug("bad goal");
WITHOUT_CLASSIFICATION	end class DismissToDoItemDialog
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	finally, apply profile configuration to the model
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	store wizard?
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	fireTreeNodesChanged(this, path, childIndices, children);
WITHOUT_CLASSIFICATION	image.setMargin(new Insets(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	otherwise parent must be an offending design material
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	end class WizStep
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	actions
WITHOUT_CLASSIFICATION	This is done for compatibility with previous version: Move the argo.user.properties written before 0.25.4 to the new location, if it exists.
WITHOUT_CLASSIFICATION	Don't allow instantiation
WITHOUT_CLASSIFICATION	ActionListener implementation
WITHOUT_CLASSIFICATION	DocumentListener implementation
WITHOUT_CLASSIFICATION	TargetListener implementation
WITHOUT_CLASSIFICATION	copy to new file and let the regular load code do the actual load
WITHOUT_CLASSIFICATION	Instance variables
WITHOUT_CLASSIFICATION	end class ConfigurationFactory
WITHOUT_CLASSIFICATION	LOG.log(Level.INFO, "Configuration saved to {0}\n", url);
WITHOUT_CLASSIFICATION	check for the older properties file and copy it over if possible
WITHOUT_CLASSIFICATION	Only allow one load
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	add the first point twice
WITHOUT_CLASSIFICATION	Scale everything up
WITHOUT_CLASSIFICATION	Initialize band buffer bounds
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "getData Rectangle = " + clip);
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "getData returning raster = " + translatedRaster);
WITHOUT_CLASSIFICATION	Create a new graphics context so we start with fresh transforms
WITHOUT_CLASSIFICATION	Fill with our background color
WITHOUT_CLASSIFICATION	Translate & clip graphic to match region of interest
WITHOUT_CLASSIFICATION	Ask GEF to print a band of the diagram (translated & clipped)
WITHOUT_CLASSIFICATION	Make sure it isn't caching anything that should be written
WITHOUT_CLASSIFICATION	assert !initialized; GUITestActionOpenProject fails over this...
WITHOUT_CLASSIFICATION	Retain the original one:
WITHOUT_CLASSIFICATION	Retain the original one:
WITHOUT_CLASSIFICATION	Internal initialization method. Handles initialization which is common to both public methods.
WITHOUT_CLASSIFICATION	This is needed for the JUnit tests. Otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	This is needed for the JUnit tests. Otherwise a "assert initialized" would suffice.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Flag the command as to whether it is first in a chain
WITHOUT_CLASSIFICATION	end class DelayedChangeNotify
WITHOUT_CLASSIFICATION	Default diagram settings
WITHOUT_CLASSIFICATION	Default notation settings
WITHOUT_CLASSIFICATION	Generation preferences:
WITHOUT_CLASSIFICATION	The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	The next ones defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	This Notation is not available!
WITHOUT_CLASSIFICATION	Always put the model at the top
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	otherwise add the diagram at the start
WITHOUT_CLASSIFICATION	finally, apply profile configuration to the model
WITHOUT_CLASSIFICATION	uri = PersistenceManager.getInstance().fixUriExtension(theProjectUri);
WITHOUT_CLASSIFICATION	Register with the save action with other subsystems so that any changes in those subsystems will enable the save button/menu item etc.
WITHOUT_CLASSIFICATION	not needed in UML 1.x
WITHOUT_CLASSIFICATION	end interface DelayedVChangeListener
WITHOUT_CLASSIFICATION	a profile initially has no applied profiles, we go bottom-up
WITHOUT_CLASSIFICATION	Skip leading underscores:
WITHOUT_CLASSIFICATION	TODO: should just be the directory to write.
WITHOUT_CLASSIFICATION	The preferences with project-scope:
WITHOUT_CLASSIFICATION	The ArgoUML version with which this project was last saved:
WITHOUT_CLASSIFICATION	if diagram added successfully, add the member too
WITHOUT_CLASSIFICATION	Adding a todo member removes any existing one.
WITHOUT_CLASSIFICATION	got past the veto, add the member
WITHOUT_CLASSIFICATION	send indeterminate new value instead of making copy of vector
WITHOUT_CLASSIFICATION	Remove the dependent modelelements, such as the statemachine for a statechartdiagram:
WITHOUT_CLASSIFICATION	Hence, a diagram name was saved in the project that we are loading. So, we use this name to retrieve any matching diagram.
WITHOUT_CLASSIFICATION	Use the first diagram.
WITHOUT_CLASSIFICATION	If there was no diagram at all, then use the (first) UML model.
WITHOUT_CLASSIFICATION	we don't need this HashMap anymore so free up the memory
WITHOUT_CLASSIFICATION	Can not delete the model
WITHOUT_CLASSIFICATION	Can not delete the profile
WITHOUT_CLASSIFICATION	@see java.lang.Object#finalize()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	Make the topmost diagram (that is not the one being deleted) current.
WITHOUT_CLASSIFICATION	trash related methods
WITHOUT_CLASSIFICATION	Fire an event some anyone who cares about diagrams being removed can listen for it
WITHOUT_CLASSIFICATION	If we delete a FigEdge or FigNode we actually call this method with the owner not the Fig itself. However, this method is called by ActionDeleteModelElements for primitive Figs (without owner).
WITHOUT_CLASSIFICATION	there's just one ProfileConfiguration in a project and there's no other way to add another one
WITHOUT_CLASSIFICATION	Tab for the settings dialog that makes it possible to select the modules that are to be enabled. TODO: Header for the table. @author Linus Tolke
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	Access methods for program infrastructure.
WITHOUT_CLASSIFICATION	@see java.io.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	The creation of the actual GUI elements is deferred until they are actually needed. Otherwize we have problems with the initialization.
WITHOUT_CLASSIFICATION	Do nothing! The next time we refresh, we will fetch the values again.
WITHOUT_CLASSIFICATION	Access methods for modules that need to query about the status of other modules.
WITHOUT_CLASSIFICATION	Access methods for the GUI that the user uses to enable and disable modules.
WITHOUT_CLASSIFICATION	Access methods for the program infrastructure
WITHOUT_CLASSIFICATION	Catch all exceptions and errors, however severe
WITHOUT_CLASSIFICATION	TODO: huntForModulesFromJavaWebStart();
WITHOUT_CLASSIFICATION	Load modules specified by a System property. Modules specified by a system property is for running modules from within Eclipse and running from Java Web Start.
WITHOUT_CLASSIFICATION	Try-catch only the JarFile instantiation so we don't accidentally mask anything in ArgoJarClassLoader or processJarFile.
WITHOUT_CLASSIFICATION	We expect all extensions to have a manifest even though we can operate without one if necessary.
WITHOUT_CLASSIFICATION	Look for our specification
WITHOUT_CLASSIFICATION	Add this to search list for I18N properties (Done for both modules & localized property file sets)
WITHOUT_CLASSIFICATION	We havn't found it. Add it.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Utility function to unregister all listeners registered through addElementListener. @see #addElementListener(Object, String)
WITHOUT_CLASSIFICATION	Called after the notation default property gets changed. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	e.g. for an operation: if pce.getSource() == modelElement && event.propertyName = "parameter" if event instanceof AddAssociationEvent Get the parameter instance from event.newValue Call model to add listener on parameter on change of "name", "type" else if event instanceof RemoveAssociationEvent Get the parameter instance from event.oldValue Call model to remove listener on parameter on change of "name", "type" end if end if
WITHOUT_CLASSIFICATION	The following check should have been satisfied before we instantiated the module, but double check again
WITHOUT_CLASSIFICATION	If it didn't have a loadable module class and it doesn't look like a localized property set, warn the user that something funny is in their extension directory
WITHOUT_CLASSIFICATION	Since there is no way to compare the objects as equal, we have to search through the list at this point.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Remark: There is also a java-like notation, which is also part of ArgoUML core distribution.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	This Notation is not available!
WITHOUT_CLASSIFICATION	This is needed for the case when the default notation is not loaded at this point.
WITHOUT_CLASSIFICATION	class accessors
WITHOUT_CLASSIFICATION	Static workers for dealing with notation names.
WITHOUT_CLASSIFICATION	No valid field for above notationLanguage. It's valid if not null.
WITHOUT_CLASSIFICATION	We also show stereotypes
WITHOUT_CLASSIFICATION	We also show stereotypes
WITHOUT_CLASSIFICATION	We also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	We also show the type (of which e.g. the name may change)
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	and when the Operation is replaced:
WITHOUT_CLASSIFICATION	and when the class changes name:
WITHOUT_CLASSIFICATION	mvw: Indeed. The intention of the constructor parameter is to prove that there is a valid UML object to bind the notation to. So, the next statement should fail on a null parameter, and on anything that is not an object of which we can retrieve the multiplicity.
WITHOUT_CLASSIFICATION	We are not interested in the name.
WITHOUT_CLASSIFICATION	And the parameter names and values:
WITHOUT_CLASSIFICATION	And the arguments:
WITHOUT_CLASSIFICATION	We also show parameters
WITHOUT_CLASSIFICATION	We also show types of parameters
WITHOUT_CLASSIFICATION	Listen to the modelelement itself:
WITHOUT_CLASSIFICATION	We also show tagged values (the / for derived)
WITHOUT_CLASSIFICATION	If this fails, then there is a problem... dthompson 29/12/2008: It seems that the returned value is irrelevant here, so I assume that the purpose of this call is just to throw an exception in case of a problem.
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the name and body text i.e. when the CallAction is replaced:
WITHOUT_CLASSIFICATION	and when the owner is replaced (unlikely for operations), and when the operation changes name:
WITHOUT_CLASSIFICATION	Listen to the modelelement itself:
WITHOUT_CLASSIFICATION	removed stereotype
WITHOUT_CLASSIFICATION	register for events from all modelelements that change the text i.e. when the Transition is replaced:
WITHOUT_CLASSIFICATION	new stereotype
WITHOUT_CLASSIFICATION	Listen to name changes in the path (useful for e.g. Package):
WITHOUT_CLASSIFICATION	register for the doActivity etc.
WITHOUT_CLASSIFICATION	register for internal transitions:
WITHOUT_CLASSIFICATION	return "parsing.java.help.attribute";
WITHOUT_CLASSIFICATION	TODO: The src_visibility tag doesn't appear to be created anywhere by ArgoUML currently
WITHOUT_CLASSIFICATION	return "parsing.help.fig-association-end-name";
WITHOUT_CLASSIFICATION	TODO: initial value
WITHOUT_CLASSIFICATION	skip spaces
WITHOUT_CLASSIFICATION	the name itself
WITHOUT_CLASSIFICATION	Check the name for validity:
WITHOUT_CLASSIFICATION	TODO: Check the name for validity.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	pick out return type
WITHOUT_CLASSIFICATION	handle multiplicity here since we need the type actually the API of generator is buggy since to generate multiplicity correctly we need the attribute too
WITHOUT_CLASSIFICATION	Build the final string
WITHOUT_CLASSIFICATION	TODO: qualifiers (e.g., const) TODO: stereotypes...
WITHOUT_CLASSIFICATION	name and params
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	constructor
WITHOUT_CLASSIFICATION	check for more attributes (';' separated):
WITHOUT_CLASSIFICATION	For Java notation, we also need to listen to "leaf" changes, since they are shown as "final" on the diagram.
WITHOUT_CLASSIFICATION	Remove bases that aren't there anymore
WITHOUT_CLASSIFICATION	Notation.findNotation("Java");
WITHOUT_CLASSIFICATION	Initialize the NotationUtilityUml:
WITHOUT_CLASSIFICATION	copy - can't iterate modify live collection while iterating it
WITHOUT_CLASSIFICATION	When nothing is generated: omit the space.
WITHOUT_CLASSIFICATION	Loop through all base classes, building a comma separated list
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	no text? remove attr!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove attr!
WITHOUT_CLASSIFICATION	We need to set the namespace/owner of the new attribute before parsing:
WITHOUT_CLASSIFICATION	If the 1st attribute is static, then the new ones, too.
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	Generates a string representation for the provided attribute. The string representation will be of the form: visibility name [multiplicity] : type-expression = initial-value {property-string} Depending on settings in Notation, visibility, multiplicity, type-expression, initial value and properties are shown/not shown.
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	Handle Visibility:
WITHOUT_CLASSIFICATION	fix for loading bad projects
WITHOUT_CLASSIFICATION	The "show types" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	The element was deleted while we were processing it
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	no text? remove op!
WITHOUT_CLASSIFICATION	no non-whitechars in text? remove op!
WITHOUT_CLASSIFICATION	check for more operations (';' separated):
WITHOUT_CLASSIFICATION	end while loop
WITHOUT_CLASSIFICATION	parameterlist is guaranteed to contain at least "("
WITHOUT_CLASSIFICATION	Don't create a stereotype for <<signal>> on a Reception but create any other parsed stereotypes as needed
WITHOUT_CLASSIFICATION	lets concatenate it to the resulting string (genStr)
WITHOUT_CLASSIFICATION	The "show types" defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	the parameters
WITHOUT_CLASSIFICATION	the returnparameters
WITHOUT_CLASSIFICATION	The model element was deleted while we were working on it
WITHOUT_CLASSIFICATION	else: we remove only the extra ","
WITHOUT_CLASSIFICATION	the query state
WITHOUT_CLASSIFICATION	Although Operation and Signal are peers in the UML type hierarchy they share the attributes isRoot, isLeaf, isAbstract, and specification. Concurrency is not shared and is specific to Operation.
WITHOUT_CLASSIFICATION	remove last ,
WITHOUT_CLASSIFICATION	end of block
WITHOUT_CLASSIFICATION	A string of the form "name:"
WITHOUT_CLASSIFICATION	this is a Message UML object
WITHOUT_CLASSIFICATION	Supported format: predecessors number ":" action The 3 parts of the string to generate:
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	This may return null:
WITHOUT_CLASSIFICATION	activatorIntNo is now guaranteed not null
WITHOUT_CLASSIFICATION	List<String> args = null;
WITHOUT_CLASSIFICATION	get the ordered list of immediate successors:
WITHOUT_CLASSIFICATION	the condition or iteration expression (recurrence):
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	Now apply the changes to the model:
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	If there are more than one suitable operation, then we pick the first one.
WITHOUT_CLASSIFICATION	Disconnect the message from the call graph Make copies of returned live collections since we're modifying
WITHOUT_CLASSIFICATION	Find the preceding message, if any, on either end of the association.
WITHOUT_CLASSIFICATION	MClassifierRole
WITHOUT_CLASSIFICATION	Connect the message at a new spot
WITHOUT_CLASSIFICATION	case 3 & 4
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	MClassifierRole
WITHOUT_CLASSIFICATION	If no variable name was given, then retain the one in the model.
WITHOUT_CLASSIFICATION	If no function-name was given, then retain the one in the model.
WITHOUT_CLASSIFICATION	Store the guard, i.e. condition or iteration expression, in the recurrence field of the Action:
WITHOUT_CLASSIFICATION	If there was no Action yet, create a CallAction:
WITHOUT_CLASSIFICATION	Things are strange if there are more than one candidate root, it has no obvious interpretation in terms of a call tree.
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	Jaap Branderhorst 2002-23-09 added next lines to link parameters and operations to the figs that represent them
WITHOUT_CLASSIFICATION	We can do nothing if we don't have both the use case and extension point.
WITHOUT_CLASSIFICATION	Parse the string to creat a new extension point.
WITHOUT_CLASSIFICATION	If we got back null we interpret this as meaning delete the reference to the extension point from the use case, otherwise we set the fields of the extension point to the values in newEp.
WITHOUT_CLASSIFICATION	Build a new extension point
WITHOUT_CLASSIFICATION	The empty string. Return null
WITHOUT_CLASSIFICATION	Handle Derived:
WITHOUT_CLASSIFICATION	If we are given the null string, return immediately, so that the extensionpoint is removed.
WITHOUT_CLASSIFICATION	A string of the form "location". This will be confused by the string ":", so we pick this out as an instruction to clear both name and location.
WITHOUT_CLASSIFICATION	A string of the form "name:location". Discard the middle token (":")
WITHOUT_CLASSIFICATION	Read past the colon.
WITHOUT_CLASSIFICATION	The string to build
WITHOUT_CLASSIFICATION	Get the fields we want
WITHOUT_CLASSIFICATION	Put in the name field if it's there
WITHOUT_CLASSIFICATION	Put in the location field if it's there
WITHOUT_CLASSIFICATION	First we decode the string:
WITHOUT_CLASSIFICATION	Secondly we check the previous model structure:
WITHOUT_CLASSIFICATION	And 3rd, we adapt the model:
WITHOUT_CLASSIFICATION	Same class, other operation
WITHOUT_CLASSIFICATION	Other class
WITHOUT_CLASSIFICATION	We found the classifier, now go find the operation:
WITHOUT_CLASSIFICATION	Here we located the new classifier with its operation.
WITHOUT_CLASSIFICATION	the text was: {frozen}
WITHOUT_CLASSIFICATION	the text was: {frozen = false}
WITHOUT_CLASSIFICATION	the text was: {frozen = true}
WITHOUT_CLASSIFICATION	Copy returned parameters because it will be a live collection for MDR
WITHOUT_CLASSIFICATION	Should we be getting this from the GUI? BT 11 aug 2002
WITHOUT_CLASSIFICATION	no type defined yet
WITHOUT_CLASSIFICATION	If the current property occurs a second time in the given list of properties, then skip it:
WITHOUT_CLASSIFICATION	This automatically pulls in a TagDefinition from the profile:
WITHOUT_CLASSIFICATION	The TV existed, but maybe it was not "true":
WITHOUT_CLASSIFICATION	TODO: For UML2: Check if the type of the TV is String.
WITHOUT_CLASSIFICATION	Generate all the existing internal transitions, so that we can compare them as text with the newly entered ones.
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	This would be solution (1): Model.getExtensionMechanismsHelper().setDataValues( taggedValue, new String[] {"false"});
WITHOUT_CLASSIFICATION	There are 2 possibilities: either (1) we follow the traditional notation philosophy, and set the tagged value to false, or (2) we restore to the pristine situation and delete the taggedValue (whatever the value was). I chose the latter (mvw).
WITHOUT_CLASSIFICATION	Allow concatenation order and separator to be localized
WITHOUT_CLASSIFICATION	Parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	it can still be null if the UML element did not have a multiplicity defined.
WITHOUT_CLASSIFICATION	Let's not be picky about the brackets - just remove them:
WITHOUT_CLASSIFICATION	get the classifier
WITHOUT_CLASSIFICATION	the State of a ClassifierInState is removed, so let's reduce it to a Classifier.
WITHOUT_CLASSIFICATION	the model is changed - job done
WITHOUT_CLASSIFICATION	Strings
WITHOUT_CLASSIFICATION	Remove the states that did not match.
WITHOUT_CLASSIFICATION	Now we have to see if any state in any statemachine of classifier is named [name]. If so, then we only have to link the state to c.
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	the model is changed - our job is done
WITHOUT_CLASSIFICATION	no state named s is found, so we have to reject the user's input
WITHOUT_CLASSIFICATION	Finally, do the adaptations:
WITHOUT_CLASSIFICATION	then c is a "normal" Classifier UML states
WITHOUT_CLASSIFICATION	let's create a new ClassifierInState with the correct links
WITHOUT_CLASSIFICATION	This updates the diagram - hence as last statement:
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	We can distinguish between 4 cases: 1. A trigger is given. None exists yet. 2. The trigger was present, and it is the same type, or a different type, and its text is changed, or the same. 3. A trigger is not given. None exists yet. 4. The name of the trigger was present, but is removed. The reaction in these cases should be: 1. Find the referred trigger (issue 5988) or create a new one, and hook it to the transition. 2. Rename the trigger. 3. Nop. 4. Unhook and erase the existing trigger.
WITHOUT_CLASSIFICATION	if no classifier has been set, then entering a state is not useful, so the user's input has to be rejected.
WITHOUT_CLASSIFICATION	TODO: If the next line trows an exception, then what do we do with the remainder of the parsed/to be parsed lines?
WITHOUT_CLASSIFICATION	Add this new one, and mark it to be retained:
WITHOUT_CLASSIFICATION	Process the final list of internal transitions, and hook it to the state:
WITHOUT_CLASSIFICATION	don't forget to remove old internals!
WITHOUT_CLASSIFICATION	Make next accesses to this instance predictable:
WITHOUT_CLASSIFICATION	and hook in the new ones:
WITHOUT_CLASSIFICATION	the ActionExpression
WITHOUT_CLASSIFICATION	let's look for a TimeEvent, ChangeEvent, CallEvent or SignalEvent
WITHOUT_CLASSIFICATION	operation(paramlist)
WITHOUT_CLASSIFICATION	the part after the || is for when there's nothing between the ()
WITHOUT_CLASSIFICATION	It is safe to give a null to the next function, since a statemachine is always composed by a model anyhow.
WITHOUT_CLASSIFICATION	else the empty s will do
WITHOUT_CLASSIFICATION	case 1 and 2
WITHOUT_CLASSIFICATION	language
WITHOUT_CLASSIFICATION	Do not set the name.
WITHOUT_CLASSIFICATION	Do not set the name.
WITHOUT_CLASSIFICATION	This case is a bit different, because of the parameters. If the event already exists, the parameters are ignored.
WITHOUT_CLASSIFICATION	when(...)
WITHOUT_CLASSIFICATION	signalname
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	And hook it to the transition immediately, so that an exception can not cause it to remain dangling:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	yes, there are more:
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	Parameter etc.
WITHOUT_CLASSIFICATION	"in" is the default
WITHOUT_CLASSIFICATION	"in"
WITHOUT_CLASSIFICATION	return nothing
WITHOUT_CLASSIFICATION	and parse the parameter list
WITHOUT_CLASSIFICATION	case 2
WITHOUT_CLASSIFICATION	Just change the time expression
WITHOUT_CLASSIFICATION	we have an event without expression
WITHOUT_CLASSIFICATION	It's a time-event now, but was of another type before!
WITHOUT_CLASSIFICATION	Just change the ChangeExpression
WITHOUT_CLASSIFICATION	Create a new expression:
WITHOUT_CLASSIFICATION	The parsed text describes a change-event, but the model contains another type!
WITHOUT_CLASSIFICATION	Just change the Name and linked operation
WITHOUT_CLASSIFICATION	TODO: Change the linked operation.
WITHOUT_CLASSIFICATION	Just change the Name and linked signal
WITHOUT_CLASSIFICATION	case 3 and 4
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 3
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	Do not check if the parameters match.
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	NSUML does this (?) Model.getFacade().setGuard(trans, g);
WITHOUT_CLASSIFICATION	No text. We may remove the literal.
WITHOUT_CLASSIFICATION	No non-white chars in text? remove literal!
WITHOUT_CLASSIFICATION	Heuristic algorithm: do not show stereotypes if there is no name.
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#setVisible(boolean)
WITHOUT_CLASSIFICATION	strip any trailing semi-colons
WITHOUT_CLASSIFICATION	construct bases string (comma separated)
WITHOUT_CLASSIFICATION	Great! The class already existed - just use it.
WITHOUT_CLASSIFICATION	If no base was typed, then only set the name:
WITHOUT_CLASSIFICATION	Only set the name if the base was found:
WITHOUT_CLASSIFICATION	If the base was not changed, then only set the name:
WITHOUT_CLASSIFICATION	get the associationRole name
WITHOUT_CLASSIFICATION	Let's create a class with the given name, otherwise the user will not understand why we refuse his input!
WITHOUT_CLASSIFICATION	Only instantiate when we need it.
WITHOUT_CLASSIFICATION	If the base is already set to this assoc, then do not set it again. This check is needed, otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	2002-07-31 Jaap Branderhorst from here made visibility etc. configurable
WITHOUT_CLASSIFICATION	get the base association name
WITHOUT_CLASSIFICATION	no instantiations
WITHOUT_CLASSIFICATION	The next one defaults to TRUE, to stay compatible with older ArgoUML versions that did not have this setting:
WITHOUT_CLASSIFICATION	end of OCLEvaluator
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	look for associations
WITHOUT_CLASSIFICATION	MAssociationEnd
WITHOUT_CLASSIFICATION	MParameter
WITHOUT_CLASSIFICATION	MAssociationEnd
WITHOUT_CLASSIFICATION	The ocl toolkit does not like void return types
WITHOUT_CLASSIFICATION	MClassifiers cannot be Bag
WITHOUT_CLASSIFICATION	MClassifier
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	first search for appropriate attributes
WITHOUT_CLASSIFICATION	MClassifier
WITHOUT_CLASSIFICATION	MOperation
WITHOUT_CLASSIFICATION	MOperation
WITHOUT_CLASSIFICATION	... and not incompletely imported
WITHOUT_CLASSIFICATION	Query checking added 05/21/01, sz9
WITHOUT_CLASSIFICATION	Query checking added 05/21/01, sz9
WITHOUT_CLASSIFICATION	end class OCLExpander
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	skip first parameter == return type
WITHOUT_CLASSIFICATION	Only look at classes...
WITHOUT_CLASSIFICATION	abstract classes are hardly ever singletons
WITHOUT_CLASSIFICATION	and not association classes
WITHOUT_CLASSIFICATION	with a name...
WITHOUT_CLASSIFICATION	If there is an attribute which is not static => no problem
WITHOUT_CLASSIFICATION	If there is an outgoing association => no problem
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	Check for Singleton stereotype, uninitialised instance variables and outgoing associations, as per JavaDoc above.
WITHOUT_CLASSIFICATION	Found no such attribute
WITHOUT_CLASSIFICATION	We only look at singletons
WITHOUT_CLASSIFICATION	We only look at singletons
WITHOUT_CLASSIFICATION	end class CrSingletonViolatedOnlyPrivateConstructors
WITHOUT_CLASSIFICATION	NOTE: For historical reasons true == hide, so we need to invert the sense of this
WITHOUT_CLASSIFICATION	end class CrEmptyPackage
WITHOUT_CLASSIFICATION	At this stage during loading, the diagrams are not created yet - so we have to store this name for later use.
WITHOUT_CLASSIFICATION	pw.close();
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	project.setFile(file);
WITHOUT_CLASSIFICATION	for AndroMDA profiles
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	Give the parser a map of model elements keyed by their UUID. This is used to allocate figs to their owner using the "href" attribute in PGML.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	If we get a 2nd error, just ignore it
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Should never happen - something's really wrong
WITHOUT_CLASSIFICATION	main parsing methods
WITHOUT_CLASSIFICATION	@see java.io.InputStream#close()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	boolean upgradeRequired = !checkVersion(fileVersion, releaseVersion)
WITHOUT_CLASSIFICATION	Upgrade is in the way for UML2 projects, so we turn it off in that case:
WITHOUT_CLASSIFICATION	Load .argo project descriptor
WITHOUT_CLASSIFICATION	Load the rest
WITHOUT_CLASSIFICATION	Copy the todo items after the model and diagrams so that any model elements or figs that the todo items refer to will exist before creating critics.
WITHOUT_CLASSIFICATION	first read the .argo file from Zip
WITHOUT_CLASSIFICATION	Keep reading till we hit the <argo> tag
WITHOUT_CLASSIFICATION	Get the version from the tag.
WITHOUT_CLASSIFICATION	Skip 1 lines
WITHOUT_CLASSIFICATION	Loop round loading the diagrams
WITHOUT_CLASSIFICATION	private EventListenerList listenerList = new EventListenerList();
WITHOUT_CLASSIFICATION	Skip the 2 lines <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE todo SYSTEM "todo.dtd" >
WITHOUT_CLASSIFICATION	Keep reading till we get the left bracket of an opening tag
WITHOUT_CLASSIFICATION	Compare each following character to see that it matches the tag we want
WITHOUT_CLASSIFICATION	We also want to match with the right bracket of the tag or some other terminator
WITHOUT_CLASSIFICATION	We've found the matching tag but do we have the correct instance with matching attributes?
WITHOUT_CLASSIFICATION	Read the name of the child tag and then reset read position back to that child tag.
WITHOUT_CLASSIFICATION	Skip any whitespace till we should be on an equals sign.
WITHOUT_CLASSIFICATION	Skip any whitespace till we should be on a quote symbol.
WITHOUT_CLASSIFICATION	No other uses of string in PGMLHandler
WITHOUT_CLASSIFICATION	Handle other uses of <private> contents
WITHOUT_CLASSIFICATION	Sanity check - the returned path item placement strategy should match the one in the UML. If it doesn't, it could be that the UML was created with an older argo version, and the new argo version use a different placement strategy. If they don't match, just use the default.
WITHOUT_CLASSIFICATION	If any of the values are null, ignore the element.
WITHOUT_CLASSIFICATION	If the PathItemPlacement was unknown, leave the diagram with the default settings.
WITHOUT_CLASSIFICATION	For a match to be found, it has to have the same owner, and the same long class name.
WITHOUT_CLASSIFICATION	A list of the path item attributes for this container. The list is populated during parsing, them processed at endElement() private List<Hashtable<String, String>> pathItemAttrs = new ArrayList<Hashtable<String, String>>();
WITHOUT_CLASSIFICATION	This code has to go within the startElement block after the strings have been matched.
WITHOUT_CLASSIFICATION	Method 1: (collect data and assign later in endElement() method). Hashtable<String, String> ht = new Hashtable<String, String>(); ht.put("classname", classname); ht.put("figclassname", figclassname); ht.put("ownerhref", ownerhref); ht.put("angle", angle); ht.put("offset", offset); pathItemAttrs.add(ht);
WITHOUT_CLASSIFICATION	Create a new diagram wide settings block which is backed by the project-wide defaults that we were passed
WITHOUT_CLASSIFICATION	Ignore non-private elements within FigNode groups
WITHOUT_CLASSIFICATION	Handle ItemUID in container contents
WITHOUT_CLASSIFICATION	Discard class name, x y w h
WITHOUT_CLASSIFICATION	The owner should always have already been set in the constructor
WITHOUT_CLASSIFICATION	happens when 'is' comes from a zip file
WITHOUT_CLASSIFICATION	continue with null stream, readDiagram(...) will take care of it
WITHOUT_CLASSIFICATION	TODO: Localize these
WITHOUT_CLASSIFICATION	If the id does not look like a top-level Fig then we can assume that this is an id of a FigEdgePort inside some FigEdge. So extract the FigEdgePort from the FigEdge and return that as the FigNode.
WITHOUT_CLASSIFICATION	If there is no dot then this must be a top level Fig and can be assumed to be a FigNode.
WITHOUT_CLASSIFICATION	We are looking first to match with 3 different constructor types. We would not expect a Fig to have any mix of these. Any constructor other than these should be deprecated so we look for these first. Fig(DiagramEdgeSettings, DiagramSettings) Fig(Object, Rectangle, DiagramSettings) Fig(Rectangle, DiagramSettings)
WITHOUT_CLASSIFICATION	FigNodeModelElements should match here
WITHOUT_CLASSIFICATION	FigEdgeModelElements should match here (they have no bounds)
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	Fall back to GEF's handling if we couldn't find an appropriate constructor
WITHOUT_CLASSIFICATION	myWriter,
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	<model> is not used in current implementation
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	|| model == null
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Write out header section
WITHOUT_CLASSIFICATION	Note we assume members are ordered correctly already
WITHOUT_CLASSIFICATION	let's initialize the progressMgr
WITHOUT_CLASSIFICATION	Run through any stylesheet upgrades
WITHOUT_CLASSIFICATION	Don't use systemId here or it will get opened in preference to inputStream.
WITHOUT_CLASSIFICATION	UML 2.x files could also contain a profile model. Try again with uml:Profile as main tag.
WITHOUT_CLASSIFICATION	let's update the progress
WITHOUT_CLASSIFICATION	If we're trying to load a file from a future version complain and refuse.
WITHOUT_CLASSIFICATION	Empty constructor
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	No more we can do here on failure
WITHOUT_CLASSIFICATION	Buffer containing characters which have been decoded from the bytes in inBB.
WITHOUT_CLASSIFICATION	RegEx pattern for XML declaration and, optionally, DOCTYPE Backslashes are doubled up - one for Java, one for Regex
WITHOUT_CLASSIFICATION	Convert from bytes back to characters
WITHOUT_CLASSIFICATION	rewind our character buffer
WITHOUT_CLASSIFICATION	Remove anything that matches our pattern
WITHOUT_CLASSIFICATION	Remove null characters at the end
WITHOUT_CLASSIFICATION	Reencode the remaining characters as bytes again
WITHOUT_CLASSIFICATION	and write them to our output stream
WITHOUT_CLASSIFICATION	Skip the <?xml... first line
WITHOUT_CLASSIFICATION	cat.debug("NOTE: TodoParser handleStartTag:" + e.getName());
WITHOUT_CLASSIFICATION	NOP
WITHOUT_CLASSIFICATION	This is expected to be safe, don't add a try block here
WITHOUT_CLASSIFICATION	cat.debug("Added ToDoItem: " + _headline);
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#startElement(java.lang.String, java.lang.String, java.lang.String, org.xml.sax.Attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#endElement(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.xml.sax.ContentHandler#characters(char[], int, int)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	These strings match the XML element names in the argo.tee exactly.
WITHOUT_CLASSIFICATION	The following is deprecated, but can never be removed to preserve backward compatibility with old project files
WITHOUT_CLASSIFICATION	protected methods
WITHOUT_CLASSIFICATION	empty constructor
WITHOUT_CLASSIFICATION	abstract methods
WITHOUT_CLASSIFICATION	non-abstract methods
WITHOUT_CLASSIFICATION	e.g:org.argouml.uml.generator.ui.ClassGenerationDialog -> poseidon.jar
WITHOUT_CLASSIFICATION	convenience methods
WITHOUT_CLASSIFICATION	end class SAXParserBase
WITHOUT_CLASSIFICATION	Stop UI interception
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	Retain the previous project file even when the save operation crashes in the middle. Also create a backup file after saving.
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	we have to give a message to user and set the system to unsaved!
WITHOUT_CLASSIFICATION	Make sure the file doesn't exist so the user will get prompted to choose a new name
WITHOUT_CLASSIFICATION	possibly use the following instead MemberFilePersister persister = new DiagramMemberFilePersister();
WITHOUT_CLASSIFICATION	class methods
WITHOUT_CLASSIFICATION	end class XMLTokenTableBase
WITHOUT_CLASSIFICATION	These are the file formats I know about:
WITHOUT_CLASSIFICATION	If anything goes wrong return the stack trace as a string so that we get some useful feedback.
WITHOUT_CLASSIFICATION	Return just the comment edges for a specific layer. TODO: Document: Diagram / layer? @param diagram The diagram. @return a {@link List} with the edges.
WITHOUT_CLASSIFICATION	make sure this setting exists in the configuration file to facilitate changing:
WITHOUT_CLASSIFICATION	Is row at top of screen?
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	FileFilter API
WITHOUT_CLASSIFICATION	this check for files without extension...
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	end class XMLElement
WITHOUT_CLASSIFICATION	for AndroMDA
WITHOUT_CLASSIFICATION	For some reason, this alleged directory is a single file This could be that there is some confusion or just the normal, that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	Get the contents of the directory
WITHOUT_CLASSIFICATION	The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	If this file is a directory
WITHOUT_CLASSIFICATION	load profile name
WITHOUT_CLASSIFICATION	Yes, scroll up one row
WITHOUT_CLASSIFICATION	Testing: Works Ok.
WITHOUT_CLASSIFICATION	if there is only one package in the model, we should suppose it's the profile model, if there is more than one, we take the ones marked as <<profile>>
WITHOUT_CLASSIFICATION	load profile dependencies
WITHOUT_CLASSIFICATION	Set up the property panels for critics:
WITHOUT_CLASSIFICATION	init profiles defined in jar files
WITHOUT_CLASSIFICATION	We have our own UML2 profile, but it is not used. Instead, by the following line the build-in eclipse UML2 standard profile and primitive types implementation are used.
WITHOUT_CLASSIFICATION	Missing WFRs
WITHOUT_CLASSIFICATION	Association Class 4.5.3.2 [1]
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	4.5.3.2 [2]
WITHOUT_CLASSIFICATION	Behavioral Feature 4.5.3.5 [2]
WITHOUT_CLASSIFICATION	TODO: Partly overlaps CrOppEndVsAttr.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	Tested with fabricated XMI - OK.
WITHOUT_CLASSIFICATION	4.5.3.20 [4]
WITHOUT_CLASSIFICATION	+ "a.allConnections->exists(r | r.type.oclIsKindOf(Actor)) and "
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAIfExpression(tudresden.ocl.parser.node.AIfExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALogicalExpressionTail(tudresden.ocl.parser.node.ALogicalExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseARelationalExpressionTail(tudresden.ocl.parser.node.ARelationalExpressionTail)
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [2]
WITHOUT_CLASSIFICATION	Classifier 4.5.3.8 [5]
WITHOUT_CLASSIFICATION	GeneralizableElement 4.5.3.20 [1]
WITHOUT_CLASSIFICATION	DataType 4.5.3.12 [1]
WITHOUT_CLASSIFICATION	Actor 4.11.3.1 [1]
WITHOUT_CLASSIFICATION	Namespace 4.5.3.26 [2]
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [1]
WITHOUT_CLASSIFICATION	Actor 4.11.3.1 [2]
WITHOUT_CLASSIFICATION	Tested OK, except in some cases, depending on the sequence of the EPs. Probably the implementation of "forAll (x, y | ..." does not cover all combinations.
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [4]
WITHOUT_CLASSIFICATION	UseCase 4.11.3.5 [3]
WITHOUT_CLASSIFICATION	ActionState 4.13.3.2 [3] Issue 715
WITHOUT_CLASSIFICATION	no default type for UML2
WITHOUT_CLASSIFICATION	the UML Profile is always present and default
WITHOUT_CLASSIFICATION	register the built-in profiles
WITHOUT_CLASSIFICATION	if an exception is raised file is unusable
WITHOUT_CLASSIFICATION	if the list does not exist add the code generation and good practices profiles as default
WITHOUT_CLASSIFICATION	this profile could have not been loaded when the default profile configuration was loaded at first, so we need to do it again
WITHOUT_CLASSIFICATION	We assume profile is contained in a single extent
WITHOUT_CLASSIFICATION	Nothing to delete if we couldn't get the packages
WITHOUT_CLASSIFICATION	If we found an old-style name, update it to the new package name
WITHOUT_CLASSIFICATION	Make sure the names didn't change again
WITHOUT_CLASSIFICATION	simply use name as it is
WITHOUT_CLASSIFICATION	if element is an AssociationEnd use the namespace of containing association
WITHOUT_CLASSIFICATION	if one side is null, compare with the equality operator
WITHOUT_CLASSIFICATION	XXX: hypotheses for AFeatureCall: fwd = op, val = head
WITHOUT_CLASSIFICATION	hypotheses no time expression (only invariants)
WITHOUT_CLASSIFICATION	For a iterator call we should provide: (a) the variables (b) the expression to be evaluated on each step (c) the lambda-evaluator to evaluate it
WITHOUT_CLASSIFICATION	XXX hypothesis: no time expression (inv)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAConstraint(tudresden.ocl.parser.node.AConstraint)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAClassifierContext(tudresden.ocl.parser.node.AClassifierContext)
WITHOUT_CLASSIFICATION	these operations are ok for lists too
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "OCL FEATURE CALL: " + subject + ""+ type +""+ feature + "" + parameters);
WITHOUT_CLASSIFICATION	XXX this should be done in CollectionsModelInterpreter but it can't trigger another invokeFeature...
WITHOUT_CLASSIFICATION	Logger. private static final Logger LOG = Logger.getLogger(DefaultOclEvaluator.class.getName());
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "OCL: " + ocl);
WITHOUT_CLASSIFICATION	propagate
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if test fails this element should not be in the result set
WITHOUT_CLASSIFICATION	if test is ok this element should not be in the result set
WITHOUT_CLASSIFICATION	these operations are ok for bags too
WITHOUT_CLASSIFICATION	4.5.2.1 Abstraction
WITHOUT_CLASSIFICATION	4.5.2.3 Association
WITHOUT_CLASSIFICATION	Additional Operation 4.5.3.1 [1]
WITHOUT_CLASSIFICATION	4.5.2.5 AssociationEnd
WITHOUT_CLASSIFICATION	Additional Operation 4.5.3.3 [1]
WITHOUT_CLASSIFICATION	4.5.2.6 Attribute
WITHOUT_CLASSIFICATION	4.5.2.7 BehavioralFeature
WITHOUT_CLASSIFICATION	4.5.2.8 Binding
WITHOUT_CLASSIFICATION	4.5.2.9 Class
WITHOUT_CLASSIFICATION	4.5.2.10 Classifier
WITHOUT_CLASSIFICATION	TODO specifiedEnd??
WITHOUT_CLASSIFICATION	4.5.2.11 Comment
WITHOUT_CLASSIFICATION	4.5.2.12 Component
WITHOUT_CLASSIFICATION	Additional Operation in 4.5.3.9
WITHOUT_CLASSIFICATION	No, scroll down one row
WITHOUT_CLASSIFICATION	4.5.2.14 Dependency
WITHOUT_CLASSIFICATION	4.5.2.18 ElementOwnership
WITHOUT_CLASSIFICATION	4.5.2.19 Enumeration
WITHOUT_CLASSIFICATION	4.5.2.20 EnumerationLiteral
WITHOUT_CLASSIFICATION	4.5.2.21 Feature
WITHOUT_CLASSIFICATION	4.5.2.23 Generalizable Element
WITHOUT_CLASSIFICATION	Additional Operation in 4.5.3.20
WITHOUT_CLASSIFICATION	4.5.2.26 Method
WITHOUT_CLASSIFICATION	4.5.2.27 ModelElement
WITHOUT_CLASSIFICATION	avoiding null names
WITHOUT_CLASSIFICATION	As extended by 4.6.2.2
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.25
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.26
WITHOUT_CLASSIFICATION	4.5.2.29 Node
WITHOUT_CLASSIFICATION	4.5.2.30 Operation
WITHOUT_CLASSIFICATION	4.5.2.31 Parameter
WITHOUT_CLASSIFICATION	4.5.2.35 ProgrammingLanguageDataType
WITHOUT_CLASSIFICATION	Set the icon:
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	4.5.2.37 StructuralFeature
WITHOUT_CLASSIFICATION	4.5.2.38 TemplateArgument
WITHOUT_CLASSIFICATION	4.5.2.39 TemplateParameter
WITHOUT_CLASSIFICATION	4.11.3.5 UseCase
WITHOUT_CLASSIFICATION	The operation specificationPath results in a set containing all surrounding Namespaces that are not instances of Package. specificationPath : Set(Namespace) specificationPath = self.allSurroundingNamespaces->select(n | n.oclIsKindOf(Subsystem) or n.oclIsKindOf(Class))
WITHOUT_CLASSIFICATION	4.5.3.2 AssociationClass
WITHOUT_CLASSIFICATION	The operation allConnections results in the set of all AssociationEnds of the AssociationClass, including all connections defined by its parent (transitive closure).
WITHOUT_CLASSIFICATION	4.6.2.3 Stereotype
WITHOUT_CLASSIFICATION	stereotypeConstraint ?
WITHOUT_CLASSIFICATION	4.6.2.4 TagDefinition
WITHOUT_CLASSIFICATION	4.6.2.5 TaggedValue
WITHOUT_CLASSIFICATION	add adapters that do nothing for keyboard and mouse actions
WITHOUT_CLASSIFICATION	discard the event if its source is not from the correct type
WITHOUT_CLASSIFICATION	Guard against error conditions if climb search wasn't successful
WITHOUT_CLASSIFICATION	Sets the mouse cursor to hourglass mode
WITHOUT_CLASSIFICATION	Start receiving all events and consume them if necessary
WITHOUT_CLASSIFICATION	Activate the glass pane capabilities
WITHOUT_CLASSIFICATION	Stop receiving all events
WITHOUT_CLASSIFICATION	Deactivate the glass pane capabilities
WITHOUT_CLASSIFICATION	Sets the mouse cursor back to the regular pointer
WITHOUT_CLASSIFICATION	no initialization required
WITHOUT_CLASSIFICATION	end class SpacerPanel
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Called when the user has pressed Save. Performs "Save" in all Tabs.
WITHOUT_CLASSIFICATION	Climb the component hierarchy until a RootPaneContainer is found or until the very top
WITHOUT_CLASSIFICATION	end class SplashPanel
WITHOUT_CLASSIFICATION	Retrieve an existing GlassPane if old one already exist or create a new one, otherwise return null
WITHOUT_CLASSIFICATION	Add settings from the settings registry.
WITHOUT_CLASSIFICATION	keep track of the visible window associated w/the component useful during event filtering
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	If a toolbar was requested, create an empty one.
WITHOUT_CLASSIFICATION	Increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.
WITHOUT_CLASSIFICATION	end class TabText
WITHOUT_CLASSIFICATION	If a recursive call from setVisible(), just return
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	windowOpen state will be changed when window is activated
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	We have to tell the settings tab in which project the settings reside:
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	We only request focus the first time we become visible
WITHOUT_CLASSIFICATION	Use Case
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	Handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	savePosition(prpTodo, TabToDo.class); savePosition(prpProperties, TabProps.class); savePosition(prpDocumentation, TabDocumentation.class); savePosition(prpStyle, TabStyle.class); savePosition(prpSource, TabSrc.class); savePosition(prpConstraints, TabConstraints.class); savePosition(prpTaggedValues, TabTaggedValues.class);
WITHOUT_CLASSIFICATION	defer work until fetched/visible
WITHOUT_CLASSIFICATION	Actor
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	loadPosition(prpTodo, TabToDo.class); loadPosition(prpProperties, TabProps.class); loadPosition(prpDocumentation, TabDocumentation.class); loadPosition(prpStyle, TabStyle.class); loadPosition(prpSource, TabSrc.class); loadPosition(prpConstraints, TabConstraints.class); loadPosition(prpTaggedValues, TabTaggedValues.class);
WITHOUT_CLASSIFICATION	------------- Rule management --------------
WITHOUT_CLASSIFICATION	----------- name -------------------------
WITHOUT_CLASSIFICATION	------ all rules ----------
WITHOUT_CLASSIFICATION	TODO: factor out @param rule the rule to be added
WITHOUT_CLASSIFICATION	Put the current pane in a scroll pane.
WITHOUT_CLASSIFICATION	end class StylePanelFigText
WITHOUT_CLASSIFICATION	NOTE: These must stay in this order to match rendering styles
WITHOUT_CLASSIFICATION	The boundary box as held in the target fig, and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.
WITHOUT_CLASSIFICATION	Change the fill colour
WITHOUT_CLASSIFICATION	Change the line colour
WITHOUT_CLASSIFICATION	Can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.
WITHOUT_CLASSIFICATION	Get the text in the field, and don't do anything if the field is empty.
WITHOUT_CLASSIFICATION	Parse the string as if possible
WITHOUT_CLASSIFICATION	Empty implementation - we only care about keyTyped
WITHOUT_CLASSIFICATION	Empty implementation - we only care about keyTyped
WITHOUT_CLASSIFICATION	ignored - will never be called
WITHOUT_CLASSIFICATION	add preloading progress bar?
WITHOUT_CLASSIFICATION	JasonsThemes
WITHOUT_CLASSIFICATION	TODO - lets pass in Project as a constructor argument
WITHOUT_CLASSIFICATION	Make up a default
WITHOUT_CLASSIFICATION	lafClass == null ||
WITHOUT_CLASSIFICATION	Set to the default LAF
WITHOUT_CLASSIFICATION	top, left, bottom, right
WITHOUT_CLASSIFICATION	If LAF is Metal (either set explicitly, or as the default)
WITHOUT_CLASSIFICATION	Set a custom LAF
WITHOUT_CLASSIFICATION	@see javax.swing.JTree#fireTreeCollapsed(javax.swing.tree.TreePath)
WITHOUT_CLASSIFICATION	@see javax.swing.JTree#setModel(javax.swing.tree.TreeModel)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	It looks better if the height increases, too
WITHOUT_CLASSIFICATION	TODO: 10 and 120 were found by trial and error. Calculate them.
WITHOUT_CLASSIFICATION	pack();
WITHOUT_CLASSIFICATION	Not localized:
WITHOUT_CLASSIFICATION	Alphabetic order!
WITHOUT_CLASSIFICATION	Alphabetic order!
WITHOUT_CLASSIFICATION	end class AboutBox
WITHOUT_CLASSIFICATION	Save project at slightly lower priority to keep UI responsive
WITHOUT_CLASSIFICATION	saves the project
WITHOUT_CLASSIFICATION	MVW: We should use default font sizes as much as possible. BTW, this impacts only the width, and reduces readibility:
WITHOUT_CLASSIFICATION	setFont(LookAndFeelMgr.getInstance().getSmallFont());
WITHOUT_CLASSIFICATION	This enables tooltips for tree; this one won't be shown:
WITHOUT_CLASSIFICATION	The default (16) puts the icons too close together:
WITHOUT_CLASSIFICATION	------------ methods that override JTree methods ---------
WITHOUT_CLASSIFICATION	If the name is too long or multi-line (e.g. for comments) then we reduce to the first line or 80 chars.
WITHOUT_CLASSIFICATION	Look for stereotype
WITHOUT_CLASSIFICATION	Use default formatting for any other type of UML element
WITHOUT_CLASSIFICATION	------------- other methods ------------------
WITHOUT_CLASSIFICATION	Labels at the left ...
WITHOUT_CLASSIFICATION	... and fields at the right.
WITHOUT_CLASSIFICATION	The user's full name:
WITHOUT_CLASSIFICATION	The user's email:
WITHOUT_CLASSIFICATION	The project description:
WITHOUT_CLASSIFICATION	This non-editable field shows the version of the ArgoUML that last saved this project:
WITHOUT_CLASSIFICATION	We need to fill the whole pane, so that the description field can take all available space:
WITHOUT_CLASSIFICATION	There is no default description.
WITHOUT_CLASSIFICATION	Defer all work until we're actually needed
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	ActionListener implementation
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	private JCheckBox jchbBold = null;
WITHOUT_CLASSIFICATION	find and add all subdirectories
WITHOUT_CLASSIFICATION	private JCheckBox jchbItalic = null;
WITHOUT_CLASSIFICATION	Initialize font faces list
WITHOUT_CLASSIFICATION	Most of this code originates from ActionOpenProject.
WITHOUT_CLASSIFICATION	Initialize font sizes list
WITHOUT_CLASSIFICATION	jContentPane.add(getJchbBold(), gridBagConstraints2); jContentPane.add(getJchbItalic(), gridBagConstraints3);
WITHOUT_CLASSIFICATION	Try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	MouseListener implementation
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	these are blue in Metal Default Theme
WITHOUT_CLASSIFICATION	these are gray in Metal Default Theme
WITHOUT_CLASSIFICATION	KeyListener implementation
WITHOUT_CLASSIFICATION	ListSelectionListener implementation
WITHOUT_CLASSIFICATION	diagrams are not placed in search results
WITHOUT_CLASSIFICATION	Only return once per diagram so we don't, for example, find a class as a diagram element and also as a child of a package which is on the diagram
WITHOUT_CLASSIFICATION	no related
WITHOUT_CLASSIFICATION	TODO: tabs for class, state, usecase, help
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	TabResults has really large preferred height, so divide in half to reduce size of dialog which will be sized based on this preferred size.
WITHOUT_CLASSIFICATION	Load project at slightly lower priority to keep UI responsive
WITHOUT_CLASSIFICATION	JTabbedPane tabs = new JTabbedPane(); mainPanel.add(tabs, BorderLayout.CENTER); tabs.addTab("All Diagrams", allDiagrams);
WITHOUT_CLASSIFICATION	The south panel always has tabs - but they are added (later) elsewhere.
WITHOUT_CLASSIFICATION	loads the project
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	Special case for backward compatibility
WITHOUT_CLASSIFICATION	default tab todo
WITHOUT_CLASSIFICATION	Select prop panel if current panel is not appropriate for selected target
WITHOUT_CLASSIFICATION	not visible any more - so remove as listener
WITHOUT_CLASSIFICATION	Newly selected tab may have stale target info, so generate a new set target event for it to refresh it
WITHOUT_CLASSIFICATION	update the previously selected tab
WITHOUT_CLASSIFICATION	The other tabs need to be updated depending on the selection.
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	TODO: Quick return here for target == null? - tfm
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	---------------- listener management ----------------
WITHOUT_CLASSIFICATION	--------------- tree nodes -------------------------
WITHOUT_CLASSIFICATION	------------- tree structure -----------------
WITHOUT_CLASSIFICATION	see getValue(), setValue()
WITHOUT_CLASSIFICATION	Create a timer.
WITHOUT_CLASSIFICATION	Mount the glasspane on the component window
WITHOUT_CLASSIFICATION	keep track of the glasspane as an instance variable
WITHOUT_CLASSIFICATION	Start interception UI interactions
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	If action comes in with no modifiers, it is a pure keyboard event (e.g. spacebar), so do it. Anything else is probably a mouse event, so ignore it. Mouse events are dealt with by mousePressed() instead (see bottom of page).
WITHOUT_CLASSIFICATION	end class StylePanel
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Make sure the correspondence that we depend on doesn't change
WITHOUT_CLASSIFICATION	getContentPane().add(_menuBar, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	allows me to ask "Do you want to save first?"
WITHOUT_CLASSIFICATION	Add listener for project changes
WITHOUT_CLASSIFICATION	add listener to get notified when active diagram changes
WITHOUT_CLASSIFICATION	Add a listener to focus changes. Rationale: reset the undo manager to start a new chain.
WITHOUT_CLASSIFICATION	We get many many events (why?), so let's filter:
WITHOUT_CLASSIFICATION	create the todopane
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.JFrame#getJMenuBar()
WITHOUT_CLASSIFICATION	@see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	There are various details panes all of which could hold different tabs pages according to users settings. Place each pane in the required border area.
WITHOUT_CLASSIFICATION	Toolbar boundary is the area between the menu and the status bar. It contains the workarea at centre and the toolbar position north, south, east or west.
WITHOUT_CLASSIFICATION	Add target listeners for details panes
WITHOUT_CLASSIFICATION	Convenience methods to return saved width and height values
WITHOUT_CLASSIFICATION	In theory there can be multiple details pane (work in progress). It must first be determined which details page contains the properties tab. Bob Tarling 7 Dec 2002
WITHOUT_CLASSIFICATION	The trySave method results in the save taking place in another thread. If that completes without error the ProjectBrowser.exit() method will be called which will actually exist the system.
WITHOUT_CLASSIFICATION	end class WindowCloser
WITHOUT_CLASSIFICATION	the project changed
WITHOUT_CLASSIFICATION	Designer.TheDesigner.getToDoList().removeAllElements();
WITHOUT_CLASSIFICATION	update all panes
WITHOUT_CLASSIFICATION	/ TargetListener methods implemented so notified when selected diagram changes. Used to update the window title.
WITHOUT_CLASSIFICATION	this method is invoked from several places, so we have to check whether if the project uri is set or not
WITHOUT_CLASSIFICATION	does the file really exists?
WITHOUT_CLASSIFICATION	project file doesn't exist. let's pop up a message dialog..
WITHOUT_CLASSIFICATION	..and let's ask the user whether he wants to save the actual project into a new file or not
WITHOUT_CLASSIFICATION	save action has been cancelled
WITHOUT_CLASSIFICATION	Attempt to save this project under a new name.
WITHOUT_CLASSIFICATION	Prompt the user for the new name.
WITHOUT_CLASSIFICATION	let's call the real save method
WITHOUT_CLASSIFICATION	Repair any errors in the project
WITHOUT_CLASSIFICATION	notification of menu bar
WITHOUT_CLASSIFICATION	Simulate some errors to repair. Replace with junits - Bob
WITHOUT_CLASSIFICATION	Change to true to enable testing
WITHOUT_CLASSIFICATION	A Fig with a null owner
WITHOUT_CLASSIFICATION	A Fig with a null layer
WITHOUT_CLASSIFICATION	A Fig with a removed model element
WITHOUT_CLASSIFICATION	Remove the old project first. It's wasteful to create a temp empty project, but too much of ArgoUML depends on having a current project
WITHOUT_CLASSIFICATION	Let's save this project in the mru list
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Let's save this project as the last used one in the configuration file
WITHOUT_CLASSIFICATION	an error that can be corrected by the user, so no stack trace, but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	an error that can be corrected by the user, so no stack trace, but instead an explanation and a hint how to fix
WITHOUT_CLASSIFICATION	This is temporary. Load project should create a new project with its own UndoManager and so there should be no Command
WITHOUT_CLASSIFICATION	Make sure save action is always reinstated
WITHOUT_CLASSIFICATION	We clear the save-required flag on the Swing event thread in the hopes that it gets done after any other background work (listener updates) that is being done there
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	end class ProjectBrowser
WITHOUT_CLASSIFICATION	Defer initialization until we're visible
WITHOUT_CLASSIFICATION	Make the result inmediately visible in case of apply:
WITHOUT_CLASSIFICATION	Disabled since it gives various problems: e.g. the toolbar icons get too wide. Also the default does not give the new java 5.0 looks. SwingUtilities.updateComponentTreeUI(SwingUtilities.getRootPane(this));
WITHOUT_CLASSIFICATION	filled in later
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Create new menu item if it doesn't exist for this class.
WITHOUT_CLASSIFICATION	Make this change persistant
WITHOUT_CLASSIFICATION	If menus don't containt menu item necessary for this class, create it
WITHOUT_CLASSIFICATION	If visibility is already changed for this class, respect it.
WITHOUT_CLASSIFICATION	If there is persistant state for this toolbar, respect it, or add it to persistance data
WITHOUT_CLASSIFICATION	Queue to event thread to prevent race during close
WITHOUT_CLASSIFICATION	Add toolbar.
WITHOUT_CLASSIFICATION	Register popup menu with toolbar.
WITHOUT_CLASSIFICATION	these settings are needed to make the ProgressMonitor pop up early
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	Add settings from the settings registry.
WITHOUT_CLASSIFICATION	Increase width to accommodate all tabs on one row.
WITHOUT_CLASSIFICATION	windowOpen state will be changed when window is activated
WITHOUT_CLASSIFICATION	Called when the user has pressed Save. Performs "Save" in all Tabs.
WITHOUT_CLASSIFICATION	Called when the user has pressed Cancel. Performs "Cancel" in all Tabs.
WITHOUT_CLASSIFICATION	We only request focus the first time we become visible
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	ignored - we only care about open/closing
WITHOUT_CLASSIFICATION	Handle the same as an explicit cancel
WITHOUT_CLASSIFICATION	File load/save gets done on a background thread, so we'll probably have to queue this to the Swing event thread
WITHOUT_CLASSIFICATION	TODO: concatenate? - tfm overwrite for now
WITHOUT_CLASSIFICATION	end class StylePanelFigRRect
WITHOUT_CLASSIFICATION	Let the parent do its refresh.
WITHOUT_CLASSIFICATION	lets redraw the box
WITHOUT_CLASSIFICATION	@see java.awt.Component#getPreferredSize()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	Called when the user selects a tab, by clicking or otherwise. @see javax.swing.event.ChangeListener#stateChanged(javax.swing.event.ChangeEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	We don't know what thread events will be delivered on, so make sure we run Swing methods on the Swing thread
WITHOUT_CLASSIFICATION	This instead of the label ??? displayPane.setBorder(new TitledBorder( Translator.localize("Display: ")));
WITHOUT_CLASSIFICATION	add in front of the others add the label in front of the "pane"
WITHOUT_CLASSIFICATION	and finally, adjust the scrollbars to show the Fig
WITHOUT_CLASSIFICATION	% thresholds for bar color changes
WITHOUT_CLASSIFICATION	making it possible to jump to the modelroots
WITHOUT_CLASSIFICATION	org.argouml.ui.TabTable TabMetrics TabJavaSrc | TabSrc TabUMLDisplay TabHash
WITHOUT_CLASSIFICATION	Timer action method. Periodically update our stats and force a repaint.
WITHOUT_CLASSIFICATION	Virtual memory (heap) stats
WITHOUT_CLASSIFICATION	Thin bar to show current allocated heap size
WITHOUT_CLASSIFICATION	Thin bar to show current used
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the MultiEditorPane should only show an empty pane in that case
WITHOUT_CLASSIFICATION	private JPanel constraintsTab = new JPanel();
WITHOUT_CLASSIFICATION	The child is sometimes not found when the tree is being updated
WITHOUT_CLASSIFICATION	private JTabbedPane tabs = new JTabbedPane();
WITHOUT_CLASSIFICATION	tabs.setMinimumSize(new Dimension(300, 250));
WITHOUT_CLASSIFICATION	private JPanel modifiedTab = new JPanel();
WITHOUT_CLASSIFICATION	The ActivityGraph.
WITHOUT_CLASSIFICATION	private JPanel tagValsTab = new JPanel();
WITHOUT_CLASSIFICATION	open space at gridy = 2;
WITHOUT_CLASSIFICATION	mainPanel.add(north, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	Any type
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: Localize
WITHOUT_CLASSIFICATION	MouseListener implementation
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	empty implementation - we only handle mouseClicked
WITHOUT_CLASSIFICATION	This text is for the developers. It doesn't need to be localized.
WITHOUT_CLASSIFICATION	These shouldn't really be <br> instead of <p> elements, but the lines all get run together when pasted into a browser window.
WITHOUT_CLASSIFICATION	JPanel north = new JPanel(); north.setLayout(new BorderLayout()); north.add(tabs, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	initConstraintsTab(); tabs.addTab(Translator.localize("tab.constraints"), constraintsTab); tabs.setEnabledAt(3, false);
WITHOUT_CLASSIFICATION	initTagValsTab(); tabs.addTab(Translator.localize("dialog.find.tab.tagged-values"), tagValsTab); tabs.setEnabledAt(2, false);
WITHOUT_CLASSIFICATION	end class FindDialog
WITHOUT_CLASSIFICATION	name += " in " + dName;
WITHOUT_CLASSIFICATION	Not in UML 2.x (or metatypes) type.addItem(PredicateMType.create( Model.getMetaTypes().getActivityGraph()));
WITHOUT_CLASSIFICATION	Set the name and icon:
WITHOUT_CLASSIFICATION	help tab is 0
WITHOUT_CLASSIFICATION	end runGC_actionPerformed()
WITHOUT_CLASSIFICATION	end class PredicateMType
WITHOUT_CLASSIFICATION	end updateInfo()
WITHOUT_CLASSIFICATION	end class NavigatorPane
WITHOUT_CLASSIFICATION	end copy_actionPerformed()
WITHOUT_CLASSIFICATION	end class ActionGotoDiagram
WITHOUT_CLASSIFICATION	end class SystemInfoDialog
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	But exclude elements that enclose others, since their algorithms to calculate the minimum size does not take enclosed objects into account:
WITHOUT_CLASSIFICATION	super(Translator.localize("action.size-to-fit-contents"));
WITHOUT_CLASSIFICATION	unsupported.
WITHOUT_CLASSIFICATION	Only resize elements which the user would also be able to resize:
WITHOUT_CLASSIFICATION	if a default action was voided then we have to save it
WITHOUT_CLASSIFICATION	Set the name:
WITHOUT_CLASSIFICATION	let's load the default shortcut for every action
WITHOUT_CLASSIFICATION	end class ActionFind
WITHOUT_CLASSIFICATION	let's load the current shortcut from the configuration (as a string)
WITHOUT_CLASSIFICATION	generate menu
WITHOUT_CLASSIFICATION	it should never go here!
WITHOUT_CLASSIFICATION	view menu
WITHOUT_CLASSIFICATION	file menu
WITHOUT_CLASSIFICATION	align submenu
WITHOUT_CLASSIFICATION	edit menu
WITHOUT_CLASSIFICATION	create menu
WITHOUT_CLASSIFICATION	arrange menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	help menu
WITHOUT_CLASSIFICATION	This ID is used as DEFAULT_ID !
WITHOUT_CLASSIFICATION	end class ActionAboutArgoUML
WITHOUT_CLASSIFICATION	distribute submenu
WITHOUT_CLASSIFICATION	end class ActionPageSetup
WITHOUT_CLASSIFICATION	trap focus traversal keys also
WITHOUT_CLASSIFICATION	let's add the key printing logic
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	The "Close window" shortcut (ALT+F4) actually can't be registered as a shortcut, because it closes the configuration dialog!
WITHOUT_CLASSIFICATION	if a not-default current shortcut was added, then we have to save it
WITHOUT_CLASSIFICATION	if the actual is not going to be saved, then try to remove it (as it could have been cancelled)
WITHOUT_CLASSIFICATION	no modifiers - let's check if the key is valid
WITHOUT_CLASSIFICATION	middle of shortcut
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	add last recently used list _before_ exit menu
WITHOUT_CLASSIFICATION	KeyStroke f7 = KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0);
WITHOUT_CLASSIFICATION	and exit menu entry starting with separator.
WITHOUT_CLASSIFICATION	This used to be deferred, but it's only 30-40 msec of work.
WITHOUT_CLASSIFICATION	now, let's set up the "selected action" container
WITHOUT_CLASSIFICATION	generate.add(Actions.GenerateWeb);
WITHOUT_CLASSIFICATION	Add the help menu item.
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the name and icon:
WITHOUT_CLASSIFICATION	clean the history
WITHOUT_CLASSIFICATION	Comment out when we are ready to release undo/redo JMenuItem undoItem = edit.add( ProjectActions.getInstance().getUndoAction()); setMnemonic(undoItem, "Undo"); ShortcutMgr.assignAccelerator(undoItem, ShortcutMgr.ACTION_UNDO); JMenuItem redoItem = edit.add( ProjectActions.getInstance().getRedoAction()); setMnemonic(redoItem, "Redo"); ShortcutMgr.assignAccelerator(redoItem, ShortcutMgr.ACTION_REDO); edit.addSeparator();
WITHOUT_CLASSIFICATION	JMenuItem cutItem = edit.add(ActionCut.getInstance()); setMnemonic(cutItem, "Cut"); setAccelerator(cutItem, ctrlX); JMenuItem copyItem = edit.add(ActionCopy.getInstance()); setMnemonic(copyItem, "Copy"); setAccelerator(copyItem, ctrlC); JMenuItem pasteItem = edit.add(ActionPaste.getInstance()); setMnemonic(pasteItem, "Paste"); setAccelerator(pasteItem, ctrlV); edit.addSeparator();
WITHOUT_CLASSIFICATION	Create the edit toolbar based on the Menu. All menuItems that have an Icon are presumed to be based upon an Action, and these Actions are used in the toolbar.
WITHOUT_CLASSIFICATION	setHelpMenu(help);
WITHOUT_CLASSIFICATION	Component or Action
WITHOUT_CLASSIFICATION	set maximum length of menu entry
WITHOUT_CLASSIFICATION	JMenuItem item = _fileMenu.add(new ActionReopenProject(filename));
WITHOUT_CLASSIFICATION	the text is used by the event handler for opening the project
WITHOUT_CLASSIFICATION	create all nessessary configuration keys for lru
WITHOUT_CLASSIFICATION	holds file menu
WITHOUT_CLASSIFICATION	text is short, tooltip is long
WITHOUT_CLASSIFICATION	read existing file names from configuration
WITHOUT_CLASSIFICATION	empty entry stops reading --> last line!
WITHOUT_CLASSIFICATION	this is the recent count
WITHOUT_CLASSIFICATION	delete all existing entries
WITHOUT_CLASSIFICATION	add new entry as first entry
WITHOUT_CLASSIFICATION	add other existing entries, but filter the just added one
WITHOUT_CLASSIFICATION	save count
WITHOUT_CLASSIFICATION	and store configuration props
WITHOUT_CLASSIFICATION	end class ActionExit
WITHOUT_CLASSIFICATION	box.setLocationRelativeTo(jframe);
WITHOUT_CLASSIFICATION	end class ActionHelp
WITHOUT_CLASSIFICATION	instantiation not allowed
WITHOUT_CLASSIFICATION	end class ActionPrint
WITHOUT_CLASSIFICATION	let's add the table, inside a JScrollPane
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	Do nothing! The next time we refresh, we will fetch the values again.
WITHOUT_CLASSIFICATION	Do nothing - these buttons are not shown.
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	init from config read number, write result as new default and prepare keys
WITHOUT_CLASSIFICATION	get already existing names from menu actions real file names, not action names !
WITHOUT_CLASSIFICATION	let's enable the radiobuttons container
WITHOUT_CLASSIFICATION	updating the radiobuttons container's title
WITHOUT_CLASSIFICATION	let's select the correct radio button
WITHOUT_CLASSIFICATION	no shortcuts --> NONE
WITHOUT_CLASSIFICATION	current shortcut == default --> DEFAULT
WITHOUT_CLASSIFICATION	customized shortcut --> CUSTOM
WITHOUT_CLASSIFICATION	let's reload the shortcuts
WITHOUT_CLASSIFICATION	conflict detected: showing a warning to the user, instead of saving shortcuts
WITHOUT_CLASSIFICATION	saving shortcuts
WITHOUT_CLASSIFICATION	if a shortcut has been select then we have to check if the actual action is in conflict with other ones
WITHOUT_CLASSIFICATION	this shortcut was already been assigned to another action; let's pop-up a message for the user
WITHOUT_CLASSIFICATION	blanking the old action's shortcut.. and now refreshing the table.
WITHOUT_CLASSIFICATION	re-selecting the old row, without changing the target - and without throwing another ListSelectionEvent!
WITHOUT_CLASSIFICATION	let's change the target
WITHOUT_CLASSIFICATION	duplicate shortcut not found; let's check for duplicates
WITHOUT_CLASSIFICATION	there's a duplicate: let's recheck if there is a conflict
WITHOUT_CLASSIFICATION	updating the shortcut field
WITHOUT_CLASSIFICATION	updating the table data
WITHOUT_CLASSIFICATION	updating the actions
WITHOUT_CLASSIFICATION	the shortcut has already been assigned to another action!
WITHOUT_CLASSIFICATION	if the given object is a KeyStroke instance, then we ca
WITHOUT_CLASSIFICATION	let's update also the actions array
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	The default nr of rows is 8, but since we have 9 perspectives by default now, setting to 9 is nicer.
WITHOUT_CLASSIFICATION	Check if multiple items are selected.
WITHOUT_CLASSIFICATION	profile section: dealing with profiles in different states
WITHOUT_CLASSIFICATION	1. a noneditable applied profile
WITHOUT_CLASSIFICATION	just no item added in this case
WITHOUT_CLASSIFICATION	3. the editable unapplied profile
WITHOUT_CLASSIFICATION	end of profile section
WITHOUT_CLASSIFICATION	Can't delete last top level model
WITHOUT_CLASSIFICATION	Determine if only diagrams are in the target list.
WITHOUT_CLASSIFICATION	"x nodes and x edges"
WITHOUT_CLASSIFICATION	Check to see if all targets are classifiers before adding an option to create an association between them all
WITHOUT_CLASSIFICATION	test if this element can be contained by the target
WITHOUT_CLASSIFICATION	iterate through all possible model elements to determine which are valid to be contained by the selected target
WITHOUT_CLASSIFICATION	end class ActionAddExistingRelatedNode
WITHOUT_CLASSIFICATION	this element can be contained add a menu item that allows the user to take that action
WITHOUT_CLASSIFICATION	... otherwise we select the item below the mousepointer.
WITHOUT_CLASSIFICATION	We preserve the current (multiple) selection, if we are over part of it ...
WITHOUT_CLASSIFICATION	unimplemented - we only care about expanding
WITHOUT_CLASSIFICATION	end class ExplorerMouseListener
WITHOUT_CLASSIFICATION	does nothing.
WITHOUT_CLASSIFICATION	need to update the selection state.
WITHOUT_CLASSIFICATION	Perform recursive search of subtree rooted at 'node', selecting all nodes which have a userObject matching one of our targets.
WITHOUT_CLASSIFICATION	get the elements
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	target may appear multiple places in the tree, so we don't stop here (but it's expensive to search the whole tree) - tfm - 20070904 targets.remove(t); break;
WITHOUT_CLASSIFICATION	scan the visible rows for duplicates of this elem and select them
WITHOUT_CLASSIFICATION	check which targetmanager method to call
WITHOUT_CLASSIFICATION	we must call the correct method on targetmanager for each added or removed target
WITHOUT_CLASSIFICATION	we can't remove the targets in one go, we have to do it one by one.
WITHOUT_CLASSIFICATION	setTargets(e.getNewTargets());
WITHOUT_CLASSIFICATION	setTargets(e.getNewTargets());
WITHOUT_CLASSIFICATION	at the top right bottom left bottom
WITHOUT_CLASSIFICATION	the dialog is modal
WITHOUT_CLASSIFICATION	sortJListModel(ruleLibraryList);
WITHOUT_CLASSIFICATION	disable the buttons for now, since no selection has been made yet
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	remove the ones already selected (if a perspective is selected)
WITHOUT_CLASSIFICATION	add them
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	must add an editable list of new ExplorerPerspective's to the list model so that the original ones are not changed in the case of a cancel action by the user.
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	update the label (which shows the number of rules)
WITHOUT_CLASSIFICATION	set the newly selected item in the library list
WITHOUT_CLASSIFICATION	remove the rule from the library list
WITHOUT_CLASSIFICATION	The name of the UMLDiagram represented by this node has changed.
WITHOUT_CLASSIFICATION	uml model events
WITHOUT_CLASSIFICATION	notation events
WITHOUT_CLASSIFICATION	Handle remove for non-UML elements (e.g. diagrams)
WITHOUT_CLASSIFICATION	Get the selected targets (UML ModelElements) from the TargetManager.
WITHOUT_CLASSIFICATION	project events
WITHOUT_CLASSIFICATION	show a chooser dialog for the file name, only xmi is allowed
WITHOUT_CLASSIFICATION	get one of the default profile dirs, if available (as a default value for the following save dialog)
WITHOUT_CLASSIFICATION	save profile
WITHOUT_CLASSIFICATION	register it as a user profile
WITHOUT_CLASSIFICATION	this is safe because getName always returns a string of some type
WITHOUT_CLASSIFICATION	load user perspectives
WITHOUT_CLASSIFICATION	get the perspective name
WITHOUT_CLASSIFICATION	make sure there are some rules...
WITHOUT_CLASSIFICATION	get the rules
WITHOUT_CLASSIFICATION	get the rule name
WITHOUT_CLASSIFICATION	create the rule
WITHOUT_CLASSIFICATION	rule name but no rules
WITHOUT_CLASSIFICATION	add the perspective
WITHOUT_CLASSIFICATION	no user defined perspectives
WITHOUT_CLASSIFICATION	one last check that some loaded.
WITHOUT_CLASSIFICATION	works for both statediagram as activitygraph
WITHOUT_CLASSIFICATION	Enter here go rules only relevant for UML 2 empty for now
WITHOUT_CLASSIFICATION	The drag gesture recognizer fires events in response to drag gestures in a component.
WITHOUT_CLASSIFICATION	specifies valid actions
WITHOUT_CLASSIFICATION	Eliminates right mouse clicks as valid actions
WITHOUT_CLASSIFICATION	First argument: Component to associate the target with Second argument: DropTargetListener
WITHOUT_CLASSIFICATION	Get the cell renderer (which is a JLabel) for the path being dragged.
WITHOUT_CLASSIFICATION	The layout manager would normally do this:
WITHOUT_CLASSIFICATION	Get a buffered image of the selection for dragging a ghost image
WITHOUT_CLASSIFICATION	Ask the cell renderer to paint itself into the BufferedImage. Make the image ghostlike.
WITHOUT_CLASSIFICATION	Now paint a gradient UNDER the ghosted JLabel text (but not under the icon if any).
WITHOUT_CLASSIFICATION	Make the gradient ghostlike:
WITHOUT_CLASSIFICATION	Remember the path being dragged (because if it is being moved, we will have to delete it later).
WITHOUT_CLASSIFICATION	We pass our drag image just in case it IS supported by the platform.
WITHOUT_CLASSIFICATION	If the destination is not a NameSpace, then abort:
WITHOUT_CLASSIFICATION	If the destination is a DataType, then abort:
WITHOUT_CLASSIFICATION	We are sure "dest" is a Namespace now.
WITHOUT_CLASSIFICATION	MVW: These are the WFRs for DataType: [1] A DataType can only contain Operations, which all must be queries. self.allFeatures->forAll(f | f.oclIsKindOf(Operation) and f.oclAsType(Operation).isQuery) [2] A DataType cannot contain any other ModelElements. self.allContents->isEmpty IMHO we should enforce these WFRs here. ... so it is still possible to copy or move query operations, hence we should allow this.
WITHOUT_CLASSIFICATION	Let's check all dragged elements - if one of these may be dropped, then the drag is valid. The others will be ignored when dropping.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	empty implementation - not used.
WITHOUT_CLASSIFICATION	Figure out which row we're on.
WITHOUT_CLASSIFICATION	If we are not on a row then ignore this autoscroll request
WITHOUT_CLASSIFICATION	We are sure "dest" is a Namespace now.
WITHOUT_CLASSIFICATION	Autoscroll Interface... The following code was borrowed from the book: Java Swing By Robert Eckstein, Marc Loy & Dave Wood Paperback - 1221 pages 1 Ed edition (September 1998) O'Reilly & Associates; ISBN: 156592455X The relevant chapter of which can be found at: http:www.oreilly.com/catalog/jswing/chapter/dnd.beta.pdf
WITHOUT_CLASSIFICATION	Now decide if the row is at the top of the screen or at the bottom. We do this to make the previous row (or the next row) visible as appropriate. If were at the absolute top or bottom, just return the first or last row respectively.
WITHOUT_CLASSIFICATION	Set up a hover timer, so that a node will be automatically expanded or collapsed if the user lingers on it for more than a short time.
WITHOUT_CLASSIFICATION	isRootPath
WITHOUT_CLASSIFICATION	Set timer to one-shot mode
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "dragOver");
WITHOUT_CLASSIFICATION	The next condition becomes false when dragging in something from another application.
WITHOUT_CLASSIFICATION	If a drag image is not supported by the platform, then draw my own drag image.
WITHOUT_CLASSIFICATION	Rub out the last ghost image and cue line:
WITHOUT_CLASSIFICATION	And remember where we are about to draw the new ghost image:
WITHOUT_CLASSIFICATION	Just rub out the last cue line
WITHOUT_CLASSIFICATION	In any case draw (over the ghost image if necessary) a cue line indicating where a drop will occur.
WITHOUT_CLASSIFICATION	And include the cue line in the area to be rubbed out next time
WITHOUT_CLASSIFICATION	Testcase: drag something from another application into ArgoUML, and the explorer shows the drop icon, instead of the noDrop.
WITHOUT_CLASSIFICATION	to prohibit dropping onto the drag source:
WITHOUT_CLASSIFICATION	If the destination is not a NameSpace, then reject:
WITHOUT_CLASSIFICATION	If the destination is a DataType, then reject:
WITHOUT_CLASSIFICATION	Prevent hover timer from doing an unwanted expandPath or collapsePath:
WITHOUT_CLASSIFICATION	Clear the ghost image:
WITHOUT_CLASSIFICATION	get new parent node
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	The user-DropActions are: Ctrl + Shift -> ACTION_LINK Ctrl -> ACTION_COPY Shift -> ACTION_MOVE (none) -> ACTION_MOVE
WITHOUT_CLASSIFICATION	Only accept COPY or MOVE gestures (ie LINK is not supported)
WITHOUT_CLASSIFICATION	Only accept COPY or MOVE gestures (ie LINK is not supported)
WITHOUT_CLASSIFICATION	Do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	Do this if you want to prohibit dropping onto the drag source...
WITHOUT_CLASSIFICATION	end class
WITHOUT_CLASSIFICATION	remove references for gc
WITHOUT_CLASSIFICATION	This should only be helpful for old garbage collectors.
WITHOUT_CLASSIFICATION	Avoid doing this too early in the initialization process
WITHOUT_CLASSIFICATION	Avoid recursively updating the same child
WITHOUT_CLASSIFICATION	@see javax.swing.tree.DefaultTreeModel#insertNodeInto(javax.swing.tree.MutableTreeNode, javax.swing.tree.MutableTreeNode, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.DefaultTreeModel#removeNodeFromParent(javax.swing.tree.MutableTreeNode)
WITHOUT_CLASSIFICATION	This is somewhat inconsistent with the design of the constructor that receives the root object by argument. If this is okay then there may be no need for a constructor with that argument.
WITHOUT_CLASSIFICATION	Enumerate the current children of node to find out which now sorts in different order, since these must be moved
WITHOUT_CLASSIFICATION	Avoid our deinitialization here The node will be added back to the tree again
WITHOUT_CLASSIFICATION	For each reordered node, find it's new position among the current children and move it there
WITHOUT_CLASSIFICATION	Avoid our initialization here
WITHOUT_CLASSIFICATION	Collect the current set of objects that should be children to this node
WITHOUT_CLASSIFICATION	Handle WeakExplorerNodes
WITHOUT_CLASSIFICATION	Remove the node from removeSet
WITHOUT_CLASSIFICATION	Remove obj3 from weakNodes and newChildren
WITHOUT_CLASSIFICATION	Remember that children are not TreeNodes but UserObjects
WITHOUT_CLASSIFICATION	Add any remaining nodes
WITHOUT_CLASSIFICATION	it is the combo for "order"
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Order the new children, the dependencies cannot and need not be ordered
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Sequence diagrams are not shown as children of the collaboration that they show but as children of the classifier/operation the collaboration represents. Statediagrams and activitydiagrams are shown as children of the statemachine or activitygraph they belong to.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	abstractions are represented in the Inheritance Node.
WITHOUT_CLASSIFICATION	the name of this instance of diagram
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Also show unattached sequence diagrams:
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	in UML2, we don't want to see element imports in profiles
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	Rule for Project->Root (Top level) Elements. TODO: As currently implemented it returns all top level elements in the model repository, not just those in a given project. Since we only support a single project at a time currently, these are equivalent but this will need to be enhanced with additional bookkeeping in Project when we support multiple open projects - tfm. TODO: I changed it to get the roots from the project. It was showing the profiles that were loaded but were not applied to the current project - maurelio1234. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	in UML2, some elements are not to be shown
WITHOUT_CLASSIFICATION	don't show a profile application
WITHOUT_CLASSIFICATION	don't show element imports in profiles
WITHOUT_CLASSIFICATION	don't show extensions in profiles
WITHOUT_CLASSIFICATION	&& Model.getFacade().isAProperty(o)
WITHOUT_CLASSIFICATION	don't show base_... properties in stereotypes
WITHOUT_CLASSIFICATION	"N/A" or "x nodes and x edges"
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	Transition
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: what?
WITHOUT_CLASSIFICATION	Todo: What?
WITHOUT_CLASSIFICATION	First get the collection of ElementResidence
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	TODO: What?
WITHOUT_CLASSIFICATION	TODO: what?
WITHOUT_CLASSIFICATION	only targets we didn't have allready count
WITHOUT_CLASSIFICATION	If nothing selected, go to last selected target
WITHOUT_CLASSIFICATION	Needed for Argo startup :-(
WITHOUT_CLASSIFICATION	Remove duplicates and take care of getOwner() and remove nulls:
WITHOUT_CLASSIFICATION	|| !targets.contains(target)
WITHOUT_CLASSIFICATION	targets.remove(target);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	implement set-like behaviour. The same element may not be added more then once.
WITHOUT_CLASSIFICATION	we put the targets 'backwards' in the history since the first target in the addedTargets array is the first one selected.
WITHOUT_CLASSIFICATION	cannot break here since an object can be multiple times in history
WITHOUT_CLASSIFICATION	CommentEdge - the owner of a FigEdgeNote
WITHOUT_CLASSIFICATION	check if there are new elements in the list if the old and new list are of the same size set the oldTargets to the correct selection
WITHOUT_CLASSIFICATION	If not found, try the parent namespace
WITHOUT_CLASSIFICATION	Listen for the removal of diagrams from project
WITHOUT_CLASSIFICATION	give priority to standard documentation tag
WITHOUT_CLASSIFICATION	Figs on a diagram without an owning model element
WITHOUT_CLASSIFICATION	end class DocumentationManager
WITHOUT_CLASSIFICATION	TODO: Needs localization
WITHOUT_CLASSIFICATION	end class ChildGenRelated
WITHOUT_CLASSIFICATION	Convert the string (e.g. "aaa,bbb,ccc") into separate stereotype-names (e.g. "aaa", "bbb", "ccc").
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the top level namespaces
WITHOUT_CLASSIFICATION	and now remove them
WITHOUT_CLASSIFICATION	collect the to be removed stereotypes
WITHOUT_CLASSIFICATION	the name of this type of diagram
WITHOUT_CLASSIFICATION	add stereotypes
WITHOUT_CLASSIFICATION	Loop through each element in the namespace, recursing.
WITHOUT_CLASSIFICATION	end class UUIDManager
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)
WITHOUT_CLASSIFICATION	Instance
WITHOUT_CLASSIFICATION	comments
WITHOUT_CLASSIFICATION	For all other model elements, return any elements associated in any way
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current namespace
WITHOUT_CLASSIFICATION	adds all stereotypes defined at the profiles applied to the current project
WITHOUT_CLASSIFICATION	TableModel implementation
WITHOUT_CLASSIFICATION	the name of this type of ModelElement
WITHOUT_CLASSIFICATION	the name of this instance of ModelElement
WITHOUT_CLASSIFICATION	the name of the parent diagram instance
WITHOUT_CLASSIFICATION	the name of this type of Object
WITHOUT_CLASSIFICATION	not safe to presume the destination is the comment
WITHOUT_CLASSIFICATION	this also sets the target as a convenient side effect
WITHOUT_CLASSIFICATION	This is the tooltip of a comment link
WITHOUT_CLASSIFICATION	Class
WITHOUT_CLASSIFICATION	end class ProjectMemberModel
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Association
WITHOUT_CLASSIFICATION	Attribute
WITHOUT_CLASSIFICATION	State
WITHOUT_CLASSIFICATION	Operation
WITHOUT_CLASSIFICATION	Interface
WITHOUT_CLASSIFICATION	Link
WITHOUT_CLASSIFICATION	This function will, by design, contain long lists of i18n keys. It might be tempting to shorten these by constructing them from the parts but please then consider that we might loose the possibility to build tools to statically check the property files against this file.
WITHOUT_CLASSIFICATION	umlReserved.add("document");
WITHOUT_CLASSIFICATION	replace all occurances of OFFENDER with the name of the first offender
WITHOUT_CLASSIFICATION	check for all uppercase and/or mixed with underscores
WITHOUT_CLASSIFICATION	umlReserved.add("file");
WITHOUT_CLASSIFICATION	umlReserved.add("node");
WITHOUT_CLASSIFICATION	umlReserved.add("send");
WITHOUT_CLASSIFICATION	The modelelement must have been deleted - ignore this - it will pass.
WITHOUT_CLASSIFICATION	TODO: This could just work off the names in the UML profile TODO: It doesn't look like it matches what's in the UML 1.4 spec
WITHOUT_CLASSIFICATION	umlReserved.add("destroy");
WITHOUT_CLASSIFICATION	self.allConnections->forAll(ar|ar.participant <> self)
WITHOUT_CLASSIFICATION	end class CrCircularAssocClass
WITHOUT_CLASSIFICATION	(MAttribute)
WITHOUT_CLASSIFICATION	If the name is only underscores
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	umlReserved.add("initial"); umlReserved.add("final"); umlReserved.add("fork"); umlReserved.add("join"); umlReserved.add("history");
WITHOUT_CLASSIFICATION	umlReserved.add("copy"); umlReserved.add("create");
WITHOUT_CLASSIFICATION	Types can probably have associations, but we should not nag at them not having any. utility is a namespace collection - also not strictly required to have associations.
WITHOUT_CLASSIFICATION	end class ClAttributeCompartment
WITHOUT_CLASSIFICATION	check whether constant, constants are often weird and thus not a problem
WITHOUT_CLASSIFICATION	why are we here?
WITHOUT_CLASSIFICATION	If the classifier does not have a name, then no problem - the model is not finished anyhow.
WITHOUT_CLASSIFICATION	added by Eric Lefevre 13 Mar 1999: we must check if the FigText for attributes is drawn before drawing things over it
WITHOUT_CLASSIFICATION	Abstract elements do not necessarily require associations
WITHOUT_CLASSIFICATION	TODO: different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	added by Eric Lefevre 13 Mar 1999: we must check if the FigText for operations is drawn before drawing things over it
WITHOUT_CLASSIFICATION	special cases for use cases Extending use cases and use case that are being included are not required to have associations.
WITHOUT_CLASSIFICATION	for use cases we need to check for extend/includes actors cannot have them, so no need to check
WITHOUT_CLASSIFICATION	Get the ends from the association (we know there are two), and the types associated with them.
WITHOUT_CLASSIFICATION	The association that triggered the critic. Its just possible the association is no longer there, in which case we return null
WITHOUT_CLASSIFICATION	end class ClOperationCompartment
WITHOUT_CLASSIFICATION	First step. Create the panel if not already done and options are available. Otherwise it retains its default value of null.
WITHOUT_CLASSIFICATION	Now create the five options
WITHOUT_CLASSIFICATION	Get the names of the two ends. If there are none (i.e they are currently anonymous), use the ArgoUML convention of "(anon)" for the names
WITHOUT_CLASSIFICATION	Default (any other step) is to return nothing
WITHOUT_CLASSIFICATION	Just completed the first step where we make our choices. First see if we have a choice. We always should, so print a rude message if we don't
WITHOUT_CLASSIFICATION	Set the appropriate aggregation on each end
WITHOUT_CLASSIFICATION	It is quite possible that the cause of the problem has by now been deleted, in which case we will throw an exception if we try to change things. Catch this tidily.
WITHOUT_CLASSIFICATION	Start is a composite aggregation of end
WITHOUT_CLASSIFICATION	Start is a shared aggregation of end
WITHOUT_CLASSIFICATION	End is a composite aggregation of start
WITHOUT_CLASSIFICATION	End is a shared aggregation of start
WITHOUT_CLASSIFICATION	No aggregation
WITHOUT_CLASSIFICATION	Someone took our association away.
WITHOUT_CLASSIFICATION	Can't finish if our parent can't
WITHOUT_CLASSIFICATION	Can finish if it's step 0
WITHOUT_CLASSIFICATION	Can finish if we're on step1 and have actually made a choice
WITHOUT_CLASSIFICATION	Otherwise we can't finish
WITHOUT_CLASSIFICATION	TODO: The WFR doesn't restrict this to Classifiers - tfm
WITHOUT_CLASSIFICATION	TODO: The WFR doesn't restrict this to Classifiers - tfm
WITHOUT_CLASSIFICATION	Model.getFacade().getModelElement(
WITHOUT_CLASSIFICATION	)
WITHOUT_CLASSIFICATION	replace all occurances of OFFENDER with the name of the first offender
WITHOUT_CLASSIFICATION	check if there is no OCL_END; if so, the critic expression is not correct and can not be expanded
WITHOUT_CLASSIFICATION	Get the Association and its connections. Iterate over all the AssociationEnds and check that each connected classifier is in the same sub-system or model
WITHOUT_CLASSIFICATION	display related methods
WITHOUT_CLASSIFICATION	end class CrInterfaceAllPublic
WITHOUT_CLASSIFICATION	return original string if no replacements made
WITHOUT_CLASSIFICATION	If we drop out there is no problem
WITHOUT_CLASSIFICATION	Only look at associations
WITHOUT_CLASSIFICATION	end class CrCrossNamespaceAssoc
WITHOUT_CLASSIFICATION	TODO: different critic for packages consisting only of references to elements of other packages?
WITHOUT_CLASSIFICATION	The next AssociationEnd, and its classifier. Check the classifier is in the namespace of the association. If not we have a problem.
WITHOUT_CLASSIFICATION	original class was not abstract
WITHOUT_CLASSIFICATION	theStereotype.setStereotype(???);
WITHOUT_CLASSIFICATION	found a concrete subclass
WITHOUT_CLASSIFICATION	Nothing to do.
WITHOUT_CLASSIFICATION	no concrete subclasses defined, this class is "useless"
WITHOUT_CLASSIFICATION	see if there is already an element with the same name
WITHOUT_CLASSIFICATION	end class CrClassMustBeAbstract
WITHOUT_CLASSIFICATION	end class CrUselessAbstract
WITHOUT_CLASSIFICATION	(MClassifier)
WITHOUT_CLASSIFICATION	Only look at classes
WITHOUT_CLASSIFICATION	TODO: different critic or special message for classes that inherit all ops but define none of their own.
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have operations.
WITHOUT_CLASSIFICATION	end class CrTooManyAssoc
WITHOUT_CLASSIFICATION	end class CrUselessInterface
WITHOUT_CLASSIFICATION	end class CrComponentInstanceWithoutClassifier
WITHOUT_CLASSIFICATION	end class CrTooManyClasses
WITHOUT_CLASSIFICATION	We don't consider secondary stuff.
WITHOUT_CLASSIFICATION	if the object does not have a name, than no problem
WITHOUT_CLASSIFICATION	types can probably contain operations, but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	Types don't need a constructor.
WITHOUT_CLASSIFICATION	Utilities usually do not require a constructor either
WITHOUT_CLASSIFICATION	Check for uninitialised instance variables and constructor.
WITHOUT_CLASSIFICATION	Get all the features (giving up if there are none). Then loop through finding all operations. Each time we find one, we compare its signature with all previous (held in collection operSeen), and then if it doesn't match add it to the collection.
WITHOUT_CLASSIFICATION	There is a constructor.
WITHOUT_CLASSIFICATION	end class CrTooManyStates
WITHOUT_CLASSIFICATION	We have found a non-static one that is not initialized.
WITHOUT_CLASSIFICATION	Compare against all earlier operations. If there's a match we've found the problem
WITHOUT_CLASSIFICATION	Check that the parameter lists match.
WITHOUT_CLASSIFICATION	Add to the collection and round to look at the next one
WITHOUT_CLASSIFICATION	yeah right...we don't have an operation (and thus no
WITHOUT_CLASSIFICATION	This pair of params where the same. Lets check the next pair.
WITHOUT_CLASSIFICATION	Only do this for classifiers
WITHOUT_CLASSIFICATION	Get the next non-return parameter. Null if non left.
WITHOUT_CLASSIFICATION	If we drop out here, there was no match and we have no problem
WITHOUT_CLASSIFICATION	Check that the names match.
WITHOUT_CLASSIFICATION	Both lists have the same length
WITHOUT_CLASSIFICATION	Both lists have the same length.
WITHOUT_CLASSIFICATION	Different lengths:
WITHOUT_CLASSIFICATION	end class CrMultiComposite
WITHOUT_CLASSIFICATION	Compare the type of the parameters. If any of the types is null, then we have a match.
WITHOUT_CLASSIFICATION	normal model elements are not allowed to have spaces, but for States we make an exception
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	end class CrIllegalName
WITHOUT_CLASSIFICATION	dm is a transition
WITHOUT_CLASSIFICATION	initialize new ToDoItem
WITHOUT_CLASSIFICATION	the source of the transition is a pseudostate
WITHOUT_CLASSIFICATION	the source of the transition is a choice
WITHOUT_CLASSIFICATION	end class CrTooManyAttr
WITHOUT_CLASSIFICATION	critiquing API
WITHOUT_CLASSIFICATION	end class CrZeroLengthEdge
WITHOUT_CLASSIFICATION	(MStateVertex)
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	only classes with name need a constructor
WITHOUT_CLASSIFICATION	Forks have their own outgoing transitions critic
WITHOUT_CLASSIFICATION	types can probably have variables, but we should not nag at them not having any.
WITHOUT_CLASSIFICATION	code generation
WITHOUT_CLASSIFICATION	utility is a namespace collection - also not strictly required to have variables.
WITHOUT_CLASSIFICATION	If we find an instance variable that is not a constant we have succeeded
WITHOUT_CLASSIFICATION	I am only prepared to go this far.
WITHOUT_CLASSIFICATION	(Classifier)
WITHOUT_CLASSIFICATION	first element is e.g. the class, but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	Compound critics
WITHOUT_CLASSIFICATION	warn about inherited name conflicts, different critic?
WITHOUT_CLASSIFICATION	warn about inherited name conflicts, different critic?
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	Only look at Associations
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	Iterate over all the AssociationEnds. We only have a problem if 1) there is an end connected to an Interface and 2) an end other than that end is navigable.
WITHOUT_CLASSIFICATION	both ends must be classes, otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	We can give up looking if we've hit both criteria
WITHOUT_CLASSIFICATION	both ends must be navigable, otherwise there is nothing to merge
WITHOUT_CLASSIFICATION	End at an Interface? Navigable other end?
WITHOUT_CLASSIFICATION	end class CrMergeClasses
WITHOUT_CLASSIFICATION	Specify design issue category and knowledge type
WITHOUT_CLASSIFICATION	If we drop out we didn't meet both criteria, and all is well.
WITHOUT_CLASSIFICATION	The next AssociationEnd
WITHOUT_CLASSIFICATION	If its an interface we have an interface end, otherwise its something else and we should see if it is navigable. We don't check that the end is a Classifier, rather than its child ClassifierRole, since we have effectively eliminated that possiblity in rejecting AssociationRoles above.
WITHOUT_CLASSIFICATION	end class CrNavFromInterface
WITHOUT_CLASSIFICATION	(MCompositeState)
WITHOUT_CLASSIFICATION	end class CrNoInitialState
WITHOUT_CLASSIFICATION	critiquing API
WITHOUT_CLASSIFICATION	end class CrInstanceWithoutClassifier
WITHOUT_CLASSIFICATION	Now we are sure dm is a Composite State.
WITHOUT_CLASSIFICATION	In DeploymentDiagrams the situation is not the same as in other diagrams only classes, interfaces and objects can intersect each other while they are not the EnclosingFig, so you have to prouve only these elements.
WITHOUT_CLASSIFICATION	Now we are sure dm is a StateVertex.
WITHOUT_CLASSIFICATION	Now we are sure dm is a State.
WITHOUT_CLASSIFICATION	If dm is the top state of the statemachine, then it is not supposed to have incoming transitions.
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	end class CrInvalidSynch
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	end class CrConflictingComposites
WITHOUT_CLASSIFICATION	end class CrAlreadyRealizes
WITHOUT_CLASSIFICATION	end class CrUnnavigableAssoc
WITHOUT_CLASSIFICATION	TODO: GenNavigableClasses?
WITHOUT_CLASSIFICATION	end class CrDisambigStateName
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	end class WizMEName
WITHOUT_CLASSIFICATION	Only for associations
WITHOUT_CLASSIFICATION	Get the assocations and connections. No problem (there is a separate critic) if this is not a binary association or is an association role.
WITHOUT_CLASSIFICATION	Loop through the associations, counting the ends with aggregations
WITHOUT_CLASSIFICATION	A problem if we found more than 1 aggregation
WITHOUT_CLASSIFICATION	end class CrMultipleAgg
WITHOUT_CLASSIFICATION	end class CrNameConflictAC
WITHOUT_CLASSIFICATION	end class WizNavigable
WITHOUT_CLASSIFICATION	end class CrFinalSubclassed
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	TODO: AssociationRole
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Finding children for " + o.getClass());
WITHOUT_CLASSIFICATION	argument can be an instanceof a Fig which we ignore
WITHOUT_CLASSIFICATION	no need for trigger on "specialization"
WITHOUT_CLASSIFICATION	end class CrCircularInheritance
WITHOUT_CLASSIFICATION	end class CrNonAggDataType
WITHOUT_CLASSIFICATION	test an unknown file
WITHOUT_CLASSIFICATION	container state / composite state
WITHOUT_CLASSIFICATION	no good trigger
WITHOUT_CLASSIFICATION	(MTransition)
WITHOUT_CLASSIFICATION	WFR Transitions, OMG UML 1.3
WITHOUT_CLASSIFICATION	Only work for associations
WITHOUT_CLASSIFICATION	WFR Transitions, OMG UML 1.3
WITHOUT_CLASSIFICATION	No problem if this is an association role.
WITHOUT_CLASSIFICATION	Loop through all the ends, comparing the name against those already seen (ignoring any with no name). No problem if there are no connections defined, we will fall through immediately.
WITHOUT_CLASSIFICATION	end class CrInterfaceOperOnly
WITHOUT_CLASSIFICATION	Ignore non-existent and empty names
WITHOUT_CLASSIFICATION	Is the name already in the list of those seen, if not add it and go on round.
WITHOUT_CLASSIFICATION	Only work for associatins
WITHOUT_CLASSIFICATION	If we drop out there were no clashes
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#paintIcon(java.awt.Component, java.awt.Graphics, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconWidth()
WITHOUT_CLASSIFICATION	@see javax.swing.Icon#getIconHeight()
WITHOUT_CLASSIFICATION	(MAssociationEnd)
WITHOUT_CLASSIFICATION	(MAssociation)
WITHOUT_CLASSIFICATION	Now we are sure dm is a StateVertex.
WITHOUT_CLASSIFICATION	Now we are sure dm is a State.
WITHOUT_CLASSIFICATION	Now we are sure dm is a Composite State.
WITHOUT_CLASSIFICATION	end class ClClassName
WITHOUT_CLASSIFICATION	If dm is the top state of the statemachine, then it is not supposed to have outgoing transitions.
WITHOUT_CLASSIFICATION	end class CrTooManyOper
WITHOUT_CLASSIFICATION	end class CrTooManyTransitions
WITHOUT_CLASSIFICATION	general
WITHOUT_CLASSIFICATION	Loop through the associations, looking for one with aggregation
WITHOUT_CLASSIFICATION	If drop out, we're OK
WITHOUT_CLASSIFICATION	end class CrNWayAgg.java
WITHOUT_CLASSIFICATION	end class CrOppEndConflict
WITHOUT_CLASSIFICATION	we could check for base class of the stereotype but the condition normally covers it all.
WITHOUT_CLASSIFICATION	intentional: if there is nonsense in the field, we return false
WITHOUT_CLASSIFICATION	intentional: if there is nonsense in the field, we do not set the value
WITHOUT_CLASSIFICATION	fireNodeRemoved(node);
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#setName(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#containsNode(java.lang.Object)
WITHOUT_CLASSIFICATION	newEdge.setDiElement( GraphChangeAdapter.getInstance().createElement(gm, edge));
WITHOUT_CLASSIFICATION	/ End GEF methods
WITHOUT_CLASSIFICATION	not allowed
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	TODO: Comments are on Element in UML 2.x
WITHOUT_CLASSIFICATION	Create a diagram. This 4-arg version is only for internal use. The 'namespace' argument is deprecated and not used in the new APIs.
WITHOUT_CLASSIFICATION	This shouldn't be possible, but just in case
WITHOUT_CLASSIFICATION	fail silently as we expect users to accidentally drop on to wrong component
WITHOUT_CLASSIFICATION	Create the UML connection of the given type between the given model elements. default aggregation (none)
WITHOUT_CLASSIFICATION	Commentlinks for comments. Iterate over all the comment links to find the comment and annotated elements.
WITHOUT_CLASSIFICATION	The connection is not valid unless both nodes are in this graph model.
WITHOUT_CLASSIFICATION	The diagram are always owned by the model in this first implementation.
WITHOUT_CLASSIFICATION	IMPORTANT - These MUST remain in order!
WITHOUT_CLASSIFICATION	singleton, no instantiation
WITHOUT_CLASSIFICATION	The special value <code>null</code> is used internally to indicate that the default value should be inherited from the next level of settings.
WITHOUT_CLASSIFICATION	Repeat until no faults are fixed
WITHOUT_CLASSIFICATION	Diagram appearance settings with project scope:
WITHOUT_CLASSIFICATION	We can not remove this and have the application manage things directly based on the font, since only the names should be bold.
WITHOUT_CLASSIFICATION	Some cached fonts based on the above settings
WITHOUT_CLASSIFICATION	Since body ever looks at the type of the diagram appearance event, we can simplify from sending every existing event to one event only. But since there is no catch-all event defined, we just use one. Rationale: reduce the number of total refreshes of the drawing.
WITHOUT_CLASSIFICATION	If we've got a local (uninherited) font name or size or if we've got no parent to inherit from recompute our cached fonts
WITHOUT_CLASSIFICATION	This class is a temporary wrapper around the GEF UndoManager. This will be changed when GEF is modified to create commands and provide an observer interface for ArgoUML to receive them. <p> TODO: How does this relate to {@link org.argouml.kernel.DefaultUndoManager}? @author Bob Tarling
WITHOUT_CLASSIFICATION	Listen for name changes so we can veto them if we don't like them
WITHOUT_CLASSIFICATION	get all the classes from the diagram
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The report
WITHOUT_CLASSIFICATION	The report
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	2. Make sure that all Figs are visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	TODO: These should get replaced immediately by the creating initialization code, but make sure we've got a default just in case.
WITHOUT_CLASSIFICATION	1. Make sure all Figs in the Diagrams layer refer back to that layer.
WITHOUT_CLASSIFICATION	maybe we have a modelelement that is part of some other fig
WITHOUT_CLASSIFICATION	Register for notification of any global changes that would affect our rendering
WITHOUT_CLASSIFICATION	Add the diagram as a listener to the namespace so that when the namespace is removed the diagram is deleted also.
WITHOUT_CLASSIFICATION	4. Make sure all FigNodes and FigEdges have an owner The report
WITHOUT_CLASSIFICATION	3. Make sure all FigEdges are attached to a valid FigNode The report
WITHOUT_CLASSIFICATION	5. Make sure all FigNodes and FigEdges have a valid owner The report
WITHOUT_CLASSIFICATION	4. Make sure the only FigGroups on a diagram are also FigNodes The report
WITHOUT_CLASSIFICATION	Do nothing, override in subclass.
WITHOUT_CLASSIFICATION	If we haven't succeeded in getting a namespace then abort
WITHOUT_CLASSIFICATION	This should always be true, but just in case...
WITHOUT_CLASSIFICATION	The diagram to be laid out.
WITHOUT_CLASSIFICATION	List of objects. NOTE: This methods which read/write this don't appear to be used.
WITHOUT_CLASSIFICATION	Point at which to start layout (initial state goes here). The X coordinate must be greater than half the width of the widest figure to be placed (because figures are centered on this location).
WITHOUT_CLASSIFICATION	Amount to increment Y position by for each node placed. We pack them densely on the assumption that the user is going to split them into at least two swimlanes.
WITHOUT_CLASSIFICATION	FinalState element for ActivityDiagram
WITHOUT_CLASSIFICATION	Find our Initial State
WITHOUT_CLASSIFICATION	Place all the nodes
WITHOUT_CLASSIFICATION	Place the final state last with a little separation
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	If we're trying to set the namespace to the existing value then don't do any more work.
WITHOUT_CLASSIFICATION	Recursively place all nodes pointed to by outgoing transitions. Because of the recursive algorithm multiple outgoing transitions will end up very lopsided because one entire subgraph will be done before dealing with the other transition(s). @param seen set of nodes seen so far @param node the node to collect neighbors for
WITHOUT_CLASSIFICATION	figClone.seperator = (FigLine) it.next();
WITHOUT_CLASSIFICATION	Needed for project deletion
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	TODO: midpoints for side handles
WITHOUT_CLASSIFICATION	We removed the last partition, so now remove the pool, too:
WITHOUT_CLASSIFICATION	no action required in case of veto on setName
WITHOUT_CLASSIFICATION	This test needed for project deletion
WITHOUT_CLASSIFICATION	TODO: side handles
WITHOUT_CLASSIFICATION	Listen to activitygraph deletion, delete this diagram.
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	no action required
WITHOUT_CLASSIFICATION	The namespace of the activitygraph is changed!
WITHOUT_CLASSIFICATION	getActionSubactivityState()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	The space between the 2 text figs is: PADDING. @see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	we want to maintain a minimum size for the partition
WITHOUT_CLASSIFICATION	Class to display graphics for a UML ObjectFlowState in a diagram.<p> The Fig of this modelElement may either represent the following UMLelements: <p> (1) an ObjectFlowState with a Classifier as type, or <p> (2) an ObjectFlowState with a ClassifierInState as type. <p> In both cases (1) and (2), the Fig shows the underlined name of the Classifier, and in the latter case (2), it shows also the names of the states of the ClassifierInState. <p> In the examples in the UML standard, this is written like<pre> PurchaseOrder [approved] </pre> i.e. in 2 lines. The first line is underlined, to indicate that it is an instance (object).<p> The fact that the first line is underlined, and the 2nd not, is the reason to implement them in 2 separate Figs.<p> TODO: Allow stereotypes to be shown. @author mvw
WITHOUT_CLASSIFICATION	Model.getActivityGraphsHelper() .isAddingActivityGraphAllowed(base);
WITHOUT_CLASSIFICATION	TODO: We may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	TODO: We may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	register for events from the type
WITHOUT_CLASSIFICATION	Create a map of partitions keyed by x coordinate
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Sort the x coordinates into order
WITHOUT_CLASSIFICATION	the state name
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	If the layer is null, then most likely we are being deleted.
WITHOUT_CLASSIFICATION	Don't listen to all property names We only need to listen to its "type", and "remove".
WITHOUT_CLASSIFICATION	the height of the blank space above and below the text figs:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	and listen to name changes of the submachine
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	add them back to front
WITHOUT_CLASSIFICATION	Let our superclass sort itself out first
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#getNewNode(int)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	Set up the property panels for activity diagrams:
WITHOUT_CLASSIFICATION	overrule the single-line name-fig created by the parent
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	setBlinkPorts(false); make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	TODO: Do we need to clone the stereotype(s)?
WITHOUT_CLASSIFICATION	(MGeneralization)
WITHOUT_CLASSIFICATION	The stereoDim has height=2, even if it is empty, hence the -2 below:
WITHOUT_CLASSIFICATION	the width needs to be > the height
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	TODO:?
WITHOUT_CLASSIFICATION	((MClassifier)node).setNamespace(_collab.getNamespace());
WITHOUT_CLASSIFICATION	TODO: assumes public, user pref for default visibility?
WITHOUT_CLASSIFICATION	Add the given edge to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	TODO: We may return the following when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The NotationProvider for the ClassifierRole. <p> The syntax is for UML is: <pre> baselist := [base] [, base] classifierRole := [name] [/ role] [: baselist] </pre></p> The <code>name</code> is the Instance name, not used currently. See ClassifierRoleNotationUml for details.<p> This syntax is compatible with the UML 1.4 specification.
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	The stereotype. Width is the same as the cover, height is its default (since the font is not yet set). The text should be centered.
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	getStereotypeFig().setFilled(false);
WITHOUT_CLASSIFICATION	end class CollabDiagramGraphModel
WITHOUT_CLASSIFICATION	In the rather unlikely case that we have no name, we give up.
WITHOUT_CLASSIFICATION	The big port. Color of the big port is irrelevant
WITHOUT_CLASSIFICATION	The name. Width is the same as the cover, height is the default. The text of the name will be centered by default. In the same place as the stereotype, since at this stage the stereotype is not displayed. Being a classifier role it is underlined
WITHOUT_CLASSIFICATION	The cover.
WITHOUT_CLASSIFICATION	At least one stereotype is visible
WITHOUT_CLASSIFICATION	Remember where we are at present, so we can tell GEF later. Then check we are as big as the minimum size
WITHOUT_CLASSIFICATION	Set the bounds of the bigPort and cover
WITHOUT_CLASSIFICATION	Work out the padding each side, depending on whether the stereotype is displayed and set bounds accordingly
WITHOUT_CLASSIFICATION	Record the changes in the instance variables of our parent, tell GEF and trigger the edges to reconsider themselves.
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	this one behaves differently, hence seperated:
WITHOUT_CLASSIFICATION	this one behaves differently, hence seperated:
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	TODO: We may return something useful when the relocate() has been implemented.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	TODO:?
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	end class FigAssociationRole
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	TODO -> settings
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	the figs that make up this group
WITHOUT_CLASSIFICATION	_x = first.getX(); _y = first.getY();
WITHOUT_CLASSIFICATION	_x = first.getX(); _y = first.getY();
WITHOUT_CLASSIFICATION	Set up the property panels for collaboration diagrams:
WITHOUT_CLASSIFICATION	this is neat...
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	TODO: assumes public, user pref for default visibility? do I have to check the namespace here? (Toby)
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	Set up the property panels for deployment diagrams:
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	Getters for plugin modules:
WITHOUT_CLASSIFICATION	so it still looks like a cube
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	elementOrdering(figures);
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	_bigPort.setBounds(x+1, y+1, w-2, h-2);
WITHOUT_CLASSIFICATION	nothing extra to do currently
WITHOUT_CLASSIFICATION	North, South, West, East, South-West
WITHOUT_CLASSIFICATION	end class PredIsStartpackage
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	If the layer is null, then most likely we are being deleted.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	end class StateDiagramGraphModel
WITHOUT_CLASSIFICATION	Don't do it for comment.
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	(MTransition)
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	If a UML object is found, you can not remove selected elms.
WITHOUT_CLASSIFICATION	check parameter types:
WITHOUT_CLASSIFICATION	If nothing is selected, then not allowed to remove it.
WITHOUT_CLASSIFICATION	If only Figs without owner are selected, then you can remove them!
WITHOUT_CLASSIFICATION	end class PredIsFinalState
WITHOUT_CLASSIFICATION	This presumes that the layer is set after the owner:
WITHOUT_CLASSIFICATION	If it is concurrent and contains concurrent regions, the bottom region has a minimum height
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	We only handle the case where a region has been removed:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	If it is concurrent and contains concurrent regions, the regions are resized
WITHOUT_CLASSIFICATION	None of the menu-items below apply when multiple modelelements are selected:
WITHOUT_CLASSIFICATION	do we need to
WITHOUT_CLASSIFICATION	The returned list of Figs is sorted according layout: from top to bottom.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	This makes dragging connected edges very smooth. @see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	The event source is the owner stub state
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	end class FigCompositeState
WITHOUT_CLASSIFICATION	The event source is the submachine state
WITHOUT_CLASSIFICATION	TargetManager.getInstance().addTargetListener(this);
WITHOUT_CLASSIFICATION	ignored - fixed rendering
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Event handlers
WITHOUT_CLASSIFICATION	Cmd API
WITHOUT_CLASSIFICATION	end class ActionCreatePseudostate
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	The submachine has got a new name
WITHOUT_CLASSIFICATION	The event source is the stub state's referenced state or one of the referenced state's path.
WITHOUT_CLASSIFICATION	This indicates a change in association, not name - tfm
WITHOUT_CLASSIFICATION	All states in the new reference state's path are added as listeners
WITHOUT_CLASSIFICATION	The source was the referenced state that has got a new name.
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	The source was one of the referenced state's path which has got a new name.
WITHOUT_CLASSIFICATION	The old submachine container is deleted as listener
WITHOUT_CLASSIFICATION	The Referenced State or one of his path's states has got a new name
WITHOUT_CLASSIFICATION	The new submachine container is added as listener
WITHOUT_CLASSIFICATION	All states in the old reference state's path are deleted as listeners
WITHOUT_CLASSIFICATION	Translate any old style sequence diagrams
WITHOUT_CLASSIFICATION	Just swap order of arguments to get to new form
WITHOUT_CLASSIFICATION	Translate any sequence diagrams create with any previous svn work in progress
WITHOUT_CLASSIFICATION	Get the first existing FigNode and if it exists set the y position and height of _pers to be the same as it.
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored - rendering is fixed
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	ignore mouse clicks
WITHOUT_CLASSIFICATION	The Machine State has got a new name
WITHOUT_CLASSIFICATION	This assert fails for the TestPropertyPanels, file GUITestPropertyPanels.zargo:
WITHOUT_CLASSIFICATION	assert w == h;
WITHOUT_CLASSIFICATION	The Machine State has been deleted from model
WITHOUT_CLASSIFICATION	Ignore w and h from here on.
WITHOUT_CLASSIFICATION	keep d even or odd, just like the line width:
WITHOUT_CLASSIFICATION	leave some space below the "include"
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	both have the same settings
WITHOUT_CLASSIFICATION	both have the same owner
WITHOUT_CLASSIFICATION	TODO -> settings
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	There are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	noop - fixed rendering
WITHOUT_CLASSIFICATION	There are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	Temporary start private static final Color[] COLOR_ARRAY = { Color.RED, Color.BLUE, Color.CYAN, Color.YELLOW, Color.GREEN}; private int nextColor = 0; Temporary end
WITHOUT_CLASSIFICATION	setBlinkPorts(false); make port invisble unless mouse enters
WITHOUT_CLASSIFICATION	there can only be one
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	We aren't able to resize neither the top bound from the first region nor the bottom bound from the last region.
WITHOUT_CLASSIFICATION	The group must be resized if a text field exceed the bounds
WITHOUT_CLASSIFICATION	if curHandle.index is 0 or 2, the adjacent region is the previous region but if it is 5 or 7, the adjacent region is the next region. curHandle.index show which corner of the bound we are dragging.
WITHOUT_CLASSIFICATION	A Concurrent region cannot have incoming or outgoing transitions so incoming or outgoing transitions are redirected to its concurrent composite state container.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	singleton
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	/ event handlers - MouseListener and MouseMotionListener implementation
WITHOUT_CLASSIFICATION	or just the owner?
WITHOUT_CLASSIFICATION	Listen to machine deletion, to delete the diagram.
WITHOUT_CLASSIFICATION	this in case we are being deleted
WITHOUT_CLASSIFICATION	The namespace of the statemachine is changed!
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	return;
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	throws PropertyVetoException
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	prevent no changes...
WITHOUT_CLASSIFICATION	check parameter types:
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Model.getStateMachinesHelper() .isAddingStatemachineAllowed(base);
WITHOUT_CLASSIFICATION	Set up the property panels for statechart diagrams:
WITHOUT_CLASSIFICATION	if location is null here the position of the new figNode is set after in org.tigris.gef.base.ModePlace.mousePressed(MouseEvent e)
WITHOUT_CLASSIFICATION	MModelElement modelElement = elementImport.getModelElement();
WITHOUT_CLASSIFICATION	top of the hierarchy is ME:
WITHOUT_CLASSIFICATION	top of the hierarchy is ME:
WITHOUT_CLASSIFICATION	then Generalizable Element
WITHOUT_CLASSIFICATION	then Generalizable Element
WITHOUT_CLASSIFICATION	then Classifier & Package
WITHOUT_CLASSIFICATION	navigable.... only want incoming
WITHOUT_CLASSIFICATION	then Classifier
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	cast the params
WITHOUT_CLASSIFICATION	N.B. A node which is an Association is either a n-ary association or the Class part of an AssociationClass
WITHOUT_CLASSIFICATION	check param types: only some connections are legal uml connections:
WITHOUT_CLASSIFICATION	set the new end type!
WITHOUT_CLASSIFICATION	rerouting the destination:
WITHOUT_CLASSIFICATION	rerouting the source:
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move down
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	empty at the moment
WITHOUT_CLASSIFICATION	move more right
WITHOUT_CLASSIFICATION	move left
WITHOUT_CLASSIFICATION	use left and right, up and down
WITHOUT_CLASSIFICATION	calculate the higher and lower Figs
WITHOUT_CLASSIFICATION	the amount of the "sidestep"
WITHOUT_CLASSIFICATION	If center points are "close enough" we just adjust the endpoints of the line a little bit. Otherwise we add a jog in the middle to deal with the offset. TODO: Epsilon is currently fixed, but could probably be computed dynamically as 10% of the width of the narrowest figure or some other value which is visually not noticeable.
WITHOUT_CLASSIFICATION	currentEdge.setBetweenNearestPoints(false);
WITHOUT_CLASSIFICATION	LOG.debug(result + " node1: " + this + ", node2 " + node);
WITHOUT_CLASSIFICATION	split = (split == null || split.isStandalone()) ? node : split;
WITHOUT_CLASSIFICATION	(xOffset - curW) / 2;
WITHOUT_CLASSIFICATION	Element is allowed, but only NamedElement can return nonempty list
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	self associations are special cases. No need to let the maze runner find the way.
WITHOUT_CLASSIFICATION	Link does not exist in UML2
WITHOUT_CLASSIFICATION	now we construct the zig zag inheritance line getUnderlyingFig()
WITHOUT_CLASSIFICATION	Class to display graphics for a UML Link in a diagram. <p> The underlined association name is shown next to the middle of the path. TODO: Show more notation as described in the standard: "A rolename may be shown at each end of the link. An association name may be shown near the path. If present, it is underlined to indicate an instance. Links do not have instance names, they take their identity from the instances that they relate. Multiplicity is not shown for links because they are instances. Other association adornments (aggregation, composition, navigation) may be shown on the link ends."
WITHOUT_CLASSIFICATION	Text group to contain name & stereotype
WITHOUT_CLASSIFICATION	end class FigLink
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	Stereotype covers NameFig:
WITHOUT_CLASSIFICATION	Compartments from top to bottom:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	by default, do not show operations nor attributes:
WITHOUT_CLASSIFICATION	We're going to change the name immediately, so just use ""
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	TODO: place comments near connected classes TODO: place from middle towards outer edges? (or place largest groups first)
WITHOUT_CLASSIFICATION	boolean hasPackages = false; TODO: move "package in row" to NodeRow
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	This calls the getters to fetch actions even though the action variables are defined is instances of this class. This is because any number of action getters could have been overridden in a descendant and it is the action from that overridden method that should be returned in the array.
WITHOUT_CLASSIFICATION	since UML2, this must appear before the isAClass clause
WITHOUT_CLASSIFICATION	this rectangle marks the operation section; all operations are inside it
WITHOUT_CLASSIFICATION	2nd compartment, so adjust Y appropriately
WITHOUT_CLASSIFICATION	TODO: We should be able to just call renderingChanged on the child figs here instead of doing an updateOperations...
WITHOUT_CLASSIFICATION	TODO: We just need to get someone to re-render a single line of text which represents the element here, but I'm not sure how to do that. - tfm TODO: Bob replies - we shouldn't be interested in this event here. The FigFeature (or its notation) should be listen for change and the FigFeature should be update from that.
WITHOUT_CLASSIFICATION	Collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#translate(int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	check if any stereotype is defined
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	Update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	Modifier ...
WITHOUT_CLASSIFICATION	Create a Body that reacts to double-clicks and jumps to a diagram.
WITHOUT_CLASSIFICATION	Add ...
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	Set properties of the stereotype box. Initially not set to be displayed, but this will be changed when we try to render it, if we find we have a stereotype.
WITHOUT_CLASSIFICATION	There are 2 boxes showing lines: the tab and the body.
WITHOUT_CLASSIFICATION	This populates the stereotypes area:
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	else nothing changed
WITHOUT_CLASSIFICATION	we got at least one stereotype
WITHOUT_CLASSIFICATION	the user wants to hide them
WITHOUT_CLASSIFICATION	Modifier ...
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	The figPoly is located at the right of the name text. The nameFig size is increased, so that it fits its text, and the figPoly next to the text, all within the boundaries of the nameFig.
WITHOUT_CLASSIFICATION	If we have any number of stereotypes displayed, then allow some space for that (only width, height is included in nameFig):
WITHOUT_CLASSIFICATION	take into account the tab is not as wide as the body:
WITHOUT_CLASSIFICATION	we want at least some of the package body to be displayed
WITHOUT_CLASSIFICATION	And now aSize has the answer
WITHOUT_CLASSIFICATION	Save our old boundaries (needed later), and get minimum size info. "aSize" will be used to maintain a running calculation of our size at various points.
WITHOUT_CLASSIFICATION	The new size can not be smaller than the minimum.
WITHOUT_CLASSIFICATION	Now resize all sub-figs, including not displayed figs. Start by the name. We override the getMinimumSize if it is less than our view (21 pixels hardcoded!). Add in the shared extra, plus in this case the correction.
WITHOUT_CLASSIFICATION	Now sort out the stereotype display. If the stereotype is displayed, move the upper boundary of the name compartment up and set new bounds for the name and the stereotype compartments and the stereoLineBlinder that blanks out the line between the two
WITHOUT_CLASSIFICATION	Advance currentY to where the start of the body box is, remembering that it overlaps the next box by 1 pixel. Calculate the size of the body box, and update the Y pointer past it if it is displayed.
WITHOUT_CLASSIFICATION	-1 for 1 pixel overlap
WITHOUT_CLASSIFICATION	set bounds of big box
WITHOUT_CLASSIFICATION	The figPoly is located at the right edge of the nameFig. The nameFig size is such that it at least fits its text, and the figPoly next to the text. Making the package bigger, causes the figPoly to stick to the right edge.
WITHOUT_CLASSIFICATION	Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	Only show the menuitems if they make sense:
WITHOUT_CLASSIFICATION	save first
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	If we get here then we didn't get the default diagram.
WITHOUT_CLASSIFICATION	Try to create a new class diagram.
WITHOUT_CLASSIFICATION	if package
WITHOUT_CLASSIFICATION	if doubleclicks
WITHOUT_CLASSIFICATION	change prefix
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	end class FigPackage
WITHOUT_CLASSIFICATION	Readonly class: no generalization, no association to self
WITHOUT_CLASSIFICATION	end class StylePanelFigPackage
WITHOUT_CLASSIFICATION	In the DeploymentDiagram there are no Generalizations
WITHOUT_CLASSIFICATION	Self-association isn't draggable
WITHOUT_CLASSIFICATION	end class StylePanelFigInterface
WITHOUT_CLASSIFICATION	No Generalizations on Deployment Diagram
WITHOUT_CLASSIFICATION	and its stereotypes
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	add the listeners to the newOwner
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	Stereotype covers NameFig:
WITHOUT_CLASSIFICATION	Compartments from top to bottom:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Collect the set of model elements that we want to listen to
WITHOUT_CLASSIFICATION	and its features
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	and the parameter of its operations
WITHOUT_CLASSIFICATION	Use super because not fully init'd
WITHOUT_CLASSIFICATION	and its enumerationLiterals
WITHOUT_CLASSIFICATION	And now add listeners to them all:
WITHOUT_CLASSIFICATION	Put all the bits together, suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	Set the bounds of the figure to the total of the above
WITHOUT_CLASSIFICATION	If moved into an Package
WITHOUT_CLASSIFICATION	If default Namespace is not already set
WITHOUT_CLASSIFICATION	The next if-clause is important for the Deployment-diagram it detects if the enclosing fig is a component, in this case the container will be set for the owning Interface
WITHOUT_CLASSIFICATION	Testing: Add a parameter to an operation on an Interface. Does the Interface Fig adapt its width?
WITHOUT_CLASSIFICATION	Set up the property panels for class diagrams:
WITHOUT_CLASSIFICATION	The figure that holds the text of the note.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	Update the listeners to match the desired set using the minimal update facility
WITHOUT_CLASSIFICATION	Get the size of the text field.
WITHOUT_CLASSIFICATION	Mark this as newly created. This is to get round the problem with creating figs for loaded comments that had stereotypes. They are saved with their dimensions INCLUDING the stereotype, but since we pretend the stereotype is not visible, we add height the first time we render such a comment. This is a complete fudge, and really we ought to address how comment objects with stereotypes are saved. But that will be hard work.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel Figs
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	Resize the text figure
WITHOUT_CLASSIFICATION	resize the FigNode to accomodate the new text
WITHOUT_CLASSIFICATION	Not used, do nothing.
WITHOUT_CLASSIFICATION	Not used, do nothing.
WITHOUT_CLASSIFICATION	Resize the big port around the figure
WITHOUT_CLASSIFICATION	The text element has no border, so the line color doesn't matter.
WITHOUT_CLASSIFICATION	The text is always opaque.
WITHOUT_CLASSIFICATION	? 2LINE_WIDTH?
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	Make a seamless integration of the text in the note figure.
WITHOUT_CLASSIFICATION	user interaction methods
WITHOUT_CLASSIFICATION	accessor methods
WITHOUT_CLASSIFICATION	If we have a stereotype displayed, then allow some space for that (width and height)
WITHOUT_CLASSIFICATION	And add the gaps around the textfield to get the minimum size of the note.
WITHOUT_CLASSIFICATION	Since this is a complex polygon, there's no easy way to resize it.
WITHOUT_CLASSIFICATION	Just move the corner to it's new position.
WITHOUT_CLASSIFICATION	/ Internal methods
WITHOUT_CLASSIFICATION	Remove the commentedge. If there are more then one comment-edges between the 2 objects, then delete them all.
WITHOUT_CLASSIFICATION	all connected edges
WITHOUT_CLASSIFICATION	Only adjust the stereotype height if we are not newly created. This gets round the problem of loading classes with stereotypes defined, which have the height already including the stereotype.
WITHOUT_CLASSIFICATION	Whatever happened we are no longer newly created, so clear the flag. Then set the bounds for the rectangle we have defined.
WITHOUT_CLASSIFICATION	end class StylePanelFigClass
WITHOUT_CLASSIFICATION	TODO: get tip string from comment
WITHOUT_CLASSIFICATION	This one is still usable, so let's retain it,
WITHOUT_CLASSIFICATION	the last one needs extra space below it
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setDestFigNode(org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setSourceFigNode(org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Visibility ...
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	element will normally be null when called from PGML parser It will get it's source & destination set later in attachEdges
WITHOUT_CLASSIFICATION	Unfortunately the Fig and it's associated CommentEdge will not be fully initialized yet here if we're being loaded from a PGML file. The remainder of the initialization will happen when set{Dest|Source}FigNode are called from PGMLStackParser.attachEdges()
WITHOUT_CLASSIFICATION	unimplemented
WITHOUT_CLASSIFICATION	Alternatively, we could just return null here, so that you can not create a comment just linked to a comment this way - which is a bit uncommon, but not illegal, so for consistency, we better allow it.
WITHOUT_CLASSIFICATION	return null;
WITHOUT_CLASSIFICATION	Class to display a Stereotype declaration figure using Classifier box notation.<p> TODO: This is just a place-holder right now! - tfm This needs to show tags and constraints.
WITHOUT_CLASSIFICATION	Add...
WITHOUT_CLASSIFICATION	Show ...
WITHOUT_CLASSIFICATION	register for tagDefinitions:
WITHOUT_CLASSIFICATION	TODO: constraints, ...
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction#isEnabled()
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	Put all the bits together, suppressing bounds calculations until we're all done for efficiency.
WITHOUT_CLASSIFICATION	The next line is needed so that we have the right dimension when drawing this Fig on the diagram by pressing down the mouse button, even before releasing the mouse button:
WITHOUT_CLASSIFICATION	TODO: Need named Tags and Constraints compartments here addFig(tagsFig); addFig(constraintsFig);
WITHOUT_CLASSIFICATION	If moved into an Package
WITHOUT_CLASSIFICATION	If default Namespace is not already set
WITHOUT_CLASSIFICATION	When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)
WITHOUT_CLASSIFICATION	If the Operation/Reception is abstract, then the text will be set to italics.
WITHOUT_CLASSIFICATION	avoid GEF calcDrawingArea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	TODO: Add Tags & Constraints addMenu.add(TargetManager.getInstance().getAddAttributeAction()); addMenu.add(TargetManager.getInstance().getAddOperationAction());
WITHOUT_CLASSIFICATION	avoid GEF calcDrawingArea bug when nothing in a diagram.
WITHOUT_CLASSIFICATION	No generalizations in Deployment Diagrams
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	copy the gif image to the clipboard
WITHOUT_CLASSIFICATION	the diagram image data
WITHOUT_CLASSIFICATION	hide grid, otherwise can't see anything
WITHOUT_CLASSIFICATION	bigPort.setFilled(f);
WITHOUT_CLASSIFICATION	background color.
WITHOUT_CLASSIFICATION	2 Pixel padding after compartment
WITHOUT_CLASSIFICATION	Set up hide all / show all
WITHOUT_CLASSIFICATION	Perform the action
WITHOUT_CLASSIFICATION	Only the bigPort may be filled
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	see parent
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	We remove all of them:
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.UndoableAction#isEnabled()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	?LINE_WIDTH?
WITHOUT_CLASSIFICATION	If we don't have a fig for this UML object, we'll need to add one. We set the bounds, but they will be reset later.
WITHOUT_CLASSIFICATION	but its position may have been changed:
WITHOUT_CLASSIFICATION	bounds not relevant here, but I am perfectionist...
WITHOUT_CLASSIFICATION	We need to set a new notationprovider, since the Notation language may have been changed:
WITHOUT_CLASSIFICATION	add it again (but now in the right sequence)
WITHOUT_CLASSIFICATION	Now put the text in We must handle the case where the text is null
WITHOUT_CLASSIFICATION	No longer abstract to allow subclasses to remove, so we provide a null default implementation
WITHOUT_CLASSIFICATION	If this is not overridden it will revert to the old behavior All internal subclasses have been updated, but this if for compatibility of non-ArgoUML extensions.
WITHOUT_CLASSIFICATION	Find the compartment fig for this umlObject:
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Line width cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Line width property cannot be changed.
WITHOUT_CLASSIFICATION	aggregation
WITHOUT_CLASSIFICATION	end class ActionSrcMultOneToMany
WITHOUT_CLASSIFICATION	TODO: set font?
WITHOUT_CLASSIFICATION	to circumvent too many registered listeners
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	ending editing
WITHOUT_CLASSIFICATION	USED BY PGML.tee
WITHOUT_CLASSIFICATION	Actually return the FigEdge that the FigEdgePort is part of.
WITHOUT_CLASSIFICATION	throw new IllegalArgumentException();
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	If the user selects an Action that is already selected in sticky mode (double clicked) then we turn off sticky mode and make sure no action is selected.
WITHOUT_CLASSIFICATION	Here the actions to divide a region
WITHOUT_CLASSIFICATION	The 1st region has an invisible divider line (the box is always invisible):
WITHOUT_CLASSIFICATION	Throw out any previous elements that were enclosed but are not a concurrent region; let's move them onto the first region:
WITHOUT_CLASSIFICATION	linewidth?
WITHOUT_CLASSIFICATION	The divider line should be visible, so no need to change its color.
WITHOUT_CLASSIFICATION	Make the composite state 1 region higher:
WITHOUT_CLASSIFICATION	TODO: Verify this. IIUC, then this triggers the CompountStateFig to draw itself correctly. Hence, there was a reason to wait this long to make the state concurrent.
WITHOUT_CLASSIFICATION	Look for the dashed edge
WITHOUT_CLASSIFICATION	We have the dashed edge now find the opposite FigNode
WITHOUT_CLASSIFICATION	Prevent triggering too many events by setName().
WITHOUT_CLASSIFICATION	not???
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Consume to stop other modes from trying to take over
WITHOUT_CLASSIFICATION	marker interface only
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	Only reset the text if the two are not the same (i.e the fig has moved, rather than we've just edited the text, when setTargetBBox() will have made them the same). Note that styleBounds could be null, so we do the test this way round.
WITHOUT_CLASSIFICATION	Can't do anything if we don't have a fig.
WITHOUT_CLASSIFICATION	2 Pixel padding after compartment
WITHOUT_CLASSIFICATION	or vice versa?
WITHOUT_CLASSIFICATION	Provide feedback to the user that their name was not accepted
WITHOUT_CLASSIFICATION	Subtract the the offset of the click, to take account of user having not initially clicked in the centre.
WITHOUT_CLASSIFICATION	super returns -1 if any of GEFs buttons was hit (but maybe one of the not-GEF-buttons)
WITHOUT_CLASSIFICATION	Do not show border line, make transparent:
WITHOUT_CLASSIFICATION	cleanup of unused FigText's
WITHOUT_CLASSIFICATION	TODO: This doesn't do anything special with keywords. They should probably go first.
WITHOUT_CLASSIFICATION	There is one fig more in the group than (stereotypes + keyword):
WITHOUT_CLASSIFICATION	The keyword fig already exists.
WITHOUT_CLASSIFICATION	This will contain the Figs that we do not need anymore:
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	bounds not relevant here
WITHOUT_CLASSIFICATION	The stereotype fig already exists.
WITHOUT_CLASSIFICATION	The boundary box as held in the target fig, and as listed in the boundary box style field (null if we don't have anything valid)
WITHOUT_CLASSIFICATION	remove all stereotypes that have a graphical icon
WITHOUT_CLASSIFICATION	TODO: check!
WITHOUT_CLASSIFICATION	set new bounds for all included figs
WITHOUT_CLASSIFICATION	StylePanelFigClass relies on getPanelTarget() to return a FigCompartmentBox
WITHOUT_CLASSIFICATION	Get class box, because we will set it's bounding box
WITHOUT_CLASSIFICATION	Get class box, because we will set it's bounding box in text field
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	The keyword fig does not exist yet. Let's create one:
WITHOUT_CLASSIFICATION	keywords which look like a stereotype (e.g. <<interface>>) have no owner
WITHOUT_CLASSIFICATION	if there are no stereotypes, we return (0,0), preventing double lines in the class (see issue 4939)
WITHOUT_CLASSIFICATION	end class StylePanelFigAssociationClass
WITHOUT_CLASSIFICATION	/ Constructors /
WITHOUT_CLASSIFICATION	/ Main methods /
WITHOUT_CLASSIFICATION	Create the singleton if it does not exist, and then return it
WITHOUT_CLASSIFICATION	When a new target is selected, we have to check if it 's a use case. Then, the icone "add extension point" have to become enabled.
WITHOUT_CLASSIFICATION	Find the target in the project browser. We can only do anything if its a use case.
WITHOUT_CLASSIFICATION	Create a new extension point and make it the browser target. Then invoke the superclass action method.
WITHOUT_CLASSIFICATION	end class ActionAddExtensionPoint
WITHOUT_CLASSIFICATION	We have already confirmed the connection is valid
WITHOUT_CLASSIFICATION	Detach any edges (such as comment edges) already attached to the FigAssociation before the FigAssociation is removed. They'll later be re-attached to the new FigNodeAssociation
WITHOUT_CLASSIFICATION	If there are bits of an association class then remember their location and path.
WITHOUT_CLASSIFICATION	Create the new FigNodeAssociation and locate it.
WITHOUT_CLASSIFICATION	Add the association ends to the graph model
WITHOUT_CLASSIFICATION	Add the edges (such as comment edges) that were on the old FigAssociation to our new FigNodeAssociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragEnter( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragOver( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dropActionChanged( java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	get the model elements that are being transfered.
WITHOUT_CLASSIFICATION	multiplicity
WITHOUT_CLASSIFICATION	end class ModeCreateAssociation
WITHOUT_CLASSIFICATION	&& ((UMLDiagram) dia).doesAccept(dtde.getSource())
WITHOUT_CLASSIFICATION	Create a new FigText instance based on the given mouse down event and the state of the parent Editor.
WITHOUT_CLASSIFICATION	System.err.println("NullPointerException ignored.");
WITHOUT_CLASSIFICATION	end class SPFigEdgeModelElement
WITHOUT_CLASSIFICATION	System.err.println("NullPointerException ignored.");
WITHOUT_CLASSIFICATION	Get all our sub Figs and hit them with the big stick too
WITHOUT_CLASSIFICATION	Only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	Only show the path item when there is an owning namespace.
WITHOUT_CLASSIFICATION	enumerate all selected figures and update their path accordingly
WITHOUT_CLASSIFICATION	Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.
WITHOUT_CLASSIFICATION	compartments
WITHOUT_CLASSIFICATION	TODO: Support commentEdges. TODO: Support associations to self. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	add
WITHOUT_CLASSIFICATION	20 = height of name fig ?
WITHOUT_CLASSIFICATION	Now force calculation of the bounds of the figure, update the edges and trigger anyone who's listening to see if the "bounds" property has changed.
WITHOUT_CLASSIFICATION	2LINE_WIDTH? or extra padding?
WITHOUT_CLASSIFICATION	Set properties of the stereotype box.
WITHOUT_CLASSIFICATION	The nameFig is transparent, since this is a box and the fill color is drawn by the bigPort.
WITHOUT_CLASSIFICATION	Use "aSize" to build up the minimum size. Start with the size of the name compartment and build up.
WITHOUT_CLASSIFICATION	Only take into account the stereotype width, not the height, since the height is included in the name fig:
WITHOUT_CLASSIFICATION	Add the height of all the compartments (if there are any), and check their minimum width:
WITHOUT_CLASSIFICATION	Save our old boundaries so it can be used in property message later
WITHOUT_CLASSIFICATION	Make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	The box for the compartments is somewhere inside the outside bounds:
WITHOUT_CLASSIFICATION	Now the new nameFig height will include the stereotype height:
WITHOUT_CLASSIFICATION	The new height can not be less than the name height:
WITHOUT_CLASSIFICATION	Calculate the minimum needed height for all the compartments:
WITHOUT_CLASSIFICATION	Distribute the extra height over the visible compartments:
WITHOUT_CLASSIFICATION	Increase the height of the fig:
WITHOUT_CLASSIFICATION	Finally set the bounds of the big box and the border fig:
WITHOUT_CLASSIFICATION	hide compartment
WITHOUT_CLASSIFICATION	Hiding one compartment means that the Fig returns to minimal dimensions:
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#setVisible(boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#stuffPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#setClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.PathConv#applyOffsetAmount(java.awt.Point, java.awt.Point, int, java.awt.Point)
WITHOUT_CLASSIFICATION	Alternatively, we could reduce the height of the Fig by the height of this one hidden compartment. But that would not be possible for the width - so we better return to minimal dimensions overall.
WITHOUT_CLASSIFICATION	show compartment
WITHOUT_CLASSIFICATION	This sets the lineWidth of all in the group:
WITHOUT_CLASSIFICATION	NameFig and StereotypeFig are handled by parent.
WITHOUT_CLASSIFICATION	forceRepaintShadow();
WITHOUT_CLASSIFICATION	Update the diagram, and other users of these settings:
WITHOUT_CLASSIFICATION	@jve:decl-index=0:visual-constraint="10,10"
WITHOUT_CLASSIFICATION	find the point offset on the line that gives a correct offset
WITHOUT_CLASSIFICATION	default angle is 90 deg.
WITHOUT_CLASSIFICATION	Boundary condition in GEF, make sure this is LESS THAN, not equal
WITHOUT_CLASSIFICATION	If we're using a fixed offset, just add it and return No collision detection is done in this case
WITHOUT_CLASSIFICATION	Check for a collision between our computed position and the edge
WITHOUT_CLASSIFICATION	increase offset by 2px at a time
WITHOUT_CLASSIFICATION	Get the points representing the poly line for our edge
WITHOUT_CLASSIFICATION	increase offset by increments until we're clear
WITHOUT_CLASSIFICATION	limit our retries in case its too hard to get free
WITHOUT_CLASSIFICATION	If we timed out, give it one more try on the other side
WITHOUT_CLASSIFICATION	count >= limit
WITHOUT_CLASSIFICATION	Force the line-width to 0, since the FigGroup that contains the stereotype may want to show a border, but we don't.
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Final point #" + count + " " + result + " offset of " + scaledOffset);
WITHOUT_CLASSIFICATION	segment size for computing slope
WITHOUT_CLASSIFICATION	Two points for line segment used to compute slope of path here NOTE that this is the average slope, not instantaneous, so it will give screwy results near bends in the path
WITHOUT_CLASSIFICATION	If our position was clamped, try to make it up on the other end
WITHOUT_CLASSIFICATION	Can't get the slope of a point. Just return an arbitrary point.
WITHOUT_CLASSIFICATION	Our angle theta is arctan(opposite/adjacent) Because y increases going down the screen, positive angles are clockwise rather than counterclockwise
WITHOUT_CLASSIFICATION	This shouldn't happen, because of our line segment size check
WITHOUT_CLASSIFICATION	"We're going vertical!" - Goose in "Top Gun"
WITHOUT_CLASSIFICATION	Arctan only returns -PI/2 to PI/2 Handle the other two quadrants and normalize to 0 - 2PI
WITHOUT_CLASSIFICATION	Quadrant II & III
WITHOUT_CLASSIFICATION	Quadrant IV
WITHOUT_CLASSIFICATION	Set the following for some backward compatibility with old algorithm
WITHOUT_CLASSIFICATION	Add displacement angle to slope
WITHOUT_CLASSIFICATION	Transform to 0 - 2PI range if we've gone all the way around circle
WITHOUT_CLASSIFICATION	Compute our deltas
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE,result.x + ", " + result.y + " theta = " + theta 180 / Math.PI + " dx = " + dx + " dy = " + dy);
WITHOUT_CLASSIFICATION	Load the standard colour, just add an alpha channel.
WITHOUT_CLASSIFICATION	Should never get here. If we do, return the inner point.
WITHOUT_CLASSIFICATION	Called by propertyChange
WITHOUT_CLASSIFICATION	this does a calcBounds()
WITHOUT_CLASSIFICATION	NOTE: This listener needs to always be active even if this tab isn't visible
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#getClassAndModelID()
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The clone method that should clone the JGraph with it's contents and the toolbar with it's contents. Since both JGraph as the toolbar are coming from the GEF framework, cloning them will be hard work and should actually not be placed here but in a clone method of the JGraph and the Toolbar. @see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see java.awt.Component#setVisible(boolean)
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	The following is the default implementation for diagrams of which the owner is a namespace.
WITHOUT_CLASSIFICATION	source source position destination destination position number of objects to be copied
WITHOUT_CLASSIFICATION	"unnamed " +
WITHOUT_CLASSIFICATION	TODO: should update to size of diagram contents
WITHOUT_CLASSIFICATION	This should not be needed if the above is correct, but let's be sure:
WITHOUT_CLASSIFICATION	This should not be needed if the above is correct, but let's be sure:
WITHOUT_CLASSIFICATION	ActionPaste.getInstance().setEnabled( Globals.clipBoard != null && !Globals.clipBoard.isEmpty());
WITHOUT_CLASSIFICATION	next statement gives us a clone JGraph but not a cloned Toolbar
WITHOUT_CLASSIFICATION	@see org.tigris.gef.event.ModeChangeListener#modeChange(org.tigris.gef.event.ModeChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	remains selected
WITHOUT_CLASSIFICATION	the old selection
WITHOUT_CLASSIFICATION	Target might not have been initialised yet.
WITHOUT_CLASSIFICATION	add to selection
WITHOUT_CLASSIFICATION	Optimize for the normal case to minimize target changes
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	Assuming the target is some model element.
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the TabDiagram should only show an empty pane in that case
WITHOUT_CLASSIFICATION	Assuming the target is some model element.
WITHOUT_CLASSIFICATION	was ""
WITHOUT_CLASSIFICATION	Although we register for notification of diagrams being deleted, we currently depend on the TargetManager to assign a new target when this happens When we implement MDI and have our own list of open diagrams we can ressurect the use of this
WITHOUT_CLASSIFICATION	Any Swing work done here needs to be queued to the AWT thread since we don't know what thread our event will arrive on
WITHOUT_CLASSIFICATION	- RedrawManager.lock();
WITHOUT_CLASSIFICATION	- RedrawManager.lock();
WITHOUT_CLASSIFICATION	getLayerManager().getActiveLayer().paint(g);
WITHOUT_CLASSIFICATION	- RedrawManager.unlock(); - _redrawer.repairDamage();
WITHOUT_CLASSIFICATION	getLayerManager().getActiveLayer().paint(g);
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.swing.Action#getValue(java.lang.String)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This makes the text not touch the text-border line:
WITHOUT_CLASSIFICATION	TODO: We don't currently have any settings that can change on a per-fig basis, so we can just use the project/diagram defaults settings = new DiagramSettings(renderSettings);
WITHOUT_CLASSIFICATION	Certain types of fixed text (e.g. a FigStereotype with a keyword) may not have an owner
WITHOUT_CLASSIFICATION	Now, we link it to the modelelements which are represented by FigNode
WITHOUT_CLASSIFICATION	update all tools' enabled status
WITHOUT_CLASSIFICATION	remember the fig for later
WITHOUT_CLASSIFICATION	Let's build the comment first, unlinked.
WITHOUT_CLASSIFICATION	Prevent e.g. AssociationClasses from being added trice:
WITHOUT_CLASSIFICATION	Select the new comment as target
WITHOUT_CLASSIFICATION	Create the Node Fig for the comment itself and draw it
WITHOUT_CLASSIFICATION	Create the comment links and draw them
WITHOUT_CLASSIFICATION	Place the comment Fig on the nicest spot on the diagram
WITHOUT_CLASSIFICATION	If we're drawing from an edge
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	$NON-NLS-<n>$
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.undo.UndoableAction#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Calling connect() will add the edge to the GraphModel and any LayerPersectives on that GraphModel will get a edgeAdded event and will add an appropriate FigEdge (determined by the GraphEdgeRenderer).
WITHOUT_CLASSIFICATION	user made a false start
WITHOUT_CLASSIFICATION	So, the target is a MAssociationRole
WITHOUT_CLASSIFICATION	MVW This is not the correct way, but it allows connecting a CommentEdge to it! See e.g. ActionAddNote for the correct way. Testcase: 1. Select the message. 2. Click the Comment tool.
WITHOUT_CLASSIFICATION	end class ActionAddMessage
WITHOUT_CLASSIFICATION	let's use groups to construct the different text sections at the association
WITHOUT_CLASSIFICATION	No further listeners required in this case - the rest is handled by the notationProvider and sub-Figs.
WITHOUT_CLASSIFICATION	This only happens if model-change events arrive before we are completely constructed.
WITHOUT_CLASSIFICATION	x^2 + y^2 = r^2 (equation of a circle)
WITHOUT_CLASSIFICATION	max distance is set at 100 pixels, (rSquared = 100^2)
WITHOUT_CLASSIFICATION	east
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	end class FigAssociation
WITHOUT_CLASSIFICATION	Note that "multiplicity" is what is the notation is listening for in UML1.4 "uppervalue" are listened to in UML2. It is not currently why it is not required to register for "lowerValue" also.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationProvider takes care of this.
WITHOUT_CLASSIFICATION	no need to listen to these property changes - the notationProvider takes care of this.
WITHOUT_CLASSIFICATION	, new String[] {"name", "visibility", "stereotype"}
WITHOUT_CLASSIFICATION	, new String[] {"name", "visibility", "stereotype"}
WITHOUT_CLASSIFICATION	These are a list of arrow types.
WITHOUT_CLASSIFICATION	Added to the arrow type for navigable
WITHOUT_CLASSIFICATION	Finished editing. Parse the text that was edited. Only the role is editable, hence:
WITHOUT_CLASSIFICATION	figEdge.showHelp(role.getParsingHelp()); role.setText();
WITHOUT_CLASSIFICATION	Pass everything else to superclass
WITHOUT_CLASSIFICATION	end class ActionNavigability
WITHOUT_CLASSIFICATION	Nothing yet. Later maybe something like:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	putNotationArgument("showAssociationName", getSettings().isShowAssociationNames());
WITHOUT_CLASSIFICATION	The text the user has filled in the textfield is first checked to see if it's a valid multiplicity. If so then that is the multiplicity to be set. If not the input is rejected.
WITHOUT_CLASSIFICATION	Fonts and colors should get updated automatically for contained figs
WITHOUT_CLASSIFICATION	There is none...
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	make space for the clarifier margin between text and border
WITHOUT_CLASSIFICATION	This next line presumes that the 1st fig with this owner is the previous port - and consequently nullifies the owner of this 1st fig.
WITHOUT_CLASSIFICATION	Add a listener for changes to any property
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Show ...
WITHOUT_CLASSIFICATION	popupAddOffset should be equal to the number of items added here:
WITHOUT_CLASSIFICATION	TODO: The following is carried over from setOwner, but probably isn't needed renderingChanged(); It does the following (add as needed): updateNameText(); updateStereotypeText(); updateStereotypeIcon(); updateBounds(); damage();
WITHOUT_CLASSIFICATION	Be careful here since subclasses could have overridden this with the assumption that it wouldn't be called before the constructors finished
WITHOUT_CLASSIFICATION	TODO: MVW: I think this has to be: clone.nameFig = (FigSingleLineText) cloneFig; but have not the means to investigate, since this code is not yet used. Enable the menu-items for Copy/Paste to test... BTW: In some other FigNodeModelElement classes I see the same mistake.
WITHOUT_CLASSIFICATION	this rectangle marks the whole modelelement figure; everything is inside it:
WITHOUT_CLASSIFICATION	Clone this figure. After the base clone method has been called determine which child figs of the clone represent the name, stereotype and port. <p> TODO: enclosedFigs, encloser and eventSenders may also need to be cloned. @see java.lang.Object#clone() @return the cloned figure
WITHOUT_CLASSIFICATION	Idem here: clone.stereotypeFig = (FigStereotypesGroup) cloneFig;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getEnclosingFig()
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	add stereotype view submenu
WITHOUT_CLASSIFICATION	The node's been placed on the diagram
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	Set the namespace of the enclosed model element to the namespace of the encloser.
WITHOUT_CLASSIFICATION	Find all ElementResidences between the class and the component:
WITHOUT_CLASSIFICATION	There was no ElementResidence yet, so let's create one:
WITHOUT_CLASSIFICATION	The node's been placed within some Fig
WITHOUT_CLASSIFICATION	There were 2 ElementResidences .. strange case.
WITHOUT_CLASSIFICATION	There is already a correct ElementResidence
WITHOUT_CLASSIFICATION	The owner is already linked to the component
WITHOUT_CLASSIFICATION	We are getting events we don't want. Filter them out.
WITHOUT_CLASSIFICATION	Only update the bounds if they change:
WITHOUT_CLASSIFICATION	We handle and consume editing events
WITHOUT_CLASSIFICATION	resize the FigNode to accommodate the new text
WITHOUT_CLASSIFICATION	If the source of the event is an UML object, e.g. the owner of this Fig (but not always only the owner is shown, e.g. for a class, also its attributes are shown), then the UML model has been changed.
WITHOUT_CLASSIFICATION	TODO: Should this not be an assert?
WITHOUT_CLASSIFICATION	west
WITHOUT_CLASSIFICATION	If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	south
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	Convert null to empty string and clear help message
WITHOUT_CLASSIFICATION	it is done
WITHOUT_CLASSIFICATION	this enables direct text editing for sub figs of a FigGroup object:
WITHOUT_CLASSIFICATION	either layer or owner was null
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	Default is to do nothing
WITHOUT_CLASSIFICATION	This test needed for a FigPool
WITHOUT_CLASSIFICATION	Get model listeners removed:
WITHOUT_CLASSIFICATION	is used as InstanceSpecification, see UMLDeploymentDiagram
WITHOUT_CLASSIFICATION	TODO: what about ObjectNode? return org.eclipse.uml2.uml.ObjectNode.class;
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: State & Vertex are independent classes in UML 2.1
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	only initialized to prevent warning
WITHOUT_CLASSIFICATION	not supported for this target
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	TODO assert modelElement != null???
WITHOUT_CLASSIFICATION	Default for name and stereotype is no border
WITHOUT_CLASSIFICATION	Override FigNode implementation to keep setOwner from getting called.
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	Use DiagramInterface to add classes to diagram
WITHOUT_CLASSIFICATION	ActionAddAllClassesFromModel
WITHOUT_CLASSIFICATION	we have an edge (the UML modelelement!)
WITHOUT_CLASSIFICATION	situation 1
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	Text group to contain name & stereotype
WITHOUT_CLASSIFICATION	computeRoute(); this recomputes the route if you reload the diagram.
WITHOUT_CLASSIFICATION	in case someone turns it on
WITHOUT_CLASSIFICATION	Do not allow fill to change. We should see through the text to the color of the main FIg background.
WITHOUT_CLASSIFICATION	Now force minimum dimensions for the text:
WITHOUT_CLASSIFICATION	Now add the areas around the text to return the complete size:
WITHOUT_CLASSIFICATION	calculate the source and dest figs for to self assoc
WITHOUT_CLASSIFICATION	reset the pointIndex
WITHOUT_CLASSIFICATION	check pre-conds
WITHOUT_CLASSIFICATION	Set-up:
WITHOUT_CLASSIFICATION	the fig that was under the mouse when it was released
WITHOUT_CLASSIFICATION	make a nice little target area:
WITHOUT_CLASSIFICATION	and find the Fig:
WITHOUT_CLASSIFICATION	last is the top fig.
WITHOUT_CLASSIFICATION	check intermediate post-condition.
WITHOUT_CLASSIFICATION	delegate the re-routing to graphmodels.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	set it to an invalid number by default to make sure it is set correctly.
WITHOUT_CLASSIFICATION	figPoly.setFillColor(col);
WITHOUT_CLASSIFICATION	figClone._polygon = (Polygon) _polygon.clone();
WITHOUT_CLASSIFICATION	north
WITHOUT_CLASSIFICATION	Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	TODO: Do nothing until code is reviewed
WITHOUT_CLASSIFICATION	Message
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Crazy numbering scheme at work here. Here's how the handle numbers are laid out. Values 0-7 are defined by GEF and go left to right, top to bottom (ie not clockwise or counterclockwise). Values 10-14 zigzag North, South, West, East, Southwest. If you can correctly guess where 15 will go, you should buy a lottery ticket immediately. <pre> 10 0-------1-------2 | | 12 3 4 13 | | 14 5-------6-------7 11 </pre>
WITHOUT_CLASSIFICATION	ClassifierRole ClassifierRole
WITHOUT_CLASSIFICATION	Simulate a press of the mouse above the calculated point:
WITHOUT_CLASSIFICATION	Calculate the drop location, and place every n-th element at an offset proportional to n.
WITHOUT_CLASSIFICATION	super implementation found a hit
WITHOUT_CLASSIFICATION	Take canvas scrolling into account. The implementation below does place the element correctly when the canvas has been scrolled.
WITHOUT_CLASSIFICATION	Simulate a release of the mouse:
WITHOUT_CLASSIFICATION	Overridden in order to implement PathCompartmentContainer.
WITHOUT_CLASSIFICATION	do nothing by default
WITHOUT_CLASSIFICATION	Don't allow drag outside of bounds of diagram
WITHOUT_CLASSIFICATION	Overridden in order to implement PathCompartmentContainer.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the clarifiers.
WITHOUT_CLASSIFICATION	If the user has selected ModePlace either by a diagram tool or AddToDiagram then we don't want to show the toolbelt items.
WITHOUT_CLASSIFICATION	Remember what handle was clicked for the case where the drag is released over empty space
WITHOUT_CLASSIFICATION	transparent cyan
WITHOUT_CLASSIFICATION	yellow
WITHOUT_CLASSIFICATION	translucent green
WITHOUT_CLASSIFICATION	super(ModeCreatePolyEdge.class, "edgeClass", Model.getMetaTypes().getAssociation(), name);
WITHOUT_CLASSIFICATION	set this to true on to enable debugging figs
WITHOUT_CLASSIFICATION	anchor position
WITHOUT_CLASSIFICATION	The EnumerationLiteral uses a dedicated notation that supports parsing "name1;name2;name3" and stereotypes. Also supports deleting a literal by erasing text.
WITHOUT_CLASSIFICATION	TODO: The UML does not seem to define this name. Or is it?
WITHOUT_CLASSIFICATION	The serialVersionUID (generated by Eclipse)
WITHOUT_CLASSIFICATION	UML spec for Generalizations doesn't call for name
WITHOUT_CLASSIFICATION	Name & stereotypes get updated by superclass
WITHOUT_CLASSIFICATION	Update the discriminator if it changed
WITHOUT_CLASSIFICATION	show it
WITHOUT_CLASSIFICATION	fig.calcBounds();
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	we only take the filename, not the whole system path
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	make port invisible unless mouse enters
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	The following does not seem to work - centered the Fig instead. getNameFig().setJustificationByName("center");
WITHOUT_CLASSIFICATION	get the widest of all textfigs calculate the total height
WITHOUT_CLASSIFICATION	Create the new FigAssociation edge to replace the node
WITHOUT_CLASSIFICATION	Center the NameFig, since center justification does not seem to work.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Do nothing, this rect will always be transparent
WITHOUT_CLASSIFICATION	Do nothing, this rect will always be transparent
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	update any text, colors, fonts, etc.
WITHOUT_CLASSIFICATION	update the relative sizes and positions of internel Figs
WITHOUT_CLASSIFICATION	popupAddOffset should be equal to the number of items added here:
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	We handle and consume editing events
WITHOUT_CLASSIFICATION	Detach any non-associationend edges (such as comment edges) already attached before this association node is removed. They'll later be re-attached to the new FigAssociation
WITHOUT_CLASSIFICATION	Now we can remove ourself (which will also remove the attached association ends edges)
WITHOUT_CLASSIFICATION	Add the non-associationend edges (such as comment edges) that were originally attached to this and attach them to the new FigAssociation and make sure they are positioned correctly.
WITHOUT_CLASSIFICATION	List of model element listeners we've registered.
WITHOUT_CLASSIFICATION	Added this part to load the extra menu content
WITHOUT_CLASSIFICATION	Owner related todo items:
WITHOUT_CLASSIFICATION	Fig related todo items:
WITHOUT_CLASSIFICATION	parse the text that was edited
WITHOUT_CLASSIFICATION	Pass everything except editing events to superclass
WITHOUT_CLASSIFICATION	If the source of the event is an UML object, then the UML model has been changed.
WITHOUT_CLASSIFICATION	The following is a possible future improvement of the modelChanged() function. Michiel: Propose not to do this to keep architecture stable.
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	TODO: Update setting
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	We moused over an object just as it was deleted transient condition - doesn't require I18N
WITHOUT_CLASSIFICATION	TODO: We don't have any settings that can change per-fig currently so we can just use the default settings; settings = new DiagramSettings(renderSettings);
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	Required for MouseListener interface, but we only care about clicks
WITHOUT_CLASSIFICATION	No need to update if model element went away
WITHOUT_CLASSIFICATION	Required for KeyListener interface, but not used
WITHOUT_CLASSIFICATION	Required for KeyListener interface, but not used
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	internal methods
WITHOUT_CLASSIFICATION	If the edge is from a circle to a circle (e.g. between use cases) we have our own implementation overriding GEF. Which attempts to keep the edges perpendicular if the edge is already close to perpendicular.
WITHOUT_CLASSIFICATION	newFC = _content;
WITHOUT_CLASSIFICATION	GEF sets a different Fig than the one that we had at construction time, so we need to set its color and width
WITHOUT_CLASSIFICATION	place the edge on the layer and update the diagram
WITHOUT_CLASSIFICATION	end computeRoute
WITHOUT_CLASSIFICATION	TODO: Does this help?
WITHOUT_CLASSIFICATION	If this is not a circle to circle edge we default to let GEF calculate edge route.
WITHOUT_CLASSIFICATION	? two iterations of refinement, maybe should be a for-loop
WITHOUT_CLASSIFICATION	Give up if the assocation ends don't have a type defined
WITHOUT_CLASSIFICATION	Get the two ends of any valid edge
WITHOUT_CLASSIFICATION	Only allow binary associations
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	TODO: assumes public
WITHOUT_CLASSIFICATION	(MElementImport)
WITHOUT_CLASSIFICATION	Modifiers ...
WITHOUT_CLASSIFICATION	This sets the lineWidth of all in the group:
WITHOUT_CLASSIFICATION	NameFig and StereotypeFig are handled by parent.
WITHOUT_CLASSIFICATION	If the line angle is less than 3 degrees then snap the line straight
WITHOUT_CLASSIFICATION	/ Methods that implement the MutableGraphModel interface /
WITHOUT_CLASSIFICATION	A dependency potentially has many clients and suppliers. We only consider the first of each (not clear that we should really accept the case where there is more than one of either)
WITHOUT_CLASSIFICATION	Add the node, check that it is an actor or use case and add it to the model namespace.
WITHOUT_CLASSIFICATION	Tell GEF its changed
WITHOUT_CLASSIFICATION	Add the element and place it in the namespace of the model
WITHOUT_CLASSIFICATION	Tell GEF
WITHOUT_CLASSIFICATION	Suggest that actors may not connect (see JavaDoc comment about this).
WITHOUT_CLASSIFICATION	Everything else is OK
WITHOUT_CLASSIFICATION	Remove a node
WITHOUT_CLASSIFICATION	Remove an edge
WITHOUT_CLASSIFICATION	Something was added - nothing for us to worry about
WITHOUT_CLASSIFICATION	Invoke the parent constructor first
WITHOUT_CLASSIFICATION	Invoke the parent refresh first
WITHOUT_CLASSIFICATION	end class StylePanelFigUseCase
WITHOUT_CLASSIFICATION	initialize any other Figs here
WITHOUT_CLASSIFICATION	Only the head should be filled (not the text)
WITHOUT_CLASSIFICATION	Accumulate a bounding box for all the Figs in the group.
WITHOUT_CLASSIFICATION	name updating
WITHOUT_CLASSIFICATION	Text fig to hold the <<include>> label
WITHOUT_CLASSIFICATION	The <<include>> label. It's not a true stereotype, so don't use the stereotype support
WITHOUT_CLASSIFICATION	TRY SOME ACTION ERRORS
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order
WITHOUT_CLASSIFICATION	Set the drop location in the case of D&D:
WITHOUT_CLASSIFICATION	Check if multiple items are selected:
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	If the element import is in the old owned, it means it must have been removed. Make sure the associated model element is removed.
WITHOUT_CLASSIFICATION	By default we don't show the attribute check box. Mark this object as a listener for the check box.
WITHOUT_CLASSIFICATION	These are the positions of child figs inside this fig They must be added in the constructor in this order. For now the name must not be last as this would force zero width lines (until GEF is fixed)
WITHOUT_CLASSIFICATION	add Figs to the FigNode in back-to-front order Put this rectangle behind the rest, so it goes first
WITHOUT_CLASSIFICATION	Make the line dashed
WITHOUT_CLASSIFICATION	Add an arrow with an open arrow head
WITHOUT_CLASSIFICATION	Make the edge go between nearest points
WITHOUT_CLASSIFICATION	Create a new version of the relevant fig
WITHOUT_CLASSIFICATION	The nodes at the two ends
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	Link the new include relationship in to the ends
WITHOUT_CLASSIFICATION	Link the new dependency in to the ends
WITHOUT_CLASSIFICATION	Side effect: This creates the fig:
WITHOUT_CLASSIFICATION	A use case has an external separator. External means external to the compartment box. This horizontal line sticks out of the box, and touches the ellipse edge.
WITHOUT_CLASSIFICATION	by default, do not show extension points:
WITHOUT_CLASSIFICATION	Use arbitrary dimensions for now.
WITHOUT_CLASSIFICATION	Get the parent vector first
WITHOUT_CLASSIFICATION	Formula for a is described in the overall class description.
WITHOUT_CLASSIFICATION	For an ellipse, we can put the box in the middle:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	Make the edge go between nearest points
WITHOUT_CLASSIFICATION	Add menu to add an extension point or note. Placed one before last, so the "Properties" entry is always last.
WITHOUT_CLASSIFICATION	Where there is more than one supplier or client, take the first element in each case. There really ought to be a check that there are some here for safety.
WITHOUT_CLASSIFICATION	Modifier menu. Placed one before last, so the "Properties" entry is always last.
WITHOUT_CLASSIFICATION	Work out the radii of the ellipse, a and b. The top right corner of the ellipse (Cartesian coordinates, centered on the origin) will be at (x,y)
WITHOUT_CLASSIFICATION	Result as integers, rounded up. We ensure that the radii are integers for convenience.
WITHOUT_CLASSIFICATION	Use the code from the FigCircle, not the one from Fig.
WITHOUT_CLASSIFICATION	Let's register for events from all modelelements that change the name or body text:
WITHOUT_CLASSIFICATION	Register for name changes, added extensionPoints and abstract makes the text italic. All Figs need to listen to "remove", too:
WITHOUT_CLASSIFICATION	register for extension points:
WITHOUT_CLASSIFICATION	Set bounds will be called from our superclass constructor before our constructor has run, so make sure this gets set up if needed.
WITHOUT_CLASSIFICATION	Set up FigText to hold the condition.
WITHOUT_CLASSIFICATION	Join all into a group
WITHOUT_CLASSIFICATION	UML spec for Extend doesn't call for name nor stereotype
WITHOUT_CLASSIFICATION	Make sure the line is dashed
WITHOUT_CLASSIFICATION	Set up the property panels for use case diagrams:
WITHOUT_CLASSIFICATION	Actions specific to the use case diagram toolbar
WITHOUT_CLASSIFICATION	The renderer should be a singleton
WITHOUT_CLASSIFICATION	Allow all Packages and Classifiers..
WITHOUT_CLASSIFICATION	TRY THE PREDECESSORS
WITHOUT_CLASSIFICATION	If location is non-null, convert to a rectangle that we can use
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	The <<extend>> label. It's not a true stereotype, so don't use the stereotype support int y = getNameFig().getBounds().height;
WITHOUT_CLASSIFICATION	Place in the middle of the line and ensure the line is dashed. Add an arrow with an open arrow head. Remember that for an extends relationship, the arrow points to the base use case, but because of the way we draw it, that is still the destination end.
WITHOUT_CLASSIFICATION	Let the group recalculate its bounds and then tell GEF we've finished.
WITHOUT_CLASSIFICATION	We accept a Package, but not a Model or a Subsystem.
WITHOUT_CLASSIFICATION	If we do not exclude a Model here, then dropping the Model on a UseCase diagram causes a package to be drawn.
WITHOUT_CLASSIFICATION	empty list
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	some convenience methods
WITHOUT_CLASSIFICATION	read until the end section is found, discard generated content
WITHOUT_CLASSIFICATION	Constructor. <p> TODO: Correct? @param nodes The UML elements, typically classifiers, to generate. @param inModel <code>true</code> if the path is in the model.
WITHOUT_CLASSIFICATION	Class Table
WITHOUT_CLASSIFICATION	Select Buttons
WITHOUT_CLASSIFICATION	Output Directory
WITHOUT_CLASSIFICATION	Compile Checkbox
WITHOUT_CLASSIFICATION	TODO: the last argument (recursive flag) should be a selectable option
WITHOUT_CLASSIFICATION	skip backup files. This is actually a workaround for the cpp generator, which always creates backup files (it's a bug).
WITHOUT_CLASSIFICATION	TODO: Should be improved so that it's recognized whether there is something selected that can actually be generated Nothing selected in the diagram
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding. Specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	TODO: Get saved default directory outputDirectoryComboBox.getModel().setSelectedItem(savedDir);
WITHOUT_CLASSIFICATION	TODO: Get default output directory from user settings Project p = ProjectManager.getManager().getCurrentProject(); p.getProjectSettings().setGenerationOutputDir(path);
WITHOUT_CLASSIFICATION	Generate Button --------------------------------------
WITHOUT_CLASSIFICATION	remove trailing /
WITHOUT_CLASSIFICATION	classify nodes by base path
WITHOUT_CLASSIFICATION	else ignore
WITHOUT_CLASSIFICATION	generate the files
WITHOUT_CLASSIFICATION	Doesn't really matter what set we use.
WITHOUT_CLASSIFICATION	Show Filechooser to select OutputDirectory
WITHOUT_CLASSIFICATION	end class ClassGenerationDialog
WITHOUT_CLASSIFICATION	end class TableModelClassChecks
WITHOUT_CLASSIFICATION	Try Changing the direction of m7
WITHOUT_CLASSIFICATION	private constructor to enforce singleton
WITHOUT_CLASSIFICATION	The diagram already exists in this project. Select it as the current target.
WITHOUT_CLASSIFICATION	TableModel implementation
WITHOUT_CLASSIFICATION	ArgoEventPump.fireEvent( new ArgoImporterEvent(ArgoEventTypes.IMPORTER_ADDED, gen));
WITHOUT_CLASSIFICATION	Check if this diagram already exists in the project
WITHOUT_CLASSIFICATION	Otherwise create a new classdiagram for the package.
WITHOUT_CLASSIFICATION	if the classifier is not in the current diagram, add it:
WITHOUT_CLASSIFICATION	The following calls are ORDER DEPENDENT. Not sure why, but the layer add must come before the model add or we'll end up with duplicate figures in the diagram. - tfm
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	the class is in the diagram so we are on a second pass, find the fig for this class can update its visible state.
WITHOUT_CLASSIFICATION	add edges for a 2-pass r.e. process we might have already added the class but not its edges
WITHOUT_CLASSIFICATION	"Java" is the default module for historical reasons, but it's not required to be there
WITHOUT_CLASSIFICATION	the previous line helps, but we better check again:
WITHOUT_CLASSIFICATION	not a SuffixFilter selected, so we take all
WITHOUT_CLASSIFICATION	filter out all unchanged files
WITHOUT_CLASSIFICATION	set the lastModified value
WITHOUT_CLASSIFICATION	return Arrays.copyOf(selectedFiles, selectedFiles.length);
WITHOUT_CLASSIFICATION	iss.setValue(countFiles + (i + 1) / 10);
WITHOUT_CLASSIFICATION	Roughly equivalent to and derived from old Import.doFile()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.JFileChooser#approveSelection()
WITHOUT_CLASSIFICATION	@see javax.swing.JFileChooser#cancelSelection()
WITHOUT_CLASSIFICATION	New style importers don't create diagrams, so we'll do it based on the list of newElements that they created
WITHOUT_CLASSIFICATION	Do layout even if problems occurred during import
WITHOUT_CLASSIFICATION	Add messages from caught exceptions
WITHOUT_CLASSIFICATION	Select the correct diagram (implicitly creates it)
WITHOUT_CLASSIFICATION	Add the element to the diagram
WITHOUT_CLASSIFICATION	Print an exception trace to a string buffer
WITHOUT_CLASSIFICATION	TODO: Get the list of extended settings from the current language importer and add those too
WITHOUT_CLASSIFICATION	level 0 import detail
WITHOUT_CLASSIFICATION	level 1 import detail
WITHOUT_CLASSIFICATION	level 2 import detail
WITHOUT_CLASSIFICATION	build the configPanel:
WITHOUT_CLASSIFICATION	de-selects the fig minimising & layout if we are not creating diagrams
WITHOUT_CLASSIFICATION	select the level of import 0 - classifiers only 1 - classifiers plus feature specifications 2 - full import, feature detail
WITHOUT_CLASSIFICATION	cp1252 is often the default, but windows-1252 is the name listed by Charset.availableCharsets
WITHOUT_CLASSIFICATION	Get the extension panel for the configuration settings.
WITHOUT_CLASSIFICATION	ExplorerEventAdaptor.getInstance().structureChanged(); ProjectBrowser.getInstance().getStatusBar().showProgress(0);
WITHOUT_CLASSIFICATION	Create chooser for objects we are to import. Old style modules get to provide their own (although I don't believe any of them do), while new style modules get the a chooser provided by us (which matches what the abstract class FileImportSupport used to provide).
WITHOUT_CLASSIFICATION	this is because of the (senseless?) "All files" FileFilter
WITHOUT_CLASSIFICATION	Parsing file x of z.
WITHOUT_CLASSIFICATION	progress bar
WITHOUT_CLASSIFICATION	For some reason, this alleged directory is a single file This could be that there is some confusion or just the normal, that a single file was selected and is supposed to be imported.
WITHOUT_CLASSIFICATION	Get the contents of the directory
WITHOUT_CLASSIFICATION	The following test can cause trouble with links, because links are accepted as directories, even if they link files. Links could also result in infinite loops. For this reason we don't do this traversing recursively.
WITHOUT_CLASSIFICATION	If this file is a directory
WITHOUT_CLASSIFICATION	TODO: Add filename ?
WITHOUT_CLASSIFICATION	can't remove the last file
WITHOUT_CLASSIFICATION	can't remove from existing one so create new one.
WITHOUT_CLASSIFICATION	Error/warning messageArea
WITHOUT_CLASSIFICATION	gbc.gridheight = 10;
WITHOUT_CLASSIFICATION	cancel/close button
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	the introducing label
WITHOUT_CLASSIFICATION	User closing the progress window is interpreted as cancel request
WITHOUT_CLASSIFICATION	panel for controls
WITHOUT_CLASSIFICATION	This method can be called only if there's a valid selection so go ahead and remove whatever's selected.
WITHOUT_CLASSIFICATION	nothings left, disable firing.
WITHOUT_CLASSIFICATION	Select an index.
WITHOUT_CLASSIFICATION	removed item in last position
WITHOUT_CLASSIFICATION	Just quit
WITHOUT_CLASSIFICATION	the text box containing the problem messages
WITHOUT_CLASSIFICATION	continue and abort buttons
WITHOUT_CLASSIFICATION	listeners
WITHOUT_CLASSIFICATION	stores the action command into the UMLPlainTextDocument class which is also used for setProperty and getProperty
WITHOUT_CLASSIFICATION	TODO: this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	Add an invisible button to be used when everything is off
WITHOUT_CLASSIFICATION	| removed to workaround problems with autosplit OCLEditor.OPTIONMASK_AUTOSPLIT
WITHOUT_CLASSIFICATION	TabModelTarget interface methods
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	There is no need to test if classes is empty because the shouldBeEnabled mechanism blanks out the possibility to choose this alternative in this case.
WITHOUT_CLASSIFICATION	List classes = getCandidates(); return classes.size() > 0;
WITHOUT_CLASSIFICATION	Our first button is invisible. Selecting it deselects all visible buttons.
WITHOUT_CLASSIFICATION	Set editor's model
WITHOUT_CLASSIFICATION	check ocl parsing constraints
WITHOUT_CLASSIFICATION	do not create a constraint:
WITHOUT_CLASSIFICATION	Parse and check specified constraint.
WITHOUT_CLASSIFICATION	Ignored: Highly unlikely, and what would we do anyway? log it
WITHOUT_CLASSIFICATION	Split constraint body, if user wants us to
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	the constraint _must_ be owned by a namespace
WITHOUT_CLASSIFICATION	Store constraint body
WITHOUT_CLASSIFICATION	New constraint, first time setData is called
WITHOUT_CLASSIFICATION	a runtime exception that occurs when some internal test fails
WITHOUT_CLASSIFICATION	Check name for consistency with spec
WITHOUT_CLASSIFICATION	Set name
WITHOUT_CLASSIFICATION	Also set name in constraint body -- Added 03/14/2001
WITHOUT_CLASSIFICATION	replace name
WITHOUT_CLASSIFICATION	OK, so that didn't work out... Just ignore any problems and don't set the name in the constraint body better had log it.
WITHOUT_CLASSIFICATION	TODO: Why is this ignored? - tfm - 20070110
WITHOUT_CLASSIFICATION	TRY PREDECESSORS
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	We have no model event listeners, so no need to do anything
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	TODO: I18N Don't use the empty string for this or it won't show in the list
WITHOUT_CLASSIFICATION	It would be better if we didn't need the container to get the target. This constructor can have zero parameters as soon as we improve targetChanged.
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	This should not be necessary, but let's be sure:
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	Remove old listeners:
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	MVW: This can never happen, isn't it?
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	TODO: For large lists, this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	Don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	Object[] args = { newValue };
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	if one or the other is null or they are not equal
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	as long as they aren't both null (or a really rare identical string pointer)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	TODO: this seems to be called at startup only so no check so far
WITHOUT_CLASSIFICATION	may only occur as child of the model or in a package
WITHOUT_CLASSIFICATION	to rupdate the diagram set the stimulus name again TODO: Explain that this really works also in the MDR case. Linus is a sceptic.
WITHOUT_CLASSIFICATION	if event source is unknown or the event source is the container's target then update the field
WITHOUT_CLASSIFICATION	check the possibility that this is a promiscuous event
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the UML spec, but we rely on the caller to enforce that if desired.
WITHOUT_CLASSIFICATION	a deployment diagram shows something about the whole model according to the uml spec
WITHOUT_CLASSIFICATION	For a deployment diagram, not just any namespace will do - we need a package.
WITHOUT_CLASSIFICATION	ns is a namespace, but not a package
WITHOUT_CLASSIFICATION	ommit root package name; it's the model's root
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	end class ActionCopy
WITHOUT_CLASSIFICATION	Add a predicate for ArgoUML's default capabilities:
WITHOUT_CLASSIFICATION	Parser.ParseAndUpdate(modelObject, s);
WITHOUT_CLASSIFICATION	remove from the model
WITHOUT_CLASSIFICATION	It is a UML element that is not a ModelElement
WITHOUT_CLASSIFICATION	lets see if this diagram has some figs on it
WITHOUT_CLASSIFICATION	no content of diagram
WITHOUT_CLASSIFICATION	we can delete figs like figrects now too
WITHOUT_CLASSIFICATION	TODO: If a namespace with sub-classdiagrams is deleted, then { confirmStr += Translator.localize( "optionpane.remove-from-model-will-remove-subdiagram"); doAsk = true; }
WITHOUT_CLASSIFICATION	we cannot delete the last diagram
WITHOUT_CLASSIFICATION	we cannot delete the model itself
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	ArgoDiagram activeDiagram = DiagramUtils.getActiveDiagram(); return (activeDiagram instanceof UMLClassDiagram);
WITHOUT_CLASSIFICATION	TODO: Probably really want to cancel editing ((FigTextEditor) focusOwner).cancelEditing();
WITHOUT_CLASSIFICATION	usage of other sureRemove method is legacy. They should be integrated.
WITHOUT_CLASSIFICATION	the diagram contains figs so lets ask the user if he/she is sure
WITHOUT_CLASSIFICATION	TODO: This catch block needs to be narrower and do something with the caught exception - tfm 20071120 Ignore
WITHOUT_CLASSIFICATION	TODO: All of the following can be broken if we have multiple targets selected
WITHOUT_CLASSIFICATION	OK Button ------------------------------------------
WITHOUT_CLASSIFICATION	Delete Button
WITHOUT_CLASSIFICATION	confirm with the user that he wants to delete, presenting the list of settings to delete
WITHOUT_CLASSIFICATION	procede with the deletion in the model
WITHOUT_CLASSIFICATION	disable the button since no row will be selected now
WITHOUT_CLASSIFICATION	end class SourcePathDialog
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	The user cancelled!
WITHOUT_CLASSIFICATION	Custom button text:
WITHOUT_CLASSIFICATION	0
WITHOUT_CLASSIFICATION	1
WITHOUT_CLASSIFICATION	2
WITHOUT_CLASSIFICATION	3
WITHOUT_CLASSIFICATION	TRY SOME PREDECESSOR ERRORS
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Try adding the extension from the chosen filter.
WITHOUT_CLASSIFICATION	adding project files icon
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	do not use a custom Icon the titles of buttons default button title
WITHOUT_CLASSIFICATION	NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	end class ActionOpenProject
WITHOUT_CLASSIFICATION	TODO: see if the new target has a TV that we can proxy
WITHOUT_CLASSIFICATION	Try adding the default extension.
WITHOUT_CLASSIFICATION	LOG.debug("is a Base or Multiplicity");
WITHOUT_CLASSIFICATION	end class ActionSaveProjectAs
WITHOUT_CLASSIFICATION	only need to this from super()
WITHOUT_CLASSIFICATION	--------------------------------------------------------
WITHOUT_CLASSIFICATION	----- setup similar to the super() implementation -----
WITHOUT_CLASSIFICATION	This action performs the layout and triggers a redraw of the editor pane. @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	/ Proxy methods for real UMLModelElementTaggedValue /
WITHOUT_CLASSIFICATION	load of the new project just reuse of the ActionOpen object
WITHOUT_CLASSIFICATION	Rearrange the diagram layout
WITHOUT_CLASSIFICATION	Leave logging commented out by default for efficiency LOG.debug("determine rendering for: " + value); LOG.debug("show icon: " + showIcon);
WITHOUT_CLASSIFICATION	targets ought to be UML objects or diagrams
WITHOUT_CLASSIFICATION	TODO: We shouldn't need this as well as the above.
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end class TabProps
WITHOUT_CLASSIFICATION	If our map has any entries for this type, it's a connection type
WITHOUT_CLASSIFICATION	Get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	See if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	@see TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	put everything together
WITHOUT_CLASSIFICATION	no title looks better
WITHOUT_CLASSIFICATION	now remove the ones already applied.
WITHOUT_CLASSIFICATION	make lists
WITHOUT_CLASSIFICATION	make buttons
WITHOUT_CLASSIFICATION	ignored this event
WITHOUT_CLASSIFICATION	make buttons layout
WITHOUT_CLASSIFICATION	make listeners
WITHOUT_CLASSIFICATION	Remove the element from Available List
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Implements the source path controller. NOTE: If requested in the future this could be returned from the language modules. TODO: Update this to use the UML 1.4 TagDefinition mechanism instead of UML 1.3 String type tag types. The TagDefinition can be made more specific so that it just applies to Components with a <<sourceModule>> stereotype or something similar. - tfm @author euluis @since 0.17.1
WITHOUT_CLASSIFICATION	end of SourcePathControllerImpl class definition
WITHOUT_CLASSIFICATION	sb.append(Model.getFacade().getName(c));
WITHOUT_CLASSIFICATION	sb.append((String) Model.getFacade().getBody(c));
WITHOUT_CLASSIFICATION	MModelElement
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	make new column with LabelledLayout
WITHOUT_CLASSIFICATION	Comment.name text field - editing disabled
WITHOUT_CLASSIFICATION	Comment.body text field - editing disabled
WITHOUT_CLASSIFICATION	Since there are no buttons on this panel, we have to set the size of the buttonpanel, otherwise the title would not be aligned right.
WITHOUT_CLASSIFICATION	Only change the background colour if it is supplied by the LAF. Otherwise leave look and feel to handle this itself.
WITHOUT_CLASSIFICATION	In this case, the bounds are determined by the FigEdge
WITHOUT_CLASSIFICATION	In this case, the bounds are determined by the FigEdge
WITHOUT_CLASSIFICATION	In this case, the bounds (of the box) are determined by the FigClassAssociationClass
WITHOUT_CLASSIFICATION	In this case, the bounds (of the box) are determined by the FigClassAssociationClass
WITHOUT_CLASSIFICATION	A newly created AssociationClass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	A newly created AssociationClass may not have all its parts created by the time we are called
WITHOUT_CLASSIFICATION	TODO: Defer most of this work if the panel isn't visible - tfm
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	how to handle empty target lists? probably the TabProps should only show an empty pane in that case
WITHOUT_CLASSIFICATION	chooser.setSelectedFile(new File(fileName));
WITHOUT_CLASSIFICATION	So, let's do it the hard way:
WITHOUT_CLASSIFICATION	TODO: The following can be used when we drop Java 5 support or when an ImageIO GIF writer plugin is bundled cmd = new SaveGIFAction2(Translator.localize("action.save-gif"));
WITHOUT_CLASSIFICATION	If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	Anything else is handled the normal way
WITHOUT_CLASSIFICATION	Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	Java SE 6 has a native GIF writer, but it's not in Java 5. One is available in the JAI-ImageIO library, but we don't currently bundle that and at 6+ MB it seems like a heavyweight solution, but I don't have time to produce a stripped down version right now - tfm https:jai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();
WITHOUT_CLASSIFICATION	Anything else is handled the normal way
WITHOUT_CLASSIFICATION	Create an image which will do deferred rendering of the GEF diagram on demand as data is pulled from it
WITHOUT_CLASSIFICATION	Action to save a diagram as a GIF image in a supplied OutputStream. TODO: This requires Java 6 in its current state, so don't use. @author Tom Morris <tfmorris@gmail.com>
WITHOUT_CLASSIFICATION	we actually are computing max x & max y, not width & height
WITHOUT_CLASSIFICATION	Convert max x/y to width/height
WITHOUT_CLASSIFICATION	Get a DOMImplementation
WITHOUT_CLASSIFICATION	Create an instance of org.w3c.dom.Document
WITHOUT_CLASSIFICATION	Create an instance of the SVG Generator
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	LayerPerspective layer = DiagramUtils.getActiveDiagram().getLayer();
WITHOUT_CLASSIFICATION	we actually are computing max x & max y, not width & height
WITHOUT_CLASSIFICATION	Convert max x/y to width/height
WITHOUT_CLASSIFICATION	Get a DOMImplementation
WITHOUT_CLASSIFICATION	Create an instance of org.w3c.dom.Document
WITHOUT_CLASSIFICATION	Create an instance of the SVG Generator
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	"org.argouml.cognitive.critics",
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	handle multivalued tagged value
WITHOUT_CLASSIFICATION	Target has been deleted
WITHOUT_CLASSIFICATION	If the row is past the end of our current collection, return an empty string so they can add a new value
WITHOUT_CLASSIFICATION	tagValue = true;
WITHOUT_CLASSIFICATION	for debugging
WITHOUT_CLASSIFICATION	Return the ith element from a Collection. @param collection collection to get element from @param index index of the element to be returned @return the object
WITHOUT_CLASSIFICATION	We really shouldn't add it until after it is set up, but we need it to have an owner for the following method calls
WITHOUT_CLASSIFICATION	Since we aren't sure of ordering, fire event for whole table
WITHOUT_CLASSIFICATION	no way, we have to give up
WITHOUT_CLASSIFICATION	Do nothing during the deprecation period, then it can be removed.
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	get the first editable extent (which is OK unless there is more than one editable extent)
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	end class ActionImportFromSources
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	this is never downlighted...
WITHOUT_CLASSIFICATION	Only specified format are allowed.
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentMoved(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentResized(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	Set up the target and its model element variant.
WITHOUT_CLASSIFICATION	Set the tooltip of the arrow to open combined tools:
WITHOUT_CLASSIFICATION	If the target has changed notify the third party listener if it exists and dispatch a new element event listener to ourself. Otherwise dispatch a target reasserted to ourself.
WITHOUT_CLASSIFICATION	Set the minimum and preferred equal, so that the size is fixed for the labelledlayout.
WITHOUT_CLASSIFICATION	This will add a new ModelElement event listener after update is complete
WITHOUT_CLASSIFICATION	We presume that the container equals this PropPanel.
WITHOUT_CLASSIFICATION	Refresh the target for all our children which weren't getting while not visible
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This works - we do get an event - and now refresh the UI:
WITHOUT_CLASSIFICATION	to manage the case there are no label/component pairs but just one component
WITHOUT_CLASSIFICATION	If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	Assumes the next child is the labelled component
WITHOUT_CLASSIFICATION	Make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	If the child component is resizable then we don't know it's actual size yet. It will be calculated later as a proportion of the available left over space. For now this is flagged as zero.
WITHOUT_CLASSIFICATION	If a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	Project p = ProjectManager.getManager().getCurrentProject(); Collection elems = ModelManagementHelper.getHelper() .getAllModelElementsOfKind(MClassifier.class);
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	Allow listening to other elements: removeOtherModelEventListeners(listTarget);
WITHOUT_CLASSIFICATION	setDoubleBuffered(true);
WITHOUT_CLASSIFICATION	TRY SOME MORE COMPLEX MOVING
WITHOUT_CLASSIFICATION	Implements backspace functionality
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	there is a selection
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	end class ActionCut
WITHOUT_CLASSIFICATION	Allow listening to other elements: addOtherModelEventListeners(listTarget);
WITHOUT_CLASSIFICATION	if there is a selection on the clipboard
WITHOUT_CLASSIFICATION	get localised strings once only
WITHOUT_CLASSIFICATION	setting the icon
WITHOUT_CLASSIFICATION	setting the tooltip to type and name
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentShown(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Update our model with our saved target
WITHOUT_CLASSIFICATION	Stop updating model when we're not visible
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	in UML2, a td is a property of a stereotype in a profile
WITHOUT_CLASSIFICATION	Only update our model if we're visible
WITHOUT_CLASSIFICATION	Most likely cause of this is that someone deleted our target with the event pump turned off so we didn't get notification. Nothing we can do about it now and we are changing targets anyway, so just log it.
WITHOUT_CLASSIFICATION	This target is a statemachine, for which no diagram exists yet, so, let's use it.
WITHOUT_CLASSIFICATION	end class TabTaggedValues
WITHOUT_CLASSIFICATION	setEnabled((Globals.clipBoard != null && !Globals.clipBoard.isEmpty()) || !isSystemClipBoardEmpty());
WITHOUT_CLASSIFICATION	end class ActionPaste
WITHOUT_CLASSIFICATION	The target is a valid context.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Let's just build a Statemachine, and put it in a suitable namespace.
WITHOUT_CLASSIFICATION	Follow well-formedness rule for a Class [2]. Determine the owning namespace for the statemachine:
WITHOUT_CLASSIFICATION	upperPanel.setBorder(BorderFactory.createEtchedBorder());
WITHOUT_CLASSIFICATION	buttonBox.add(Box.createRigidArea(new Dimension(0, 20)));
WITHOUT_CLASSIFICATION	String title = getUI().getDialogTitle(this);
WITHOUT_CLASSIFICATION	Test if the given namespace is a valid namespace to add the diagram to. TODO: This method was created to facilitate the merge of this class with ActionAddDiagram. @param ns the namespace to check @return Returns <code>true</code> if valid.
WITHOUT_CLASSIFICATION	TODO: Since there may be multiple top level elements in a project, this should be using the default Namespace (currently undefined) or something similar
WITHOUT_CLASSIFICATION	button action:
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Make sure it's parseable as an number
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	select.setText(Translator.localize("action.select"));
WITHOUT_CLASSIFICATION	select.add(ActionAddEventAsDeferrableEvent.SINGLETON);
WITHOUT_CLASSIFICATION	newMenu.setText(Translator.localize("action.new"));
WITHOUT_CLASSIFICATION	(MExtend)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	repair action for possible NP after load
WITHOUT_CLASSIFICATION	(MClassifier)
WITHOUT_CLASSIFICATION	TRY SOME MORE ERRORS
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	(MModelElement)
WITHOUT_CLASSIFICATION	to be able to remove dep's later
WITHOUT_CLASSIFICATION	to be able to remove dependencies later
WITHOUT_CLASSIFICATION	ADDONLY_COMMAND determines a changeability kind. TODO: Removed from UML 2.x. Phase out of UI - tfm - 20070529
WITHOUT_CLASSIFICATION	TODO: Removed from UML 2.x - phase out usage - tfm 20070530
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	because we're listening for stereotypes being added and removed but we're really interested in their owned tag definitions, the default implementation won't work for us
WITHOUT_CLASSIFICATION	end class ActionAddAttribute
WITHOUT_CLASSIFICATION	Ask to be notified of any changes to TagDefinitions so that we can track new ones, name changes, etc
WITHOUT_CLASSIFICATION	since UML2 it's easier: TDs only via stereotypes
WITHOUT_CLASSIFICATION	Just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	A stereotype got applied or removed Just mark for rebuild next time since we use lazy loading
WITHOUT_CLASSIFICATION	@see Namespace#pushNamespaceElement(NamespaceElement)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	All strings collate before all UML elements
WITHOUT_CLASSIFICATION	All strings collate before all UML elements
WITHOUT_CLASSIFICATION	Compare path of two elements in reverse order (inner to outer) using a primary strength text collator. This will collate e, E, �, � together, but not eliminate non-identical strings which collate in the same place. @return equivalent of list1.compareTo(list2)
WITHOUT_CLASSIFICATION	and then by their enclosing path to fully distinguish them
WITHOUT_CLASSIFICATION	Elements are collated first by name hoping for a quick solution
WITHOUT_CLASSIFICATION	Keep track of first non-equal comparison to use in case the case-insensitive comparisons all end up equal
WITHOUT_CLASSIFICATION	Add the action to the component
WITHOUT_CLASSIFICATION	It's illegal in UML to have multiple elements in a namespace with the same name, but if it happens, keep them distinct so the user has a chance of catching the error. Pick an arbitrary, but stable, collating order. We don't call them equal because otherwise one will get eliminated from the TreeSet where this comparator is used.
WITHOUT_CLASSIFICATION	If the strings differed only in non-primary characteristics at some point (case, accent, etc) pick an arbitrary, but stable, collating order.
WITHOUT_CLASSIFICATION	{transient=false, volatile=false}
WITHOUT_CLASSIFICATION	Argo customization
WITHOUT_CLASSIFICATION	prohibit instantiation
WITHOUT_CLASSIFICATION	KeyEvent.isActionKey() method
WITHOUT_CLASSIFICATION	Apparently this object had no getItemUID
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	Apparently this object had no getUUID
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a getItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently this object had no setItemUID
WITHOUT_CLASSIFICATION	Apparently it had a setItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	Apparently it had a setItemUID, but we're not allowed to call it
WITHOUT_CLASSIFICATION	class preloading, so packages are there...
WITHOUT_CLASSIFICATION	...getPackage() can return null's, so we have to cater for this:
WITHOUT_CLASSIFICATION	make this thread interruptible, if called from SwingWorker
WITHOUT_CLASSIFICATION	Switch the value back off, so that we will get notified again next time.
WITHOUT_CLASSIFICATION	Ignore any nested exceptions. We don't want infinite loop.
WITHOUT_CLASSIFICATION	Didn't work.
WITHOUT_CLASSIFICATION	Create a proxy object around this handler that can be reflectively added as an Apple ApplicationListener
WITHOUT_CLASSIFICATION	Likely a NoSuchMethodException or an IllegalAccessException loading/invoking eawt.Application methods
WITHOUT_CLASSIFICATION	All of the ApplicationListener methods are void; return null regardless of what happens
WITHOUT_CLASSIFICATION	If the target method returns a boolean, use that as a hint
WITHOUT_CLASSIFICATION	For eclipse setup
WITHOUT_CLASSIFICATION	For ant setup
WITHOUT_CLASSIFICATION	When running from maven
WITHOUT_CLASSIFICATION	If we're setting a handler, enable the About menu item by calling com.apple.eawt.Application reflectively
WITHOUT_CLASSIFICATION	If we're setting a handler, enable the Preferences menu item by calling com.apple.eawt.Application reflectively
WITHOUT_CLASSIFICATION	Override OSXAdapter.callTarget to send information on the file to be opened
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the ant setup.
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.
WITHOUT_CLASSIFICATION	Ignore if the directory does not exist. This error will throw when running from the Eclipse setup.
WITHOUT_CLASSIFICATION	"org.argouml.notation.providers",fails because sub-packages fail (?) "org.argouml.notation.providers.java", "org.argouml.notation.providers.uml", "org.argouml.notation",fails because sub-packages fail (?) "org.argouml.notation.ui",
WITHOUT_CLASSIFICATION	There was a comment saying that the below has no cycles, but Classycle thinks there's a cycle here too, so I believe there really is one - tfm 20070702 "org.argouml.uml.cognitive.critics",
WITHOUT_CLASSIFICATION	TODO:{"org.argouml.ui", "org.argouml.cognitive.ui"},fails due to subpackages TODO:{"org.argouml.cognitive", "org.argouml.cognitive.critics"},
WITHOUT_CLASSIFICATION	{"org.argouml.kernel", "org.argouml.uml.diagram.ui"},why does this fail?
WITHOUT_CLASSIFICATION	do nothing by design
WITHOUT_CLASSIFICATION	These 3 steps are only needed for the 2 cases indicated with a X below.
WITHOUT_CLASSIFICATION	Obey the contract ourselves!
WITHOUT_CLASSIFICATION	register all of the event listener trackers
WITHOUT_CLASSIFICATION	remove all of the listeners
WITHOUT_CLASSIFICATION	fire all of the diagram events
WITHOUT_CLASSIFICATION	fire all of the generator events
WITHOUT_CLASSIFICATION	fire all of the help events
WITHOUT_CLASSIFICATION	fire all of the notation events
WITHOUT_CLASSIFICATION	verify all events were fired correctly
WITHOUT_CLASSIFICATION	keep track of total events fired
WITHOUT_CLASSIFICATION	keep track of which events fired
WITHOUT_CLASSIFICATION	X X
WITHOUT_CLASSIFICATION	initialize the event listener trackers which verify that all of the proper events were fired
WITHOUT_CLASSIFICATION	Display events are fired on the Swing event thread. We need to wait for them to be dispatched NOTE: if more display events are added to this test, this one needs to be last
WITHOUT_CLASSIFICATION	Notation events are fired on the Swing event thread. We assume that serializing on the final call is sufficient
WITHOUT_CLASSIFICATION	counts each bit that has been fired
WITHOUT_CLASSIFICATION	ResolvedCritic(String, List)
WITHOUT_CLASSIFICATION	ResolvedCritic(Critic, ListSet)
WITHOUT_CLASSIFICATION	ResolvedCritic(Critic, ListSet, boolean)
WITHOUT_CLASSIFICATION	testmc should now have an ItemUID so we should be able to create without adding a new ItemUID
WITHOUT_CLASSIFICATION	EnabledCM isRelevant checks if the critic is enabled initialize this to true to verify isRelevant returns true
WITHOUT_CLASSIFICATION	verify isRelevant returns true
WITHOUT_CLASSIFICATION	set enabled to false and check the opposite condition
WITHOUT_CLASSIFICATION	verify isRelevant not is false
WITHOUT_CLASSIFICATION	NotSnoozedCM isRelevant checks if the critic is snoozed snooze the critic to verify isRelevant returns false
WITHOUT_CLASSIFICATION	unsnooze the critic to verify the critic is not relevant
WITHOUT_CLASSIFICATION	verify isRelevant is true
WITHOUT_CLASSIFICATION	CurDecisionCM isRelevant checks to see if the critic has any decisions that have a priority > 0 and less than the priority of the critic. By default the critic has no decisions so isRelevant should return false.
WITHOUT_CLASSIFICATION	verify isRelevant is still false
WITHOUT_CLASSIFICATION	isRelevant should now be true
WITHOUT_CLASSIFICATION	isRelevant should still be true
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	initialize the ToDoList
WITHOUT_CLASSIFICATION	add a ToDoItem
WITHOUT_CLASSIFICATION	redundantly add item again which should be ignored
WITHOUT_CLASSIFICATION	size should be 1 since addition of second item would have been ignored
WITHOUT_CLASSIFICATION	retrieve item
WITHOUT_CLASSIFICATION	remove item
WITHOUT_CLASSIFICATION	size should be 0 since item was removed
WITHOUT_CLASSIFICATION	initialize the GoalModel
WITHOUT_CLASSIFICATION	check that the model was initialized with the unspecified goal
WITHOUT_CLASSIFICATION	change priority of unspecified goal so we can verify it was updated
WITHOUT_CLASSIFICATION	first verify that the set goal priority did not add an extra goal
WITHOUT_CLASSIFICATION	check that the model correctly updates a goal's priority
WITHOUT_CLASSIFICATION	test the removal of a goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	start desiring a goal which should add a goal and bump the size to 1
WITHOUT_CLASSIFICATION	number of goals should now be 1
WITHOUT_CLASSIFICATION	stop desiring the goal which should remove it from the model
WITHOUT_CLASSIFICATION	UMLSequenceDiagram seqdiag = new UMLSequenceDiagram();
WITHOUT_CLASSIFICATION	initialize test data
WITHOUT_CLASSIFICATION	This test calls ToDoList.addElement which requires the Model. We are able to get away with using the Mock model.
WITHOUT_CLASSIFICATION	checkAssignIDToObject(seqdiag, true, true);
WITHOUT_CLASSIFICATION	FigEdgeNote has no UUID
WITHOUT_CLASSIFICATION	checkAssignIDToObject(figassociationrole, true, true);
WITHOUT_CLASSIFICATION	checkAssignIDToObject(fighistorystate, true, true);
WITHOUT_CLASSIFICATION	checkAssignIDToObject(figstate, true, true);
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from Decision.UNSPEC
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	initialize a decision object with parameters
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	set the priority to a different value
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	verify the priority was correctly updated
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	set the name to a different value
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to Decision.UNSPEC
WITHOUT_CLASSIFICATION	test that properties were correctly initialized by the constructor
WITHOUT_CLASSIFICATION	initialize the Checklist
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	add some test data
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the size of the list
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	verify the items were correctly added
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	create a new list to test the addAll
WITHOUT_CLASSIFICATION	create a new list to test the addAll
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	add all of the test items from the first list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	verify the size of the new list
WITHOUT_CLASSIFICATION	initialize the ChecklistStatus
WITHOUT_CLASSIFICATION	Construct a CheckItem
WITHOUT_CLASSIFICATION	(1) test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	reset the values to something different
WITHOUT_CLASSIFICATION	(2) Construct another CheckItem
WITHOUT_CLASSIFICATION	test that the properties were correctly initialized
WITHOUT_CLASSIFICATION	verify that the equivalence test works
WITHOUT_CLASSIFICATION	initialize SnoozeOrder
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	unsnooze and verify its been disabled
WITHOUT_CLASSIFICATION	maybe next test is going to change in future
WITHOUT_CLASSIFICATION	test with a class in a package
WITHOUT_CLASSIFICATION	Let's make it a bit more difficult by setting the target:
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and an inner class
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	try with Statediagram
WITHOUT_CLASSIFICATION	Put the statemachine in the namespace of the class:
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	test with a package and a class and activity diagram
WITHOUT_CLASSIFICATION	build the Activity Diagram
WITHOUT_CLASSIFICATION	build the Activity Diagram
WITHOUT_CLASSIFICATION	In the next line, replacing makeEmptyProject by getCurrentProject fails the test, except when run in Eclipse. MVW: I have no idea why.
WITHOUT_CLASSIFICATION	We no longer send individual events, so next code is obsolete:
WITHOUT_CLASSIFICATION	We initialised Java Notation, so let's activate it:
WITHOUT_CLASSIFICATION	Needed for initialisations:
WITHOUT_CLASSIFICATION	set MetaProfile as a default profile
WITHOUT_CLASSIFICATION	create a dependency from the project's model to the MetaProfile
WITHOUT_CLASSIFICATION	remove the MetaProfile from the project's profile configuration
WITHOUT_CLASSIFICATION	save the project into a new file
WITHOUT_CLASSIFICATION	setup a user defined profile
WITHOUT_CLASSIFICATION	TRY GUARD/ITERATOR SYNTAX
WITHOUT_CLASSIFICATION	create a new project and assert that it has the MetaProfile as part of the project's profile configuration
WITHOUT_CLASSIFICATION	assert that the project's model element that had a dependency to the MetaProfile doesn't get inconsistent
WITHOUT_CLASSIFICATION	reopen the project and assert that the MetaProfile isn't part of the profile configuration, including the fact that the stereotype <<Critic>> isn't found
WITHOUT_CLASSIFICATION	assert that the project's model elements that had a dependency to the UML profile for Java are consistent
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	add it to the project configuration
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	create a dependency between the project's model and the user defined profile
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	load the project
WITHOUT_CLASSIFICATION	assert that the model element that depends on the profile is consistent
WITHOUT_CLASSIFICATION	remove the user defined profile and the directory where it is
WITHOUT_CLASSIFICATION	Success - expected exception
WITHOUT_CLASSIFICATION	Clean up after ourselves by deleting profile model
WITHOUT_CLASSIFICATION	Test both forms of addBaseClass
WITHOUT_CLASSIFICATION	Test remaining form of removeBaseClass
WITHOUT_CLASSIFICATION	by default the build already builds one default EP
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Flag to enable performance testing - off by default
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh ArgoUML session
WITHOUT_CLASSIFICATION	20 sec.
WITHOUT_CLASSIFICATION	Add one child.
WITHOUT_CLASSIFICATION	Performance testing parameters
WITHOUT_CLASSIFICATION	Add grandchild.
WITHOUT_CLASSIFICATION	Create a generalizable element with an element without children.
WITHOUT_CLASSIFICATION	Check periodically to see if we've exceeded time limit
WITHOUT_CLASSIFICATION	Add another child.
WITHOUT_CLASSIFICATION	Tree is created depth first, so this should be at the bottom
WITHOUT_CLASSIFICATION	Try changing namespace of element and make sure results track
WITHOUT_CLASSIFICATION	Populate our namespace hierarchy to the requested depth. Total number of created elements is children^maxLevel, so be careful not to increase parameters too much.
WITHOUT_CLASSIFICATION	TRY SOME GUARD/ITERATOR ERRORS
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#TestCase(String)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Make sure we have a root model for TagDefinitions to get put in.
WITHOUT_CLASSIFICATION	create the tree of objects
WITHOUT_CLASSIFICATION	copy package p1 into p2 package
WITHOUT_CLASSIFICATION	change the structure in p1 package
WITHOUT_CLASSIFICATION	verify the copied package
WITHOUT_CLASSIFICATION	verify the copied class
WITHOUT_CLASSIFICATION	verify the copied nested package and the copied interface
WITHOUT_CLASSIFICATION	verify the copied attribute
WITHOUT_CLASSIFICATION	See if we can copy a class right off
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if the other copy was just a lucky shot
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if two copies look like copies of eachother
WITHOUT_CLASSIFICATION	See if we can copy a datatype right off
WITHOUT_CLASSIFICATION	See if two copies look like copies of each other
WITHOUT_CLASSIFICATION	See if two copies look like copies of each other
WITHOUT_CLASSIFICATION	See if we can copy an interface right off
WITHOUT_CLASSIFICATION	Create a new tagged value with the given type and value and add it to a ModelElement.
WITHOUT_CLASSIFICATION	Update an existing tagged value on a model element.
WITHOUT_CLASSIFICATION	See if we can copy a package right off
WITHOUT_CLASSIFICATION	See if we can copy a stereotype right off
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	"Permission",
WITHOUT_CLASSIFICATION	Check to see if association still exists
WITHOUT_CLASSIFICATION	Expected IllegalArgumentException seen
WITHOUT_CLASSIFICATION	A parameterized class can only be the client of a single binding
WITHOUT_CLASSIFICATION	exception expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	expected - test success
WITHOUT_CLASSIFICATION	Create a new arg list with a different set of args (but same types)
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	not static
WITHOUT_CLASSIFICATION	Test passed
WITHOUT_CLASSIFICATION	Test passed
WITHOUT_CLASSIFICATION	NOT UML1.4
WITHOUT_CLASSIFICATION	non existent in UML1
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	not in UML1.4
WITHOUT_CLASSIFICATION	This is not a well formed model in a strict sense. See the multiplicity in UML 1.3 Figure 2-5.
WITHOUT_CLASSIFICATION	returns List
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Deleting the stereotype should cascade to the TagDefinition, then the TaggedValue
WITHOUT_CLASSIFICATION	TODO: constraints TODO: required tags
WITHOUT_CLASSIFICATION	Enumerate declaring class
WITHOUT_CLASSIFICATION	NOTE: Although it's not shown in the UML 1.4 spec, a TemplateArgument appears to be a datavalue (like MultiplicityRange) and can not be reused in multiple instances. The UML diagrams don't show it as a composition, but it effectively is.
WITHOUT_CLASSIFICATION	Must be called after setImplementation.
WITHOUT_CLASSIFICATION	Enumerate fields
WITHOUT_CLASSIFICATION	Enumerate constructors
WITHOUT_CLASSIFICATION	Indicate that the test was validated
WITHOUT_CLASSIFICATION	TODO: Look up class in truth table
WITHOUT_CLASSIFICATION	Check superclass. Make sure this class does not extend or reference non-ArgoUML classes
WITHOUT_CLASSIFICATION	Enumerate methods Enumerate method arguments
WITHOUT_CLASSIFICATION	Not currently present as token in Model.getFacade(). NIF: runTruthTest(Model.getFacade().isAElement(o), Model.getFacade().ELEMENT); NIF: runTruthTest(Model.getFacade().isAExpression(o), Model.getFacade().EXPRESSION); NIF: runTruthTest(Model.getFacade().isAExtensionPoint(o), Model.getFacade().EXTENSION_POINT); NIF: runTruthTest(Model.getFacade().isAFeature(o), Model.getFacade().FEATURE);
WITHOUT_CLASSIFICATION	NIF: runTruthTest(Model.getFacade().isAInteraction(o), Model.getFacade().INTERACTION);
WITHOUT_CLASSIFICATION	NIF: unTruthTest(Model.getFacade().isAMethod(o), Model.getMetaTypes().getMethod());
WITHOUT_CLASSIFICATION	runTruthTest(Model.getFacade().isARelationship(o), Model.getMetaTypes().getRelationship());
WITHOUT_CLASSIFICATION	NIF: runTruthTest(Model.getFacade().isAStructuralFeature(o), Model.getMetaTypes().getStructuralFeature()); NIF: runTruthTest(Model.getFacade().isATaggedValue(o), Model.getMetaTypes().getTaggedValue());
WITHOUT_CLASSIFICATION	Call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	Call methods that exists for all objects and that always return something meaningful
WITHOUT_CLASSIFICATION	Multiplicity, MultiplicityRange, and all Expression subtypes don't have 0-argument create methods, so we special case them.
WITHOUT_CLASSIFICATION	Find the create method in the offical API
WITHOUT_CLASSIFICATION	Now get the factory implementation method to be invoked
WITHOUT_CLASSIFICATION	Here it is another object sent to the test.
WITHOUT_CLASSIFICATION	Here it is another object sent to the test.
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	Make sure we start off clean
WITHOUT_CLASSIFICATION	Delete the model and make sure everything inside goes with it
WITHOUT_CLASSIFICATION	The association should have same namespace as from class
WITHOUT_CLASSIFICATION	Only one end should be navigable
WITHOUT_CLASSIFICATION	"UseCaseInstance", Gone in UML 2.x & unused by ArgoUML
WITHOUT_CLASSIFICATION	Set namespace so buildAssocationRole works
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Correct Exception was thrown.
WITHOUT_CLASSIFICATION	Build an activity graph with a single action state the way the GUI would
WITHOUT_CLASSIFICATION	This is a private method in Model.
WITHOUT_CLASSIFICATION	Handling methods that doesn't return
WITHOUT_CLASSIFICATION	Handling the isInitiated method
WITHOUT_CLASSIFICATION	Handling the initialise method
WITHOUT_CLASSIFICATION	Handle methods which return opaque objects
WITHOUT_CLASSIFICATION	one of the expected errors, just ignore
WITHOUT_CLASSIFICATION	Could not find model.
WITHOUT_CLASSIFICATION	Could not find model.
WITHOUT_CLASSIFICATION	Handle UML 1.4 metamodel which is a MOF 1.3 model
WITHOUT_CLASSIFICATION	Get a node's name along with the name of its parent (which we'll use to find the factory to create it with.
WITHOUT_CLASSIFICATION	UML 1.4
WITHOUT_CLASSIFICATION	UML 2.x
WITHOUT_CLASSIFICATION	XMI 2.1
WITHOUT_CLASSIFICATION	XMI 1.1
WITHOUT_CLASSIFICATION	Remap specific classes
WITHOUT_CLASSIFICATION	Only remap package if we didn't remap specific class
WITHOUT_CLASSIFICATION	The following UML 1.4 elements have been removed from UML 2.x, so we don't bother testing them.
WITHOUT_CLASSIFICATION	A few of our factories are slightly different than as declared in the UML 1.4 metamodel, so we remap them here. <metamodel, argouml>
WITHOUT_CLASSIFICATION	Packages to be remapped
WITHOUT_CLASSIFICATION	For those things which we've already migrated to UML 2.x syntax we need to map them back to their UML 1.4 equivalents during the migration period.
WITHOUT_CLASSIFICATION	Subsystem has been removed from UML 2.x
WITHOUT_CLASSIFICATION	TRY THE ACTIONS
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	abstract
WITHOUT_CLASSIFICATION	This is the XMI version used to encode the metamodel. We could parse deeper to pull out the actual UML version. The UML 1.4 version is at XMI/XMI.header/XMI.model[@xmi.version]. The UML 2.1.1 metamodel doesn't actually seem to contain its version.
WITHOUT_CLASSIFICATION	Because UML 1.4 & 2.1 metamodels are organized differently we need to traverse the hierarchy looking for our owning Package.
WITHOUT_CLASSIFICATION	Specific classes to be remapped remap.put("", "");
WITHOUT_CLASSIFICATION	Go the other way to lookup an element by path
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	ActivityGraphs
WITHOUT_CLASSIFICATION	Instance (in UML 1.4) and Classifier are abstract and not tested
WITHOUT_CLASSIFICATION	Extend, Include, UseCaseInstance & ExtensionPoint not implemented
WITHOUT_CLASSIFICATION	assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtend())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getInclude())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getUseCaseInstance())); assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getExtensionPoint())); ...
WITHOUT_CLASSIFICATION	State is concrete in UML 1.3, but becomes abstract in UML 1.4, so we never allow it to be created (and don't test creation)
WITHOUT_CLASSIFICATION	new InitProfileSubsystem().init();
WITHOUT_CLASSIFICATION	This should work now that they both have names
WITHOUT_CLASSIFICATION	this call could easily fall if there is e.g. no public default constructor. If it fails tweak the if/else tree above to accommodate the parameter or check if we need to test the particular method at all.
WITHOUT_CLASSIFICATION	If method not supported ignore failure
WITHOUT_CLASSIFICATION	Fine!
WITHOUT_CLASSIFICATION	Fine!
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	assertNotNull(Model.getUmlFactory().buildNode( Model.getMetaTypes().getState()));
WITHOUT_CLASSIFICATION	CommonBehaviorFactory DataTypesFactory ExtensionMechanismsFactory ModelManagementFactory
WITHOUT_CLASSIFICATION	set up all parameters. Some methods are invoked with primitives or collections, so we need to create them accordingly
WITHOUT_CLASSIFICATION	The following should fail
WITHOUT_CLASSIFICATION	and leave things unchanged
WITHOUT_CLASSIFICATION	This one should work except Java is not registered by default assertTrue(settings.setNotationLanguage("Java")); assertEquals("Java", settings.getNotationLanguage());
WITHOUT_CLASSIFICATION	NotationProviderFactory2.getInstance().addNotationProvider(1234, name, MyNP.class); NotationProvider notationProvider = NotationProviderFactory2.getInstance().getNotationProvider( 1234, new Object()); assertTrue("Test notation provider for 1234 not found", notationProvider != null);
WITHOUT_CLASSIFICATION	Constructor.
WITHOUT_CLASSIFICATION	Constructor. @param me an Object
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	reuse signal event:
WITHOUT_CLASSIFICATION	reuse call event:
WITHOUT_CLASSIFICATION	reuse time event:
WITHOUT_CLASSIFICATION	reuse change event:
WITHOUT_CLASSIFICATION	try creating a string from the generated modelelements:
WITHOUT_CLASSIFICATION	try creating a TimeEvent
WITHOUT_CLASSIFICATION	try changing the triggertype to ChangeEvent
WITHOUT_CLASSIFICATION	nested class:
WITHOUT_CLASSIFICATION	nested class:
WITHOUT_CLASSIFICATION	No need to check any further if we fail the 1st part.
WITHOUT_CLASSIFICATION	START TESTING STUFF
WITHOUT_CLASSIFICATION	TRY MOVING IN A SIMPLE MANER
WITHOUT_CLASSIFICATION	TRY SOME ERRORS
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	If we can't find a model, return the outermost containing model element
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	This swaps the direction of m3:
WITHOUT_CLASSIFICATION	This swaps the direction of m3 back: the colon is obliged, but the / not and the 2nd dot also not
WITHOUT_CLASSIFICATION	Notation allows to add or modify things, not remove. Hence, this does nothing:
WITHOUT_CLASSIFICATION	The expected exception is thrown.
WITHOUT_CLASSIFICATION	Both diagram types shall show sequence numbers when requested:
WITHOUT_CLASSIFICATION	But the collaboration diagram refuses to leave them out:
WITHOUT_CLASSIFICATION	If the message has a name, but no action, then show the name:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a script, then show the script:
WITHOUT_CLASSIFICATION	TODO: Should there really be () here?
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and an empty script, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and an expression with no script, then show the operation:
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a named script with parameters, then show the script:
WITHOUT_CLASSIFICATION	TODO: Why is there a space before the ( here, and not in case of the operation name?
WITHOUT_CLASSIFICATION	The action still has the argument from above.
WITHOUT_CLASSIFICATION	If a message has a name and a named operation and a script with parameters but without name, then show the operation name:
WITHOUT_CLASSIFICATION	this is not a very useful transition
WITHOUT_CLASSIFICATION	One of everything
WITHOUT_CLASSIFICATION	Upper / Lower case
WITHOUT_CLASSIFICATION	Mixed case
WITHOUT_CLASSIFICATION	A complex internal transition
WITHOUT_CLASSIFICATION	These are NOT entry/exit/do activities!
WITHOUT_CLASSIFICATION	Long list of internals
WITHOUT_CLASSIFICATION	or should the 1 be 0 ?
WITHOUT_CLASSIFICATION	deleting it all
WITHOUT_CLASSIFICATION	we want the b: Foo attribute, that is the second in the list
WITHOUT_CLASSIFICATION	If there is no script, then the language should not be maintained.
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ignored
WITHOUT_CLASSIFICATION	Success - expected exception
WITHOUT_CLASSIFICATION	Everything fine...
WITHOUT_CLASSIFICATION	Create file
WITHOUT_CLASSIFICATION	This is the normal case.
WITHOUT_CLASSIFICATION	Load a project which contains links to it
WITHOUT_CLASSIFICATION	test project readable files
WITHOUT_CLASSIFICATION	Standard UML 1.4 profile
WITHOUT_CLASSIFICATION	Create a default profile and record its contents
WITHOUT_CLASSIFICATION	Write the profile out to a temp file
WITHOUT_CLASSIFICATION	Read it back in to a new empty project
WITHOUT_CLASSIFICATION	Clean up our two models and the extent that we read profile in to
WITHOUT_CLASSIFICATION	setting up the dependent profile creation
WITHOUT_CLASSIFICATION	actual call that executes everything
WITHOUT_CLASSIFICATION	verifications
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	TODO: the following cleans up left overs from previous tests, but, preferably we shouldn't have to do this...
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	create profile model
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	save the profile into a xmi file
WITHOUT_CLASSIFICATION	Called during teardown
WITHOUT_CLASSIFICATION	Called during teardown
WITHOUT_CLASSIFICATION	remove leftovers from other tests
WITHOUT_CLASSIFICATION	TODO: User defined profile support untested currently + "\t\t<userDefined>\n" + "\t\t\t<filename>\n" + "foo.profile\n" + "</filename>\n" + "\t\t\t<model>\n" + "foo.profile.package\n" + "\t\t\t</model>\n" + "\t\t</userDefined>\n"
WITHOUT_CLASSIFICATION	There seems to be cases where we don't erase the profile. Let's make sure it is deleted.
WITHOUT_CLASSIFICATION	[euluis] Using Windows style initial path, don't know if this fails in nixes.
WITHOUT_CLASSIFICATION	ensure that model subsystem implementation doesn't remember the profiles by changing their names and directories
WITHOUT_CLASSIFICATION	but, lookout, it doesn't work both ways
WITHOUT_CLASSIFICATION	assertEquals(DefaultOclEvaluator.getInstance().evaluate(vt, mi, "x.oclIsKindOf(Classifier)"), true);
WITHOUT_CLASSIFICATION	on a headless system (without display) this will crash
WITHOUT_CLASSIFICATION	private JPanel propertyPane;
WITHOUT_CLASSIFICATION	contains instances of each modelelement used for testing so that we only use each modelelement once
WITHOUT_CLASSIFICATION	propertyPane = TabProps
WITHOUT_CLASSIFICATION	theDetailsPane.getNamedTab(Translator.localize("tab.properties"));
WITHOUT_CLASSIFICATION	currently this is in this try block as it does not work _propertyPanel always has size 0,0
WITHOUT_CLASSIFICATION	ProjectBrowser exposes functionality, not components. assertNotNull(pb.getTabProps()); assertNotNull(pb.getStatusBar());
WITHOUT_CLASSIFICATION	Make sure this test happens on the AWT event thread
WITHOUT_CLASSIFICATION	JPanel docPane = pane.getTab(TabDocumentation.class);
WITHOUT_CLASSIFICATION	The target list is empty, re-emptying it again should not generate any events:
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	new target is of type object, refresh should not be called
WITHOUT_CLASSIFICATION	commented out next piece to remove failure of testcase. The testcase is probably correct but the implementation of DetailsPane is not pane.getTabs().setSelectedComponent(docPane); pane.targetSet(e); assertEquals(docPane, pane.getTabs().getSelectedComponent());
WITHOUT_CLASSIFICATION	new target is a fig, refresh should be called
WITHOUT_CLASSIFICATION	Setting one target should generate one event:
WITHOUT_CLASSIFICATION	new target is of type UMLClassDiagram, refresh should not be called
WITHOUT_CLASSIFICATION	TODO: We could check that the contents of the files differ.
WITHOUT_CLASSIFICATION	new target is a modelelement, refresh should not be called
WITHOUT_CLASSIFICATION	testing with subset of targets
WITHOUT_CLASSIFICATION	set same target again should not generate new events:
WITHOUT_CLASSIFICATION	TabProps gets selected! So, 2nd time right
WITHOUT_CLASSIFICATION	adding same targets list again should not generate new events:
WITHOUT_CLASSIFICATION	adding same target again should not generate new events:
WITHOUT_CLASSIFICATION	reverse order
WITHOUT_CLASSIFICATION	now remove one target by setting subset:
WITHOUT_CLASSIFICATION	TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());
WITHOUT_CLASSIFICATION	NOTE: we have to do this due to leftovers from other tests being causing strange errors when running in Eclipse.
WITHOUT_CLASSIFICATION	all tests should consider the threshold as inclusive value
WITHOUT_CLASSIFICATION	this test is a bit stupid, but nevertheless...
WITHOUT_CLASSIFICATION	{A, A} are offenders
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	everything ok
WITHOUT_CLASSIFICATION	same name, same participants, two offenders
WITHOUT_CLASSIFICATION	same name, different classes, everything ok
WITHOUT_CLASSIFICATION	same name, different classes, everything ok
WITHOUT_CLASSIFICATION	same name, same participants, two offenders
WITHOUT_CLASSIFICATION	{A,A,B,B} are offenders
WITHOUT_CLASSIFICATION	{} no offenders
WITHOUT_CLASSIFICATION	simply create 3 usecases and an actor in a package with individual names
WITHOUT_CLASSIFICATION	generalizations are not required to have unique names within a namespace
WITHOUT_CLASSIFICATION	All use cases and actors require associations hence all predicates evalulate to true
WITHOUT_CLASSIFICATION	build association build association between actor and top use case.
WITHOUT_CLASSIFICATION	test for return parameters. they can ALSO fail!
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	the graph should stay the same.
WITHOUT_CLASSIFICATION	build extend these parameters seem to be in correct order add an extend. We do not need an assoc on the extending use case
WITHOUT_CLASSIFICATION	build include it seems that the parameters for build include are just the other way round add an include: we do not need to have associtions on one
WITHOUT_CLASSIFICATION	setup
WITHOUT_CLASSIFICATION	Handle the simple cases Anything very exotic will fail, but that will be our clue that the test needs to be extended
WITHOUT_CLASSIFICATION	real test
WITHOUT_CLASSIFICATION	Some arbitrary bounds and settings - unused in test
WITHOUT_CLASSIFICATION	Make sure everything created gets deleted
WITHOUT_CLASSIFICATION	This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	This needs to be a concrete metatype, so we can't use the general, but abstract, Classifier. Replace with its concrete subtypes.
WITHOUT_CLASSIFICATION	setup the Project due to its use in SourcePathTableModel ctor
WITHOUT_CLASSIFICATION	create a class model element
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	save the project
WITHOUT_CLASSIFICATION	Tests used to be coded to assume immediate event delivery. They've been modified to use flush() where needed. - tfm oldEventPolicy = MFactoryImpl.getEventPolicy(); MFactoryImpl.setEventPolicy(MFactoryImpl.EVENT_POLICY_IMMEDIATE);
WITHOUT_CLASSIFICATION	Return a package to use as the Namespace.
WITHOUT_CLASSIFICATION	restore original event policy - not supported by MDR - tfm MFactoryImpl.setEventPolicy(oldEventPolicy);
WITHOUT_CLASSIFICATION	assertNotNull(actionSupplier.getValue(Action.SMALL_ICON));
WITHOUT_CLASSIFICATION	cont.setTarget(elem);
WITHOUT_CLASSIFICATION	Testing with more than one, since it failed with a manual test I made.
WITHOUT_CLASSIFICATION	assertNotNull(actionClient.getValue(Action.SMALL_ICON));
WITHOUT_CLASSIFICATION	The following will bring up a dialog box, so can't be run headless actionSupplier.actionPerformed(new ActionEvent(this, 0, "foo"));
WITHOUT_CLASSIFICATION	The following will bring up a dialog box, so can't be run headless actionClient.actionPerformed(new ActionEvent(this, 0, "foo"));
WITHOUT_CLASSIFICATION	create a new empty project
WITHOUT_CLASSIFICATION	Inconclusive
WITHOUT_CLASSIFICATION	Inconclusive
WITHOUT_CLASSIFICATION	setup a user defined profile which isn't loaded by the model subsystem and contains a stereotype and this contains a tag definition
WITHOUT_CLASSIFICATION	add the profile stereotype to the class
WITHOUT_CLASSIFICATION	add the profile to the project configuration
WITHOUT_CLASSIFICATION	This works when running the test from within Eclipse. Apparently Eclipse runs the tests using a class-loader that has the tests Folder among the URL:s.
WITHOUT_CLASSIFICATION	create a class in the project model
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	If no project was entered on the command line, try to reload the most recent project if that option is true
WITHOUT_CLASSIFICATION	Set the screen layout to what the user left it before, or to reasonable defaults.
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	case 4 erase it
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	TreeModel implementation
WITHOUT_CLASSIFICATION	ToDoListListener implementation
WITHOUT_CLASSIFICATION	case 1 after(...)
WITHOUT_CLASSIFICATION	initialize the model and profile subsystems to simulate a fresh ArgoUML session
WITHOUT_CLASSIFICATION	We have the path provided from the build script.
WITHOUT_CLASSIFICATION	Check the localized parts.
WITHOUT_CLASSIFICATION	Wait for all Model subsystem events to be delivered
WITHOUT_CLASSIFICATION	Wait for all AWT events to be dispatched and processed
WITHOUT_CLASSIFICATION	Check here if there are no incoming call actions if not then create an activation at the top of the lifeline
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	calcBounds();
WITHOUT_CLASSIFICATION	For classifiers
WITHOUT_CLASSIFICATION	This is null as until the first stereotype declaration is seen. After that it is non-null.
WITHOUT_CLASSIFICATION	newOp.setOwnerScope(op.getOwnerScope()); not needed in case of operation
WITHOUT_CLASSIFICATION	includes the "/" the "seq_expr" from the header javadoc the ":" is not included in "number" - it is always present
WITHOUT_CLASSIFICATION	Model.getExtensionMechanismsFactory().buildTaggedValue( tagName, new String[] {"true"}, Model.getFacade().getRoot(umlObject));
WITHOUT_CLASSIFICATION	MClassifiers cannot be Bag
WITHOUT_CLASSIFICATION	If the model repository doesn't manage a DI model then we must generate our Figs by inspecting PGML
WITHOUT_CLASSIFICATION	Read xsltStream into a temporary file Get url for temp file. openStream from url and wrap in StreamSource
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	instance variables
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	main methods
WITHOUT_CLASSIFICATION	if the object does not have a name, than no problem
WITHOUT_CLASSIFICATION	tree value isSelected(dont want a colored background) isExpanded isLeaf row(not important for rendering) hasFocus (dont want a focus rectangle)
WITHOUT_CLASSIFICATION	If we don't have it, find the trigger. If this fails it will keep its default value of null
WITHOUT_CLASSIFICATION	@Override public final void setHeadline(String s) { setupHeadAndDesc(); }
WITHOUT_CLASSIFICATION	We need to find the stereotype with the name "create" and the base class BehavioralFeature in the model. If there is none then we create one and put it there.
WITHOUT_CLASSIFICATION	first element is e.g. the class, but we need to have its namespace to recompute the offenders.
WITHOUT_CLASSIFICATION	- RedrawManager.unlock(); - _redrawer.repairDamage();
WITHOUT_CLASSIFICATION	if this composite state is not attached to a statemachine it is not the toplevel composite state.
WITHOUT_CLASSIFICATION	Get the assocations and connections. No problem (there is a separate critic) if this is a binary association or is an association role.
WITHOUT_CLASSIFICATION	If this was an association then there will be relevant information to fetch out of the mode arguments. If it not an association then these will be passed forward harmlessly as null.
WITHOUT_CLASSIFICATION	find selected rows and make a list of the model elements that are selected
WITHOUT_CLASSIFICATION	TreeCellRenderer implementation
WITHOUT_CLASSIFICATION	Build namespace hierarchy like this: g a /\ b c /\ d e f
WITHOUT_CLASSIFICATION	private PropertyprpTodo; private PropertyprpProperties; private PropertyprpDocumentation; private PropertyprpStyle; private PropertyprpSource; private PropertyprpConstraints; private PropertyprpTaggedValues;
WITHOUT_CLASSIFICATION	always fire changes in the case something has changed in the composition of the taggedValues collection.
WITHOUT_CLASSIFICATION	Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	CmdPaste cmd = new CmdPaste(); cmd.doIt();
WITHOUT_CLASSIFICATION	stereotypes applied to the target mostly control which TDs (but see below for other listeners too)
WITHOUT_CLASSIFICATION	TODO: Add referenceValue for tagged values which have a non-primitive type
WITHOUT_CLASSIFICATION	add a decision but set the critic priority to 0 so isRelevant should still be false
WITHOUT_CLASSIFICATION	TODO: We should also test that the object have been removed from their namespace. Collection c = Model.getFacade().getOwnedElements(p.getRoot());
WITHOUT_CLASSIFICATION	Because the notation events get dispatched on the Swing event thread, we need to use invokeAndWait to make sure that we don't return until they've been delivered
WITHOUT_CLASSIFICATION	Parent is Element, but it has no attributes or associations to check checkElementCopy(e1, e2);
WITHOUT_CLASSIFICATION	Extra careful now, not to keep any references to the second argument.
WITHOUT_CLASSIFICATION	Auto-create a return message for a call message
WITHOUT_CLASSIFICATION	get the source of the return message
WITHOUT_CLASSIFICATION	get the dest of the return message
WITHOUT_CLASSIFICATION	GridBagConstraints gridBagConstraints3 = new GridBagConstraints(); gridBagConstraints3.gridx = 2; gridBagConstraints3.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints3.insets = new Insets(5, 5, 0, 0); gridBagConstraints3.gridy = 3; GridBagConstraints gridBagConstraints2 = new GridBagConstraints(); gridBagConstraints2.gridx = 0; gridBagConstraints2.anchor = GridBagConstraints.NORTHWEST; gridBagConstraints2.insets = new Insets(5, 5, 0, 0); gridBagConstraints2.gridy = 3;
WITHOUT_CLASSIFICATION	Fig spf = null; Fig dpf = null; FigNode sfn = null; FigNode dfn = null;
WITHOUT_CLASSIFICATION	If the event originated from the window w/glass pane, consume the event
WITHOUT_CLASSIFICATION	Add GUI-internal stuff. GUI-internal stuff is panes, tabs, menu items that are part of the GUI subsystem i.e. a class in the org.argouml.ui-package. Things that are not part of the GUI, like everything that has any knowledge about UML, Diagrams, Code Generation, Reverse Engineering, creates and registers itself when that subsystem or module is loaded.
WITHOUT_CLASSIFICATION	The workarea is all the visible space except the menu, toolbar and status bar. Workarea is laid out as a BorderSplitPane where the various components that make up the argo application can be positioned.
WITHOUT_CLASSIFICATION	iterate through the tabbed panels to determine whether they should be enabled.
WITHOUT_CLASSIFICATION	Always select properties panel if defaultToProperties is true, and if properties panel is appropriate for selected perspective
WITHOUT_CLASSIFICATION	tabs.addTab(Translator.localize("dialog.find.tab.name-and-location"), nameLocTab);
WITHOUT_CLASSIFICATION	_tableModel.setTarget(_target); _table.setModel(_tableModel);
WITHOUT_CLASSIFICATION	if the current shortcut has not been set, then the actual shortcut value is the default one
WITHOUT_CLASSIFICATION	if the user cancelled the operation, we don't have to save anything
WITHOUT_CLASSIFICATION	create the return message modelelement with the interaction and the collaboration
WITHOUT_CLASSIFICATION	Generate and register the OSXAdapter, passing the methods we wish to use as delegates for various com.apple.eawt.ApplicationListener methods
WITHOUT_CLASSIFICATION	TODO: no Links in UML 2
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	event handling
WITHOUT_CLASSIFICATION	event handlers
WITHOUT_CLASSIFICATION	Fig accessors
WITHOUT_CLASSIFICATION	event handlers - MouseListener implementation
WITHOUT_CLASSIFICATION	the UML object wrong end of the edge
WITHOUT_CLASSIFICATION	We are going to add the ones still valid & new ones in the right sequence:
WITHOUT_CLASSIFICATION	This is perfectly normal and happens among other things within the call to setDiagram (below).
WITHOUT_CLASSIFICATION	events
WITHOUT_CLASSIFICATION	if the new edge implements the MouseListener interface it has to receive the mouseReleased() event
WITHOUT_CLASSIFICATION	user feedback
WITHOUT_CLASSIFICATION	needs to be updated for changes in Notation subsystem - tfm String nameStr = Notation.generate(this, getOwner()).trim(); getNameFig().setText(nameStr);
WITHOUT_CLASSIFICATION	GraphFactory implementation
WITHOUT_CLASSIFICATION	adapted from SelectionWButtons from line 280 calls a helper method to avoid this edge disappearing if the new source and dest are the same node.
WITHOUT_CLASSIFICATION	Give up if we are already on the graph. This is a bit inconistent with canAddNode above.
WITHOUT_CLASSIFICATION	Link the new extend relationship in to the ends. Remember we draw from the extension use case to the base use case.
WITHOUT_CLASSIFICATION	TODO: This is using the default platform character encoding specifying an encoding will produce more predictable results
WITHOUT_CLASSIFICATION	Check against "" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	next line does give user.home back but this is not compliant with how the project.uri works and therefore open and save project as give different starting directories. String directory = Globals.getLastDirectory();
WITHOUT_CLASSIFICATION	Correct the activator value
WITHOUT_CLASSIFICATION	We know this is a return action now. It must be pointing the opposite way to the activator.
WITHOUT_CLASSIFICATION	Java SE 6 has a native GIF writer, but it's not in Java 5. One is available in the JAI-ImageIO library, but we don't currently bundle that and at 6+ MB it seems like a heavyweight solution, but I don't have time to produce a stripped down version right now - tfm https:jai-imageio.dev.java.net/
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	Although we've historically written out the DOCTYPE, the DTD doesn't actually exist and this line will get stripped by the .uml file persister + "<!DOCTYPE profile SYSTEM \"profile.dtd\" >\n"
WITHOUT_CLASSIFICATION	check that the tag definition is returned by {@link UMLTagDefinitionComboBoxModel#getApplicableTagDefinitions(Object)}
WITHOUT_CLASSIFICATION	TODO real numbers not yet supported assertEquals(DefaultOclEvaluator.getInstance() .evaluate(null, null, "1.5"), 1.5);
WITHOUT_CLASSIFICATION	REMEMBER to change this if you change the number of MEs with source path settings
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	Make sure there is the minimum gap above the message being drawn
WITHOUT_CLASSIFICATION	Make sure there is the minimum gap below the message being drawn
WITHOUT_CLASSIFICATION	The FigMessage that triggered this FigActivation into existence
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	Get the region as the first Region in the State. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	Create the layer
WITHOUT_CLASSIFICATION	Create the renderer
WITHOUT_CLASSIFICATION	If we're not provided a namespace then get it from the diagram or the root
WITHOUT_CLASSIFICATION	Link the previous/next reference of the swimlanes according to the x order.
WITHOUT_CLASSIFICATION	GraphModel implementation
WITHOUT_CLASSIFICATION	make space for the clarifier for vertical symmetry margin between text and border
WITHOUT_CLASSIFICATION	MutableGraphModel implementation
WITHOUT_CLASSIFICATION	actions for toolbar
WITHOUT_CLASSIFICATION	VetoableChangeListener implementation
WITHOUT_CLASSIFICATION	contructors
WITHOUT_CLASSIFICATION	event processing
WITHOUT_CLASSIFICATION	The purpose of this method is not explained and it give give NPE depending on z order of figs as they are read. For now ignore if null but for future lets delete this.
WITHOUT_CLASSIFICATION	Fig accessors
WITHOUT_CLASSIFICATION	fig accessors
WITHOUT_CLASSIFICATION	can't have a connection between 2 interfaces: get the 'other' end type
WITHOUT_CLASSIFICATION	If there's only a single child (and we're it's only parent), set a hint for where to place it when we get to its row
WITHOUT_CLASSIFICATION	Use "aSize" to build up the minimum size. Start with the size of the name fig and build up.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Both ends must be defined and nodes that are on the graph already.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action, create the activation, but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the dest and is a call action, create the activation, but don't add it until the height is set.
WITHOUT_CLASSIFICATION	if we are the destination of a create action, create the entire activation
WITHOUT_CLASSIFICATION	if we are the target of a destroy action the figlifeline ends here and we add the activation
WITHOUT_CLASSIFICATION	if we are the source of a return action the activation ends here.
WITHOUT_CLASSIFICATION	If we have a currentAct object that means have reached the end of the lifeline with a call or a create not returned. Add the activation to the list after setting its height to end at the end of the lifeline.
WITHOUT_CLASSIFICATION	we do nothing. No call to the parent
WITHOUT_CLASSIFICATION	we don't recalculate activations, just move them
WITHOUT_CLASSIFICATION	if is a classifier role, it must return all the related messages.
WITHOUT_CLASSIFICATION	if is a message, it must return the sender and the receiver of the message.
WITHOUT_CLASSIFICATION	Comments from anywhere in the model are allowed
WITHOUT_CLASSIFICATION	All other types of elements must be in this namespace
WITHOUT_CLASSIFICATION	we initialize the coordinates.
WITHOUT_CLASSIFICATION	we do nothing
WITHOUT_CLASSIFICATION	manage if cursor x is less than lastX1
WITHOUT_CLASSIFICATION	manage if cursor x is more than lastX2
WITHOUT_CLASSIFICATION	manage changes of direction...
WITHOUT_CLASSIFICATION	I have no direction yet
WITHOUT_CLASSIFICATION	we move down or up the messages that are downward the broom
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	we draw a cross
WITHOUT_CLASSIFICATION	we don't let the user move the messages horizontally.
WITHOUT_CLASSIFICATION	if the edge is near the bottom of the classifier roles, we enlarge all the FigClassifierRoles in the diagram.
WITHOUT_CLASSIFICATION	super(Model.getFacade().getName(op), null);
WITHOUT_CLASSIFICATION	we need the edge to be complete
WITHOUT_CLASSIFICATION	if the added edge is a Create Message it will affect the position of the ClassifierRole so it should be repositioned
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	the initial x is the left side of the activation
WITHOUT_CLASSIFICATION	put the x at the right side of the activation if needed
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head, the x must be in the border of the headFig.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders (java.lang.Object)
WITHOUT_CLASSIFICATION	if the y coordinate is before the classifier role y, we place the start in the corner of the fighead.
WITHOUT_CLASSIFICATION	if the y coordinate is inside the head, the x must be in the border of the headFig.
WITHOUT_CLASSIFICATION	Use a different notation as Messages on a collaboration diagram:
WITHOUT_CLASSIFICATION	This next argument may be used to switch off the generation of sequence numbers - this is still to be implemented. They are less desired in sequence diagrams, since they do not add any information. In collaboration diagrams they are needed, and they are still optional in sequence diagrams.
WITHOUT_CLASSIFICATION	Operations ...
WITHOUT_CLASSIFICATION	TODO: add logging, but this will never happen and is handled
WITHOUT_CLASSIFICATION	If possible we determine this by checking the destination and source Figs are the same. If this is not possible because the edge is not yet connected then we check the model.
WITHOUT_CLASSIFICATION	we update the activations...
WITHOUT_CLASSIFICATION	for performance, we check if this is a selfmessage if it is, we have just updated the activations
WITHOUT_CLASSIFICATION	This call seems not very robust. Yet to determine cause.
WITHOUT_CLASSIFICATION	this constructor is needed for PGMLStackParser to load saved diagrams. It does nothing, because PGMLStackParser will call setPoints later.
WITHOUT_CLASSIFICATION	vertical resizing
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	Get the region as the first Region in the State. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	There are no regions so create one and place the vertex there.
WITHOUT_CLASSIFICATION	There are one or more regions so find the one that the vertex was dropped in
WITHOUT_CLASSIFICATION	The vertex was dropped onto the diagram. Get the region as the first Region in the StateMachine. If there is no region in the StateMachine then create one.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	_x = x; _y = y; _w = w; _h = h;
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.PopupGenerator#getPopUpActions(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Create the layer
WITHOUT_CLASSIFICATION	nothing we can do about veto, so just ignore it
WITHOUT_CLASSIFICATION	Create the renderer
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	in this event we do nothing, only stop drawing the broom.
WITHOUT_CLASSIFICATION	There is a bug in GEF where positioning nodes can affect edge positions. We need to do 3 iterations to protect against that.
WITHOUT_CLASSIFICATION	1. Remember current message paths
WITHOUT_CLASSIFICATION	2. Reposition and resize nodes
WITHOUT_CLASSIFICATION	3. Now reposition messages based on their original position
WITHOUT_CLASSIFICATION	Compute the initial center position of the CR
WITHOUT_CLASSIFICATION	horizontal resizing
WITHOUT_CLASSIFICATION	Compute the final center position of the CR
WITHOUT_CLASSIFICATION	Self messages act differently so it is needed to move them separetly. Only self messages of selected CR should be horizontally translated.
WITHOUT_CLASSIFICATION	Create the graph model
WITHOUT_CLASSIFICATION	Y position of the new CR should match existing CRs Y position
WITHOUT_CLASSIFICATION	Init the sequence diagrams from the module
WITHOUT_CLASSIFICATION	debugging and looking at fig.headFig.figs[1]._currText I can see that it's working, but how to test it?
WITHOUT_CLASSIFICATION	Operations that work on elements:
WITHOUT_CLASSIFICATION	Operations that work on classes of objects:
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Object getImportedPackage(Object element);
WITHOUT_CLASSIFICATION	Object getIncludingCase(Object handle);
WITHOUT_CLASSIFICATION	Javadoc reviewed above this point - tfm /
WITHOUT_CLASSIFICATION	Object getImportingNamespace(Object element);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Object createStereotype();
WITHOUT_CLASSIFICATION	Implementation Note: Unlike many of the interfaces to the model there is no control to force a single instance of an XmiReader. This is to allow work objects generated by the implementation to be garbage collected when an XmiReader instance falls out of scope.
WITHOUT_CLASSIFICATION	ADiagramElementProperty delegate methods
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#add( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#exists( org.omg.uml.diagraminterchange.DiagramElement, org.omg.uml.diagraminterchange.Property)
WITHOUT_CLASSIFICATION	@see org.omg.uml.diagraminterchange.ADiagramElementProperty#getProperty( org.omg.uml.diagraminterchange.DiagramElement)
WITHOUT_CLASSIFICATION	easy interface to properties
WITHOUT_CLASSIFICATION	Here follows the interfaces that contain the enums of different kinds in the UML meta-model.
WITHOUT_CLASSIFICATION	Flow is not in UML 2.x - don't implement
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	additional support for tagged values
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Here follows the interfaces that contain the enums of different kinds in the UML meta-model.
WITHOUT_CLASSIFICATION	static variables
WITHOUT_CLASSIFICATION	constructors
WITHOUT_CLASSIFICATION	public methods
WITHOUT_CLASSIFICATION	end class UUIDManager
WITHOUT_CLASSIFICATION	Write out something for us to read back in
WITHOUT_CLASSIFICATION	Now read it and check the results.
WITHOUT_CLASSIFICATION	Create an empty file and try to read it
WITHOUT_CLASSIFICATION	Depends on implementation:
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	Construct an exception with a message and a causing exception. @param message the message @param c the cause of the exception public XmiReferenceException(String message, Throwable c) { super(message, c); }
WITHOUT_CLASSIFICATION	The netbeans SAXParser sets line number and column number to -1.
WITHOUT_CLASSIFICATION	The xerces SAXParser sets line number and column number to 1.
WITHOUT_CLASSIFICATION	Not true in general, but should be true for our test models
WITHOUT_CLASSIFICATION	This throws org.argouml.model.XmiException: Unknown element in XMI file : Model because the UML 1.3->1.4 converter can only handle XMI 1.0, not 1.1
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	If the region is changed to another region then we make sure that a delete event is not fired as a result. $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	In this case, either the container was not set, or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	The only way a region is set to null is if we're deleting the vertex in which case we do nothing special so that the removal of the state triggers a delete event.
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO:
WITHOUT_CLASSIFICATION	In UML a message could have an Action. In UML2 it never does.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	No body found.
WITHOUT_CLASSIFICATION	oops we already have the body
WITHOUT_CLASSIFICATION	return handle.stringValue();
WITHOUT_CLASSIFICATION	public Collection<Element> getExtendedElements(Object handle) {
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	Gone from UML 2.x throw new NotImplementedException();
WITHOUT_CLASSIFICATION	Get all the relationships, that this model element has. and filter everything, that is not an import.
WITHOUT_CLASSIFICATION	Can't be done in the general case of federated repositories, but at least get what we can find for the current resource set
WITHOUT_CLASSIFICATION	MultiplicityElement is now an interface implemented by element types that support multiplicities - tfm
WITHOUT_CLASSIFICATION	should be Element not EObject really
WITHOUT_CLASSIFICATION	Classifier powerType =
WITHOUT_CLASSIFICATION	TODO: Signal -> Receptions association not navigable in this direction
WITHOUT_CLASSIFICATION	in UML2, the tag definition is the attribute itself
WITHOUT_CLASSIFICATION	usage differs from UML1
WITHOUT_CLASSIFICATION	usage differs from UML1
WITHOUT_CLASSIFICATION	Transitions can have multiple Triggers now
WITHOUT_CLASSIFICATION	Gone in UML 2.x
WITHOUT_CLASSIFICATION	ActionState, CallState, and SubactivityState have been replaced in UML 2.0 by explicitly modeled Actions
WITHOUT_CLASSIFICATION	TODO: Double check - tfm
WITHOUT_CLASSIFICATION	TODO: gone in UML 2
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2
WITHOUT_CLASSIFICATION	TODO: Double check - tfm
WITHOUT_CLASSIFICATION	TODO: double check - tfm
WITHOUT_CLASSIFICATION	below for UML 1.4 compatibility
WITHOUT_CLASSIFICATION	TODO: double check - tfm
WITHOUT_CLASSIFICATION	TODO: Changed from UML 1.4
WITHOUT_CLASSIFICATION	TODO: gone in UML 2
WITHOUT_CLASSIFICATION	TODO: changed for UML 2.x
WITHOUT_CLASSIFICATION	TODO: gone from UML 2
WITHOUT_CLASSIFICATION	has <<subsystem>> stereotype
WITHOUT_CLASSIFICATION	TODO: Not exact, but close
WITHOUT_CLASSIFICATION	&& ((Action) handle).get
WITHOUT_CLASSIFICATION	Not in UML2
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Even though this is not relevant for UML2 we have code calling this that expects it for UML1.4 and we must handle it gracefully.
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	return ((RedefinableElement) handle).isRoot(); TODO: One part of UML 2.1.1 spec says that this is as above, but it appears to be gone - tfm
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	lifeline.setRepresents(prop);
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	A composite state contains at least one region
WITHOUT_CLASSIFICATION	an AssociationEnd is now a Property owned by an Association
WITHOUT_CLASSIFICATION	throw new NotImplementedException( "This is not a UML2 element"); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TODO: Exception has been removed for UML 2.x just return Signal for now - tfm
WITHOUT_CLASSIFICATION	Gone in UML 2.x - just Classifier now
WITHOUT_CLASSIFICATION	TODO: Not really the same thing, but close
WITHOUT_CLASSIFICATION	The name of the meta type is the class name (after the last .) and before the "Impl" or end of class name.
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2.x Return place holder for now
WITHOUT_CLASSIFICATION	TODO: no separate SyncState in UML 2.1 - tfm
WITHOUT_CLASSIFICATION	ActionSequence.class
WITHOUT_CLASSIFICATION	ClassifierInState.class
WITHOUT_CLASSIFICATION	Argument.class
WITHOUT_CLASSIFICATION	AttributeLink.class
WITHOUT_CLASSIFICATION	UninterpretedAction.class
WITHOUT_CLASSIFICATION	Access should be fast
WITHOUT_CLASSIFICATION	Iteration should be fast
WITHOUT_CLASSIFICATION	LiteralSpecification
WITHOUT_CLASSIFICATION	i.e. eventType == Notification.REMOVE
WITHOUT_CLASSIFICATION	implements CommandStack
WITHOUT_CLASSIFICATION	list.add("OpaqueExpression");
WITHOUT_CLASSIFICATION	LiteralSpecification list.add("LiteralNull");When other ok
WITHOUT_CLASSIFICATION	list.add("LiteralInteger");When other ok
WITHOUT_CLASSIFICATION	list.add("LiteralUnlimitedNatural");When other ok
WITHOUT_CLASSIFICATION	list.add("InstanceValue");
WITHOUT_CLASSIFICATION	TODO else => Exception !
WITHOUT_CLASSIFICATION	Can't be changed
WITHOUT_CLASSIFICATION	rewrite it after change setExpression ?
WITHOUT_CLASSIFICATION	as write in UML specification, we have size(bodies)==size(langs) we must have tabValues.length%2==0
WITHOUT_CLASSIFICATION	LiteralSpecification
WITHOUT_CLASSIFICATION	Can't be set
WITHOUT_CLASSIFICATION	rewrite it after change setExpression ?
WITHOUT_CLASSIFICATION	as write in UML specification, we have size(bodies)==size(langs) we must have tabValues.length%2==0
WITHOUT_CLASSIFICATION	A Link is an Assocation in UML2.x
WITHOUT_CLASSIFICATION	Link does not exist in UML2, a link is represented just as an association
WITHOUT_CLASSIFICATION	must not be used in UML2; we model a method as a OpaqueBehavior object that already has a body, so there is no need to have an intermediate expression object
WITHOUT_CLASSIFICATION	We need a method (operation implementation) to store the method body.
WITHOUT_CLASSIFICATION	Maybe this operation already has a method, that fits our purpose? In this case, try to reuse it, instead of creating a new implementation.
WITHOUT_CLASSIFICATION	Check, if we have to create a new implementation.
WITHOUT_CLASSIFICATION	Create a new implementation.
WITHOUT_CLASSIFICATION	And set the specification to the current operation.
WITHOUT_CLASSIFICATION	Add it to the operation's methods.
WITHOUT_CLASSIFICATION	Look, if there's already a java implementation
WITHOUT_CLASSIFICATION	Try to get the corresponding body and set it to the current body This _should_ work, if all the bodies were stored with their corresponding languages.
WITHOUT_CLASSIFICATION	Job done.
WITHOUT_CLASSIFICATION	It seems, there was no implementation of our current target language, so we just add one.
WITHOUT_CLASSIFICATION	We cannot set the body of this model element type.
WITHOUT_CLASSIFICATION	Removed from UML 2.x
WITHOUT_CLASSIFICATION	also parse 1_ or 0_N etc.
WITHOUT_CLASSIFICATION	WARNING - This has containment side effects! Eclipse UML2 will move the Property from the Classifier to the Association when the navigability is changed.
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	for other xmi files with further namespaces:
WITHOUT_CLASSIFICATION	eclipse namespaces:
WITHOUT_CLASSIFICATION	For the .uml files in the eclipse jar files, we need this:
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Not needed currently for UML 2
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	final Object scope,
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x
WITHOUT_CLASSIFICATION	Nothing to do
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	in UML2, we model a method as a Behavior (initially OpaqueBehavior)
WITHOUT_CLASSIFICATION	The interface realization will be created in the client namespace (client is a namespace)
WITHOUT_CLASSIFICATION	Extent ignored for eUML2 implementation (required for NetBeans MDR)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	maybe UML2 has these as constants somewhere
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	also apply subprofiles:
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Sets the value of an element#s property (tagged value). This method makes sure that a Collection of values is set if and only if the property is multivalued (upper multiplicity value greater 1), so passing a collection is safe. @see org.argouml.model.ExtensionMechanismsHelper#setValueOfTag(java.lang.Object, java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	commonTaggedValueTypes.add(org.eclipse.uml2.uml.resource.UMLResource.)
WITHOUT_CLASSIFICATION	remove base class by destroying the extension
WITHOUT_CLASSIFICATION	consider the property multiplicity
WITHOUT_CLASSIFICATION	or getDefaultValueFor(prop)?
WITHOUT_CLASSIFICATION	too bad, we choose to take the first value
WITHOUT_CLASSIFICATION	ready to set the value finally
WITHOUT_CLASSIFICATION	in case of a tagged value, the type shouldn't be set here
WITHOUT_CLASSIFICATION	not implementable in UML2, because property is missing
WITHOUT_CLASSIFICATION	also unapply subprofiles:
WITHOUT_CLASSIFICATION	also define subprofiles:
WITHOUT_CLASSIFICATION	{AssociationRole.class, ClassifierRole.class, },
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	{Link.class, Instance.class, }, {Transition.class, StateVertex.class, },
WITHOUT_CLASSIFICATION	{Message.class, ClassifierRole.class },
WITHOUT_CLASSIFICATION	Note for UML2 the aggregation ends are swapped
WITHOUT_CLASSIFICATION	Extend, but only between two use cases. Remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	in UML2 subsystem is a Component with <<subsystem>> stereotype so this must occur after the metaTypes.getComponent() case
WITHOUT_CLASSIFICATION	find the passed in container in validContainmentMap
WITHOUT_CLASSIFICATION	determine if metaType is a valid element for container
WITHOUT_CLASSIFICATION	UML 1.4.2 Spec section 4.5.3.20 [5] A GeneralizableElement may only be a child of GeneralizableElement of the same kind.
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Region to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	valid elements for a Profile to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Node to contain
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	A list of valid connections between elements, the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	If there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	If there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	If the array hasn't been flagged to indicate otherwise swap elements the elemnts and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a DataType to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Operation to contain
WITHOUT_CLASSIFICATION	valid elements for a Stereotype to contain
WITHOUT_CLASSIFICATION	valid elements for an Action to contain
WITHOUT_CLASSIFICATION	trying to get a built-in standard profile from eclipse UML2
WITHOUT_CLASSIFICATION	Removed from UML 2
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Roll back transaction to remove any partial results read
WITHOUT_CLASSIFICATION	We shouldn't get here, but just in case... We want a wide exception catcher to make sure our transaction always gets ended
WITHOUT_CLASSIFICATION	If we can find a nested SAX exception, it will have information on the line number, etc.
WITHOUT_CLASSIFICATION	Ignore if the extent never got created or has been deleted
WITHOUT_CLASSIFICATION	InputSource xformedInput = chainedTransform(transformFiles, pIs);
WITHOUT_CLASSIFICATION	InputSource xformedInput = chainedTransform(transformFiles, pIs);
WITHOUT_CLASSIFICATION	@see org.argouml.model.XmiReader#getXMIUUIDToObjectMap()
WITHOUT_CLASSIFICATION	Set up reader to be first filter in chain
WITHOUT_CLASSIFICATION	Set up source for style sheet
WITHOUT_CLASSIFICATION	Create & set up temporary output file
WITHOUT_CLASSIFICATION	In UML2.x there is no metaclass named Method, but we use the 'method' association of BehavioralFeature
WITHOUT_CLASSIFICATION	ret.setIsLeaf(false); ret.setIsRoot(false);
WITHOUT_CLASSIFICATION	Create filter for each style sheet and chain to previous filter/reader
WITHOUT_CLASSIFICATION	Create transformer and do transformation
WITHOUT_CLASSIFICATION	Set up for next iteration
WITHOUT_CLASSIFICATION	Create & set up temporary output file
WITHOUT_CLASSIFICATION	Silently ignore anything specified by caller attempt to continue
WITHOUT_CLASSIFICATION	we presume the stream is encoded using the default char encoding
WITHOUT_CLASSIFICATION	Delete the old extent first
WITHOUT_CLASSIFICATION	LOG.log(Level.WARNING, "Unable to find extent " + extent);
WITHOUT_CLASSIFICATION	Set the storage id for our repository so that MofIds will be unique (they are composed as "storageId":"serialNumber"). NOTE: The storage manager only looks for a few property names such as the StorageFactoryClassName. Everything else needs to be prefixed with "MDRStorageProperty." which gets deleted from the property name before it and its associated value are copied to an internal property table separate from the system property table.
WITHOUT_CLASSIFICATION	Connect to the repository
WITHOUT_CLASSIFICATION	Create an extent and read in our metamodel (M2 model)
WITHOUT_CLASSIFICATION	Create and start event pump first so it's available for all others
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getFacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelEventPump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Disable event delivery during model load
WITHOUT_CLASSIFICATION	If we've got a streaming input, copy it to make sure we'll be able to rewind it if necessary
WITHOUT_CLASSIFICATION	Use a transaction to avoid the performance penalty (3x) of MDR's autocommit mode
WITHOUT_CLASSIFICATION	If a UML 1.3 file, attempt to upgrade it to UML 1.4
WITHOUT_CLASSIFICATION	Roll back transaction from first attempt & start new one
WITHOUT_CLASSIFICATION	Clear the associated ID maps & reset starting collection
WITHOUT_CLASSIFICATION	Make sure we always have a default extent. The old extent will get deleted as part of creating the new extent.
WITHOUT_CLASSIFICATION	DataTypes is next so it's available for Kinds, ModelManagement, & Extensions
WITHOUT_CLASSIFICATION	Initialize remaining factories and helpers (but defer heavyweight ones until needed)
WITHOUT_CLASSIFICATION	Create a default extent for the user UML model. This will get replaced if a new model is read in from an XMI file.
WITHOUT_CLASSIFICATION	NOTE: If we switch to a persistent repository like the b-tree repository we'll want to keep the old extent(s) around
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCopyHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getChangeableKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getAggregationKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getPseudostateKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getScopeKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getConcurrencyKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDirectionKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getOrderingKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#setNodeInstance(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	Elements created after file load won't have index entries
WITHOUT_CLASSIFICATION	Normally the extent should exist already, but in the case of making an empty project, we may not have an extent yet, so create a default extent
WITHOUT_CLASSIFICATION	Private constructor for common work needed by both public constructors.
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getAllPossibleStereotypes(java.util.Collection, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getCommonTaggedValueTypes()
WITHOUT_CLASSIFICATION	there is nothing to do in UML1.4
WITHOUT_CLASSIFICATION	forbid instantiation
WITHOUT_CLASSIFICATION	MDR classes may have a UML or Uml prefix which should be removed.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	@see org.argouml.model.MetaTypes#getAbstraction()
WITHOUT_CLASSIFICATION	Delete Stimulii which have this as their dispatchAction
WITHOUT_CLASSIFICATION	Delete Messages which have this as their action
WITHOUT_CLASSIFICATION	Delete LinkEnds
WITHOUT_CLASSIFICATION	Delete AttributeLinks where this is the value
WITHOUT_CLASSIFICATION	Delete Stimuli which have this as a Sender or Receiver
WITHOUT_CLASSIFICATION	binary link
WITHOUT_CLASSIFICATION	Delete all SendActions which have this as signal
WITHOUT_CLASSIFICATION	Delete all SignalEvents which have this as the signal
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#deleteCollection(java.util.Collection)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#getDestination(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	Text was stored in name in UML 1.3
WITHOUT_CLASSIFICATION	The name of the meta type is the class name (after the last .) and before the next $ or end of class name.
WITHOUT_CLASSIFICATION	Delete CollaborationInstanceSets where this is the last participatingInstance
WITHOUT_CLASSIFICATION	Delete InteractionInstanceSets where this is the last participatingStimulus
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	this doesn't support I18N or multiple states, but it's just a default
WITHOUT_CLASSIFICATION	Partitions are composite elements and will get deleted implicitly Partition contents don't need to be deleted or checked
WITHOUT_CLASSIFICATION	@see org.netbeans.api.xmi.XMIReferenceProvider#getReference(javax.jmi.reflect.RefObject)
WITHOUT_CLASSIFICATION	Look for an existing reference matching our MofID
WITHOUT_CLASSIFICATION	probably redundant - just in case
WITHOUT_CLASSIFICATION	delete Messages which have this as sender or receiver
WITHOUT_CLASSIFICATION	Helper interfaces and methods.
WITHOUT_CLASSIFICATION	CHECKSTYLE:OFF - ignore too many parameters since API is fixed by MDR
WITHOUT_CLASSIFICATION	CHECKSTYLE:ON
WITHOUT_CLASSIFICATION	Shorthand notation for convenience
WITHOUT_CLASSIFICATION	Quick exit if it's a transaction event (we get a lot of them and they are all ignored)
WITHOUT_CLASSIFICATION	The 4-arg version of this method depends on this ordering. Don't change it!
WITHOUT_CLASSIFICATION	InteractionInstanceSets will get deleted automatically because they are associated by composition
WITHOUT_CLASSIFICATION	If this is the only message contained in the Interaction we delete the Interaction
WITHOUT_CLASSIFICATION	Object from a different file, register with superclass so it can resolve all references
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.XmiContext#getReference(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	/ Begin AndroMDA Code /
WITHOUT_CLASSIFICATION	if the model URL has a suffix of '.zip' or '.jar', get the suffix without it and store it in the urlMap
WITHOUT_CLASSIFICATION	Several tries to construct a URL that really exists.
WITHOUT_CLASSIFICATION	If systemId is publicId previously mapped from a systemId, try to use the systemId.
WITHOUT_CLASSIFICATION	Try to find suffix in module list.
WITHOUT_CLASSIFICATION	search the classpath
WITHOUT_CLASSIFICATION	Give up and let superclass deal with it.
WITHOUT_CLASSIFICATION	remove the first prefix because it may be an archive (like magicdraw)
WITHOUT_CLASSIFICATION	We've got a profile read pending - handle it ourselves now
WITHOUT_CLASSIFICATION	shouldn't happen
WITHOUT_CLASSIFICATION	Otherwise if it's not something we've already read, just punt to the super class.
WITHOUT_CLASSIFICATION	Unfortunately the MDR super implementation throws DebugException with just the message from the causing exception rather than nesting the exception itself, so we don't have all the information we'd like
WITHOUT_CLASSIFICATION	Only add MOF elements, not primitive datatypes
WITHOUT_CLASSIFICATION	Only add MOF elements, not primitive datatypes
WITHOUT_CLASSIFICATION	For Transition use indirection through target StateVertex
WITHOUT_CLASSIFICATION	Look for an existing reference matching our MofID
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Get all (UML) metaclasses
WITHOUT_CLASSIFICATION	Object[] args = { typeName, elemName }; misc.name.element-import = Imported {0}: {1} return Translator .localize("misc.name.element-import", args);
WITHOUT_CLASSIFICATION	Although this only handles one level of package, it is OK for UML 1.4 because of clustering Get the right UML package in the extent
WITHOUT_CLASSIFICATION	Return the metatype proxy
WITHOUT_CLASSIFICATION	we must find out if the activator itself does not have message as it's activator
WITHOUT_CLASSIFICATION	An activator can't also be a predecessor of a message
WITHOUT_CLASSIFICATION	This double 'for' loop may be optimised as follows: - Use arrays in stead of a Set for bases - Have the second loop start from the element after base1 ... but I chose not to do this, since the gain is small, and this is only used for a lazily filled combo. BTW: This is also used by Notation.
WITHOUT_CLASSIFICATION	An Association can only have a single unnamed ClassifierRole, so
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	eliminate Classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	WFR 2.10.3.3 #4
WITHOUT_CLASSIFICATION	eliminate Classifiers which already have an unnamed role
WITHOUT_CLASSIFICATION	We need to verify that ns is a Package, if not - find its parent package! Otherwise this causes an exception when creating a sequence diagram for a ClassifierRole.
WITHOUT_CLASSIFICATION	No initialization currently
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	if we are unnamed eliminate all classifiers which are already the base of some role
WITHOUT_CLASSIFICATION	|| context instanceof Collaboration || context instanceof Model
WITHOUT_CLASSIFICATION	@see org.netbeans.lib.jmi.xmi.XMIHeaderProvider#writeHeader(java.io.Writer)
WITHOUT_CLASSIFICATION	NOTE: The <XMI.header></XMI.header> is provided for us
WITHOUT_CLASSIFICATION	Not implemented in MDR
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeModelEventListener(java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	Clean up index entries
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the corresponding property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	and a change event for that end
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create an event for the other end of the association
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Create a change event for the associated property
WITHOUT_CLASSIFICATION	will always be null
WITHOUT_CLASSIFICATION	Cut down on debugging noise
WITHOUT_CLASSIFICATION	Unregister deleted instances after all events have been delivered
WITHOUT_CLASSIFICATION	Any given listener is only called once even if it is registered for multiple relevant matches
WITHOUT_CLASSIFICATION	This will include all subtypes registered
WITHOUT_CLASSIFICATION	(LOG.isDebugEnabled()
WITHOUT_CLASSIFICATION	For debugging you probably want either this OR the logging for every event which is fired - not both
WITHOUT_CLASSIFICATION	LOG.isDebugEnabled()
WITHOUT_CLASSIFICATION	Fetch the key before going in synchronized mode
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, " Class " + name + " has subtypes : " + names.get(name));
WITHOUT_CLASSIFICATION	convert classname to RefObject
WITHOUT_CLASSIFICATION	If we don't have a MofClass, see if we can get one from the instance
WITHOUT_CLASSIFICATION	If we still don't have a MofClass, something's wrong
WITHOUT_CLASSIFICATION	throw new IllegalArgumentException("Property '" + attribute + "' doesn't exist in metamodel");
WITHOUT_CLASSIFICATION	If there isn't a 3rd column then this represents a connection of elements of the same type.
WITHOUT_CLASSIFICATION	Save the model (current)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getAddOnly()
WITHOUT_CLASSIFICATION	Lookup primary key, creating new entry if needed
WITHOUT_CLASSIFICATION	Lookup primary key, creating new entry if needed
WITHOUT_CLASSIFICATION	If there are no subkeys, register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	UML 2.x only
WITHOUT_CLASSIFICATION	Look for a TagDefinition matching the given name
WITHOUT_CLASSIFICATION	Create a new TagDefinition if none found
WITHOUT_CLASSIFICATION	only add all if there are some to add.
WITHOUT_CLASSIFICATION	Clear target so that multiple copies have no effect (other than inefficiency)
WITHOUT_CLASSIFICATION	Delete all TaggedValues with this type
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.
WITHOUT_CLASSIFICATION	"Element");
WITHOUT_CLASSIFICATION	Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state. If this is broken by deletion of substate then we delete the other remaining substates.
WITHOUT_CLASSIFICATION	The effect will get deleted automatically by MDR, unlike the Guard.
WITHOUT_CLASSIFICATION	Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	The following is specifically for Realizations
WITHOUT_CLASSIFICATION	The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215
WITHOUT_CLASSIFICATION	A list of valid connections between elements, the connection type first and then the elements to be connected
WITHOUT_CLASSIFICATION	TODO: constraints TODO: required tags
WITHOUT_CLASSIFICATION	specifies valid elements for a Model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Model to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Package to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a classifier to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Interface to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Signal to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Actor to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Use Case to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Node to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Enumeration to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a DataType to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Operation to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an Event to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an State to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an CallState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SimpleState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SubactivityState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ActionState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ActionState to contain
WITHOUT_CLASSIFICATION	supports implementation of some special elements not supported by buildNode
WITHOUT_CLASSIFICATION	the list of namespaces to return
WITHOUT_CLASSIFICATION	If our map has any entries for this type, it's a connection type
WITHOUT_CLASSIFICATION	Get the list of valid model item pairs for the given connection type
WITHOUT_CLASSIFICATION	See if there's a pair in this list that match the given model elements
WITHOUT_CLASSIFICATION	find the passed in container in validContainmentMap
WITHOUT_CLASSIFICATION	determine if metaType is a valid element for container
WITHOUT_CLASSIFICATION	UML 1.4.2 Spec section 4.5.3.20 [5] A GeneralizableElement may only be a child of GeneralizableElement of the same kind.
WITHOUT_CLASSIFICATION	Begin a transaction - we'll do a bunch of reads first to collect a set of elements to delete - then delete them all
WITHOUT_CLASSIFICATION	no else here to make sure Classifier with its double inheritance goes ok
WITHOUT_CLASSIFICATION	no else here to make sure AssociationClass goes ok
WITHOUT_CLASSIFICATION	no else to handle multiple inheritance of linkobject
WITHOUT_CLASSIFICATION	If we get this with the repository locked, it means our root model element was already deleted. Nothing to do...
WITHOUT_CLASSIFICATION	Our wrapped version of the same error
WITHOUT_CLASSIFICATION	end our transaction
WITHOUT_CLASSIFICATION	if there are no owned elements then return empty list
WITHOUT_CLASSIFICATION	This enforces the following well-formedness rule. <p>Well formedness rule 4.12.3.1 CompositeState [4] There have to be at least two composite substates in a concurrent composite state.<p> If this is broken by deletion of substate then we change the parent composite substate to be not concurrent.
WITHOUT_CLASSIFICATION	We don't care about the value - just want to see if it throws
WITHOUT_CLASSIFICATION	Recurse into ourself for each parent
WITHOUT_CLASSIFICATION	the following should always be true
WITHOUT_CLASSIFICATION	If we were handed a Classifier to start, this must be a Classifier
WITHOUT_CLASSIFICATION	we have to follow the arrows..
WITHOUT_CLASSIFICATION	|| ns instanceof UseCase see comment below
WITHOUT_CLASSIFICATION	NOTE: Although WFR #3 in section 2.11.3.5 UseCase of the UML 1.4 spec says "A UseCase cannot contain any Classifiers," the OCL is actually self.contents->isEmpty which would seem to imply it can't contain any elements - tfm - 20060416
WITHOUT_CLASSIFICATION	Made following changes from OCL in UML 1.4 section 2.9.3.16: CollaborationInstance -> CollaborationInstanceSet Stimuli -> Stimulus
WITHOUT_CLASSIFICATION	A Profile is a special package having the <<profile>> stereotype which can only contain the following types
WITHOUT_CLASSIFICATION	|| modelElement instanceof StateMachine
WITHOUT_CLASSIFICATION	A Profile is a special package having the <<profile>> stereotype
WITHOUT_CLASSIFICATION	There actually don't appear to be any restrictions on the namespace for a Generalization. The UML 1.4 WFR 2.5.3.20 #3 refers to GeneralizableElements, not Generalizations - tfm
WITHOUT_CLASSIFICATION	only build a namepace if needed, with
WITHOUT_CLASSIFICATION	return struc.getOwner().getNamespace().getOwnedElement().contains( struc.getType());
WITHOUT_CLASSIFICATION	self.allConnections->forAll(r | self.namespace.allContents->includes(r.participant) )
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(GeneralizableElement). allParents.oclAsType(Namespace).ownedElement->select (e | e. elementOwnership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(Namespace).ownedElement->select (e | e.elementOwnership.visibility = #public)->includes (r.participant) or
WITHOUT_CLASSIFICATION	d.supplier.oclAsType(Package).allImportedElements->select ( e | e. elementImport.visibility = #public) ->includes (r.participant) ) )
WITHOUT_CLASSIFICATION	Get the namespace hierarchy for each element
WITHOUT_CLASSIFICATION	Traverse the lists looking for the last (innermost) match
WITHOUT_CLASSIFICATION	This is an expensive method that we should ensure is called rarely. Hence info level to track easily.
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	We silently ignore requests which conflict with UML 1.4 WFR 2.5.3.1 #3 - no aggregation for n-ary associations
WITHOUT_CLASSIFICATION	If we made something aggregate, make sure the other ends conform to UML 1.4 WFR 2.5.3.1 #2 - no more than one aggregate end
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	<em>Warning: when changing the implementation of this method be warned that the sequence of the if then else tree DOES matter.</em> Most notably, do not move the setNamespace method any level up in the tree.<p>
WITHOUT_CLASSIFICATION	All text was stored in name field in UML 1.3
WITHOUT_CLASSIFICATION	Returns nothing
WITHOUT_CLASSIFICATION	Boolean, String, Integer, Long, Float, Double, etc
WITHOUT_CLASSIFICATION	This method is CPU intensive and therefore needs to be as efficient as possible.
WITHOUT_CLASSIFICATION	Because we get the metatype class stripped of its reflective proxies, we need to jump through a hoop or two to find it in the metamodel, then work from there to get its proxy.
WITHOUT_CLASSIFICATION	Remove any elements not in requested namespace
WITHOUT_CLASSIFICATION	Check whether model element is contained in given namespace/container.
WITHOUT_CLASSIFICATION	Get Classifiers in Namespace
WITHOUT_CLASSIFICATION	Get Features owned by those Classifiers
WITHOUT_CLASSIFICATION	Select those Features which are BehavioralFeatures
WITHOUT_CLASSIFICATION	Should these also be deleted?
WITHOUT_CLASSIFICATION	This is silly, but for backward compatibility
WITHOUT_CLASSIFICATION	TODO: This is the 2nd part of this method:
WITHOUT_CLASSIFICATION	For a Classifier: <pre> [10] The operation allContents returns a Set containing all ModelElements contained in the Classifier together with the contents inherited from its parents. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where parent is defined for GeneralizableElement as: [1] The operation parent returns a Set containing all direct parents parent : Set(GeneralizableElement); parent = self.generalization.parent </pre><p>
WITHOUT_CLASSIFICATION	For a Collaboration: <pre> [1 ] The operation allContents results in the set of all ModelElements contained in the Collaboration together with those contained in the parents except those that have been specialized. allContents : Set(ModelElement); allContents = self.contents->union ( self.parent.allContents->reject ( e | self.contents.name->include (e.name) )) parent here is the GeneralizableElement definition </pre>
WITHOUT_CLASSIFICATION	wellformednessrules and preconditions
WITHOUT_CLASSIFICATION	UML 1.4 WFR 2.5.3.1 #3 - no aggregation for N-ary associations
WITHOUT_CLASSIFICATION	equal
WITHOUT_CLASSIFICATION	greater
WITHOUT_CLASSIFICATION	less than
WITHOUT_CLASSIFICATION	binary association
WITHOUT_CLASSIFICATION	delete LinkEnds which have this as their associationEnd
WITHOUT_CLASSIFICATION	delete AttributeLinks where this is the Attribute
WITHOUT_CLASSIFICATION	delete CreateActions which have this as their instantiation
WITHOUT_CLASSIFICATION	@see org.argouml.model.ActivityGraphsHelper#findClassifierByName( java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	Delete dependencies where this is the only client
WITHOUT_CLASSIFICATION	Delete dependencies where this is the only supplier
WITHOUT_CLASSIFICATION	delete CallActions which have this as their operation
WITHOUT_CLASSIFICATION	delete CallEvents which have this as their operation
WITHOUT_CLASSIFICATION	TODO: All the ToDos in the doCopyFoo methods below are inherited from the NSUML implementation and do not reflect new issues. One additional thing which does need to be dealt with is the copying of any attributes which have been added since this code was implemented for UML 1.3.
WITHOUT_CLASSIFICATION	Nothing more to do.
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: actions? instances? collaborations etc? @param source the source classifier @param target the target classifier
WITHOUT_CLASSIFICATION	Copy all the Features
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: generalizations, specializations? @param source the source generalizable element @param target the target generalizable element
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. TODO: template parameters, default type TODO: constraining elements TODO: flows, dependencies, comments, bindings, contexts ??? TODO: contents, residences ??? @param source the source me @param target the target me
WITHOUT_CLASSIFICATION	Nothing more to do, don't copy owned elements.
WITHOUT_CLASSIFICATION	copy raised signals:
WITHOUT_CLASSIFICATION	Set the name so that superclasses can find the newly created element in the model, if necessary.
WITHOUT_CLASSIFICATION	Note that if we're copying this element then we must also be allowed to copy other necessary objects.
WITHOUT_CLASSIFICATION	Don't explicitly check if element is null
WITHOUT_CLASSIFICATION	Return 1..1 multiplicity for empty string
WITHOUT_CLASSIFICATION	Convert "" to "0.." instead of ".."
WITHOUT_CLASSIFICATION	In this case, either the container was not set, or it was not contained in a statemachine.
WITHOUT_CLASSIFICATION	according WFR: in case of ActivityGraph only.
WITHOUT_CLASSIFICATION	For consistency with attribute and operation, give it a default name and location
WITHOUT_CLASSIFICATION	Delete Extends which have this as their only ExtensionPoint
WITHOUT_CLASSIFICATION	delete Extends where this is the base
WITHOUT_CLASSIFICATION	delete Includes where this is the addition
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Test multipe items registered for single key set
WITHOUT_CLASSIFICATION	Remove with null item should remove all entries for key
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	Need to copy the lists since we will be moving the elements one by one:
WITHOUT_CLASSIFICATION	Deleting "source" here would probably delete the parameters...
WITHOUT_CLASSIFICATION	Only set the name if it differs from the text.
WITHOUT_CLASSIFICATION	Need to copy the lists since we will be moving the elements:
WITHOUT_CLASSIFICATION	This is not necessarily the current diagram!
WITHOUT_CLASSIFICATION	Remove the old fig from the diagram, so we can draw the new one in its place:
WITHOUT_CLASSIFICATION	p.moveToTrash(source);
WITHOUT_CLASSIFICATION	As soon as we've created a notation and have registered it listener force an event to go to the listener so it draws for the first time.
WITHOUT_CLASSIFICATION	If there are no subkeys, register using our special value to indicate that this is a primary key only registration
WITHOUT_CLASSIFICATION	Made following change from OCL in UML 1.4 section 2.9.3.22: CollaborationInstance -> CollaborationInstanceSet
WITHOUT_CLASSIFICATION	If there is a 3rd column then this represents a connection of between 2 different types of element.
WITHOUT_CLASSIFICATION	Elements which will be deleted when their container is deleted don't get added to the list of elements to be deleted (but we still want to traverse them looking for other elements to be deleted)
WITHOUT_CLASSIFICATION	Technically this is legal, but a StructuralFeature should probably only ever have an owner instead of a namespace. - tfm
WITHOUT_CLASSIFICATION	We'll put the association in the namespace of whichever end is not navigable and is writeable. If they both are, we'll use the namepace of c1.
WITHOUT_CLASSIFICATION	EnumerationLiterals should get deleted implicitly since they are associated by composition
WITHOUT_CLASSIFICATION	Set the namespace to that of the base as first choice, or that of the addition as second choice.
WITHOUT_CLASSIFICATION	UML2 only
WITHOUT_CLASSIFICATION	Editor editor = Globals.curEditor(); GraphModel gm = editor.getGraphModel(); LayerDiagram lay = ((LayerDiagram) editor.getLayerManager().getActiveLayer());
WITHOUT_CLASSIFICATION	Have we handled UML2 here?
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Set up the property panels for UML elements:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Build up an array list of the heights of each label/component pair. Heights of zero indicate a proportional height.
WITHOUT_CLASSIFICATION	Make sure the component width isn't any greater than its maximum allowed width
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	This can throw an exception if the target has been deleted. We don't want to try locking the repository because this is called from the event delivery thread and could cause a deadlock. Instead catch the exception and leave the model empty.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	Don't test changed element if it was deleted
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Do nothing by design.
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	This is explained by WFR 2 of a StructuralFeature: The type of a StructuralFeature must be a Class, DataType, or Interface. @see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	restricting types for tagged values
WITHOUT_CLASSIFICATION	classifier is way too much in UML 2.x
WITHOUT_CLASSIFICATION	the minimum set of standard types
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	keep them sorted
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#addOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	Make a copy of the modelelements:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Add stereotypes submenu
WITHOUT_CLASSIFICATION	the method
WITHOUT_CLASSIFICATION	the selected operation
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#removeOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	base is already set to this assoc...
WITHOUT_CLASSIFICATION	This check is needed, otherwise the setbase() below gives an exception.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Just in case the existing selected element is from elsewhere make sure it is in the list
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The selected value may be "" to clear the represented classifier.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	private boolean mustRefresh;
WITHOUT_CLASSIFICATION	mustRefresh = true;
WITHOUT_CLASSIFICATION	This should not happen.
WITHOUT_CLASSIFICATION	if it has no language, then we assume it is not an instance of OpaqueExpression, so we leave it null and handle elsewhere
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	/ Build the field /
WITHOUT_CLASSIFICATION	/ Add field(s) to panel /
WITHOUT_CLASSIFICATION	click on the already selected value must not call setValue
WITHOUT_CLASSIFICATION	The 2 Radios have only one information.
WITHOUT_CLASSIFICATION	Update the model, and then notify
WITHOUT_CLASSIFICATION	When call by contructor : no one is selected
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	private boolean mustRefresh;
WITHOUT_CLASSIFICATION	mustRefresh = true;
WITHOUT_CLASSIFICATION	This should not happen.
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	We need to to this otherwise there is no notification and diagram isn't change
WITHOUT_CLASSIFICATION	needed for notification
WITHOUT_CLASSIFICATION	if the control is a panel, add it
WITHOUT_CLASSIFICATION	To be really sure, let's add the operation that is linked to the action in the model, too - if it is not listed yet. We need this, incase an operation is moved out of the package, or maybe with imported XMI...
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	fill the list with items
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	in UML2, the target is already the "expression" (Opaque...)
WITHOUT_CLASSIFICATION	reuse Opaque..., just set it's attributes
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event. DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox#doIt(ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	p = new UMLValueSpecificationPanel(model, propertyName);
WITHOUT_CLASSIFICATION	MModelElement
WITHOUT_CLASSIFICATION	if not, it is a control and must be labeled...
WITHOUT_CLASSIFICATION	only association end has an aggregation option box
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Create it [Here, OpaqueExpression which is the first choice] Note that if we edit the Initial value in the diagram (double clic) it was replaced by an OpaqueExpression
WITHOUT_CLASSIFICATION	Destroy it
WITHOUT_CLASSIFICATION	title = "" because already done for Optional
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	We got passed an unmodifiable List. Copy it and sort the result
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Force the parent to redraw
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	TODO: For large lists, this is doing a linear search of literally thousands of elements
WITHOUT_CLASSIFICATION	TODO: Here too?
WITHOUT_CLASSIFICATION	Check against "" is needed for backward compatibility. Don't remove without checking subclasses and warning downstream developers - tfm - 20081211
WITHOUT_CLASSIFICATION	start of interval
WITHOUT_CLASSIFICATION	end of interval
WITHOUT_CLASSIFICATION	in middle of interval
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	makes sure we can select 'none'
WITHOUT_CLASSIFICATION	Add new listeners:
WITHOUT_CLASSIFICATION	Don't try to test this if we're removing the element
WITHOUT_CLASSIFICATION	we tried to remove a value
WITHOUT_CLASSIFICATION	It would be better if we didn't need the container to get the target. This constructor can have zero parameters as soon as we improve targetChanged.
WITHOUT_CLASSIFICATION	Allow listening to other elements:
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getElementAt(int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getSize()
WITHOUT_CLASSIFICATION	catch callers attempting to use one without other
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#getSelectedItem()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#remove(int, int)
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread-safe
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Do nothing by design.
WITHOUT_CLASSIFICATION	NOTE: This may be called from a different thread, so we need to be careful of the threading restrictions imposed by AbstractDocument for mutators to be sure we don't deadlock.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox#buildModel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	super(new LabelledLayout());
WITHOUT_CLASSIFICATION	c.insets = new Insets(1, 1, 1, 1);
WITHOUT_CLASSIFICATION	Get the list: OpaqueExpression, LiteralString,...
WITHOUT_CLASSIFICATION	By default, the first value of the combobox is selected.
WITHOUT_CLASSIFICATION	Get current InitialValue
WITHOUT_CLASSIFICATION	Select the Current type in the combobox
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	default : 0 => OpaqueExpression set to 1 for test
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	If we do not set it to null first, then we get a MDR DebugException:
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	Create the body and language Field
WITHOUT_CLASSIFICATION	Create other panel element
WITHOUT_CLASSIFICATION	create Panel containing the previous field
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	Our comparator will throw an InvalidElementException if the old list contains deleted elements (eg after a new project is loaded) so remove all the old contents first
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	There are no composite states, so this will work:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	make sure we know it when a classifier is added as a base
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	make it stretch vertically
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	Get all classifiers in our model TODO: We need the property panels to have some reference to the project they belong to instead of using deprecated functionality
WITHOUT_CLASSIFICATION	Get all classifiers in all top level packages of all profiles
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	The selected value may be "" to clear the represented operation.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	ignored - we just skipped inserting it in our document
WITHOUT_CLASSIFICATION	Allow null
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#buildModelList()
WITHOUT_CLASSIFICATION	Make sure it's parseable as an number
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	we don't want to show some nasty gray background color, now do we?
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel, Action)
WITHOUT_CLASSIFICATION	next statement is necessary to update the textfield if the selection is equal to what was allready selected
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#setItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getEditorComponent()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#addActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#removeActionListener(java.awt.event.ActionListener)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#selectAll()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxEditor#getItem()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Temporary until SimpleListModel is used for all
WITHOUT_CLASSIFICATION	Temporary until SimpleListModel is used for all
WITHOUT_CLASSIFICATION	Create popup tool if we have a single row
WITHOUT_CLASSIFICATION	Create add and remove buttons if needed first
WITHOUT_CLASSIFICATION	then any new buttons
WITHOUT_CLASSIFICATION	Pushing this to the end of the AWT thread seems to be the only way to get this to update correctly
WITHOUT_CLASSIFICATION	button action:
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	TODO: Probably really want to cancel editing ((FigTextEditor) focusOwner).cancelEditing();
WITHOUT_CLASSIFICATION	The 5 main component : 2 label, a panel for langage , a panel with button, a textarea
WITHOUT_CLASSIFICATION	Translator.localize("button.delete")
WITHOUT_CLASSIFICATION	Copy previous element
WITHOUT_CLASSIFICATION	Copy next element
WITHOUT_CLASSIFICATION	Translator.localize("button.move-up")
WITHOUT_CLASSIFICATION	Copy in memory the current
WITHOUT_CLASSIFICATION	Copy the previous value in the current
WITHOUT_CLASSIFICATION	Copy the current in the previous
WITHOUT_CLASSIFICATION	Copy in memory the current
WITHOUT_CLASSIFICATION	Copy the next value in the current
WITHOUT_CLASSIFICATION	Copy the current in the next
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	The 2 component: a textField and a list
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	Extract the icon that is used by the tree control for the current look and feel
WITHOUT_CLASSIFICATION	Add a new entry in the list and select it. Translator.localize("button.add") +
WITHOUT_CLASSIFICATION	necessary to create distance between the textfield and the icon.
WITHOUT_CLASSIFICATION	Eclipse UML2 implementation classes often start with "UML" $NON-NLS-1$
WITHOUT_CLASSIFICATION	Eclipse UML2 implementation classes end with "Impl" $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ Make sure we have a recognized file extension $NON-NLS-1$
WITHOUT_CLASSIFICATION	If the eUML.resources system property is defined then we are in a stand alone application, else we're in an Eclipse plug in. The eUML.resource should contain the path to the org.eclipse.uml2.uml.resource jar plugin. $NON-NLS-1$
WITHOUT_CLASSIFICATION	slope of the line we're finding the normal to is slope, and the normal is the negative reciprocal slope is (p1.y - p2.y) / (p1.x - p2.x) so recip is - (p1.x - p2.x) / (p1.y - p2.y)
WITHOUT_CLASSIFICATION	UML1.4 only
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	Set the child components to the heights in the array list calculating the height of any proportional component on the fly.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionSetMultiplicity#setSelectedItem( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	If we have a model but no list then build the list with preferred constructor. Eventually all lists should be built this way.
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent )
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#removeOtherModelEventListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	If the component is a JLabel which has another component assigned then position/size the label and calculate the size of the registered component
WITHOUT_CLASSIFICATION	If the child component is resizable then we don't know it's actual size yet. It will be calculated later as a proportion of the available left over space. For now this is flagged as zero.
WITHOUT_CLASSIFICATION	If a preferred height is not given or is the same as the minimum height then fix the height of this row.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event. DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	We only have this here until we have stereotypes list on property panel
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	The property value has changed so rebuild our view. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel#isValidElement(java.lang.Object)
WITHOUT_CLASSIFICATION	So, we found a Classifier that is not a ClassifierInState. And at least one state has been selected. Well, let's correct that:
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel#getSelectedModelElement()
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	Not in UML1.4
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox#UMLComboBox( UMLComboBoxModel, Action, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	Layout
WITHOUT_CLASSIFICATION	Language has changed
WITHOUT_CLASSIFICATION	Translator.localize("button.move-down")
WITHOUT_CLASSIFICATION	Object icon = ResourceLoaderWrapper.lookupIcon(s); putValue(Action.NAME, Translator.localize(s)); putValue(Action.SMALL_ICON, icon); Set the tooltip string: putValue(Action.SHORT_DESCRIPTION, Translator.localize(s));
WITHOUT_CLASSIFICATION	MDR has a hardcoded printStackTrace on all exceptions, even if they're caught, which is unsightly, so we handle unknown elements ourselves rather than letting MDR throw an exception for us to catch. org/netbeans/lib/jmi/util/Logger.java This can be uses to disable logging. Default output is System.err setProperty("org.netbeans.lib.jmi.Logger.fileName", "") org.netbeans.mdr.Logger The property org.netbeans.lib.jmi.Logger controls the minimum severity level for logging
WITHOUT_CLASSIFICATION	Commit our transaction
WITHOUT_CLASSIFICATION	not in UML1.4
WITHOUT_CLASSIFICATION	Ignore any error. The transaction may already have been unwound as part of exception processing by MDR
WITHOUT_CLASSIFICATION	Give the resolver.getIdToObjectMap() entries priority over entries with the same UUID from resolver.getIdToObjectMaps() because entries in resolver.getIdToObjectMaps() are historic.
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMetaTypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMessageSort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#setReceiver(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	Nothing to do - we get all events automatically
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	Remember the system id of our root document so that we can write out profiles and linked models to a different file if requested
WITHOUT_CLASSIFICATION	For now just skip registering this and ignore the request, but the real issue is that MagicDraw serializes the same object in two different composition associations, first in the referencing file and second in the referenced file
WITHOUT_CLASSIFICATION	if we've found the module model, log it and place it in the map so we don't have to find it if we need it again.
WITHOUT_CLASSIFICATION	/ End AndroMDA Code /
WITHOUT_CLASSIFICATION	returns a List
WITHOUT_CLASSIFICATION	Simulates UML2 getting the aggregation from the opposite end
WITHOUT_CLASSIFICATION	find the bases of the connected classifierroles so that we can see what associations are between them. If there are bases then the associations between those bases form the possible bases. Otherwise the bases are formed by all associations in the namespace of the collaboration
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#addModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#critique(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedDecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addSupportedDecision(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedGoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addSupportedGoal(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#addKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#isActive()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#isEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedDecisions()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getSupportedGoals()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	Just returns the descr param. @see org.argouml.cognitive.Poster#expand(java.lang.String, ListSet)
WITHOUT_CLASSIFICATION	Get the generic clarifier for this designer/poster. @see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#snooze()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#unsnooze()
WITHOUT_CLASSIFICATION	Does not do anything. @see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)
WITHOUT_CLASSIFICATION	Just returns false. @see org.argouml.cognitive.Poster#canFixIt(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Decision)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#supports(org.argouml.cognitive.Goal)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#containsKnowledgeType(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#expand(java.lang.String, org.argouml.cognitive.ListSet)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#fixIt(org.argouml.cognitive.ToDoItem, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.ControlMech#isRelevant(org.argouml.cognitive.critics.Critic, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.WizStep#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsAdded(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoItemsRemoved(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoListListener#toDoListChanged(org.argouml.cognitive.ToDoListEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorChanged(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorAdded(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoGeneratorEventListener#generatorRemoved(org.argouml.application.events.ArgoGeneratorEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.NotationName#getConfigurationValue()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.NotationName#sameNotationAs(org.argouml.notation.NotationName)
WITHOUT_CLASSIFICATION	Add an element listener and remember the registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	Utility function to add a listener for a given property name and remember the registration. @param element element to listen for changes on @param property name of property to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	Utility function to add a listener for an array of property names and remember the registration. @param element element to listen for changes on @param property array of property names (Strings) to listen for changes of @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	Utility function to remove an element listener and adapt the remembered list of registration. @param element element to listen for changes on @see org.argouml.model.ModelEventPump#addModelEventListener(PropertyChangeListener, Object, String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#updateListener(java.beans.PropertyChangeListener, java.lang.Object, java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse( java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.notation.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationChanged(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationAdded(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationRemoved(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationProviderAdded(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.application.events.ArgoNotationEventListener#notationProviderRemoved(org.argouml.application.events.ArgoNotationEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#handleStartElement( org.argouml.persistence.XMLElement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#handleEndElement( org.argouml.persistence.XMLElement)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.SAXParserBase#isElementOfInterest(String)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XmiFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XMLTokenTableBase#setupTokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#getMainTag()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#load(org.argouml.kernel.Project, java.io.InputStream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.MemberFilePersister#save(org.argouml.kernel.ProjectMember, java.io.OutputStream)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.XMLTokenTableBase#setupTokens()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#getDesc()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.AbstractFilePersister#isSaveEnabled()
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProjectFilePersister#doLoad(java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.ProfileManager#lookForRegisteredProfile(java.lang.String)
WITHOUT_CLASSIFICATION	@param pc @see org.argouml.profile.ProfileManager#applyConfiguration(org.argouml.kernel.ProfileConfiguration)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Critic#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.OclExpressionEvaluator#evaluate(java.util.HashMap, org.argouml.profile.internal.ocl.ModelInterpreter, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.HashMap, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.uml14.Bag#count(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#setMaximumProgress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#getBuiltInSymbol(java.lang.String)
WITHOUT_CLASSIFICATION	Returns the target of this tab. @see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	Refresh the text of the tab. @see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.AbstractArgoJPanel#spawn()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	Style panels only apply when a Fig is selected. @see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	Report a progress to the ProgressMonitor window. @see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)
WITHOUT_CLASSIFICATION	Report a progress to the ProgressMonitor window. @see org.argouml.application.api.ProgressMonitor#updateProgress(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#isCanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyNullAction()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.PerspectiveManagerListener#addPerspective(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.PerspectiveManagerListener#removePerspective(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementChanged(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementAdded(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.TreeModelUMLEventListener#modelElementRemoved(java.lang.Object)
WITHOUT_CLASSIFICATION	the model structure has changed significantly, eg a new project. @see org.argouml.ui.explorer.TreeModelUMLEventListener#structureChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	NOTE: No longer a separate type in UML 2.1
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.WeakExplorerNode#subsumes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.AbstractPerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getRuleName()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getChildren(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.rules.PerspectiveRule#getDependencies(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoItem#deselect()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ToDoItem#select()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.checklist.CheckItem#expand(java.lang.String, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#predicate( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(Object, Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.UMLWizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.WizMEName#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.WizMEName#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.profile.Profile#getProfileIdentifier()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.AbstractCrUnconventionalName#computeSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedMetatypes()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.UMLWizard#setSuggestion(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canGoNext()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#setToDoItem(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.Clarifier#hit(int, int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2(java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#getNumSteps()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#makePanel(int)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#canFinish()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.ui.Wizard#doAction(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#predicate2( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#toDoItem( java.lang.Object, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#stillValid( org.argouml.cognitive.ToDoItem, org.argouml.cognitive.Designer)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.Poster#getClarifier()
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#initWizard( org.argouml.cognitive.ui.Wizard)
WITHOUT_CLASSIFICATION	@see org.argouml.cognitive.critics.Critic#getWizardClass(org.argouml.cognitive.ToDoItem)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.cognitive.critics.CrUML#getCriticizedDesignMaterials()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getType()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.AbstractProjectMember#getZipFileExtension()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.ProjectMember#repair()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#add(org.argouml.uml.diagram.layout.LayoutedObject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#remove(org.argouml.uml.diagram.layout.LayoutedObject)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getObjects()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getObject(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.Layouter#getMinimumDiagramSize()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getOwner()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.FigActionState#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#makeSelection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#initNotationProviders(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateNameText()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#clone()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#addEnclosedFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.activity.ui.SelectionActionState#getNewNodeType(int)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	If the new encloser is null, and the old one is a Component, then the "enclosed" Fig has been moved on the diagram. This causes the model to be adapted as follows: remove the elementResidence between the "enclosed" and the oldEncloser. @see org.argouml.ui.ArgoDiagram#changeFigEncloser(org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode, org.tigris.gef.presentation.FigNode)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.UMLMutableGraphSupport#isRemoveFromDiagramAllowed(Collection)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()
WITHOUT_CLASSIFICATION	The Transition has a name text box. It contains: <ul> <li>The event-signature <li>The guard condition between [] <li>The action expression </ul><p> The content of the text box is generated by its own notationProvider. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	Update the text labels. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	Update the text labels and listeners. @see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigStateVertex#initNotationProviders(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#removeFromDiagramImpl()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialHeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialWidth()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialX()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigState#getInitialY()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.state.ui.FigHistoryState#getH()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getDependentElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.layout.LayoutedEdge#layout()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getTypeOrderNumer()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#calculateWeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getRank()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#getWeight()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.static_structure.layout.ClassdiagramNode#isStandalone()
WITHOUT_CLASSIFICATION	Nothing is editable, since a Link takes its identity from the Association. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit( org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	Listen also to the association, of which the link is an instantiation, since we want to update the rendering when the association name changes. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getDestination()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getSource()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#setNamespace(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getImportLevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.StereotypeContainer#isStereotypeVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.StereotypeContainer#setStereotypeVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.VisibilityContainer#isVisibilityVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.VisibilityContainer#setVisibilityVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateStereotypeText()
WITHOUT_CLASSIFICATION	Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	Listen for a RemoveAssociationEvent between the comment and the annotated element. When recieved delete the CommentEdge and this FigEdgeNote. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.StylePanelFig#setTargetBBox()
WITHOUT_CLASSIFICATION	Only refresh the tab if the bounds propertyChange event arrives. @see org.argouml.ui.StylePanel#refresh(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.StylePanelFig#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	If we're drawing to an edge then only allow if the start is a comment @see org.argouml.uml.diagram.ui.ModeCreateGraphEdge#isConnectionValid(org.tigris.gef.presentation.Fig, org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#handleResetToDefault()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.Relocatable#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.explorer.Relocatable#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionCheckBoxMenuItem#valueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEdited(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#textEditStarted(org.tigris.gef.presentation.FigText)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.PathContainer#isPathVisible()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.PathContainer#setPathVisible(boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.AbstractActionRadioMenuItem#toggleValueOfTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigSingleLineText#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#getNotationProviderType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#updateListeners( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameFig()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#getNameBounds()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getUmlCollection()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEditableCompartment#getNotationType()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#canEdit(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	The only thing we need to deal with is updating is the condition text. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#modelChanged(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getUmlActions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#getLabelName()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#isCreateDiagramsSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#isMinimiseFigsSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isDiagramLayoutSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isDescendSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingsInternal#isChangedOnlySelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettings#getInputSourceEncoding()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#getImportLevel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isCreateDiagramsChecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isMinimiseFigsChecked()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isDiagramLayoutSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isDescendSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportCommon#isChangedOnlySelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#isSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.SettingsTypes.BooleanSelection#getDefaultValue()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#getDefaultSelection()
WITHOUT_CLASSIFICATION	We return a new List with the options instead of the options themself because we don't want the user to be able to change the options. @see org.argouml.uml.reveng.SettingsTypes.UniqueSelection#getOptions()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.reveng.ImportSettingTypes.UniqueSelection#setSelection(int)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#close()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#isCanceled()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyMessage(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#notifyNullAction()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#updateMainTask(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.ProgressMonitor#updateSubTask(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.persistence.ProgressListener#progress(org.argouml.persistence.ProgressEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionNewDiagram#createDiagram()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getSourcePath(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getSourcePathSettings()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#setSourcePath(org.argouml.uml.ui.SourcePathTableModel)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#setSourcePath( java.lang.Object, java.io.File)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#deleteSourcePath(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.SourcePathController#getAllModelElementsWithSourcePath()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBox2#UMLComboBox2( UMLComboBoxModel2, Action, boolean)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.PropPanel#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceComponent#targetReasserted()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#getProfile()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#getModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatNamespace(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLUserInterfaceContainer#formatCollection(java.util.Iterator)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildPopup(javax.swing.JPopupMenu, int)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet(org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#setTarget(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#getTarget()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#shouldBeEnabled(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetAdded( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetRemoved( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargetListener#targetSet( org.argouml.ui.targetmanager.TargetEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionNavigate#navigateTo(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.targetmanager.TargettableModelView#getTargettableModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#createDiagram(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.ActionAddDiagram#isValidNamespace(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.common_behavior.ActionNewAction#createAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#getExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#setExpression(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLExpressionModel2#newExpression()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.behavior.state_machines.ActionNewEvent#createEvent( java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getChoices()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getDialogTitle()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractActionAddModelElement#getSelected()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#setProperty(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLPlainTextDocument#getProperty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLCheckBox2#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLRadioButtonPanel#buildModel()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLComboBoxModel2#getSelectedModelElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#buildModelList()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.UMLModelElementListModel2#isValidElement(Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#peekNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#popNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#getBaseNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#getCommonNamespace( org.argouml.uml.util.namespace.Namespace)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#iterator()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#isEmpty()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.Namespace#setDefaultScopeToken(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.util.namespace.NamespaceElement#getNamespaceElement()
WITHOUT_CLASSIFICATION	@see org.argouml.application.api.CommandLineInterface#doCommand(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getFacade()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDiagramInterchangeModel()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelEventPump()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getActivityGraphsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCollaborationsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCommonBehaviorHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCoreHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDataTypesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getExtensionMechanismsHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getModelManagementHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getStateMachinesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUmlHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesFactory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getUseCasesHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMessageSort()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getMetaTypes()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getChangeableKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getAggregationKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getPseudostateKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getScopeKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getConcurrencyKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getDirectionKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getOrderingKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getVisibilityKind()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getXmiReader()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getXmiWriter(java.lang.Object, java.io.Writer, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelImplementation#getCopyHelper()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#getParsingHelp()
WITHOUT_CLASSIFICATION	@see org.argouml.notation.providers.NotationProvider#parse(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.ui.TabTarget#refresh()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui. AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getAction()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.ui.AbstractTestActionAddDiagram#getNamespace()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#isRelocationAllowed(java.lang.Object)
WITHOUT_CLASSIFICATION	Overridden purely to keep our superclass from removing the listener that we just added. @see org.argouml.uml.diagram.ui.FigEdgeModelElement#updateListeners(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.FigNodeModelElement#renderingChanged()
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.uml.diagram.ui.UMLDiagram#relocate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.StateMachinesHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UseCasesHelper#getAllUseCases(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#addListenersToModel(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object, org.argouml.model.UmlHelper.Direction)
WITHOUT_CLASSIFICATION	@see org.argouml.model.UmlHelper#move(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeModelEventListener( java.beans.PropertyChangeListener, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#addClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#removeClassModelEventListener( java.beans.PropertyChangeListener, java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsHelper#getStereotypes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object) All methods below similarly override methods in CoreHelper.
WITHOUT_CLASSIFICATION	@see org.argouml.model.CollaborationsHelper#getAllClassifierRoles(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CommonBehaviorHelper#getSource(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.ActivityGraphsHelper#findClassifierByName(java.lang.Object, java.lang.String) all methods below similarly implement methods from ActivityGraphsHelper
WITHOUT_CLASSIFICATION	Returns the value of an element's property (tagged value). This method makes sure that a Collection of values is returned if and only if the property is multivalued (upper multiplicity value greater 1). @see org.argouml.model.Facade#getValueOfTag(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.AbstractModelEventPump#removeClassModelEventListener(java.beans.PropertyChangeListener, java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#startPumpingEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#stopPumpingEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ModelEventPump#flushModelEvents()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getAggregate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getChoice()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getChangeable()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ScopeKind#getClassifier()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getComposite()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getConcurrent()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getDeepHistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getFork()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ChangeableKind#getFrozen()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getGuarded()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getInParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getInitial()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getInOutParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ScopeKind#getInstance()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getJoin()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getJunction()
WITHOUT_CLASSIFICATION	@see org.argouml.model.AggregationKind#getNone()
WITHOUT_CLASSIFICATION	@see org.argouml.model.OrderingKind#getOrdered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getOutParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPackage()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPrivate()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getProtected()
WITHOUT_CLASSIFICATION	@see org.argouml.model.VisibilityKind#getPublic()
WITHOUT_CLASSIFICATION	@see org.argouml.model.DirectionKind#getReturnParameter()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ConcurrencyKind#getSequential()
WITHOUT_CLASSIFICATION	@see org.argouml.model.PseudostateKind#getShallowHistory()
WITHOUT_CLASSIFICATION	@see org.argouml.model.OrderingKind#getUnordered()
WITHOUT_CLASSIFICATION	@see org.argouml.model.ExtensionMechanismsFactory#createTaggedValue()
WITHOUT_CLASSIFICATION	@see org.argouml.model.CoreHelper#clearStereotypes(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.argouml.model.CopyHelper#copy(java.lang.Object, java.lang.Object) Make a copy of element in the given namespace.<p> This function is a dispatcher that calls the copyElement(Element,Namespace) function from XXXFactory.<p> This function may fail and return null for any of the following reasons: <ol> <li>No copy function is known for element's type. <li>The copy function fails or throws. </ol> @param anelement is the element to copy. @param ans the namespace @return a copy of element, or null. @throws IllegalArgumentException if element is null.
WITHOUT_CLASSIFICATION	Because we map both ends of an association we'll see many names twice LOG.log(Level.FINE, "Duplicate property name found - {0}:{1}", new Object[]{typeName, propertyName});
WITHOUT_CLASSIFICATION	Builds an initialized stereotype with no namespace. A stereotype must have a namespace so this method is unsafe. Use buildStereotype(String, Object). @param text is the name of the stereotype @return an initialized stereotype.
WITHOUT_CLASSIFICATION	Used by the copy functions. Do not call this function directly. @param source The stereotype to copy from. @param target The object becoming a copy.
WITHOUT_CLASSIFICATION	If the array hasn't been flagged to indicate otherwise swap elements the elements and add again.
WITHOUT_CLASSIFICATION	specifies valid elements for a class to contain
WITHOUT_CLASSIFICATION	specifies valid elements for a Component to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an ObjectFlowState to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an AssociationRole to contain
WITHOUT_CLASSIFICATION	specifies valid elements for an SimpleState to contain
WITHOUT_CLASSIFICATION	Extend, but only between two use cases. Remember we draw from the extension port to the base port.
WITHOUT_CLASSIFICATION	default parameter name
WITHOUT_CLASSIFICATION	build all other elements using existing buildNode
WITHOUT_CLASSIFICATION	There is a bug in the version of MDR (20050711) that we use that causes it to fail to delete aggregate elements which are single valued and where the aggregate end is listed second in the association defined in the metamodel. For the UML 1.4 metamodel, this affects a StateMachine's top StateVertex and a Transition's Guard. See issue 4948 & 5227 - tfm 20080713
WITHOUT_CLASSIFICATION	In UML 1.3, the name is the only place to store text. In UML 1.4, there is a body as well, but some tools still seem to use name.
WITHOUT_CLASSIFICATION	Although not represented in the OCL (or our Java), the English text of WFR #4 of Section 2.10.3.4 in the UML 1.4 spec is more restrictive - "[4] A Collaboration may only contain ClassifierRoles and AssociationRoles, the Generalizations and the Constraints between them, and Actions used in the Collaboration's Interactions."
WITHOUT_CLASSIFICATION	The following from the original NSUML implemenetation was attempting to implement WFR #1 from section 2.5.3.32 of the UML 1.4 spec, but if there is an owner set, no namespace is valid. The checks for this WFR, if desired, need to go in setOwner() and setType() - tfm
WITHOUT_CLASSIFICATION	or self.allConnections->forAll( r | self.namespace.allContents->excludes (r.participant) implies self.namespace.clientDependency->exists (d | d.oclIsTypeOf(Permission) and d.stereotype.name = 'access' and
WITHOUT_CLASSIFICATION	Return a list of namespaces enclosing this element. The list is ordered outer to inner. i.e. it starts at the root model.
WITHOUT_CLASSIFICATION	ScopeKind, VisibilityKind, PseudostateKind, etc Doesn't include Boolean though, despite what UML 1.4 spec says
WITHOUT_CLASSIFICATION	For a Namespace: <pre> [2] The operation allContents results in a Set containing all ModelElements contained by the Namespace. allContents : Set(ModelElement); allContents = self.contents where contents = self.ownedElement -> union(self.namespace, contents) </pre><p>
WITHOUT_CLASSIFICATION	For a Package: <pre> [3] The operation allContents results in a Set containing the ModelElements owned by or imported by the Package or one of its ancestors. allContents : Set(ModelElement); allContents = self.contents->union( self.parent.allContents->select(e | e.elementOwnership.visibility = #public or e.elementOwnership.visibility = #protected)) where the required operations are defined as : [1] The operation contents results in a Set containing the ModelElements owned by or imported by the Package. contents : Set(ModelElement) contents = self.ownedElement->union(self.importedElement) [2] The operation allImportedElements results in a Set containing the ModelElements imported by the Package or one of its parents. allImportedElements : Set(ModelElement) allImportedElements = self.importedElement->union( self.parent.oclAsType(Package).allImportedElements->select( re | re.elementImport.visibility = #public or re.elementImport.visibility = #protected)) </pre>
WITHOUT_CLASSIFICATION	Get the implementations of this operations and look for an OpaqueBehavior.
WITHOUT_CLASSIFICATION	TODO: In UML 2.0, ClassifierRole, AssociationRole, and AssociationEndRole have been replaced by the internal structure of the Collaboration
WITHOUT_CLASSIFICATION	For a Transition use indirection through source StateVertex
WITHOUT_CLASSIFICATION	TODO: unimplemented return ((Property) handle).gets
WITHOUT_CLASSIFICATION	Removed from UML 2.x and deprecated in Model API so we won't implement it throw new NotImplementedException(); we do not throw an exception because ArgoUML still uses this
WITHOUT_CLASSIFICATION	This doesn't work in UML2: both owner and property needed!
WITHOUT_CLASSIFICATION	TODO: Restructured in UML 2
WITHOUT_CLASSIFICATION	TODO: Gone in UML 2.1 It is now an InstanceSpecification with an Association as its classifier
WITHOUT_CLASSIFICATION	list.add("LiteralReal");UML 2.4 End LiteralSpecification
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Link does not exist in UML2, a link is represented just as an association
WITHOUT_CLASSIFICATION	Search for our current target language.
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	The attribute 'targetScope' of an AssociationEnd in UML1.x is no longer supported in UML2.x
WITHOUT_CLASSIFICATION	cmd.setObjects(run.getParams().get(0));
WITHOUT_CLASSIFICATION	handles all children of relationship including extend and include which are not members of core
WITHOUT_CLASSIFICATION	Although Usage & Permission are Dependencies, they need to be include separately because of the way lookup works
WITHOUT_CLASSIFICATION	The next 3 restrictions for Abstraction seem to be Argo specific not something the UML spec requires - tfm - 20070215 There is no need for these because they arn't used by buildConnection() - b00__1 {Abstraction.class, org.eclipse.uml2.uml.Class.class, org.eclipse.uml2.uml.Class.class, null, }, {Abstraction.class, org.eclipse.uml2.uml.Package.class,org.eclipse.uml2.uml.Package.class, null, }, {Abstraction.class, Component.class, Interface.class, null, },
WITHOUT_CLASSIFICATION	specifies valid elements for a Enumeration to contain
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	This module will still register as enabled for UML1.4 but it won't actually do anything.
WITHOUT_CLASSIFICATION	@see java.util.Collection#remove(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.Collection#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode() This will result in rather bad performance but at least we will not violate the contract together with {@link #equals(Object)}.
WITHOUT_CLASSIFICATION	@see java.util.Collection#size()
WITHOUT_CLASSIFICATION	@see java.util.Collection#isEmpty()
WITHOUT_CLASSIFICATION	@see java.util.Collection#iterator()
WITHOUT_CLASSIFICATION	@see java.util.Collection#toArray()
WITHOUT_CLASSIFICATION	@see java.util.Collection#toArray(java.lang.Object[])
WITHOUT_CLASSIFICATION	@see java.util.Collection#add(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.Collection#containsAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#addAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#retainAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#removeAll(java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.Collection#clear()
WITHOUT_CLASSIFICATION	@see java.util.List#addAll(int, java.util.Collection)
WITHOUT_CLASSIFICATION	@see java.util.List#get(int)
WITHOUT_CLASSIFICATION	@see java.util.List#set(int, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#add(int, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#remove(int)
WITHOUT_CLASSIFICATION	@see java.util.List#indexOf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#lastIndexOf(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.util.List#listIterator()
WITHOUT_CLASSIFICATION	@see java.util.List#listIterator(int)
WITHOUT_CLASSIFICATION	@see java.util.List#subList(int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode() This is a rather bad hash solution but with the {@link #equals(Object)} defined as below, it is not possible to do better.
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(Orientation)
WITHOUT_CLASSIFICATION	@see java.util.Observable#notifyObservers(java.lang.Object)
WITHOUT_CLASSIFICATION	@see Observable#notifyObservers()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see java.awt.event.ComponentListener#componentHidden(java.awt.event.ComponentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	Updates the button if the current row changes @see javax.swing.event.TableModelListener#tableChanged(javax.swing.event.TableModelEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	Refresh the table when a critique is enabled/disabled @see java.util.Observer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getRoot()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild( java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged( javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#addTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#removeTreeModelListener(javax.swing.event.TreeModelListener)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeSelectionListener#valueChanged(javax.swing.event.TreeSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.ModeCreateFigPoly#createNewItem(java.awt.event.MouseEvent, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.ModelFacade#getClassifier(java.lang.String)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateParameterized( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateQualified( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type2#navigateParameterizedQuery( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#navigateParameterized( java.lang.String, tudresden.ocl.check.types.Type[])
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#conformsTo(tudresden.ocl.check.types.Type)
WITHOUT_CLASSIFICATION	@see java.lang.Object#equals(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.lang.Object#hashCode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.HandlerFactory#getHandler( HandlerStack, Object, String, String, String, Attributes)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.persistence.pgml.PGMLStackParser#setAttrs( org.tigris.gef.presentation.Fig, org.xml.sax.Attributes)
WITHOUT_CLASSIFICATION	@see org.xml.sax.EntityResolver#resolveEntity(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	@see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace()
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#hasState(java.lang.String)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace(java.io.PrintStream)
WITHOUT_CLASSIFICATION	@see java.lang.Throwable#printStackTrace(java.io.PrintWriter)
WITHOUT_CLASSIFICATION	@see ProfileModelLoader#loadModel(ProfileReference)
WITHOUT_CLASSIFICATION	@see java.io.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAAdditiveExpressionTail(tudresden.ocl.parser.node.AAdditiveExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAMultiplicativeExpressionTail(tudresden.ocl.parser.node.AMultiplicativeExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAUnaryUnaryExpression(tudresden.ocl.parser.node.AUnaryUnaryExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAPostfixExpressionTail(tudresden.ocl.parser.node.APostfixExpressionTail)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeaturePrimaryExpression(tudresden.ocl.parser.node.AFeaturePrimaryExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEmptyFeatureCallParameters(tudresden.ocl.parser.node.AEmptyFeatureCallParameters)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCallParameters(tudresden.ocl.parser.node.AFeatureCallParameters)
WITHOUT_CLASSIFICATION	@param node @see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAStandardDeclarator(tudresden.ocl.parser.node.AStandardDeclarator)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALetExpression(tudresden.ocl.parser.node.ALetExpression)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAStringLiteral(tudresden.ocl.parser.node.AStringLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outARealLiteral(tudresden.ocl.parser.node.ARealLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAIntegerLiteral(tudresden.ocl.parser.node.AIntegerLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outABooleanLiteral(tudresden.ocl.parser.node.ABooleanLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#outAEnumLiteral(tudresden.ocl.parser.node.AEnumLiteral)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseALiteralCollection(tudresden.ocl.parser.node.ALiteralCollection)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAExpressionListOrRange(tudresden.ocl.parser.node.AExpressionListOrRange)
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAListExpressionListOrRangeTail(tudresden.ocl.parser.node.AListExpressionListOrRangeTail)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getPreferredSize()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getSize()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowActivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeiconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowIconified(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	Tests if enter is pressed in the _bbodField so we need to set the target bounds. @see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.ui.IStatusBar#showStatus(java.lang.String)
WITHOUT_CLASSIFICATION	Override paint so we can set a flag the first time we're called and notify any waiting threads that the splash screen has been painted. @see java.awt.Component#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction(java.lang.String)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractAction.AbstractAction( java.lang.String, javax.swing.Icon)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getName()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary2()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSecondary3()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getControlTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSystemTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getUserTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getMenuTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getSubTextFont()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getWindowTitleFont()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getLocale()
WITHOUT_CLASSIFICATION	@see java.awt.Window#dispose()
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosed(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowDeactivated(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.JComponent#paintComponent(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowOpened(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.WindowListener#windowClosing(java.awt.event.WindowEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Catches a mouseevent and calls mySingleClick and myDoubleClick if a tab is clicked which is selected. @see java.awt.event.MouseListener#mouseClicked(MouseEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabRefresh()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabSave()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#handleSettingsTabCancel()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getRoot()
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChild(java.lang.Object, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getChildCount(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#getIndexOfChild(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#valueForPathChanged(javax.swing.tree.TreePath, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.Component#getMinimumSize() sets minimum size to 120,100
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuSelected(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuDeselected(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.MenuListener#menuCanceled(javax.swing.event.MenuEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Cmd#undoIt()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabKey()
WITHOUT_CLASSIFICATION	@see GUISettingsTabInterface#getTabPanel()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	Compares obj1 and obj2 sorting by user object type, then name. Diagrams are sorted first, then packages, then other types. sorts by name within type groups. Nulls are sorted first for names. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeWillExpandListener#treeWillCollapse(javax.swing .event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	Updates stereotype setting, adds all children per treemodel 'build on demand' design. @see javax.swing.event.TreeWillExpandListener#treeWillExpand(javax.swing .event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeExpansionListener#treeCollapsed( javax.swing.event.TreeExpansionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.TreeExpansionListener#treeExpanded( javax.swing.event.TreeExpansionEvent) Updates the selection state.
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeNode#isLeaf()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Do string compare of names of UML objects. Comparison is case insensitive using a primary strength collator in the user's locale. @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragDropEnd(java.awt.dnd.DragSourceDropEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragEnter(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dragExit(java.awt.dnd.DragSourceEvent)
WITHOUT_CLASSIFICATION	This is not the correct location to set the cursor. The commented out code illustrates the calculation of coordinates. @see java.awt.dnd.DragSourceListener#dragOver(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DragSourceListener#dropActionChanged(java.awt.dnd.DragSourceDragEvent)
WITHOUT_CLASSIFICATION	Ok, we've been told to scroll because the mouse cursor is in our scroll zone. @see java.awt.dnd.Autoscroll#autoscroll(java.awt.Point)
WITHOUT_CLASSIFICATION	Calculate the insets for the JTREE, not the viewport the tree is in. This makes it a bit messy. @see java.awt.dnd.Autoscroll#getAutoscrollInsets()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragEnter(java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragExit(java.awt.dnd.DropTargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dropActionChanged(java.awt.dnd.DropTargetDragEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationListener#handleNotification(javax.management.Notification, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#getValue(java.lang.String)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.ChildGenerator#gen(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#nodeAdded(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#edgeAdded(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#nodeRemoved(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#edgeRemoved(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphListener#graphChanged(org.tigris.gef.graph.GraphEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Diagram#initialize(java.lang.Object)
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. The classifier and state Figs are nicely centered vertically, and stretched out over the full width, to allow easy selection with the mouse. The Fig can only be shrunk to half its original size - so that it is not reducible to a few pixels only. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int) Override setBounds to keep shapes looking right.
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	Return all ports on node or edge. @see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	Return the node or edge that owns the given port. @see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	Return all edges going to given port. @see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return all edges going from given port. @see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the given object is a valid node in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the given object is a valid edge in this graph. @see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	Add the given node to the graph, if valid. @see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	Return true if the two given ports can be connected by a kind of edge to be determined by the ports. @see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#addFig(Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#addFig(Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.Predicate#predicate(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getInEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNodeRelatedEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canConnect(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#connect(java.lang.Object, java.lang.Object, java.lang.Class)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.util.Predicate#predicate(java.lang.Object)
WITHOUT_CLASSIFICATION	Overridden to make it possible to include a stateVertex in a composite state. @see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBoundsImpl(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	This function only sets the color of the divider line (since that is the only visible part), and can be used to make the divider line invisible for the top region in a composite state. @see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getPorts(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.BaseGraphModel#getOwner(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphModel#getOutEdges(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getClosestPoint(java.awt.Point)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getUseTrapRect()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigText#setTextFilled(boolean)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.ClipboardOwner#lostOwnership( java.awt.datatransfer.Clipboard, java.awt.datatransfer.Transferable)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#isDataFlavorSupported( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see java.awt.datatransfer.Transferable#getTransferData( java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#classNameAndBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#hitPort(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigGroup#hitFig(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#isSelectable()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#getPortFig(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigEdge#setFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#dragExit( java.awt.dnd.DropTargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.dnd.DropTargetListener#drop( java.awt.dnd.DropTargetDropEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#translate(int, int)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseMotionListener#mouseMoved(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Overridden to set Argo-specific RenderingHints to determine whether or not antialiasing should be turned on. @see org.tigris.gef.base.Editor#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationEmitter#removeNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#addNotificationListener(javax.management.NotificationListener, javax.management.NotificationFilter, java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#getNotificationInfo()
WITHOUT_CLASSIFICATION	@see javax.management.NotificationBroadcaster#removeNotificationListener(javax.management.NotificationListener)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.ModeCreatePolyEdge#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	Updates the modelelement container if the fig is moved in or out another fig. If this fig doesn't have an enclosing fig anymore, the namespace of the diagram will be the owning modelelement. If this fig is moved inside another FigNodeModelElement the owner of that fignodemodelelement will be the owning modelelement. @see org.tigris.gef.presentation.FigNode#setEnclosingFig(org.tigris.gef.presentation.Fig)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getEnclosedFigs()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#makeSelection()
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#classNameAndBounds()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#calcBounds()
WITHOUT_CLASSIFICATION	Necessary since GEF contains some errors regarding the hit subject. @see org.tigris.gef.presentation.Fig#hit(Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.FigNode#isDragConnectable()
WITHOUT_CLASSIFICATION	Need to 'arm' the rerouting capability with mouseDragged(). <p> Don't arm if the edtior's current mode is a figedge create mode, because once a new edge has been created it is not deselected, therefore on the next create an unwanted reroute is performed. @see java.awt.event.MouseMotionListener#mouseDragged(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getMinimumSize()
WITHOUT_CLASSIFICATION	Override setBounds to keep shapes looking right. @see org.tigris.gef.presentation.Fig#setBounds(int, int, int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Command#execute()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeGraphModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeEdge()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#paintButtons(Graphics)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.SelectionButtons#getNewNode(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.base.Selection#dragHandle(int, int, int, int, org.tigris.gef.presentation.Handle)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Object#clone()
WITHOUT_CLASSIFICATION	Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFillColor(java.awt.Color)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getFillColor()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setFilled(boolean)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLineWidth(int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#getLineWidth()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#damage()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	If the user double clicks on any part of this FigNode, pass it down to one of the internal Figs. This allows the user to initiate direct text editing. @see java.awt.event.MouseListener#mouseClicked(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyPressed(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyReleased(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.KeyListener#keyTyped(java.awt.event.KeyEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#setLayer(org.tigris.gef.base.Layer)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#deleteFromModel()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#hit(java.awt.Rectangle)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#removeFromDiagram()
WITHOUT_CLASSIFICATION	Makes sure that the edges stick to the outline of the fig. @see org.tigris.gef.presentation.Fig#getGravityPoints()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.presentation.Fig#paint(java.awt.Graphics)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event. ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Dialog#nameButtons()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt( java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getElementAt(int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListModel#getSize()
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#setSelectedItem(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.ComboBoxModel#getSelectedItem()
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	The property value has changed so rebuild our view. @see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.Action#isEnabled()
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseClicked( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseEntered(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseExited(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mousePressed(java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.MouseListener#mouseReleased( java.awt.event.MouseEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#changedUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ItemListener#itemStateChanged(java.awt.event.ItemEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent( javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getDefaultRootElement()
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getLength()
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#render(Runnable r)
WITHOUT_CLASSIFICATION	@see javax.swing.text.Document#getText(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#removeUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.DocumentListener#insertUpdate(javax.swing.event.DocumentEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans. PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.beans.VetoableChangeListener#vetoableChange(java.beans. PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see org.argouml.kernel.DelayedVChangeListener#delayedVetoableChange(java. beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see AbstractAction#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange(java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see org.tigris.swidgets.Orientable#setOrientation(org.tigris.swidgets.Orientation)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#contains(java.lang.Object)
WITHOUT_CLASSIFICATION	@see javax.swing.DefaultListModel#addElement(java.lang.Object)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireContentsChanged( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalAdded( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.AbstractListModel#fireIntervalRemoved( Object, int, int)
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeCellRenderer#getTreeCellRendererComponent( javax.swing.JTree, java.lang.Object, boolean, boolean, boolean, int, boolean)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusLost(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.FocusListener#focusGained(java.awt.event.FocusEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed( java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#accept(java.io.File)
WITHOUT_CLASSIFICATION	@see javax.swing.filechooser.FileFilter#getDescription()
WITHOUT_CLASSIFICATION	@see java.beans.PropertyChangeListener#propertyChange( java.beans.PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see java.util.Enumeration#hasMoreElements()
WITHOUT_CLASSIFICATION	@see java.util.Enumeration#nextElement()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see PropertyChangeListener#propertyChange(PropertyChangeEvent)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	Here we are actually violating the test independance since we keep the DetailsPane from test to test. The reason to do this is to make it possible to run the tests with less memory requirements. Hopefully someone might eventually fix the DetailsPane so that it is garbage collected properly and this is no longer needed. @see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#runTest()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetAdded(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetRemoved(TargetEvent)
WITHOUT_CLASSIFICATION	@see TargetListener#targetSet(TargetEvent)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see AbstractTestActionAddDiagram#getValidNamespaceClasses()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#tearDown()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#canAddEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addNode(java.lang.Object)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.MutableGraphModel#addEdge(java.lang.Object)
WITHOUT_CLASSIFICATION	@see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	This method is overridden in order to ignore change of the y coordinate during dragging. @see org.tigris.gef.presentation.FigNode#superTranslate(int, int)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphFactory#makeNode()
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphNodeRenderer#getFigNodeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see org.tigris.gef.graph.GraphEdgeRenderer#getFigEdgeFor( org.tigris.gef.graph.GraphModel, org.tigris.gef.base.Layer, java.lang.Object, java.util.Map)
WITHOUT_CLASSIFICATION	@see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Although not generally true for GEF, for Argo we know that the layer is a LayerPerspective which knows the associated diagram
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	end class StartCritics
WITHOUT_CLASSIFICATION	initialized in static initializer block below
WITHOUT_CLASSIFICATION	Needs to happen after initialization is done & modules loaded
WITHOUT_CLASSIFICATION	create an anonymous class as a kind of adaptor for the cognitive System to provide proper translation/i18n.
WITHOUT_CLASSIFICATION	The reason the gui is initialized before the commands are run is that some of the commands will use the projectbrowser.
WITHOUT_CLASSIFICATION	Initialize the module loader. At least the plug-ins that provide profiles need to be initialized before the project is loaded, because some of these profile may have been set as default profiles and need to be applied to the project as soon as it has been created or loaded. The first instance of a Project is needed during the GUI initialization.
WITHOUT_CLASSIFICATION	The string <code>log4j.configuration</code> is the same string found in {@link org.apache.log4j.Configuration.DEFAULT_CONFIGURATION_FILE} but if we use the reference, then log4j configures itself and clears the system property and we never know if it was set. If it is set, then we let the static initializer in {@link Argo} perform the initialization.
WITHOUT_CLASSIFICATION	A subclass of JPanel that can act as a tab in the DetailsPane or MultiEditorPane. Added functionality:<p> Spawning: When the tab is double-clicked, this JPanel will generate a separate window of the same size and with the same contents. This is almost like "tearing off" a tab.<p> TODO: Spawning of windows disabled in spawn()<p> Title: This JPanel keeps track of its own title.<p> Icon: This JPanel keeps track of its own icon; i.e. an arrow pointing to the panel that it gives details of.<p> Orientation: This JPanel is Orientable.<p> Cloning: This JPanel may be cloned.<p> This class used to be named TabSpawnable. Renamed since it is not a Tab, but a Panel, and being spawnable is not any more its main purpose.
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	accessors
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	Notation events are likely to cause GEF/Swing operations, so we dispatch them on the Swing event thread as a convenience so that the receiving notationChanged() methods don't need to deal with it
WITHOUT_CLASSIFICATION	@param item the todo item @param reason the reason TODO: Use it! @return <code>true</code> if the argument was a component of this list; <code>false</code> otherwise @throws UnresolvableException unable to resolve
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	issue resolution
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	constants
WITHOUT_CLASSIFICATION	static accessors
WITHOUT_CLASSIFICATION	Set the tooltip string:
WITHOUT_CLASSIFICATION	@see javax.swing.tree.TreeModel#isLeaf(java.lang.Object)
WITHOUT_CLASSIFICATION	This needs to iterate to fill entire output raster if implemented return image.copyData(outRaster);
WITHOUT_CLASSIFICATION	Catch all exceptions and errors, however severe
WITHOUT_CLASSIFICATION	Notify the user that the modules in the list that are selected but not enabled were not possible to enable and that are not selected that we cannot disable. Currently we just log this. TODO: We could eventually pop up some warning window.
WITHOUT_CLASSIFICATION	if we have only one return value and without type, the return param string is ": ,", we remove it
WITHOUT_CLASSIFICATION	If the script of the Action is empty, (or only specifies arguments and no method name) then we generate a string based on a different model element:
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	MMessage
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	(MMessage)
WITHOUT_CLASSIFICATION	no state with the given name is found, so we have to reject the complete user's input
WITHOUT_CLASSIFICATION	Now let's check if the new line is already present in the old list of internal transitions; if it is, then mark the old one to be retained (i.e. do not create a new one), if it isn't, continue with parsing:
WITHOUT_CLASSIFICATION	case 1
WITHOUT_CLASSIFICATION	check for more literals (';' separated):
WITHOUT_CLASSIFICATION	@see tudresden.ocl.check.types.Type#hasState(java.lang.String)
WITHOUT_CLASSIFICATION	if save did not raise an exception and name+"#" exists move name+"#" to name+"~" this is the correct backup file
WITHOUT_CLASSIFICATION	frank: in case of exception delete name and mv name+"#" back to name if name+"#" exists this is the "rollback" to old file
WITHOUT_CLASSIFICATION	Skip the 2 lines <?xml version="1.0" encoding="UTF-8" ?> <!DOCTYPE pgml SYSTEM "pgml.dtd">
WITHOUT_CLASSIFICATION	Search all attributes found to those expected. If any don't match then turn off the found flag so that we search for the next matching tag.
WITHOUT_CLASSIFICATION	Now we're into processing each specific path item strategy. At the moment, we only know PathItemPlacement
WITHOUT_CLASSIFICATION	for compatibility with older format
WITHOUT_CLASSIFICATION	If we're about to upgrade the file lets take an archive of it first.
WITHOUT_CLASSIFICATION	No more we can do here on failure
WITHOUT_CLASSIFICATION	Write any left over bytes in the input buffer (perhaps from a partially decoded character)
WITHOUT_CLASSIFICATION	NOP
WITHOUT_CLASSIFICATION	To persist to and from zargo (zipped file) storage containing seperate xmi, argo, plgml and todo zip entries. @author Bob Tarling TODO: Review use of this against ZargoFilePersister - Bob
WITHOUT_CLASSIFICATION	Add the path of the model to the search path, so we can read dependent models
WITHOUT_CLASSIFICATION	we only need to add the classloader once and if and only if there is at least a profile in the JAR
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	Testing: does not fire.
WITHOUT_CLASSIFICATION	@see tudresden.ocl.parser.analysis.DepthFirstAdapter#caseAFeatureCall(tudresden.ocl.parser.node.AFeatureCall)
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	@see org.argouml.profile.internal.ocl.ModelInterpreter#invokeFeature(java.util.Map, java.lang.Object, java.lang.String, java.lang.String, java.lang.Object[])
WITHOUT_CLASSIFICATION	TODO: isStatic in UML 2.x
WITHOUT_CLASSIFICATION	Additional Operations in 4.5.3.8
WITHOUT_CLASSIFICATION	4.5.2.13 Constraint
WITHOUT_CLASSIFICATION	4.5.2.24 Generalization
WITHOUT_CLASSIFICATION	4.5.2.28 Namespace
WITHOUT_CLASSIFICATION	Do not set buildingModel = false here, otherwise the action for selection is performed.
WITHOUT_CLASSIFICATION	prpTodo = createProperty("label.todo-pane", positions, TabToDo.class); prpProperties = createProperty("label.properties-pane", positions, TabProps.class); prpDocumentation = createProperty("label.documentation-pane", positions, TabDocumentation.class); prpStyle = createProperty("label.style-pane", positions, TabStyle.class); prpSource = createProperty("label.source-pane", positions, TabSrc.class); prpConstraints = createProperty("label.constraints-pane", positions, TabConstraints.class); prpTaggedValues = createProperty("label.tagged-values-pane", positions, TabTaggedValues.class); Property[] propertyList = new Property[] { prpTodo, prpProperties, prpDocumentation, prpStyle, prpSource, prpConstraints, prpTaggedValues, }; Arrays.sort(propertyList); top.add(new JScrollPane(new PropertyTable( propertyList, paneColumnHeader, positionColumnHeader)), BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	Parse the boundary box text. Null is returned if it is empty or invalid, which causes no change. Otherwise we tell GEF we are making a change, make the change and tell GEF we've finished.
WITHOUT_CLASSIFICATION	TODO: Add double click listener
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	@see javax.swing.plaf.metal.MetalTheme#getPrimary1()
WITHOUT_CLASSIFICATION	if the current shortcut has been set but is void, then the current shortcut is not set --> then the default value does not change
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	Only show actions for associations not already on diagram
WITHOUT_CLASSIFICATION	2. the profile configuration, holding noneditable applied profiles
WITHOUT_CLASSIFICATION	the text will be set later
WITHOUT_CLASSIFICATION	private static final StereotypeView[] stereotypeViewMap; static { stereotypeViewMap = new StereotypeView[3]; StereotypeView. stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_TEXTUAL] = StereotypeView.TEXTUAL; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_BIG_ICON] = StereotypeView.BIG_ICON; stereotypeViewMap[DiagramAppearance.STEREOTYPE_VIEW_SMALL_ICON] = StereotypeView.SMALL_ICON; }
WITHOUT_CLASSIFICATION	This class represents all Diagrams within ArgoUML. It is based upon the GEF Diagram.<p> It adds a namespace, and the capability to delete itself when its namespace is deleted. <p> TODO: MVW: I am not sure of the following:<p> The "namespace" of the diagram is e.g. used when creating new elements that are shown on the diagram; they will have their namespace set according this. It is NOT necessarily equal to the "owner". <p> MVW: I doubt all following: The "namespace" of the diagram is e.g. used to register a listener to the UML model, to be notified if this element is removed; which will imply that this diagram has to be deleted, too. <p> Hence the namespace of e.g. a collaboration diagram should be the represented classifier or, in case of a represented operation, the classifier that owns this operation. And the namespace of the statechart diagram should be the namespace of its statemachine.
WITHOUT_CLASSIFICATION	The fix
WITHOUT_CLASSIFICATION	A binary association is not a node so reject.
WITHOUT_CLASSIFICATION	Make all the parts match the main fig
WITHOUT_CLASSIFICATION	and the stereotypes of its features
WITHOUT_CLASSIFICATION	stereotype fig covers the name fig:
WITHOUT_CLASSIFICATION	Notation settings are different since, we know that, at a minimum, the isShowPath() setting can change because with implement PathContainer, so we make sure that we have a private copy of the notation settings.
WITHOUT_CLASSIFICATION	null elements represent new constraints, which will be added to the target the first time any actual editing takes place. This is done to ensure syntactical correctness of constraints stored with the target.
WITHOUT_CLASSIFICATION	Mutators hold write lock & will deadlock if use is not thread safe
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	Constructor for a {@link FigClass} during file load.<p> Parent {@link org.argouml.uml.diagram.ui.FigNodeModelElement} will have created the main box {@link #getBigPort()} and its name {@link #getNameFig()} and stereotype (@link #getStereotypeFig()}. This constructor creates a box for the attributes and operations.<p> The properties of all these graphic elements are adjusted appropriately. The main boxes are all filled and have outlines. TODO: which is wrong, since the bigPort is filled, too. @param element model element to be represented by this fig. @param bounds rectangle describing bounds @param settings rendering settings
WITHOUT_CLASSIFICATION	When this is called from PGMLStackParser.attachEdges, we finished the initialization of owning pseudo element (CommentEdge)
WITHOUT_CLASSIFICATION	Do nothing by default.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	Override superclass to do nothing. Fill property cannot be changed.
WITHOUT_CLASSIFICATION	A Fig designed to be the child of some FigNode or FigEdge to display the stereotypes of the model element represented by the parent Fig. Currently, multiple stereotypes are shown stacked one on top of the other, each enclosed by guillemets.<p> The minimum width of this fig is the largest minimum width of its child figs. The minimum height of this fig is the total minimum height of its child figs.<p> The owner of this Fig is the UML element that is extended with the stereotypes. We are listening to changes to the model: addition and removal of stereotypes. <p> This fig supports showing one keyword as the first "stereotype" in the list. <p> There is no way to remove a keyword fig, once added. <p> TODO: Allow for UML2 style display where all stereotypes are displayed in the same guillemet pair and are delimited by commas. The style should be changeable by calling getOrientation(Orientation). The swidget Orientation class can be used for this. @author Bob Tarling
WITHOUT_CLASSIFICATION	The source of an association end should not be the classifier. If it is the user has drawn the wrong way round so we swap here.
WITHOUT_CLASSIFICATION	We want to maintain a minimum width for the fig. Also, add the border dimensions to the minimum space required for its contents:
WITHOUT_CLASSIFICATION	Make sure we don't try to set things smaller than the minimum
WITHOUT_CLASSIFICATION	If requested height equals needed height then do nothing; it fits exactly.
WITHOUT_CLASSIFICATION	LOG.log(Level.FINE, "Slope = " + theta / Math.PI + "PI " + theta / Math.PI 180.0);
WITHOUT_CLASSIFICATION	Test-case for the above code: Draw a class. Create a stereotype for it by clicking on the prop-panel tool, and name it. Remove the class from the diagram. Drag the class from the explorer on the diagram. Select the stereotype in the explorer, and change its name in the prop-panel to something longer. The longer name does not make the class Fig wider unless the above code is added.
WITHOUT_CLASSIFICATION	If we have no source and dest connector then we assume this is load of an old UML1.4 diagram from before this data was saved in PGML. For UML1.4 we can assume the source is first connection and destination is last connection stored in repository for this association.
WITHOUT_CLASSIFICATION	Note that "multiplicity" is what is the notation is listening for in UML1.4 "uppervalue" are listened to in UML2. It is not currently why it is not required to register for "lowerValue" also.
WITHOUT_CLASSIFICATION	Some subclasses will try to use this
WITHOUT_CLASSIFICATION	FigClass calls setBoundsImpl before we set the stereotypeFigProfileIcon
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	TODO: Use per-project undo manager, not global
WITHOUT_CLASSIFICATION	Perhaps something like the following would workd. If not, then traverse up the component hierarchy to a MultEditorPane Rectangle drawingArea = Globals.curEditor().getJComponent().getVisibleRect();
WITHOUT_CLASSIFICATION	Default implementation is to do nothing
WITHOUT_CLASSIFICATION	/ Methods that implement the GraphModel itself /
WITHOUT_CLASSIFICATION	/ Methods that implement the VetoableChangeListener interface /
WITHOUT_CLASSIFICATION	Only interested in the "ownedElement" property. Either something has been added to the namespace for this model, or removed. In the latter case the "something" will be in the old value of the property, which is the collection of owned elements, and the new value will be the element import describing the model element and the model from which it was removed
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	The figs for the two end nodes
WITHOUT_CLASSIFICATION	Private utility routine to work out the (positive) x coordinate of a point on an oval, given the radii and y coordinate.<p> TODO: Use this to calculate the separator lines! @param a radius in X direction @param b radius in Y direction @param y Y coordinate @return Positive X coordinate for the given Y coordinate
WITHOUT_CLASSIFICATION	the responsibility of determining if the given target is a correct one for this tab has been moved from the DetailsPane to the member tabs of the details pane. Reason for this is that the details pane is configurable and cannot know what's the correct target for some tab.
WITHOUT_CLASSIFICATION	If the diagram is empty, GEF won't write anything, leaving us with an empty (and invalid) file. Handle this case ourselves to prevent this from happening.
WITHOUT_CLASSIFICATION	NOTE: GEF's GIF writer uses Jeff Poskanzer's GIF encoder, but that saves a copy of the entire image in an internal buffer before starting work, defeating the whole purpose of our incremental rendering.
WITHOUT_CLASSIFICATION	Expressions are DataTypes, not independent model elements be careful not to reuse them
WITHOUT_CLASSIFICATION	TODO: The next text was copied - to adapt. Sets the target. If the old target is an UML Element, it also removes the model from the element listener list of the target. If the new target is an UML Element, the model is added as element listener to the new target. <p> This function is called when the user changes the target. Hence, this shall not result in any UML model changes.<p> This function looks a lot like the one in UMLComboBoxModel2. <p> As a possible future extension, we could allow listening to other model elements. @param theNewTarget the new target
WITHOUT_CLASSIFICATION	fire all of the status events
WITHOUT_CLASSIFICATION	fire all of the profile events
WITHOUT_CLASSIFICATION	verify isRelevant returns true
WITHOUT_CLASSIFICATION	DesignGoalsCM checks if the critic isRelevantToGoals of the Designer this value is always true for the Critic base class so DesignerGoal should always return true in this condition
WITHOUT_CLASSIFICATION	update the priority of the critic to be the same priority as the decision
WITHOUT_CLASSIFICATION	check that the model was initialized with one goal
WITHOUT_CLASSIFICATION	number of goals should now be 0
WITHOUT_CLASSIFICATION	Arbitrary settings - not used used for testing
WITHOUT_CLASSIFICATION	FigAssociationRole figassociationrole = new FigAssociationRole();
WITHOUT_CLASSIFICATION	initialize basic parameters that are different from Decision.UNSPEC
WITHOUT_CLASSIFICATION	verify parameters were initialized correctly by the constructor
WITHOUT_CLASSIFICATION	verify the name property was correctly updated
WITHOUT_CLASSIFICATION	following the update the priority should be equivalent to Decision.UNSPEC
WITHOUT_CLASSIFICATION	test that the category and description are correct
WITHOUT_CLASSIFICATION	update the values
WITHOUT_CLASSIFICATION	verify SnoozeOrder starts off not snoozed
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	snooze and verify its been enabled
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	test with a class and class diagram
WITHOUT_CLASSIFICATION	pce = (PropertyChangeEvent) rxdEvent.getSource(); assertTrue("Wrong event name", pce.getPropertyName().equals( DiagramAppearance.KEY_DEFAULT_SHADOW_WIDTH.getKey())); String value = (String) pce.getOldValue(); int i = Integer.parseInt(value); assertTrue("Wrong old event value", i == 4); assertTrue("Wrong new event value", ((String) pce.getNewValue()).equals("2"));
WITHOUT_CLASSIFICATION	Change things
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Assert that the copy isn't modified when the source changes
WITHOUT_CLASSIFICATION	Create a different client to bind to the same supplier
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	success
WITHOUT_CLASSIFICATION	This comment was included in a previous version (before 1/2005) of the test which had this assertion commented out: ------ Interaction should not be removed when removing ClassifierRole... maybe if the last message is removed from the interaction but even then it's doubtfull since it will probably lead to backward compatibility problems in save formats. ------ but my reading of the UML 1.4 specification is that an Interaction without at least one message is definitely illegal, so MDR is doing the right thing by removing it in this case where we only have a single message, which then gets deleted. - tfm
WITHOUT_CLASSIFICATION	Get a list of UML metaclass names from the XMI document. <p> Though some of the DOM methods such as getAttributes may return null values under other conditions, in the context of this test and assuming a valid XMI file none should occur. <p> Hence there is no special checking for those abnormal cases, allowing the test to fail simply with a NullPointerException, with this comment indicating that either the input data is incorrect or the test needs to be improved.
WITHOUT_CLASSIFICATION	Test creating modelelements from a given notation, and then re-generate the notation-string again, and check if they are equal. Some of these tests are not very usefulll, since they may fail on white space differences. TODO: White space should best be ignored.
WITHOUT_CLASSIFICATION	changing the sequence only
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	ok
WITHOUT_CLASSIFICATION	Make sure the contents match what we expect
WITHOUT_CLASSIFICATION	Make sure we got what we started with
WITHOUT_CLASSIFICATION	Clean up our model and the extent that we read profile in to
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	TODO: the following fails due to the XMI writing saving all top level model elements and because even if there was no empty project, by creating a class, the undo mechanism in the project manager will force the creation of an empty project. assertEquals(1, profileModels.size());
WITHOUT_CLASSIFICATION	we recalculate all the activations
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
IMPLEMENTATION	TODO: Put throws clause back in Empty method.
IMPLEMENTATION	Called when app shutdown. TODO: Put throws clause back in
IMPLEMENTATION	Not implemented
IMPLEMENTATION	Move any i18n files that are located in the core downloads dir to the i18n downloads dir. The spring application context will not load properly (for some unknown reason) when there are i18n jars in the classpath. So as a work-around, we simply ensure that they are where they should be anyway. Previously we were not as careful about this, so it is possible that i18n jars were copied into the core downloads directory.
IMPLEMENTATION	?? Future: may want to create TablePopupMenu to allow cut/copy/paste operations
IMPLEMENTATION	TODO?? ColumnDisplayDefinition should also have the Type (String, Date, Double,Integer,Boolean)
IMPLEMENTATION	A dialect delegate for the Sun Microsystems HADB (High-Availability) database. TODO: This dialect is not yet complete. Need to provide implementations wherever "Not yet implemented" appears. @author manningr
IMPLEMENTATION	TODO: Need to enhance the index dialog to allow specifying storage option. For now just accept the default for the index access method. valuesMap.put("indexType", "USING BTREE");
IMPLEMENTATION	A dialect delegate for the TimesTen database. TODO: This dialect is not yet complete. Need to provide implementations wherever "Not yet implemented" appears.
IMPLEMENTATION	A dialect delegate for the Axion database. TODO: This dialect is not yet complete. Need to provide implementations wherever "Not yet implemented" appears.
IMPLEMENTATION	TODO: Need to allow user to specify this
IMPLEMENTATION	TODO: create the child index ST
IMPLEMENTATION	TODO: should also make sure that each of the columns is made "NOT NULL"
IMPLEMENTATION	TODO: hookup with Interbase spec and adjust these as necessary.
IMPLEMENTATION	TODO need to implement or change the message
IMPLEMENTATION	Not yet ready DataImportGlobalPreferencesTab tab = new DataImportGlobalPreferencesTab(); return new IGlobalPreferencesPanel[] { tab };
IMPLEMENTATION	TODO: Implement this better
IMPLEMENTATION	TODO: Tooltips
IMPLEMENTATION	TODO: Maybe prompt the user to ask to append the records, ignoring errors for constraint violations?
IMPLEMENTATION	TODO: set the total for the progress bar.
IMPLEMENTATION	Sorts the specified destInfos array based on the order of the sourceInfos array. Not a very efficient algorthim, but it gets the job done. TODO: rewrite this using Collections sorting capability. @param sourceInfos @param destInfos @param sourceTableName @param destTableName @return a re-ordered version of the specified destInfos array @throws MappingException if the arrays differ in length or column names.
IMPLEMENTATION	TODO: use the destination database type to derive a format that is acceptable.
IMPLEMENTATION	TODO: use the destination database type to derive a format that is acceptable.
IMPLEMENTATION	TODO: allow the user to specify ignore case or preserve case.
IMPLEMENTATION	TODO Plugin supports only the main session window
IMPLEMENTATION	TODO Plugin supports only the main session window
IMPLEMENTATION	TODO Plugin supports only the main session window
IMPLEMENTATION	TODO: sort the list.
IMPLEMENTATION	TODO: FILLFACTOR, ON [PRIMARY], etc.
IMPLEMENTATION	TODO: ON [PRIMARY]
IMPLEMENTATION	TODO: Refresh
IMPLEMENTATION	TODO: Allow the user to specify the sequence name for dialects that don't natively support auto-increment columns without using sequence/trigger combo.
IMPLEMENTATION	TODO I18N
IMPLEMENTATION	TODO: When message are can have some text in red (error) and some normal then put out errors in red.
IMPLEMENTATION	TODO: figure out how to get then name of the table that the trigger is on. "and tables.name = ? " +
IMPLEMENTATION	TODO Plugin supports only the main session window
IMPLEMENTATION	TODO Plugin supports only the main session window
IMPLEMENTATION	?? remember which column is the rowID (if any) so we can ?? prevent editing on it
IMPLEMENTATION	TODO: Need to add storageOptions to the add index dialog valuesMap.put(ST_STORAGE_OPTION_KEY, );
IMPLEMENTATION	TODO: Perhaps we can tell the user when they click "Copy Table" if the source session is Axion and they want primary keys that it's not possible.
IMPLEMENTATION	TODO: ask the user if they want to "undo" the changes that the paste made. Alternatively show them the specific problem and let them fix it. Then allow them to retry the operation, starting from the point at which the previous operation failed.
IMPLEMENTATION	TODO: tell the user that the selected destination schema is the same as the source schema. monitor.showMessageDialog(...)
IMPLEMENTATION	TODO: use the destination database type to derive a format that is acceptable.
IMPLEMENTATION	TODO Plugin supports only the main session window
IMPLEMENTATION	TODO Auto-generated constructor stub
IMPLEMENTATION	TODO: i18n
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: finish i18n
IMPLEMENTATION	Not implemented
IMPLEMENTATION	TODO: if the use checks "export entire table" and doesn't select all, then the selected indices are not set, and this check doesn't properly detect missing data. If export entire table is selected, we need to set the selected indexes below correctly.
IMPLEMENTATION	We just copied the last table. Now it is safe to copy the constraints.(Well, that is, if all FK dependencies are met in the group of tables being copied. TODO: new feature could be to examine table list for FK's in tables not in the list then prompt the user to add those missing tables to the list.
IMPLEMENTATION	TODO: Maybe someday we could inform the user that the imported key can't be created because the list of tables they've selected, doesn't include the table that this foreign key depends upon. For now, just log a warning and skip it.
WITHOUT_CLASSIFICATION	private MainFrame _mainFrame;
WITHOUT_CLASSIFICATION	Setup the applications Look and Feel.
WITHOUT_CLASSIFICATION	i18n[Application.error.closeFileViewers=Unable to close all file viewers]
WITHOUT_CLASSIFICATION	Save options selected for DataType-specific properties
WITHOUT_CLASSIFICATION	return _mainFrame;
WITHOUT_CLASSIFICATION	_mainFrame = new MainFrame(this);
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[Application.splash.showmainwindow=Showing main window...]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[oracle.sqlText=SQL Text]
WITHOUT_CLASSIFICATION	i18n[Application.error.loadsqlhistory=Unable to load SQL history from persistant storage.]
WITHOUT_CLASSIFICATION	History file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	i18n[Application.error.savesqlhistory=Unable to write SQL queries to persistant storage.]
WITHOUT_CLASSIFICATION	Get the history into an array.
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.error.writecellselections=Unable to write Cell Import/Export options to persistant storage.]
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	Cell Import/Export file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	nothing needed here??
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	nothing needed here??
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.error.savedatatypeprops=Unable to write DataType properties to persistant storage.]
WITHOUT_CLASSIFICATION	Don't prevent the user from overriding the laf is they choose to use Swing's default laf prop
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	i18n[Application.info.setjdbcdebuglog=Attempting to set JDBC debug log to output stream]
WITHOUT_CLASSIFICATION	If logging has changed.
WITHOUT_CLASSIFICATION	Close any previous logging.
WITHOUT_CLASSIFICATION	Generic SQL
WITHOUT_CLASSIFICATION	set up array to return for public access to cmd line args
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	ISession[] getActiveSessions();
WITHOUT_CLASSIFICATION	add(new DropSelectedTablesAction(_app));
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleInfo=Last log entry (Entry type: Info)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleWarn=Last log entry (Entry type: Warning)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logMsg=Logged by {0} at {1}:\n\n {2}]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleUnknown=Last log entry (Entry type: Unknown)]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.memSize={0} of {1} MB];
WITHOUT_CLASSIFICATION	paintNumWaitingGC(g);
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[oracle.rows=Rows]
WITHOUT_CLASSIFICATION	i18n[oracle.bufferGets=Buffer Gets]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReadsPerRow=Disk Reads per Row]
WITHOUT_CLASSIFICATION	private final AliasWindowFactory _aliasWinFactory;
WITHOUT_CLASSIFICATION	Oracle SQL
WITHOUT_CLASSIFICATION	private int _lastSessionIdx = 1;
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[WindowManager.registerSessionSheet=Registering {0} in WindowManager]
WITHOUT_CLASSIFICATION	Store ptr to newly open window in list of windows per session.
WITHOUT_CLASSIFICATION	Set the cell Width to the width of the header
WITHOUT_CLASSIFICATION	left
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	bottom
WITHOUT_CLASSIFICATION	Regression for HARMONY-2146
WITHOUT_CLASSIFICATION	i18n[WindowManager.error.bringtofront=Error bringing internal frame to the front]
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	mockDatabaseMetaData
WITHOUT_CLASSIFICATION	IAliasesList al = getAliasesListInternalFrame().getAliasesList();
WITHOUT_CLASSIFICATION	_driversListWindow.nowVisible(true);
WITHOUT_CLASSIFICATION	regression test for HARMONY-1497
WITHOUT_CLASSIFICATION	i18n[WindowManager.errorselectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	_driversListWindow.nowVisible(false);
WITHOUT_CLASSIFICATION	Add an item to the Windows menu for this window and store the menu item back in the internal frame.
WITHOUT_CLASSIFICATION	Enable/Disable actions that require open session frames.
WITHOUT_CLASSIFICATION	Only remove the frame if the entire session is not closing
WITHOUT_CLASSIFICATION	Remove menu item from Windows menu that relates to this internal frame.
WITHOUT_CLASSIFICATION	Enable/Disable actions that require open session frames.
WITHOUT_CLASSIFICATION	Add the message handler to the session
WITHOUT_CLASSIFICATION	Allocate the current session to the actions.
WITHOUT_CLASSIFICATION	Make sure that the session menu is enabled.
WITHOUT_CLASSIFICATION	Clear session info from all actions.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	GUIUtils.setJButtonSizesTheSame(new JButton[] {_okBtn, _closeBtn, new JButton(i18n.CANCEL)});
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	builder.addGridded(new JButton("Alter")); builder.addRelatedGap();
WITHOUT_CLASSIFICATION	setPreferredSize(new Dimension(400, 400));
WITHOUT_CLASSIFICATION	Copys the gathered values into the lookup table.
WITHOUT_CLASSIFICATION	TABLE
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Causes NPE in JDK 1.3.1 _contentsTxt.setText("");
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.help=Help]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.changelogs=Change Logs]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadwelcomefile=Error retrieving Help file URL for {0}]
WITHOUT_CLASSIFICATION	Add SQuirreL Licence to the Licence node.
WITHOUT_CLASSIFICATION	Strip local part of URL.
WITHOUT_CLASSIFICATION	Renderer for tree.
WITHOUT_CLASSIFICATION	&& node != _tree.getLastSelectedPathComponent())
WITHOUT_CLASSIFICATION	Add SQuirreL help to the Help node.
WITHOUT_CLASSIFICATION	First put the Welcome to SQuirreL node.
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadchangelogfile=Error retrieving Change Log file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.squirrel=SQuirreL]
WITHOUT_CLASSIFICATION	Add SQuirreL Change Log to the Licence node.
WITHOUT_CLASSIFICATION	generate contents file.
WITHOUT_CLASSIFICATION	Add plugin help, licence and change log documents to the tree.
WITHOUT_CLASSIFICATION	Licence document.
WITHOUT_CLASSIFICATION	Help document.
WITHOUT_CLASSIFICATION	FAQ.
WITHOUT_CLASSIFICATION	Change log.
WITHOUT_CLASSIFICATION	final String docTitle = (String)_docTitles.get(i);
WITHOUT_CLASSIFICATION	Using a thread for this gets rid of most of the "white flash".
WITHOUT_CLASSIFICATION	Stop refresh if it is running.
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.processinglogfile=Error occured processing log file]
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.info.nulllogfile=Null log file name]
WITHOUT_CLASSIFICATION	Position to the start of the last line in log.
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.setcaret=Error positioning caret in log text component]
WITHOUT_CLASSIFICATION	_logContentsTxt.setEditable(false);
WITHOUT_CLASSIFICATION	, true, true, true, true);
WITHOUT_CLASSIFICATION	throws IOException
WITHOUT_CLASSIFICATION	viewer.addInternalFrameListener(_lis);
WITHOUT_CLASSIFICATION	private final class MyInternalFrameListener extends InternalFrameAdapter
WITHOUT_CLASSIFICATION	removeViewer((HtmlViewerSheet)evt.getInternalFrame());
WITHOUT_CLASSIFICATION	super.internalFrameClosed(evt);
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Settings Gap Sizes
WITHOUT_CLASSIFICATION	Filling Columns
WITHOUT_CLASSIFICATION	Appending Labels with optional components ------------------------------
WITHOUT_CLASSIFICATION	Appending internationalized labels with optional components ------------
WITHOUT_CLASSIFICATION	Adding Titles ----------------------------------------------------------
WITHOUT_CLASSIFICATION	Appending Separators ---------------------------------------------------
WITHOUT_CLASSIFICATION	Instance Creation
WITHOUT_CLASSIFICATION	Overriding Superclass Behavior
WITHOUT_CLASSIFICATION	Adding Rows
WITHOUT_CLASSIFICATION	Adding Labels and Separators
WITHOUT_CLASSIFICATION	Helper Code
WITHOUT_CLASSIFICATION	setRenderer(new CellRenderer());
WITHOUT_CLASSIFICATION	private SQLDriverPropertyCollection _props = new SQLDriverPropertyCollection();
WITHOUT_CLASSIFICATION	loadDriverProperties();
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropPrimaryKeyTitle=Drop Primary Key]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	_useDriverPropsChk.setSelected(_alias.getUseDriverProperties()); _driverPropsBtn.setEnabled(_useDriverPropsChk.isSelected()); This is mainly for long URLs that cannot be fully displayed in the label.
WITHOUT_CLASSIFICATION	abort first..
WITHOUT_CLASSIFICATION	Set focus to password control if default user name has been setup.
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.modifyTitle=Select Column To Modify]
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	Column list
WITHOUT_CLASSIFICATION	User cannot be allowed to drop all columns from a table
WITHOUT_CLASSIFICATION	Removed for reformatting
WITHOUT_CLASSIFICATION	Means load all Schemas from database.
WITHOUT_CLASSIFICATION	current Schema says don't load
WITHOUT_CLASSIFICATION	Removed for duplicate line
WITHOUT_CLASSIFICATION	private SQLDriverPropertyCollection _sqlDriverProps;
WITHOUT_CLASSIFICATION	Removed for comment
WITHOUT_CLASSIFICATION	i18n[AliasInternalFrame.illegalValue=Illegal value of {0} passed for Maintenance type]
WITHOUT_CLASSIFICATION	_useDriverPropsChk.setSelected(_sqlAlias.getUseDriverProperties());
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Title label at top.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Next the buttons.
WITHOUT_CLASSIFICATION	make it grow when added
WITHOUT_CLASSIFICATION	i18n[AliasInternalFrame.error.sessioncreation=Test Button has created a session, this is a programming error]
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	i18n[AliasWindowFactory.error.copyAlias=Error occured copying the alias]
WITHOUT_CLASSIFICATION	i18n[AliasWindowFactory.schemaPropsCopiedWarning=Warning: Your target Alias contains database specific Schema properties copied from the source Alias.\n Schema loading of the target Alias may be errorneous. Please check your target Alias's Schema properties.]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Add listener to listen for items added/removed from list.
WITHOUT_CLASSIFICATION	select the one just added.
WITHOUT_CLASSIFICATION	Only a single selection can be made at a time.
WITHOUT_CLASSIFICATION	More than one selection is allowed - check to see if we should change the selection
WITHOUT_CLASSIFICATION	_driversList = new DriversList(app);
WITHOUT_CLASSIFICATION	_tb.add(actions.get(ShowLoadedDriversOnlyAction.class));
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	_tree.expandPath(new TreePath(newFolder.getPath()));
WITHOUT_CLASSIFICATION	Not required.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	If this happens then this is a programming error as we said in the above call to ingore these errors.
WITHOUT_CLASSIFICATION	i18n[DriverInternalFrame.error.illegalvalue=Illegal value of {0} passed for Maintenance type]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Title label at top.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Separated by a line.
WITHOUT_CLASSIFICATION	Reset the background to the colour that the current Look and Feel uses for internal frames.
WITHOUT_CLASSIFICATION	_javaClassPathList.addListSelectionListener(new JavaClassPathListBoxListener());
WITHOUT_CLASSIFICATION	Scrollbars are "shown always" to stop sheet resizing when they are shown/hidden.
WITHOUT_CLASSIFICATION	This can take a long time for big jars - so it is not done on the EDT.
WITHOUT_CLASSIFICATION	Removed for uncomment
WITHOUT_CLASSIFICATION	i18n[DriverWindowFactory.error.copyingdriver=Error occured copying the driver]
WITHOUT_CLASSIFICATION	Empty block.
WITHOUT_CLASSIFICATION	If the user wants to select for Right mouse clicks then change the selection before popup appears
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Pane to add window content to.
WITHOUT_CLASSIFICATION	Put toolbar at top of window.
WITHOUT_CLASSIFICATION	The main list for window.
WITHOUT_CLASSIFICATION	List in the centre of the window.
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	Removed for cut SQL
WITHOUT_CLASSIFICATION	Removed for copy SQL
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNameLabel=Column Name: ]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	These are not used
WITHOUT_CLASSIFICATION	Column name
WITHOUT_CLASSIFICATION	Dialect list
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnCommentLabel={0} does not support column comments]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNameTootTip={0} does not support altering column name]
WITHOUT_CLASSIFICATION	Length
WITHOUT_CLASSIFICATION	Type list
WITHOUT_CLASSIFICATION	Scale
WITHOUT_CLASSIFICATION	Precision
WITHOUT_CLASSIFICATION	Default value
WITHOUT_CLASSIFICATION	Nullable
WITHOUT_CLASSIFICATION	Comment
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesController.hint=Set session colors for this Alias]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesController.title=Color Properties]
WITHOUT_CLASSIFICATION	Don't need tooltips any more.
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in list mouse is over.
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.views=Views]
WITHOUT_CLASSIFICATION	I18n[oracle.dbOutputTitle=Oracle DB output for: {0}]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheToDelNotExists=Cache file for Alias "{0}" does not exist. No file was deleted]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.hint=Schemas (loading and caching)]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.ok=OK]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.backgroundColorLabel=Background Color]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.close=Close]
WITHOUT_CLASSIFICATION	Toolbar
WITHOUT_CLASSIFICATION	Object Tree
WITHOUT_CLASSIFICATION	Status Bar
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.syncComponentBackgroundColorChkLabel=Use toolbar background color for all components]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.toolbarBackgroundColorBtnLabel=Choose Toolbar Color]
WITHOUT_CLASSIFICATION	Instructions
WITHOUT_CLASSIFICATION	Toolbar Color Checkbox
WITHOUT_CLASSIFICATION	Object Tree Color checkbox
WITHOUT_CLASSIFICATION	Object Tree Color checkbox
WITHOUT_CLASSIFICATION	Set object tree color button
WITHOUT_CLASSIFICATION	Set object tree color button
WITHOUT_CLASSIFICATION	Set toolbar color button
WITHOUT_CLASSIFICATION	Set object tree color panel
WITHOUT_CLASSIFICATION	Set object tree color panel
WITHOUT_CLASSIFICATION	Set toolbar color panel
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.loadAndCacheAll=Load all and cache all Schemas]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.CacheSchemaIndependentMetaData=Cache Schema independent meta data (Catalogs, Keywords, Data types, Global functions)]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.printCacheFileLocation=Print cache file path to message panel]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.deleteCache=Delete cache file]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateApply=Apply]
WITHOUT_CLASSIFICATION	Turn off auto refresh when we are shutting down.
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.loadingDriverFailed=Loading JDBC driver "{0}" failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.gettingDriverPropetiesFailed=Loading the properties from the JDBC driver failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesController.Hint=DriverProperties]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesController.title=DriverProperties]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.loadAndCache=Load and cache]
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Removed for close Session
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Size non-tool child window.
WITHOUT_CLASSIFICATION	tab button
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	implements ActionListener
WITHOUT_CLASSIFICATION	Make the button looks the same for all Laf's
WITHOUT_CLASSIFICATION	Make it transparent
WITHOUT_CLASSIFICATION	No need to be focusable
WITHOUT_CLASSIFICATION	Making nice rollover effect we use the same listener for all buttons
WITHOUT_CLASSIFICATION	Close the proper tab by clicking the button addActionListener(this);
WITHOUT_CLASSIFICATION	we don't want to update UI for this button
WITHOUT_CLASSIFICATION	paint the cross
WITHOUT_CLASSIFICATION	shift the image for pressed buttons
WITHOUT_CLASSIFICATION	Without this the split moves when the window is resized.
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	i18n[oracle.Seconds2=(seconds)]
WITHOUT_CLASSIFICATION	i18n[FileEditorDropTargetListener.oneFileDropMessage=Only one file may be dropped onto the editor at a time.]
WITHOUT_CLASSIFICATION	Make sure a deselect is followed by a select when a new selected Tab exists.
WITHOUT_CLASSIFICATION	This event does not always hit the righr editor !? That's why we can't use _sqlEntryPanelIdentifier
WITHOUT_CLASSIFICATION	Check to see if the string is a file uri.
WITHOUT_CLASSIFICATION	Not a uri - assume it is a string filename.
WITHOUT_CLASSIFICATION	the line is a comment (as per the RFC 2483)
WITHOUT_CLASSIFICATION	malformed URI
WITHOUT_CLASSIFICATION	the URI is not a valid 'file:' URI
WITHOUT_CLASSIFICATION	light blue colors
WITHOUT_CLASSIFICATION	58, 110, 165); 189, 220, 251); 153, 179, 205);
WITHOUT_CLASSIFICATION	i18n[AllBluesBoldMetalTheme.name=All Blues - Bold]
WITHOUT_CLASSIFICATION	JASON: Messages height should be stored with this.
WITHOUT_CLASSIFICATION	BaseMDIParentFrame
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	...
WITHOUT_CLASSIFICATION	Initial load of prefs.
WITHOUT_CLASSIFICATION	i18n[MainFrame.saveSize=Save size]
WITHOUT_CLASSIFICATION	i18n[MainFrame.restoreSize=Restore saved size]
WITHOUT_CLASSIFICATION	Position window to where it was when last closed. If this is not on the screen, move it back on to the screen.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Under JDK1.4 an empty JComboBox has an almost zero width.
WITHOUT_CLASSIFICATION	_app.getDataCache().addAliasesListener(new MyAliasesListener(this));
WITHOUT_CLASSIFICATION	Under JDK1.4 an empty JComboBox has an almost zero width.
WITHOUT_CLASSIFICATION	Dont enable the session drop down if it is empty
WITHOUT_CLASSIFICATION	Needes to be done via event queque because adding the session to the drop down happens via the event queue too.
WITHOUT_CLASSIFICATION	private final JMenu _editMenu;
WITHOUT_CLASSIFICATION	SquirrelAction descriptions already contain the accelerator
WITHOUT_CLASSIFICATION	super.setVisible(value);
WITHOUT_CLASSIFICATION	_msgSplit.setDividerLocation(0.9d); _msgSplit.setResizeWeight(1.0);
WITHOUT_CLASSIFICATION	actions.get(ExecuteSqlAction.class).setEnabled(false);
WITHOUT_CLASSIFICATION	send a tree expansion event to the object tree
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Refresh the currently selected tab.
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Needed to make the panel set the divider location from preferences
WITHOUT_CLASSIFICATION	Required on Linux.
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.loadDefaultDrivers]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.loadDefaultDrivers]
WITHOUT_CLASSIFICATION	Size to set child windows to.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationAction.titleSuccess=Dump successful]
WITHOUT_CLASSIFICATION	i18n[DeleteAliasAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	Determine size of grid to tile into. e.g 3X3 for 9 cells.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	i18n[ConnectToAliasCommand.error.closeconnection=Error occured closing Connection]
WITHOUT_CLASSIFICATION	After this it can't be stopped anymore!
WITHOUT_CLASSIFICATION	i18n[DeleteDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.status=Application Status Bean]
WITHOUT_CLASSIFICATION	prompt the user to add a website url for this driver
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.drivers=Drivers]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingdrivers=Error dumping drivers]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingaliases=Error dumping aliases]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.aliases=Aliases]
WITHOUT_CLASSIFICATION	Dump drivers
WITHOUT_CLASSIFICATION	Dump System Properties.
WITHOUT_CLASSIFICATION	Dump aliases.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.sessiondump=Session Dump: {0}]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.sessiondump=Error dumping sessions]
WITHOUT_CLASSIFICATION	Dump sessions.
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.combiningtempfiles=Error combining temp files into dump file]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.deletetempfile=Couldn't delete temporary DumpSession file]
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Get 10 lines at a time.
WITHOUT_CLASSIFICATION	i18n[OracleExceptionFormatter.positionLabel=Position: ]
WITHOUT_CLASSIFICATION	ISessionListener interface methods
WITHOUT_CLASSIFICATION	Don't try to find it if we have already created it.
WITHOUT_CLASSIFICATION	Since we depend upon the Connection class associated with the ISession, we need to keep a reference to the ISession we are associated with. However, this session could be closed, at which time we want to give up our reference so that it can be garbage collected.
WITHOUT_CLASSIFICATION	no rows selected.
WITHOUT_CLASSIFICATION	Label containing the location of the plugins at top of dialog.
WITHOUT_CLASSIFICATION	IMainPanelTab[] getMainTabbedPanePanels(ISession session);
WITHOUT_CLASSIFICATION	Table of loaded plugins in centre of dialog.
WITHOUT_CLASSIFICATION	column 1 is internal name
WITHOUT_CLASSIFICATION	column 3 is loaded status
WITHOUT_CLASSIFICATION	Empty body, purely to shorten the interface name for convienience.
WITHOUT_CLASSIFICATION	Renames the source column.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	throws PluginException
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Adds the new column (type: integer).
WITHOUT_CLASSIFICATION	See if plugin has any jars in lib dir.
WITHOUT_CLASSIFICATION	throws PluginException;
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.useCustomQTLabel=Use Custom Query Tokenizer]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.removeMultiLineCommentLabelTipText=]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.lineCommentLabel=Start of line comment]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.procedureSeparatorLabel=Procedure/Function Separator]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.borderLabel={0} Script Settings]
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	JASON: What are its valid values?
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Add panels for core Squirrel functionality.
WITHOUT_CLASSIFICATION	Go thru all loaded plugins asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed pane.
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.squirrelHomePath=Home directory: -home {0}]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesTab.hint=Software Update Settings]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesTab.title=Update]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Add panels for core Squirrel functionality.
WITHOUT_CLASSIFICATION	Go thru all loaded plugins asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed pane.
WITHOUT_CLASSIFICATION	i18n[DataTypePreferencesPanel.propsPanel.hint=Set options for specific Data Types]
WITHOUT_CLASSIFICATION	i18n[DataTypePreferencesPanel.propsPanel.title=Data Type Controls]
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	i18n[SQLPreferencesPanel.largeScriptStmtCount=Large Script Statement Count: ]
WITHOUT_CLASSIFICATION	JScrollPane sp = new JScrollPane(createDataTypesPanel()); sp.setPreferredSize(new Dimension(600, 450)); add(sp, gbc);
WITHOUT_CLASSIFICATION	add each of the panels created by the DataType objects for editing their own properties
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.channel=Channel:]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.updateSiteBorderLabel=Update Site]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.path=Path:]
WITHOUT_CLASSIFICATION	Test Connection Button Panel (Both the button and the status label
WITHOUT_CLASSIFICATION	Site type
WITHOUT_CLASSIFICATION	Update server name
WITHOUT_CLASSIFICATION	Separator
WITHOUT_CLASSIFICATION	Update server port
WITHOUT_CLASSIFICATION	Path to release.xml
WITHOUT_CLASSIFICATION	Local update directory
WITHOUT_CLASSIFICATION	Channnel combo-box
WITHOUT_CLASSIFICATION	URL text field
WITHOUT_CLASSIFICATION	separators need preferred size in GridBagLayout
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	String EDIT = "edit";
WITHOUT_CLASSIFICATION	Activate another session since the current active session has closed.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Get an array since we dont want trouble with the sessionsList when we remove the sessions from it.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	i18n[FileManager.confirm.filereplace={0} \nalready exists. Do you want to replace it?]
WITHOUT_CLASSIFICATION	invokeLater to make the call synchronto the event queue
WITHOUT_CLASSIFICATION	Do not do new HashMap() here.
WITHOUT_CLASSIFICATION	public SQLExecutionInfo(int idx) { this(idx, ""); }
WITHOUT_CLASSIFICATION	i18n[FileManager.error.cannotwritefile=File {0} \ncannot be written to.]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[FileManager.savedfile=Saved to {0}]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelFailed=Failed to cancel statement. Perhaps the driver/RDDBMS does not support cancelling statements. See logs for further details ({0})]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelSucceeded=The database has been asked to cancel the statment.]
WITHOUT_CLASSIFICATION	i18n[MessagePanel.clearLabel=Clear]
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	/ Warning
WITHOUT_CLASSIFICATION	a light yellow
WITHOUT_CLASSIFICATION	StyleConstants.setBackground(_saSetError, Color.red);
WITHOUT_CLASSIFICATION	StyleConstants.setBackground(saSetErrorHistory, Color.pink);
WITHOUT_CLASSIFICATION	Start loading table/column info about the current database.
WITHOUT_CLASSIFICATION	This is set here as SessionPanel.dispose() will attempt to close the session.
WITHOUT_CLASSIFICATION	This is a reasonable default and makes initialization code run well
WITHOUT_CLASSIFICATION	If there is no sqlPanelAPI (e.g. the Object tree find editor) we assume no parser is necessary and thus provide a dummy impl.
WITHOUT_CLASSIFICATION	At this point we know that we have a 1.4 or higher java runtime
WITHOUT_CLASSIFICATION	i18n[Session.driverComplianceTitle=JRE/JDBC Version Mismatch]
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#confirmCloseWithUnsavedEdits()
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.tablenotfound=Cannot edit table because table cannot be found\nor table name is not unique in DB.]
WITHOUT_CLASSIFICATION	re-calculate fullTablename the next time it's requested.
WITHOUT_CLASSIFICATION	_session.getProperties().forceTableContentsOutputClassNameChange();
WITHOUT_CLASSIFICATION	forced edit mode ended because user changed the Session Properties
WITHOUT_CLASSIFICATION	start with illegal number of rows matching query
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	start with illegal number of rows matching query
WITHOUT_CLASSIFICATION	i18n[oracle.sequenceDetails=Details]
WITHOUT_CLASSIFICATION	Drops the original column.
WITHOUT_CLASSIFICATION	Adds a foreign key constraint to the source table for the new column.
WITHOUT_CLASSIFICATION	get WHERE clause using original value
WITHOUT_CLASSIFICATION	if the user has said to not use this column, then skip it
WITHOUT_CLASSIFICATION	everything seems to have worked ok
WITHOUT_CLASSIFICATION	The edited column is in the resultset twice (example: SELECT MyName, FROM MyTable). We won't add the this col to the where clause.
WITHOUT_CLASSIFICATION	convert user representation of null into an actual null
WITHOUT_CLASSIFICATION	do different things depending on data type
WITHOUT_CLASSIFICATION	insert the "WHERE" at the front if there is anything in the clause
WITHOUT_CLASSIFICATION	get the SQL session
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rowmatched=\n Row {0} matched {1} rows in DB]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rownotmatch=\n Row {0} did not match any row in DB]
WITHOUT_CLASSIFICATION	get WHERE clause for the selected row the -1 says to just use the contents of the values without any substitutions
WITHOUT_CLASSIFICATION	count how many rows this WHERE matches
WITHOUT_CLASSIFICATION	do the delete and add the number of rows deleted to the count
WITHOUT_CLASSIFICATION	i18n[oracle.displaysSequenceDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.tabledbmismatch=There may be a mismatch between the table and the DB:\n{0}\nDo you wish to proceed with the deletes anyway?]
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.deletecancelled=Delete canceled at user request.]
WITHOUT_CLASSIFICATION	do the delete and add the number of rows deleted to the count
WITHOUT_CLASSIFICATION	try to delete
WITHOUT_CLASSIFICATION	Cache
WITHOUT_CLASSIFICATION	Cycled
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	we return something valid even if there is a DB error
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, just return
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	Do nothing.
WITHOUT_CLASSIFICATION	find the entry in colDefs matching this column
WITHOUT_CLASSIFICATION	DB cols are in same order as colDefs
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.retrievingdefaultvalues=Error retrieving default column values]
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	assuming that the columns in table match colDefs, bump the index to point to the next colDef entry
WITHOUT_CLASSIFICATION	start the string for use in the prepared statment
WITHOUT_CLASSIFICATION	add a variable position for each of the columns
WITHOUT_CLASSIFICATION	replace the last "," with ")"
WITHOUT_CLASSIFICATION	i18n[oracle.displaySessionStatistics=Display database session statistics]
WITHOUT_CLASSIFICATION	have the DataType object fill in the appropriate kind of value into the appropriate variable position in the prepared stmt
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerrorupdate=Unknown problem during update.\nNo count of inserted rows was returned.\nDatabase may be corrupted!]
WITHOUT_CLASSIFICATION	insert succeeded
WITHOUT_CLASSIFICATION	This might be because an table alias is used maybe with an AS before it.
WITHOUT_CLASSIFICATION	i18n[ObjectTreeSearch.error.objectnotfound=Could not locate the database object ''{0}'' in Object tree]
WITHOUT_CLASSIFICATION	(ALLOWS_EDITING_FALSE == ret)
WITHOUT_CLASSIFICATION	no support for undo
WITHOUT_CLASSIFICATION	JASON: Removed as part of patch void addSessionListener(ISessionListener lis);
WITHOUT_CLASSIFICATION	Process each individual query.
WITHOUT_CLASSIFICATION	Some driver don't correctly support setMaxRows. In these cases use setMaxRows only if this is a SELECT.
WITHOUT_CLASSIFICATION	Display any warnings generated by the SQL execution.
WITHOUT_CLASSIFICATION	User has cancelled the query execution.
WITHOUT_CLASSIFICATION	... now we have reached an output that is not a result. We now have to aks for this outputs update count.
WITHOUT_CLASSIFICATION	filter the list of all DB objects looking for things with the given name
WITHOUT_CLASSIFICATION	ok, that didn't work - let's see if the table looks fully qualified. if so, we'll split the name from the schema/catalog and try that.
WITHOUT_CLASSIFICATION	Ok, maybe catalog was really a schema instead.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.event.UndoableEditListener#undoableEditHappened(javax.swing.event.UndoableEditEvent)
WITHOUT_CLASSIFICATION	i18n[SQLPanelAPI.untitledLabel=Untitled]
WITHOUT_CLASSIFICATION	Can't work with ISessionAction because if a result window is on top the session in a ISessionAction is null.
WITHOUT_CLASSIFICATION	Dump meta data.
WITHOUT_CLASSIFICATION	Dump driver information.
WITHOUT_CLASSIFICATION	Dump session properties.
WITHOUT_CLASSIFICATION	Dump general connection info.
WITHOUT_CLASSIFICATION	Dump alias information.
WITHOUT_CLASSIFICATION	Dump data types.
WITHOUT_CLASSIFICATION	Dump schemas.
WITHOUT_CLASSIFICATION	Dump catalogs.
WITHOUT_CLASSIFICATION	Dump general connection info.
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see IClientSessionAction#setSession(ISession)
WITHOUT_CLASSIFICATION	i18n[DeleteTablesCommand.loadingPrefix=Analyzing table:]
WITHOUT_CLASSIFICATION	Get all the selected object names and place in a comma separated list.
WITHOUT_CLASSIFICATION	Remove trailing ", ".
WITHOUT_CLASSIFICATION	Ensure that the proper type of Object is selected in the Object Tree.
WITHOUT_CLASSIFICATION	Can't delete records in snapshots (Oracle materialized views)
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Only Oracle supports materialized views directly.
WITHOUT_CLASSIFICATION	execute command
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.success=Session successfuly dumped to: {0}]
WITHOUT_CLASSIFICATION	The Math.min is for the Caret at the end of the text
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Ensure that the proper type of Object is selected in the Object Tree before allowing the SQL Filter to be activated.
WITHOUT_CLASSIFICATION	Empty body
WITHOUT_CLASSIFICATION	Empty Bbody
WITHOUT_CLASSIFICATION	Empty Body
WITHOUT_CLASSIFICATION	Empty Body
WITHOUT_CLASSIFICATION	private JTabbedPane _tabbedResultsPanel;
WITHOUT_CLASSIFICATION	private Map _allTabs = new HashMap();
WITHOUT_CLASSIFICATION	private List _availableTabs = new ArrayList();
WITHOUT_CLASSIFICATION	private ArrayList _usedTabs = new ArrayList();
WITHOUT_CLASSIFICATION	_listeners.remove(ISQLExecutionListener.class, lis);
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	_tabbedResultsPanel = UIFactory.getInstance().createTabbedPane();
WITHOUT_CLASSIFICATION	i18n[SQLPanel.limitrowscheckbox.hint=Limit rows: ]
WITHOUT_CLASSIFICATION	Set focus to the SQL entry panel.
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.queryExecuting=Query is executing]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Prepare to have a lot of DocumentEvent.EventType.CHANGE
WITHOUT_CLASSIFICATION	Display the result set.
WITHOUT_CLASSIFICATION	Display the result set metadata.
WITHOUT_CLASSIFICATION	Why null??
WITHOUT_CLASSIFICATION	1.5 "@ident" annotation NOI18N
WITHOUT_CLASSIFICATION	i18n[ResultTab.executedLabel=Executed:]
WITHOUT_CLASSIFICATION	And the query info.
WITHOUT_CLASSIFICATION	final Resources rsrc = _session.getApplication().getResources();
WITHOUT_CLASSIFICATION	i18n[ResultTab.elapsedTimeLabel=Elapsed Time (seconds):]
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Empty method.
WITHOUT_CLASSIFICATION	Needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.
WITHOUT_CLASSIFICATION	The SQLHistoryComboBoxModel has a static member that prevents garbage collection. Therefore we need to remove the model.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Sticky is turned off. Just remove sticky and return.
WITHOUT_CLASSIFICATION	remove old sticky tab
WITHOUT_CLASSIFICATION	Check for whitespace
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Check for digit
WITHOUT_CLASSIFICATION	white space
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	!!! return SQLTokenContext.INCOMPLETE_STRING_LITERAL;
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Either resultTabToReplace or _stickyTab must be not null here
WITHOUT_CLASSIFICATION	transparent
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.close=Close]
WITHOUT_CLASSIFICATION	Just add the tab
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.closeAll=Close all]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.toggleSticky=Toggle sticky]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.execStatus=Executing SQL...]
WITHOUT_CLASSIFICATION	Track the time in aggregate for the script.
WITHOUT_CLASSIFICATION	!!! return SQLTokenContext.INCOMPLETE_CHAR_LITERAL;
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	Options
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsUpdated={0} Row(s) Inserted]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsDeleted={0} Row(s) Deleted]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsUpdated={0} Row(s) Updated]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.outputStatus=Building output...]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.currentSQLLabel={0} of {1} - {2}]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.statusLabel=Status:]
WITHOUT_CLASSIFICATION	i18n[SQLTab.title=SQL]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	corresponding to COLUMNS
WITHOUT_CLASSIFICATION	Make sure no duplicates are kept in history.
WITHOUT_CLASSIFICATION	Standard expanders.
WITHOUT_CLASSIFICATION	must be done in the GUI thread
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for database nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for schema nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for UDT nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for table nodes.
WITHOUT_CLASSIFICATION	setupTabbedPane((ObjectTreeTabbedPane)it.next());
WITHOUT_CLASSIFICATION	private final ISession _session;
WITHOUT_CLASSIFICATION	_session = session;
WITHOUT_CLASSIFICATION	Add actions to the popup menu.
WITHOUT_CLASSIFICATION	Options for global popup menu.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in list mouse is over.
WITHOUT_CLASSIFICATION	Don't need tooltips any more.
WITHOUT_CLASSIFICATION	No need to this in background when SchemaInfo is not reloaded.
WITHOUT_CLASSIFICATION	We only show row counts for tables and views. Other objects won't be affected by changing row counts.
WITHOUT_CLASSIFICATION	If node hasn't already been expanded.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	See if all selected nodes are of the same type.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	Menues that are also shown in the main window Session menu might be in this popup. If we don't remove them, the Session won't be Garbage Collected.
WITHOUT_CLASSIFICATION	Get the node to be expanded.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	Add table types to list.
WITHOUT_CLASSIFICATION	Add stored proc parent node.
WITHOUT_CLASSIFICATION	Add UDT parent node.
WITHOUT_CLASSIFICATION	i18n[oracle.columns=Columns]
WITHOUT_CLASSIFICATION	i18n[DatabaseObjectInfoTab.title=Info]
WITHOUT_CLASSIFICATION	i18n[DatabaseObjectInfoTab.hint=Basic information]
WITHOUT_CLASSIFICATION	i18n[BaseSourceTab.title=Source]
WITHOUT_CLASSIFICATION	default is no reference
WITHOUT_CLASSIFICATION	we need the try/catch just to keep the compiler happy
WITHOUT_CLASSIFICATION	private ISession _session;
WITHOUT_CLASSIFICATION	LineNumber height (abends when I use MAX_VALUE)
WITHOUT_CLASSIFICATION	Set right/left margin
WITHOUT_CLASSIFICATION	Variables for this LineNumber component
WITHOUT_CLASSIFICATION	i18n[KeywordsTab.title=Keywords]
WITHOUT_CLASSIFICATION	Update sizes when number of digits in the line number changes
WITHOUT_CLASSIFICATION	Paint the background
WITHOUT_CLASSIFICATION	Determine the number of lines to draw in the foreground.
WITHOUT_CLASSIFICATION	i18n[StringFunctionsTab.title=String Functions]
WITHOUT_CLASSIFICATION	'' outside comment
WITHOUT_CLASSIFICATION	i18n[StringFunctionsTab.hint=Show all the string functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[DataTypesTab.title=Data Types]
WITHOUT_CLASSIFICATION	i18n[SchemasTab.hint=Show all the schemas]
WITHOUT_CLASSIFICATION	i18n[ProcedureColumnsTab.hint=Show columns for the selected procedure]
WITHOUT_CLASSIFICATION	i18n[ProcedureColumnsTab.title=Columns]
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	i18n[IndexesTab.title=Indexes]
WITHOUT_CLASSIFICATION	Frontbase describes it's tables as "BASE TABLE".
WITHOUT_CLASSIFICATION	i18n[RowCountTab.title=Row Count]
WITHOUT_CLASSIFICATION	Provide the actual integer value, as well as it's meaning
WITHOUT_CLASSIFICATION	i18n[ContentsTab.title=Content]
WITHOUT_CLASSIFICATION	i18n[RowCountTab.hint=Number of rows in the selected table]
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	needed to prevent an infinite loop
WITHOUT_CLASSIFICATION	props.forceTableContentsOutputClassNameChange();
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	We assume here that if the pseudoColumn was used in the query, then it was likely to have caused the SQLException. If not, (length == 0), then retrying the query won't help - just throw the exception.
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	get the nullability information and pass it into the ResultSet Unfortunately, not all DBMSs provide the column number in object 17 as stated in the SQL documentation, so we have to guess that the result set is in column order
WITHOUT_CLASSIFICATION	Restore the paths
WITHOUT_CLASSIFICATION	Only do this if the object tree (and hence this contents tab) is visible.
WITHOUT_CLASSIFICATION	Save off selections so that selection/focus can be restored later.
WITHOUT_CLASSIFICATION	i18n[VersionColumnsTab.title=Versions]
WITHOUT_CLASSIFICATION	i18n[VersionColumnsTab.hint=Show columns that are automatically updated when the row is updated]
WITHOUT_CLASSIFICATION	i18n[PrimaryKeyTab.title=Primary Key]
WITHOUT_CLASSIFICATION	i18n[PrimaryKeyTab.hint=Show primary key for the selected table]
WITHOUT_CLASSIFICATION	i18n[RowIDTab.title=Row IDs]
WITHOUT_CLASSIFICATION	i18n[TablePriviligesTab.hint=Show access rights for the selected table]
WITHOUT_CLASSIFICATION	token kind token position in the source text (starting at 0) token column (starting at 0) token line (starting at 1) exact string value token string value (uppercase if ignoreCase)
WITHOUT_CLASSIFICATION	set of characters to be ignored by the scanner
WITHOUT_CLASSIFICATION	error messages
WITHOUT_CLASSIFICATION	input scanner last recognized token lookahead token
WITHOUT_CLASSIFICATION	or a white space must be in front of the keyword.
WITHOUT_CLASSIFICATION	-1 because column starts with 1 put pos with 0
WITHOUT_CLASSIFICATION	Either are at teh beginning ...
WITHOUT_CLASSIFICATION	On Errors we restart the parser behind the error
WITHOUT_CLASSIFICATION	wait for pending chars to be processed post new characters
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	tell the UI that this _workingBuffer is through
WITHOUT_CLASSIFICATION	i18n[parserthread.undefinedTable=undefined table]
WITHOUT_CLASSIFICATION	number of errors detected
WITHOUT_CLASSIFICATION	i18n[ErrorStream.error.syntax=Syntax error {0}]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.notexpected=not expected]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.unexpectedsymbol=this symbol not expected in]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.invalid=invalid]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.error.semantic=Semantic error {0}]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.noerrors=No errors detected]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.multipleerrors={0} errors detected]
WITHOUT_CLASSIFICATION	FA_xxx
WITHOUT_CLASSIFICATION	schema should be identical to the statement. Ignore
WITHOUT_CLASSIFICATION	check if this completion request is outside the original definition point
WITHOUT_CLASSIFICATION	try as an alias
WITHOUT_CLASSIFICATION	could also be a table name
WITHOUT_CLASSIFICATION	see if its a one-table statement
WITHOUT_CLASSIFICATION	now match the columns
WITHOUT_CLASSIFICATION	no need to return if completion is identical
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	try to save the selection. do not dispose of this panel if there is a problem
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.ok=OK]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	leave a blank line just to make it look a bit nicer
WITHOUT_CLASSIFICATION	leave a blank line just to make it look a bit nicer
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.editableTable=Editable Table]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.tableContents=Table Contents:]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.dataTYpe2='General Preferences' window under the 'Data Type Controls' tab.]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.output=Output]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.bottom=Bottom]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.limitColsInCell=Limit Columns in Cell Edit]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.limitColsInCellHint=Limit columns used in WHERE clause when editing table]
WITHOUT_CLASSIFICATION	save the input for use later
WITHOUT_CLASSIFICATION	look up the table in the EditWhereCols list
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.cannotRemoveAllCols=You cannot remove all of the fields from the 'use columns' list.]
WITHOUT_CLASSIFICATION	create all of the gui objects now
WITHOUT_CLASSIFICATION	if all cols are in the "to use" side, delete from EditWhereCols
WITHOUT_CLASSIFICATION	some cols are not to be used
WITHOUT_CLASSIFICATION	do not let user remove everything from the list
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.useColumns=Use Columns]
WITHOUT_CLASSIFICATION	create the HashMap of names to use and put it in EditWhereCols
WITHOUT_CLASSIFICATION	get the values from the "not use" list and convert to sorted set
WITHOUT_CLASSIFICATION	get the values from the "use" list
WITHOUT_CLASSIFICATION	create an empty set for the "use" list
WITHOUT_CLASSIFICATION	get the values from the "use" list and convert to sorted set
WITHOUT_CLASSIFICATION	get the values from the "not use" list
WITHOUT_CLASSIFICATION	create an empty set for the "not use" list
WITHOUT_CLASSIFICATION	for each element in the "not use" set, if selected then add to "use", otherwise add to new "not use" set
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.catalogPrefix=Limit Catalog Objects using these comma-delimited prefixes:]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.limitRowsContents=Contents - Limit rows]
WITHOUT_CLASSIFICATION	Add node for each object.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.showRowCount=Show Row Count for Tables (can slow application)]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.objectTree=Object Tree]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.rows=rows]
WITHOUT_CLASSIFICATION	i18n[sessionObjectTreePropetiesPanel.filters=Filters]
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.sessionProperties=- Session Properties]
WITHOUT_CLASSIFICATION	To change body of overridden methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	Property panels for SQuirreL.
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.close=Close]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesSheet.ok=OK]
WITHOUT_CLASSIFICATION	Go thru all plugins attached to this session asking for panels.
WITHOUT_CLASSIFICATION	Add all panels to the tabbed panel.
WITHOUT_CLASSIFICATION	first convert internal data into the string array
WITHOUT_CLASSIFICATION	get each table's info
WITHOUT_CLASSIFICATION	put this into the data array
WITHOUT_CLASSIFICATION	make sure we are starting clean
WITHOUT_CLASSIFICATION	convert each string into key+HashMap and fill it into the data
WITHOUT_CLASSIFICATION	we are at the last one in the list
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingFunctions=Loading functions]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingSchemas=Loading schemas]
WITHOUT_CLASSIFICATION	By default null == types we return only cached types
WITHOUT_CLASSIFICATION	put the map into the tables db with the table name as the key
WITHOUT_CLASSIFICATION	Extra keywords that this DBMS supports.
WITHOUT_CLASSIFICATION	The SessionManager is global to SQuirreL. If we don't remove the listeners the Session won't get Garbeage Collected.
WITHOUT_CLASSIFICATION	load tables with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	load views with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	load procedures with catalog = null
WITHOUT_CLASSIFICATION	load procedures with schema = null
WITHOUT_CLASSIFICATION	it's error to have '8' and '9' in octal number
WITHOUT_CLASSIFICATION	'8' and '9' already handled
WITHOUT_CLASSIFICATION	/ Schema dependent data. Are changed only in this class
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	null == schemaLoadInfos[0].schemaName is the case when there are no _schemas specified schemaLoadInfos.length will then be 1.
WITHOUT_CLASSIFICATION	only single dot
WITHOUT_CLASSIFICATION	Now, create an array large enough to hold the original and the new
WITHOUT_CLASSIFICATION	Append the new tables to the new array, starting at the end of the original
WITHOUT_CLASSIFICATION	Sort it and store in a new CopyOnWriteArrayList
WITHOUT_CLASSIFICATION	CopyOnWriteArrayList has snapshot iterators that don't support iterator.remove()
WITHOUT_CLASSIFICATION	Unfortunately, conversion to uppercase does not work properly for the Georgian alphabet, which has strange rules about case conversion. So we need to make one last check before exiting.
WITHOUT_CLASSIFICATION	Current Alias Schema properties dont want cache. so we don't cache.
WITHOUT_CLASSIFICATION	reload complete SchemaInfo
WITHOUT_CLASSIFICATION	DB2 stores all names in upper case. PostgreSQL stores table names in lower case. That's why we may not find table as it was written in the create statement. So we try out the upper and lower case names too.
WITHOUT_CLASSIFICATION	i18n[oracle.displayColumns=Display index column information]
WITHOUT_CLASSIFICATION	stay in line-comment state
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.dontShowAgain=Don't show this message again]
WITHOUT_CLASSIFICATION	stay in block-comment state
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.columnLabel=Columns]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.close=Close]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.showAliasProps=Open Alias Schema Properties]
WITHOUT_CLASSIFICATION	hold the state
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.valueLabel=Value]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.whereClauseLabel=Where Clause]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.hint=Where clause for the selected table]
WITHOUT_CLASSIFICATION	hold the state
WITHOUT_CLASSIFICATION	Put the 'AND' or the 'OR' in front of the clause if there are already values in the text area.
WITHOUT_CLASSIFICATION	i18n[oracle.triggerDetails=Details]
WITHOUT_CLASSIFICATION	If the column is a text column, and there aren't single quotes around the value, put them there.
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	First parse the SQL string
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.columnsLabel=Columns]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.hint=Order by clause for the selected table]
WITHOUT_CLASSIFICATION	Users.
WITHOUT_CLASSIFICATION	These must not be internationalized since SQL tokens must be in English No I18N No I18N
WITHOUT_CLASSIFICATION	1. Find the local release.xml file
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.error.columnList=Unable to get list of columns {0}]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.downloadingUpdatesMsg=Downloading Files]
WITHOUT_CLASSIFICATION	This is a tool window.
WITHOUT_CLASSIFICATION	boolean isUpToDate() throws Exception;
WITHOUT_CLASSIFICATION	To change body of created methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Channel that provides stable release updates
WITHOUT_CLASSIFICATION	Check once a day Check once a week check every time the app launches
WITHOUT_CLASSIFICATION	Channel that provides snapshot release updates - more frequent and less stable
WITHOUT_CLASSIFICATION	When all updates are retrieved, tell the user that the updates will be installed upon the next startup.
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.changesRecordedMsg=Requested changes will be made when SQuirreL is restarted]
WITHOUT_CLASSIFICATION	2. Load the local release.xml file as a ChannelXmlBean.
WITHOUT_CLASSIFICATION	2. Load the local release.xml file as a ChannelXmlBean.
WITHOUT_CLASSIFICATION	3. Determine the channel that the user wants (stable or snapshot)
WITHOUT_CLASSIFICATION	4. Get the release.xml file as a ChannelXmlBean from the server or filesystem.
WITHOUT_CLASSIFICATION	5. Is it the same as the local copy, which was placed either by the installer or the last update?
WITHOUT_CLASSIFICATION	build data
WITHOUT_CLASSIFICATION	build ui
WITHOUT_CLASSIFICATION	Persists the change list to the update directory.
WITHOUT_CLASSIFICATION	Kick off a thread to go and fetch the files one-by-one and register callback class - DownloadStatusEventHandler
WITHOUT_CLASSIFICATION	1. Wait for user to click ok/close
WITHOUT_CLASSIFICATION	2. Display global preferences
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	2. When the user clicks ok, then display update dialog again.
WITHOUT_CLASSIFICATION	Check to see if to is a directory and convert toFile to be the name of the file in that directory.
WITHOUT_CLASSIFICATION	Helper Methods
WITHOUT_CLASSIFICATION	If the update dir, is actually a file, log an error.
WITHOUT_CLASSIFICATION	If the downloads dir doesn't already exist, just create it.
WITHOUT_CLASSIFICATION	1. Find the local release.xml file. Bail with exception if we cannot find it.
WITHOUT_CLASSIFICATION	5. Is it the same as the local copy, which was placed either by the installer or the last update?
WITHOUT_CLASSIFICATION	-1 is stored if the checksum operation failed. This will ensure that comparison with any other file's checksum will be different - even if they happen to be the same file.
WITHOUT_CLASSIFICATION	3. & 3a. Get the release.xml file as a ChannelXmlBean from the server or filesystem.
WITHOUT_CLASSIFICATION	Record now as the last time we checked for updates.
WITHOUT_CLASSIFICATION	3a. For server, Determine the channel that the user has (stable or snapshot)
WITHOUT_CLASSIFICATION	Since this timer must be started when SQuirreL is launched, wait a couple of minutes for SQuirreL to get done initializing the UI.
WITHOUT_CLASSIFICATION	Since the user only wants to be notified of updates at startup, return here, thereby freeing up the thread.
WITHOUT_CLASSIFICATION	Since this thread is not a UI thread, it is ok to run the task synchronously.
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	All currently installed artifacts will be marked with INSTALL action.
WITHOUT_CLASSIFICATION	Copy the app module jar to core downloads directory
WITHOUT_CLASSIFICATION	get the type of artifact
WITHOUT_CLASSIFICATION	Remove the core items since they are the most recent, and the user is not allowed to remove them
WITHOUT_CLASSIFICATION	is it installed?
WITHOUT_CLASSIFICATION	core artifacts are not displayed
WITHOUT_CLASSIFICATION	ArtifactName Type Installed? Install/Update/Remove
WITHOUT_CLASSIFICATION	Label panel containing the versions for the update at top of dialog.
WITHOUT_CLASSIFICATION	Install directories
WITHOUT_CLASSIFICATION	GUI Widgets
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Spring-injected dependencies
WITHOUT_CLASSIFICATION	Download directories
WITHOUT_CLASSIFICATION	Backup directories
WITHOUT_CLASSIFICATION	Skip files that are not installed - new files
WITHOUT_CLASSIFICATION	artifact name for plugins is <plugin internal name>.zip
WITHOUT_CLASSIFICATION	translations are most likely to be found in core lib dir.
WITHOUT_CLASSIFICATION	Need to remove the existing jar in the plugins directory and all of the files beneath the plugin-named directory.
WITHOUT_CLASSIFICATION	Skip the artifact if it is identical to the one that is already installed
WITHOUT_CLASSIFICATION	We have a core or translation file that is not already installed - add it
WITHOUT_CLASSIFICATION	Handle squirrel-sql.jar and documentation archive carefully - they live at the top
WITHOUT_CLASSIFICATION	strange that release xml file wasn't found; but not a problem at this point - just log it.
WITHOUT_CLASSIFICATION	This file is a zip; it needs to be extracted into the install directory. All zips are packaged in such a way that the extraction beneath install directory is all that is required.
WITHOUT_CLASSIFICATION	--------------------------- Spring=injected dependencies --------------------------------------------
WITHOUT_CLASSIFICATION	Spring-injected
WITHOUT_CLASSIFICATION	Spring-injected
WITHOUT_CLASSIFICATION	----------------------------------- Public API ------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------- Helper methods ------------------------------------------------
WITHOUT_CLASSIFICATION	f is a module
WITHOUT_CLASSIFICATION	Time to wait between checks that the event dispatch thread isn't hung.
WITHOUT_CLASSIFICATION	Maximum time we won't warn about.
WITHOUT_CLASSIFICATION	When we started dispatching the current event, in milliseconds.
WITHOUT_CLASSIFICATION	Have we already dumped a stack trace for the current event dispatch?
WITHOUT_CLASSIFICATION	The event dispatch thread, for the purpose of getting stack traces.
WITHOUT_CLASSIFICATION	Don't keep reporting the same hang every 100 ms.
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFailedMessage=Restore from backup failed. Re-installation may be required.
WITHOUT_CLASSIFICATION	Used as the value of startedLastEventDispatchAt when we're not in the middle of event dispatch.
WITHOUT_CLASSIFICATION	Synchronize on the outer class, because that's where all the state lives.
WITHOUT_CLASSIFICATION	We know that it's not interesting to show any code above where we get involved in event dispatch, so we stop printing the stack trace when we get as far back as our code.
WITHOUT_CLASSIFICATION	I don't know of any API for getting the event dispatch thread, but we can assume that it's the current thread if we're in the middle of dispatching an AWT event...
WITHOUT_CLASSIFICATION	get size of document width in pixels height in pixels height of printer page width of printer page
WITHOUT_CLASSIFICATION	make sure not print empty pages
WITHOUT_CLASSIFICATION	shift Graphic to line up with beginning of print-imageable region
WITHOUT_CLASSIFICATION	shift Graphic to line up with beginning of next page to print
WITHOUT_CLASSIFICATION	scale the page so the width fits...
WITHOUT_CLASSIFICATION	for faster printing, turn off double buffering
WITHOUT_CLASSIFICATION	repaint the page for printing
WITHOUT_CLASSIFICATION	first time through this method in program, so go cleanup old log files
WITHOUT_CLASSIFICATION	public File getDebugLogFile() { return new File(_userSettingsDir + File.separator + "squirrel-sql-debug.log"); }
WITHOUT_CLASSIFICATION	the number of files to keep is arbitrarilly set here
WITHOUT_CLASSIFICATION	define filter to select only names using the fileBase
WITHOUT_CLASSIFICATION	get the directory
WITHOUT_CLASSIFICATION	create filename filter and attach to directory
WITHOUT_CLASSIFICATION	get list of files using that base name
WITHOUT_CLASSIFICATION	not too many old files
WITHOUT_CLASSIFICATION	we do not expect a lot of files in this directory, so just do things linearly
WITHOUT_CLASSIFICATION	sort the list
WITHOUT_CLASSIFICATION	delete the old file
WITHOUT_CLASSIFICATION	a.put("Built-By", "manningr"); argMap.get(BUILT_BY_KEY)
WITHOUT_CLASSIFICATION	Inserts are not properly separated. We give up.
WITHOUT_CLASSIFICATION	i18n[editextras.reformatFailed=Reformat failed, normalized Strings differ]
WITHOUT_CLASSIFICATION	If our separator is the regular expression special char '|', then quote it before formatting.
WITHOUT_CLASSIFICATION	No special treatment
WITHOUT_CLASSIFICATION	No special treatment
WITHOUT_CLASSIFICATION	Not successful
WITHOUT_CLASSIFICATION	Not successful
WITHOUT_CLASSIFICATION	Split the first two matching toplevel brakets here
WITHOUT_CLASSIFICATION	/ Now check length of Strings in splitPieces1 again
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	the next top level ket is the counterpart to bra
WITHOUT_CLASSIFICATION	No flaten. We would turn statement parts to comment
WITHOUT_CLASSIFICATION	light yellow
WITHOUT_CLASSIFICATION	without this the completion panel's size will be weird
WITHOUT_CLASSIFICATION	Needs to be done later because when reInitList is called, the text componetes model is not yet up to date. E.g. the last character is missing.
WITHOUT_CLASSIFICATION	needed to resize completion panle appropriately see initializationof _curCompletionPanelSize
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Update the bounds of the popup
WITHOUT_CLASSIFICATION	Convert to layered pane's coordinates
WITHOUT_CLASSIFICATION	can't fit -> hide
WITHOUT_CLASSIFICATION	valid bounds
WITHOUT_CLASSIFICATION	not in scroll pane
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNullableUnknown=unknown]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredBasic=supports all except 'WHERE...LIKE']
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	SEARCHABLE column of result set.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	resolve Largest and Preferred placements if possible
WITHOUT_CLASSIFICATION	Compute available height above the cursor
WITHOUT_CLASSIFICATION	more space below
WITHOUT_CLASSIFICATION	more space above
WITHOUT_CLASSIFICATION	popup does not fit with the orig placement
WITHOUT_CLASSIFICATION	do one or two passes
WITHOUT_CLASSIFICATION	Temporary events need to be included in case a modla dialog opens.
WITHOUT_CLASSIFICATION	place popup according to caret position and Placement
WITHOUT_CLASSIFICATION	private boolean _showHeadings;
WITHOUT_CLASSIFICATION	Note: Temporary events need to be included in case a modla dialog opens.
WITHOUT_CLASSIFICATION	Some drivers will give null.
WITHOUT_CLASSIFICATION	NULLABLE column of result set.
WITHOUT_CLASSIFICATION	private ColumnDisplayDefinition[] _hdgs = new ColumnDisplayDefinition[0];
WITHOUT_CLASSIFICATION	get the ConentPane into a variable for convenience
WITHOUT_CLASSIFICATION	ignore - unused.
WITHOUT_CLASSIFICATION	the table containing the user's input
WITHOUT_CLASSIFICATION	object that called us and that we want to return data to when done
WITHOUT_CLASSIFICATION	save data passed in to us
WITHOUT_CLASSIFICATION	set layout
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	user said to insert, so collect all the data from the JTable and send it to the DataSetViewer for insertion into DB and on-screen tables
WITHOUT_CLASSIFICATION	DATA_TYPE column of result set. int data = _rs.getInt(idx);
WITHOUT_CLASSIFICATION	If all columns in a table have empty strings as the headings then the row height of the label row is zero. We dont want this.
WITHOUT_CLASSIFICATION	create the JTable for input and put in the top of window
WITHOUT_CLASSIFICATION	add row headers to help user understand what the second row is
WITHOUT_CLASSIFICATION	create the buttons for input done and cancel
WITHOUT_CLASSIFICATION	this frame should really go away when done
WITHOUT_CLASSIFICATION	display the frame
WITHOUT_CLASSIFICATION	do not recognize this button request
WITHOUT_CLASSIFICATION	first make sure that user's last input has been included (It is too easy for user to enter data and forget to click on another field to force it to be set.)
WITHOUT_CLASSIFICATION	put the data into the DB and the on-screen JTable. If there was a failure, do not make this form go away since the user may be able to fix the problem by changing the data.
WITHOUT_CLASSIFICATION	the insert worked, so make this input form go away
WITHOUT_CLASSIFICATION	create column model
WITHOUT_CLASSIFICATION	set up cell editors on first row
WITHOUT_CLASSIFICATION	the second row contains a multi-line description, so make that row high enough to display it
WITHOUT_CLASSIFICATION	add mouse listener for Popup
WITHOUT_CLASSIFICATION	for now, ignore popup request RowDataJTable.this.displayPopupMenu(evt);
WITHOUT_CLASSIFICATION	for now, ignore popup request RowDataJTable.this.displayPopupMenu(evt);
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	only the first row (containing data) is editable
WITHOUT_CLASSIFICATION	for entries past the first one, use the default renderer
WITHOUT_CLASSIFICATION	i18n[rowInputDataFrame.conversionErr=Conversion Error]
WITHOUT_CLASSIFICATION	colDefs[i].getSqlTypeName() + "\n" + ((colDefs[i].isNullable()) ? "nullable" : "not nullable") + "\n" + "precision="+ colDefs[i].getPrecision() + "\n" + "scale=" + colDefs[i].getScale();
WITHOUT_CLASSIFICATION	data is an object - assume already validated
WITHOUT_CLASSIFICATION	data is a String, so we need to convert to real object
WITHOUT_CLASSIFICATION	display error message and do not update the table
WITHOUT_CLASSIFICATION	data converted ok, so update the table
WITHOUT_CLASSIFICATION	set up the list of column names and the data for the rows
WITHOUT_CLASSIFICATION	set column heading set data in first row
WITHOUT_CLASSIFICATION	put a description of the field in the following rows
WITHOUT_CLASSIFICATION	put the data and header names into the model
WITHOUT_CLASSIFICATION	The text area displaying the object contents
WITHOUT_CLASSIFICATION	the scroll pane that holds the text area
WITHOUT_CLASSIFICATION	Description needed to handle conversion of data to/from Object
WITHOUT_CLASSIFICATION	name of file to do export/import/process on
WITHOUT_CLASSIFICATION	command to use when processing data with an external program
WITHOUT_CLASSIFICATION	save the original value for re-use by CLOB/BLOB types in conversion
WITHOUT_CLASSIFICATION	Binary data viewing option: which radix to use This object is only non-null when the data is binary data
WITHOUT_CLASSIFICATION	Binary data viewing option: view ascii as char rather than as numeric value
WITHOUT_CLASSIFICATION	user asked to see binary data in a different format default to hex
WITHOUT_CLASSIFICATION	return the expected format for this data default to hex
WITHOUT_CLASSIFICATION	tell user it is editable
WITHOUT_CLASSIFICATION	add a panel containing binary data editing options, if needed
WITHOUT_CLASSIFICATION	this is a binary field, so allow for multiple viewing options
WITHOUT_CLASSIFICATION	Instances.
WITHOUT_CLASSIFICATION	Sessions.
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.withCommand=With command:]
WITHOUT_CLASSIFICATION	GET OSX_FILE FOR EXPORT & EXTERNAL PROCESSING
WITHOUT_CLASSIFICATION	Symbol used by user in Command field to indicate "Put the file name here" when the command is executed.
WITHOUT_CLASSIFICATION	import and external processing can only be done if panel is editable
WITHOUT_CLASSIFICATION	use default sequential layout
WITHOUT_CLASSIFICATION	load filename and command with previously entered info if not the default
WITHOUT_CLASSIFICATION	add some space
WITHOUT_CLASSIFICATION	add external processing command field and button
WITHOUT_CLASSIFICATION	add controls for file handling, but only if DataType can do File operations
WITHOUT_CLASSIFICATION	do not do import
WITHOUT_CLASSIFICATION	yes it can, so add controls
WITHOUT_CLASSIFICATION	add combo box for command to execute
WITHOUT_CLASSIFICATION	load the info into the text fields
WITHOUT_CLASSIFICATION	no entry selected
WITHOUT_CLASSIFICATION	do not do import
WITHOUT_CLASSIFICATION	make this the same size as the fileNameField
WITHOUT_CLASSIFICATION	File object for doing IO
WITHOUT_CLASSIFICATION	reset width to normal
WITHOUT_CLASSIFICATION	add note to user about including file name in command
WITHOUT_CLASSIFICATION	user has entered some non-default info, so save it
WITHOUT_CLASSIFICATION	get name of file, which must exist
WITHOUT_CLASSIFICATION	IMPORT OBJECT FROM OSX_FILE
WITHOUT_CLASSIFICATION	not allowed - must have existing file for import
WITHOUT_CLASSIFICATION	guard against something really stupid
WITHOUT_CLASSIFICATION	not something we can read
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.noExportFile=No file name given for export.\nPlease enter a file name or use Browse before clicking Export.]
WITHOUT_CLASSIFICATION	If file name default and cmd is null or empty, make sure this entry is not being held in CellImportExportInfoSaver
WITHOUT_CLASSIFICATION	save the user options - we know that it is not the default because we do not allow importing from "temp file"
WITHOUT_CLASSIFICATION	user has not entered anything or has reset to defaults, so make sure there is no entry for this column in the saved info
WITHOUT_CLASSIFICATION	get the real name for use later
WITHOUT_CLASSIFICATION	Now that we have the file, do the import. Note: the sequence of operations is divided into two sections at this point. The preceeding code ensures that we have a readable file, and the code in the following method call does the import. The reason for splitting at this point is that the Execute operation needs to do an import, and it will already have the file to do the import from (which is the same as the file it exported into).
WITHOUT_CLASSIFICATION	file name verification operations are the same for both export and execute, so do that work here for both. If file name is null or empty, do not proceed
WITHOUT_CLASSIFICATION	create the file to open
WITHOUT_CLASSIFICATION	user must have supplied a file name.
WITHOUT_CLASSIFICATION	user wants us to create a temp file
WITHOUT_CLASSIFICATION	see if file exists
WITHOUT_CLASSIFICATION	user does not want to overwrite the file
WITHOUT_CLASSIFICATION	file does not already exist, so try to create it
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotOpenFile=Cannot open file {0}.\nError was:{1}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportedToFile=Data Successfully exported to file {0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportSuccess=Export Success]
WITHOUT_CLASSIFICATION	We have done everything we can prior to this point to ensure that the the file is accessible, but it is still possible that an existing file was removed at a bad moment. Also, the compiler insists that we put this in a try statement
WITHOUT_CLASSIFICATION	file exists, is normal and is writable, so see if user wants to overwrite contents of file
WITHOUT_CLASSIFICATION	user is ok with overwriting file We do not need to do anything special to overwrite (as opposed to appending) since the OutputString starts at the beginning of the file by default.
WITHOUT_CLASSIFICATION	we could tell user here that export was canceled, but I don't think its necessary, and that avoids forcing user to do yet another annoying mouse click.
WITHOUT_CLASSIFICATION	if we get here, then everything worked correctly, so tell user that data was put into file. This is different from the Import strategy because the user may not know the name of the file that was used if they selected the automatic temp file operation, or they may not know what directory the file was actually put into, so this tells them the full file path.
WITHOUT_CLASSIFICATION	This may be called either when the table is editable or when it is read-only. When it is read-only, there is no command to be saved, but when it is editable, there may be a command.
WITHOUT_CLASSIFICATION	if user did anything other than default, then save their options
WITHOUT_CLASSIFICATION	EXPORT OBJECT TO OSX_FILE
WITHOUT_CLASSIFICATION	EXPORT OBJECT TO OSX_FILE, EXECUTE PROGRAM ON IT, IMPORT IT BACK
WITHOUT_CLASSIFICATION	export data to file
WITHOUT_CLASSIFICATION	replace any instance of flag in command with file name
WITHOUT_CLASSIFICATION	cannot execute a null command
WITHOUT_CLASSIFICATION	wait for command to complete
WITHOUT_CLASSIFICATION	bad export - do not proceed with command The exportData() method has already put up a message to the user saying the export failed.
WITHOUT_CLASSIFICATION	import the data back from the same file
WITHOUT_CLASSIFICATION	check for possibly bad return from child
WITHOUT_CLASSIFICATION	The DataObject returns a string to put into the popup which can later be converted to the appropriate object type.
WITHOUT_CLASSIFICATION	command returned non-standard value. ask user before proceeding.
WITHOUT_CLASSIFICATION	end of combined export and execute operations
WITHOUT_CLASSIFICATION	If the file was a temp file, delete it now. We assume that Export-only operations want to leave the file in place, but Execute operations just want a temp space to work with and do not want it lying around afterwards.
WITHOUT_CLASSIFICATION	it is handy to have the cannonical path name to show user in error messages. Since getting that name might involve an IOException, we need to put it inside a try statement. However, since the file does exist there is no good reason for getting an IOException at this point, but if we get one there is something seriously wrong and we want to abort. Therefore it make sense to get that name here and save it for later use.
WITHOUT_CLASSIFICATION	create the imput stream (so that DataType objects don't have to)
WITHOUT_CLASSIFICATION	hand file input stream to DataType object for import Also, handle File IO errors here so that DataType objects do not have to.
WITHOUT_CLASSIFICATION	return the expected format for this data
WITHOUT_CLASSIFICATION	since the above did not throw an exception, we now have a good new data object, so change the text area to reflect that new object.
WITHOUT_CLASSIFICATION	cleanup resources used
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.reformatXml=Reformat XML]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorWritingFile=There was an error while writing file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	return the expected format for this data
WITHOUT_CLASSIFICATION	If the user has selected a non-cannonical Binary format, we need to convert the text appropriately
WITHOUT_CLASSIFICATION	we need to convert to a different format default to hex
WITHOUT_CLASSIFICATION	I cannot think of any reason for doing anything at all here
WITHOUT_CLASSIFICATION	hand file output stream to DataType object for export Also, handle File IO errors here so that DataType objects do not have to.
WITHOUT_CLASSIFICATION	Hand the current text to the DataType object. DataType object is responsible for validating that the text makes sense for this type of object and converting it to the proper form for output. All errors are handled as IOExceptions
WITHOUT_CLASSIFICATION	handle null
WITHOUT_CLASSIFICATION	if the data is not binary, then there is no need for conversion. if the data is Hex with ASCII not shown as chars, then no conversion needed.
WITHOUT_CLASSIFICATION	no need for conversion
WITHOUT_CLASSIFICATION	the following can cause and exception if the text is not formatted correctly
WITHOUT_CLASSIFICATION	The field is binary and not in the format expected by the DataType default to hex
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	make sure there is an instance
WITHOUT_CLASSIFICATION	in case superclass modifies them.
WITHOUT_CLASSIFICATION	i18n[mapdataset.value=Value]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.xmlWarning2=XML Warning]
WITHOUT_CLASSIFICATION	DataTypes may limit the initial data read from the DB, e.g. to minimize the time needed for the initial load of the table. To edit the contents of a cell, we require that the entire contents of the data element be present in the cell before editing. Therefore we ask the DataType if we need to re-read the data contents without limiting it, and do that read if needed. If there is a problem during the read (e.g. we cannot identify exactly one row in the DB matching the current row in the table), then the cell is not editable. The reverse is not true - if we succeed in reading the data, there may still be other reasons why we cannot edit it, so we need to check for it being editable after the read
WITHOUT_CLASSIFICATION	The following pointer is needed to allow the "Make Editable button to tell the application to set up an editable display panel
WITHOUT_CLASSIFICATION	The list of rows may be empty, in which case we just return.
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	there was a problem with the read It would be nice to report this to the user, but if we try we get in trouble in some cases where the data is continually re-read after the dialog goes away (because the cell is being re-painted). cell is not editable
WITHOUT_CLASSIFICATION	GWG XML format check code
WITHOUT_CLASSIFICATION	if no columns defined, return a generic class to avoid anything throwing an exception.
WITHOUT_CLASSIFICATION	sort the indexes into ascending order (because that is the only function easilly available from the Arrays class)
WITHOUT_CLASSIFICATION	We want to delete rows from the end of the table towards the beginning of the table. If we delete from the front to the back, that throws off the indexes of the rows after each delete and we would have to compensate for that. Example: if we want to delete rows 2 and 4 and do it in that order, then after deleteing row 2 the row that used to be row 4 is now actually row 3, so we would have to subtract 1 from the index to get the row to delete. On the other hand, if we delete row 4 first, then the indexes of all rows prior to that one have not been affected, so we can then delete row 2 without any complications.
WITHOUT_CLASSIFICATION	delete the row from the table
WITHOUT_CLASSIFICATION	The indexes are in ascending order, but we want to delete in descending order (see previous comment), so run through the list backwards.
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	do a simple check to see if the string might contain XML or not
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	no tags, so cannot be XML
WITHOUT_CLASSIFICATION	the parse did not find XML, or it was mal-formed
WITHOUT_CLASSIFICATION	GWG format check code follows...
WITHOUT_CLASSIFICATION	GWG XML format check code
WITHOUT_CLASSIFICATION	see if there was a problem during parsing
WITHOUT_CLASSIFICATION	End GWG format check code
WITHOUT_CLASSIFICATION	Assume that all start tags are "<...>" or include a space after the tag name (e.g. as in "<SOMETAG args>" and all end tags are "</...>". Remove the syntactic markers, then remove any spaces, and convert to upper case for comparison
WITHOUT_CLASSIFICATION	check for "malformed" XML, or text that happens to contain a "<" with no corresponding ">"
WITHOUT_CLASSIFICATION	Done before actually reading the data from the ResultSet. If done after reading the data from the ResultSet Oracle throws a NullPointerException when processing ResultSetMetaData methods for the ResultSet returned for DatabasemetaData.getExportedKeys.
WITHOUT_CLASSIFICATION	Read the entire row, since some drivers complain if columns are read out of sequence
WITHOUT_CLASSIFICATION	SS: now select/reorder columns
WITHOUT_CLASSIFICATION	Don't log an error message here. It is possible that the user interrupted the query because it was taking too long. Just throw the exception, and let the caller decide whether or not the exception should be logged.
WITHOUT_CLASSIFICATION	SS: Modified to auto-compute column widths if <computeWidths> is true
WITHOUT_CLASSIFICATION	SS: update dynamic column widths
WITHOUT_CLASSIFICATION	Empty block
WITHOUT_CLASSIFICATION	Oracle throws this ex on BLOB data types
WITHOUT_CLASSIFICATION	HSQLDB 1.7.1 throws error.
WITHOUT_CLASSIFICATION	Matt Dahlman: this causes problems with the JDBC driver delivered with Teradata V2R05.00.00.11
WITHOUT_CLASSIFICATION	The JTable used for displaying all DB ResultSet info.
WITHOUT_CLASSIFICATION	we want to allow editing of read-only tables on-demand, but it would be confusing to include the "Make Editable" option when we are already in edit mode, so only allow that option when the background model is updateable AND we are not already editing
WITHOUT_CLASSIFICATION	just in case table is editable, call creator to set up cell editors
WITHOUT_CLASSIFICATION	override the JTable method so that whenever something asks for the cellEditor, we save a reference to that cell editor. Our ASSUMPTION is that the cell editor is only requested when it is about to be activated.
WITHOUT_CLASSIFICATION	handle special case of delete with <null> contents
WITHOUT_CLASSIFICATION	ignore the user input
WITHOUT_CLASSIFICATION	data is an object - assume already validated
WITHOUT_CLASSIFICATION	generally for KEY_TYPED this means add the typed char to the end of the text, but there are some things (e.g. control chars) that are ignored, so let the normal processing do its thing
WITHOUT_CLASSIFICATION	now check to see if the original contents were <null> and we have actually added the input char to the end of it
WITHOUT_CLASSIFICATION	check that we did not just add a char to a <null>
WITHOUT_CLASSIFICATION	replace the null with just the char
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	data is a String, so we need to convert to real object
WITHOUT_CLASSIFICATION	display error message and do not update the table
WITHOUT_CLASSIFICATION	data converted ok, so update the table
WITHOUT_CLASSIFICATION	just in case table is editable, call creator to set up cell editors
WITHOUT_CLASSIFICATION	_colDefs = hdgs;
WITHOUT_CLASSIFICATION	Column not in model
WITHOUT_CLASSIFICATION	call the DataType object for this column and have it check the current value
WITHOUT_CLASSIFICATION	call the underlying model to get the whole data, if possible
WITHOUT_CLASSIFICATION	underlaying data cannot be changed
WITHOUT_CLASSIFICATION	cannot delete rows in read-only table
WITHOUT_CLASSIFICATION	cannot insert row into read-only table
WITHOUT_CLASSIFICATION	default is 12 point, so define font relative to that
WITHOUT_CLASSIFICATION	reset each time we start a new print
WITHOUT_CLASSIFICATION	double headerWidth = tableHeader.getWidth() scale;
WITHOUT_CLASSIFICATION	while
WITHOUT_CLASSIFICATION	if are more columns left, part page
WITHOUT_CLASSIFICATION	Begin code related to printing
WITHOUT_CLASSIFICATION	variables used in printing
WITHOUT_CLASSIFICATION	at least 1 more row left
WITHOUT_CLASSIFICATION	page number message (in smaller type)
WITHOUT_CLASSIFICATION	draw the header on every page
WITHOUT_CLASSIFICATION	cut table image and draw on the page
WITHOUT_CLASSIFICATION	double pageBottom = pageTop + clipHeight + headerHeight;
WITHOUT_CLASSIFICATION	End of code related to printing
WITHOUT_CLASSIFICATION	since user is now using popup, stop editing using the in-cell editor, if any
WITHOUT_CLASSIFICATION	Fixes ClassCastException, see below.
WITHOUT_CLASSIFICATION	((IMainFrame) comp).addInternalFrame(taif, false); taif.setLayer(JLayeredPane.POPUP_LAYER);
WITHOUT_CLASSIFICATION	getRoot() doesn't appear to return the deepest Window, but the first one. If you have a dialog owned by a window you get the dialog, not the window.
WITHOUT_CLASSIFICATION	fudge for larger inset windows
WITHOUT_CLASSIFICATION	Determine the position to place the new internal frame. Ensure that the right end of the internal frame doesn't exend past the right end the parent frame.Use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentBounds.width, the new internal frame still extends past the right end of the parent frame).
WITHOUT_CLASSIFICATION	inner class for the data display pane
WITHOUT_CLASSIFICATION	data is editable in popup
WITHOUT_CLASSIFICATION	Since data is editable, we need to add control panel to manage user requests for DB update, file IO, etc.
WITHOUT_CLASSIFICATION	data is not editable in popup
WITHOUT_CLASSIFICATION	create update/cancel controls using default layout
WITHOUT_CLASSIFICATION	try to convert the text in the popup into a valid instance of type of data object being held in the table cell
WITHOUT_CLASSIFICATION	handle an error in conversion of text to object
WITHOUT_CLASSIFICATION	no problem in conversion - proceed with update ((DataSetViewerTablePanel.MyJTable)_table).setConvertedValueAt( newValue, _row, _col);
WITHOUT_CLASSIFICATION	add buttons to button panel
WITHOUT_CLASSIFICATION	add button panel to main panel
WITHOUT_CLASSIFICATION	Save various information which is needed to do Update & Cancel.
WITHOUT_CLASSIFICATION	The following is only useable for a root type of InternalFrame. If the root type is Dialog or Frame, then other code must be used.
WITHOUT_CLASSIFICATION	we need to table column model to be able to add CellEditors to the individual columns
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.warning=Warning]
WITHOUT_CLASSIFICATION	check to see if new data is same as old data, in which case we do not update the underlying data. This is NOT an optimization (though it does speed things up). We need to do this to avoid an error when we check for rows being changed in the DB. If the new value and old value are the same, when we look to see if any rows already exist with the new value, it will find the existing row and claim that the update will make one row identical to the changed row (i.e. that there will be two identical rows in the DB) which is not true. So we avoid the problem by not updating the DB if the data has not been changed. This can happen if user changes the cell contents, then changes them back before exiting the cell.
WITHOUT_CLASSIFICATION	Menu for right-mouse-click when in cell editors
WITHOUT_CLASSIFICATION	use factory to get the appropriate editor
WITHOUT_CLASSIFICATION	cannot edit something that we do not know anything about
WITHOUT_CLASSIFICATION	if there is no updateable model, then we cannot update anything (should never happen - just being safe here)
WITHOUT_CLASSIFICATION	Cannot edit the rowID column, if present
WITHOUT_CLASSIFICATION	add right-click menu to cell editor
WITHOUT_CLASSIFICATION	no underlying data, so cannot be changed
WITHOUT_CLASSIFICATION	We have to look for the modelindex because of the Row Number column
WITHOUT_CLASSIFICATION	ask the DataType object if the two values are the same
WITHOUT_CLASSIFICATION	At this point the user input has been validated and both the new and old values are objects of the appropriate data type. Either or both of newValue and oldValue may be null.
WITHOUT_CLASSIFICATION	first look to see if they are identical objects, e.g. both null
WITHOUT_CLASSIFICATION	the caller does not need to know that nothing happened
WITHOUT_CLASSIFICATION	the caller does not need to know that nothing happened
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	if we reach this point, the value has been changed, so fall through to next section
WITHOUT_CLASSIFICATION	if either of the values is null and the other is not, then the data has changed and we fall-through to the change process. Otherwise, check the object contents.
WITHOUT_CLASSIFICATION	no update done to underlying data
WITHOUT_CLASSIFICATION	call the function in the app code that checks for unexpected conditions in the current DB
WITHOUT_CLASSIFICATION	call the function in the app code that saves the data in the persistant storage (e.g. a database). The success or failure of that function (as indicated by the absance or presence of a result errpor/warning message) determines the result of this call. (Since the table is supposed to be editable, we should have an IDataSetUpdateableTableModel object set in our super class.)
WITHOUT_CLASSIFICATION	No problems, so indicate a successful update of the underlying data. In case we are editing an SQL result that contains the edited colum more than once, we need to tell the caller to update all columns. Otherwise generation of where clauses for further editing will fail.
WITHOUT_CLASSIFICATION	The list of rows may be empty, in which case we tell user they should select something first
WITHOUT_CLASSIFICATION	Non-empty set of rows to delete. Make sure user wants to delete
WITHOUT_CLASSIFICATION	Determine the position to place the new internal frame. Ensure that the right end of the internal frame doesn't exend past the right end the parent frame.Use a fudge factor as the dim.width doesn't appear to get the final width of the internal frame (e.g. where pt.x + dim.width == parentBounds.width, the new internal frame still extends past the right end of the parent frame).
WITHOUT_CLASSIFICATION	cancel any current cell editing operations
WITHOUT_CLASSIFICATION	tell creator to delete from DB
WITHOUT_CLASSIFICATION	tell user that there was a problem
WITHOUT_CLASSIFICATION	Setting the starting position is ugly. I just picked a point.
WITHOUT_CLASSIFICATION	get the default values from the DB for the table columns
WITHOUT_CLASSIFICATION	based on defaults from DB, get the default object instance for each column
WITHOUT_CLASSIFICATION	((IMainFrame)comp).addInternalFrame(rdif, false); rdif.setLayer(JLayeredPane.POPUP_LAYER);
WITHOUT_CLASSIFICATION	there was a problem inserting into the DB
WITHOUT_CLASSIFICATION	non-null return tells caller there was a problem
WITHOUT_CLASSIFICATION	add the data to the existing tables
WITHOUT_CLASSIFICATION	Do not try to be fancy and insert the data where the user is looking, just stuff it into the actual model and re-paint the table when the 'table changed' event is fired.
WITHOUT_CLASSIFICATION	everything is ok
WITHOUT_CLASSIFICATION	Setters and Getters for each field.
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	_leftData.add(row[0]); _rightData.add(row[1]);
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	user wants field to be true
WITHOUT_CLASSIFICATION	user wants field to be false
WITHOUT_CLASSIFICATION	1646886: If we've already seen the parameter, don't create another instance as this will force the user to enter the same value twice. Add the previous instance to itemsInSql though so that the parameters value gets propagated to the right spot(s) in the SQL statement.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	let user enter T, t, Y, y, or 1 for true, and F, f, N, n, or 0 for false
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	handle cases of null The only legal input in this case is a delete
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	when field is not null delete means set to null, so do it
WITHOUT_CLASSIFICATION	field is not nullable or input was not a delete we have already handled all legal input, so just tell user this is being ignored
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	The SQL Results page puts text into the table cells rather than objects of the appropriate type, so we need to convert befor proceeding
WITHOUT_CLASSIFICATION	use the default settings for the conversion
WITHOUT_CLASSIFICATION	first convert internal data into the string array
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	?? There does not seem to be any standard way to represent ?? binary data in a WHERE clause... tell caller we cannot use this in Where clause
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Convert bytes to Bytes
WITHOUT_CLASSIFICATION	return the text converted from the file
WITHOUT_CLASSIFICATION	Convert Bytes to bytes
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	handle null
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	get each DataType's info
WITHOUT_CLASSIFICATION	convert each string into Classname, prop, & value and fill it into the data
WITHOUT_CLASSIFICATION	put the property into the hashmap
WITHOUT_CLASSIFICATION	get the hashmap for this type, or create it if this is a new property
WITHOUT_CLASSIFICATION	Conversion Constants
WITHOUT_CLASSIFICATION	number of chars used to represent byte the base radix
WITHOUT_CLASSIFICATION	Convert each byte and put into string buffer
WITHOUT_CLASSIFICATION	if user wants to see ASCII chars as characters, see if this is one that should be displayed that way
WITHOUT_CLASSIFICATION	convert signed to unsigned
WITHOUT_CLASSIFICATION	fall through to default
WITHOUT_CLASSIFICATION	some formats (e.g. hex & octal) extend a negative number to multiple places (e.g. FC becomes FFFC), so chop off extra stuff in front
WITHOUT_CLASSIFICATION	front pad with zeros and add to output
WITHOUT_CLASSIFICATION	always add spaces at end for consistancy
WITHOUT_CLASSIFICATION	get the text to be converted
WITHOUT_CLASSIFICATION	handle ASCII chars Irrespective of the radix, the second byte will always be a space when the data is displayed as a single ASCII character.
WITHOUT_CLASSIFICATION	convert the char into its numeric value
WITHOUT_CLASSIFICATION	default to hex if unknown base passed in
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	since we cannot do exact matches on floating point numbers, we cannot use this field in the WHERE clause.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	no existing blob to re-use
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	BLOBs are different from normal data types in that what is actually read from the DB is a descriptor pointing to the data rather than the data itself. During the initial load of the table, the values read from the descriptor may have been limited, but the descriptor itself has been completely read, Therefore we do not need to re-read the datum from the Database because we know that we have the entire descriptor. If the contents of the BLOB have been limited during the initial table load, that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Blob object that we need to re-use, since that is the DBs reference to the blob data area. Otherwise, we set the original Blob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal BLOB pointer as the original
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Make sure the entire BLOB data is read in. Return true if it has been read successfully, and false if not.
WITHOUT_CLASSIFICATION	can use an empty blob for editing
WITHOUT_CLASSIFICATION	the whole blob has been previously read in
WITHOUT_CLASSIFICATION	data was not fully read in before, so try to do that now
WITHOUT_CLASSIFICATION	read succeeded, so reset the BlobDescriptor to match
WITHOUT_CLASSIFICATION	we successfully read the whole thing
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	i18n[dataTypeBlob.blobType=BLOB (SQL type 2004)]
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Convert bytes to Bytes
WITHOUT_CLASSIFICATION	return the text converted from the file
WITHOUT_CLASSIFICATION	Convert Bytes to bytes
WITHOUT_CLASSIFICATION	?? What to do with this error? ?? error message = "Could not read the complete data. Error was: "+ex.getMessage());
WITHOUT_CLASSIFICATION	We always get the BLOB, even when we are not reading the contents. Since the BLOB is just a pointer to the BLOB data rather than the data itself, this operation should not take much time (as opposed to getting all of the data in the blob).
WITHOUT_CLASSIFICATION	BLOB exists, so try to read the data from it based on the user's directions
WITHOUT_CLASSIFICATION	User said to read at least some of the data from the blob
WITHOUT_CLASSIFICATION	determine whether we read all there was in the blob or not
WITHOUT_CLASSIFICATION	user said not to read any of the data from the blob
WITHOUT_CLASSIFICATION	BLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to BlobDescriptor
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	text field for how many bytes of Blob to read
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	for convenience, cast the value object to its type
WITHOUT_CLASSIFICATION	all the data from the clob has been read. make sure there are no newlines in it
WITHOUT_CLASSIFICATION	since we do not have all of the data from the clob, we cannot allow editing
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	no existing clob to re-use
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal CLOB pointer as the original
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	we successfully read the whole thing
WITHOUT_CLASSIFICATION	Make sure the entire CLOB data is read in. Return true if it has been read successfully, and false if not.
WITHOUT_CLASSIFICATION	can use an empty clob for editing
WITHOUT_CLASSIFICATION	the whole clob has been previously read in
WITHOUT_CLASSIFICATION	read succeeded, so reset the ClobDescriptor to match
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	?? What to do with this error? ?? error message = "Could not read the complete data. Error was: "+ex.getMessage());
WITHOUT_CLASSIFICATION	We always get the CLOB, even when we are not reading the contents. Since the CLOB is just a pointer to the CLOB data rather than the data itself, this operation should not take much time (as opposed to getting all of the data in the clob).
WITHOUT_CLASSIFICATION	CLOB exists, so try to read the data from it based on the user's directions
WITHOUT_CLASSIFICATION	User said to read at least some of the data from the clob
WITHOUT_CLASSIFICATION	determine whether we read all there was in the clob or not
WITHOUT_CLASSIFICATION	user said not to read any of the data from the clob
WITHOUT_CLASSIFICATION	CLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to ClobDescriptor
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not i18n[dataTypeBigDecimal.readContentsOnFirstLoad=Read contents when table is first loaded;]
WITHOUT_CLASSIFICATION	i18n[dataTypeClob.typeClob=CLOB (SQL type 2005)]
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	text field for how many bytes of Blob to read
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	checkbox for displaying newlines as \n in-cell
WITHOUT_CLASSIFICATION	field for size of text to read
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	Properties set-able by the user
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	values for how to use timestamps in WHERE clauses
WITHOUT_CLASSIFICATION	Define whether or not to use Timestamp in internally generated WHERE clauses, and if so what format to use.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	how to use Timestamp in WHERE clauses default to SQL standard
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	WARNING: this depends on entries in ButtonGroup being in the same order as the values for whereClauseUsage
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.generateWhereClause=For internally generated WHERE clauses:]
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	IMPORTANT: put the buttons into the array in same order as their associated values defined for whereClauseUsage.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	where clause usage group
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	Objects needed to handle radio buttons
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	add label for the radio button group
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	whether number is signed or unsigned
WITHOUT_CLASSIFICATION	the number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	If there are parameters in the SQL string, then we need to prompt for some answers.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	look for illegal chars
WITHOUT_CLASSIFICATION	cannot use '-' when unsigned
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	If the cell is editable, we really must have a valid DataType object, so the 'else' clause should never be used. It is just there as defensive programming.
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	allow the user to enter just the hour or just hour and minute and assume the un-entered values are 0
WITHOUT_CLASSIFICATION	user just entered the hour, so append min & sec
WITHOUT_CLASSIFICATION	user entered hour an min. See if they also entered secs
WITHOUT_CLASSIFICATION	user did not enter seconds
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.typeTime=Time (SQL type 92)]
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	since we cannot do exact matches on floating point numbers, we cannot use this field in the WHERE clause.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	return ((String)obj1).equals(obj2);
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in the Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since neither cell nor popup are allowed to edit, just ignore anything seen here.
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	the whole column definition
WITHOUT_CLASSIFICATION	The NumberFormat object to use for all locale-dependent formatting.
WITHOUT_CLASSIFICATION	return (String)_renderer.renderObject(value);
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	The total number of decimal digits allowed in the number
WITHOUT_CLASSIFICATION	the number of decimal digits allowed to the right of the decimal point in the number
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	several number formats use '.' as decimal separator, others use ','
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Some DBs give a negative number when they do not have a value for the scale. Assume that if the _scale is 0 or positive that the DB really means for that to be the scale, but if it is negative then we do not check.
WITHOUT_CLASSIFICATION	check the total number of digits in the number. Since the string version of the number is therepresentation of the digits in that number and including possibly a plus or minus and a decimal, start by counting the number of digits in the string.
WITHOUT_CLASSIFICATION	now remove the non-digit chars, if any
WITHOUT_CLASSIFICATION	Some drivers (e.g. Oracle) give precision as 0 in some cases. When precision is 0, we cannot check the length, so do not try.
WITHOUT_CLASSIFICATION	user entered '+' or '-' at a bad place
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid value of this data type
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in the Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	the other obj has not read the data yet.
WITHOUT_CLASSIFICATION	the other obj has not read the data yet.
WITHOUT_CLASSIFICATION	the other object has real data
WITHOUT_CLASSIFICATION	this one does not, so they are not equal
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	Convert the data into an ascii representation using the standard convention
WITHOUT_CLASSIFICATION	we have the whole contents of the BLOB tell user the data is truncated
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	Restore the contents to the original value.
WITHOUT_CLASSIFICATION	Set the contents of the component without resetting the original value.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	the other object has real data
WITHOUT_CLASSIFICATION	this one does not, so they are not equal
WITHOUT_CLASSIFICATION	we have the whole contents of the CLOB
WITHOUT_CLASSIFICATION	tell user the data is truncated
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	Note: tabs and newlines are allowed in string fields, even though they are unusual.
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	set to the default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	set to default
WITHOUT_CLASSIFICATION	for strings, a "blank" field is allowed, so only switch to null when there is nothing left in the field and user does delete
WITHOUT_CLASSIFICATION	the number of characters allowed in this field
WITHOUT_CLASSIFICATION	First we have the cell-related and Text-table operations.
WITHOUT_CLASSIFICATION	prevent editing if text contains newlines
WITHOUT_CLASSIFICATION	if we are not limiting anything, return false
WITHOUT_CLASSIFICATION	if the value is null, then it was read ok
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	The following is used by both in-cell and Popup operations.
WITHOUT_CLASSIFICATION	special handling of operations while editing Strings
WITHOUT_CLASSIFICATION	if the data is longer than the limit, then we have previously re-read the contents and we do not need to re-read it again
WITHOUT_CLASSIFICATION	if we are limiting all columns, then we need to re-read because we do not know if we have all the data or not
WITHOUT_CLASSIFICATION	check for the case where we are limiting some columns but not limiting this particular column
WITHOUT_CLASSIFICATION	column is limited and length == limit, so need to re-read column is not limited, so we have the whole thing
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	The only thing that would prevent us from editing a string in the popup is if that string has been truncated when read from the DB. Thus, being able to edit the string is the same as not needing to re-read the data.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	check for max size reached (only works when DB provides non-zero scale info
WITHOUT_CLASSIFICATION	max size reached
WITHOUT_CLASSIFICATION	Note: tabs and newlines are allowed in string fields, even though they are unusual.
WITHOUT_CLASSIFICATION	for strings, a "blank" field is allowed, so only switch to null when there is nothing left in the field and user does delete
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	data is longer than the limit, so we need to do more checking
WITHOUT_CLASSIFICATION	this column is limited, so truncate the data
WITHOUT_CLASSIFICATION	this column cannot be used in a WHERE clause
WITHOUT_CLASSIFICATION	We cannot use this data in the WHERE clause if it has been truncated. Since being truncated is the same as needing to re-read, only use this in the WHERE clause if we do not need to re-read
WITHOUT_CLASSIFICATION	value is truncated, so do not use in WHERE clause
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	data must fit into the column's max size
WITHOUT_CLASSIFICATION	for string, just send the text to the output file
WITHOUT_CLASSIFICATION	i18n[dataTypeString.allowLongVarchar=Allow LONGVARCHAR type to be used in WHERE clause]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.newlines=Show newlines as \\n within cells]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.limitSize=Limit size of strings read during initial table load to max of:]
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to use LONGVARCHAR in WHERE clause (Oracle does not allow that type in WHERE clause)
WITHOUT_CLASSIFICATION	check box for whether to do any limiting of the data read during initial table load
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	check box for whether to show newlines as "\n" for in-cell display
WITHOUT_CLASSIFICATION	i18n[dataTypeString.typeChar=CHAR, VARCHAR, LONGVARCHAR (SQL types 1, 12, -1)]
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	checkbox for displaying newlines as \n in-cell
WITHOUT_CLASSIFICATION	checkbox for using LONG in WHERE clause
WITHOUT_CLASSIFICATION	checkbox for limit/no-limit on data read during initial table load
WITHOUT_CLASSIFICATION	fill in the current limit length
WITHOUT_CLASSIFICATION	fill in list of column names to check against
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	end while
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	Handle list of column names
WITHOUT_CLASSIFICATION	remove old name list from map
WITHOUT_CLASSIFICATION	extract column names from text area
WITHOUT_CLASSIFICATION	find the next name in the text
WITHOUT_CLASSIFICATION	cleanup and standardize the name, and add it to the map
WITHOUT_CLASSIFICATION	skip blank lines
WITHOUT_CLASSIFICATION	add name to comma-separated string for saving in properties
WITHOUT_CLASSIFICATION	end ok
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	map of existing DataType objects for each column. The key is the ColumnDisplayDefinition object, and the value is the DataTypeObject for that column's data type.
WITHOUT_CLASSIFICATION	map of DBMS-specific registered data handlers. The key is a string of the form: <SQL type as a string>:<SQL type name> and the value is a factory that can create instances of DBMS-specific DataTypeComponets.
WITHOUT_CLASSIFICATION	The current JTable that we are working with. This is used only to see when the user moves to a different JTable so we know when to clear the HashMap of DataTypeObjects.
WITHOUT_CLASSIFICATION	logging mechanism for errors
WITHOUT_CLASSIFICATION	Operations for Text and in-cell work
WITHOUT_CLASSIFICATION	default behavior: toString
WITHOUT_CLASSIFICATION	Use a CYAN background to indicate that the cell is editable in the popup
WITHOUT_CLASSIFICATION	since the previous entry might have changed the color, we need to reset the color back to default value for table cells, taking into account whether the cell is selected or not.
WITHOUT_CLASSIFICATION	default behavior if no DataType object is to use the DefaultColumnRenderer with no modification.
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	default - if we do not know the data type, then we cannot re-read it
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	Default Operation
WITHOUT_CLASSIFICATION	no object, so do not assume binary editing will work
WITHOUT_CLASSIFICATION	Operations for Popup work.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	Default Operation
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	if no object for this data type, then cannot use value in where clause
WITHOUT_CLASSIFICATION	there was no data type object, so this data type is unknown to squirrel and thus cannot be edited.
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	if no DataType object, then there is nothing to handle File IO, so cannot do it
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	let DataType object speak for itself
WITHOUT_CLASSIFICATION	Get control panels to let user adjust properties on DataType classes.
WITHOUT_CLASSIFICATION	This is the list of names of classes that: - support standard SQL type codes and thus do not need to be registered - provide the getControlPanel method to allow manipulation of properties These classes should all be named net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.DataTypeXXXX because they are part of the standard delivery of the product, and thus should be local to this directory.
WITHOUT_CLASSIFICATION	make a single list of all class names that we need to check. Start with the names of known, standard classes that provide Control Panels
WITHOUT_CLASSIFICATION	Now go through the list in the given order to get the panels
WITHOUT_CLASSIFICATION	Internal method used for both cell and popup work.
WITHOUT_CLASSIFICATION	keep a hash table of the column objects so we can reuse them.
WITHOUT_CLASSIFICATION	new table - clear hash map
WITHOUT_CLASSIFICATION	See if we have a custom data-type registered.
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	remember this DataType object so we can reuse it
WITHOUT_CLASSIFICATION	Use the standard SQL type code to get the right handler for this data type.
WITHOUT_CLASSIFICATION	Some databases store a time component in DATE columns (Oracle) The user can set a preference for DATEs that allows them to be read as TIMESTAMP columns instead. This doesn't appear to have ill effects for databases that are standards compliant (such as MySQL or PostgreSQL). If the user prefers it, use the TIMESTAMP data type instead of DATE.
WITHOUT_CLASSIFICATION	set up for integers
WITHOUT_CLASSIFICATION	set up for string types
WITHOUT_CLASSIFICATION	-8 is ROWID in Oracle. It's a string, but it's auto-assigned
WITHOUT_CLASSIFICATION	set up for Binary types
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	Oracle jdbc driver doesn't properly identify this column in ResultSetMetaData as read-only. For now, just use isAutoIncrement flag to simulate this setting.
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	data type is unknown to us. It may be an unusual type like "JAVA OBJECT" or "ARRAY", or it may be a DBMS-specific type
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	which locale-dependent format to use; short, medium, long, or full
WITHOUT_CLASSIFICATION	Whether to force user to enter dates in exact format or use heuristics to guess it
WITHOUT_CLASSIFICATION	Whether or not to read date type columns with rs.getTimestamp()
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to use the Java default
WITHOUT_CLASSIFICATION	get which locale-dependent format to use set to use the Java default
WITHOUT_CLASSIFICATION	use lenient input or force user to enter exact format set to allow less stringent input
WITHOUT_CLASSIFICATION	use the Java default date-to-string
WITHOUT_CLASSIFICATION	use a date formatter
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	truncate string
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	use the DateFormat to parse
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	if value contains "-" it probably has a date component
WITHOUT_CLASSIFICATION	treat it like a timestamp
WITHOUT_CLASSIFICATION	treat it like a time - no date component
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	Class that displays the various formats available for dates
WITHOUT_CLASSIFICATION	Oracle stores time information in java.sql.Types.Date columns This tells Oracle that we are only talking about the date part.
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.typeDate=Date (SQL type 91)]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dataTypeDate.allowInexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	Combo box for read-all/read-part of blob
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	handle cross-connection between fields
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	check box for whether to use Java Default or a Locale-dependent format
WITHOUT_CLASSIFICATION	checkbox for Java default/non-default format
WITHOUT_CLASSIFICATION	lenient checkbox
WITHOUT_CLASSIFICATION	readdDateAsTimestamp checkbox
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	whether or not to read date type columns with rs.getTimestamp() i18n[dataTypeDate.readDateAsTimestamp=Interpret DATE columns as TIMESTAMP]
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	lenient is set next
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	Properties settable by the user
WITHOUT_CLASSIFICATION	flag for whether we have already loaded the properties or not
WITHOUT_CLASSIFICATION	The original value set in this cell by the table
WITHOUT_CLASSIFICATION	Used by editing operations to set textField value without changing the original text saved in the class
WITHOUT_CLASSIFICATION	Used by editing operations to reset the field to its original value.
WITHOUT_CLASSIFICATION	Cell related methods come next.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	i18n[dataTypeUnknown.readContentsOnLoad=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	check box for whether to read contents during table load or not
WITHOUT_CLASSIFICATION	Property change control panel
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value cannot create default value for unknown data type
WITHOUT_CLASSIFICATION	set up the controls
WITHOUT_CLASSIFICATION	checkbox for read/not-read on table load
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	get the values from the controls and set them in the static properties
WITHOUT_CLASSIFICATION	end of inner class
WITHOUT_CLASSIFICATION	The original value set in this cell by the table
WITHOUT_CLASSIFICATION	When the table initiates editing and sets this field, remember the value as the original value of the field
WITHOUT_CLASSIFICATION	Used by editing operations to set textField value without changing the original text saved in the class
WITHOUT_CLASSIFICATION	Used by editing operations to reset the field to its original value.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Anticipate the same issue for BLOBS as for BINARY and LONGVARBINARY. registerColumnType(Types.BLOB, 2147000000, "bit varying($l)");
WITHOUT_CLASSIFICATION	Don't use bit(1) for boolean as Frontbase then reports it as BINARY type instead of BIT.
WITHOUT_CLASSIFICATION	Anticipate the same issue for VARBINARY as for BINARY and LONGVARBINARY. registerColumnType(Types.VARBINARY, 2147000000, "bit varying($l)");
WITHOUT_CLASSIFICATION	Frontbase requires CASCADE or RESTRICT keywords.
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	public String getDropIndexSQL(String tableName, String indexName, boolean cascade, DatabaseObjectQualifier qualifier, SqlGenerationPreferences prefs) { return null; }
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	Derby is real close to DB2. Only difference I've found so far is 48 instead of 53 for float length llimit.
WITHOUT_CLASSIFICATION	convert each column that will be a member key to non-null - this doesn't hurt if they are already null.
WITHOUT_CLASSIFICATION	Derby requires that columns be not-null before applying a unique constraint
WITHOUT_CLASSIFICATION	select v.VIEWDEFINITION from sys.SYSVIEWS v, sys.SYSTABLES t, sys.SYSSCHEMAS s where v.TABLEID = t.TABLEID and s.SCHEMAID = t.SCHEMAID and UPPER(t.TABLENAME) = 'VIEWNAME'and UPPER(s.SCHEMANAME) = 'SCHEMANAME'
WITHOUT_CLASSIFICATION	driver returns 8 for "long byte", yet it can store 2GB of data.
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	There is a reason that we don't want to use DatabaseObjectType.SESSION here. The "session" nodes that this expander is creating should not be confused with the SQuirreL session. These session nodes are Oracle sessions that an administrator has the privileges to see. So we must not use DatabaseObjectType.SESSION, or else these nodes get expanded with the database DefaultdatabasExpander.
WITHOUT_CLASSIFICATION	String ST_CREATE_INDEX_STYLE_TWO = "CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<create_sequence_statement> ::= CREATE SEQUENCE [<schema_name>.]<sequence_name> [INCREMENT BY <integer>] [START WITH <integer>] [MAXVALUE <integer> | NOMAXVALUE] [MINVALUE <integer> | NOMINVALUE] [CYCLE | NOCYCLE] [CACHE <unsigned_integer> | NOCACHE] [ORDER | NOORDER]
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	<create_view_statement> ::= CREATE [OR REPLACE] VIEW <table_name> [(<alias_name>,...)] AS <query_expression> [WITH CHECK OPTION]
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	"RENAME TABLE $oldObjectName$ TO $newObjectName$";
WITHOUT_CLASSIFICATION	"RENAME VIEW $oldObjectName$ TO $newObjectName$";
WITHOUT_CLASSIFICATION	alter column clauses
WITHOUT_CLASSIFICATION	alter name clauses
WITHOUT_CLASSIFICATION	alter default clauses
WITHOUT_CLASSIFICATION	Additional Index Creation
WITHOUT_CLASSIFICATION	alter type clauses
WITHOUT_CLASSIFICATION	drop column clauses
WITHOUT_CLASSIFICATION	cascade constraint clauses
WITHOUT_CLASSIFICATION	sequence clauses
WITHOUT_CLASSIFICATION	view clauses
WITHOUT_CLASSIFICATION	Clauses
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnDropUnsupported={0} doesn''t support dropping a column]
WITHOUT_CLASSIFICATION	ALTER TABLE tableName ADD CONSTRAINT constraintName UNIQUE (column1, column2);
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	DROP INDEX indexName [ CASCADE ];
WITHOUT_CLASSIFICATION	DROP INDEX indexName [ CASCADE ] [ ON <tableName> ];
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	DROP SEQUENCE sequenceName CASCADE;
WITHOUT_CLASSIFICATION	DROP VIEW viewName CASCADE;
WITHOUT_CLASSIFICATION	CREATE UNIQUE INDEX indexName ON tableName USING btree (column1, column2) TABLESPACE WHERE constraints;
WITHOUT_CLASSIFICATION	ALTER TABLE oldTableName RENAME TO newTableName;
WITHOUT_CLASSIFICATION	ALTER VIEW oldTableName RENAME TO newTableName; RENAME oldTableName TO newTableName;
WITHOUT_CLASSIFICATION	Since dialect doesn't support altering sequences, drop then re-create.
WITHOUT_CLASSIFICATION	ALTER SEQUENCE sequenceName INCREMENT BY increment MINVALUE minimum MAXVALUE maxvalue RESTART WITH restart CACHE cache CYCLE;
WITHOUT_CLASSIFICATION	INSERT INTO tableName (column1, column2) query;
WITHOUT_CLASSIFICATION	String templateStr = null;
WITHOUT_CLASSIFICATION	desc_t1
WITHOUT_CLASSIFICATION	i18n[oracle.displayDetails=Display index details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnOk=OK]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.error.getprimarykey=Unable to get primary key info for table {0}]
WITHOUT_CLASSIFICATION	Group all columns by index
WITHOUT_CLASSIFICATION	Serveral DBs automatically create an index for primary key fields and return this index in getIndexInfo(). We remove this index from the script because it would break the script with an index already exists error.
WITHOUT_CLASSIFICATION	Append nothing - standard says this is equivalent to NO ACTION and some DBs (e.g. Oracle don't accept ... NO ACTION)
WITHOUT_CLASSIFICATION	i18n[CreateTableScriptCommand.error.getprimarykey=Unable to get primary key info for table {0}]
WITHOUT_CLASSIFICATION	override common behavior to use drop column style two
WITHOUT_CLASSIFICATION	No go through the parse SQL and build the final SQL replacing parameters with values is goes.
WITHOUT_CLASSIFICATION	Strip quotes from the column name
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ IDENTITY";
WITHOUT_CLASSIFICATION	Add package node to contain standalone procedures.
WITHOUT_CLASSIFICATION	Add packages.
WITHOUT_CLASSIFICATION	i18n[oracle.explainPlan=Explain Plan]
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD $constraint$ $constraintName$ UNIQUE $index$ $indexName$ $indexType$ ( $indexColumnName$ )";
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ " + "$restartWith$ $startValue$ " + "$incrementBy$ $incrementValue$ ";
WITHOUT_CLASSIFICATION	Operation column increased
WITHOUT_CLASSIFICATION	Options column increased
WITHOUT_CLASSIFICATION	Expand all of the rows in the tree if the root is non null.
WITHOUT_CLASSIFICATION	Clear any previous plan
WITHOUT_CLASSIFICATION	CREATE SEQUENCE [IF NOT EXISTS] newSequenceName [START WITH long] [INCREMENT BY long] [CACHE long]
WITHOUT_CLASSIFICATION	CREATE [FORCE] VIEW [IF NOT EXISTS] newViewName [(columnName [,..])] AS select "CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	i18n[oracle.userDetails=Details]
WITHOUT_CLASSIFICATION	i18n[oracle.displayUserDetails=Display User details]
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	"select view_definition " + "from information_schema.views " + "where table_schema = ? " + "and table_name = ? ";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	Always use "to" column name since name changes happen first
WITHOUT_CLASSIFICATION	ALTER TABLE <tableName> MODIFY <columnName> MEDIUMINT NOT NULL AUTO_INCREMENT PRIMARY KEY
WITHOUT_CLASSIFICATION	SQLExecuterTask task = new SQLExecuterTask(_session, sql, new DefaultSQLExecuterHandler(_session)); jmh to run async_session.getApplication().getThreadPool().addTask(task); jmhtask.run(); Set the ? to the statement identifier
WITHOUT_CLASSIFICATION	i18n[oracle.noSql=No SQL selected for execution.]
WITHOUT_CLASSIFICATION	only check once per session
WITHOUT_CLASSIFICATION	if doesnt exist prompt to create it.
WITHOUT_CLASSIFICATION	From MySQL 5.0 manual:
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.createPlanTableMsg=The Oracle Plan Table '{0}' doesnt exist in the current schema. Do you want to create it?]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.createPlanTableTitle=Create Plan Table]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.planTableUnavailable=Explain plans will be unavailable for this session]
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	Tell the user that they won't be able to show the explain plan
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers when dropping a column.
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers when adding a primary key.
WITHOUT_CLASSIFICATION	MySQL disallows quoted constraint names
WITHOUT_CLASSIFICATION	MySQL disallows quoted constraint names
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	PostgreSQL 8.0 reports length as -1 sometimes. Why??
WITHOUT_CLASSIFICATION	ALTER TABLE oldTableName RENAME TO newTableName;
WITHOUT_CLASSIFICATION	Can be done as follows in PostgresINSERT INTO mytable(id,name) SELECT 1, 'pizza' UNION SELECT 2, 'donuts' UNION SELECT 3, 'milk';
WITHOUT_CLASSIFICATION	sql.append(DialectUtils.shapeQualifiableIdentifier(newTableName, qualifier, prefs, this));
WITHOUT_CLASSIFICATION	rename view has that same syntax as that of tables.
WITHOUT_CLASSIFICATION	DROP INDEX indexName CASCADE;
WITHOUT_CLASSIFICATION	SELECT last_value, max_value, min_value, cache_value, increment_by, is_cycled FROM sequenceName;
WITHOUT_CLASSIFICATION	ALTER TABLE tableName ALTER COLUMN columnName SET DEFAULT nextval('tableName_columnName_seq'); ALTER SEQUENCE tableName_columnName_seq OWNED BY tableName.columnName;
WITHOUT_CLASSIFICATION	In PostgreSQL we need to add a sequence to support auto-increment (name: tablename_colname_seq)
WITHOUT_CLASSIFICATION	registerColumnType(Types.CLOB, 31982, "varchar($l)");
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ RENAME COLUMN $oldColumnName$ to $newColumnName$";
WITHOUT_CLASSIFICATION	Oracle won't allow in-place conversion between CLOB and VARCHAR
WITHOUT_CLASSIFICATION	add <columnName>_2 null as CLOB
WITHOUT_CLASSIFICATION	update table set <columnName>_2 = <columnName>
WITHOUT_CLASSIFICATION	drop <columnName>
WITHOUT_CLASSIFICATION	rename <columnName>_2 to <columnName>
WITHOUT_CLASSIFICATION	Cannot use a sequence for the default value of a column. However, we could always reference the ssequence in a trigger:
WITHOUT_CLASSIFICATION	:new.id := seq_name@nextval;
WITHOUT_CLASSIFICATION	throw new UnsupportedOperationException("Oracle doesn't support using sequences for column defaults");
WITHOUT_CLASSIFICATION	create add sequence sql
WITHOUT_CLASSIFICATION	create trigger sql for column that is to be auto-incremented
WITHOUT_CLASSIFICATION	In Oracle, no action is implied when the ON DELETE clause is omitted
WITHOUT_CLASSIFICATION	In Oracle, matchFull modifier is not supported
WITHOUT_CLASSIFICATION	Oracle doesn't allow unique bitmap indexes.
WITHOUT_CLASSIFICATION	Sybase Adaptive Server Enterprise
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.choosePlanTableMsg=Choose a PLAN_TABLE to store the result in]
WITHOUT_CLASSIFICATION	MySQL 4.x and below MySQL 5.x and above
WITHOUT_CLASSIFICATION	registerColumnType(Types.LONGVARCHAR, 31982, "varchar($l)");
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ SET $nullable$";
WITHOUT_CLASSIFICATION	add a default value "ALTER TABLE $tableName$ " + "ALTER $columnName$ SET DEFAULT $defaultValue$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ RENAME COLUMN $oldColumnName$ to $newColumnName$";
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.choosePlanTableTitle=Available PLAN_TABLEs]
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	This is what the spec says: CREATE SEQUENCE [schema_name.]sequence_name [INCREMENT BY value], [START WITH value], [MAXVALUE value | NOMAXVALUE], [MINVALUE value | NOMINVALUE], [CYLCE | NOCYLCE]
WITHOUT_CLASSIFICATION	Currently, OpenEdge only supports the PUB schema for sequences.
WITHOUT_CLASSIFICATION	Names of the columns.
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	Currently, OpenEdge only supports the PUB schema for sequences.
WITHOUT_CLASSIFICATION	SELECT 'CREATE VIEW FOOVIEW AS ' || VIEWTEXT FROM SYSPROGRESS.SYSVIEWS where VIEWNAME = 'FOOVIEW' and OWNER = 'MANNINGR'
WITHOUT_CLASSIFICATION	Oddly enough, progress will let you add pks to existing tables, but not drop them.
WITHOUT_CLASSIFICATION	The registrations below are made in support for new types introduced in Java6
WITHOUT_CLASSIFICATION	Replace "-8" with Types.ROWID when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-9" with Types.NVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-15" with Types.NCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-16" with Types.LONGNVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2009" with Types.SQLXML when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2011" with Types.NCLOB when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	registerColumnType(Types.BOOLEAN, "bit");
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.enumeration=#]
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ IDENTITY";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ ALTER COLUMN $columnName$ SET $nullable$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] PRIMARY KEY (<column list>);
WITHOUT_CLASSIFICATION	Pre-requisites are that column needs to be primary key and it must be integer type. alter table IDENTITYTEST2 alter column myid identity
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] UNIQUE (<column list>);
WITHOUT_CLASSIFICATION	ALTER SEQUENCE <sequencename> RESTART WITH <value>;
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.operation=Operation]
WITHOUT_CLASSIFICATION	CREATE [UNIQUE] INDEX <index> ON <table> (<column> [DESC] [, ...]) [DESC];
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.options=Options]
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	CREATE VIEW <viewname>[(<viewcolumn>,..) AS SELECT ... FROM ... [WHERE Expression] [ORDER BY orderExpression [, ...]] [LIMIT <limit> [OFFSET <offset>]];
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	DROP INDEX index [IF EXISTS];
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.mode=Mode]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.cost=Cost]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.objectName=Object Name]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.cardinality=Cardinality]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.bytes=Bytes]
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Types of the columns.
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	TreeNode Interface
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Axion doesn't allow column alterations of the nullable attribute. Fortunately, it doesn't require this to add a primary key.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Keys that can be embedded in templates for replacement later.
WITHOUT_CLASSIFICATION	check option not supported
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	Template bodies
WITHOUT_CLASSIFICATION	SQL Reference Guide says 32k, but I get: The specified row size exceeded the maximum allowable row width., SQL State: 50002, Error Code: 2045 when I go above 8000.
WITHOUT_CLASSIFICATION	I tried 8000 for the max length of VARCHAR and ingres gives an exception (cannot assign a value of type long varchar to a varchar field). So I limit this field to 4000 for now - the Ingres product documentation indicated that 32k was acceptable. I've tested 4k and it seems to work fine.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	alter table foo add constraint foocon UNIQUE (myid)
WITHOUT_CLASSIFICATION	alter table <table> add constraint <constraint>
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $with$ $checkOptionType$ $checkOption$";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ $startWith$ $increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	[EXEC SQL] CREATE VIEW view_name [(column_name {, column_name})] AS select_stmt [WITH CHECK OPTION]
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	SELECT TEXT_SEGMENT FROM IIVIEWS WHERE TABLE_NAME = <VIEWNAME> AND TABLE_OWNER = <SCHEMANAME>
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	The TreeTableNode interface.
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	ALTER TABLE test3 ALTER COLUMN nullvc varchar(30)
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	"select 'CREATE VIEW ' || VIEWNAME || ' AS ' || VIEWDEFINITION " + "from POINTBASE.SYSVIEWS v, POINTBASE.SYSSCHEMATA s " + "where v.SCHEMAID = s.SCHEMAID " + "and v.VIEWNAME = 'TESTVIEW' " + "and s.SCHEMANAME = 'DBCOPY' ";
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	"ALTER TABLE $oldObjectName$ RENAME TO $newObjectName$";
WITHOUT_CLASSIFICATION	SQL-Server doesn't support a cascade clause.
WITHOUT_CLASSIFICATION	Can be done as follows in MS SQLServer INSERT INTO mytable(id,name) SELECT 1, 'pizza' UNION SELECT 2, 'donuts' UNION SELECT 3, 'milk';
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	<drop_index_statement> ::= DROP INDEX <index_name> [ON <table_name>]
WITHOUT_CLASSIFICATION	"DROP SEQUENCE $sequenceName$ $cascade$";
WITHOUT_CLASSIFICATION	The problem with this is data is LONGVARBINARY and there are no McKoi SQL functions to convert it to a character string which is executing the SQL produced by this method is supposed to return. return "SELECT data FROM SYS_INFO.sUSRView where name = '" + viewName + "'";
WITHOUT_CLASSIFICATION	private static final DB2400Dialect db2400Dialect = new DB2400Dialect();
WITHOUT_CLASSIFICATION	dbNameDialectMap.put("DB2/390", db2390Dialect); dbNameDialectMap.put("DB2/400", db2400Dialect);
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	User doesn't wish for us to try to auto-detect the dest db.
WITHOUT_CLASSIFICATION	The driver throws an exception for varchar with length > 3924
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	The registrations below are made in support for new types introduced in Java6
WITHOUT_CLASSIFICATION	Replace "-8" with Types.ROWID when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-9" with Types.NVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-15" with Types.NCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "-16" with Types.LONGNVARCHAR when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	Replace "2009" with Types.SQLXML when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	Replace "2011" with Types.NCLOB when Java6 is the minimum supported version
WITHOUT_CLASSIFICATION	alter table <tablename> drop column <columnName>
WITHOUT_CLASSIFICATION	DB2 needs to reorg table after changing nullabolity
WITHOUT_CLASSIFICATION	SELECT SEQSCHEMA,SEQNAME,DEFINER,DEFINERTYPE,OWNER,OWNERTYPE,SEQID,SEQTYPE,INCREMENT,START,MAXVALUE,MINVALUE, NEXTCACHEFIRSTVALUE,CYCLE,CACHE,ORDER,DATATYPEID,SOURCETYPEID,CREATE_TIME,ALTER_TIME,PRECISION,ORIGIN, REMARKS FROM SYSCAT.SEQUENCES WHERE SEQNAME = ? and SEQSCHEMA = <schema>
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	DB2 doesn't support cascade, set default, or set null for FK constraint update action
WITHOUT_CLASSIFICATION	DB2 doesn't support set default for FK constraint delete action
WITHOUT_CLASSIFICATION	DB2 requires that columns be not-null before applying a unique constraint
WITHOUT_CLASSIFICATION	RENAME TABLE <tablename> TO <newtablename>;
WITHOUT_CLASSIFICATION	SELECT 'CREATE VIEW <newViewName> AS ' || SUBSTR(TEXT , LOCATE('as', TEXT)+2, LENGTH(TEXT)) FROM SYSCAT.VIEWS WHERE VIEWSCHEMA = '<schema>' AND VIEWNAME = '<oldViewName>';
WITHOUT_CLASSIFICATION	This is another way to do this. Modifying the column type to serial is much easier. Thanks to Doug Lawry for setting me straight!!
WITHOUT_CLASSIFICATION	CREATE SEQUENCE testAutoIncrementTable_myid_seq INCREMENT BY 1 MINVALUE 1 NOMAXVALUE START WITH 1 NOCYCLE; CREATE FUNCTION nextAutoVal () RETURNING INTEGER; RETURN testAutoIncrementTable_myid_seq.NEXTVAL; END FUNCTION; I finally did get a trigger to work, but I had to use a function: CREATE TRIGGER myid_trigger INSERT ON testAutoIncrementTable FOR EACH ROW (execute function nextAutoVal() into myid);
WITHOUT_CLASSIFICATION	must not qualify column name
WITHOUT_CLASSIFICATION	Unfortunately we cannot simply call getColumnTypeAlterSQL since "serial" type is 4 (which is the same as java.sql.Types.Integer, so we would get back an integer column, not a serial column). So we piece it together ourselves: ALTER TABLE dbcopydest:"informix".serialtest MODIFY myid integer
WITHOUT_CLASSIFICATION	We only want the index sql which is the second statement in the array. Informix requires the constraint stuck onto the end of the statement.
WITHOUT_CLASSIFICATION	Informix doesn't allow quoting column names.
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	deletes the last ", " deletes the last ", "
WITHOUT_CLASSIFICATION	must not quote column names
WITHOUT_CLASSIFICATION	ALTER TABLE <tableName> ADD CONSTRAINT UNIQUE (<columnList>) CONSTRAINT <constraintName>
WITHOUT_CLASSIFICATION	alter table test drop constraint u_test
WITHOUT_CLASSIFICATION	deletes the last ", "
WITHOUT_CLASSIFICATION	SELECT 'unknown' as last_value, T1.max_val AS max_value, T1.min_val AS min_value, T1.cache AS cache_size, T1.inc_val AS increment_by, case T1.cycle as is_cycled FROM informix.syssequences AS T1, informix.systables AS T2 WHERE T2.tabid = T1.tabid and T2.owner = '<schema>' and T2.tabname = '<sequenceName>'
WITHOUT_CLASSIFICATION	must not qualify the new table name
WITHOUT_CLASSIFICATION	SELECT viewtext FROM informix.systables AS T1, informix.sysviews AS T2 WHERE tabname = 'a_view' AND T2.tabid = T1.tabid
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	"DROP INDEX $indexName$";
WITHOUT_CLASSIFICATION	ALTER TABLE $tableName$ DROP CONSTRAINT $constraintName$
WITHOUT_CLASSIFICATION	CREATE VIEW name [(view_col [, view_col …])] AS <select> [WITH CHECK OPTION];
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	autoinc_gen_<column>
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	SET GENERATOR name TO int;
WITHOUT_CLASSIFICATION	CREATE [UNIQUE] [ASC[ENDING] | DESC[ENDING]] INDEX index ON table (col [, col …]);
WITHOUT_CLASSIFICATION	"DROP VIEW $viewName$";
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	What follows comes from the SQuirreL firebird dialect extension.
WITHOUT_CLASSIFICATION	i18n[SQLCatalogsComboBox.noneLabel=None]
WITHOUT_CLASSIFICATION	Sort the rows by the property name.
WITHOUT_CLASSIFICATION	look for places to break the string
WITHOUT_CLASSIFICATION	Get the largest width and height
WITHOUT_CLASSIFICATION	private int _lastX;
WITHOUT_CLASSIFICATION	parentRect = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());
WITHOUT_CLASSIFICATION	i18n ? What is this used for?
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	The following pointer is needed to allow the "Make Editable button to tell the application to set up an editable display panel
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	save the pointer needed to enable editing of data on-demand
WITHOUT_CLASSIFICATION	Object obj = action.getValue(BaseAction.IBaseActionPropertyNames.ROLLOVER_ICON);
WITHOUT_CLASSIFICATION	pointer to the viewer This is needed for insert and delete operations
WITHOUT_CLASSIFICATION	save the pointer needed for insert and delete operations
WITHOUT_CLASSIFICATION	add the menu items to the menu
WITHOUT_CLASSIFICATION	add entries for insert and delete rows only if table is updateable and already editable (ie. allowEditing is false)
WITHOUT_CLASSIFICATION	Cut and Paste need to be worked on, so for now do not include them Also, the copy operations do not seem to work right - we may need special versions for the cellEditor menu. add(_cut); add(_copy); add(_copyHtml); add(_paste); addSeparator();
WITHOUT_CLASSIFICATION	i18n[TablePopupMenu.export=Export CSV / MS Excel ...]
WITHOUT_CLASSIFICATION	SS: Display complete column header as tooltip if the column isn't wide enough to display it
WITHOUT_CLASSIFICATION	Tell the DataSetViewer to delete the rows Note: rows are indexes in the SORTABLE model, not the ACTUAL model
WITHOUT_CLASSIFICATION	int modelCol = getTable().convertColumnIndexToModel(col);
WITHOUT_CLASSIFICATION	getTable().doLayout();
WITHOUT_CLASSIFICATION	getTable().doLayout();
WITHOUT_CLASSIFICATION	Added by Patch 2856103 for Apple/Mac
WITHOUT_CLASSIFICATION	Added by Patch 2856103 for Apple/Mac
WITHOUT_CLASSIFICATION	Rendering the column that the mouse has been pressed in.
WITHOUT_CLASSIFICATION	If this is the column that the table is currently is currently sorted by then display the sort icon.
WITHOUT_CLASSIFICATION	This is not the column that the mouse has been pressed in.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Point pt = JFCUtilities.computePopupLocation(evt, evt.getComponent(), this);
WITHOUT_CLASSIFICATION	The message area is on the right of the statusbar and takes up all available space.
WITHOUT_CLASSIFICATION	Any other components are on the right.
WITHOUT_CLASSIFICATION	void reload();
WITHOUT_CLASSIFICATION	Dimension dim = sp.getPreferredSize(); dim.width = PREFERRED_WIDTH; sp.setPreferredSize(new Dimension(sp.getPreferredSize().width, 200));
WITHOUT_CLASSIFICATION	Dimension dim = getPreferredSize(); dim.width = PREFERRED_WIDTH; setPreferredSize(dim); setRows(3);
WITHOUT_CLASSIFICATION	first attempt to add data to underlying table model
WITHOUT_CLASSIFICATION	Comparable c1 = (Comparable)data1; return c1.compareTo(data2) _iAscending;
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.noFile=You must provide a export file name.]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.replaceFile=The export file already exisits. Would you like to replace it?]
WITHOUT_CLASSIFICATION	Menues that are also shown in the main window Session menu might be in this popup. If we don't remove them, the Session won't be Garbage Collected.
WITHOUT_CLASSIFICATION	This was originaly done every time. and the count of instantiated objects was amazing
WITHOUT_CLASSIFICATION	We look forward
WITHOUT_CLASSIFICATION	top
WITHOUT_CLASSIFICATION	right
WITHOUT_CLASSIFICATION	Can't happen
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.formatXLS=Export MS Excel (XLS) file]
WITHOUT_CLASSIFICATION	tell the underlying data model to make itself editable, which includes telling the GUI to rebuild itself
WITHOUT_CLASSIFICATION	show all tooltips for ten seconds before hiding
WITHOUT_CLASSIFICATION	Row 1
WITHOUT_CLASSIFICATION	abort the export
WITHOUT_CLASSIFICATION	Row 2
WITHOUT_CLASSIFICATION	abort the export
WITHOUT_CLASSIFICATION	Row 3
WITHOUT_CLASSIFICATION	private static final StringManager s_stringMgr = StringManagerFactory.getStringManager(TableCopyCommand.class);
WITHOUT_CLASSIFICATION	All sheets and cells added. Now write out the workbook
WITHOUT_CLASSIFICATION	_table.requestFocus();
WITHOUT_CLASSIFICATION	Only for restoring from XML etc.
WITHOUT_CLASSIFICATION	tell the underlying data model to stop forcing edit mode and return to the mode specified in the session parameters, which includes telling the GUI to rebuild itself
WITHOUT_CLASSIFICATION	Only for restoring from XML etc.
WITHOUT_CLASSIFICATION	register as a listener for mouse events
WITHOUT_CLASSIFICATION	We look backwards
WITHOUT_CLASSIFICATION	We look backwards
WITHOUT_CLASSIFICATION	view
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.writeFileSuccess=Export to file "{0}" is complete.]
WITHOUT_CLASSIFICATION	String sql = "A'''' sss ; GO ;; GO'"; String sql = "A\n--x\n--y\n\nB"; String sql = "GO GO";
WITHOUT_CLASSIFICATION	/ Handling of comments
WITHOUT_CLASSIFICATION	skip ahead so the cursor is now immediately after the begin comment string
WITHOUT_CLASSIFICATION	This is responsible that comments are not in curQuery
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	Some drivers for DB2 don't return SYSFUN as a schema name. A number of system stored procs are kept in this schema.
WITHOUT_CLASSIFICATION	PostgreSQL (at least 7.3.2) returns false for supportsStoredProcedures() even though it does support them.
WITHOUT_CLASSIFICATION	Use a set rather than a list as some combinations of MS SQL and the JDBC/ODBC return multiple copies of each table type.
WITHOUT_CLASSIFICATION	Treating indexes as tables interferes with the operation of the PostgreSQL plugin
WITHOUT_CLASSIFICATION	Treating sequences as tables interferes with the operation of the PostgreSQL plugin
WITHOUT_CLASSIFICATION	There are many of these "tables", that PostgreSQL throws SQLExceptions for whenever a table-like operation is attempted.
WITHOUT_CLASSIFICATION	Informix: when no database is given in the connect url, then no table types are returned. The catalog can be changed which will select a database, but by that time it is too late.
WITHOUT_CLASSIFICATION	create a mapping of names if we have supertable info, since we need to find the ITableInfo again for re-ordering.
WITHOUT_CLASSIFICATION	store all plain table info we have.
WITHOUT_CLASSIFICATION	re-order nodes if the tables are stored hierachically
WITHOUT_CLASSIFICATION	remove from toplevel.
WITHOUT_CLASSIFICATION	MM-MYSQL driver doesnt support null for column name.
WITHOUT_CLASSIFICATION	See if there is a plugin-registered DataTypeComponent that can handle this column.
WITHOUT_CLASSIFICATION	Oracle's 'TIMESTAMP WITH TIME ZONE' == -101 Oracle's 'TIMESTAMP WITH LOCAL TIME ZONE' == -102
WITHOUT_CLASSIFICATION	i18n[MetaDataDecoratorDataSet.noJarFiles=No files specified in 'Extra ClassPath' tab for driver]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Since we are reading Meta-data about the DB, we should never see a BLOB. If we do, the contents are not interpretable by Squirrel, so just tell the user that it is a BLOB and that it has data.
WITHOUT_CLASSIFICATION	Since we are reading Meta-data about the DB, we should never see a CLOB. However, if we do we assume that it is printable text and that the user wants to see it, so read in the entire thing.
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	Add end
WITHOUT_CLASSIFICATION	?? }
WITHOUT_CLASSIFICATION	final String columnClassName = _rsmd.getColumnClassName(idx);
WITHOUT_CLASSIFICATION	binary types
WITHOUT_CLASSIFICATION	1i8n[MetaDataDecoratorDataSet.classNameLabel=JDBC Driver CLASSNAME]
WITHOUT_CLASSIFICATION	1i8n[MetaDataDecoratorDataSet.classPathLabel=JDBC Driver CLASSPATH]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ResultSetColumnReader.class);
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	check for Informix - it has very "special" qualified names
WITHOUT_CLASSIFICATION	Progress claims to support catalogs in data manip - but it actually doesn't honor that claim.
WITHOUT_CLASSIFICATION	In case the connection won't be able to tell its Auto Commit state, this is the best default we have.
WITHOUT_CLASSIFICATION	DatabaseObjectType.DATABASE_TYPE_DBO=Database Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.INDEX_TYPE_DBO=Index Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.PROC_TYPE_DBO=Stored Procedure Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.SEQUENCE_TYPE_DBO=Sequence Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.TABLE_TYPE_DBO=Table Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.TRIGGER_TYPE_DBO=Trigger Type
WITHOUT_CLASSIFICATION	DatabaseObjectType.UDT_TYPE_DBO=UDT Type
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	tables that have at least one parent table
WITHOUT_CLASSIFICATION	tables that have at least one child table
WITHOUT_CLASSIFICATION	tables that have at least one child table and have a least one parent table
WITHOUT_CLASSIFICATION	Avoid the hit next time
WITHOUT_CLASSIFICATION	Avoid the hit next time
WITHOUT_CLASSIFICATION	Close the ResultSet
WITHOUT_CLASSIFICATION	Close the ResultSet's Statement if it is non-null. This frees open cursors.
WITHOUT_CLASSIFICATION	t1 depends on t2
WITHOUT_CLASSIFICATION	t2 depends on t1
WITHOUT_CLASSIFICATION	build up datastructure. final cache.
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	classes.add(((CacheEntry)it.next())._objClass);
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Empty.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	return get().getProperty("mrj.version") != null;
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	i18n[TaskThreadPool.errorDuringTaskExecMsg=Error ocured during task execution:]
WITHOUT_CLASSIFICATION	item.setIcon(null);
WITHOUT_CLASSIFICATION	Some actions dont have accelerators
WITHOUT_CLASSIFICATION	This slash stuff is a ...
WITHOUT_CLASSIFICATION	-- Constructors --
WITHOUT_CLASSIFICATION	-- Path-component accessors --
WITHOUT_CLASSIFICATION	-- Attribute accessors --
WITHOUT_CLASSIFICATION	-- File operations --
WITHOUT_CLASSIFICATION	-- Filesystem interface --
WITHOUT_CLASSIFICATION	-- Basic infrastructure --
WITHOUT_CLASSIFICATION	Count of available or free threads.
WITHOUT_CLASSIFICATION	Should there me a Max Number of threads?
WITHOUT_CLASSIFICATION	Empty
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	assume Unix or Linux
WITHOUT_CLASSIFICATION	private boolean _bStopExecution = false;
WITHOUT_CLASSIFICATION	_bStopExecution = false;
WITHOUT_CLASSIFICATION	these arrays are parallel.
WITHOUT_CLASSIFICATION	line should look like : This is a line with an <span>embedded key</span> in it.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	Ctor. @parammsg Message describing the error.
WITHOUT_CLASSIFICATION	Ctor. Wraps this exception around another. @paramwrapee The exception that this one is wrapped around.
WITHOUT_CLASSIFICATION	convert data from StringWrappers to Strings
WITHOUT_CLASSIFICATION	Es mach nichts, wenn es die PID nicht g�be. Sie wird dann einfach oben nicht zugeordnet.
WITHOUT_CLASSIFICATION	If we are blocked by a member of a deadlock chain but do not belong to the deadlock chain ourselves this prevents a forever loop.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Die 200 braucht nur SQL Server 7.0, SQL Server 2000 nicht mehr sagt SAN
WITHOUT_CLASSIFICATION	Dataholder res = conn.runClassMethod("%Library.CMUtilities", "getExecutionPlan", argv, Database.RET_OBJECT);
WITHOUT_CLASSIFICATION	newIndentDepth == indentDepth
WITHOUT_CLASSIFICATION	jdbc:Cache:cachensw-and:1972/SHDTest
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	plugin supports only Session main window
WITHOUT_CLASSIFICATION	plugin supports only Session main window
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins/dbcopy
WITHOUT_CLASSIFICATION	i18n[codecompletion.useSyntaxPlugin=Code completion will work better if you use the Syntax plugin. Get it from squirrelsql.org, it's free!]
WITHOUT_CLASSIFICATION	I have seen the reference to the outer class being null when this method is called. I have seen it only with the runtime jars and on Linux. I could not reproduce in my IDE.
WITHOUT_CLASSIFICATION	figure out which column the user clicked on so we can pass in the right column description
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	coll.add(new ScriptProcedureAction(app, _resources, this, _userSettingsFolder)); coll.add(new RefreshRepositoryAction(app, _resources, this, _userSettingsFolder));
WITHOUT_CLASSIFICATION	These objects do not depend on catalogs or schemas. It is enough if we load them once.
WITHOUT_CLASSIFICATION	For example Postgres returns table names as datatypes. In those cases this prevents to have the table names twice.
WITHOUT_CLASSIFICATION	CompletionInfos are still loading
WITHOUT_CLASSIFICATION	CompletionInfos are still loading
WITHOUT_CLASSIFICATION	1 < buf.size()
WITHOUT_CLASSIFICATION	Might also be a catalog or a schema name
WITHOUT_CLASSIFICATION	First check aliases
WITHOUT_CLASSIFICATION	See if this is the same statement
WITHOUT_CLASSIFICATION	Makes sure that the last name is always in top of the list.
WITHOUT_CLASSIFICATION	Code Completion has been done within Code Completion. and relaunch completion popup.
WITHOUT_CLASSIFICATION	new TestCompletionFunction(),
WITHOUT_CLASSIFICATION	remove the function name
WITHOUT_CLASSIFICATION	Needed for example on PostgreSQL
WITHOUT_CLASSIFICATION	i18n[codeCompletion.spWithParams=stored procedure with parameter info: {call mySP(<IN INTEGER tid>)}]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.globalFunctCompltion=If there is no matching prefix configuration functions should complete like:]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.udfWithoutParams=UDF without params]
WITHOUT_CLASSIFICATION	Just a Test
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig.deleteSelRows=Delete selected rows]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig.newRow=Add new row]
WITHOUT_CLASSIFICATION	this holds all the values for switches that the user is allowed to set
WITHOUT_CLASSIFICATION	this will be our working buffer to hold data chunks read in from the data file
WITHOUT_CLASSIFICATION	these are all more or less global loop variables to keep from needing to pass them all into various methods during parsing
WITHOUT_CLASSIFICATION	use clone here to prevent the outside code from setting values on the array directly, which would throw off the index lookup based on header name
WITHOUT_CLASSIFICATION	use headersHolder.Length here in case headers is null
WITHOUT_CLASSIFICATION	need to return a clone, and can't use clone because values.Length might be greater than columnsCount
WITHOUT_CLASSIFICATION	check to see if we've already found the end of data
WITHOUT_CLASSIFICATION	loop over the data stream until the end of data is found or the end of the record is found
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	this will be a text qualified column, so we need to set startedWithQualifier to make it enter the seperate branch to handle text qualified columns
WITHOUT_CLASSIFICATION	read qualified
WITHOUT_CLASSIFICATION	can only happen for ESCAPE_MODE_BACKSLASH
WITHOUT_CLASSIFICATION	make sure to clear the flag for next run of the loop
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	this will skip blank lines
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	we encountered a column with no data, so just send the end column
WITHOUT_CLASSIFICATION	do nothing, this will trim leading whitespace for both text qualified columns and non
WITHOUT_CLASSIFICATION	since the letter wasn't a special letter, this will be the first letter of our current column
WITHOUT_CLASSIFICATION	check to see if we hit the end of the file without processing the current record
WITHOUT_CLASSIFICATION	for hasMoreData to ever be false, all data would have had to have been copied to the raw buffer
WITHOUT_CLASSIFICATION	if no more data could be found, set flag stating that the end of the data was found
WITHOUT_CLASSIFICATION	copy the header data from the column array to the header string array
WITHOUT_CLASSIFICATION	if there are duplicate header names, we will save the last one
WITHOUT_CLASSIFICATION	check to see if we have read the header record yet
WITHOUT_CLASSIFICATION	return the processed header data for this column
WITHOUT_CLASSIFICATION	must be called before setting startedColumn = false
WITHOUT_CLASSIFICATION	check to see if our current holder array for column chunks is still big enough to handle another column chunk
WITHOUT_CLASSIFICATION	holder array needs to grow to be able to hold another column
WITHOUT_CLASSIFICATION	Create column list
WITHOUT_CLASSIFICATION	keep track of the last letter because we need it for several key decisions
WITHOUT_CLASSIFICATION	end else
WITHOUT_CLASSIFICATION	clear public column values for current line
WITHOUT_CLASSIFICATION	just eat the exception
WITHOUT_CLASSIFICATION	/ <summary> / The position of the cursor in the buffer when the / current column was started or the last time data / was moved out to the column buffer. / </summary>
WITHOUT_CLASSIFICATION	ASCII/ANSI escape
WITHOUT_CLASSIFICATION	having these as publicly accessible members will prevent the overhead of the method call that exists on properties
WITHOUT_CLASSIFICATION	these are static instead of final so they can be changed in unit test isn't visible outside this class and is only accessed once during CsvReader construction
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.settingsDialogTitle=Import file settings]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.wrongFormat=Imported column has not the required format.\nLine is: {0}, column is: {1}]
WITHOUT_CLASSIFICATION	1968807: Unsigned INT problem with IMPORT FILE functionality If we are working with a signed integer, then it should be ok to store in a Java integer which is always signed. However, if we are working with an unsigned integer type, Java doesn't have this so use a long instead.
WITHOUT_CLASSIFICATION	try it as a long in case the database driver didn't correctly identify an unsigned field
WITHOUT_CLASSIFICATION	Show a warning dialog and let the user confirm it.
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.ioErrorOccured=An error occured while reading import file data.]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Not needed
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.suggestColumns=Suggest columns (find matching columns)]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.headersIncluded=Headers in first line]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.dataPreview=Data preview]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	If the user chooses neither Fixed value nor Auto-Increment, then clear the "Fixed value" field if it has a value.
WITHOUT_CLASSIFICATION	If the user picks auto-increment, auto-fill the "Fixed value" column with 0 for the start value if it is currently empty.
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.column=Column]
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.error.getdialog=getDialog: unable to invokeAndWait for dialog]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.fixedValue=Fixed value]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.importFileColumn=Import file column]
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.insertingRecordsLabel=Copying records]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.AUTO_INCREMENT=Auto increment]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Ignore that
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	register custom DataTypeComponent factory for DB2 XML
WITHOUT_CLASSIFICATION	Install DB2JCCExceptionFormatter iff we're using the JCC driver
WITHOUT_CLASSIFICATION	tableExpander.setTableIndexExtractor(extractor);
WITHOUT_CLASSIFICATION	As the JCC driver code is obfuscated, we do not check the full class name, but resort to checking a prefix and suffix instead. In my version, the full class name is "com.ibm.db2.jcc.c.SqlException"
WITHOUT_CLASSIFICATION	Prefix for the JCC SqlException class name
WITHOUT_CLASSIFICATION	Class name for the JCC SqlException class
WITHOUT_CLASSIFICATION	Names of the various methods we need to invoke
WITHOUT_CLASSIFICATION	DB2Sqlca sqlca = ((DB2Diagnosable) t).getSqlca();
WITHOUT_CLASSIFICATION	String msg = sqlca.getMessage();
WITHOUT_CLASSIFICATION	int sqlCode = sqlca.getSqlCode();
WITHOUT_CLASSIFICATION	int sqlstate = sqlca.getSqlState();
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	we may have more than one statement in sql at this point
WITHOUT_CLASSIFICATION	MQTs only ever have one sql statement
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	Yes to all
WITHOUT_CLASSIFICATION	Cancel
WITHOUT_CLASSIFICATION	i18n[oracle.owner=Owner]
WITHOUT_CLASSIFICATION	No decimal digits strongly suggests an INTEGER of some type. Since it's not real easy to tell what kind of int (int2, int4, int8) just make it an int8 (i.e. BIGINT)
WITHOUT_CLASSIFICATION	Numbers and such.
WITHOUT_CLASSIFICATION	i18n[oracle.objectName=Object Name]
WITHOUT_CLASSIFICATION	i18n[oracle.objectType=Object Type]
WITHOUT_CLASSIFICATION	As a last resort, get the length of the longest value in the specified column.
WITHOUT_CLASSIFICATION	Yes || Yes to all
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	No need to check column name validity when source and dest are of the same type of database.
WITHOUT_CLASSIFICATION	Don't fool around with manual commit later.
WITHOUT_CLASSIFICATION	Loop through source records...
WITHOUT_CLASSIFICATION	MySQL driver gets unhappy when we use the same PreparedStatement to bind null and non-null LOB variables without clearing the parameters first.
WITHOUT_CLASSIFICATION	I18n[oracle.invalidTitle=Oracle invalid objects for: {0}]
WITHOUT_CLASSIFICATION	Only resize once.
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	ICommand Interface implementation
WITHOUT_CLASSIFICATION	Can't paste from a session that is no longer around.
WITHOUT_CLASSIFICATION	md = new MemoryDiagnostics();
WITHOUT_CLASSIFICATION	Copy action object tree types
WITHOUT_CLASSIFICATION	Paste action object tree types
WITHOUT_CLASSIFICATION	MySQL shows databases as "CATALOGS" not "SCHEMAS"
WITHOUT_CLASSIFICATION	Nothing to do for an SQL internal frame
WITHOUT_CLASSIFICATION	When the user pastes on a TABLE label which is located under a schema/catalog, build the schema DatabaseObjectInfo.
WITHOUT_CLASSIFICATION	i18n[PasteTableAction.error.destdbobj=The destination database doesn't support copying tables into '{0}' objects.\n Please select a schema to paste into.]
WITHOUT_CLASSIFICATION	ISession sourceSession = sessionInfoProv.getCopySourceSession(); ISession destSession = sessionInfoProv.getCopyDestSession();
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	calculate the average time / item
WITHOUT_CLASSIFICATION	TODO: check to be sure that the source and destination schemas are different. Abort if they are the same and inform the user.
WITHOUT_CLASSIFICATION	Only concerned about order when more than one table.
WITHOUT_CLASSIFICATION	Column 0 Row 1
WITHOUT_CLASSIFICATION	How many items left
WITHOUT_CLASSIFICATION	Span across two columns c.ipadx = 40;
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 20 pixels
WITHOUT_CLASSIFICATION	selectFetchSizeLabel.setHorizontalAlignment(JLabel.LEFT);
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Probably shutting down.
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executeupdate=executeupdate: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	TimesTen allows a maximum fetch size of 128.
WITHOUT_CLASSIFICATION	Allow the user to set "0" for the fetch size to indicate that this should not be called. JDBC-ODBC bridge driver fails to execute SQL once you have set the fetch size to any value.
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.tablenotfound=Couldn't locate table '{0}' in schema '(1)']
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	Do Nothing - this can happen when the table doesn't exist
WITHOUT_CLASSIFICATION	Currently, as of milestone 3, Axion doesn't support "schemas" like other databases. So, set the schema to emtpy string if we detect an Axion session.
WITHOUT_CLASSIFICATION	MySQL uses catalogs and not schemas
WITHOUT_CLASSIFICATION	trim the table name in case of HADB
WITHOUT_CLASSIFICATION	Fallback to the old method, going directly to the database instead of using SchemaInfo, since SchemaInfo didn't have it.
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins/dbcopy/scripts
WITHOUT_CLASSIFICATION	Fix the case according to what the database tells us.
WITHOUT_CLASSIFICATION	SQL FLOAT requires support for 15 digits of mantissa.
WITHOUT_CLASSIFICATION	COLUMN_NAME
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.unknowntype=Unknown Java SQL column type: '{0}']
WITHOUT_CLASSIFICATION	if we failed to bind the blob in a file, try memory.
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindcloblength=bindClobVarInFile: writing '{0}' bytes.]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindclobfile=bindClobVarInFile: Opening temp file '{0}']
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindblobfile=bindBlobVarInFile: Opening temp file '{0}']
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindblobmem=bindBlobVarInMemory: binding '{0}' bytes]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.bindblobfailure=bindBlobVar: failed to bind blob using filesystem - attempting to bind blob using memory]
WITHOUT_CLASSIFICATION	if we failed to bind the blob in a file, try memory.
WITHOUT_CLASSIFICATION	set the ps to read from the file we just created.
WITHOUT_CLASSIFICATION	get ascii stream from rs
WITHOUT_CLASSIFICATION	read rs input stream write to file output stream
WITHOUT_CLASSIFICATION	Open file output stream
WITHOUT_CLASSIFICATION	Open file output stream
WITHOUT_CLASSIFICATION	read rs input stream write to file output stream
WITHOUT_CLASSIFICATION	set the ps to read from the file we just created.
WITHOUT_CLASSIFICATION	get binary stream from rs
WITHOUT_CLASSIFICATION	If the user wants the primary key copied and the source session isn't Axion (Axion throws SQLException for getPrimaryKeys())
WITHOUT_CLASSIFICATION	user.home/.squirrel-sql/plugins
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	ignore any SQLExceptions. This would only if we could not get column info from the SQL database meta data.
WITHOUT_CLASSIFICATION	replace the next question mark with nextVal
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	ResultSet rs = con.getMetaData().getTables("dbcopysrc", null, "BIGINT_TYPE_TABLE", new String[]{ "TABLE" });
WITHOUT_CLASSIFICATION	listener.setShowSqlStatements(true);
WITHOUT_CLASSIFICATION	result = false;
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	diffSourceSession = null;setPasteMenuEnabled(false);PreferencesManager.unload();
WITHOUT_CLASSIFICATION	DBCopyGlobalPreferencesTab tab = new DBCopyGlobalPreferencesTab();return new IGlobalPreferencesPanel[] { tab };
WITHOUT_CLASSIFICATION	Uses menu.dbdiff. in dbdiff.properties
WITHOUT_CLASSIFICATION	Interface SessionInfoProvider implementation
WITHOUT_CLASSIFICATION	Column is in table 1, but not table 2
WITHOUT_CLASSIFICATION	i18n[DiffExecutor.noDiffsMessage=No differences were detected]
WITHOUT_CLASSIFICATION	table exists in source db but not dest
WITHOUT_CLASSIFICATION	table doesn't exist in source db
WITHOUT_CLASSIFICATION	Assume objs[0] is a schema/catalog
WITHOUT_CLASSIFICATION	Nothing to do for an SQL internal frame
WITHOUT_CLASSIFICATION	ICommand Interface implementation
WITHOUT_CLASSIFICATION	The header for the scrollable part which presents column differences
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	corner.validate();
WITHOUT_CLASSIFICATION	jScrollPane1.setRowHeaderView(_rowHeader);
WITHOUT_CLASSIFICATION	_tableHeader.adoptAllColWidths(true); _tableHeader.initColWidths();
WITHOUT_CLASSIFICATION	corner.createDefaultColumnsFromModel();
WITHOUT_CLASSIFICATION	jScrollPane1.setCorner(JScrollPane.UPPER_LEFT_CORNER, corner);
WITHOUT_CLASSIFICATION	result.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
WITHOUT_CLASSIFICATION	throw new IllegalStateException("Wrong constructor");
WITHOUT_CLASSIFICATION	Do Nothing - this can happen when the table doesn't exist
WITHOUT_CLASSIFICATION	MySQL uses catalogs and not schemas
WITHOUT_CLASSIFICATION	Currently, as of milestone 3, Axion doesn't support "schemas" like other databases. So, set the schema to emtpy string if we detect an Axion session.
WITHOUT_CLASSIFICATION	Don't change the case of the identifier if database allows mixed case.
WITHOUT_CLASSIFICATION	Fix the case according to what the database tells us.
WITHOUT_CLASSIFICATION	Register custom DataTypeComponent factory for Derby CLOB type
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.SEQUENCE, new DatabaseObjectInfoTab()); _treeAPI.addDetailTab(DatabaseObjectType.SEQUENCE, new SequenceDetailsTab());
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander _treeAPI.addExpander(DatabaseObjectType.SCHEMA, new SchemaExpander());
WITHOUT_CLASSIFICATION	the code bellow is only for Embedded Derby Driver
WITHOUT_CLASSIFICATION	Getting java.sql.Driver to run shutdown command
WITHOUT_CLASSIFICATION	Re-registering driver is necessary for Embedded Derby
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	The JTextComponent that is being used for editing
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	for convenience, cast the value object to its type
WITHOUT_CLASSIFICATION	we have the whole contents of the CLOB
WITHOUT_CLASSIFICATION	Getters and Setters
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	end of mouse listener
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	for convenience, cast the existing object
WITHOUT_CLASSIFICATION	no existing clob to re-use
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Clob object that we need to re-use, since that is the DBs reference to the clob data area. Otherwise, we set the original Clob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	create new object to hold the different value, but use the same internal CLOB pointer as the original
WITHOUT_CLASSIFICATION	Now the functions for the Popup-related operations.
WITHOUT_CLASSIFICATION	The following is used in both cell and popup operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	user enters something when field is null
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	no default in DB. If nullable, use null.
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	there was an error in the conversion
WITHOUT_CLASSIFICATION	check that the text is a valid representation
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	fall through to normal processing of this key stroke
WITHOUT_CLASSIFICATION	check for user deletes last thing in field
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	convert number conversion issue into IO issue for consistancy
WITHOUT_CLASSIFICATION	CLOB cannot be used in WHERE clause
WITHOUT_CLASSIFICATION	for convenience cast the object to ClobDescriptor
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	i18n[editextras.date=Date]
WITHOUT_CLASSIFICATION	new RemoveQuotesCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	Load resources.
WITHOUT_CLASSIFICATION	To make the shortcut visible in the popup
WITHOUT_CLASSIFICATION	Some people put new line characters in their SQL to have nice debug output. Remove these new line characters too.
WITHOUT_CLASSIFICATION	new ConvertToStringBufferCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	/ IBM DB 2 specific code to read procedure definitions.
WITHOUT_CLASSIFICATION	new InQuotesCommand(_session.getSQLPanelAPI(_plugin)).execute();
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Plugin knows only how to script Views and Stored Procedures on DB2. So if it's not a DB2 Session we tell SQuirreL the Plugin should not be used.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's view and procedure nodes.
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileWillBeCreated={0} not found - will be created]
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileExistsReplace={0}\nalready exists. Do you want to replace it?]
WITHOUT_CLASSIFICATION	i18n[exportconfig.databaseDrivers=Database Drivers]
WITHOUT_CLASSIFICATION	i18n[exportconfig.databaseAliases=Database Aliases]
WITHOUT_CLASSIFICATION	i18n[exportconfig.applicationSettings=Application Settings]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorReslovingFileName=Error resolving file name]
WITHOUT_CLASSIFICATION	i18n[favs.nameMustNotBeBlank=Name cannot be blank.]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Add mouse listener for displaying popup menu.
WITHOUT_CLASSIFICATION	private String getFileName(File dir, String name) { return getFileName(new File(dir, name)); }
WITHOUT_CLASSIFICATION	chooser.setDialogTitle("Select???");
WITHOUT_CLASSIFICATION	setModel(_model);
WITHOUT_CLASSIFICATION	addTreeExpansionListener(new MyExpansionListener());
WITHOUT_CLASSIFICATION	Register so that we can display different tooltips depending which entry in tree mouse is over.
WITHOUT_CLASSIFICATION	, IHasName
WITHOUT_CLASSIFICATION	= new QueryTree();
WITHOUT_CLASSIFICATION	_mainSplitPane.add(getDesktopPane(), JSplitPane.RIGHT);
WITHOUT_CLASSIFICATION	setBounds(new Rectangle(600, 400));
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[favs.newFolder=New Folder] ?? i18n
WITHOUT_CLASSIFICATION	Supports Session main window only
WITHOUT_CLASSIFICATION	Expanders.
WITHOUT_CLASSIFICATION	i18n[firebird.showTrigger=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[firebird.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[firebird.seqDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[firebird.genDetails=Details]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	private static ILogger s_log = LoggerController.createLogger(DatabaseExpander.class);
WITHOUT_CLASSIFICATION	i18n[firebird.details=Details]
WITHOUT_CLASSIFICATION	i18n[firebird.trigDetails=Details]
WITHOUT_CLASSIFICATION	i18n[firebird.trigDetails=Details]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	private utility constructor
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	sheet types
WITHOUT_CLASSIFICATION	result of checking for jaybird driver with major version >= 2
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	line separator for easy using ;-)
WITHOUT_CLASSIFICATION	jdbc:firebirdsql:[host[:port]/
WITHOUT_CLASSIFICATION	FileFilter
WITHOUT_CLASSIFICATION	getter/setter
WITHOUT_CLASSIFICATION	data objects
WITHOUT_CLASSIFICATION	-- edit
WITHOUT_CLASSIFICATION	tree
WITHOUT_CLASSIFICATION	select
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	layout ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	jradiobuttonRoles.setSelected(true);
WITHOUT_CLASSIFICATION	btnSetPermissions.setEnabled(false);
WITHOUT_CLASSIFICATION	private void appendPrivelegeToBuffer(StringBuffer pBuffer, String psPrivilege)
WITHOUT_CLASSIFICATION	data ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	false);
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	get grant target
WITHOUT_CLASSIFICATION	Tables and Views
WITHOUT_CLASSIFICATION	Procedures
WITHOUT_CLASSIFICATION	Roles
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	super.isCellEditable(row, column);
WITHOUT_CLASSIFICATION	" WITH ADMIN OPTION"
WITHOUT_CLASSIFICATION	super.isCellEditable(row, column);
WITHOUT_CLASSIFICATION	########################################################################
WITHOUT_CLASSIFICATION	setting color
WITHOUT_CLASSIFICATION	root
WITHOUT_CLASSIFICATION	set default colors
WITHOUT_CLASSIFICATION	set default colors
WITHOUT_CLASSIFICATION	root
WITHOUT_CLASSIFICATION	childs
WITHOUT_CLASSIFICATION	groups
WITHOUT_CLASSIFICATION	groups
WITHOUT_CLASSIFICATION	childs
WITHOUT_CLASSIFICATION	-- backup
WITHOUT_CLASSIFICATION	setting color
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	setting value
WITHOUT_CLASSIFICATION	setting value
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	-- restore
WITHOUT_CLASSIFICATION	errors
WITHOUT_CLASSIFICATION	info
WITHOUT_CLASSIFICATION	"ignore bad checksums" "ignore transaction in Limbo"
WITHOUT_CLASSIFICATION	"backup file"
WITHOUT_CLASSIFICATION	"server" "port" "database file"
WITHOUT_CLASSIFICATION	"deactivate indexes during restore" "restore without creating shadows" "do not reserve space for record versions" "restores one table at a time" "do not restore database validity conditions" "replace database from backup file" "override old page size" "new page size" "restore"
WITHOUT_CLASSIFICATION	JScrollPane jscrollpane1 = new JScrollPane();
WITHOUT_CLASSIFICATION	global preferences
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	i18n[graph.invalidWidth=Invalid width]
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	read map with users
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	i18n[oracle.sequenceDetails=Details]
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	Messages
WITHOUT_CLASSIFICATION	set dialog
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	display mode
WITHOUT_CLASSIFICATION	table data objects
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	session preferences
WITHOUT_CLASSIFICATION	display mode
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	global references
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	preferences from the last session
WITHOUT_CLASSIFICATION	table data objects
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	usermanager of jaybird
WITHOUT_CLASSIFICATION	handle of connected server
WITHOUT_CLASSIFICATION	init user list
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Logger for this class private final static ILogger log = LoggerController.createLogger(PreferencesPanel.class);
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Internationalized strings for this class.
WITHOUT_CLASSIFICATION	gui
WITHOUT_CLASSIFICATION	private JLabel lblTitle = new JLabel();
WITHOUT_CLASSIFICATION	----------------------------------------------------
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Name of the preferences files
WITHOUT_CLASSIFICATION	Folder to store the user settings in
WITHOUT_CLASSIFICATION	Bean for the global preferences
WITHOUT_CLASSIFICATION	the plugin
WITHOUT_CLASSIFICATION	case SESSION_BEAN_GRANT_AND_REVOKE: return FirebirdManagerGrantPreferenceBean.class.getClassLoader();
WITHOUT_CLASSIFICATION	We try to cascade
WITHOUT_CLASSIFICATION	i18n[graph.zoom=Zoom]
WITHOUT_CLASSIFICATION	Printing
WITHOUT_CLASSIFICATION	If we reach here we could not calculate a place to add the new table frame. Now it will automatically be added at (0,0).
WITHOUT_CLASSIFICATION	printBtnPrefSize.width -=10;
WITHOUT_CLASSIFICATION	No paper edges. We print the Graph as it is to a single image.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/ Printing
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	btnCopyToClipPrefSize.width -=10;
WITHOUT_CLASSIFICATION	public int getPixelWidth() { int pixelByCm = (int) (Toolkit.getDefaultToolkit().getScreenResolution() CM_BY_INCH + 0.5); return (int)(_format.getWidth() pixelByCm + 0.5); } public int getPixelHeight() { int pixelByCm = (int) (Toolkit.getDefaultToolkit().getScreenResolution() CM_BY_INCH + 0.5); return (int)(_format.getHeight() pixelByCm + 0.5); }
WITHOUT_CLASSIFICATION	i18n[graph.dina5=Din A 5]
WITHOUT_CLASSIFICATION	i18n[graph.inch=inch]
WITHOUT_CLASSIFICATION	Transferable
WITHOUT_CLASSIFICATION	Center text vertically.
WITHOUT_CLASSIFICATION	double zoom = _desktopController.getZoomer().getZoom();
WITHOUT_CLASSIFICATION	defines the opening angle of the arrow (not rad or so but something fancy)
WITHOUT_CLASSIFICATION	Serialized attributes
WITHOUT_CLASSIFICATION	defines the size of the arrow
WITHOUT_CLASSIFICATION	g.fillOval((int)(zoomfp.x + 0.5) - rad, (int)(zoomfp.y+0.5) - rad, 2 rad, 2 rad);
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	i18n[graph.btnCreateNewGraph=Create new graph]
WITHOUT_CLASSIFICATION	i18n[graph.orderyName=order by name]
WITHOUT_CLASSIFICATION	i18n[graph.save=Save]
WITHOUT_CLASSIFICATION	hit is on folding point
WITHOUT_CLASSIFICATION	hit is on folding point
WITHOUT_CLASSIFICATION	_constraintGraph.moveLastHitFoldingPointTo(point);
WITHOUT_CLASSIFICATION	Table was deleted from DB
WITHOUT_CLASSIFICATION	The old view is preserved to eventually preserve folding points
WITHOUT_CLASSIFICATION	+ 6;
WITHOUT_CLASSIFICATION	getSelectedController() == null means: Create a new Graph
WITHOUT_CLASSIFICATION	Clear
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	PKTABLE_NAME PKCOLUMN_NAME FKCOLUMN_NAME FK_NAME
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showIndexSource=Show index source]
WITHOUT_CLASSIFICATION	Sequence tabs
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	View Tab
WITHOUT_CLASSIFICATION	Trigger tabs
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[hibernate.hqlToSqlLong=HQL to SQL]
WITHOUT_CLASSIFICATION	If this isn't instanceof org.hibernate.type.CollectionType a NoSuchMethodException will be thrown
WITHOUT_CLASSIFICATION	UIFactory.getInstance().createTabbedPane();
WITHOUT_CLASSIFICATION	If this is not a hibernate error we write a log entry
WITHOUT_CLASSIFICATION	i18n[BookmarksAccessor.bookmarksPluginNeeded=Running bookmarks is only available with the Bookmarks Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[HQLPanelController.hqlToSqlSuccess=Generated {0} SQL(s) in {1} milliseconds.]
WITHOUT_CLASSIFICATION	private static final String PERF_KEY_HQL_TAB_DIVIDER_LOCATION = "Squirrel.hibernateplugin.hqlTabDivLoc";
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.configuration=Configuration]
WITHOUT_CLASSIFICATION	Code Completion has been done within Code Completion. Now just replace what all candidates have in common.
WITHOUT_CLASSIFICATION	Will be called asynchronously to the event dispatch thread
WITHOUT_CLASSIFICATION	-- EJBQL tokens --
WITHOUT_CLASSIFICATION	One synchron call for first completion
WITHOUT_CLASSIFICATION	Handle table source
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noProviderMsg=Missing SessionFactoryImplProvider .\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	We need this buffer because this method may be called asynchronously to the event dispatch thread What could happen is, that _currentAliasInfos ist changed.
WITHOUT_CLASSIFICATION	We assume that classes and attributes won't be in the same completion list. Classes will be completed fully qualified when the user works with fully qualified class names ...
WITHOUT_CLASSIFICATION	misc functions - based on oracle dialect
WITHOUT_CLASSIFICATION	standard sql92 functions
WITHOUT_CLASSIFICATION	time functions mapped to ansi extract
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.removeConfig=Remove]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFact=To obtain a Hibernate SessionFactoryImpl instance SQuirreL should:]
WITHOUT_CLASSIFICATION	Example for this code: Completion should from Kv k inner join fetch k.positionen as posses where posses.artNr = 'sdfsdf'
WITHOUT_CLASSIFICATION	i18n[HibernatePrefsTab.hint=Hibernate configurations]
WITHOUT_CLASSIFICATION	i18n[HibernatePrefsTab.title=Hibernate]
WITHOUT_CLASSIFICATION	i18n[MappedObjectPanel.QualifiedNames=Show qualified names]
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName, String tableType, String remarks,
WITHOUT_CLASSIFICATION	private static final String PERF_KEY_OBJ_TAB_DIV_LOC = "Squirrel.hibernateplugin.objTabDivLocAsInt";
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.sessionTimezoneTT=Set the session timezone to view 'WITH LOCAL TIMEZONE' data types]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.toString=Mapping]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	dist
WITHOUT_CLASSIFICATION	i18n[MappingRoot.user=JDBC User (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.attrName=Attribute name]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.identifier=Identifier]
WITHOUT_CLASSIFICATION	i18n[I18n.openIOnEditor=Open in Editor]
WITHOUT_CLASSIFICATION	i18n[i18n.noFilesOpened=No file found.\nSee message panel for details.]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiOutDir=Cannot convert files without a native2Ascii output dir.]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkDirIsNotADirectory=Working directory {0} is not a directory]
WITHOUT_CLASSIFICATION	i18n[I18n.noWorkdirSpecified=No working directory specified.]
WITHOUT_CLASSIFICATION	i18n[i18n.bundle=Bundle]
WITHOUT_CLASSIFICATION	i18n[i18n.missingTarnslation=Missing translations]
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDir=Source directory]
WITHOUT_CLASSIFICATION	i18n[I18n.TranslationsGenerationCount=Generated {0} templates to {1}]
WITHOUT_CLASSIFICATION	i18n[i18n.ParsingFinish=Parsing finished]
WITHOUT_CLASSIFICATION	i18n[I18n.info=Info]
WITHOUT_CLASSIFICATION	i18n[I18n.developers=Developers]
WITHOUT_CLASSIFICATION	i18n[I18n.translators=Translators]
WITHOUT_CLASSIFICATION	i18n[mssql.allObjects=All objects]
WITHOUT_CLASSIFICATION	No i18n, developers should write English props.
WITHOUT_CLASSIFICATION	print the i18n comment
WITHOUT_CLASSIFICATION	i18n[i18n.parseSuccess=Added {0} new and {1} replaced properties to {2}]
WITHOUT_CLASSIFICATION	No i18n, developers should write English props.
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDirDoesNotExist=Source directory {0} does not exist.]
WITHOUT_CLASSIFICATION	i18n[I18n.NoSourceDir=Please choose a source directory.]
WITHOUT_CLASSIFICATION	i18n[I18n.SourceDirIsNotADirectory=Source directory {0} is not a directory.]
WITHOUT_CLASSIFICATION	Rob: Removed replacement via RegExp because it needed several RegExp escapes in val.
WITHOUT_CLASSIFICATION	i18n[i18n.wroteFixedFile=Wrote file {0}]
WITHOUT_CLASSIFICATION	No end bracket, params might follow
WITHOUT_CLASSIFICATION	We see that the replacement was already done before so we can count this as replaced
WITHOUT_CLASSIFICATION	These files contain images etc. We try to filter out these props.
WITHOUT_CLASSIFICATION	i18n[InformixPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[InformixPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	Postgres pg_proc table doesn't appear to have schema. I couldn't locate another table to join with to get this info either.
WITHOUT_CLASSIFICATION	i18n[mssql.allTables=All tables]
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.showErrorOffsetLabel=Show Syntax Error Offset in SQL Editor]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	ISessionListener interface methods
WITHOUT_CLASSIFICATION	Since we depend upon the Informix-specific IfmxConnection class, we need to keep a reference to the ISession we are associated with. However, this session could be closed, at which time we want to give up our reference so that it can be garbage collected.
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	First time through, skip the double spacing
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	i18n[mssql.allRules=All rules]
WITHOUT_CLASSIFICATION	Name of directory to store extra LAFs in for the user.
WITHOUT_CLASSIFICATION	Folder that stores themepacks for this LAF.
WITHOUT_CLASSIFICATION	i18n[laf.jarZip=JAR/Zip files]
WITHOUT_CLASSIFICATION	i18n[laf.skinThemPack=Theme Pack:]
WITHOUT_CLASSIFICATION	i18n[laf.skinThemePackDir=Theme Pack Directory:]
WITHOUT_CLASSIFICATION	Load resources.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Folder that stores Look and Feel jars.
WITHOUT_CLASSIFICATION	Folder to contain extra LAFs supplied by the user.
WITHOUT_CLASSIFICATION	Create empty required files in user settings directory.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	Setup preferences to make jGoodies LAF look better. UIManager.put(Options.USE_SYSTEM_FONTS_APP_KEY, Boolean.TRUE); UIManager.put(Options.USE_NARROW_BUTTONS_KEY, Boolean.TRUE);
WITHOUT_CLASSIFICATION	Create the Look and Feel register.
WITHOUT_CLASSIFICATION	Listen for GUI components being created.
WITHOUT_CLASSIFICATION	Update font used for status bars.
WITHOUT_CLASSIFICATION	Ensure that this is a Plastic Theme.
WITHOUT_CLASSIFICATION	Editable Text
WITHOUT_CLASSIFICATION	Menus
WITHOUT_CLASSIFICATION	Static text
WITHOUT_CLASSIFICATION	Save the current UI defaults.
WITHOUT_CLASSIFICATION	Get Look and Feel class object.
WITHOUT_CLASSIFICATION	i18n[laf.staticText=Static Text]
WITHOUT_CLASSIFICATION	i18n[laf.statusBars=Status Bars]
WITHOUT_CLASSIFICATION	i18n[laf.other=Other]
WITHOUT_CLASSIFICATION	i18n[laf.statusFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.staticFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.otherFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[laf.tabFonts=Fonts]
WITHOUT_CLASSIFICATION	i18n[laf.tabTitle=Fonts]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Map of JAR file URLs containing LAFs keyed by the LAF class name.
WITHOUT_CLASSIFICATION	Get the new Look and Feel object.
WITHOUT_CLASSIFICATION	Initialize all the LAF controllers.
WITHOUT_CLASSIFICATION	If a different LAF to the current one has been requested then change to the requested LAF.
WITHOUT_CLASSIFICATION	Retrieve URLs of all the Look and Feel jars and store in lafUrls.
WITHOUT_CLASSIFICATION	Set Look and Feel.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Directory containing the standard LAF jar files.
WITHOUT_CLASSIFICATION	Create a ClassLoader for all the LAF jars. Install all Look and Feels into the UIManager.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Load info about the standard LAFs that come with this plugin.
WITHOUT_CLASSIFICATION	We have read in all properties.
WITHOUT_CLASSIFICATION	private LAFPreferences _prefs;
WITHOUT_CLASSIFICATION	Load info about any extra LAFs supplied by the user.
WITHOUT_CLASSIFICATION	private LAFPreferences _prefs;
WITHOUT_CLASSIFICATION	SkyBluer
WITHOUT_CLASSIFICATION	_prefs = plugin.getLAFPreferences();
WITHOUT_CLASSIFICATION	private IApplication _app;
WITHOUT_CLASSIFICATION	_lafRegister.updateAllFrames();
WITHOUT_CLASSIFICATION	_app = app;
WITHOUT_CLASSIFICATION	i18n[laf.lookAndFeel=Look and Feel:]
WITHOUT_CLASSIFICATION	i18n[laf.jars=L & F jars:]
WITHOUT_CLASSIFICATION	_prefs = plugin.getLAFPreferences();
WITHOUT_CLASSIFICATION	_app = app;
WITHOUT_CLASSIFICATION	Force the LAF to be set even if Tonic is the current one. This allows changes to take affect.
WITHOUT_CLASSIFICATION	i18n[laf.themePack=Theme Pack:]
WITHOUT_CLASSIFICATION	Folder that stores themepacks for this LAF.
WITHOUT_CLASSIFICATION	i18n[laf.themePacLoc=Theme Pack Directory:]
WITHOUT_CLASSIFICATION	Put all available "Look and Feel" objects into collections keyed by LAF name and by the class name.
WITHOUT_CLASSIFICATION	Add the names of all LAF objects to control. By doing thru the Map these will be sorted.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.title=SybaseASE]
WITHOUT_CLASSIFICATION	i18n[mmsql.catalogErr=The DBNAME of the session's URL is set to '{0}', but the session's current catalog is set to '{1}'.\n\nSQL Server doesn't support this in most cases. This is a current issue.]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.hint=Preferences for SybaseASE]
WITHOUT_CLASSIFICATION	fApplication.addApplicationListener(applicationAdapter); fApplication.addPreferencesMenuItem(); fApplication.setEnabledPreferencesMenu(true);
WITHOUT_CLASSIFICATION	fine, don't add any data files. throw new WrappedSQLException(ex);
WITHOUT_CLASSIFICATION	fine, don't show any indexes. throw new WrappedSQLException(ex);
WITHOUT_CLASSIFICATION	because of the cross-catalog problem, let's not invoke this if the current catalog isn't equal to the catalog specified in the URL.
WITHOUT_CLASSIFICATION	there's a DBNAME specified, so make sure it matches the current catalog.
WITHOUT_CLASSIFICATION	i18n[mmsql.sqlScripts=SQL Scripts]
WITHOUT_CLASSIFICATION	TABLE NAME COLUMN NAME COLUMN SIZE COLUMN SIZE
WITHOUT_CLASSIFICATION	this is a UDF, not a stored procedure.
WITHOUT_CLASSIFICATION	since .execute() returned true, the first result is a ResultSet.
WITHOUT_CLASSIFICATION	Get the names of all the selected tables in a comma separated list,
WITHOUT_CLASSIFICATION	NOTE: a procedure may also be a UDF!
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the database file and its size.
WITHOUT_CLASSIFICATION	i18n[mssql.toScript=Objects to script:]
WITHOUT_CLASSIFICATION	i18n[mssql.foematting=Formatting]
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the index.
WITHOUT_CLASSIFICATION	by default, it is not running.
WITHOUT_CLASSIFICATION	create the timer, but DO NOT start it.
WITHOUT_CLASSIFICATION	don't bother changing the delay, but stop it if it's running.
WITHOUT_CLASSIFICATION	change the delay, and start it if it was stopped.
WITHOUT_CLASSIFICATION	i18n[mssql.remove_Mnemonic=R]
WITHOUT_CLASSIFICATION	i18n[mssql.objectsToBeScripted=Objects to be scripted]
WITHOUT_CLASSIFICATION	i18n[mssql.allUserDef=All user-defined data types]
WITHOUT_CLASSIFICATION	add the tables.
WITHOUT_CLASSIFICATION	Component glue = Box.createGlue(); c.gridx = 1; c.gridy = 10; gridBag.setConstraints(glue, c); panel.add(glue);
WITHOUT_CLASSIFICATION	don't increment i if you're removing something; otherwise, you'd skip the next item.
WITHOUT_CLASSIFICATION	we must iterate through this in descending order to avoid removing, say, item #2, making item #4 into item #3, inadvertently removing item #5.
WITHOUT_CLASSIFICATION	add the procedures.
WITHOUT_CLASSIFICATION	add the views.
WITHOUT_CLASSIFICATION	i18n[mssql.generateDrop=Generate the DROP <object> command for each object]
WITHOUT_CLASSIFICATION	i18n[mssql.generateDependend=Generate scripts for all dependent objects]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	add the UDTs.
WITHOUT_CLASSIFICATION	IProcedureInfo[] procs = metaData.getProcedures(catalog,null,null);
WITHOUT_CLASSIFICATION	i18n[mssql.scriptTemplate=Script template]
WITHOUT_CLASSIFICATION	i18n[mssql.only70compatible=Only script 7.0 compatible features]
WITHOUT_CLASSIFICATION	--- SECURITY PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.scriptLogins=Script SQL Server logins (Windows and SQL Server logins)]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptingOptions=Table Scripting Options]
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	--- TABLE SCRIPTING PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.scriptIndexses=Script indexes]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptFullText=Script full-text indexes]
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	i18n[mssql.fileFormat=File Format]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	-----------------------------------------------------------------
WITHOUT_CLASSIFICATION	--- TABLE SCRIPTING PANEL ----------------------------------------------
WITHOUT_CLASSIFICATION	the columns in the referenced table
WITHOUT_CLASSIFICATION	keep scanning until we're either EOL or find a different filegroup.
WITHOUT_CLASSIFICATION	this works because all the IDatabaseObjectInfo objects come from the same source, so their references are equal.
WITHOUT_CLASSIFICATION	not so simple -- we want to keep the filegroups together.
WITHOUT_CLASSIFICATION	if we're still in this function, just add it at the end.
WITHOUT_CLASSIFICATION	j is the index of the first file in the next filegroup.
WITHOUT_CLASSIFICATION	chop off "DEFAULT on column ";
WITHOUT_CLASSIFICATION	chop off "CHECK on column ";
WITHOUT_CLASSIFICATION	NOTE: there are two rows. NOTE: MssqlConstraint holds the columns in the table participating in the key. NOTE: ForeignKeyConstraint holds the columns in the referenced table IN THE SAME ORDER.
WITHOUT_CLASSIFICATION	constraintKeys looks like this --> `REFERENCES pubs.dbo.foo (fooid, quuxid)' chop off "REFERENCES "
WITHOUT_CLASSIFICATION	now tableAndColumns[0] contains the table name and tableAndColumns[1] contains the bracketed list of columns.
WITHOUT_CLASSIFICATION	probably just no results -- return it empty.
WITHOUT_CLASSIFICATION	if it's PRIMARY, just write it without the FILEGROUP prefix.
WITHOUT_CLASSIFICATION	no indexes, i guess.
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	`clustered, unique, primary key located on PRIMARY'
WITHOUT_CLASSIFICATION	no triggers, i guess.
WITHOUT_CLASSIFICATION	no permissions, i guess.
WITHOUT_CLASSIFICATION	Owner Object Grantee Grantor ProtectType Action Column ------ ---------------------- ------------------ ------- ----------- ------ ------------------ dbo billing_bak public dbo Grant Delete .dbo billing_bak public dbo Grant Insert .dbo billing_bak public dbo Grant Select (All+New)dbo billing_bak public dbo Grant Update (All+New)dbo billing_bak usbilling dbo Deny Insert .
WITHOUT_CLASSIFICATION	i18n[mysql.createTableBtn=Create table]
WITHOUT_CLASSIFICATION	since .execute() returned true, the first result is a ResultSet.
WITHOUT_CLASSIFICATION	Name Owner Type Created_datetime --------------------------------------------------------- billing dbo user table 2004-03-08 10:41:05.030
WITHOUT_CLASSIFICATION	Column_name Type Computed Length Prec Scale Nullable TrimTrailingBlanks FixedLenNullInSource Collation ------------------------------------------------------------------------------------------------------------------------------------------------------- Location char no 2 yes no yes Latin1_General_CI_AS TotalBilledAmnt money no 8 19 4 yes (n/a) (n/a) NULL
WITHOUT_CLASSIFICATION	length
WITHOUT_CLASSIFICATION	collation
WITHOUT_CLASSIFICATION	there can be only one default in truth, but the model allows more than one.
WITHOUT_CLASSIFICATION	there can be only one PK in truth, but the model allows more than one.
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.title=MySQL]
WITHOUT_CLASSIFICATION	Tabs to add to the database node.
WITHOUT_CLASSIFICATION	add users to the role.
WITHOUT_CLASSIFICATION	stored procedures and functions have that dangling ;version thing.
WITHOUT_CLASSIFICATION	one column for the object name, another column for the object's owner.
WITHOUT_CLASSIFICATION	public boolean isCellEditable(int rowIndex, int columnIndex) { return (columnIndex == 0); }
WITHOUT_CLASSIFICATION	coll.add(new CreateTableAction(app, _resources, this));
WITHOUT_CLASSIFICATION	Show users in the object tee.
WITHOUT_CLASSIFICATION	Tabs to add to the catalog nodes.
WITHOUT_CLASSIFICATION	Tabs to add to the table nodes.
WITHOUT_CLASSIFICATION	Tabs to add to the user nodes.
WITHOUT_CLASSIFICATION	Options in popup menu.
WITHOUT_CLASSIFICATION	Tab to add to view nodes.
WITHOUT_CLASSIFICATION	Show triggers for tables
WITHOUT_CLASSIFICATION	_resources.addToMenu(coll.get(CreateTableAction.class), mysqlMenu);
WITHOUT_CLASSIFICATION	_resources.addToMenu(coll.get(DropDatabaseAction.class), mysqlMenu);
WITHOUT_CLASSIFICATION	tabs for triggers
WITHOUT_CLASSIFICATION	i18n[mysql.copyOk=Ok]
WITHOUT_CLASSIFICATION	i18n[mysql.sureDropping=Are you sure?]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	private Object[] fields;
WITHOUT_CLASSIFICATION	private JCheckBox[] chFields;
WITHOUT_CLASSIFICATION	DefaultListModel listModel = (DefaultListModel) listFields.getModel();
WITHOUT_CLASSIFICATION	chFields = new JCheckBox[colNames.length];
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(CopyTableCommand.class);
WITHOUT_CLASSIFICATION	Set the boolean value when the user selects b/w structure and data
WITHOUT_CLASSIFICATION	Set the list disabled if allfields of table are to be copied
WITHOUT_CLASSIFICATION	i18n[mysql.createTableComm=Create Table...]
WITHOUT_CLASSIFICATION	i18n[mysql.createAdd=Add]
WITHOUT_CLASSIFICATION	i18n[mysql.lengtSet=Length/Set]
WITHOUT_CLASSIFICATION	private DBUtils dbUtils;
WITHOUT_CLASSIFICATION	i18n[mysql.msgTableCreated=Table {0} created]
WITHOUT_CLASSIFICATION	i18n[mysql.btCancel=Cancel]
WITHOUT_CLASSIFICATION	Set the attributes for the fields in the class FieldDetails
WITHOUT_CLASSIFICATION	Display the field attributes when selected in the list
WITHOUT_CLASSIFICATION	Reset the checkbox selected index false when fieldname gains focus
WITHOUT_CLASSIFICATION	Remove the Fields added to the list
WITHOUT_CLASSIFICATION	Logger for this class. private final static ILogger s_log = LoggerController.createLogger(AlterTableCommand.class);
WITHOUT_CLASSIFICATION	initComponents();
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Action performed for the cancel button private void buttonCancelActionPerformed(java.awt.event.ActionEvent evt) { _dlog.setVisible(false); _dlog.dispose(); }
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	private void closeDialog(java.awt.event.WindowEvent evt) { _dlog.setVisible(false); _dlog.dispose(); }
WITHOUT_CLASSIFICATION	i18n[sessionscript.Save=Save]
WITHOUT_CLASSIFICATION	Execute the SQL command in the SQL tab and then display the SQL tab.
WITHOUT_CLASSIFICATION	Get the names of all the selected tables in a comma separated list,
WITHOUT_CLASSIFICATION	Remove trailing ","
WITHOUT_CLASSIFICATION	private static ILogger s_log = LoggerController.createLogger(SessionExpander.class);
WITHOUT_CLASSIFICATION	Users.
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(AlterTableDialog.class);
WITHOUT_CLASSIFICATION	i18n[mysql.alterDlgAlter=Alter]
WITHOUT_CLASSIFICATION	i18n[mysql.alterDlgClose=Close]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(AlterColumnsPanelBuilder.class);
WITHOUT_CLASSIFICATION	selectedIndex = cbFieldName.getSelectedIndex(); DefaultComboBoxModel comboModel = (DefaultComboBoxModel) cbFieldName.getModel(); FieldDetails fd = (FieldDetails) comboModel.getElementAt(selectedIndex); cbFieldName.setSelectedItem(fd.getFieldName()); cbFieldType.setSelectedItem(fd.getFieldType()); tfFieldDefault.setText(fd.getDefault()); chAutoIncrement.setSelected(fd.IsAutoIncrement()); chNotNull.setSelected(fd.IsNotNull());
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	i18n[mysql.displayStatus=(MySQL) Display database status]
WITHOUT_CLASSIFICATION	i18n[mysql.status=MySQL Status]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(DatabaseStatusTab.class);
WITHOUT_CLASSIFICATION	i18n[mysql.displayOpenTables=(MySQL) Display open tables]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ProcessesTab.class);
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(OpenTablesTab.class);
WITHOUT_CLASSIFICATION	i18n[mysql.variables=MySQL Variables]
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(ShowMasterLogsTab.class);
WITHOUT_CLASSIFICATION	i18n[MysqlTriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	MySQL allows statement separators in procedure blocks. The process of tokenizing above renders these procedure blocks as separate statements, which are not valid to be executed separately. Here, we re-assemble any create procedure/function/trigger statements that we find using the beginning procedure block pattern and the procedure separator.
WITHOUT_CLASSIFICATION	Stray sep - or we failed to find pattern
WITHOUT_CLASSIFICATION	To get the TableInfo for the selected object in the tree
WITHOUT_CLASSIFICATION	Get all the data types available
WITHOUT_CLASSIFICATION	We got to the end of the script without finding a proc separator. Just add it as if we had.
WITHOUT_CLASSIFICATION	DELIMITER sets the separator that tells us when a procedure. This is MySQL-specific
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.All=Allow all Schemas]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.title=Oracle]
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Expanders.
WITHOUT_CLASSIFICATION	This fixes the issue where the tree is getting constructed prior to the Oracle plugin expanders being registered.(USERS, SESSIONS, INSTANCES nodes have no children until the tree is refreshed). Even though this is a hack, it doesn't seem to negatively impact performance even when loading all schemas.
WITHOUT_CLASSIFICATION	Register custom DataTypeComponent factory for Oracles XMLType
WITHOUT_CLASSIFICATION	Not all Oracle's, just 10g and above.
WITHOUT_CLASSIFICATION	i18n[oracle.displayOptions=Display database options]
WITHOUT_CLASSIFICATION	i18n[oracle.secons3=(seconds)]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.enableAutoRefresh=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[oracle.options=Options]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[oracle.refreshSecons=(seconds)]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	I18n[oracle.infoTitle=Oracle Session info for: {0}]
WITHOUT_CLASSIFICATION	I18n[oracle.sgaTitle=Oracle SGA trace for: {0}]
WITHOUT_CLASSIFICATION	Needs to be done in both cases because if the window goes back to the default layer it goes back behind all other windows too.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	Create spinner for update period
WITHOUT_CLASSIFICATION	Only resize once.
WITHOUT_CLASSIFICATION	JMH Remove the current sql text. Create a tabbed pane for session details (including sql text)
WITHOUT_CLASSIFICATION	i18n[oracle.displaySessionDetails=Display session details]
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	Stray sep - or we failed to find pattern
WITHOUT_CLASSIFICATION	Oracle allows statement separators in PL/SQL blocks. The process of tokenizing above renders these procedure blocks as separate statements, which is invalid for Oracle. Since "/" is the way in SQL-Plus to denote the end of a procedure or function, we re-assemble any create procedure/function/trigger statements that we find. This should be done before expanding file includes. Otherwise, any create sql found in files will already be joined, causing this to find create SQL without matching "/". The process of expanding 'file includes' already joins the sql fragments that it finds.
WITHOUT_CLASSIFICATION	JMH: For additional performance we could utilise the fixed_table_sequence column from the session, to investigate which rows need to be updated on a refresh See V$SESSION doco for more info.
WITHOUT_CLASSIFICATION	This seems to work for both Oracle 9i and 10g
WITHOUT_CLASSIFICATION	Since it is likely to have "/" on it's own line, and it is key to letting us know that proceeding statements form a multi-statement procedure or function, it deserves it's own place in the _queries arraylist. If it is followed by other procedure or function creation blocks, we may fail to detect that, so this just goes through the list and breaks apart statements on newline so that this cannot happen.
WITHOUT_CLASSIFICATION	Below is equivalent to the following: stringValueResult = xmlType.getStringVal();
WITHOUT_CLASSIFICATION	For Oracle 10g we could say something like : "where XMLSERIALIZE(CONTENT " + _colDef.getLabel() +") like '<value>'" This doesn't appear to work on Oracle 9i at the moment, so we will avoid using this column in any where clause if the value is non-null, which is what the superclass implementation does. TODO: Find a way to do this for both versions or split this behavior so that it works on 10g and is disabled on 9i.
WITHOUT_CLASSIFICATION	Below is equivalent to the following: stringValueResult = xmlType.getStringVal();
WITHOUT_CLASSIFICATION	Below is equivalent to the following: xmlType = XMLType.createXML(o);
WITHOUT_CLASSIFICATION	Throws an exception claiming that 2007 isn't a valid type - go figure. pstmt.setNull(position, _colDef.getSqlType());
WITHOUT_CLASSIFICATION	now bind the string..
WITHOUT_CLASSIFICATION	Both of these throw an exception claiming that it got a clob and expected a number (inconsistent data types): pstmt.setClob(position, null); pstmt.setNull(position, java.sql.Types.CLOB);
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	At the moment, no default value
WITHOUT_CLASSIFICATION	View Tab
WITHOUT_CLASSIFICATION	Index tab
WITHOUT_CLASSIFICATION	Trigger tabs
WITHOUT_CLASSIFICATION	Sequence tabs
WITHOUT_CLASSIFICATION	ANALYZE Checkbox
WITHOUT_CLASSIFICATION	Plugin supports only the main session window
WITHOUT_CLASSIFICATION	extractors
WITHOUT_CLASSIFICATION	Object Tree Expanders Schema Expanders - sequence
WITHOUT_CLASSIFICATION	super.sqlExecutionWarning(warn);
WITHOUT_CLASSIFICATION	Table Expanders - trigger and index expander
WITHOUT_CLASSIFICATION	Detail Tabs Procedure tab
WITHOUT_CLASSIFICATION	ANALYZE Checkbox
WITHOUT_CLASSIFICATION	Lock tab
WITHOUT_CLASSIFICATION	Popup Menus
WITHOUT_CLASSIFICATION	s_log.info("Not all selected objects where tables.");
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	This causes locks own by other pids to be excluded from the result. + " pgl.pid = pg_stat_get_backend_pid(svrid) AND "
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	table list
WITHOUT_CLASSIFICATION	We don't know if this type can be used in where clauses so always exclude it.
WITHOUT_CLASSIFICATION	Options: FULL Checkbox
WITHOUT_CLASSIFICATION	Options: FULL Checkbox
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	handle null, which is shown as the special string "<null>"
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	Stored Procedures can have comments embedded in them, so don't line-wrap them.
WITHOUT_CLASSIFICATION	TABLE TYPE DBO
WITHOUT_CLASSIFICATION	INDEX
WITHOUT_CLASSIFICATION	VIEW TYPE DBO (doesn't exist yet)
WITHOUT_CLASSIFICATION	VIEW
WITHOUT_CLASSIFICATION	SEQUENCE TYPE DBO
WITHOUT_CLASSIFICATION	SEQUENCE
WITHOUT_CLASSIFICATION	It is important to process the name change first - so that we can use the new name instead of the old in subsequent alterations
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	skip comments
WITHOUT_CLASSIFICATION	create new columns in table
WITHOUT_CLASSIFICATION	update <destinationTable> s set destColumn = ( select f.desc_t1 from <fromTable> f where f.myid = s.myid)
WITHOUT_CLASSIFICATION	ArrayList<String> result = new ArrayList<String>();
WITHOUT_CLASSIFICATION	deletes the ", "
WITHOUT_CLASSIFICATION	deletes the ", "
WITHOUT_CLASSIFICATION	Selects the values from the merge table
WITHOUT_CLASSIFICATION	Selects the values for the where part
WITHOUT_CLASSIFICATION	maybe with Inner join better performance
WITHOUT_CLASSIFICATION	Selects the values from the existing table
WITHOUT_CLASSIFICATION	merge columns in a new column
WITHOUT_CLASSIFICATION	merge columns in an existing column
WITHOUT_CLASSIFICATION	add column if neeeded
WITHOUT_CLASSIFICATION	getColumnAddSQL
WITHOUT_CLASSIFICATION	Don't show indexes dialog if only one index exists to be modified
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Only Oracle supports materialized views directly.
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	implemented in all originally supported dialects
WITHOUT_CLASSIFICATION	getColumnAddSQL
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select one or more columns to drop
WITHOUT_CLASSIFICATION	Don't show foreignKeys dialog if only one index exists to be modified
WITHOUT_CLASSIFICATION	If the table has only one column, it cannot be dropped
WITHOUT_CLASSIFICATION	Set a default primary key name based on the name of the table
WITHOUT_CLASSIFICATION	Adds a foreign key constraint to the source table.
WITHOUT_CLASSIFICATION	only gives the SQL without the Cascade/Restrict Constraint
WITHOUT_CLASSIFICATION	Here we use index inside of column names so that we don't have to alias the columns in the dialect. Different dialects call these sequence information columns by different names. Just make sure to preserve the order in the dialect. last_value max_value min_value cache_value increment_by is_cycled
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select
WITHOUT_CLASSIFICATION	Show the user a dialog with a list of columns and ask them to select
WITHOUT_CLASSIFICATION	If there is only one column in the table,
WITHOUT_CLASSIFICATION	Copys the distinct values from the source column into the lookup table.
WITHOUT_CLASSIFICATION	Creates the lookup table with it's columns (depenting on the mode).
WITHOUT_CLASSIFICATION	getAddForeignKeyConstraintSQL
WITHOUT_CLASSIFICATION	getInsertIntoSQL
WITHOUT_CLASSIFICATION	getColumnNameAlterSQL
WITHOUT_CLASSIFICATION	getUpdateSQL
WITHOUT_CLASSIFICATION	getColumnNullableAlterSQL
WITHOUT_CLASSIFICATION	getColumnDropSQL
WITHOUT_CLASSIFICATION	Add column name to the list
WITHOUT_CLASSIFICATION	No point to ordering less than 2 tables
WITHOUT_CLASSIFICATION	Create the analysis dialog using the EDT, and wait for it to finish.
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Column
WITHOUT_CLASSIFICATION	A Map for quick lookup later - we want to pass TableColumnInfos to the dialect, not merely column names.
WITHOUT_CLASSIFICATION	new Name of the table
WITHOUT_CLASSIFICATION	There are more dependancies then just FKs (like views, etc.), therefore cascadeConstraints is used as a parameter for the TableDropSQL.
WITHOUT_CLASSIFICATION	local constraint
WITHOUT_CLASSIFICATION	Now, get the drop order (same as delete) and update the dialog status while doing so.
WITHOUT_CLASSIFICATION	view list
WITHOUT_CLASSIFICATION	Foreign Key
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	Mode
WITHOUT_CLASSIFICATION	Drop Conflicts
WITHOUT_CLASSIFICATION	"fki_" is default startname
WITHOUT_CLASSIFICATION	add to the button group
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	add to the button group
WITHOUT_CLASSIFICATION	pre-selection
WITHOUT_CLASSIFICATION	pre-selection
WITHOUT_CLASSIFICATION	add to jpanel pane
WITHOUT_CLASSIFICATION	add to the panel - Update
WITHOUT_CLASSIFICATION	add to the panel - Update
WITHOUT_CLASSIFICATION	_columnTab = new MergeColumnDialog.ColumnsTab();
WITHOUT_CLASSIFICATION	private ColumnsTab _columnTab;
WITHOUT_CLASSIFICATION	Increment
WITHOUT_CLASSIFICATION	Name
WITHOUT_CLASSIFICATION	Maximum
WITHOUT_CLASSIFICATION	Last Value
WITHOUT_CLASSIFICATION	Start
WITHOUT_CLASSIFICATION	Minimum
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Table name
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	Schema
WITHOUT_CLASSIFICATION	view list
WITHOUT_CLASSIFICATION	Table
WITHOUT_CLASSIFICATION	Column
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	if the check gets till here we have all the need information
WITHOUT_CLASSIFICATION	local constraint
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	labels should stay put, while user-input fields are allowed to grow as the user desires.
WITHOUT_CLASSIFICATION	Catalog
WITHOUT_CLASSIFICATION	table list
WITHOUT_CLASSIFICATION	just plain data
WITHOUT_CLASSIFICATION	Cascade Constraints Checkbox
WITHOUT_CLASSIFICATION	Cascade Constraints Checkbox
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	some data
WITHOUT_CLASSIFICATION	some data
WITHOUT_CLASSIFICATION	All rules passed, so activate the button
WITHOUT_CLASSIFICATION	adding all Colums together
WITHOUT_CLASSIFICATION	if the check gets till here we have all the needed information
WITHOUT_CLASSIFICATION	all tables except the merge into table
WITHOUT_CLASSIFICATION	all local and columns for the other tables..
WITHOUT_CLASSIFICATION	Column list
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noDeleteSelection=Please select the bookmark to delete]
WITHOUT_CLASSIFICATION	i18n[sessionscript.startupScripts=Startup Scripts]
WITHOUT_CLASSIFICATION	first time user has run pgm.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible Logger for this class
WITHOUT_CLASSIFICATION	sheet types
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's session node. as popup menu
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	line separator for easy using ;-)
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	This should never happen as we check above for the duplicate.
WITHOUT_CLASSIFICATION	IApplication application = getApplication(); application.addToMenu(IMenuIDs.PLUGINS_MENU, getSmarttoolsMenu(getApplication(), null, false));
WITHOUT_CLASSIFICATION	private final int TABLE_COL_DATATYPE = 3; not used
WITHOUT_CLASSIFICATION	tblResult.setAutoCreateRowSorter(true);
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Global errors
WITHOUT_CLASSIFICATION	Misc
WITHOUT_CLASSIFICATION	Entries
WITHOUT_CLASSIFICATION	Tooltips
WITHOUT_CLASSIFICATION	Info
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Thread SEARCHING ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	ThreadSearching
WITHOUT_CLASSIFICATION	init progressbar
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noEditSelection=Please select the bookmark to edit]
WITHOUT_CLASSIFICATION	i18n.LBL_TITLE_USED_TABLES);
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	Labels
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Tooltips and questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	Questions
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Global misc
WITHOUT_CLASSIFICATION	Tooltips
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Table classes ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	Infos
WITHOUT_CLASSIFICATION	create a new bookmark manager
WITHOUT_CLASSIFICATION	rebuild the bookmark menu.
WITHOUT_CLASSIFICATION	this gets called before initialize()
WITHOUT_CLASSIFICATION	i18n[sqlparam.inputParameterValues=Please input the parameter values]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefOk=OK]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.squirrelMarksInPopup=Show SQuirreL bookmarks in ctrl+j popup]
WITHOUT_CLASSIFICATION	i18n[sqlparam.valueFor=Value for {0}]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.script=Script:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noAdd=No text to be added.]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	Rows
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	controlling ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	user checks ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	this gets called before initialize()
WITHOUT_CLASSIFICATION	Load resources such as menu items, etc...
WITHOUT_CLASSIFICATION	Load resources such as menu items, etc...
WITHOUT_CLASSIFICATION	log.info("SQL executed: " + sql);
WITHOUT_CLASSIFICATION	private static final String PREFS_FILE_NAME = "sqlparamprefs.xml";
WITHOUT_CLASSIFICATION	Nothing to do if object tree is opened.
WITHOUT_CLASSIFICATION	log.info("SQL starting to execute: " + sql);
WITHOUT_CLASSIFICATION	Flag indicates changing in textarea
WITHOUT_CLASSIFICATION	Keylistener to indicate changing of text
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Column 0 Row 0
WITHOUT_CLASSIFICATION	Here we do the Replacement
WITHOUT_CLASSIFICATION	old version before multible sesssion windows return session.getSQLPanelAPI(plugin);
WITHOUT_CLASSIFICATION	old version return session.getObjectTreeAPI(sqlScriptPlugin);
WITHOUT_CLASSIFICATION	Move over leading whitespaces
WITHOUT_CLASSIFICATION	Some databases cannot order by LONG/LOB columns.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = _session.getObjectTreeAPI(_plugin);
WITHOUT_CLASSIFICATION	Just a helper to make the fromResultSet ? ... below look nicer.
WITHOUT_CLASSIFICATION	PostgreSQL uses literal values true/false instead of 1/0.
WITHOUT_CLASSIFICATION	Version This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	PostgreSQL uses literal values true/false instead of 1/0.
WITHOUT_CLASSIFICATION	Types.CHAR, Types.VARCHAR, Types.LONGVARCHAR, Types.BINARY, Types.VARBINARY Types.LONGVARBINARY Types.NULL Types.JAVA_OBJECT Types.DISTINCT Types.ARRAY Types.BLOB Types.CLOB Types.REF Types.DATALINK
WITHOUT_CLASSIFICATION	delete last ','
WITHOUT_CLASSIFICATION	close it.
WITHOUT_CLASSIFICATION	As in java.sql.Types
WITHOUT_CLASSIFICATION	This method makes the web service call If you want to you can create a web service proxy from the WSDL file, 9 times out of 10, that's what you really want to do.
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Add the parameter names and types Use the session Id you got from the openSession call here
WITHOUT_CLASSIFICATION	Use the session key you got from the openSession call here
WITHOUT_CLASSIFICATION	The SQL statement to be validated against the standard
WITHOUT_CLASSIFICATION	The format of the result. This must be "text" or "html". Hopefully some type of XML format will be available as well
WITHOUT_CLASSIFICATION	QName l_qn = new QName( "http:sqlvalidator.mimer.com/v1", "ValidatorResult" );
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	Supply the user name. If you use anonymous you will be logged in and the pw will be ignored
WITHOUT_CLASSIFICATION	The pw. If user name is anonymous this can be anything. But it has to be supplied anyway.
WITHOUT_CLASSIFICATION	And the version of the calling program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The target DBMS, could be Mimer SQL Engine, Oracle, ... This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	QName l_qn = new QName( "http:sqlvalidator.mimer.com/v1", "SessionData" );
WITHOUT_CLASSIFICATION	Create self and
WITHOUT_CLASSIFICATION	make a few calls
WITHOUT_CLASSIFICATION	The pw. If user name is anonymous this can be anything. But it has to be supplied anyway.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Set the target server and name space
WITHOUT_CLASSIFICATION	Use the session key you got from the openSession call here
WITHOUT_CLASSIFICATION	The SQL statement to be validated against the standard
WITHOUT_CLASSIFICATION	The format of the result. This must be "text" or "html". Hopefully some type of XML format will be available as well
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	The connection Technology used, could be ODBC, JDBC, ADO This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The version of the target DBMS This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	For testing on the local machine URL l_url = new URL("http:localhost:8081/services");
WITHOUT_CLASSIFICATION	Parameters for call.
WITHOUT_CLASSIFICATION	Version This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	For testing on the live server URL l_url = new URL("http:sqlvalidator.mimer.com/beta2/services");
WITHOUT_CLASSIFICATION	Set this to 1 if your application is interactive where the user enters queries and then runs them Set it to 2 if it is non interactive, such as for instance a JDBC Bridge driver that intercepts SQL
WITHOUT_CLASSIFICATION	Execute validator and return results.
WITHOUT_CLASSIFICATION	Set the url for subsequent calls This is to allow for load balancing to a server on the other side of the world
WITHOUT_CLASSIFICATION	Close existing session.
WITHOUT_CLASSIFICATION	Current version of the validator webservice cannot handle anything greater than 30.
WITHOUT_CLASSIFICATION	Connect.
WITHOUT_CLASSIFICATION	Add menu.
WITHOUT_CLASSIFICATION	Supply the user name. If you use anonymous you will be logged in and the pw will be ignored
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's view and procedure nodes.
WITHOUT_CLASSIFICATION	Set the return type
WITHOUT_CLASSIFICATION	The name of the calling client program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	And the version of the calling program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The target DBMS, could be Mimer SQL Engine, Oracle, ... This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The version of the target DBMS This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	The connection Technology used, could be ODBC, JDBC, ADO This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	Set this to 1 if your application is interactive where the user enters queries and then runs them Set it to 2 if it is non interactive, such as for instance a JDBC Bridge driver that intercepts SQL
WITHOUT_CLASSIFICATION	Add a new formatter for Sybase-Errors/Warnings
WITHOUT_CLASSIFICATION	Open the session.
WITHOUT_CLASSIFICATION	Open connection to the webservice.
WITHOUT_CLASSIFICATION	1 = interactive, 0 = batch
WITHOUT_CLASSIFICATION	/ SybaseASE specific code to read procedure definitions.
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	otApi.addDetailTab(DatabaseObjectType.INDEX, new IndexDetailsTab());
WITHOUT_CLASSIFICATION	plugin supports Session main window only
WITHOUT_CLASSIFICATION	/ Sybase ASE specific code to read view definitions.
WITHOUT_CLASSIFICATION	private boolean _blockCaretEnabled = false;
WITHOUT_CLASSIFICATION	trigger source "SELECT text " + "FROM dbo.sysobjects " + "inner join syscomments on syscomments.id = sysobjects.id " + "where loginame = ? " + "and name = ? " + "and type = 'TR' ";
WITHOUT_CLASSIFICATION	Only reformat SQLWarning:
WITHOUT_CLASSIFICATION	private boolean _showEndOfLineMarkers = false;
WITHOUT_CLASSIFICATION	private boolean _blinkCaret = true;
WITHOUT_CLASSIFICATION	private boolean _bracketHighlighting = true;
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	String CURRENT_LINE_HIGHLIGHTING = "currentLineHighlighting"; String CURRENT_LINE_HIGHLIGHT_COLOR = "currentLineHighlightColor";
WITHOUT_CLASSIFICATION	final TextAreaDefaults dfts = TextAreaDefaults.getDefaults(); _columnStyle = dfts.styles[Token.COLUMN]; _commentStyle = dfts.styles[Token.COMMENT1]; _keyword1Style = dfts.styles[Token.KEYWORD]; _keyword2Style = dfts.styles[Token.DATA_TYPE]; _keyword3Style = dfts.styles[Token.FUNCTION]; _labelStyle = dfts.styles[Token.LABEL]; _literalStyle = dfts.styles[Token.LITERAL1]; _operatorStyle = dfts.styles[Token.OPERATOR]; _otherStyle = dfts.styles[Token.NULL]; _tableStyle = dfts.styles[Token.TABLE];
WITHOUT_CLASSIFICATION	String EOL_MARKERS = "eolMarkers"; String EOL_MARKER_COLOR = "eolMarkerColor";
WITHOUT_CLASSIFICATION	String LINE_NUMBER_COLOR = "lineNumberColor"; String SELECTION_COLOR = "selectionColor"; String SHOW_LINE_NBRS = "showLineNumbers";
WITHOUT_CLASSIFICATION	Note: SessionInternalFrame and SQLinternalFrame should never provide a ToolsPopupAccessor. Their Tools Popup ist configured in the SyntaxPlugin class with standard Actions from ActionCollection.
WITHOUT_CLASSIFICATION	private boolean _currentLineHighlighting = true;
WITHOUT_CLASSIFICATION	i8n[syntax.abrevNewLineNote=Use \n in corrections for line break. Note: Bookmarks are more powerful than abreviations.]
WITHOUT_CLASSIFICATION	private boolean _showLineNumbers = false;
WITHOUT_CLASSIFICATION	private int _caretRGB = Color.red.getRGB(); private int _selectionRGB = 0xccccff; private int _lineHighlightRGB = Color.lightGray.getRGB(); private int _eolMarkerRGB = 0x009999; private int _bracketHighlightRGB = Color.black.getRGB(); private int _lineNumberRGB = Color.black.getRGB();
WITHOUT_CLASSIFICATION	Create the actual panel that will be displayed in dialog.
WITHOUT_CLASSIFICATION	Navy.
WITHOUT_CLASSIFICATION	Folder to store user settings.
WITHOUT_CLASSIFICATION	property file not found for user - first time user ran pgm.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Load plugin preferences.
WITHOUT_CLASSIFICATION	One may ask why we don't register the key strokes permanently. When we did so with two internal frames open, the key stroke event sometimes went to the wrong frame. This doesn't happen if we procede like we do. The question is, why?
WITHOUT_CLASSIFICATION	Install the factory for creating SQL entry text controls.
WITHOUT_CLASSIFICATION	_sqlEntryFactoryProxy = new OsterSQLEntryAreaFactory(this, originalFactory);
WITHOUT_CLASSIFICATION	Not the Textcontrol itself changed but some other of the Syntax Preferences, for example a color. So we tell the current control to update the preferences.
WITHOUT_CLASSIFICATION	We don't support switching the entry control during a sessionbecause serveral things, that are attached to the entry controlfrom outside this plugin would need to reinitialze too.For example code completion and edit extras.synchronized (_session){ISQLEntryPanelFactory factory = _plugin.getSQLEntryAreaFactory();ISQLEntryPanel pnl = factory.createSQLEntryPanel(_session);_session.getSQLPanelAPI(_plugin).installSQLEntryPanel(pnl);}
WITHOUT_CLASSIFICATION	_knownTables is just a cache to prevent creating a new String each time
WITHOUT_CLASSIFICATION	no new here, method is called very often.
WITHOUT_CLASSIFICATION	Suppress warnings for issues that are present in this old release of NetBeans editor libraries we are using.
WITHOUT_CLASSIFICATION	Update java colorings
WITHOUT_CLASSIFICATION	List of the additional colorings
WITHOUT_CLASSIFICATION	ExtCaret highlighting options
WITHOUT_CLASSIFICATION	ExtCaret highlighting colorings
WITHOUT_CLASSIFICATION	Formatting settings
WITHOUT_CLASSIFICATION	new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, MENU_MASK), ExtKit.matchBraceAction), new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_OPEN_BRACKET, MENU_MASK | InputEvent.SHIFT_MASK), ExtKit.selectionMatchBraceAction), new MultiKeyBinding(KeyStroke.getKeyStroke(KeyEvent.VK_F10, InputEvent.SHIFT_MASK), ExtKit.showPopupMenuAction),
WITHOUT_CLASSIFICATION	new MultiKeyBinding( KeyStroke.getKeyStroke(KeyEvent.VK_D, InputEvent.CTRL_MASK), SQLKit.duplicateLineAction),
WITHOUT_CLASSIFICATION	DialogSupport.setDialogFactory(new NbDialogSupport());
WITHOUT_CLASSIFICATION	Once and again the Netbeans editor calls createSyntax() after sessionEnding() was called. Then sess is null and the code below would break.
WITHOUT_CLASSIFICATION	The ctrl enter short cut in the Netbeans editor is set in org.netbeans.editor.ext.BaseKit to the org.netbeans.editor.ext.BaseKit.SplitLineAction. Since the ctrl enter shorcut is a basic SQuirreL short cut and is defined via the main menu action we must remove this binding here.
WITHOUT_CLASSIFICATION	Removed for the SQLBookmark Plugin
WITHOUT_CLASSIFICATION	Removed for the tools popup
WITHOUT_CLASSIFICATION	Reasons for this code mailed to Rob by Gerd on 9/20/2008. the Problem are methods like BaseSQLEntryPanel.getBoundsOfSQLToBeExecuted() BaseSQLEntryPanel.moveCaretToPreviousSQLBegin() They rely on the line break being a single char. Also I suppose some of our code generation (scripting) functions do the same. At least I'm pretty sure if \r\n would be preserved they could produce a mixture of \n and \r\n.
WITHOUT_CLASSIFICATION	I thought this prevented GC. It doesn't But if two Sessions are open and one is closed the one left open looses key bindings. For example the Arrow navigation keys. getKeymap().removeBindings();
WITHOUT_CLASSIFICATION	The SQLSettingsInitializer added above holds a reference to the SyntaxPreferences of the current Session which itself holds a reference to the Session. We remove the SQLSettingsInitializer to give the Session the chance to get Garbage Collected.
WITHOUT_CLASSIFICATION	Internal states inside white space inside line comment inside block comment ... inside string constant inside string constant after backslash inside char constant inside char constant after backslash inside identifier slash char after '=' after '>' after '>>' after '>>>' after '<' after '<<' after '+' after '-' after '' after '' after '|' after '%' after '&' after '^' after '!' after '0' integer number octal number double number double number hex number after '.'
WITHOUT_CLASSIFICATION	With an hanging SessionListener a Session nvere gets Garbage Collected.
WITHOUT_CLASSIFICATION	Example: ALTER TABLE kvpos ADD CONSTRAINT kv_kvpos FOREIGN KEY (kvid) kv(kvid) -------------------------------------------------------------^ ("References" expected) kv will not be marked with the condition above, because errInf.endPos <= absolutePosition + len is never true.
WITHOUT_CLASSIFICATION	public static final String duplicateLineAction = "duplicate-line-action";
WITHOUT_CLASSIFICATION	At this stage there's no more text in the scanned buffer, but this buffer is not the last so the scan will continue on another buffer. The scanner tries to minimize the amount of characters that will be prescanned in the next buffer by returning the token where possible.
WITHOUT_CLASSIFICATION	protected Action[] createActions() { Action[] javaActions = new Action[] { new NetbeansDuplicateLineAction(), }; return TextAction.augmentList(super.createActions(), javaActions); }
WITHOUT_CLASSIFICATION	/ This formula can be found in the API Doc for methode relocate() of class org.netbeans.editor.Syntax. See the description of the last parameter 'stopPosition'. relocate() is always called before the parseTocken() method of this class.
WITHOUT_CLASSIFICATION	nothing found
WITHOUT_CLASSIFICATION	GridLayout makes equal cells
WITHOUT_CLASSIFICATION	ISession[] activeSessions = _plugin.getApplication().getSessionManager().getActiveSessions();
WITHOUT_CLASSIFICATION	Data type keyword numeric-ids
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	create the dialog with given content
WITHOUT_CLASSIFICATION	redirect the Esc key to Cancel button
WITHOUT_CLASSIFICATION	Add the buttons to it
WITHOUT_CLASSIFICATION	this didn't work final int pos = getCaretPosition(); final Document doc = _textArea.getStyledDocument(); final Element docElem = doc.getDefaultRootElement(); final Element lineElem = docElem.getElement(getCaretLineNumber()); return lineElem.getElementIndex(pos);
WITHOUT_CLASSIFICATION	add listener to buttons
WITHOUT_CLASSIFICATION	listen on windowClosing and redirect it to Cancel button
WITHOUT_CLASSIFICATION	register the default button, if available
WITHOUT_CLASSIFICATION	Void type keyword numeric-id
WITHOUT_CLASSIFICATION	register the cancel button helpers, if available
WITHOUT_CLASSIFICATION	See SQLSettingsInitializer to find out how fonts are handled in the Netbeans editor. _textArea.setFont(font);
WITHOUT_CLASSIFICATION	Token category-ids
WITHOUT_CLASSIFICATION	Other keywords numeric-ids
WITHOUT_CLASSIFICATION	Numeric-ids for token-ids
WITHOUT_CLASSIFICATION	Operator numeric-ids = < > << >> >>> + - / & | ^ % ! ~ == <= >= <<= >>= >>>= += -= = /= &= |= ^= %= != . , : ; ? ( ) [ ] { } ++ -- && ||
WITHOUT_CLASSIFICATION	Incomplete tokens
WITHOUT_CLASSIFICATION	JDK1.5 vararg's "..."
WITHOUT_CLASSIFICATION	Token-categories
WITHOUT_CLASSIFICATION	Token-ids
WITHOUT_CLASSIFICATION	Operators
WITHOUT_CLASSIFICATION	Data types
WITHOUT_CLASSIFICATION	Void type
WITHOUT_CLASSIFICATION	Rest of the keywords
WITHOUT_CLASSIFICATION	JDK1.5 vararg's "..."
WITHOUT_CLASSIFICATION	Incomplete and error token-ids
WITHOUT_CLASSIFICATION	Context instance declaration
WITHOUT_CLASSIFICATION	case SQLTokenContext.ANNOTATION_ID: JDK 1.5 annotations return new Coloring(null, new Color(0, 111, 0), null);
WITHOUT_CLASSIFICATION	printing set
WITHOUT_CLASSIFICATION	print fore color will be gray
WITHOUT_CLASSIFICATION	We do abrevs ourselfs in the DocumentListener in NetbeansSQLEntryPanel. We don't use the Netbeans implementation mainly because it is case sensitive. If we come across a performance problem one day we can still try to use this.
WITHOUT_CLASSIFICATION	Hashtable autoCorrects = plugin.getAutoCorrectProviderImpl().getAutoCorrects(); javaAbbrevMap.putAll(autoCorrects);
WITHOUT_CLASSIFICATION	Start the thread that does the coloring
WITHOUT_CLASSIFICATION	Set up the hash table that contains the styles.
WITHOUT_CLASSIFICATION	create the new document.
WITHOUT_CLASSIFICATION	Put the initial text into the text pane and set it's initial coloring style.
WITHOUT_CLASSIFICATION	This stops the text control from line wrapping.
WITHOUT_CLASSIFICATION	Color.maroon
WITHOUT_CLASSIFICATION	Color.maroon
WITHOUT_CLASSIFICATION	if we just finish, we can't go to sleep until we ensure there is nothing else for us to do. use try again to keep track of this.
WITHOUT_CLASSIFICATION	forever
WITHOUT_CLASSIFICATION	Only if the text did really changed (null != re.change) Intervals must be adjusted. If the text did not change there is nothing to adjust.
WITHOUT_CLASSIFICATION	we are playing some games with the lexer for efficiency. we could just create a new lexer each time here, but instead, we will just reset it so that it thinks it is starting at the beginning of the document but reporting a funny start colorStartPos. Reseting the lexer causes the close() method on the reader to be called but because the close() method has no effect on the DocumentReader, we can do this.
WITHOUT_CLASSIFICATION	After the lexer has been set up, scroll the reader so that it is in the correct spot as well.
WITHOUT_CLASSIFICATION	this is the actual command that colors the stuff. Color stuff with the description of the style matched to the hash table that has been set up ahead of time.
WITHOUT_CLASSIFICATION	record the colorStartPos of the last bit of text that we colored
WITHOUT_CLASSIFICATION	The Interval is involved even if pos lied one point before or after the interval. This way for example we get -- Select ... out of comment coloring when the first "-" is removed.
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	The Ostermiller SQLLexer crashes with an ArrayIndexOutOfBoundsException if the char is greater then 255. So we prevent the char from being greater. This is surely not a proper Unicode treatment but it doesn't seem to do no harm and it keeps the SQLLexer working.
WITHOUT_CLASSIFICATION	we will highlight tokens until we reach a good stopping place. the first obvious stopping place is the end of the document. the lexer will return null at the end of the document and wee need to stop there.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = m_session.getObjectTreeAPI(m_plugin);
WITHOUT_CLASSIFICATION	since we did something, we should check that there is nothing else to do before going back to sleep.
WITHOUT_CLASSIFICATION	TODO: columns, tables
WITHOUT_CLASSIFICATION	Though in API-Doc they say setCharacterAttributes() is thread save we received observed java.lang.Errors from Swing as well as dead locks. That's why we do changes synchron now.
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = m_session.getObjectTreeAPI(m_plugin);
WITHOUT_CLASSIFICATION	synchronized (doclock) {
WITHOUT_CLASSIFICATION	synchronized (doclock) {
WITHOUT_CLASSIFICATION	TODO:setFont(style.createStyledFont(getFont()));
WITHOUT_CLASSIFICATION	m_session.getSQLPanelAPI(m_plugin).addToSQLEntryAreaMenu(actSql);
WITHOUT_CLASSIFICATION	_session.getSQLPanelAPI(_plugin)
WITHOUT_CLASSIFICATION	IObjectTreeAPI api = session.getObjectTreeAPI(this);
WITHOUT_CLASSIFICATION	targetType == TARGET_TYPE_SQL
WITHOUT_CLASSIFICATION	Dialog is shown only when it is written to.
WITHOUT_CLASSIFICATION	String sql = m_session.getSQLPanelAPI(m_plugin).getSQLScriptToBeExecuted();
WITHOUT_CLASSIFICATION	ScriptEnvironment env = new ScriptEnvironment(m_session.getSQLPanelAPI(m_plugin), ownerFrame);
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName, String tableType, String remarks,
WITHOUT_CLASSIFICATION	/ Setting the model initializes columns. We want to initialize the columns ourselves below.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	TABLENAME
WITHOUT_CLASSIFICATION	create the threads
WITHOUT_CLASSIFICATION	start the threads
WITHOUT_CLASSIFICATION	join with the threads
WITHOUT_CLASSIFICATION	The following gives java.sql.SQLException: Conversion to character stream failed
WITHOUT_CLASSIFICATION	"Other" types are treated as Strings internally in SQuirreL.
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	this is expected
WITHOUT_CLASSIFICATION	String catalog, String schema, String simpleName
WITHOUT_CLASSIFICATION	utilUnderTest = ;
WITHOUT_CLASSIFICATION	utilUnderTest = null;
WITHOUT_CLASSIFICATION	String path = "/downloads/";
WITHOUT_CLASSIFICATION	UpdateUtil util = new UpdateUtilImpl();
WITHOUT_CLASSIFICATION	String path = "/release/snapshot/";
WITHOUT_CLASSIFICATION	two columns to represent a Primary key in the pktest table
WITHOUT_CLASSIFICATION	this is the constraint that is dropped in drop constraint test
WITHOUT_CLASSIFICATION	this is the column on which the constraint to be dropped is defined
WITHOUT_CLASSIFICATION	Mocks for generic dialect test
WITHOUT_CLASSIFICATION	private DatabaseMetaData mockGenericDialectDBMetaData = mockHelper.createMock(DatabaseMetaData.class);
WITHOUT_CLASSIFICATION	For some reason, Frontbase doesn't find tables that have been previously created.
WITHOUT_CLASSIFICATION	quiet
WITHOUT_CLASSIFICATION	views will depend on tables, so drop them first
WITHOUT_CLASSIFICATION	Now sequences should go.
WITHOUT_CLASSIFICATION	alterations fail for some reason unless you do this...
WITHOUT_CLASSIFICATION	MySQL spatial index requires a not null column
WITHOUT_CLASSIFICATION	DB2 requires primary keys to also be declared "not null"
WITHOUT_CLASSIFICATION	DB2 cannot alter a column's null attribute directly (only through constraints). Not only that, but it's apparently not a valid thing to do to create a primary key using a column that has been made "not null" via a check constraint. Therefore, the only columns that qualify to be made PKs are those that were declared not null at the time of table creation.
WITHOUT_CLASSIFICATION	Test whether or not the dialect correctly converts nullable columns to not-null before applying the primary key - if necessary
WITHOUT_CLASSIFICATION	Don't care if it's not there
WITHOUT_CLASSIFICATION	This is what we expect
WITHOUT_CLASSIFICATION	convert nullint into a varchar(100)
WITHOUT_CLASSIFICATION	This is what we expect.
WITHOUT_CLASSIFICATION	Couldn't locate the table - just try to fake it.
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	This is expected
WITHOUT_CLASSIFICATION	Now that we have run the view definition query, and retrieved the SQL that is the body of the view (that is, it's query part minus the "CREATE VIEW AS" prefix), we can drop the view.
WITHOUT_CLASSIFICATION	create a table with a default value to use as the model
WITHOUT_CLASSIFICATION	Test the create statement
WITHOUT_CLASSIFICATION	Build the sql statement(s) to create the table
WITHOUT_CLASSIFICATION	System.err.println("("+extractor.getClass().getSimpleName()+"):The SQL generated by " + referenceDialect.getDisplayName() + " works !!!");
WITHOUT_CLASSIFICATION	drop the table so that we can test our create statement
WITHOUT_CLASSIFICATION	create a test view that we will get view def for then drop and re-create
WITHOUT_CLASSIFICATION	Postgres has some special indexes that only work on certain columns. Skip tests for those
WITHOUT_CLASSIFICATION	viewDefSql is the SQL that can be used to query the data dictionary for the body of a view. This should exclude the "CREATE VIEW <viewname> AS" prefix and just return the query.
WITHOUT_CLASSIFICATION	create a unique index on myuniquechar
WITHOUT_CLASSIFICATION	now drop the first
WITHOUT_CLASSIFICATION	create a non-unique index on mychar
WITHOUT_CLASSIFICATION	now drop the second.
WITHOUT_CLASSIFICATION	create it.
WITHOUT_CLASSIFICATION	create it.
WITHOUT_CLASSIFICATION	Axion cannot handle ts escape sequence - so skip this test for now.
WITHOUT_CLASSIFICATION	Progress throws an exception if you try to drop the first index that was created
WITHOUT_CLASSIFICATION	Verify insert worked only if the dialect supports sub-second timestamp values
WITHOUT_CLASSIFICATION	Unused methods - this is not a real dialog, just a fake.
WITHOUT_CLASSIFICATION	Utility methods
WITHOUT_CLASSIFICATION	MS SQLServer yields "Conversion failed when converting datetime from character string" for {ts '2008-02-21 21:26:23.966123'}
WITHOUT_CLASSIFICATION	System.err.println("Attempt to use dialect sql from " + referenceDialect.getDisplayName() + " failed: " + e2.getMessage());
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType typeName columnSize decimalDigits radix isNullAllowed remarks defaultValue octet length ordinal position isNullable
WITHOUT_CLASSIFICATION	tableName, columns, pkColumns, prefs, qualifier
WITHOUT_CLASSIFICATION	mocks
WITHOUT_CLASSIFICATION	Helpers
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	System.err.println("MockApplication.getMainFrame: stub not yet implemented");
WITHOUT_CLASSIFICATION	MockConnection2 mockCon = getMockConnection();
WITHOUT_CLASSIFICATION	sessionPanel = new SessionPanel(this);
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedHigh()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#getSchemaInfo()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISession#getMetaData()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getCatalogName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getDatabaseObjectType()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getQualifiedName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getSchemaName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo#getSimpleName()
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	fail("Not yet implemented");
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	mockSession
WITHOUT_CLASSIFICATION	mockSession
WITHOUT_CLASSIFICATION	mockPreferences
WITHOUT_CLASSIFICATION	mockSessionProperties
WITHOUT_CLASSIFICATION	mockFontInfo
WITHOUT_CLASSIFICATION	mockApplication
WITHOUT_CLASSIFICATION	mockSquirrelResources
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	Other tests
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	Simulate the user changing the session properties
WITHOUT_CLASSIFICATION	QueryTokenizer tests
WITHOUT_CLASSIFICATION	This should be a default tokenizer which uses ";" as statement sep
WITHOUT_CLASSIFICATION	This should override the default tokenizer
WITHOUT_CLASSIFICATION	Check to ensure that the tokenizer received is not the default one that should have been overridden.
WITHOUT_CLASSIFICATION	Simulate the user switching the statement separator for the session
WITHOUT_CLASSIFICATION	Test to ensure that we allow sessions that are ending to be GC'd.
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	We don't stub return because we want to verify that the object filter was actually used.
WITHOUT_CLASSIFICATION	Should at least bind the tablename to a bind var in the SQL
WITHOUT_CLASSIFICATION	common mocks
WITHOUT_CLASSIFICATION	Test Data
WITHOUT_CLASSIFICATION	mockSessionManager
WITHOUT_CLASSIFICATION	mockSQLConnection
WITHOUT_CLASSIFICATION	mockSQLMetaData
WITHOUT_CLASSIFICATION	mockSchemaInfo
WITHOUT_CLASSIFICATION	mockThreadPool
WITHOUT_CLASSIFICATION	mockConnection
WITHOUT_CLASSIFICATION	mockSQLDriver
WITHOUT_CLASSIFICATION	mockDatabaseObjectInfo
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Test to see that table(100) matches table(0). It should since only the row count is different.
WITHOUT_CLASSIFICATION	Test to see if we can fool matchKeyPrefix into assuming that there will be '(' on the end of the path since row count is enabled. Yet we'll send in a string that doesn't have this characteristic.
WITHOUT_CLASSIFICATION	Pick a tableInfo to remove and replace
WITHOUT_CLASSIFICATION	remove table with name table10
WITHOUT_CLASSIFICATION	Add it back
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	setup expectations
WITHOUT_CLASSIFICATION	setup expectations
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	create mocks to be injected
WITHOUT_CLASSIFICATION	inject mocks
WITHOUT_CLASSIFICATION	common expectations
WITHOUT_CLASSIFICATION	downloads directory
WITHOUT_CLASSIFICATION	downloads/plugin directory
WITHOUT_CLASSIFICATION	squirrel installed lib dir
WITHOUT_CLASSIFICATION	downloads/core directory
WITHOUT_CLASSIFICATION	setup source mock file
WITHOUT_CLASSIFICATION	setup dest mock file
WITHOUT_CLASSIFICATION	Cannot mock URLs, they are final and so they cannot be subclassed.
WITHOUT_CLASSIFICATION	Class to test
WITHOUT_CLASSIFICATION	Common mock objects
WITHOUT_CLASSIFICATION	Common mock objects
WITHOUT_CLASSIFICATION	This is acceptable
WITHOUT_CLASSIFICATION	This is acceptable
WITHOUT_CLASSIFICATION	ArtifactXmlBean
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	For the serialization test in superclass - cannot use mockHelper because the replay needs to be done here.
WITHOUT_CLASSIFICATION	original object another object that has the same values as the original another object with different values
WITHOUT_CLASSIFICATION	a subclass of Foo with the same values as the original
WITHOUT_CLASSIFICATION	different only by type - same name
WITHOUT_CLASSIFICATION	Test Constants
WITHOUT_CLASSIFICATION	expect getFile for updated files that will be removed
WITHOUT_CLASSIFICATION	expect getFile for updated files that were downloaded
WITHOUT_CLASSIFICATION	expected fileOperationInfos for files that will be installed
WITHOUT_CLASSIFICATION	expectations that are specific to this test
WITHOUT_CLASSIFICATION	Failure Tests
WITHOUT_CLASSIFICATION	Helper Methods
WITHOUT_CLASSIFICATION	Check reference equality to be sure that it isn't the exact same object.
WITHOUT_CLASSIFICATION	private TableColumnsDataSet iut = null;
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Helpers
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	a subclass of Foo with the same values as the original
WITHOUT_CLASSIFICATION	"Unknown" types are treated as Strings internally in SQuirreL.
WITHOUT_CLASSIFICATION	not necessarily the case - I'm just curious if we have any components that need to be re-read
WITHOUT_CLASSIFICATION	1757076 (DATE column seen as TIMESTAMP, update in editable mode fails) We should always return false for this, when the user hasn't specified
WITHOUT_CLASSIFICATION	Cannot pass byte array to Class.forName
WITHOUT_CLASSIFICATION	Not a real database, but no driver should match this.
WITHOUT_CLASSIFICATION	Some dialects support adding columns, but the logic has not been added yet to the dialect. If that is the case the message is "Not yet implemented" - fail for all other messages.
WITHOUT_CLASSIFICATION	Tests
WITHOUT_CLASSIFICATION	Here the max line length == original line size - so it doesn't get trimmed of white space.
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	The first time that schemas are asked for, return just one
WITHOUT_CLASSIFICATION	The second time that schemas are asked for, return two
WITHOUT_CLASSIFICATION	Check to be sure we get only one schema
WITHOUT_CLASSIFICATION	Check to be sure we get only one schema
WITHOUT_CLASSIFICATION	Now, check to be sure we get both schemas.
WITHOUT_CLASSIFICATION	The first time that catalogs are asked for, return just one
WITHOUT_CLASSIFICATION	The second time that catalogs are asked for, return two
WITHOUT_CLASSIFICATION	Now, check to be sure we get both catalogs.
WITHOUT_CLASSIFICATION	Build the table types returned by PostgreSQL
WITHOUT_CLASSIFICATION	scope
WITHOUT_CLASSIFICATION	typeName
WITHOUT_CLASSIFICATION	int precision
WITHOUT_CLASSIFICATION	short scale
WITHOUT_CLASSIFICATION	short pseudocolumn
WITHOUT_CLASSIFICATION	Setup values.length columns
WITHOUT_CLASSIFICATION	Setup one row
WITHOUT_CLASSIFICATION	Setup one column in multiple rows
WITHOUT_CLASSIFICATION	Mocks
WITHOUT_CLASSIFICATION	Test case for 1742033 (Skipping quoting escape in table dropping)
WITHOUT_CLASSIFICATION	original object
WITHOUT_CLASSIFICATION	another object that has the same values as the original
WITHOUT_CLASSIFICATION	another object with different values
WITHOUT_CLASSIFICATION	Don't forget to set this to the number of statements in result
WITHOUT_CLASSIFICATION	Class under test
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	expected
WITHOUT_CLASSIFICATION	column name sqlType
WITHOUT_CLASSIFICATION	Sybase 12.5 doesn't support quotation marks for identifiers, yet reports " as the identifier quote string - go figure!
WITHOUT_CLASSIFICATION	Sybase 15 fully supports quotation marks for identifiers, and reports " as the identifier quote string - yeah, they got it right!
WITHOUT_CLASSIFICATION	Since catalog, schema and table are all identifiers, they all need to be quoted.
WITHOUT_CLASSIFICATION	construct mock objects
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	execute test
WITHOUT_CLASSIFICATION	Constructor Tests
WITHOUT_CLASSIFICATION	Method Tests
WITHOUT_CLASSIFICATION	fail ??
WITHOUT_CLASSIFICATION	fail ??
WITHOUT_CLASSIFICATION	HELPERS
WITHOUT_CLASSIFICATION	construct the name of executable file
WITHOUT_CLASSIFICATION	add classpath string
WITHOUT_CLASSIFICATION	parse hy.test.vmargs if was given
WITHOUT_CLASSIFICATION	add custom args given as parameter
WITHOUT_CLASSIFICATION	execute java process
WITHOUT_CLASSIFICATION	wait for errThread to start
WITHOUT_CLASSIFICATION	" a read "
WITHOUT_CLASSIFICATION	This should just produce an error message.
WITHOUT_CLASSIFICATION	Delete all old temporary files
WITHOUT_CLASSIFICATION	Regression test for HARMONY-382
WITHOUT_CLASSIFICATION	Regression test for HARMONY-21
WITHOUT_CLASSIFICATION	Test data used in a few places below
WITHOUT_CLASSIFICATION	Check filename is preserved correctly
WITHOUT_CLASSIFICATION	Check null argument is handled
WITHOUT_CLASSIFICATION	Expected.
WITHOUT_CLASSIFICATION	Regression for HARMONY-46
WITHOUT_CLASSIFICATION	a valid File URI
WITHOUT_CLASSIFICATION	canRead only returns if the file exists so cannot be fully tested.
WITHOUT_CLASSIFICATION	canWrite only returns if the file exists so cannot be fully tested.
WITHOUT_CLASSIFICATION	Test for trying to create a file in a directory that does not exist.
WITHOUT_CLASSIFICATION	Try to create a file in a directory that does not exist
WITHOUT_CLASSIFICATION	Try to create a file in a directory that does not exist
WITHOUT_CLASSIFICATION	Test for creating a file that already exists.
WITHOUT_CLASSIFICATION	Test create an illegal file
WITHOUT_CLASSIFICATION	expected;
WITHOUT_CLASSIFICATION	expected;
WITHOUT_CLASSIFICATION	Error protection against using a suffix without a "."?
WITHOUT_CLASSIFICATION	Test to see if correct suffix was used to create the tempfile.
WITHOUT_CLASSIFICATION	Testing two files, one with suffix ".tmp" and one with null
WITHOUT_CLASSIFICATION	Tests for creating a tempfile with a filename shorter than 3 characters.
WITHOUT_CLASSIFICATION	Test to make sure that the tempfile was saved in the correct location and with the correct prefix/suffix.
WITHOUT_CLASSIFICATION	Test for creating a tempfile in a directory that does not exist.
WITHOUT_CLASSIFICATION	Set dir to a non-existent directory inside the temporary directory
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	create the file
WITHOUT_CLASSIFICATION	Test for when long directory/file names in Windows
WITHOUT_CLASSIFICATION	If the "short file name" doesn't exist, then assume that the 8.3 file name compatibility is disabled.
WITHOUT_CLASSIFICATION	Should work for Unix/Windows.
WITHOUT_CLASSIFICATION	Finding a non-existent directory for tests 3 and 4 This is necessary because getCanonicalPath is case sensitive and could cause a failure in the test if the directory exists but with different case letters (e.g "Temp" and "temp")
WITHOUT_CLASSIFICATION	Test for long file names on Windows
WITHOUT_CLASSIFICATION	Regression for HARMONY-444
WITHOUT_CLASSIFICATION	Regression for HARMONY-829
WITHOUT_CLASSIFICATION	Regression for HARMONY-3869
WITHOUT_CLASSIFICATION	Regression for HARMONY-53
WITHOUT_CLASSIFICATION	One or the other should be absolute on Windows or CE
WITHOUT_CLASSIFICATION	On Unix hidden files are marked with a "." at the beginning of the file name.
WITHOUT_CLASSIFICATION	For windows, the file is being set hidden by the attrib command.
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Test for attempting to call listFiles on a non-existent directory.
WITHOUT_CLASSIFICATION	Test to make sure that listFiles can read hidden files.
WITHOUT_CLASSIFICATION	Creating a filter that catches directories.
WITHOUT_CLASSIFICATION	testBitColType(sourceName, destName);
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	Finding a non-existent directory to create.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Test to make sure that only the 3 files that were created are listed.
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	Creating a filter that catches files.
WITHOUT_CLASSIFICATION	Test to see if the correct number of directories are returned.
WITHOUT_CLASSIFICATION	Test to see if the directory was saved with the correct name.
WITHOUT_CLASSIFICATION	Test to see if the correct number of files are returned.
WITHOUT_CLASSIFICATION	Creating a filter that catches ".tst" files.
WITHOUT_CLASSIFICATION	Creating a filter that catches ".tmp" files.
WITHOUT_CLASSIFICATION	If the suffix is ".tmp" then send it to the array
WITHOUT_CLASSIFICATION	Tests to see if the correct number of files were returned.
WITHOUT_CLASSIFICATION	24 chars
WITHOUT_CLASSIFICATION	Test make a long path
WITHOUT_CLASSIFICATION	Test make many paths
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3656
WITHOUT_CLASSIFICATION	in case it already exists
WITHOUT_CLASSIFICATION	in case it already exists
WITHOUT_CLASSIFICATION	Subtracting 100 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Subtracting 10 000 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Adding 100 000 milliseconds to the orgTime of File f1
WITHOUT_CLASSIFICATION	Adding 10 000 000 milliseconds from the orgTime of File f1
WITHOUT_CLASSIFICATION	Trying to set time to an exact number
WITHOUT_CLASSIFICATION	Trying to set time to a large exact number
WITHOUT_CLASSIFICATION	Trying to set time to a negative number
WITHOUT_CLASSIFICATION	Attempt to write to a file that is setReadOnly.
WITHOUT_CLASSIFICATION	Write to a file.
WITHOUT_CLASSIFICATION	Similarly, trying to delete a read-only directory should succeed
WITHOUT_CLASSIFICATION	Need a directory that exists
WITHOUT_CLASSIFICATION	Test for toURI when the file is a directory.
WITHOUT_CLASSIFICATION	Test for toURI with a file name with illegal chars.
WITHOUT_CLASSIFICATION	Test for toURL when the file is a directory.
WITHOUT_CLASSIFICATION	Test for toURL with a file.
WITHOUT_CLASSIFICATION	Regression test for HARMONY-4493
WITHOUT_CLASSIFICATION	No invalid columns in this TableModel implementation
WITHOUT_CLASSIFICATION	Don't care to see tons of debug from ColTypeMapper
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Set To ReadOnly." , f1.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Not Set To ReadOnly." , !f1.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f2 Is Set To ReadOnly." , f2.canWrite());
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f2 Is Not Set To ReadOnly." , !f2.canWrite());
WITHOUT_CLASSIFICATION	Attempt to write to a file that has previously been written to. and is now set to read only.
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3207 current directory
WITHOUT_CLASSIFICATION	Regression test for HARMONY-3207 current directory
WITHOUT_CLASSIFICATION	testBooleanColType(sourceName, destName); testCharColType(sourceName, destName);
WITHOUT_CLASSIFICATION	testDecimalColType(sourceName, destName); testDoubleColType(sourceName, destName); testFloatColType(sourceName, destName);
WITHOUT_CLASSIFICATION	This is for brute force detection of columns whose column size is 0
WITHOUT_CLASSIFICATION	This is for brute force detection of BLOB/CLOB lengths if necessary
WITHOUT_CLASSIFICATION	This is for brute force detection of BLOB/CLOB lengths if necessary
WITHOUT_CLASSIFICATION	Test for NPE in DBUtil.getForeignKeySQL when the TableInfo returns null for getImportedKeys
WITHOUT_CLASSIFICATION	case shouldn't be changed in this test because the context is the source database.
WITHOUT_CLASSIFICATION	Instance under test
WITHOUT_CLASSIFICATION	init class under test
WITHOUT_CLASSIFICATION	init mocks
WITHOUT_CLASSIFICATION	setColumns Error conditions
WITHOUT_CLASSIFICATION	Sunny day
WITHOUT_CLASSIFICATION	Create a test bean to clone
WITHOUT_CLASSIFICATION	Create a test bean to clone
WITHOUT_CLASSIFICATION	Clone the test bean and change every bean property
WITHOUT_CLASSIFICATION	Clone the test bean and change every bean property
WITHOUT_CLASSIFICATION	verify that changing the clone didn't affect the original
WITHOUT_CLASSIFICATION	verify that changing the clone didn't affect the original
WITHOUT_CLASSIFICATION	Call class under test
WITHOUT_CLASSIFICATION	Common mocks
WITHOUT_CLASSIFICATION	we cannot mock DTProperties because it is designed to be accessed statically. :( Simulate missing property.
WITHOUT_CLASSIFICATION	Accessible query
WITHOUT_CLASSIFICATION	SGA query
WITHOUT_CLASSIFICATION	expect(session.getMessageHandler()).andReturn(messageHandler).anyTimes();
WITHOUT_CLASSIFICATION	an interface
WITHOUT_CLASSIFICATION	a class
WITHOUT_CLASSIFICATION	i18n[Application.error.loadcellselections=Unable to load Cell Import/Export selections from persistant storage.]
WITHOUT_CLASSIFICATION	_mainFrame.setVisible(true); _mainFrame.toFront(); Required on Linux
WITHOUT_CLASSIFICATION	i18n[Application.error.loaddatatypeprops=Unable to load DataType Properties selections from persistant storage.]
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	set the singleton instance of the Saver class to be the instance just created by the XMLBeanReader
WITHOUT_CLASSIFICATION	For all windows (other than the first one opened) for a session add a number on the end of the title to differentiate them in menus etc.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	final Map map = getAllEditWhereColsSheets(tree); return (EditWhereColsSheet)map.get(objectInfo.getQualifiedName());
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up. _aliasesListWindow.nowVisible(true);
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up. _aliasesListWindow.nowVisible(false);
WITHOUT_CLASSIFICATION	If the active window isn't for the currently selected session then select the main window for the session.
WITHOUT_CLASSIFICATION	We are in the closing event of the Session main window. We don't want to send this event again therefore we pass withEvents = false.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	add(_okBtn); add(_closeBtn);
WITHOUT_CLASSIFICATION	Ok button at bottom of dialog. JPanel btnsPnl = new JPanel(); JButton okBtn = new JButton("OK");
WITHOUT_CLASSIFICATION	Get list of all plugin developers names. Allow for multiple developers for a plugin in the form "John Smith, James Brown".
WITHOUT_CLASSIFICATION	_thread = new Thread(new MemoryTimer()); _thread.start();
WITHOUT_CLASSIFICATION	typeName columnSize decimalDigits radix isNullAllowable
WITHOUT_CLASSIFICATION	defaultValue octetLength ordinalPosition isNullable
WITHOUT_CLASSIFICATION	EasyMock Class extension helpers. Since classextension and interface EasyMock methods cannot be used on the same mocks, this provides convenience to not have to specify the package name for classextension mocks.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	parent.addInternalFrame(viewer, true, null); GUIUtils.centerWithinDesktop(viewer);
WITHOUT_CLASSIFICATION	Done after the set of the selected item above so that we control when the initial build is done. We want to make sure that under all versions of the JDK that the window is shown before the (possibly lengthy) refresh starts.
WITHOUT_CLASSIFICATION	private static final class CellRenderer extends BasicComboBoxRenderer { public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) { setText(((TableColumnInfo)value).getColumnName()); return this; } }
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.invalidUrl=According to the driver "{0}", the url "{1}" is invalid.]
WITHOUT_CLASSIFICATION	If no columns are selected, and we're not dropping the PK, then there is nothing to do.
WITHOUT_CLASSIFICATION	alias.setUseDriverProperties(_useDriverPropsChk.isSelected()); alias.setDriverProperties(_sqlDriverProps);
WITHOUT_CLASSIFICATION	If Auto Logon is true in ConnectToAliasCommand user name/password of the Alias definiton may have changed. Here we transfere this information back into the controls.
WITHOUT_CLASSIFICATION	If this happens then this is a programming error as we said in the above call to ingore these errors.
WITHOUT_CLASSIFICATION	Scrollbars are "shown always" to stop sheet resizing when they are shown/hidden.
WITHOUT_CLASSIFICATION	Use valueof when min supported JDK is 1.4 return Boolean.valueOf(_props[row].required);
WITHOUT_CLASSIFICATION	return Boolean.class; Don't show checkbox for output only field.
WITHOUT_CLASSIFICATION	JInternalFrame[] frames = GUIUtils.getOpenNonToolWindows(getDesktopPane().getAllFrames()); _app.getActionCollection().internalFrameOpenedOrClosed(frames.length);
WITHOUT_CLASSIFICATION	_inWidgetSetVisible was introduced to allow moveToFront to be called from within setVisible. See EditWhereColsSheet or SQLFilterSheet
WITHOUT_CLASSIFICATION	Is done in dispose itself because listeners must be fired even in DO_NOTHING_ON_CLOSE mode tabHandle.fireClosed(e); /
WITHOUT_CLASSIFICATION	we can have more than one file in the string so tokenize on whitespace. Let the user know if we find multiple tokens that they cannot place drop than one file at a time
WITHOUT_CLASSIFICATION	private AliasesListInternalFrame _aliasesListWindow; private DriversListInternalFrame _driversListWindow;
WITHOUT_CLASSIFICATION	Under JDK1.4 the first item in a JComboBox is no longer automatically selected.
WITHOUT_CLASSIFICATION	Under JDK1.4 the first item in a JComboBox is no longer automatically selected.
WITHOUT_CLASSIFICATION	Done this late so that plugins have time to register expanders with the object tree prior to it being built. getSession().getObjectTreeAPI(_app.getDummyAppPlugin()).refreshTree();
WITHOUT_CLASSIFICATION	Done this late so that plugins have time to register expanders with the object tree prior to it being built.
WITHOUT_CLASSIFICATION	This seems to be necessary to get background colours correct. Without it labels added to the content pane have a dark background while those added to a JPanel in the content pane have a light background under the java look and feel. Similar effects occur for other look and feels.
WITHOUT_CLASSIFICATION	If the user checked Auto Logon but gave wrong username/password in the Alias definition. He will be asked to enter username/password again in an extra dialog. Here for convenience we transfer these data back into the Alias. Note: Don't do this when Auto Logon is false.
WITHOUT_CLASSIFICATION	if blocked that means that it doesn't help anymore Or an error dialog is shown or the connection is made and the SessionFrame is being constructed/shown.
WITHOUT_CLASSIFICATION	/ Message
WITHOUT_CLASSIFICATION	We need this in order to allow the user to see this plugin - which isn't loaded - in the plugin summary dialog, so that they can enable it.
WITHOUT_CLASSIFICATION	if the old preference file exists and is newer than the newUserPreference file, then use it for reading preferences
WITHOUT_CLASSIFICATION	private JLabel _executionLogFileNameLbl = new OutputLabel(" "); Must have at least 1 blank otherwise width gets set to zero. private JLabel _logConfigFileNameLbl = new OutputLabel(" "); Must have at least 1 blank otherwise width gets set to zero.
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	We need this method to satisfy one of the Interfaces we implement, but since we have moved all operations to the DataType sub-panels which initialize their own data during creation, there is nothing for us to do here
WITHOUT_CLASSIFICATION	Get an array since we dont want trouble with the sessionsList when we remove the sessions from it.
WITHOUT_CLASSIFICATION	give the ResultSetReader some time to realize that the user requested cancel and stop fetching results. This allows us to stop the query processing gracefully.
WITHOUT_CLASSIFICATION	public SQLExecutionInfo() { this(1, ""); }
WITHOUT_CLASSIFICATION	/ Error Attention: Do not use background colors here. Color blind people cannot read black writing on red background.
WITHOUT_CLASSIFICATION	/ Checks if the former message should be highlighted in a 'history' color.
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	Since 1.4 implements interfaces that became available in JDBC 3.0, let's warn the user if the driver doesn't support DatabaseMetaData methods that were added in JDBC 2.1 and JDBC 3.0 specifications.
WITHOUT_CLASSIFICATION	No tokenizer has been set by any installed plugin. Go ahead and give the default tokenizer. It is important to not cache this object so that session property changes to the current session are reflected in this default tokenizer.
WITHOUT_CLASSIFICATION	public SQLFilterClauses getSQLFilterClauses() { return _sqlFilterClauses; }
WITHOUT_CLASSIFICATION	if the user selected Editable Table in the Session Properties, then the display will be an editable table; otherwise the display is read-only
WITHOUT_CLASSIFICATION	It is possible for a table to contain only columns of types that we cannot process or do selects on, so check for that. Since this check is on the structure of the table rather than the contents, we only need to do it once (ie: it is not needed in getWarningOnProjectedUpdate)
WITHOUT_CLASSIFICATION	There should not be more than one row in the DB that matches the table, and if there is we cannot determine which one to read, so check that there are no more
WITHOUT_CLASSIFICATION	We don't care if these throw an SQLException. Just squelch them and report to the user what the outcome of the previous statements were.
WITHOUT_CLASSIFICATION	no problems found, so do not return a warning message. nothing for user to worry about
WITHOUT_CLASSIFICATION	no problems found, so do not return a warning message. nothing for user to worry about
WITHOUT_CLASSIFICATION	get WHERE clause The -1 says to ignore the last arg and use the contents of the values array for the column that we care about. However, since the data in that column has been limited, when getWhereClause calls that DataType with that value, the DataType will see that the data has been limited and therefore cannnot be used in the WHERE clause. In some cases it may be possible for the DataType to use the partial data, such as "matches <data>", but that may not be standard accross all Databases and thus may be risky.
WITHOUT_CLASSIFICATION	have the DataType object fill in the appropriate kind of value into the first (and only) variable position in the prepared stmt
WITHOUT_CLASSIFICATION	It would be nice to tell the user what happened, but if we try to put up a dialog box at this point, we run into trouble in some cases where the field continually tries to re-read after the dialog closes (because it is being re-painted).
WITHOUT_CLASSIFICATION	When we get to the last statement, if the script is large, show the user the total execution time.
WITHOUT_CLASSIFICATION	There used to be a frame.pack() here but it resized the frame to be very wide if text output was used.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	get WHERE clause for the selected row the -1 says to just use the contents of the values without any substitutions
WITHOUT_CLASSIFICATION	For tables that have a lot of columns, the user may have limited the set of columns to use in the where clause, so see if there is a table of col names
WITHOUT_CLASSIFICATION	the user has restricted the set of columns to use. If this name is NOT in the list, then skip it; otherwise we fall through and use the column in the WHERE clause
WITHOUT_CLASSIFICATION	for the column that is being changed, use the value passed in by the caller (which may be either the current value or the new replacement value)
WITHOUT_CLASSIFICATION	string used as error indicator and description of problems seen when checking for 0 or mulitple matches in DB
WITHOUT_CLASSIFICATION	for each row in table, count how many rows match where clause if not exactly one, generate message describing situation
WITHOUT_CLASSIFICATION	if the rows do not match 1-for-1 to DB, ask user if they really want to do delete
WITHOUT_CLASSIFICATION	read the DB MetaData info and fill in the value, if any Note that the ResultSet info and the colDefs should be in the same order, but we cannot guarantee that.
WITHOUT_CLASSIFICATION	if value was null, we do not need to do anything else with this column. Also assume that a value of "" is equivilent to null
WITHOUT_CLASSIFICATION	Add the list of column names we will be inserting into - be sure to skip the rowId column and any auto increment columns.
WITHOUT_CLASSIFICATION	JASON: SQLFilterClauses getSQLFilterClauses();
WITHOUT_CLASSIFICATION	Loop while we either have a ResultSet to process or rows have been updated/inserted/deleted.
WITHOUT_CLASSIFICATION	This method is called from a thread. In case listeners update Swing controls we invoke later here.
WITHOUT_CLASSIFICATION	This can happen if an impl of ISQLExecutionListener returns null from the statementExecuting API method, to indicate that the SQL shouldn't be executed.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Can't work with ISessionAction because if a result window is on top the session in a ISessionAction is null.
WITHOUT_CLASSIFICATION	Implementataion of IDataSetUpdateableTableModel: Delegation to _dataSetUpdateableTableModel
WITHOUT_CLASSIFICATION	final JScrollPane sp = new JScrollPane(); sp.setBorder(BorderFactory.createEmptyBorder()); sp.setViewportView(_tree); sp.setPreferredSize(new Dimension(200, 200));
WITHOUT_CLASSIFICATION	There is no good way using JDBC metadata to tell if the table is a materialized view. So, we need to query the data dictionary to find that out. Get all table names whose comment indicates that they are a materialized view.
WITHOUT_CLASSIFICATION	Option to select default catalog only applies to sessions that support catalogs.
WITHOUT_CLASSIFICATION	If the user wants to select for Right mouse clicks then change the selection before popup appears
WITHOUT_CLASSIFICATION	Go through each child of the parent and see if it was previously expanded. If it was recursively call this method in order to expand the child.
WITHOUT_CLASSIFICATION	Add together the standard expanders for this node type and any individual expanders that there are for the node and process them.
WITHOUT_CLASSIFICATION	If a driver says it supports schemas/catalogs but doesn't provide schema/catalog nodes, try to get other nodes.
WITHOUT_CLASSIFICATION	If a driver says it supports schemas but doesn't provide schema nodes, try to get other nodes.
WITHOUT_CLASSIFICATION	any errors here result in an un-editable table, which should be no problem
WITHOUT_CLASSIFICATION	Dont need to close the ResultSet as DatabaseTypesDataSet will do so when its finished with it.
WITHOUT_CLASSIFICATION	Some DBMS's (EG Think SQL) throw an exception on a call to getBestRowIdentifier.
WITHOUT_CLASSIFICATION	create data structure containing contents of rows to be deleted We cannot use the getRow() method because that uses MyJTable whereas the indexes that we have are indexes in the SortableTableModel.
WITHOUT_CLASSIFICATION	for example: case 0: s = "invalid character"; break; perhaps insert application specific error messages here
WITHOUT_CLASSIFICATION	pseudocolumn query failed, so reset it. Otherwise, we'll mistake the last column for a pseudocolumn and make it uneditable
WITHOUT_CLASSIFICATION	to allow the fw to save and reload user options related to specific columns, we construct a unique name for the table so the column can be associcated with only that table. Some drivers do not provide the catalog or schema info, so those parts of the name will end up as null. That's ok since this string is never viewed by the user and is just used to distinguish this table from other tables in the DB. We also include the URL used to connect to the DB so that the same table/DB on different machines is treated differently.
WITHOUT_CLASSIFICATION	data, random accessible current token current input character (original) current input character (for token) last input character position of current character line number of current character start position of current line
WITHOUT_CLASSIFICATION	/ We are through with parsing. Now we store the outcome in _lastRun... and tell the listeners.
WITHOUT_CLASSIFICATION	If this session doesn't share SQL history with other sessions then disable the controls that relate to SQL History.
WITHOUT_CLASSIFICATION	belong together
WITHOUT_CLASSIFICATION	use just the columns listed in the table, and set the not-used cols to the ones that are not mentioned in the table
WITHOUT_CLASSIFICATION	for each element in the "use" set, if selected then add to "not use", otherwise add to new "use" set
WITHOUT_CLASSIFICATION	detect whether or not the object tree needs refreshing by comparing old value to new and see if they changed.
WITHOUT_CLASSIFICATION	It causes a lot of pain in serveral places to cope with nulls or emptys here.
WITHOUT_CLASSIFICATION	create a hashmap containing the column names. by convention, the value and key is the same for each column name
WITHOUT_CLASSIFICATION	int progress = loadSchemas(1); load tables with catalog = null
WITHOUT_CLASSIFICATION	int progress = loadCatalogs(1); load tables with schema = null
WITHOUT_CLASSIFICATION	If called here it is called far to often and restoring selection in the Object tree doesn't work. fireSchemaInfoUpdate();
WITHOUT_CLASSIFICATION	Reload all matching table types
WITHOUT_CLASSIFICATION	Reload all matching procedure types
WITHOUT_CLASSIFICATION	call the function in the app code that checks for unexpected conditions in the DB as it will be after doing the update
WITHOUT_CLASSIFICATION	Unfortunately, conversion to uppercase does not work properly for the Georgian alphabet, which has strange rules about case conversion. So we need to make one last check before exiting.
WITHOUT_CLASSIFICATION	If characters don't match but case may be ignored, try converting both characters to uppercase. If the results match, then the comparison scan should continue.
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	DB2 stores all names in upper case. PostgreSQL stores all names in lower case. That's why we may not find proc as it was written in the create statement. So we try out the upper and lower case names too.
WITHOUT_CLASSIFICATION	The following strings are SQL tokens and should therefore not be internationalized No I18N No I18N No I18N No I18N No I18N No I18N
WITHOUT_CLASSIFICATION	If the operator is 'IN' and there are no parenthesis around the value, put them there.
WITHOUT_CLASSIFICATION	this method is called from the super class's constructor therfore _titleLbl is null for that call.
WITHOUT_CLASSIFICATION	if the release version doesn't change, we won't be pulling down core artifacts. So, we just need to make sure that all core files have been copied from their installed locations into the corresponding directory in download, which is in the CLASSPATH of the updater. This covers the case where the update is being run for the first time after install, and no new version is available, but the user wants to install/remove plugins and/or translations.
WITHOUT_CLASSIFICATION	since the base name file exists, we need to skip it and bump up the endIndex
WITHOUT_CLASSIFICATION	tell scrollpane to use table size with the height adjusted to leave room for the scrollbar at the bottom if needed
WITHOUT_CLASSIFICATION	text put in file name field to indicate that we should create a temp file for export
WITHOUT_CLASSIFICATION	should not happen since the file that was selected was just being shown in the Chooser dialog, but just to be safe...
WITHOUT_CLASSIFICATION	an error here may mean that the file cannot be reached or has moved or some such. In any case, the file cannot be used for export.
WITHOUT_CLASSIFICATION	at this point we have an actual file that we can output to, so create the output stream (so that data type objects do not have to).
WITHOUT_CLASSIFICATION	If the table+column already has a data object in the map, then remove it.
WITHOUT_CLASSIFICATION	notify table that rows have changed The deleted rows may not be contiguous in the actual data model because the gui may be showing a version of the data sorted in some other order, so we cannot use fireRowsDeleted.
WITHOUT_CLASSIFICATION	ColumnDisplayDefinition[] colDefs = createColumnDefinitions(md, columnIndices, computeWidths); _dataSetDefinition = new DataSetDefinition(colDefs);
WITHOUT_CLASSIFICATION	If this was done when the header was clicked it prevents MS Excel like adopition of column sizes by double click. See class ButtonTableHeader.
WITHOUT_CLASSIFICATION	/ Override the functions that need to be changed to tell the table mechanisms how to do editing.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	we should never get here because the areEqual function is only called when we are trying to update the database, so we know that we have a DataType object for this column (or we would have been stopped from editing by the isEditableXXX methods), but we need a return here to keep the compiler happy.
WITHOUT_CLASSIFICATION	get parameters previously set by user, or set default values set to the default
WITHOUT_CLASSIFICATION	if the original object is not null, then it contains a Clob object that we need to re-use, since that is the DBs reference to the clob data area. Otherwise, we set the original Clob to null, and the write method needs to know to set the field to null.
WITHOUT_CLASSIFICATION	If all of the data has been read, then the blob can be edited in the Popup, otherwise it cannot
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	flag for whether to use the default Java format (true) or the Locale-dependent format (false)
WITHOUT_CLASSIFICATION	If all of the data has been read, then the clob can be edited in the Popup, otherwise it cannot
WITHOUT_CLASSIFICATION	place to save reference to DataType object needed for calling the appropriate renderer on the object value
WITHOUT_CLASSIFICATION	if text cannot be edited in the cell but can be edited in the popup, show that by changing the text colors.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	return the text from the file since it does represent a valid data value
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	field is not nullable
WITHOUT_CLASSIFICATION	if this panel is called before any instances of the class have been created, we need to load the properties from the DTProperties.
WITHOUT_CLASSIFICATION	we have read data, so that is not the same state odd-ball case: assume if neither has read data that they are equal
WITHOUT_CLASSIFICATION	we have read data, so that is not the same state odd-ball case: assume if neither has read data that they are equal
WITHOUT_CLASSIFICATION	the list of specific column names is in comma-separated format with a comma in front of the first entry as well empty the map of old values
WITHOUT_CLASSIFICATION	Do the conversion into the object in a safe manner Special case: the input is exactly the output
WITHOUT_CLASSIFICATION	if this column is being limited, then truncate the data if needed (start with a quick check for the data being shorter than the limit, in which case we don't need to worry about it).
WITHOUT_CLASSIFICATION	When changing the backgroud color, it helps to set the inner component's border to zero. Otherwise, the border can obscure the text and make it hard to see. This is especially seen when using the kunstoff l&f.
WITHOUT_CLASSIFICATION	default behavior if no appropriate data type found is to create a simple JTextArea with no special handling. In Theory, this cannot happen because if there is no data type object for this column's data type, then isEditableInPopup returns false, so we should not get here. If there IS a data type object, and isEditableInPopup returns true, then we would have executed the return statement above. Assume that the value can be represented as a string.
WITHOUT_CLASSIFICATION	we have not already created a DataType object for this column so do that now and save it
WITHOUT_CLASSIFICATION	HADB reports "10" for column size of BLOB/CLOB 2GB (2^32)
WITHOUT_CLASSIFICATION	CREATE TABLE tableName ( column1 int, column2 varchar(20) NOT NULL DEFAULT 'Hello World' CONSTRAINT tableName_pkey PRIMARY KEY(column1,column2) );
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<drop_index_statement> ::= DROP INDEX <index_name> [ON <table_name>]
WITHOUT_CLASSIFICATION	ALTER TABLE localTableName ADD CONSTRAINT constraintName FOREIGN KEY (localColumn1, localColumn2) REFERENCES referencedTableName (referencedColumn1, referencedColumn2) MATCH FULL ON UPDATE RESTRICT ON DELETE NO ACTION DEFERRABLE INITIALLY DEFERRED;
WITHOUT_CLASSIFICATION	deletes the last ", " deletes the last ", "
WITHOUT_CLASSIFICATION	ALTER TABLE tableName DROP CONSTRAINT constraintName
WITHOUT_CLASSIFICATION	CREATE VIEW viewName AS definition;
WITHOUT_CLASSIFICATION	myid myid StringTemplate st = new StringTemplate(templateStr);
WITHOUT_CLASSIFICATION	FOREIGN KEY (columnName [,...]) REFERENCES [refTableName] [(refColumnName[,...])] [ON DELETE {CASCADE | RESTRICT | NO ACTION | SET DEFAULT | SET NULL}] [ON UPDATE {CASCADE | SET DEFAULT | SET NULL}]
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	CREATE {[UNIQUE [HASH]] INDEX [[IF NOT EXISTS] newIndexName] | PRIMARY KEY [HASH]} ON (columnName [,...])
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ START WITH $startValue$ " + "INCREMENT BY $incrementValue$ $cache$ $cacheValue$";
WITHOUT_CLASSIFICATION	"SELECT CURRENT_VALUE, 'NONE', 'NONE', CACHE, INCREMENT, 0 " + "FROM INFORMATION_SCHEMA.SEQUENCES " + "WHERE SEQUENCE_SCHEMA = ? " + "AND SEQUENCE_NAME = ? ";
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] FOREIGN KEY (<column list>) REFERENCES <exptablename> (<column list>) [ON {DELETE | UPDATE} {CASCADE | SET DEFAULT | SET NULL}];
WITHOUT_CLASSIFICATION	Ingres requires that columns that are to become not null must have a default value.
WITHOUT_CLASSIFICATION	CREATE SEQUENCE <sequencename> [AS {INTEGER | BIGINT}] [START WITH <startvalue>] [INCREMENT BY <incrementvalue>];
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ $startWith$ " + "$increment$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	convert all columns in key to not null - this doesn't hurt if they are already null.
WITHOUT_CLASSIFICATION	I tried the following for values under 8000 but I get Encountered unexpected exception - line 1, You cannot assign a value of type 'long byte' to a column of type 'byte varying'. Explicitly convert the value to the required type. registerColumnType(Types.VARBINARY, 8000, "byte varying($l)");
WITHOUT_CLASSIFICATION	float(54) produces an exception: invalid column format 'float' on column 'float_column'., SQL State: 42000, Error Code: 2014
WITHOUT_CLASSIFICATION	Alter table <table> add constraint <constraint> foreign key(<column>) references <table>(<column>) on delete set null
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	int featureId = DialectUtils.COLUMN_TYPE_ALTER_TYPE; String msg = DialectUtils.getUnsupportedMessage(this, featureId); throw new UnsupportedOperationException(msg);
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ALTER $columnName$ SET DATA TYPE $dataType$";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	CREATE [UNIQUE|FULLTEXT|SPATIAL] INDEX index_name [index_type] ON tbl_name (index_col_name,...) index_col_name: col_name [(length)] [ASC | DESC] index_type: USING {BTREE | HASH} Note; indexType is unused at the moment because the index dialog doesn't accept this. See below.
WITHOUT_CLASSIFICATION	PostgreSQL follows the standard for SQL BIT. It's a string of BITs. So bit(10) is a string of 10 bits. JDBC treats SQL BIT as if it were only a single BIT. It specifies that BIT is equivalent to BOOLEAN. It claims that the PreparedStatement set method that should be used with BIT is setBoolean and getBoolean. This is not compliant with the standard. So SQL BIT type support is broken in Java, there is nothing we can do about that. Best thing to do for now, is try to convert the BIT type to a boolean like the JDBC spec says and hope for the best. Hope that the source database isn't using the BIT column as a sequence of multiple BITs.
WITHOUT_CLASSIFICATION	Set ON UPDATE action to NO ACTION as Oracle doesn't currently support this. NO ACTION causes the update clause to be omitted.
WITHOUT_CLASSIFICATION	SELECT last_number, max_value, min_value, cache_size, increment_by, cycle_flag FROM USER_SEQUENCES WHERE sequence_name = ?;
WITHOUT_CLASSIFICATION	alter table TEST ALTER MYCHAR SET DEFAULT 'FOO' alter table TEST ALTER MYCHAR DROP DEFAULT
WITHOUT_CLASSIFICATION	drop the existing default value. "ALTER TABLE $tableName$ " + "ALTER $columnName$ DROP DEFAULT";
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ " + "$increment$ $startWith$ $minimum$ $maximum$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	"CREATE SEQUENCE $sequenceName$ " + "$increment$ $minimum$ $maximum$ $startWith$ $cache$ $cycle$";
WITHOUT_CLASSIFICATION	GenericDialect must be last, since it will claim that it supports any product/version. That is also why there is no isGenericDialect - it would always return true if there was one, making it useless.
WITHOUT_CLASSIFICATION	double and float have no scale - that is DECIMAL_DIGITS is null. Assume that is because it's variable - "floating" point.
WITHOUT_CLASSIFICATION	ALTER TABLE <TABLENAME> ADD CONSTRAINT NULL_FIELD CHECK (<FIELD> IS NOT NULL)
WITHOUT_CLASSIFICATION	Sort the rows by the property name. Collections.sort(_data, new DataSorter());
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	Firebird doesn't natively support altering a columns nullable property. Will have to simulate in a future release.
WITHOUT_CLASSIFICATION	CREATE GENERATOR EMPNO_GEN; COMMIT; SET TERM !! ; CREATE TRIGGER CREATE_EMPNO FOR EMPLOYEES BEFORE INSERT POSITION 0 AS BEGIN NEW.EMPNO = GEN_ID(EMPNO_GEN, 1); END
WITHOUT_CLASSIFICATION	Dimension dim = getPreferredSize(); dim.width = PREFERRED_WIDTH; setPreferredSize(dim); setRows(3);
WITHOUT_CLASSIFICATION	If the "None" place-holder is in the list in the first position, remove it. It is not possible to select the "None" place-holder upon startup, because it is already selected in the list if it is present.
WITHOUT_CLASSIFICATION	InstantDB (at least version 3.13) only returns "TABLES" for getTableTypes(). If you try to use this in a call to DatabaseMetaData.getTables() no tables will be found. For the moment hard code the types for InstantDB.
WITHOUT_CLASSIFICATION	Some drivers for both MS SQL and Sybase don't return guest as a schema name.
WITHOUT_CLASSIFICATION	The mode_decode routine may or may not be there. We don't care if it is not there, but log an info if we failed to drop it for some other reason.
WITHOUT_CLASSIFICATION	TABLE_CAT TABLE_SCHEM TABLE_NAME COLUMN_NAME DATA_TYPE TYPE_NAME COLUMN_SIZE DECIMAL_DIGITS NUM_PREC_RADIX NULLABLE REMARKS COLUMN_DEF CHAR_OCTET_LENGTH ORDINAL_POSITION IS_NULLABLE
WITHOUT_CLASSIFICATION	Don't bother the user with details about where the result fetch failed if they cancelled the query.
WITHOUT_CLASSIFICATION	/ We use Vectors because a MessageHandler might be called from different threads.
WITHOUT_CLASSIFICATION	If truncate was attempted and not supported, then try delete. If on the other hand delete was attempted, just throw the SQLException that resulted from the delete.
WITHOUT_CLASSIFICATION	all the data from the clob has been read. make sure there are no newlines in it
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	Uh-oh! We shouldn't have more than one plugin registering a custom exception handler for a given session. The first one wins and all others get an error message.
WITHOUT_CLASSIFICATION	pid 25493, lock examples: 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499 X E 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499,25506 X,X E,E 5 [" /db1/shd_data_4_3/"]User.ygwaBvbPosKorrD(1) 25493 1D, 25499,25506,25508 X,X,X E,E,E oder 6 [" d:\db\shd_data_lov\"]User.WLagerartikelD(76) 5544 1D, 7 [" d:\db\shd_data_lov\"]User.WLagerartikelD(77) 5544 1D, 3804 S E 8 [" d:\db\shd_data_lov\"]User.WVorgangD(24) 5544 1D, oder fuer kein Lock: 3 [" f:\db\shd_data\"]User.ygwaTestD(989) 3792 1D, 4 [" f:\db\shd_data\"]User.ygwaTestD(990) 3792 1D, 5 [" f:\db\shd_data\"]User.ygwaTestD(991) 3792 1D, 6 [" f:\db\shd_data\"]User.ygwaTestD(992) 3792 1D, 7 [" f:\db\shd_data\"]User.ygwaTestD(993) 3792 1D, 8 [" f:\db\shd_data\"]User.ygwaTestD(994) 3792 1D, 9 [" f:\db\shd_data\"]User.ygwaTestD(995) 3792 1D,
WITHOUT_CLASSIFICATION	/ The colums of the last completed table/view that match the tableNamePat will be returned on top of the collection
WITHOUT_CLASSIFICATION	If source column is type 1111 (OTHER), try to use the column type name to find a type that isn't 1111.
WITHOUT_CLASSIFICATION	JDBC spec says that BIT refers to a boolean column - i.e. a single binary digit with value either "0" or "1". Also the same spec encourages use of getBoolean/setBoolean. However, the SQL-92 standard clearly states that the BIT type is a bit string with length >= 0. So for SQL-92 compliant databases (like PostgreSQL) the JDBC spec's support for BIT is at best broken and unusable. Still, we do what the JDBC spec suggests as that is all that we can do.
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	We still have to bind a value, or else the PS will throw an exception.
WITHOUT_CLASSIFICATION	String sourceSchema = null; MySQL uses catalogs instead of schemas
WITHOUT_CLASSIFICATION	Column is in table 2, but not table 1 - how else would we get here??
WITHOUT_CLASSIFICATION	view name schema name
WITHOUT_CLASSIFICATION	new line to the begining so that sb.append( will be removed new line to the end so that a semi colon at the end will be removed.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	Span across two columns c.ipadx = 40;
WITHOUT_CLASSIFICATION	Rows "12dlu, 6dlu, 12dlu, 6dlu, 80dlu:grow, 6dlu, 12dlu, 6dlu, 80dlu:grow, 6dlu, pref"
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Oracle can only store DECIMAL type numbers. Since regular non-decimal numbers appear as "decimal", Oracle's decimal numbers can be rather large compared to other databases (precision up to 38). Other databases can only handle this large precision in BIGINT fields, not decimal, so try to figure out if Oracle is really storing a BIGINT and claiming it is a DECIMAL. If so, convert the type to BIGINT before going any further.
WITHOUT_CLASSIFICATION	For char or date types this is the maximum number of characters, for numeric or decimal types this is precision.
WITHOUT_CLASSIFICATION	This doesn't appear to work for PROGRESS RDBMS result[i] = DBUtil.getTableCount(con, ti.getSimpleName());
WITHOUT_CLASSIFICATION	TODO: tell the user that the selected destination schema is the same as the source schema. monitor.showMessageDialog(...)
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	alter table ti.getSimpleName() add foreign key (fkTableCol) references pkTableName(pkTableCol);
WITHOUT_CLASSIFICATION	final ApplicationFiles appFiles = new ApplicationFiles(); _exportPrefsText.setText(getFileName(here, appFiles.getUserPreferencesFile().getName())); _exportDriversText.setText(getFileName(here, appFiles.getDatabaseDriversFile().getName())); _exportAliasesText.setText(getFileName(here, appFiles.getDatabaseAliasesFile().getName()));
WITHOUT_CLASSIFICATION	Add context menu items to the object tree's session node. as popup menu
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	misc ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------ ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	"server" "port" "database file" "backup file"
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	dbStatus -> `Status=ONLINE, Updateability=READ_WRITE, UserAccess=MULTI_USER, Recovery=SIMPLE, Version=539, Collation=SQL_Latin1_General_CP1_CI_AS, SQLSortOrder=52, IsTornPageDetectionEnabled, IsAutoCreateStatistic'
WITHOUT_CLASSIFICATION	For reasons that i cannot exmplain, this is out by two, probably due to the border or insets around a cell??
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	Expanders - trigger and index expanders are added inside the table expander
WITHOUT_CLASSIFICATION	Tricky alias and chaining completion examples au to auftr in from Kv auftr where au au to auftr in from Kv.positionen.kv auftr where au positionen. to fields of Kv aggregate positionen in from Kv auftr where auftr.positionen. positionen. to fields of Kv aggregate positionen in from Kv where positionen.
WITHOUT_CLASSIFICATION	... while attributes used in qualified expressions will not be completed qualified. That means for pack.Foo. the completion popup will be placed behind the last dot.
WITHOUT_CLASSIFICATION	double space since this is a new version of the stored procedure (overloading name with different parameters)
WITHOUT_CLASSIFICATION	Force the LAF to be set even if Skin is the current one. This allows a change in theme to take affect.
WITHOUT_CLASSIFICATION	_treeAPI.addToPopup(DatabaseObjectType.SESSION, coll.get(CreateTableAction.class)); _treeAPI.addToPopup(DatabaseObjectType.CATALOG, coll.get(CreateTableAction.class));
WITHOUT_CLASSIFICATION	private final static ILogger s_log = LoggerController.createLogger(CreateMysqlTableScriptCommand.class);
WITHOUT_CLASSIFICATION	public ColumnsComboBox(SQLConnection conn, ITableInfo ti) throws SQLException { super(conn.getSQLMetaData().getColumnInfo(ti)); setRenderer(new CellRenderer()); } This renderer uses the unqualified column name as the text to display in the combo. private static final class CellRenderer extends BasicComboBoxRenderer { CellRenderer() { super(); setOpaque(true); } public Component getListCellRendererComponent(JList list, Object value, int index, boolean isSelected, boolean cellHasFocus) { setText(((TableColumnInfo)value).getColumnName()); return this; } }
WITHOUT_CLASSIFICATION	In an effort to avoid non JDBC standard out parameter types ie oracle specific ones, the dbms_output.get_line is used rather than the dbms_output.getlines. The disadvantage is there are more trips to the server to return multiple lines.
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	Folder within plugins folder that belongs to this plugin.
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	Add the parameter names and types Use the session Id you got from the openSession call here
WITHOUT_CLASSIFICATION	Action performed for the Update button private void buttonUpdateActionPerformed(java.awt.event.ActionEvent evt) { String query = getQuery(); dbUtils.execute(query); _dlog.setVisible(false); _dlog.dispose(); JOptionPane.showMessageDialog(null, "Field updated"); }
WITHOUT_CLASSIFICATION	private static final ILogger s_log = LoggerController.createLogger(UserParentExpander.class);
WITHOUT_CLASSIFICATION	The TreeModel interface
WITHOUT_CLASSIFICATION	Sets constraints like NOT NULL for the new column, depending on the constraints for the old column.
WITHOUT_CLASSIFICATION	Dec 31 23:59:59 EST 2107 is overflow on FAT file systems, and the call fails
WITHOUT_CLASSIFICATION	The name of the calling client program. This is optional. If you don't want to give out this info, please enter "N/A"
WITHOUT_CLASSIFICATION	String BLINK_CARET = "blinkCaret"; String BLOCK_CARET_ENABLED = "blockCaretEnabled"; String BRACKET_HIGHLIGHTING = "bracketHighlighting"; String BRACKET_HIGHLIGHT_COLOR = "bracketHighlightColor"; String CARET_COLOR = "caretColor";
WITHOUT_CLASSIFICATION	/
WITHOUT_CLASSIFICATION	JDK1.5 "@ident" annotation "@keyword" gets returned as two tokens "@" and "keyword"
WITHOUT_CLASSIFICATION	JDK1.5 "@ident" annotation "@keyword" gets returned as two tokens "@" and "keyword"
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	/ There are a lot of goodies in the ExtSettingsInitializer that might be interesting in th future. Unfortunately some conflicts with some of Squirrels shortcuts are in ExtSettingsInitializer Settings.removeInitializer(ExtSettingsInitializer.NAME); Settings.addInitializer(new ExtSettingsInitializer(), Settings.CORE_LEVEL); /
WITHOUT_CLASSIFICATION	These should be different since we are providing two different statement separators in SessionProperties
WITHOUT_CLASSIFICATION	We don't add a listener to a button twice because the FindDialogSupport class will call this method with the same button instances whenever the replace dialog is opened. If we add the listener again and again replace will be done as often as the dialog is opened. This is especially nasty if the text to replace is part of the replacement text.
WITHOUT_CLASSIFICATION	MySQL requires MyISAM storage engine for spatial and fulltext indexes. Don't test them for now. See the TODO in the MySQLDialect for getCreateIndexSQL.
WITHOUT_CLASSIFICATION	These two columns will be the only ones in the pktest table. They will start out being nullable, and we will test that the dialect correctly converts them to non-null then applies the PK constraint to them. This test shall not be run against any database dialect that claims not to support changing the nullability of a column.
WITHOUT_CLASSIFICATION	Firebird gives weird exception: unsuccessful metadata update object FKTESTPARENTTABLE is in use; squelch it and continue.
WITHOUT_CLASSIFICATION	This test disabled for now until we figure out a better way to do concurrent modifications to the schemaInfoCache. @Test
WITHOUT_CLASSIFICATION	These tell the Dialect test runner where tables that is creates can be found.
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType; 1 == CHAR typeName columnSize decimalDigits radix isNullAllowed defaultValue isNullable
WITHOUT_CLASSIFICATION	private ResultSet mockResultSet = null; private static int[] columnIndices = new int[] { 4, 6, 18, 9, 7, 13, 12, 5, 8, 10, 11, 14, 15, 16, 17 };
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack#currentlyLoading(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#hasOwnUndoableManager()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#getCaretLineNumber()
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#addCaretListener(CaretListener)
WITHOUT_CLASSIFICATION	@see ISQLEntryPanel#removeCaretListener(CaretListener)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileAppend()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileClose()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileNew()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileSaveAs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#fileOpen()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLPanelAPI#filePrint()
WITHOUT_CLASSIFICATION	@see ActionListener#actionPerformed(ActionEvent)
WITHOUT_CLASSIFICATION	@see MouseMotionListener#mouseDragged(MouseEvent)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#allRowsAdded()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.datasetviewer.IDataSet#get(int)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#addRow(Object[])
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#getRow(row)
WITHOUT_CLASSIFICATION	@see BaseDataSetViewerDestination#allRowsAdded()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	@see IDataSetViewer#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#supportsSchemasInTableDefinition()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getLengthFunction()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxFunction()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxPrecision(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getMaxScale(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getPrecisionDigits(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.dialects.HibernateDialect#getColumnLength(int, int)
WITHOUT_CLASSIFICATION	@see MouseListener#mousePressed(MouseEvent)
WITHOUT_CLASSIFICATION	@see MouseListener#mouseReleased(MouseEvent)
WITHOUT_CLASSIFICATION	@see MouseMotionListener#mouseMoved(MouseEvent)
WITHOUT_CLASSIFICATION	@see TableCellRenderer#getTableCellRendererComponent(JTable, Object, boolean, boolean, int, int)
WITHOUT_CLASSIFICATION	@see TableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	@see TableModel#getColumnClass(int)
WITHOUT_CLASSIFICATION	@see Comparator#compare(Object, Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#getTransferDataFlavors()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#isDataFlavorSupported(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.datatransfer.Transferable#getTransferData(java.awt.datatransfer.DataFlavor)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.IQueryTokenizer#getSQLStatementSeparator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getUserName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDatabaseProductVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDriverName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getJDBCVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCascadeClause()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemas()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemasInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSchemasInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsStoredProcedures()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsSavepoints()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsResultSetType(int)
WITHOUT_CLASSIFICATION	Not cached. (non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getURL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSchemaTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedureTerm()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getCatalogSeparator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#supportsCatalogsInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getJDBCMetaData()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getMetaDataSet()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTypeInfo() @deprecated Replaced by getDataTypes
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTypesDataSet()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getDataTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedures(java.lang.String, java.lang.String, java.lang.String, net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTableTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTables(java.lang.String, java.lang.String, java.lang.String, java.lang.String[], net.sourceforge.squirrel_sql.fw.sql.ProgressCallBack)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getUDTs(java.lang.String, java.lang.String, java.lang.String, int[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getNumericFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getStringFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSystemFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTimeDateFunctions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getSQLKeywords()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getImportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKeys(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getPrimaryKey instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKey(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getPrimaryKey(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getProcedureColumns(net.sourceforge.squirrel_sql.fw.sql.IProcedureInfo) @deprecated use getProcedureColumnsDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getTablePrivileges(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getTablePrivilegesDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getVersionColumns(net.sourceforge.squirrel_sql.fw.sql.ITableInfo) @deprecated use getVersionColumnsDataSet instead
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getColumnInfo(java.lang.String, java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDatabaseMetaData#getColumnInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDriver#getWebSiteUrl()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ISQLDriver#setWebSiteUrl(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.MetaDataDataSet#get(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.MetaDataDataSet#next(net.sourceforge.squirrel_sql.fw.util.IMessageHandler)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getExportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getImportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#initialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#uninitialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.AbstractTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#open()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#close()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getPreview(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getRows()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#next()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#reset()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getInt(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getDate(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getConfigurationPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#open()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#close()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getPreview(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#reset()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getRows()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#next()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getInt(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getDate(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dataimport.importer.IFileImporter#getConfigurationPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#recordCopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.RecordEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyFinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#handleError(net.sourceforge.squirrel_sql.plugins.dbcopy.event.ErrorEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.CopyPreference#deleteTableData(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#analyzingTable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableAnalysisStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.AnalysisEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#analyzingTable(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableAnalysisStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.AnalysisEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyStarted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#tableCopyFinished(net.sourceforge.squirrel_sql.plugins.dbcopy.event.TableEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#recordCopied(net.sourceforge.squirrel_sql.plugins.dbcopy.event.RecordEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#statementExecuted(net.sourceforge.squirrel_sql.plugins.dbcopy.event.StatementEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#copyFinished(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.event.CopyTableListener#handleError(net.sourceforge.squirrel_sql.plugins.dbcopy.event.ErrorEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Runnable#run()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getDestSelectedDatabaseObject()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setDestSelectedDatabaseObject(net.sourceforge.squirrel_sql.fw.sql.IDatabaseObjectInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.ISessionPlugin#sessionStarted(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.DefaultPlugin#getContributors()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getCopySourceSession()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setCopySourceSession(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getSelectedDatabaseObjects()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getCopyDestSession()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#setDestCopySession(net.sourceforge.squirrel_sql.client.session.ISession)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.dbcopy.SessionInfoProvider#getDestSelectedDatabaseObject()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Comparator#compare(java.lang.Object, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getColumnName(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#getValueAt(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.DefaultTableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods @see net.sourceforge.squirrel_sql.fw.datasetviewer.cellcomponent.IDataTypeComponent#canDoFileIO()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.plugins.smarttools.gui.ISmarttoolFrame#setFocusToFirstEmptyInputField()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#initialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.preferences.IGlobalPreferencesPanel#uninitialize(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent() Return the panel that will contain the prefernces ui. @return Panel containing preferences.
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.event.ISQLExecutionListener#statementExecuted(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.event.ISQLExecutionListener#statementExecuting(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#applyChanges()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getPanelComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.util.IOptionPanel#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.ISQLEntryPanel#setUndoManager(javax.swing.undo.UndoManager)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginUserSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getWebSite()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#unload()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#load(net.sourceforge.squirrel_sql.client.IApplication)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getInternalName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getDescriptiveName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getAuthor()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getVersion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getExternalService()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getGlobalPreferencePanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getHelpFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getLicenceFileName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getNewSessionPropertiesPanels()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#getPluginAppSettingsFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Comparable#compareTo(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData#getExportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.SQLDatabaseMetaData#getImportedKeysInfo(net.sourceforge.squirrel_sql.fw.sql.ITableInfo)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getExportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#getImportedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#setExportedKeys(net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.sql.ITableInfo#setImportedKeys(net.sourceforge.squirrel_sql.fw.sql.ForeignKeyInfo[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.fw.util.IMessageHandler#showWarningMessage(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInDataManipulation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getTableTypes()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#getDatabaseProductName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#allProceduresAreCallable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#allTablesAreSelectable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#deletesAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#doesMaxRowSizeIncludeBlobs()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#insertsAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#isCatalogAtStart()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#isReadOnly()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#locatorsUpdateCopy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullPlusNonNullIsNull()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedAtEnd()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedAtStart()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#nullsAreSortedLow()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersDeletesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersInsertsAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#othersUpdatesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownDeletesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownInsertsAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#ownUpdatesAreVisible(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#setupDriverName(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesLowerCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesLowerCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesMixedCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesMixedCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesUpperCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#storesUpperCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsAlterTableWithAddColumn()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsAlterTableWithDropColumn()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92EntryLevelSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92FullSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsANSI92IntermediateSQL()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsBatchUpdates()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInIndexDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInPrivilegeDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCatalogsInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsColumnAliasing()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsConvert()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsConvert(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCoreSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsCorrelatedSubqueries()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDataDefinitionAndDataManipulationTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDataManipulationTransactionsOnly()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsDifferentTableCorrelationNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsExpressionsInOrderBy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsExtendedSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsFullOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGetGeneratedKeys()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupBy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupByBeyondSelect()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsGroupByUnrelated()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsIntegrityEnhancementFacility()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsLikeEscapeClause()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsLimitedOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMinimumSQLGrammar()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMixedCaseIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMixedCaseQuotedIdentifiers()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleOpenResults()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleResultSets()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsMultipleTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsNamedParameters()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsNonNullableColumns()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenCursorsAcrossCommit()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenCursorsAcrossRollback()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenStatementsAcrossCommit()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOpenStatementsAcrossRollback()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOrderByUnrelated()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsOuterJoins()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsPositionedDelete()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsPositionedUpdate()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetConcurrency(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetHoldability(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsResultSetType(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSavepoints()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInIndexDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInPrivilegeDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInProcedureCalls()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSchemasInTableDefinitions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSelectForUpdate()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsStatementPooling()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsStoredProcedures()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInComparisons()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInExists()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInIns()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsSubqueriesInQuantifieds()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTableCorrelationNames()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTransactionIsolationLevel(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsTransactions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsUnion()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#supportsUnionAll()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#updatesAreDetected(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#usesLocalFilePerTable()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.mockobjects.sql.MockDatabaseMetaData#usesLocalFiles()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Comparable#compareTo(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.BaseMainPanelTab#refreshComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getHint()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.session.mainpanel.IMainPanelTab#getTitle()
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Lazily create the event:
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Nothing to do.
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	Expected
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	To change body of implemented methods use File | Settings | File Templates.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Ignore.
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Errors
WITHOUT_CLASSIFICATION	Ignored
WITHOUT_CLASSIFICATION	else
WITHOUT_CLASSIFICATION	??
WITHOUT_CLASSIFICATION	Save Application level SQL history.
WITHOUT_CLASSIFICATION	Save options selected for Cell Import Export operations
WITHOUT_CLASSIFICATION	Save options selected for Edit Where Columns
WITHOUT_CLASSIFICATION	AliasMaintSheetFactory.initialize(this); DriverMaintSheetFactory.initialize(this);
WITHOUT_CLASSIFICATION	AliasMaintSheetFactory.initialize(this); DriverMaintSheetFactory.initialize(this);
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboStartsWith=starts with]
WITHOUT_CLASSIFICATION	i18n[sqlval.info=This plugin uses version 1.0 of the SQL Validator Web Service developed by MimerSQL http:sqlvalidator.mimer.com. The SQL Statement is stored anonymously to be used by the ISO SQL Standards committee.]
WITHOUT_CLASSIFICATION	i18n[dataTypeOther.sqlOtherType=SQL Other (SQL type 1111)]
WITHOUT_CLASSIFICATION	i18n[editextras.month=Month]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.creditsfile=Error reading credits file]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorReadingFile=There was an error while reading file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	i18n[CreateTableScriptCommand.jdbcOdbcMessage=JDBC-ODBC Bridge doesn't provide all of the necessary metadata. The script may be incomplete.]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.close=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsExecute=Execute]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.updateDownloadFailedTitle=Update Download Failed]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.dboutputEnableAutoRefer=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[DataCache.msg.driverRegisteredSucessfully=Driver class {0} sucessfully registered for driver definition: {1}]
WITHOUT_CLASSIFICATION	i18n[dataSetViewereditableTablePanel.error2=Error]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError6=Export Error]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.precisionEceeded=Precision Exceeded: Number of digits in number ({0})\nis greater than allowed in column ({1})]
WITHOUT_CLASSIFICATION	i18n[editextras.second=Second]
WITHOUT_CLASSIFICATION	i18n[mssql.windows=Windows text (ANSI)]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showUdfSource=Show UDF source]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadsqlhistory=Loading SQL history...]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.typeMessage=Derby doesn't allow the column type to be altered]
WITHOUT_CLASSIFICATION	i18n[exportconfig.xmlErrorWritingTo=XML Error writing to\n{0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError2=Export Error]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.catalogLabel=Catalog:]
WITHOUT_CLASSIFICATION	i18n[oracle.parseCalla=Parse Calls]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerror=Unknown error during check on DB. Update is probably not safe.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[graph.scriptPlugNeeded=Scripting is only available with the SQL Scripts Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[editextras.year=Year]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loaddatatypeprops=Loading Data Type Properties...]
WITHOUT_CLASSIFICATION	i18n[oracle.triggerDetails=Details]
WITHOUT_CLASSIFICATION	i18n[graph.showZoomPaper=Show/Zoom paper edges]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[dataTypeUnknown.unknownTypes=Unknown DataTypes (non-standard SQL type codes)]
WITHOUT_CLASSIFICATION	i18n[mssql.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[PasteTableAction.error.multischemapaste=The paste operation may only be applied to one schema at a time]
WITHOUT_CLASSIFICATION	i18n[graph.showddl=show DDL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.hint=Here you may pecify which Schemas to be loaded and displayed in a Session's Object tree. Code completion and Syntax highlighting will work only for loaded schemas. If Schemas take a long time to load you may cache them on your hard disk. Then loading will take long only when you open a Session for the first time. You can always refesh the cache either by using the Session's 'Refresh all' toolbar button or by using the 'Refresh Item' right mouse menu on an Object tree node.]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.noConfigSelected=Please select a Hibernate configuration to connect to.\nHibernate configurations can be defined in the global preferences window.\nWould you like to open the window now?]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.allTranslationsLabel=All translations]
WITHOUT_CLASSIFICATION	i18n[sqlval.logon=SQL Validation Logon]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboEndsWith=ends with]
WITHOUT_CLASSIFICATION	i18n[CreateTableOfCurrentSQLCommand.noQuery=No query found to create the script from.]
WITHOUT_CLASSIFICATION	i18n[sqlscript.dropIfExists=Drop table if exists]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.updateproblem=There was a problem reported during the update. The DB message was:\n{0}\nThis may or may not be serious depending on the above message.\nThe data was probably not changed in the database.\nYou may need to refresh the table to get an accurate view of the current data.]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.selectImportDataFile=You must select an existing file to import data from.]
WITHOUT_CLASSIFICATION	i18n[sqlscript.tableScriptOk=OK]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.newlinesAsbackslashN=Show newlines as \\n within cells]
WITHOUT_CLASSIFICATION	Create checkbox for enabling auto refresh i18n[oracle.auotRefresh2=Enable auto refresh]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.creditspanelcreatetime=CreditsPanel created in ]
WITHOUT_CLASSIFICATION	i18n[graph.cm=cm]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.allPluginsLabel=All plugins]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dateTypeTimestamp.allowInexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptConstr=Include constraints to tables not in selection]
WITHOUT_CLASSIFICATION	i18n[SQLTab.hint=Execute SQL statements]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.changesRecordedTitle=Changes Recorded]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.colDescription=\nColumn\nDescription\n]
WITHOUT_CLASSIFICATION	i18n[syntax.cols=Columns]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.connectionFailureDialogMsg=Unable to download release.xml from the specified location]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.closeAllButThis=Close all but this]
WITHOUT_CLASSIFICATION	i18n[graph.printGraph=Print graph]
WITHOUT_CLASSIFICATION	i18n[mysql.enterDbName=Enter database name]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsEdit=Edit...]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.xmlWarning5=XML Warning]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.importError2=Import Error]
WITHOUT_CLASSIFICATION	i18n[BaseListInternalFrame.error.execdoubleclick=Error occured executing doubleclick event]
WITHOUT_CLASSIFICATION	i18n[UdfDetailsTab.hint=Display UDF details]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.statusBarBackgroundColorChooserDialogTitle=Select Background Color for Status Bar]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadfaqfile=Error retrieving FAQ from URL = {0}]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.metaData=Meta Data:]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.useTab=Tab seperated]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.aboutpanelcreatetime=AboutPanel created in ]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.columnNameLabel=Column: ]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.inputFileEncoding=Input file encoding]
WITHOUT_CLASSIFICATION	i18n[graph.delGraph=Do you really wish to delete this graph?]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbmsVersion=DBMS Version:]
WITHOUT_CLASSIFICATION	some kind of problem - tell user i18n[DataSetUpdateableTableModelImpl.error.preparingdelete=While preparing for delete, saw exception:\n{0}]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.ioException=An error occured while reading the input file.]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[graph.btnOk=OK]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[Session.driverComplianceTitle=JRE/JDBC Version Mismatch]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.fileLabel=File]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.jdbcEscape=Use JDBC standard escape format ]
WITHOUT_CLASSIFICATION	i18n[syntax.background=Select background color]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.toolbarBackgroundColorChooserDialogTitle=Select Background Color for Toolbar]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.quoteToolTip=Identifiers appear in quotes]
WITHOUT_CLASSIFICATION	i18n[sqlscript.successCreate=Successfully created table {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.noCommand=You must provide a command string or uncheck "Execute command".]
WITHOUT_CLASSIFICATION	i18n[graph.removeGraph=Remove graph]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.staleupdaterow=This row in the Database has been changed since you refreshed the data.\nNo rows will be updated by this operation.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.importWarning=Import Warning]
WITHOUT_CLASSIFICATION	i18n[graph.dina4=Din A 4]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.okButtonLabel=OK]
WITHOUT_CLASSIFICATION	i18n[graph.width=Width]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.addColumnTitle=Add Column]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.duplicateline=duplicateline]
WITHOUT_CLASSIFICATION	i18n[userscript.executing=Executing Script...]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.faq=FAQ]
WITHOUT_CLASSIFICATION	i18n[EditExtrasAccessor.editextrasPluginNeeded=Quoting is only available with the Edit Extras Plugin.\nGet the plugin from www.squirrelsql.org. It's free.]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.firebirdcommit=Firebird requires commit table create before inserting records. Please adjust your preferences.]
WITHOUT_CLASSIFICATION	i18n[userscript.selClasspathToDel=Please select the classpath entry to delete]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.usePKLabel=Use PK]
WITHOUT_CLASSIFICATION	i18n[graph.selGraphToAdd=Select the graph to add the selected tables to]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheFilePath=Cache file path for Alias "{0}": {1}]
WITHOUT_CLASSIFICATION	i18n[dataTypeTimestamp.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.close=Close]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.showToolbar=Show toolbar]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.missingClobDataMsg=Found Clob placeholder ({0}) amongst data to be exported. Continue exporting cell data?]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.copyingTablesLabel=Copying table]
WITHOUT_CLASSIFICATION	i18n[graph.dbOrder=db order]
WITHOUT_CLASSIFICATION	i18n[graph.invalidHeight=Invalid height]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.classPathRemove=Remove selected entries]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownerror=Unknown error during check on DB. Update is probably not safe.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.creditsfileurl=Couldn't retrieve Credits File URL]
WITHOUT_CLASSIFICATION	i18n[editextras.errorQuoteSql=Error processing Quote SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.fileOptions=File Options]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsRemove2=Remove]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.runGC=Run garbage collection]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.error.updatingprogressbar=Error occured updating progress bar]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.exceptionduringcheck=Exception seen during check on DB. Exception was:\n{0}\nUpdate is probably not safe to do.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.PrefsTabTitle=Code Completion]
WITHOUT_CLASSIFICATION	i18n[DataImportGlobalPreferencesTab.hint=Preferences for data import]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.autoCheckFrequency=How often to check for updates:]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.tableNameLabel=Table Name: ]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadcellselections=Loading Cell Import/Export selections...]
WITHOUT_CLASSIFICATION	i18n[Application.info.jdbcwriter=Attempting to set JDBC debug log to writer]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.tableLabel=Table(s):]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.desc=Please enter the fully qualified class name of a SessionFactorImpl provider class. The compiled class file must be in one of your additional classpath entries.]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginhelp=Error generating Help entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.ok=OK]
WITHOUT_CLASSIFICATION	label for type combo - used to enable/disable text associated with the combo i18n[dataTypeBigDecimal.read2=Read]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.key=Key]
WITHOUT_CLASSIFICATION	i18n[codecompletion.function.mustEndWith=function must end with ',']
WITHOUT_CLASSIFICATION	i18n[CopyDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingCatalogs=Loading catalogs]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateActionLabel=Action to take on update:]
WITHOUT_CLASSIFICATION	i18n[graph.scriptdd=script DDL]
WITHOUT_CLASSIFICATION	i18n[mysql.copyCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.autoCorrApply=Apply]
WITHOUT_CLASSIFICATION	i18n[PostgreSqlXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.createActionError=Error occured creating Action: {0}]
WITHOUT_CLASSIFICATION	i18n[graph.newName=Please enter a new name]
WITHOUT_CLASSIFICATION	i18n[ResultTab.cannotedit=This SQL can not be edited.]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.conversionError=Conversion Error]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateRefActionToolTip=Append ON UPDATE ...]
WITHOUT_CLASSIFICATION	i18n[syntax.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[sqlval.clientLogon=Client:]
WITHOUT_CLASSIFICATION	i18n[i18n.failedToParse=Failed to parse {0}\n{1}]
WITHOUT_CLASSIFICATION	i18n[HtmlViewerPanel.error.displayurl=Error displaying URL]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.varcharMessage=Derby only allows varchar columns to be altered]
WITHOUT_CLASSIFICATION	i18n
WITHOUT_CLASSIFICATION	Add import control i18n[popupeditableIoPanel.import44=Import]
WITHOUT_CLASSIFICATION	i18n[syntax.literals=Literals]
WITHOUT_CLASSIFICATION	here we've hit the second line of a multi-line i18n stanza Just skip it, we're not that sophisticated.
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToWriteFile=Failed to write file\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[codecompletion.function.needsTwoArgs=function needs at least two arguments]
WITHOUT_CLASSIFICATION	i18n[ViewSourceTab.display=Show view source]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.commentLabel=Comment: ]
WITHOUT_CLASSIFICATION	i18n[sqlval.noSql=No SQL specified]
WITHOUT_CLASSIFICATION	i18n[graph.mnuDelete=delete]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.defaultValueLabel=Default Value: ]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.commandChooserButton=Choose]
WITHOUT_CLASSIFICATION	i18n[SupportedRefactoringsTab.hint=Show refactorings that are supported by the plugin]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[ResultTab.metadataTabTitle=MetaData]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.PrefsTabTitleHint=Configure Code Completion]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dataTypeDate.orlocaleIndependent= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.readClobsFullyCheckBoxTT=Read all CLOB data when the Contents tab is displayed]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.currentVersionPrefix=Current Version:]
WITHOUT_CLASSIFICATION	i18n[laf.lafPerformanceWarning=Also note: Some Look and Feels may cause performance problems. If you think your selected Look and Feel slows down SQuirreL switch to a Metal or Plastic Look and Feel.]
WITHOUT_CLASSIFICATION	i18n[i18n.notGeneratedInWorkDir=File {0} has not been generated. Cannot continue.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.ReallyRemoveConfig=Are you sure you want to delete configuration "{0}".]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.alwaysFormat=Always format]
WITHOUT_CLASSIFICATION	i18n[oracle.execution=Executions]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[userscript.codeTemplate=Script code template]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.driverName=JDBC driver name (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.prefsTitle=Derby]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlResults=SQL Results:]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.warning=<HTML><BODY><B>Warning:</B> Plain<BR>text passwords<BR>may be saved<BR>in this file.</BODY></HTML>]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.settingsLabel=Settings]
WITHOUT_CLASSIFICATION	i18n[SQLFilterAction.singleObjectMessage=You must have a single table or view selected to activate the SQL Filter]
WITHOUT_CLASSIFICATION	i18n[mysql.droppingDBs=Dropping database(s)]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logInfoLabel=Logs: Errors {0}, Warnings {1}, Infos {2}]
WITHOUT_CLASSIFICATION	i18n[graph.format=Format ...]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScripts=Scripts]
WITHOUT_CLASSIFICATION	i18n[syntax.bold=Bold]
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.coreLabel=core]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.sessionTimezoneLabel=Initialize Session Timezone]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorResolvingFile=Error resolving file name]
WITHOUT_CLASSIFICATION	Copy i18n files to i18n downloads directory
WITHOUT_CLASSIFICATION	i18n[userscript.scriptProps=Script properties]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.title=Results]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.bindclobfailure=bindBlobVar: failed to bind blob using filesystem - attempting to bind blob using memory]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.lastUsed=Last used]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.sql=SQL]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactPersUnit=persitence-unit name:]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.triggerHint=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorCreatingFile=Error occured reading from preferences file: {0}]
WITHOUT_CLASSIFICATION	i18n[ThreadCheckingRepaintManager.workinwrongthread=GUI work done in wrong thread]
WITHOUT_CLASSIFICATION	i18n[TimeDateFunctionsTab.title=Time/Date Functions]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteRefActionCheckboxLabel=Add delete referential action to the FK definition]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.yes=yes]
WITHOUT_CLASSIFICATION	i18n[SupportedRefactoringsTab.title=Supported Refactorings]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.Cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingDrivers=Error saving drivers]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString3=Session: ID={0}, Alias={1}: created at {2}, closed at {3}, finalized at {4}]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.editFactoryProvider=Edit]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.comment=comment]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToExecuteCommand=Failed to execute\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredNone=no support]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.importingDataInto=Importing data into {0}]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.borderTitle=Refactoring Preferences]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.ApplyNow=Apply now]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.multimatchingrows=Muliple rows in DB match current row in table - cannot re-read data.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.schema=Schema]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.fileChooserTitel=Choose export file]
WITHOUT_CLASSIFICATION	i18n[graph.saveGraphImagesToFile=Copy graph to clipboard]
WITHOUT_CLASSIFICATION	i18n[sqlval.logonClose=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.execOnTargets=Execute script on selected targets]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.columnSeparator=Column Separator:]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.updateDownloadFailedMsg=Please consult the log for details]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.objectTreeBackgroundColorChooserDialogTitle=Select Background Color for Object Tree]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.canceleRequested=Query execution cancel requested by user.]
WITHOUT_CLASSIFICATION	i18n[mapdataset.unsupported=<Unsupported>]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.seperatorCharToolTip=Specify the character that is used to seperate the columns in this file (e.g. ',' or ';')]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.useChar=Seperated by character:]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUsePlain=Use plain editor]
WITHOUT_CLASSIFICATION	i18n[Application.error.loadcolsinfo=Unable to load Edit 'Where' Columns selections.]
WITHOUT_CLASSIFICATION	i18n[graph.showQualifiedTableNames=Show qualified table names]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptClass=Script class]
WITHOUT_CLASSIFICATION	i18n[sqlscript.scriptWritten=Script was written to the SQL editor of the main session window.]
WITHOUT_CLASSIFICATION	tell user that there was a problem i18n[baseDataSetViewerDestination.error=Error]
WITHOUT_CLASSIFICATION	i18n[graph.refreshTable=Refresh table]
WITHOUT_CLASSIFICATION	i18n[oracle.displaySnstanceDetails=Display instance details]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.actionNotFound=Action {0} not found in ActionCollection.]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.closeButtonLabel=Close]
WITHOUT_CLASSIFICATION	i18n[userscript.execOutput=Script execution output]
WITHOUT_CLASSIFICATION	Copy core files minus any i18n jars to core downloads directory
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.pluginLabel=plugin]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.desc=Description:]
WITHOUT_CLASSIFICATION	i18n[ValidatorGlobalPreferencesTab.hint=Preferences for SQL validation]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.FIXED_VALUE=Fixed value]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.norowsupdated=No rows updated.]
WITHOUT_CLASSIFICATION	i18n[userscript.confirmRemove=Do you want to remove script {0} from the list?]
WITHOUT_CLASSIFICATION	i18n[i18n.executingCommand=Executing command: {0}]
WITHOUT_CLASSIFICATION	i18n[mmsql.textFiles=Text Files]
WITHOUT_CLASSIFICATION	i18n[editextras.errorProcessingFormat=Error processing Format SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.monitor=Monitor]
WITHOUT_CLASSIFICATION	i18n[PostgreSqlXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[ModifyDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[sqlval.user=User:]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.value=Value]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.displaydocument=Error displaying document]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.channelLabel=Channel:]
WITHOUT_CLASSIFICATION	i18n[mysql.copyTable=Copy Table...]
WITHOUT_CLASSIFICATION	i18n[LockDetailsTab.hint=Display Locks]
WITHOUT_CLASSIFICATION	i18n[syntax.osterWarning=You are using the Oster editor. Please consider using the Netbeans editor. See menu File --> New Session Properties --> Syntax]
WITHOUT_CLASSIFICATION	i18n[ResultTab.infoTabTitle=Info]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.general=General]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.nonStickyPanel=Cannot make a cancel panel sticky]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelSucceededLate=Canceling statement succeeded now. But took longer than one second.]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlExecTabs=SQL Execution Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileError=File Name Error]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.NoConfigToRemove=No configuration selected to remove.]
WITHOUT_CLASSIFICATION	i18n[syntax.errAbrev=error / abreviation]
WITHOUT_CLASSIFICATION	i18n[userscript.showInStandardMenues1=Show in standard menues]
WITHOUT_CLASSIFICATION	i18n[i18n.noEditorCommand=Can not open files withou an editor command.]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.header=SQuirreL SQL Client Application Dump {0}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError5=Export Error]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.qualifyCheckboxLabel=Qualify table names in scripts with schema]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.defaultFormat=Use default format ]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesTab.title=Refactoring]
WITHOUT_CLASSIFICATION	i18n[syntax.prefSyntax=Syntax]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboRegEx=regular exp]
WITHOUT_CLASSIFICATION	i18n[ObjectTreeTab.title=Objects]
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.copyingRecordsLabel=Copying records]
WITHOUT_CLASSIFICATION	i18n[ArtifactStatus.translationLabel=translation]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.maptype=Couldn't map type for table='{0}' column='{1}']
WITHOUT_CLASSIFICATION	i18n[mysql.btRemove=Remove]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.error.systemprops=Error occured displaying System Properties]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.tolowercase=tolowercase]
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.PROCEDURE, new ProcedureSourceTab(i18n.SHOW_PROCEDURE_SOURCE));
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString2=Session: ID={0}, Alias={1}: created at {2}]
WITHOUT_CLASSIFICATION	i18n[DefaultDatabaseExpander.error.retrieveuserroles=Unable to retrieve user roles]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.data=Data]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.removeMultiLineCommentLabel=Remove multi-line comments (...) from SQL before executing
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.commandChooserTitel=Choose command executable]
WITHOUT_CLASSIFICATION	i18n[graph.noSel=No selection]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.pageloaded=Page loaded.]
WITHOUT_CLASSIFICATION	i18n[oracle.sorts=Sorts]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.title=Session startup time hint]
WITHOUT_CLASSIFICATION	i18n[i18n.executingCommandFailed=Execution failed with error: {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.displayDetails=Display index details]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.applyFilter=Apply]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.title=Name of SessionFactorImpl provider]
WITHOUT_CLASSIFICATION	label for type combo - used to enable/disable text associated with the combo i18n[dataTypeBlob.read=Read]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.withHeaders=Include column headers]
WITHOUT_CLASSIFICATION	i18n[mssql.currentActivity=Current Activity]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError=Export Error]
WITHOUT_CLASSIFICATION	i18n[ProgressCallBackDialog.initialLoadingPrefix=Loading...]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptAdminErr=Err Msg]
WITHOUT_CLASSIFICATION	i18n[ActionCollection.createActionInfo=Attempting to load action class - {0}]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.xmlWarning=XML Warning]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingKeywords=Loading keywords]
WITHOUT_CLASSIFICATION	i18n[mssql.general=General]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.nullableLabel=Nullable: ]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotCreateTempFile=Cannot create temp file..\nError was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.procedureSeparatorToolTip=Multiple statements within a procedure or function can be terminated with this.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheFilePathNotExists=Cache file for Alias "{0}" does not exist. If it existed the path would be: {1}]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.installOptionsLabel=Install Options]
WITHOUT_CLASSIFICATION	add button to execute external command i18n[popupeditableIoPanel.execute34=Execute]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.dropPrimaryKeyUnsupported={0} doesn''t support dropping primary keys]
WITHOUT_CLASSIFICATION	i18n[mssql.objectsOn=Objects on {0}:]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.title=Update Summary]
WITHOUT_CLASSIFICATION	i18n[hibernate.HibernateTabPanel.openConfigs=Open Hibernate configurations]
WITHOUT_CLASSIFICATION	i18n[oracle.sessionDetails=Details]
WITHOUT_CLASSIFICATION	i18n[graphToFile.ImageFileSpec=JPG image format]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.replace=replace]
WITHOUT_CLASSIFICATION	i18n[CopyTablesCommand.progressDialogTitle=Analyzing FKs in Tables to Copy]
WITHOUT_CLASSIFICATION	i18n[DataImportGlobalPreferencesTab.title=Data import]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.spWithoutParams=SP without params]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.unquoteHQL=Unquote HQL]
WITHOUT_CLASSIFICATION	i18n[syntax.selColor=Select Color]
WITHOUT_CLASSIFICATION	i18n[EditWhereColsAction.singleObjectMessage=You must have a single table selected to limit the colums used in the Edit WHERE clause]
WITHOUT_CLASSIFICATION	i18n[sqlval.logonOk=OK]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.updateCheckTitle=Update Check]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.col.prefix=Prefix]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.updateidenticalrows=This operation will update {0} identical rows.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileDoesNotExist=File {0} does not exist,\nor is not a readable, normal file.\nPlease enter a valid file name or use Browse to select a file.]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUseNetbeans=Use Netbeans editor (recommended)]
WITHOUT_CLASSIFICATION	i18n[userscript.showInStandardMenues=Show in standard menues]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.quoteHQLsb=Quote HQL as StingBuffer]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.url=JDBC Url (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[syntax.dataTypes=Data Types]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.title=Update Manager]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.classpathEntryDesc=Jars, Zips or directories]
WITHOUT_CLASSIFICATION	i18n[syntax.replaceNetbeansOnly=Replace is only available when the Netbeans editor is used.\nSee menu File --> New Session Properties --> Tab Syntax]
WITHOUT_CLASSIFICATION	i18n[Session.driverCompliance=The driver being used for alias ''{0}'' is not JDBC 2.1 compliant.\nYou should consider getting a more recent version of this driver]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.dateFormat=Date format]
WITHOUT_CLASSIFICATION	i18n[InformixExceptionFormatter.positionLabel=Position: ]
WITHOUT_CLASSIFICATION	i18n[cellDataPopup.valueofColumn=Value of column {0}]
WITHOUT_CLASSIFICATION	i18n[sqlscript.enterNameOfTable=Enter name of table:]
WITHOUT_CLASSIFICATION	i18n[syntax.resWords=Reserved Words]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptIxAfterEach=Constraints and indexes after each table]
WITHOUT_CLASSIFICATION	i18n[syntax.removeRows=remove selected rows]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.editBookmark=Edit bookmark]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.urlLabel=Url:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextEdit=Edit]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.loadButDontCache=Load but don't cache]
WITHOUT_CLASSIFICATION	i18n[mysql.copyToNewTable=Copy to new Table:]
WITHOUT_CLASSIFICATION	i18n[oracle.bufferPerExec=Buffer Gets per Exec]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.procedures=Procedures]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.functions=Functions]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyButtonLabel=Modify Column]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesTab.title=SQL Scripts]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.localPathLabel=Local Path:]
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.tableHeader.procedures=Procedures]
WITHOUT_CLASSIFICATION	i18n[DumpSessionAction.error=Error occured dumping session: {0}]
WITHOUT_CLASSIFICATION	i18n[graph.showConstr=Show constraint names]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.repositoryTabLabel=Repository]
WITHOUT_CLASSIFICATION	i18n[mssql.options=Options]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReads=Disk Reads]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptCompletedErr=Script completed with errors]
WITHOUT_CLASSIFICATION	i18n[ObjectTreeTab.hint=Show database objects]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.addPrimaryKeyUnsupported={0} doesn''t support adding primary keys]
WITHOUT_CLASSIFICATION	i18n[UdfDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.left=Left]
WITHOUT_CLASSIFICATION	i18n[syntax.osterExplain=Note: The preferable editor is the Netbeans editor. The Netbeans editor\n - is less memory consuming,\n - its highlightning is more exact,\n - can handle many lines well.\n The Oster editor is still there because it can handle very long lines better than the Netbeans editor. This is due to a known bug in the Netbeans editor (Issue #41241). As soon as this bug is fixed the Oster editor will be removed.]
WITHOUT_CLASSIFICATION	i18n[ColumnDiffDialog.sessionLabelPrefix=Session]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.sessionInfo.toString1=Session: ID={0}, Alias={1}: created at {2}, closed at {3}]
WITHOUT_CLASSIFICATION	i18n[graph.addChildTables=Add child tables]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsRemove=Remove]
WITHOUT_CLASSIFICATION	i18n[explainplanexecuter.planTableUnavailableTitle= PLAN_TABLE not found]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactConfiguration=Call "new org.hibernate.cfg.Configuration().configure().buildSessionFactory();"]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefName=Name:]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[sqlscript.dlgCreatTableOfSql=Create table of SQL]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.prefsToolTip=Table names appear in scripts as SCHEMA.TABLE]
WITHOUT_CLASSIFICATION	i18n[mysql.tabStatus=MySQL Table Status]
WITHOUT_CLASSIFICATION	i18n[oracle.diplayScriptDetails=Display script details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[mysql.logs=MySQL Logs]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingTables=Loading tables]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryController.mnuAppendSelectionToEditor=Append selected statements to SQL editor]
WITHOUT_CLASSIFICATION	i18n[userscript.classNotFoundIn=Class {0} found in\n{1}]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnDefaultUnsupported={0} doesn''t support altering a column''s default value]
WITHOUT_CLASSIFICATION	i18n[CSVFileImporter.invalidDateFormat=Invalid date format given]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.statementSeparatorLabel=Statement Separator]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingStoredProcedures=Loading stored procedures]
WITHOUT_CLASSIFICATION	i18n[ThreadCheckingRepaintManager.workinwrongthread=GUI work done in wrong thread]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.tableColumn=Table column]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryItemWrapper.index=Index]
WITHOUT_CLASSIFICATION	File handling controls i18n[popupeditableIoPanel.useFile=Use File: ]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotFindFile=Cannot find file {0}\nCheck file name and re-try export.]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.deleteRosQuestion=Do you wish to delete {0} rows from this table?]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.seeOtherErrs={0}\nDo you wish to see other errors?"]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.example=Save example code for a SessionFactorImpl provider class to ...]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.newFactoryClasspathBorder=Additional classpath entries to create a SessionFactoryImpl]
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerColumns=Display trigger column information]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showIndexSource=Show index source]
WITHOUT_CLASSIFICATION	i18n[HtmlViewerPanel.error.processhyperlink=Error processing hyperlink]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.views=Views]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.executeError2=Execute Error]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.code=SQL code]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.exceptionMsg=Exception was: ]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.title=Drop Table(s)]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noCfgNameMsg=Not a valid configuration name\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.specifySchemas=Specify Schema loading and caching]
WITHOUT_CLASSIFICATION	i18n[codecompletion.listTruncated=Completion list truncated. Narrow by typing to get missing entries.]
WITHOUT_CLASSIFICATION	i18n[sqlval.anonymous=Anonymous]
WITHOUT_CLASSIFICATION	i18n[javaBeanDataSet.value=Value]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[graph.graphSaved=Graph "{0}" saved to "{1}"]
WITHOUT_CLASSIFICATION	i18n[sqlval.descriptivename=SQL Validator plugin]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.error.updatingprogressbar=Error occured updating progress bar]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.lineCommentToolTip=Sequence of characters at the beginning of a line to indicate that whole line is a comment]
WITHOUT_CLASSIFICATION	i18n[mysql.shoeVariables=(MySQL) Show Variables]
WITHOUT_CLASSIFICATION	i18n[userscript.codeTemplateSave=Save]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.connectionErr=Error getting SQL connection data from Hibernate:]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.rereadingdb=There was a problem reported while re-reading the DB. The DB message was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[resultSetMentaDataSet.propName=Property Name]
WITHOUT_CLASSIFICATION	i18n[ScriptWriter.error.nouserhome=The System property <user.home> is null. Cannot determine where to write DBCopy SQL scripts. Disabling writing SQL scripts for DBCopy operations.]
WITHOUT_CLASSIFICATION	i18n[graph.addParentTables=Add parent tables]
WITHOUT_CLASSIFICATION	i18n[syntax.findNetbeansOnly=Find is only available when the Netbeans editor is used.\nSee menu File --> New Session Properties --> Tab Syntax]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToExec=Please select the script to execute]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.weeklyLabel=Weekly]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.classPathAdd=Add classpath entry]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.hostLabel=Host:]
WITHOUT_CLASSIFICATION	i18n[sqlval.technology=Technology:]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.editSQLButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[editextras.time=Time]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigController.noPersistenceUnitName=Missing Persitence-Unit name .\nChanges cannot be applied.]
WITHOUT_CLASSIFICATION	i18n[SplashScreen.info.loadingfile=Loading file - ]
WITHOUT_CLASSIFICATION	i18n[CopyProgressMonitor.analyzingTableMessage=Analyzing table ]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.atStartupLabel=At Startup]
WITHOUT_CLASSIFICATION	i18n[laf.lf=L & F]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptPrimary=Script PRIMARY keys, FOREIGN keys, defaults, and check constraints]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.createFileError=Failed to create file {0}.\nChange file name or select a differnt file for export.]
WITHOUT_CLASSIFICATION	i18n[PleaseWaitDialog.pleaseWait=Please wait while the query is executed]
WITHOUT_CLASSIFICATION	i18n[mssql.delay={0}s delay]
WITHOUT_CLASSIFICATION	i18n[mapdataset.key=Key]
WITHOUT_CLASSIFICATION	i18n[userscript.applicableTo=Scripts applicable to objects of type {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.whiteSpace=White Space]
WITHOUT_CLASSIFICATION	i18n[NumericFunctionsTab.hint=Show all the numeric functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[syntax.textLimitLineVisible=Show text limit line]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError3=Export Error]
WITHOUT_CLASSIFICATION	i18n[mssql.performace=Performance Counters]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactJPA=Call "javax.persistence.Persistence.createEntityManagerFactory("<persitence-unit name>");"]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginsettings=Error retrieving app settings folder for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCSVDlg.exportTitleNew=CSV / MS Excel export]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.hint=Preferences for MySQL]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.AccessibleButSys=Allow accessible Schemas excluding SYS]
WITHOUT_CLASSIFICATION	i18n[mysql.fieldProps=Field Properties:]
WITHOUT_CLASSIFICATION	i18n[MetaDataTab.hint=Show database metadata]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installFailedMessage=Unexpected error while attempting to install updates]
WITHOUT_CLASSIFICATION	i18n[dataTypeJavaObject.readContentsWhenLoaded=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	i18n[ExcelSettingsPanel.xlsSettings=Excel import settings]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.statusBarBackgroundColorBtnLabel=Choose Status Bar Color]
WITHOUT_CLASSIFICATION	i18n[CatalogsTab.hint=Show all the catalogs]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.sqlResultTabs=SQL Results Tabs:]
WITHOUT_CLASSIFICATION	i18n[sqlval.infoBorder=Info]
WITHOUT_CLASSIFICATION	i18n[ProgressBarDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configMultiTableScript=Configuration of multi table scripts]
WITHOUT_CLASSIFICATION	i18n[FormatterSourceTab.noSourceAvailable=No object source code is available]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.closeLabel=Close]
WITHOUT_CLASSIFICATION	i18n[InstallDefaultDriversAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[DriverPropertiesPanel.useDriverProperties=Use driver properties]
WITHOUT_CLASSIFICATION	i18n[ViewSourceTab.display=Show view source]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.loadSchemasCatalogs=Load Schemas/Catalogs into object tree]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.clearButtonLabel=Clear {0}]
WITHOUT_CLASSIFICATION	i18n[graph.chkIsLandscape=Landscape]
WITHOUT_CLASSIFICATION	i18n[oracle.dboutputStayOnTop=Stay on top]
WITHOUT_CLASSIFICATION	i18n[sqlval.disconnected=Disconnected from the SQL Validation web service]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryTable.no=no]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.objectTreeBackgroundColorButtonLabel=Choose Object Tree Color]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.releaseFileDownloadFailedMsg=Release file couldn't be downloaded. Please check your settings.]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.nosqlselected=No SQL selected for execution.]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.hint=Preferences for Oracle]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.showSQLButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError4=Export Error]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.AccessibleAndSys=Allow accessible Schemas and SYS]
WITHOUT_CLASSIFICATION	i18n[RemoveColumnCommand.singleColumnMessage=The table's only column cannot be removed - a table must have a least one column.]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.nocolumns=Table '{0}' in schema '{1}' has no columns to copy]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiCommand=Cannot convert files without a native2Ascii command.]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.info.endmemtimer=Ending memory timer (AboutBox)]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.unableToEdit=Unable to get list of columns, {0}]
WITHOUT_CLASSIFICATION	i18n[oracle.displaySnapshotDetails=Display materialized view details]
WITHOUT_CLASSIFICATION	i18n[editextras.errorRemoveQuotes=Error processing Remove Quotes SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.dbTableName=Database table name]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbms=DBMS]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropErrorMessage=Can't drop all columns - a table must have at least one column
WITHOUT_CLASSIFICATION	add button for Brows i18n[popupeditableIoPanel.browse=Browse]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesTab.hint=Settings for the SQL Script plugin]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.SQLPref=SQL]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingAlials=Error saving aliases]
WITHOUT_CLASSIFICATION	i18n[sqlscript.scriptOnly=Generate script only]
WITHOUT_CLASSIFICATION	i18n[DataCache.msg.driverClassNotFound=Could not find class {0} in neither the Java class path nor the Extra class path of the {1} driver definition:\n{2}]
WITHOUT_CLASSIFICATION	i18n[OracleAliasPrefsPanel.header=Configure Oracle Schema loading properties]
WITHOUT_CLASSIFICATION	i18n[syntax.errors=Errors]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.appearance=Appearance]
WITHOUT_CLASSIFICATION	i18n[LogPanel.logInfoLabel=Logs: Errors {0}, Warnings {1}, Infos {2}]
WITHOUT_CLASSIFICATION	i18n[graph.addTableRefBy=add table referenced by {0}]
WITHOUT_CLASSIFICATION	i18n[ColorPropertiesPanel.instructions=These settings control the background colors...]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingstatus=Error dumping Application Status bean]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.stringVersion=Use String version of Timestamp ]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterSql=Please enter a bookmark sql]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanelController.hint=Oracle Plugin preferences]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.prefClose=Close]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnNullUnsupported={0} doesn''t support altering a column's nullable attribute]
WITHOUT_CLASSIFICATION	i18n[editextras.minute=Minute]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.schemaLabel=Schema:]
WITHOUT_CLASSIFICATION	i18n[sqlscript.storeSqlInTableFailed=An error occured during storing SQL result in table {0}. See messages for details.\nI will create the copy script. You may correct errors and run it again.]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefsExplain=When completing functions SQuirreL doesn't know if a function is a stored procedure or a user defined function. To make code completion of these two kinds of functions convenient SQuirreL offers to configure which way completion should work.]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.spWithoutParams=stored procedure without parameter info: {call mySP()}]
WITHOUT_CLASSIFICATION	i18n[mssql.genereateCreate=Generate the CREATE <object> command for each object]
WITHOUT_CLASSIFICATION	i18n[CatalogsTab.title=Catalogs]
WITHOUT_CLASSIFICATION	i18n[mssql.allUDFs=All user-defined functions]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installUpdatesTitle=Updates Available]
WITHOUT_CLASSIFICATION	i18n[editextras.hour=Hour]
WITHOUT_CLASSIFICATION	i18n[syntax.identifiers=Identifiers]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.installedVersionPrefix=Installed Version:]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.expected=expected]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.addLabel=Add]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[Application.splash.loadeditselections=Loading Edit 'Where' Columns selections...]
WITHOUT_CLASSIFICATION	i18n[CopyExecutor.tablecolmismatch=Column count for table {0} in source database is {1}, but column count for table {2} in destination database is {3}
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.autoBorderLabel=Automatic Updates]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.confirmupdateallrows=The table has no columns that can be SELECTed on.\nAll rows will be updated.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotAccessFile=Cannot access file name {0}\nAborting export.]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteRefActionToolTip=Append ON DELETE ...]
WITHOUT_CLASSIFICATION	some kind of problem - tell user i18n[DataSetUpdateableTableModelImpl.error.deleteFailed=One of the delete operations failed with exception:\n{0}\nDatabase is in an unknown state and may be corrupted.]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.limitSizeOfWhereClause=Limit the size of the WHERE clause used behind the scenes when editing cell contents.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.FactoryProvider=SessionFactoryImpl provider]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFromBackupMessage=Restore SQuirreL to previous version before last update?]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.makeEditable=Make Editable]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextEdit=Edit]
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileExistsButReadOnly={0}\nexists and you cannot write to it.\nPlease use a different name.]
WITHOUT_CLASSIFICATION	i18n[Application.error.savecolsinfo=Unable to write Edit Where Cols options to persistant storage.]
WITHOUT_CLASSIFICATION	i18n[cellDataPopUp.conversionError=Conversion Error]
WITHOUT_CLASSIFICATION	i18n[graph.renameGraph=Rename graph]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.col.config=Configuration]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[DataTypesTab.hint=Show all the data types available in DBMS]
WITHOUT_CLASSIFICATION	i18n[TablePriviligesTab.title=Privileges]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.charset=Charset:]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadpluginlicence=Error generating Licence entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[SQLFilterSheet.contentsMsg=You must have the Contents Tab selected to activate the SQL Filter]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.notANormalFile=File is not a normal file.\n Cannot do export to a directory or system file.]
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.paths=SQuirreL paths]
WITHOUT_CLASSIFICATION	i18n[oracle.details=Details]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.title=SybaseASE]
WITHOUT_CLASSIFICATION	i18n[mssql.monitorAsOf=Monitor (as of {0,date,full})]
WITHOUT_CLASSIFICATION	i18n[graph.landscape=landscape]
WITHOUT_CLASSIFICATION	i18n[laf.broderLaf=Look and Feel]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executequery=executeQuery: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	i18n[ResultTab.limitMessage=Limited to <font color='red'> {0} </font> rows]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.error=Error]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.transferOptionsBorderLabel=Transfer Options]
WITHOUT_CLASSIFICATION	i18n[syntax.font=Select font color]
WITHOUT_CLASSIFICATION	i18n[syntax.prefSyntaxHint=Syntax Highlighting]
WITHOUT_CLASSIFICATION	i18n[favs.deletelFolder=Are you sure to want to delete the folder \"{0}\" and all of its contents?]
WITHOUT_CLASSIFICATION	i18n[syntax.switchingNotSupported=Switching the editor of a runninig session is not supported.\nYou may switch the entry area in the New Session Properties dialog]
WITHOUT_CLASSIFICATION	i18n[laf.otmFiles=OTM files]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.appendSql=Append]
WITHOUT_CLASSIFICATION	i18n[ColumnPriviligesTab.title=Column Privileges]
WITHOUT_CLASSIFICATION	i18n[ToolsPopupController.toolspopupmsg=Please try out the Tools popup by hitting ctrl+t in the SQL Editor. Do it three times to stop this message.]
WITHOUT_CLASSIFICATION	i18n[graph.orderPksConstr=order PKs/constraints on top]
WITHOUT_CLASSIFICATION	i18n[resultFrame.stayOnTop=Stay on top]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.backupFailedMessage=Backup of existing files failed. Installation cannot proceed]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.udfWithParams=UDF with params]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypeSearchable=supports all WHERE]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.success={0,choice,0#No records|1#One record|1<{0} records} successfully inserted.]
WITHOUT_CLASSIFICATION	i18n[graph.btnCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[syntax.configAutoCorr=Configure auto correct /abreviation]
WITHOUT_CLASSIFICATION	i18n[SystemFunctionsTab.title=System Functions]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptUsers=Script database users and database roles]
WITHOUT_CLASSIFICATION	i18n[mysql.defaultValue=Default Value]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.showButtonLabel=Show SQL]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.cfgName=Configuration]
WITHOUT_CLASSIFICATION	i18n[DeleteTablesCommand.progressDialogTitle=Analyzing tables to delete]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.allObjects=All Objects]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptingOptionsDlg=Scripting options allow you to specify how an object will be scripted.]
WITHOUT_CLASSIFICATION	i18n[sqlval.anonymous2=Anonymous]
WITHOUT_CLASSIFICATION	i18n[ViewLogsSheet.error.clearlogcontents=Error clearing the log contents]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.notWriteable=File is not writeable.\nChange file permissions or select a differnt file for export.]
WITHOUT_CLASSIFICATION	checkbox for whether to interpret input leniently or not i18n[dataTypeTime.inexact=allow inexact format on input]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgOk=OK]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheDeleteFailed=Could not delete {0}]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportCompleteTable=Export complete table]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[syntax.comments=Comments]
WITHOUT_CLASSIFICATION	i18n[ColumnsTab.hint=Show columns for the selected table]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.reset=Reset]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.refreshSchemas=Connect database to refresh Schema table]
WITHOUT_CLASSIFICATION	i18n[i18n.noNativeToAsciiOutDirNoDir=native2Ascii output dir is not a directory. native2Ascii will not be executed.]
WITHOUT_CLASSIFICATION	i18n[editextras.errorRemoveNewLines=Error processing Remove NewLines SQL command: {0}]
WITHOUT_CLASSIFICATION	i18n[FileEditorDropTargetListener.internalErrorMessage=Internal error occurred. See log for details]
WITHOUT_CLASSIFICATION	i18n[graph.new=New]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.lineSeparatorLabel=Line Separator:]
WITHOUT_CLASSIFICATION	i18n[graph.viewTableInObjectTree=View table in Object tree]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.queryStatistics=Query {0} of {1} elapsed time (seconds) - Total: {2}, SQL query: {3}, Building output: {4}]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.export44=Export]
WITHOUT_CLASSIFICATION	i18n[graph.selGraph=Select graph]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.top=Top]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNullable=true]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.newConfig=New]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.prefsToolTip=Table names appear in scripts as SCHEMA.TABLE]
WITHOUT_CLASSIFICATION	i18n[DBCopyGlobalPreferencesTab.hint=Preferences for DB Copy]
WITHOUT_CLASSIFICATION	i18n[mssql.filesToGenerate=Files to Generate]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.configName=Configuration name]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.classpath=Classpath]
WITHOUT_CLASSIFICATION	i18n[mssql.includeHeaders=Include descriptive headers in the script files]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.title=Hibernate]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOverwrite=File {0} already exists.\n\nDo you wish to overwrite this file?]
WITHOUT_CLASSIFICATION	i18n[ColumnsTab.title=Columns]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportSelection=Export selection]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.statementSeparatorToolTip=When multiple statements are selected, use this to separate them into single statements.]
WITHOUT_CLASSIFICATION	i18n[sqlval.dbmsName=DBMS Name:]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.licences=Licences]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.quoteCheckboxLabel=Quote identifiers in scripts]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.dailyLabel=Daily]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOpenError=There was an error opening file {0}.\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	i18n[userscript.propsDlgCheck=Check]
WITHOUT_CLASSIFICATION	i18n[ProcedureSourceTab.cLanguageProcMsg=This is a C-language routine. The source code is unavailable.]
WITHOUT_CLASSIFICATION	i18n[laf.lafWarning=Note: Controls may not be drawn correctly after changes in this panel until the application is restarted.]
WITHOUT_CLASSIFICATION	set up dialog to ask user if it is ok to proceed IMPORTANT: this dialog is SYNCHRONOUS (ie. we do not proceed until user gives a response). This is critical since this function provides a return value to its caller that depends on the user input. i18n[baseDataSetViewerDestination.warning=Warning]
WITHOUT_CLASSIFICATION	i18n[graph.zoomPrint=Zoom/Print]
WITHOUT_CLASSIFICATION	i18n[graph.removeFoldingPoint=remove folding point]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.cacheDeleted=Deleted {0}]
WITHOUT_CLASSIFICATION	i18n[ConnectionStatusTab.hint=Connection Status]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.editWhereColumns=Edit 'WHERE' columns]
WITHOUT_CLASSIFICATION	i18n[mssql.allViews=All views]
WITHOUT_CLASSIFICATION	i18n[sqlscript.tableScriptCancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.yes=YES]
WITHOUT_CLASSIFICATION	i18n[DropTableDialog.cascadeLabel=Cascade Constraints:]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsAdd2=Add...]
WITHOUT_CLASSIFICATION	i18n[ErrorStream.oneerror=1 error detected]
WITHOUT_CLASSIFICATION	i18n[SessionSQLPropertiesPanel.removeMultiLineComment=Remove multi line comment (...) from SQL before sending to database]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.useDefaultFormat=Use default format ({0})]
WITHOUT_CLASSIFICATION	i18n[mysql.selectSingleTable=Must select a single table]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.replaceFile=(In command, the string {0} is replaced by the file name when Executed.)]
WITHOUT_CLASSIFICATION	i18n[userscript.tableColName=Name]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.qureyParams=Query Parameters]
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.timestampInWhere=Do not use Timestamp in WHERE clause]
WITHOUT_CLASSIFICATION	i18n[dataTypeString.limitReadOnly=Limit read only on columns with these names:]
WITHOUT_CLASSIFICATION	i18n[firebird.domainDetails=Display domain details]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	i18n [MemoryPanel.gcStatus={0}\n\n Sessions waiting for garbage collection:\n ==================================================\n {1}\n Sessions open:\n ==================================================\n {2}\n Sessions garbage collected:\n ==================================================\n {3}\n]
WITHOUT_CLASSIFICATION	i18n[oracle.sortsPerExec=Sorts per Row]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.exec=Executing SQL]
WITHOUT_CLASSIFICATION	i18n[CodeCompletionPreferencesPanel.maxLastSelectedCompletionNames=If you call code completion without being in the scope of a table, for which number of tables the parser last found would you like to see colums on top of the completion list?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.invalidSeparator=You must provide a single separator character or check "Use tab" to use the tab character.]
WITHOUT_CLASSIFICATION	i18n[AliasesListInternalFrame.error.ctrlF4key=Probably closed by the ctrl F4 key. See BasicDesktopPaneUi.CloseAction]
WITHOUT_CLASSIFICATION	i18n[laf.menuFontEanbled=Enabled]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.uncomment=uncomment]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.sepeartorTab=Use tab character]
WITHOUT_CLASSIFICATION	i18n[DefaultDatabaseExpander.error.retrieveschemaprivs=Unable to retrieve schema privileges]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dataTypeTime.useDefaultFormat2= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[sqlval.version=Version:]
WITHOUT_CLASSIFICATION	i18n[ResultTab.rowCountLabel=Row Count:]
WITHOUT_CLASSIFICATION	i18n[codecompletion.beingLoaded=Code competion infomation is still being loaded.\nTry again later.]
WITHOUT_CLASSIFICATION	i18n[KeywordsTab.hint=Show all the non-standard Keywords available in DBMS]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.sql=SQL:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.showAscii=Show ASCII as chars]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.find=find]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.softwareVersionCurrentMsg=This software's version is the most recent]
WITHOUT_CLASSIFICATION	i18n[UpdateSummaryDialog.applyLabel=Apply Changes]
WITHOUT_CLASSIFICATION	i18n[dataTypeOther.readContentsWhenLoaded=Read contents when table is first loaded and display as string]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errWhileExecutin=Error while executing command.\nThe command was:\n {0}\nThe error was:\n{1}]
WITHOUT_CLASSIFICATION	add button for applying file & cmd info without doing anything else i18n[popupeditableIoPanel.applyFile=Apply File & Cmd]
WITHOUT_CLASSIFICATION	i18n[graph.name=Name]
WITHOUT_CLASSIFICATION	i18n[hashtabledataset.unsupported=<Unsupported>]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noSQLPanel=To run a bookmark you must open this window\nusing the "Edit Bookmarks" toolbar button of a Session window.\nThe bookmars SQL Code will then be written to the Session's SQL editor.]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.autocorr=autocorr]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.changesRecordedTitle=Changes Recorded]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.useDefaultFormat=Use default format ({0})]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.NULL=NULL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateLable1=Set]
WITHOUT_CLASSIFICATION	i18n[ColumnDiffDialog.missingLabel=Missing]
WITHOUT_CLASSIFICATION	i18n[oracle.triggerColumns=Columns]
WITHOUT_CLASSIFICATION	i18n[mssql.extProps=Include extended properties]
WITHOUT_CLASSIFICATION	i18n[syntax.textLimitLineWidth=Text limit line width]
WITHOUT_CLASSIFICATION	i18n[CreateDriverAction.error.selectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[ExcelSettingsPanel.sheetName=Sheet name]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.selectionNeeded=You must select something in the table to delete.]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.toObtainSessionFactFactoryProvider=Invoke the user defined provider method below:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.errorGettingPath=Error getting full path name for selected file]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.generalSettings=General settings for the current session]
WITHOUT_CLASSIFICATION	i18n[Session.driverCompliance3.0=The driver being used for alias ''{0}'' is not JDBC 3.0 compliant.\nYou should consider getting a more recent version of this driver]
WITHOUT_CLASSIFICATION	i18n[javaBeanDataSet.name=Property Name]
WITHOUT_CLASSIFICATION	i18n[ProgressCallBackDialog.defaultLoadingPrefix=Loading:]
WITHOUT_CLASSIFICATION	i18n[SchemaTableCboItem.schemaID.dontLoad=Don't load]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.ConfiguirationDef=Configuration definition]
WITHOUT_CLASSIFICATION	i18n[LogPanel.viewLastLog=Press to view last log entry]
WITHOUT_CLASSIFICATION	i18n[CopyTablesCommand.loadingPrefix=Analyzing table:]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.showErrorOffsetTT=Creates and uses a user-defined function that is used to determine the syntax error token]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.precisionLabel=Precision: ]
WITHOUT_CLASSIFICATION	i18n[mssql.oneFile=Create one file]
WITHOUT_CLASSIFICATION	i18n[syntax.operators=Operators]
WITHOUT_CLASSIFICATION	i18n[userscript.classNotFound=Class {0} not found]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsAdd=Add...]
WITHOUT_CLASSIFICATION	i18n[mysql.structure=Structure]
WITHOUT_CLASSIFICATION	i18n[SQLPanel.copylastbutton.hint=Copy current SQL history to entry area]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.portLabel=Port:]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.applyConfigChanges=Apply changes to this configuration]
WITHOUT_CLASSIFICATION	i18n[editextras.day=Day]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.cancelTimedOut=Failed to cancel statement within one second. Perhaps your driver/database does not support cancelling statements. If cancelling succeeds later you'll get a further messages.]
WITHOUT_CLASSIFICATION	i18n[DriversList.tooltiptext=List of database drivers that can be used to configure an alias]
WITHOUT_CLASSIFICATION	i18n[RowNumberTableColumn.rowNumber=Row Number]
WITHOUT_CLASSIFICATION	i18n[userscript1.scriptClass=Script class]
WITHOUT_CLASSIFICATION	i18n[userscript.enterScriptClass=Please enter a script class]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.info.identicalrows=This operation will result in {0} identical rows.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvCommand.failedToWriteFile=Failed to write file\n{0}\nError message\n{1}\nSee last log entry for details.]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.Execute=Execute SQL]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.borderTitle=SQL Script Preferences]
WITHOUT_CLASSIFICATION	i18n[sqlval.connected=Connected to the SQL Validation web service]
WITHOUT_CLASSIFICATION	i18n[editWhereColsSheet.shouldIncludePKs=The 'use' window should include at least the primary keys for the table.]
WITHOUT_CLASSIFICATION	i18n[DerbyDialect.columnLengthMessage=Derby only allows varchar column length to be increased]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[graph.unit=Unit]
WITHOUT_CLASSIFICATION	i18n[PluginSummaryDialog.unload=Unload]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.formatCSV=Export CSV file]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.editButtonLabel=Edit SQL]
WITHOUT_CLASSIFICATION	i18n[ReconnectAction.confirmReconnect=Close the current connection to the database and open a new one?]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.updateRefActionCheckboxLabel=Add update referential action to the FK definition]
WITHOUT_CLASSIFICATION	i18n[generalPropertiesPanel.right=Right]
WITHOUT_CLASSIFICATION	set up Cancel button i18n[cellDataPopup.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.welcome=Welcome]
WITHOUT_CLASSIFICATION	label for the date format combo, used to enable/disable text i18n[dateTypeTimestamp.orLocaleDependend= or locale-dependent format:]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterName=Please enter a bookmark name with no blanks]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesController.title=Schemas]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.updateCheckFailedTitle=Update Check Failed]
WITHOUT_CLASSIFICATION	i18n[graph.invalidNumberFormat=Invalid number format. Can not calculate new unit.]
WITHOUT_CLASSIFICATION	i18n[SQLPanel.openSqlHistory.hint=Open SQL History]
WITHOUT_CLASSIFICATION	i18n[editextras.escapeDate=Escape date]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderController.fileCreateFailed=File {0} could not be created: {1}]
WITHOUT_CLASSIFICATION	i18n[sessionPropertiesPanel.schemaPrefix=Limit Schema Objects using these comma-delimited prefixes:]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.noXml=The data does not contain any XML tags. No reformatting done.]
WITHOUT_CLASSIFICATION	i18n[CreateDataScriptOfCurrentSQLCommand.noQuery=No query found to create the script from.]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.congen=Error generating Contents file]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.rowsSelected={0} Row(s) Selected]
WITHOUT_CLASSIFICATION	i18n[SystemFunctionsTab.hint=Show all the system functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.buffer.getsPerRow=Buffer Gets per Row]
WITHOUT_CLASSIFICATION	i18n[oracle.displayTriggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[Application.info.setjdbcdebuglogsuccess=JDBC debug log set to output stream successfully]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filtered=Filtered]
WITHOUT_CLASSIFICATION	i18n[graph.scriptTable=Script table]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodeUserMarks=User bookmarks]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.installUpdatesMessage=Updates are ready to be installed. Install them now?]
WITHOUT_CLASSIFICATION	i18n[oracle.firstLoadTime=First Load Time]
WITHOUT_CLASSIFICATION	i18n[laf.tabHint=Fonts]
WITHOUT_CLASSIFICATION	i18n[editextras.convertStringBufErr=Error executing convert to StringBuffer command: {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.abrevclose=Close]
WITHOUT_CLASSIFICATION	i18n[graph.graphRemoved=Removed graph file "{0}"]
WITHOUT_CLASSIFICATION	i18n[firebird.triggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[ShowDriverWebsiteCommand.comfirm=No WebSite URL for the specified driver. Would you like to add one?]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptCompleted=Script completed]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.hint=Display index details]
WITHOUT_CLASSIFICATION	i18n[mysql.grants=MySQL Grants]
WITHOUT_CLASSIFICATION	i18n[Application.error.showhelpwindow=Error showing help window]
WITHOUT_CLASSIFICATION	i18n[graph.hideScrollBars=Hide scrollbars]
WITHOUT_CLASSIFICATION	i18n[ConnectionStatusTab.title=Status]
WITHOUT_CLASSIFICATION	i18n[SchemaInfoCacheSerializer.beginStore=Starting to write schema cache for Alias {0}. file: {1}]
WITHOUT_CLASSIFICATION	i18n[mssql.activity=Displays the current activity on the SQL Server.]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[graph.formats=Formats]
WITHOUT_CLASSIFICATION	i18n[oracle.sessionStatistics=Session Statistics]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.UDFWithoutParams=user defined function without parameter info: myFunct()]
WITHOUT_CLASSIFICATION	i18n[LogPanel.openLogs=Press to open logs]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	String NULL = "<null>"; i18n[resultSetMentaDataSet.val=Value]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptPermission=Script object-level permissions]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.lengthLabel=Length: ]
WITHOUT_CLASSIFICATION	i18n[graph.newGraph=New table graph]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.nodeSquirrelMarks=SQuirreL bookmarks]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.dialectLabel=Dialect: ]
WITHOUT_CLASSIFICATION	i18n[TimeDateFunctionsTab.hint=Show all the Time/Date functions available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.rowsPerExec=Rows per Exec]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.filterCboContains=contains]
WITHOUT_CLASSIFICATION	i18n[dataTypeBlob.readOnFirstLoad=Read contents when table is first loaded:]
WITHOUT_CLASSIFICATION	i18n[DerbyPlugin.prefsHint=Set preferences for Derby Plugin]
WITHOUT_CLASSIFICATION	i18n[graphToFile.fileChooserTitle=Save image file(s)]
WITHOUT_CLASSIFICATION	i18n[mssql.msdos=MS-DOS text (OEM)]
WITHOUT_CLASSIFICATION	i18n[mysql.displayProcesses=(MySQL) Display database processes]
WITHOUT_CLASSIFICATION	i18n[exportconfig.ioErrorWritingTo=IO Error writing to\n{0}]
WITHOUT_CLASSIFICATION	i18n[SQLScriptPreferencesPanel.deleteActionLabel=Action to take on delete:]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.table=Table]
WITHOUT_CLASSIFICATION	i18n[LogPanel.titleError=Last log entry (Entry type: ERROR)]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.btnTextView=View]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindclobmem=bindClobVarInMemory: binding '{0}' bytes]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanel.Description= "Interactions with Schema Alias properties (see 'Schemas' tab):\n \n 1. 'Load all Schemas, cache none': Oracle Alias properties will take effect immediately.\n \n 2. 'Load and cache all Schemas': Oracle Alias properties will take effect on next 'Refresh all' inside a Session.\n \n 3. 'Specify Schema loading and Caching': Oracle Alias properties will take effect when the Schemas table on the 'Schemas' tab is refreshed.\n \n Note: If Schema Alias properties are set to load all cache none and Oracle Alias properties is set to 'Allow all Schemas' this may result in very long Session startup time.]
WITHOUT_CLASSIFICATION	i18n[dataTypeDate.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.error.dumpingsystemprops=Error dumping metadata]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.hideRecycleBinCheckBoxToolTip=Recycle Bin tables are a Flashback Database Option in Oracle 10g]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToDel=Please select the script to delete]
WITHOUT_CLASSIFICATION	i18n[HibernateConfigPanel.config=Configuration]
WITHOUT_CLASSIFICATION	i18n[DriversListInternalFrame.error.ctrlF4key=Probably closed by the ctrl F4 key. See BasicDesktopPaneUi.CloseAction]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.nullableTypeNoNulls=false]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[OraclePluginPreferencesPanel.hideRecycleBinCheckBoxLabel=Remove Recycle Bin Tables from the Object Tree]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.truncateTable=Truncate table before inserting data]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.copyButton=Copy image from selected tab]
WITHOUT_CLASSIFICATION	i18n[AbstractRefactoringDialog.cancelButtonLabel=Cancel]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.useCustomQTToolTip=Gives enhanced capabilities over the default query tokenizer for handling {0} scripts]
WITHOUT_CLASSIFICATION	i18n[oracle.parseSchema=Parse Schema]
WITHOUT_CLASSIFICATION	i18n[graph.addTableRefByNoHit=add table referenced by (no hit on FK)]
WITHOUT_CLASSIFICATION	i18n[sqlparam.quoteValues=Quote Values]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.statusLableSuccessMsg=Connected Successfully]
WITHOUT_CLASSIFICATION	i18n[Application.error.setlaf=Error setting LAF]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderDialog.ok=OK]
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.cancel=Cancel]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.commandReturnNot0=The convention for command returns is that 0 means success, but this command returned {0}.\nDo you wish to import the file contents anyway?]
WITHOUT_CLASSIFICATION	i18n[dataTypeJavaObject.sqlJavaObjectType=SQL JavaObject (SQL type 2000)]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.useGlobalPrefsFormatingExcel=Use formating as configured in Global Prefs (recommended for MS Excel)]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableUpdateLable2=in all Schemas to]
WITHOUT_CLASSIFICATION	i18n[firebird.triggerDetails=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.enterDescription=Please enter a bookmark description]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.bindbloblength=bindBlobVarInFile: writing '{0}' bytes.]
WITHOUT_CLASSIFICATION	i18n[DerbyPluginPreferencesPanel.readClobsFullyCheckBoxLabel=Enable extended Derby CLOB support]
WITHOUT_CLASSIFICATION	i18n[SessionStartupTimeHintDlg.text=This Session seems to take considerable time to load. You may configure Alias Schema Properties to improve startup performance.]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.insert=Insert]
WITHOUT_CLASSIFICATION	i18n[mysql.tableNamelbl=Table Name:]
WITHOUT_CLASSIFICATION	i18n[userscript.scriptPropsName=Name]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.enableAutoUpdate=Enable Automatic Updates]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.primaryKeyTitle=Choose column(s) for primary key]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorWritingPrefs=Error occured writing to preferences file: {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.remove=<< Remove]
WITHOUT_CLASSIFICATION	i18n[sqlval.pwdPref=Password:]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.loadAllAndCacheNone=Load all Schemas, cache none]
WITHOUT_CLASSIFICATION	i18n[syntax.hasBeenAutocorr={0} has been auto corrected / extended to {1}. To configure auto correct / abreviations see Menu Session --> Syntax --> Configure auto correct / abreviation]
WITHOUT_CLASSIFICATION	i18n[OracleXmlTypeDataTypeComponent.cellErrorMsg=<Error: see log file>]
WITHOUT_CLASSIFICATION	i18n[syntax.selColor2=Select Color]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.text=Text]
WITHOUT_CLASSIFICATION	i18n[sqlval.settingsAnon=Anonymous]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.noFile=No File Selected]
WITHOUT_CLASSIFICATION	i18n[CodeCompletionPreferencesPanel.numberOfTables=number of tables]
WITHOUT_CLASSIFICATION	i18n[firebird.showView=Show view source]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnCommentUnsupported={0} doesn''t support column comments]
WITHOUT_CLASSIFICATION	i18n[favs.savedQueries=Saved Queries]
WITHOUT_CLASSIFICATION	i18n[PostgresPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[FactoryProviderController.fileCreated=File {0} has been successfully created.]
WITHOUT_CLASSIFICATION	i18n[TableTypesTab.title=Table Types]
WITHOUT_CLASSIFICATION	i18n[SpecialColumnMapping.SKIP=Skip]
WITHOUT_CLASSIFICATION	i18n[GeneralPreferencesPanel.squirrelUserPath=User directory: -userdir {0}]
WITHOUT_CLASSIFICATION	i18n[graph.dina3=Din A 3]
WITHOUT_CLASSIFICATION	Impossible.
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.siteTypeLabel=Site Type:]
WITHOUT_CLASSIFICATION	i18n[MyURLClassLoader.noAssignCheck=Failed to load {0} in {1} to check if it is assignable to {2}. Reason: {3}]
WITHOUT_CLASSIFICATION	i18n[ImportTableDataCommand.sqlErrorOccured=An error occured while reading database data.] i18n[ImportTableDataCommand.error=Error]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.tablenotfound=Couldn't locate table '{0}' in schema '(1)']
WITHOUT_CLASSIFICATION	i18n[laf.menus=Menus]
WITHOUT_CLASSIFICATION	i18n[graph.invalidName=Invalid name]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.executeError=Execute Error]
WITHOUT_CLASSIFICATION	i18n[mssql.unicode=International text (Unicode)]
WITHOUT_CLASSIFICATION	i18n[ImportDataIntoTableExecutor.sqlException=A database error occured while inserting data] i18n[ImportDataIntoTableExecutor.error=Error]
WITHOUT_CLASSIFICATION	i18n[DownloadStatusEventHandler.changesRecordedMsg=Requested changes will be made when SQuirreL is restarted]
WITHOUT_CLASSIFICATION	i18n[WhereClausePanel.operatorsLabel=Operators]
WITHOUT_CLASSIFICATION	i18n[graph.height=Height]
WITHOUT_CLASSIFICATION	i18n[InformixExceptionFormatter.notAvailableMsg=Not Available]
WITHOUT_CLASSIFICATION	i18n[mysql.hintTabStatus=(MySQL) Table Status]
WITHOUT_CLASSIFICATION	i18n[syntax.addRow=Add row]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadlicencefile=Error retrieving Licence file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerTablePanel.textCantBeConverted=The given text cannot be converted into the internal object.\nThe database has not been changed.\nThe conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[mysql.processes=MySQL Processes]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.noPK=The table ''{0}'' doesn't have a primary key.]
WITHOUT_CLASSIFICATION	i18n[CancelStatementThread.closeFailed=Failed to close statement. Propably the driver/RDDBMS does not support canceling statements. See logs for further details ({0})]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.malformedXml=Possible mal-formed XML:\n Starting tag was: {0}\nEnding Tag was: {1}\nContinuing with reformatting XML."]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.hint=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[syntax.corExt=correction / extension]
WITHOUT_CLASSIFICATION	i18n[oracle.displaysSequenceDetails=Display sequence details]
WITHOUT_CLASSIFICATION	i18n[MemoryPanel.statusDialogTitle=Session garbage collection status]
WITHOUT_CLASSIFICATION	i18n[mssql.refreshNow=Refresh Now]
WITHOUT_CLASSIFICATION	i18n[rowDataInputFrame.propName=Input New Row Data]
WITHOUT_CLASSIFICATION	i18n[mssql.scriptDatabase=Script database]
WITHOUT_CLASSIFICATION	i18n[ResultTab.elapsedTime=Total: {0}, SQL query: {1}, Building output: {2}]
WITHOUT_CLASSIFICATION	i18n[SchemasTab.title=Schemas]
WITHOUT_CLASSIFICATION	i18n[SQLHistoryDlg.title=SQL History for {0}]
WITHOUT_CLASSIFICATION	i18n[mssql.allSps=All stored procedures]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabecp=Extra class path]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.primaryKeyNameLabel=Primary Key Name: ]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnTypeTootTip={0} does not support altering column type]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.UDFWithParams=user defined function with parameter info: myFunct(<IN INTEGER tid>)]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.unknownupdateerror=Unknown problem during update.\nNo count of updated rows was returned.\nDatabase may be corrupted!]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyColumnTitle=Modify Column]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.deleteConfirm=Do you really wish to delete the selected bookmark?]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.OK=OK]
WITHOUT_CLASSIFICATION	i18n[mssql.generateSqlScript=Generate SQL Script]
WITHOUT_CLASSIFICATION	i18n[mysql.openTables=MySQL Open tables]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.hint=Preferences for SybaseASE]
WITHOUT_CLASSIFICATION	i18n[PreferencesPanel.colTypeMappingBorderLabel=Column Type Mapping]
WITHOUT_CLASSIFICATION	i18n[syntax.italic=Italic]
WITHOUT_CLASSIFICATION	i18n[mysql.hintGrants=(MySQL) Grants]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.typeLabel=Type: ]
WITHOUT_CLASSIFICATION	i18n[HQLEntryPanelManager.quoteHQL=Quote HQL]
WITHOUT_CLASSIFICATION	i18n[SchemaPropertiesPanel.schemaTableTitle=Schema table]
WITHOUT_CLASSIFICATION	i18n[sqlval.loOnAs=Log on as]
WITHOUT_CLASSIFICATION	i18n[Application.info.jdbcwritersuccess=JDBC debug log set to writer successfully]
WITHOUT_CLASSIFICATION	i18n[graph.saveGraph=Save graph]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.promptToDownloadAvailableUpdatesMsg=There are updates available. Do you want to download them now?]
WITHOUT_CLASSIFICATION	i18n[MysqlTriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropTitle=Select Column(s) To Drop]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.result=SQL result]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.title=SQuirreL SQL Client Help]
WITHOUT_CLASSIFICATION	i18n[ContentsTab.hint=View the contents of the selected table]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.dataTYpe1=Properties for the individual Data Types may be set in the]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.sqlLabel=SQL:]
WITHOUT_CLASSIFICATION	i18n[HibernateSQLPanel.format=Format]
WITHOUT_CLASSIFICATION	i18n[SyntaxPlugin.touppercase=touppercase]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.executeCommand=Execute command (%file will be replaced by export file name)]
WITHOUT_CLASSIFICATION	i18n[IndexesTab.hint=Show indexes for the selected table]
WITHOUT_CLASSIFICATION	i18n[sqlval.clientBorder=Client]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.scriptQueryStatistics=Executed {0} queries; elapsed time (seconds) - Total: {1}, SQL query: {2}, Building output: {3}]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.orderByClauseLabel=Order By Clause]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.addLabel=Add]
WITHOUT_CLASSIFICATION	i18n[userscript.execOn=Execute script on {0}]
WITHOUT_CLASSIFICATION	i18n[ValidatorGlobalPreferencesTab.title=SQL Validator]
WITHOUT_CLASSIFICATION	i18n[rowInputDataFrame.conversionToInternErr=The given text cannot be converted into the internal object.\nThe database has not been changed.\nThe conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.closeButton=Close]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.malformedXmlAt=Malformed XML. No ending tag seen for text starting at:\n{0}]
WITHOUT_CLASSIFICATION	i18n[mssql.allDefaults=All defaults]
WITHOUT_CLASSIFICATION	i18n[graph.rightClickTable=Right click table in object tree to add to graph]
WITHOUT_CLASSIFICATION	i18n[userscript.dlgTabScriptsGenTempl=Generate script template...]
WITHOUT_CLASSIFICATION	i18n[editextras.timeStamp=Time stamp]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileOpenErrorHeader=File Open Error]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[DumpApplicationCommand.title.systemprops=System Properties]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.pathLabel=Path:]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.testLabel=Test Connection]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.info.startmemtime=Starting memory timer (AboutBox)]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.duringInsert=Exception seen during check on DB. Exception was:\n{0}\nInsert was probably not completed correctly. DB may be corrupted!]
WITHOUT_CLASSIFICATION	i18n[mssql.oneFilePerObject=Create one file per object]
WITHOUT_CLASSIFICATION	i18n[ColumnPriviligesTab.hint=Show access rights for columns in the selected table]
WITHOUT_CLASSIFICATION	[i18n[OrderByClausePanel.orderDirectionLabel=Order Direction]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.overwriteWarning=File Overwrite Warning]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError100=Export Error]
WITHOUT_CLASSIFICATION	i18n [MemoryPanel.gcStatusToolTip={0} Sessions waiting for garbage collection]
WITHOUT_CLASSIFICATION	i18n[MetaDataTab.title=Metadata]
WITHOUT_CLASSIFICATION	i18n[xmlReformatter.no=NO]
WITHOUT_CLASSIFICATION	i18n[hibernate.HibernateTabPanel.connect=Connect/disconnect configuration selected configuration]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptIxAtEnd=Constraints and indexes at end of script]
WITHOUT_CLASSIFICATION	no first row, so we cannot retrieve the data i18n[DataSetUpdateableTableModelImpl.error.nomatchingrow=Could not find any row in DB matching current row in table]
WITHOUT_CLASSIFICATION	i18n[mysql.structureAndData=Structure and Data]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.numberBase=Number Base:]
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.mappedObjects=Mapped objects]
WITHOUT_CLASSIFICATION	i18n[graphToClipboard.title=Copy graph image pages to clipboard]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.mainTabs=Main Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.cannotExec=Cannot execute a null command.\nPlease enter a command in the Command field before clicking on Execute.]
WITHOUT_CLASSIFICATION	i18n[SequenceDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[dataTypeBigDecimal.scaleEceeded=Scale Exceeded: Number of digits to right of decimal place ({0})\nis greater than allowed in column ({1}).]
WITHOUT_CLASSIFICATION	i18n[TableTypesTab.hint=Show all the table types available in DBMS]
WITHOUT_CLASSIFICATION	i18n[oracle.details=Details]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadchangelog=Error generating Change Log entry for plugin {0}]
WITHOUT_CLASSIFICATION	i18n[dataTypeTimestamp.full=Full ({0})]
WITHOUT_CLASSIFICATION	i18n[HibernateTabController.hint=Support for Hibernate]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.columnNullLabel={0} does not support altering column nullability]
WITHOUT_CLASSIFICATION	i18n[graph.scriptAllTables=Script all tables]
WITHOUT_CLASSIFICATION	i18n[syntax.styles=Syntax Styles]
WITHOUT_CLASSIFICATION	i18n[mysql.showLogs=(MySQL) Show Logs]
WITHOUT_CLASSIFICATION	i18n[AboutBoxDialog.systempanelcreatetime=SystemPanel created in ]
WITHOUT_CLASSIFICATION	i18n[laf.settings=Look and Feel settings]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScript=Configure your multi table script:]
WITHOUT_CLASSIFICATION	i18n[sqlval.technologyVersion=Technology Version:]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnTypeUnsupported={0} doesn''t support altering a column's type attribute]
WITHOUT_CLASSIFICATION	i18n[hibernate.hqlToSqlShort=Convert HQL to SQL (ctrl + enter)]
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.wrapLines=Wrap Lines on/off]
WITHOUT_CLASSIFICATION	i18n[SchemaInfo.loadingDataTypes=Loading data types]
WITHOUT_CLASSIFICATION	i18n[UpdateManagerDialog.checkButtonLabel=Check]
WITHOUT_CLASSIFICATION	i18n[OraclePrefsPanelController.title=Oracle]
WITHOUT_CLASSIFICATION	i18n[RowIDTab.hint=Show columns that uniquely identify a row]
WITHOUT_CLASSIFICATION	i18n[NumericFunctionsTab.title=Numeric Functions]
WITHOUT_CLASSIFICATION	i18n[userscript.enterScriptName=Please enter a script name]
WITHOUT_CLASSIFICATION	i18n[DialectUtils.columnNameUnsupported={0} doesn''t support altering a column''s name]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.exportCsvFile=Export to file:]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.attrClassName=Attribute class name]
WITHOUT_CLASSIFICATION	i18n[AliasPropertiesInternalFrame.title=Properties for Alias: {0}]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.hint=Display trigger details]
WITHOUT_CLASSIFICATION	i18n[mssql.add_Menmonic="]
WITHOUT_CLASSIFICATION	i18n[oracle.diskReadsPerExec=Disk Reads per Exec]
WITHOUT_CLASSIFICATION	i18n[editWhereColsPanel.notUseColumns=Not Use Columns]
WITHOUT_CLASSIFICATION	i18n[UpdateControllerImpl.promptToDownloadAvailableUpdatesTitle=Updates Available]
WITHOUT_CLASSIFICATION	i18n[xmlRefomatter.unexpectedProblem=Unexpected problem during formatting.]
WITHOUT_CLASSIFICATION	i18n[laf.warning=Note: Changes may not take effect until the application is restarted.]
WITHOUT_CLASSIFICATION	i18n[popupEditableIoPanel.wrapWord=Wrap on Word on/off]
WITHOUT_CLASSIFICATION	i18n[dataTypeTime.medium=Medium ({0})]
WITHOUT_CLASSIFICATION	i18n[oracle.diplayScriptDetails=Display script details]
WITHOUT_CLASSIFICATION	i18n[MysqlPlugin.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[mysql.withAllFields=With all Fields]
WITHOUT_CLASSIFICATION	i18n[ResultTab.resultsTabTitle=Results]
WITHOUT_CLASSIFICATION	i18n[MappingRoot.driverVersion=JDBC driver version (Hibernate)]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.cancelMsg=Press Cancel to Stop]
WITHOUT_CLASSIFICATION	i18n[HelpViewerWindow.error.loadwelcomefile=Error retrieving Welcome file URL for {0}]
WITHOUT_CLASSIFICATION	i18n[syntax.separators=Separators]
WITHOUT_CLASSIFICATION	i18n[codeCompletion.prefixConfig=Configure function completion for function name prefixes:]
WITHOUT_CLASSIFICATION	i18n[mssql.add=Add >>]
WITHOUT_CLASSIFICATION	i18n[SybaseASEPlugin.showViewSource=Show view source]
WITHOUT_CLASSIFICATION	i18n[exportconfig.errorSavingAliases=Error saving aliases]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.newColumnValue=NewColumn]
WITHOUT_CLASSIFICATION	i18n[codecompletion.unknowntable=unknown table {0}]
WITHOUT_CLASSIFICATION	i18n[ColumnListDialog.dropErrorTitle=Too Many Columns Selected]
WITHOUT_CLASSIFICATION	i18n[HibernateTabPanel.hql=HQL]
WITHOUT_CLASSIFICATION	i18n[SchemaTableUpdateWhatItem.tables=Tables]
WITHOUT_CLASSIFICATION	i18n[dataSetViewerEditableTablePanel.noRowsDeleted={0}\nNo rows deleted from database.]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvController.fileChooserButton=Choose]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.fileChooserError=File Chooser Error]
WITHOUT_CLASSIFICATION	i18n[TableExportCsvDlg.useDefaultFormating=Use default formating]
WITHOUT_CLASSIFICATION	i18n[oracle.showTriggerSource=Show trigger source]
WITHOUT_CLASSIFICATION	i18n[DatabaseMetaData.searchableTypePredChar=only supports 'WHERE...LIKE']
WITHOUT_CLASSIFICATION	i18n[userscript.applicableToTarget=Scripts applicable to selected targets]
WITHOUT_CLASSIFICATION	i18n[graph.addFoldingPoint=add folding point]
WITHOUT_CLASSIFICATION	i18n[sqlscript.configYourMultiTableScriptOk=OK]
WITHOUT_CLASSIFICATION	i18n[OraclePlugin.timestampWarning=The setting to use string literals for timestamps may result in the inability to edit tables containing these columns. If this problem occurs, open Global Preferences -> Data Type Controls and set Timestamps to use "JDBC standard escape format"]
WITHOUT_CLASSIFICATION	i18n[PreLaunchHelperImpl.restoreFromBackupTitle=Confirm Restore From Backup
WITHOUT_CLASSIFICATION	i18n[dateTypeTimestamp.typeTimestamp=Timestamp (SQL type 93)]
WITHOUT_CLASSIFICATION	i18n[graph.addRelTables=Add all related tables]
WITHOUT_CLASSIFICATION	i18n[exportconfig.fileSavedTo={0} saved to {1}]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.executeButtonLabel=Execute]
WITHOUT_CLASSIFICATION	set up Update button i18n[cellDataPopUp.updateData=Update Data]
WITHOUT_CLASSIFICATION	i18n[SchemaInfoCacheSerializer.endStore=Finished writing schema cache for Alias{0}. file: {1}]
WITHOUT_CLASSIFICATION	i18n[codecompletion.prefs.table.spWithParams=SP with params]
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesPanel.qualifyCheckboxLabel=Qualify table names in scripts with schema]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.server=Server:]
WITHOUT_CLASSIFICATION	set up dialog to ask user if it is ok to proceed IMPORTANT: this dialog is SYNCHRONOUS (ie. we do not proceed until user gives a response). This is critical since this function provides a return value to its caller that depends on the user input. i18n[baseDataSetViewerDestination.warning2=Warning]
WITHOUT_CLASSIFICATION	i18n[DBCopyGlobalPreferencesTab.title=DB Copy]
WITHOUT_CLASSIFICATION	i18n[syntax.enableAutoCorr=Enable auto correct / abreviation]
WITHOUT_CLASSIFICATION	i18n[LockDetailsTab.title=Locks]
WITHOUT_CLASSIFICATION	i18n[oracle.instanceDetails=Details]
WITHOUT_CLASSIFICATION	Columns
WITHOUT_CLASSIFICATION	i18n[RefactoringPreferencesTab.hint=Settings for the Refactoring plugin]
WITHOUT_CLASSIFICATION	i18n[oracle.sortsPerExec=Sorts per Exec]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.modifyColumnTitle=Modify Column]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.suggestColumnsIgnoreCase=ignore case]
WITHOUT_CLASSIFICATION	i18n[sqlbookmark.noRunSelection=Please select the bookmark to run]
WITHOUT_CLASSIFICATION	i18n[CSVSettingsPanel.csvSettings=CSV settings]
WITHOUT_CLASSIFICATION	i18n[ResultTab.statementLabel=SQL:]
WITHOUT_CLASSIFICATION	i18n[syntax.findExplain=Press F3 to go to next result. Press Ctrl+Shift+F7 to toggle highlight search.]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError8=Export Error]
WITHOUT_CLASSIFICATION	i18n[ImportFileDialog.fileImport=Import file]
WITHOUT_CLASSIFICATION	Add Help, Licence and Change Log nodes to the tree. i18n[HelpViewerWindow.help=Help]
WITHOUT_CLASSIFICATION	i18n[editWherColsSheet.close=Close]
WITHOUT_CLASSIFICATION	i18n[graph.graphRenamed=Renamed "{0}" to "{1}"]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[DataSetUpdateableTableModelImpl.error.exceptionduringcheck=Exception seen during check on DB. Exception was:\n{0}\nUpdate is probably not safe to do.\nDo you wish to proceed?]
WITHOUT_CLASSIFICATION	i18n[WindowManager.errorselectingwindow=Error selecting window]
WITHOUT_CLASSIFICATION	i18n[ColumnDetailsDialog.scaleLabel=Scale: ]
WITHOUT_CLASSIFICATION	i18n[generalSessionPropertiesPanel.objectTabs=Object Tabs:]
WITHOUT_CLASSIFICATION	i18n[popupeditableIoPanel.exportError7=Export Error]
WITHOUT_CLASSIFICATION	i18n[DBUtil.info.executequery=executeQuery: Running SQL:\n '{0}']
WITHOUT_CLASSIFICATION	pane.addTab(MergeColumnDialog.i18n.TABBEDPANE_COLUMNS_LABEL, _columnTab);
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.port=Port:]
WITHOUT_CLASSIFICATION	i18n[userscript.selScriptToEdit=Please select the script to edit]
WITHOUT_CLASSIFICATION	i18n[HibernateAttribuiteDataSet.tableCols=Table columns]
WITHOUT_CLASSIFICATION	i18n[IndexDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[syntax.prefUseOster=Use Ostermiller editor]
WITHOUT_CLASSIFICATION	i18n[UpdatePreferencesPanel.statusLableFailureMsg=Connection failed. See log for error.]
WITHOUT_CLASSIFICATION	i18n[graph.close=close]
WITHOUT_CLASSIFICATION	i18n[SQLResultExecuterPanel.scriptStmtCounts=Row update counts: {0} Inserts, {1} Selects, {2} Updates, {3} Deletes
WITHOUT_CLASSIFICATION	i18n[DualProgressBarDialog.error.getdialog=getDialog: unable to invokeAndWait for dialog]
WITHOUT_CLASSIFICATION	i18n[graph.refreshAllTables=Refresh all tables]
WITHOUT_CLASSIFICATION	i18n[TriggerDetailsTab.title=Details]
WITHOUT_CLASSIFICATION	i18n[cellDataPopUp.cannnotBGeConverted=The given text cannot be converted into the internal object.\n Please change the data or cancel editing.\n The conversion error was:\n{0}]
WITHOUT_CLASSIFICATION	i18n[DBUtil.error.missingtable=getForeignKeySQL: table '{0}' has a column '{1}' that references table '{2}' column '{3}'. However, that table is not being copied. Skipping this foreign key.]
WITHOUT_CLASSIFICATION	i18n[DB2Plugin.showProcedureSource=Show procedure source]
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	Empty body.
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	If we don't invokeLater here no Short-Cut-Key is sent to the internal frame seen under java version "1.4.1_01" and Linux
WITHOUT_CLASSIFICATION	This is a funny functionality anyway and leads to problems with the DockTabStyle. E.g. when SessionProperties is closed first tab gets selected.
WITHOUT_CLASSIFICATION	Find the internal Frame in the list of internal frames and remove it.
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up.
WITHOUT_CLASSIFICATION	Has to be done directly on the main frame because of racing condition at start up.
WITHOUT_CLASSIFICATION	root.setDefaultButton(_okBtn);
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Guaranteed to be non-null.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event.
WITHOUT_CLASSIFICATION	Required with the first beta of JDK1.4.1 to stop this scrollpane from being too tall.
WITHOUT_CLASSIFICATION	Lazily create the event.
WITHOUT_CLASSIFICATION	viewer.removeInternalFrameListener(_lis);
WITHOUT_CLASSIFICATION	Empty block.
WITHOUT_CLASSIFICATION	Instance Creation
WITHOUT_CLASSIFICATION	Primary Key name
WITHOUT_CLASSIFICATION	All rules passed, so enable the buttons.
WITHOUT_CLASSIFICATION	See also loadSchemaNames()
WITHOUT_CLASSIFICATION	Note: If we are here _cacheSchemaIndependentMetaData must be false
WITHOUT_CLASSIFICATION	This seems to be necessary to get background colours correct. Without it labels added to the content pane have a dark background while those added to a JPanel in the content pane have a light background under the java look and feel. Similar effects occur for other look and feels.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	i18n[I18n.includeTimestamp=Include timestamp in modified properties file]
WITHOUT_CLASSIFICATION	i18n[I18n.CouldNotCreateWorkDir=Could not create Working directory {0}]
WITHOUT_CLASSIFICATION	i18n[I18n.PropsCopyMsg=Copied existing translations from {0} to {1}]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkingDir=Working Directory]
WITHOUT_CLASSIFICATION	i18n[I18n.EditorCommand=Editor command]
WITHOUT_CLASSIFICATION	i18n[I18n.TranlationsGenerationMessage=\n#\n#Missing translation generated by I18n Plugin on {0}\n#]
WITHOUT_CLASSIFICATION	startparts[1] contains our I18n string key followed by </span>
WITHOUT_CLASSIFICATION	i18n[I18n.NativeToAscii=Path to native to Unicode converter (JDK's native2ascii)]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkDirDoesNotExistQuestionCreate=Working directory {0} does not exist.\nDo you want to create it?]
WITHOUT_CLASSIFICATION	i18n[I18n.NativeToAsciiOutDir=native2Ascii output dir]
WITHOUT_CLASSIFICATION	i18n[I18n.noWorkdir=Working directory doesn't exist.\nDo you want to create it?]
WITHOUT_CLASSIFICATION	Dump table types.
WITHOUT_CLASSIFICATION	i18n[I18n.tranlations=Translations]
WITHOUT_CLASSIFICATION	i18n[I18n.bundles=Bundles]
WITHOUT_CLASSIFICATION	i18n[I18n.failedToOpenZip=Failed to open zip/jar {0}]
WITHOUT_CLASSIFICATION	i18n[I18n.ExecuteNativeToAscii=Execute nativeToAscii]
WITHOUT_CLASSIFICATION	i18n[I18n.appendI18nStringsProps=Create/Append I18nString.properties files]
WITHOUT_CLASSIFICATION	i18n[I18n.changeApplicationDefaultLocaleNote=Example VM Parameters to change locale used by SQuirreL: -Duser.language=en -Duser.country=US]
WITHOUT_CLASSIFICATION	i18n[I18n.NoWorkDir=Please choose a work dir to store your translations.]
WITHOUT_CLASSIFICATION	i18n[I18n.locales=Locales]
WITHOUT_CLASSIFICATION	i18n[I18n.generateTemplateComments=Generate template comments for missing translations]
WITHOUT_CLASSIFICATION	i18n[I18n.loadBundles=Load bundles]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.noDriverSelected=No driver available in this Alias.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	i18n[I18n.WorkdirIsNoDir=The working directory is not a directory.\nNo bundles will be loaded from {0}]
WITHOUT_CLASSIFICATION	I18n[DriverPropertiesController.loadingDriverFailed=Loading JDBC driver "{0}" failed.\nCan not load driver properties tab.]
WITHOUT_CLASSIFICATION	add more space between the label and the button
WITHOUT_CLASSIFICATION	add more space to the top of the component
WITHOUT_CLASSIFICATION	Has to be done here e.g. when "Close All Sessions" menu was used.
WITHOUT_CLASSIFICATION	Needes to be done via event queque because method is not called from the event disptach thread.
WITHOUT_CLASSIFICATION	actions.get(SQLFilterAction.class).setEnabled(false);
WITHOUT_CLASSIFICATION	Needed to guarantee other components a focus lost and to allow to enter the tabs components via tab key in a well defined way (the user can see where the focus is).
WITHOUT_CLASSIFICATION	_tree.addTreeSelectionListener(new ObjectTreeSelectionListener()); _objTreeSelLis = new ObjectTreeSelectionListener(); _tree.addTreeSelectionListener(_objTreeSelLis);
WITHOUT_CLASSIFICATION	Metrics of the component used in the constructor
WITHOUT_CLASSIFICATION	We don't destroy the timer when there's nothing happening because it would mean a lot more work on every single AWT event that gets dispatched.
WITHOUT_CLASSIFICATION	break when first braket found
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	void sessionInternalFrameOpened(SessionInternalFrame sessionInternalFrame, ISession sess);
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Span across two columns
WITHOUT_CLASSIFICATION	Increases component width by 40 pixels
WITHOUT_CLASSIFICATION	Increases component width by 20 pixels
WITHOUT_CLASSIFICATION	private SimpleAttributeSet _saSetErrorHistory;
WITHOUT_CLASSIFICATION	Thread safe support for every call to this method:
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	if we could not identify which table to edit, tell user
WITHOUT_CLASSIFICATION	Mouse listener used to display popup menu.
WITHOUT_CLASSIFICATION	If the object representing the actual data (i.e. this object) can be edited by the user, then the fw objects need to have a reference to it. Updateable objects must implement an interface derived from IDataSetUpdateableComponent in the net.sourceforge.squirrel_sql.fw.datasetviewer package. If the component does not implement that interface, then we just keep going, but if it does implement it, then we need to tell the DataSetScrollingPanel that the object that fw needs to call is this one.
WITHOUT_CLASSIFICATION	If the file using the base name with no extention exists, it is first. The other files are in order from oldest to newest. The set of files to delete is slightly different depending on whether the base name file exists or not.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	There are some fields that cannot be used in a WHERE clause, either because there cannot be an exact match (e.g. REAL, FLOAT), or because we may not have the actual data in hand (BLOB/CLOB), or because the data cannot be expressed in a string form (e.g. BINARY). An update to one of those fields will look like we are replacing one row with an identical row (because we can only "see" the fields that we know how to do WHEREs on). Therefore, when we are updating them, there should be exactly one row that matches all of our other fields, and when we are not updating one of these special types of fields, there should be no rows that exactly match our criteria (we hope). We determine whether this field is one that cannot be used in the WHERE clause by checking the value returned for that field to use in the WHERE clause. Any field that can be used there will return something of the form "<fieldName> = <value>", and a field that cannot be used will return a null or zero-length string.
WITHOUT_CLASSIFICATION	There should be one row in the data, so try to move to it
WITHOUT_CLASSIFICATION	we have at least one row, so try to retrieve the object Do Not limit the read of this data
WITHOUT_CLASSIFICATION	return the whole contents of this column in the DB
WITHOUT_CLASSIFICATION	go on to the next item
WITHOUT_CLASSIFICATION	for each row in table, do delete and add to number of rows deleted from DB
WITHOUT_CLASSIFICATION	We need to keep track of the bind var index separately, since the number of column defs may not be the number of bind vars (For example: auto-increment columns are excluded)
WITHOUT_CLASSIFICATION	no support for undo
WITHOUT_CLASSIFICATION	JASON: Removed as part of patch void removeSessionListener(ISessionListener lis);
WITHOUT_CLASSIFICATION	If the user has cancelled the query, don't bother logging an error message. It is likely that the cancel request interfered with the attempt to fetch results from the ResultSet, which is to be expected when the Statement is closed. So, let's not bug the user with obvious error messages that we can do nothing about.
WITHOUT_CLASSIFICATION	Each call to _stmt.getMoreResults() places the to the next output. As long as it is a ResultSet, we process it ...
WITHOUT_CLASSIFICATION	There is no need to close result sets if we call _stmt.getMoreResults() because it implicitly closes any current ResultSet. ON DB2 version 7.1 it is even harmful to close a ResultSet explicitly. _stmt.getMoreResults() will never return true anymore if you do.
WITHOUT_CLASSIFICATION	Implementataion of IDataSetUpdateableTableModel: Delegation to _dataSetUpdateableTableModel
WITHOUT_CLASSIFICATION	always wrap on word boundaries
WITHOUT_CLASSIFICATION	NextCh already done
WITHOUT_CLASSIFICATION	toUpperCase replaces the German ß by ss. This will kill reformating later. Since upperIn is just for building pieces it is OK to place ß here.
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	Execute the sql synchronously
WITHOUT_CLASSIFICATION	IApplication app = getApplication(); CursorChanger cursorChg = new CursorChanger(app.getMainFrame()); cursorChg.show(); try { new ShowNativeSQLCommand(_session).execute(); } finally { cursorChg.restore(); }
WITHOUT_CLASSIFICATION	private IntegerIdentifierFactory _idFactory = new IntegerIdentifierFactory();
WITHOUT_CLASSIFICATION	_listeners.add(ISQLExecutionListener.class, lis);
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	I have seen the reference to the outer class being null when this method is called. I have seen it only with the runtime jars and on Linux. I could not reproduce in my IDE.
WITHOUT_CLASSIFICATION	sql contains columns from multiple tables, so we cannot use all of the columns in a WHERE clause and it becomes difficult to know which table (or tables!) an edited column belongs to. Therefore limit the output to be read-only
WITHOUT_CLASSIFICATION	sticky tab was closed
WITHOUT_CLASSIFICATION	Back-off a bit after a hundred updates to allow the UI to update
WITHOUT_CLASSIFICATION	must not be done in the GUI thread
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for catalog nodes.
WITHOUT_CLASSIFICATION	Register tabs to display in the details panel for procedure nodes.
WITHOUT_CLASSIFICATION	Assume DBMS doesn't support catalogs.
WITHOUT_CLASSIFICATION	No more automatic restarts because key events will restart the parser from now on.
WITHOUT_CLASSIFICATION	DO NOT CHANGE THE VALUES OF THIS CONSTANTS. These constants where introduced to make the parser code more readable. Care was taken. Still it can not be guaranteed that changing a value will not be harmful.
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	new line
WITHOUT_CLASSIFICATION	use all of the columns
WITHOUT_CLASSIFICATION	private String _sqlOutputMetaDataClassName = IDataSetDestinations.READ_ONLY_TABLE;
WITHOUT_CLASSIFICATION	make sure we are starting clean
WITHOUT_CLASSIFICATION	Note: A CaseInsensitiveString can be a mutable string. In fact it is a mutable string here because this is usually called from within Syntax coloring which uses a mutable string.
WITHOUT_CLASSIFICATION	Note: A CaseInsensitiveString can be a mutable string. In fact it is a mutable string here because this is usually called from within Syntax coloring which uses a mutable string.
WITHOUT_CLASSIFICATION	load all table types with catalog = doi.getCatalog() and schema = doi.getSchema()
WITHOUT_CLASSIFICATION	private transient String[] availableTypesInDataBase;
WITHOUT_CLASSIFICATION	CopyOnWriteArrayList is unfortunately not sort-able as a List. So this will throw an UnsupportedOperationException: Collections.sort(_iTableInfos, new TableInfoSimpleNameComparator()); The following is the best approach according to concurrency master Doug Lea, in this post: http:osdir.com/ml/java.jsr.166-concurrency/2004-06/msg00001.html Here we copy the existing internal array into a new array that is large enough to hold the original and new elements. Then sort it. And finally, create a new CopyOnWriteArrayList with the sorted array.
WITHOUT_CLASSIFICATION	Columns have not yet been loaded
WITHOUT_CLASSIFICATION	If characters don't match but case may be ignored, try converting both characters to uppercase. If the results match, then the comparison scan should continue.
WITHOUT_CLASSIFICATION	Helper methods
WITHOUT_CLASSIFICATION	first time through this method in program, so go cleanup old log files
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	NOI18N
WITHOUT_CLASSIFICATION	When user leaves a cell after editing it, the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. However, when the call comes from the Popup window, the data has already been converted and validated. We assume that a String being passed in here is a value from a text field that needs to be converted to an object, and a non-string object has already been validated and converted.
WITHOUT_CLASSIFICATION	When user leaves a cell after editing it, the contents of that cell need to be converted from a string into an object of the appropriate type before updating the table. However, when the call comes from the Popup window, the data has already been converted and validated. We assume that a String being passed in here is a value from a text field that needs to be converted to an object, and a non-string object has already been validated and converted.
WITHOUT_CLASSIFICATION	default is to do nothing. Derived classes must override this to accomplish anything.
WITHOUT_CLASSIFICATION	save for possible future use
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	better safe than sorry!
WITHOUT_CLASSIFICATION	save various info about the column for use in user input validation when editing table contents. Note that the columnDisplaySize is included two times, where the first entry may be adjusted for actual display while the second entry is the size expected by the DB. The isNullable() method returns three values that we convert into two by saying that if it is not known whether or not a column allows nulls, we will allow the user to enter nulls and any problems will be caught when they try to save the data to the DB
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	/ Implement the IDataSetTableControls interface, functions needed to support table operations These functions are called from within MyJTable and MyTable to tell those classes how to operate. The code in these functions will be different depending on whether the table is read-only or editable. The definitions below are for read-only operation. The editable table panel overrides these functions with the versions that tell the tables how to set up for editing operations. /
WITHOUT_CLASSIFICATION	double tableWidth =_table.getColumnModel().getTotalColumnWidth() scale;
WITHOUT_CLASSIFICATION	return method.getParameterTypes().length == 1 && method.getParameterTypes()[0] == int.class && method.getReturnType() != Void.TYPE;
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	whether nulls are allowed or not
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	table of which we are part (needed for creating popup dialog)
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	The CellRenderer used for this data type
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	First we have the methods for in-cell and Text-table operations
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	this DataType does not limit the data read during the initial load of the table, so there is no need to re-read the complete data later
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	special handling of operations while editing this data type
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	handle mouse events for double-click creation of popup dialog. This happens only in the JTextField, not the JTextArea, so we can make this an inner class within this method rather than a separate inner class as is done with the KeyTextHandler class.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, the same one used in Text and in-cell operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea.
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	tabs and newlines get put into the text before this check, so remove them This only applies to Popup editing since these chars are not passed to this level by the in-cell editor.
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	remove all instances of the offending char
WITHOUT_CLASSIFICATION	delete when null => original value
WITHOUT_CLASSIFICATION	DataBase-related functions
WITHOUT_CLASSIFICATION	try to use the DB default value
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	if there was a problem with converting, then just fall through and continue as if there was no default given in the DB. Otherwise, use the converted object
WITHOUT_CLASSIFICATION	field is not nullable, so create a reasonable default value
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	test that the string is valid by converting it into an object of this data type
WITHOUT_CLASSIFICATION	just send the text to the output file
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	as a coding convenience, create a reference to the text component that is typecast to JTextComponent. this is not essential, as we could typecast every reference, but this makes the code cleaner
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	handle cases of null The processing is different when nulls are allowed and when they are not.
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	non-delete when null => clear field and add text
WITHOUT_CLASSIFICATION	about to delete last thing in field, so replace with null
WITHOUT_CLASSIFICATION	if we have seen a property for this DataType before, then the hashmap already exists. Otherwise, we need to create it now.
WITHOUT_CLASSIFICATION	if use is not looking for ASCII chars, or if this one is one that is not printable, then convert it into numeric form
WITHOUT_CLASSIFICATION	Return a JTextArea usable in the CellPopupDialog and fill in the value.
WITHOUT_CLASSIFICATION	File IO related functions
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	convert file text into a string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	if both objs are null, then they matched in the previous test, so at this point we know that at least one of them (or both) is not null. However, one of them may still be null, and we cannot call equals() on the null object, so make sure that the one we call it on is not null. The equals() method handles the other one being null, if it is.
WITHOUT_CLASSIFICATION	First convert the string representation into the binary bytes it is describing
WITHOUT_CLASSIFICATION	data was not fully read in before, so try to do that now
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	GUI components - need to be here because they need to be accessible from the event handlers to alter each other's state.
WITHOUT_CLASSIFICATION	end of constructor for inner class
WITHOUT_CLASSIFICATION	we are limiting some things. if the string we have is less than the limit, then we are ok and do not need to re-read (because we already have the whole thing).
WITHOUT_CLASSIFICATION	Total number of threads.
WITHOUT_CLASSIFICATION	Return empty list if source string is empty.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	CLOBs are different from normal data types in that what is actually read from the DB is a descriptor pointing to the data rather than the data itself. During the initial load of the table, the values read from the descriptor may have been limited, but the descriptor itself has been completely read, Therefore we do not need to re-read the datum from the Database because we know that we have the entire descriptor. If the contents of the CLOB have been limited during the initial table load, that will be discovered when we check if the cell is editable and the full data will be read at that time using this descriptor.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	The DateFormat object to use for all locale-dependent formatting. This is reset each time the user changes the previous settings.
WITHOUT_CLASSIFICATION	save pointer to object needed to render value for use in the inner class delegate
WITHOUT_CLASSIFICATION	We want to detect two empty text values in a row before we decide to restore the original value. Since 'text' contains the new value, we want to allow the first empty 'text' so that the user can clear the field, and on the second one we will set it to the original value.
WITHOUT_CLASSIFICATION	Now define the Popup-related operations.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since neither cell nor popup are allowed to edit, just ignore anything seen here.
WITHOUT_CLASSIFICATION	Create the panel and add the GUI items to it
WITHOUT_CLASSIFICATION	the other obj is null, so see if this non-null obj contains a null value, which is equivilent. Assume that if we have read some of the data and we still have _data == null, then the value in the DB is actually null.
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	both have actual data, so compare the strings Note that if one has read all of the data and the other has read only part of the data that we will say that they are NOT equal.
WITHOUT_CLASSIFICATION	tables that are netiher children nor parents - utility tables
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	first do special check to see if we should use LONGVARCHAR in the WHERE clause. (Oracle does not allow this.)
WITHOUT_CLASSIFICATION	convert to string Special case: some systems tack a newline at the end of the text read. Assume that if last char is a newline that we want everything else in the line.
WITHOUT_CLASSIFICATION	set the flag for whether or not to limit only on specific fields
WITHOUT_CLASSIFICATION	If you add this method to one of the standard DataTypes in the fw/datasetviewer/cellcomponent directory, you must also add the name of that DataType class to the list in CellComponentFactory, method getControlPanels, variable named initialClassNameList. If the class is being registered with the factory using registerDataType, then you should not include the class name in the list (it will be found automatically), but if the DataType is part of the case statement in the factory method getDataTypeObject, then it does need to be explicitly listed in the getControlPanels method also.
WITHOUT_CLASSIFICATION	we have an appropriate data type object
WITHOUT_CLASSIFICATION	The first argument is a JTable, which is only used by instances of JTextField to convert coordinates on a double-click. Since that cannot happen with the JTextArea, do not bother passing the table.
WITHOUT_CLASSIFICATION	We should never NOT have an object here because we only get here when a DataType object has claimed that the column is editable. If there is no DataType for the column, then the default in the isEditableXXX() methods in this class is to say that the column is not editable, and therefore we should never have this method called in that case.
WITHOUT_CLASSIFICATION	If we get here, then no data type object was found for this column. (should not get here because switch default returns null.)
WITHOUT_CLASSIFICATION	Oracle's 'TIMESTAMP WITH TIME ZONE' == -101 Oracle's 'TIMESTAMP WITH LOCAL TIME ZONE' == -102
WITHOUT_CLASSIFICATION	Add begin
WITHOUT_CLASSIFICATION	if value contains ":" it probably has a time component
WITHOUT_CLASSIFICATION	When the table initiates editing and sets this field, remember the value as the original value of the field
WITHOUT_CLASSIFICATION	Now the Popup-related methods. These are not quite symmetric with the in-cell calls because the conversion of the object into the text to display in the popup is handled internally to the DataType object inside getJTextArea(), so we do not need a "renderObjectInPopup" function visible to the rest of the world.
WITHOUT_CLASSIFICATION	Internal class for handling key events during editing of both JTextField and JTextArea. Since the Unknown data type is not editable either in the Cell or in the Popup, we should never get here, but we have provided appropriate code just in case.
WITHOUT_CLASSIFICATION	public static final int NO_ACTION = 0; public static final int CASCADE_DELETE = 1; public static final int SET_DEFAULT = 2; public static final int SET_NULL = 3;
WITHOUT_CLASSIFICATION	We don't yet have the need to discriminate by version.
WITHOUT_CLASSIFICATION	I tried to use the length from the source database (PostgreSQL) which yielded 8192 for this test. So the column def in FB was binary_column bit varying(8192). Yet it gave me an exception that indicated truncation (string data right truncation???) So for now, go back to hard-coded maximal length. registerColumnType(Types.BINARY, 2147000000,"bit varying($l)");
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	alter table FKTESTCHILDTABLE add CONSTRAINT foo_const UNIQUE (MYID)
WITHOUT_CLASSIFICATION	"ALTER TABLE $tableName$ " + "ADD CONSTRAINT $constraintName$ UNIQUE ($columnName; separator=\",\"$)";
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	DB2 spec says max=2147483647, but the driver throws an exception
WITHOUT_CLASSIFICATION	ALTER TABLE <table_name> ADD FOREIGN KEY [<referential_constraint_name>] (<referencing_column>,...) REFERENCES <referenced_table> [(<referenced_column>,...)] [<delete_rule>]
WITHOUT_CLASSIFICATION	"ALTER TABLE $childTableName$ " + "ADD $constraint$ $constraintName$ FOREIGN KEY ( $childColumn; separator=\",\"$ ) " + "REFERENCES $parentTableName$ ( $parentColumn; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	<create_index_statement> ::= CREATE [UNIQUE] INDEX <index_name> ON <table_name> (<index_spec>) <index_spec> ::= <index_column_name>,... | <dbfunction_name> (<column_name>,...) [ASC|DESC] <index_column_name> ::= <column_name> [ASC|DESC]
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	"CREATE VIEW $viewName$ " + "AS $selectStatement$ $withCheckOption$";
WITHOUT_CLASSIFICATION	<rename_view_statement> ::= RENAME VIEW <old_table_name> TO <new_table_name> <old_table_name> ::= <table_name> <new_table_name> ::= <table_name
WITHOUT_CLASSIFICATION	features
WITHOUT_CLASSIFICATION	Additional Index Creation
WITHOUT_CLASSIFICATION	in Sybase, DEFAULT keyword must appear prior to NULL/NOT NULL
WITHOUT_CLASSIFICATION	CREATE SEQUENCE sequenceName INCREMENT BY increment MINVALUE minimum MAXVALUE maxvalue RESTART WITH restart CACHE cache CYCLE;
WITHOUT_CLASSIFICATION	finally, try to set the catalog, which appears to be a NO-OP in the Informix driver.
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	If we've loop through one time for each character in the string, then something must be wrong. Get out!
WITHOUT_CLASSIFICATION	Since we can use a correlated sub-query to update all rows in one statement, we don't care about the set values, unless fromTables is null, in which case we go with a normal update. Using the set values would require an update statement for each row in the merged table for each column that was merged in, which is incredibly inefficient. However, the API is intended to support database dialects that can't handle correlated sub-queries.
WITHOUT_CLASSIFICATION	"ALTER SEQUENCE $sequenceName$ " + "$restartWith$ $startValue$ " + "$incrementBy$ $incrementValue$ ";
WITHOUT_CLASSIFICATION	MySQL disallows quoted column identifiers.
WITHOUT_CLASSIFICATION	From MySQL 5.0 Reference: ALTER TABLE tbl_name ADD [CONSTRAINT symbol] FOREIGN KEY [id] (index_col_name, ...) REFERENCES tbl_name (index_col_name, ...) [ON DELETE {RESTRICT | CASCADE | SET NULL | NO ACTION}] [ON UPDATE {RESTRICT | CASCADE | SET NULL | NO ACTION}]
WITHOUT_CLASSIFICATION	From MySQL 5.0 reference manual ALTER [IGNORE] TABLE tbl_name alter_specification [, alter_specification] ... alter_specification: | ADD [CONSTRAINT [symbol]] UNIQUE [INDEX|KEY] [index_name] [index_type] (index_col_name,...)
WITHOUT_CLASSIFICATION	From PostgreSQL 8.2 documentation: CREATE [ UNIQUE ] INDEX [ CONCURRENTLY ] name ON table [ USING method ] ( { column | ( expression ) } [ opclass ] [, ...] ) [ WITH ( storage_parameter = value [, ... ] ) ] [ TABLESPACE tablespace ] [ WHERE predicate ]
WITHOUT_CLASSIFICATION	UPDATE tableName SET setColumn1 = setValue1, setColumn2 = setValue2 FROM fromTable1, fromTable2 WHERE whereColumn1 = whereValue1 AND whereColumn2 = whereValue2;
WITHOUT_CLASSIFICATION	In Oracle, ON UPDATE actions are not supported
WITHOUT_CLASSIFICATION	ALTER TABLE <tablename> ADD [CONSTRAINT <constraintname>] PRIMARY KEY (<column list>);
WITHOUT_CLASSIFICATION	The index is needed in case this method is called with schema = null, catalog = null and two tables with the same name in different schemas/catalogs. Without the index the same ordinal position could only occur once.
WITHOUT_CLASSIFICATION	During assignable checks many classes can't be loaded but don't cause problems either. So we just issue an info.
WITHOUT_CLASSIFICATION	No exceptions during logging
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible Logger for this class
WITHOUT_CLASSIFICATION	TimesTen reference claims this is a supported operation, but it yields an exception for me: ALTER TABLE test MODIFY noDefaultVarcharCol DEFAULT 'Default Value' Exception in thread "main" java.sql.SQLException: [TimesTen][TimesTen 6.0.1 ODBC Driver][TimesTen]TT1001: Syntax error in SQL statement before or at: "NODEFAULTVARCHARCOL", character position: 26 -- file "ptSqlY.y", lineno 1940, procedure "sbPtParseSql()" String alterClause = DialectUtils.MODIFY_CLAUSE; String defaultClause = DialectUtils.DEFAULT_CLAUSE; return DialectUtils.getColumnDefaultAlterSQL(this, info, alterClause, false, defaultClause); So, for now, just throw an exception:
WITHOUT_CLASSIFICATION	Do not use Axion's bigint data type. I get the following exception in my test: org.axiondb.AxionException: Invalid value "3074478078827346" for column (BIGINT_TYPE_TABLE).BIGINT_COLUMN, expected numeric(20,10) : data exception: numeric value out of range Can someone please tell me why Axion expects big integers to be limited to 20 precision and 10 scale?(Integers should have scale == 0, right?) So an Axion bigint is limited to just 20 digits to the left of the decimal point. TODO: consider filing a bug report against Axion build M3. 38 is the maximum precision for Axion's numeric type.
WITHOUT_CLASSIFICATION	DB2 needs to reorg table after changing nullabolity
WITHOUT_CLASSIFICATION	DB2 doesn't support adding an auto-increment column once the table has already been created. So this can simulate one using trigger on the table to access a sequence. Found this idea at wikibooks: http:en.wikibooks.org/wiki/SQL_dialects_reference/Data_structure_definition/Auto-increment_column CREATE SEQUENCE sequence_name; CREATE TABLE table_name ( column_name INT ); CREATE TRIGGER insert_trigger NO CASCADE BEFORE INSERT ON table_name REFERENCING NEW AS n FOR EACH ROW SET n.column_name = NEXTVAL FOR sequence_name;
WITHOUT_CLASSIFICATION	UPDATE t SET a = (SELECT a FROM t2 WHERE t.b = t2.b); String templateStr = "UPDATE $destTableName$ SET $columnName$ = " + "(SELECT $columnName$ FROM $sourceTableName$ " + "WHERE $sourceTableName$.$whereColumnName$ = $destTableName$.$whereColumnValue$"; StringTemplate st = new StringTemplate(templateStr);
WITHOUT_CLASSIFICATION	"CREATE $unique$ $storageOption$ INDEX $indexName$ " + "ON $tableName$ ( $columnName; separator=\",\"$ )";
WITHOUT_CLASSIFICATION	save the pointer needed for insert and delete operations
WITHOUT_CLASSIFICATION	tell the rest of the world that the table has changed. The 'fire' method used here is very course - it says that the whole table has been changed when really only one row has been added. However, finer-grained methods did not seem to cause the right effect, so I'm using this one untill someone reports a problem with it. Also, if either of these notifications (the actual model and the sortable model) are eliminated, it either throws an exception or does not update the GUI. Go figure. Finally, the 'fire' on the _acutalModel is triggered from this method rather than from inside the MyJTable code because the add() method used to add a row is also used when loading the table with lots of rows, and in that case we do not want to generate events until all of the rows have been added, so the 'fire' cannot happen there.
WITHOUT_CLASSIFICATION	At least one version of PostgreSQL through the JDBC/ODBC bridge returns an empty result set for the list of table types. Another version of PostgreSQL returns 6 entries of "SYSTEM TABLE" (which we have already filtered back to one).
WITHOUT_CLASSIFICATION	catalog schema tableName columnName keySequence pkName
WITHOUT_CLASSIFICATION	PointBase doesn't follow the spec with regard to column 11 of getColumns (should return a type constant, but instead returns a Boolean.
WITHOUT_CLASSIFICATION	DatabaseObjectType.UDF_TYPE_DBO=UDF Type
WITHOUT_CLASSIFICATION	-- Path operations --
WITHOUT_CLASSIFICATION	/ A deadlock chain is circular and does not have a defined beginning Pid. In order to make the string representation of a deadlock chain unique we put the smallest Pid at the beginning of the chain.
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	grab the current letter as a char
WITHOUT_CLASSIFICATION	this will skip blank lines
WITHOUT_CLASSIFICATION	encountered a comment character at the beginning of the line so just ignore the rest of the line
WITHOUT_CLASSIFICATION	check to see if the column index is within the bounds of our header array
WITHOUT_CLASSIFICATION	this flag is used as a loop exit condition during parsing
WITHOUT_CLASSIFICATION	/ <summary> / How much usable data has been read into the stream, / which will not always be as long as Buffer.Length. / </summary>
WITHOUT_CLASSIFICATION	IDataTypeComponent interface methods
WITHOUT_CLASSIFICATION	CopyTableListener interface methods
WITHOUT_CLASSIFICATION	Yes
WITHOUT_CLASSIFICATION	No
WITHOUT_CLASSIFICATION	If the source column is DISTINCT and the session is PostgreSQL, try to get the underlying type.
WITHOUT_CLASSIFICATION	Date/Time types never declare a length. Just return something larger than 0 so we bypass other checks above.
WITHOUT_CLASSIFICATION	Oracle declares the column size to be 4000, regardless of the maximum length of the CLOB field. So if the Oracle BLOB/CLOB column contains values that exceed 4000 chars and we use colInfo.getColumnSize() we might create a destination column that is too small for the data that will be copied from Oracle. We specify a default value of 4000 in case the table has no records or if the BLOB/CLOB column contains only null values.
WITHOUT_CLASSIFICATION	skip this table, try the next.
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	Do Nothing
WITHOUT_CLASSIFICATION	trim the column name in case of HADB
WITHOUT_CLASSIFICATION	trim the column name in case of HADB
WITHOUT_CLASSIFICATION	final IObjectTreeAPI api = Compat.getIObjectTreeAPI(session, this);
WITHOUT_CLASSIFICATION	break;
WITHOUT_CLASSIFICATION	mockApplication
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	Only close the statement if SQLException - otherwise it has to remain open until the ResultSet is read through by the caller.
WITHOUT_CLASSIFICATION	trim the table name in case of HADB
WITHOUT_CLASSIFICATION	Reads the value from the specified ResultSet at column index index, and based on the type, calls the appropriate setXXX method on ps with the value obtained. @param ps @param sourceColType @param destColType @param index @param rs @return a string representation of the value that was bound. @throws SQLException
WITHOUT_CLASSIFICATION	Don't change the case of the identifier if database allows mixed case.
WITHOUT_CLASSIFICATION	ResultSet rs = con.getMetaData().getTables("dbcopysrc", null, "BIGINT_TYPE_TABLE", new String[]{ "TABLE" });
WITHOUT_CLASSIFICATION	private class DBCopyPluginResources extends PluginResources {DBCopyPluginResources(String rsrcBundleBaseName, IPlugin plugin) { super(rsrcBundleBaseName, plugin);}}
WITHOUT_CLASSIFICATION	Column is in both table 1 and 2
WITHOUT_CLASSIFICATION	TableModel tm = new DefaultTableModel(new String [] { "Table", "Column" }, 4) { private static final long serialVersionUID = -8826914717673025881L; public boolean isCellEditable(int rowIndex, int columnIndex) { return false; }};
WITHOUT_CLASSIFICATION	Add session ended listener -- needs for Embedded Derby DB
WITHOUT_CLASSIFICATION	_treeAPI.addDetailTab(DatabaseObjectType.INDEX, new DatabaseObjectInfoTab()); _treeAPI.addDetailTab(DatabaseObjectType.INDEX, new IndexDetailsTab());
WITHOUT_CLASSIFICATION	Shutdown Embedded Derby DB
WITHOUT_CLASSIFICATION	it is always thrown as said in Embedded Derby API. So it is not error it is info
WITHOUT_CLASSIFICATION	value is a simple string representation of the data, but NOT the same one used in the Text and in-cell operations. The in-cell version may replace newline chars with "\n" while this version does not. In other respects it is the same as the in-cell version because both use the _renderer object to do the rendering.
WITHOUT_CLASSIFICATION	/ IBM DB 2 specific code to read view definitions.
WITHOUT_CLASSIFICATION	public Folder getSubFolder(int idx) throws IndexOutOfBoundsException { / return (Folder)_folders.get(idx); }
WITHOUT_CLASSIFICATION	String CHECK_TABLE = "checktable";
WITHOUT_CLASSIFICATION	Supports Session main window only
WITHOUT_CLASSIFICATION	Tabs to add to the database node.
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	variables ======================================================================== non visible ------------------------------------------------------------------------ Logger for this class
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------ -- main
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	visible (gui) ------------------------------------------------------------------------ -- misc
WITHOUT_CLASSIFICATION	"backup metadata only" "inhibit garbage collection" "save old style metadata descriptions" "transportable format" "backup external files as tables" "start backup"
WITHOUT_CLASSIFICATION	load properties and fill missing entries with the global preferences
WITHOUT_CLASSIFICATION	######################################################################## ########## events ######################################################################## ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	lblTitle.setBackground(new Color(204,204,204)); lblTitle.setName("lblTitle"); lblTitle.setOpaque(true); lblTitle.setText("Default values"); EtchedBorder etchedborder1 = new EtchedBorder(EtchedBorder.RAISED,null,null); lblTitle.setBorder(etchedborder1); jpanel1.add(lblTitle,cc.xywh(2,2,9,1));
WITHOUT_CLASSIFICATION	case SESSION_BEAN_GRANT_AND_REVOKE: return new FirebirdManagerGrantPreferenceBean();
WITHOUT_CLASSIFICATION	/ We try to find a completely free space for the new table frame.
WITHOUT_CLASSIFICATION	Index tab
WITHOUT_CLASSIFICATION	These classes have no package see swingsetthemes.jar
WITHOUT_CLASSIFICATION	/ This theme was presented to SQuirreL by Karsten Lentzsch of jgoodies.com. It is SQuirreL's default theme if the LAF plugin is not used. Here we make the AllBluesBoldMetalTheme also available within the LAF plugin. Thanks a lot Karsten.
WITHOUT_CLASSIFICATION	call sp_help on the stored procedure, then look at the second ResultSet for the parameter information.
WITHOUT_CLASSIFICATION	the constructor above sets this from resources, but we'll override it with the name of the index.
WITHOUT_CLASSIFICATION	i do believe the getSimpleName() will end in ;1 if it's a procedure and ;0 if it's a UDF.
WITHOUT_CLASSIFICATION	GRANT { ALL [ PRIVILEGES ] | permission [ ,...n ] } { [ ( column [ ,...n ] ) ] ON { table | view } | ON { table | view } [ ( column [ ,...n ] ) ] | ON { stored_procedure | extended_procedure } | ON { user_defined_function } } TO security_account [ ,...n ] [ WITH GRANT OPTION ] [ AS { group | role } ] REVOKE [ GRANT OPTION FOR ] { ALL [ PRIVILEGES ] | permission [ ,...n ] } { [ ( column [ ,...n ] ) ] ON { table | view } | ON { table | view } [ ( column [ ,...n ] ) ] | ON { stored_procedure | extended_procedure } | ON { user_defined_function } } { TO | FROM } security_account [ ,...n ] [ CASCADE ] [ AS { group | role } ]
WITHOUT_CLASSIFICATION	private javax.swing.JComboBox cbFieldType; private javax.swing.JCheckBox chAutoIncrement; private javax.swing.JCheckBox chBinary; private javax.swing.JCheckBox chNotNull; private javax.swing.JCheckBox chUnsigned; private javax.swing.JLabel lbAttributes; private javax.swing.JLabel lbDefault; private javax.swing.JLabel lbFieldLength; private javax.swing.JLabel lbFieldName; private javax.swing.JLabel lbFieldType; private javax.swing.JLabel lbFields; private javax.swing.JTextField tfFieldDefault; private javax.swing.JTextField tfFieldLength; private javax.swing.JComboBox cbFieldName; private javax.swing.JButton buttonUpdate; private javax.swing.JButton buttonCancel; private JDialog _dlog; private FieldDetails fd; private int selectedIndex; private DBUtils dbUtils; protected String SQLCommandRoot = "ALTER TABLE "; protected String SQLCommand = ""; End of variables declaration
WITHOUT_CLASSIFICATION	Action performed for the combo box private void cbFieldNameActionPerformed(java.awt.event.ActionEvent evt) { selectedIndex = cbFieldName.getSelectedIndex(); DefaultComboBoxModel comboModel = (DefaultComboBoxModel) cbFieldName.getModel(); FieldDetails fd = (FieldDetails) comboModel.getElementAt(selectedIndex); cbFieldName.setSelectedItem(fd.getFieldName()); cbFieldType.setSelectedItem(fd.getFieldType()); tfFieldLength.setText(fd.getFieldLength()); tfFieldDefault.setText(fd.getDefault()); chAutoIncrement.setSelected(fd.IsAutoIncrement()); chNotNull.setSelected(fd.IsNotNull()); }
WITHOUT_CLASSIFICATION	final FormLayout layout = new FormLayout( "3dlu, 75dlu:grow(1.0), 3dlu", "center:pref:grow(1.0), 8dlu, bottom:pref"); final DefaultFormBuilder builder = new DefaultFormBuilder(layout); builder.setDefaultDialogBorder(); builder.setLeadingColumnOffset(1); builder.append(buildMainPanel(session, ti)); builder.nextLine(); builder.appendSeparator(); builder.nextLine(); builder.append(buildToolBar()); return builder.getPanel();
WITHOUT_CLASSIFICATION	boolean isSelected = _exportPrefsChk.isSelected(); _exportPrefsText.setEditable(isSelected); _exportPrefsBtn.setEnabled(isSelected); isSelected = _exportDriversChk.isSelected(); _exportDriversText.setEditable(isSelected); _exportDriversBtn.setEnabled(isSelected); isSelected = _exportAliasesChk.isSelected(); _exportAliasesText.setEditable(isSelected); _exportAliasesBtn.setEnabled(isSelected); _includeUserNamesChk.setEnabled(isSelected); _includePasswordsChk.setEnabled(isSelected);
WITHOUT_CLASSIFICATION	_exportDriversChk.addActionListener(_mediator); _exportAliasesChk.addActionListener(_mediator); _exportPrefsBtn.addActionListener(new BrowseButtonListener(_exportPrefsText)); _exportDriversBtn.addActionListener(new BrowseButtonListener( _exportDriversText)); _exportAliasesBtn.addActionListener(new BrowseButtonListener(_exportAliasesText)); _exportPrefsChk.setSelected(prefs.getExportPreferences()); _exportDriversChk.setSelected(prefs.getExportDrivers()); _exportAliasesChk.setSelected(prefs.getExportAliases()); _includeUserNamesChk.setSelected(prefs.getIncludeUserNames()); _includePasswordsChk.setSelected(prefs.getIncludePasswords()); _exportPrefsText.setText(prefs.getPreferencesFileName()); _exportDriversText.setText(prefs.getDriversFileName()); _exportAliasesText.setText(prefs.getAliasesFileName());
WITHOUT_CLASSIFICATION	Since it is likely to have the procedure separator on it's own line, and it is key to letting us know that proceeding statements form a multi-statement procedure or function, it deserves it's own place in the _queries arraylist. If it is followed by other procedure or function creation blocks, we may fail to detect that, so this just goes through the list and breaks apart statements on newline so that this cannot happen.
WITHOUT_CLASSIFICATION	Nil out the timer so that it can be gc'd
WITHOUT_CLASSIFICATION	Selects the distinct values from the source column.
WITHOUT_CLASSIFICATION	Inserts all keys into the new column depending on the content in the old column.
WITHOUT_CLASSIFICATION	------------------------------------------------------------------------ Thread SEARCHING ------------------------------------------------------------------------
WITHOUT_CLASSIFICATION	/ There are a lot of goodies in the ExtSettingsInitializer that might be interesting in th future. Unfortunately some conflicts with some of Squirrels shortcuts are in ExtSettingsInitializer Settings.removeInitializer(ExtSettingsInitializer.NAME); Settings.addInitializer(new ExtSettingsInitializer(), Settings.CORE_LEVEL); /
WITHOUT_CLASSIFICATION	Needs to be done at this moment. That's why we can't call updateFromPreferences() here.
WITHOUT_CLASSIFICATION	Formatting
WITHOUT_CLASSIFICATION	printing set
WITHOUT_CLASSIFICATION	The parser didn't get triggered on shift+insert. We do it here by hand
WITHOUT_CLASSIFICATION	Check for identifier
WITHOUT_CLASSIFICATION	case ISA_SLASH: state = INIT; return SQLTokenContext.MINUS;
WITHOUT_CLASSIFICATION	this didn't work final int pos = getCaretPosition(); final Document doc = _textArea.getStyledDocument(); final Element docElem = doc.getDefaultRootElement(); final Element lineElem = docElem.getElement(getCaretLineNumber()); return lineElem.getElementIndex(pos);
WITHOUT_CLASSIFICATION	GOOD - Converting a URL to a file this way is fine when the file path contains spaces
WITHOUT_CLASSIFICATION	This column is created in the create script abd unused unless testing DB2
WITHOUT_CLASSIFICATION	Tables might have triggers that depend on sequences, so drop tables next.
WITHOUT_CLASSIFICATION	db2pkCol is used to create a PK when using DB2. DB2 doesn't allow you to add a PK to a table after it has been constructed unless the column(s) that comprise the PK were originally there when created and created not null.
WITHOUT_CLASSIFICATION	We need to add a second column to have a unique constraint so that we can drop that one. Progress doesn't allow the very first index to ever be dropped.
WITHOUT_CLASSIFICATION	TODO move to new standard location and rewrite test to be less static
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.sourceforge.squirrel_sql.client.plugin.IPlugin#initialize()
WITHOUT_CLASSIFICATION	catalog schema tableName columnName dataType; 1 == CHAR typeName columnSize decimalDigits radix isNullAllowed defaultValue isNullable
WITHOUT_CLASSIFICATION	Need to adjust param which is 1-based(JDBC) to a 0-based number for array access
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	Null tests
WITHOUT_CLASSIFICATION	this should throw an exception - should not allow multiple custom tokenizers to be installed for a single session.
WITHOUT_CLASSIFICATION	Mock Objects
WITHOUT_CLASSIFICATION	We could make this expectation more restrictive currently. However, we might have impls that have wildly different queries in the future. We don't want to sacrifice flexibility to use this test for a "perceived" benefit of mirroring the current implementations.
WITHOUT_CLASSIFICATION	Should at least bind the tablename to a bind var in the SQL
WITHOUT_CLASSIFICATION	Data
WITHOUT_CLASSIFICATION	Mock objects
WITHOUT_CLASSIFICATION	FileWrapper mockDownloadsDirectory = mockHelper.createMock("mockDownloadsDirectory", FileWrapper.class); expect(mockDownloadsDirectory.isDirectory()).andStubReturn(true); expect(mockFileWrapperFactory.create(mockUpdateDirectory, UpdateUtil.DOWNLOADS_DIR_NAME)); expectLastCall().andReturn(mockDownloadsDirectory);
WITHOUT_CLASSIFICATION	expect(backupFile.getAbsolutePath()).andReturn("mockBackupFrameworkJarFile");
WITHOUT_CLASSIFICATION	mockResultSet = mockHelper.createMock(ResultSet.class);
WITHOUT_CLASSIFICATION	Java6 types ROWID NVARCHAR NCHAR LONGNVARCHAR NCLOB SQLXML
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	local expectations
WITHOUT_CLASSIFICATION	this function returns the resulting process from the exec
WITHOUT_CLASSIFICATION	Regression test for HARMONY-382
WITHOUT_CLASSIFICATION	invalid file URIs not hierarchical not file scheme not absolute non empty authority non empty query non empty fragment
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	Making sure that the directory does not exist.
WITHOUT_CLASSIFICATION	If the directory exists, add one to the directory number (making it a new directory name.)
WITHOUT_CLASSIFICATION	Tests to see if the correct prefix was used to create the tempfiles.
WITHOUT_CLASSIFICATION	Tests for creating a tempfile with a filename shorter than 3 characters.
WITHOUT_CLASSIFICATION	If the "short file name" doesn't exist, then assume that the 8.3 file name compatibility is disabled.
WITHOUT_CLASSIFICATION	Old test left behind "garbage files" so this time it creates a directory that is guaranteed not to already exist (and deletes it afterward.)
WITHOUT_CLASSIFICATION	Checking to make sure the correct files were are listed in the array.
WITHOUT_CLASSIFICATION	Do not return null when trying to use list(Filename Filter) on a file rather than a directory. All other "list" methods return null for this test case.
WITHOUT_CLASSIFICATION	Assert is flawed because canWrite does not work. assertTrue("File f1 Is Set To ReadOnly." , f1.canWrite());
WITHOUT_CLASSIFICATION	Need a directory that exists
WITHOUT_CLASSIFICATION	Regression for HARMONY-2674
WITHOUT_CLASSIFICATION	testLongVarbinaryColType(sourceName, destName); testNumericColType(sourceName, destName); testRealColType(sourceName, destName); testSmallIntColType(sourceName, destName); testTimestampColType(sourceName, destName); testTimeColType(sourceName, destName); testTinyIntColType(sourceName, destName);
WITHOUT_CLASSIFICATION	ISession mockSession = mockHelper.createMock(ISession.class); IApplication mockApplication = mockHelper.createMock(IApplication.class); expect(mockSession.getApplication()).andStubReturn(mockApplication); TaskThreadPool mockThreadPool = mockHelper.createMock(TaskThreadPool.class); mockThreadPool.addTask(EasyMock.isA(Runnable.class)); expectLastCall().anyTimes(); expect(mockApplication.getThreadPool()).andStubReturn(mockThreadPool); String[] tableTypes = new String[] { "TABLE" }; ISQLConnection mockSQLConnection = mockHelper.createMock(ISQLConnection.class); expect(mockSession.getSQLConnection()).andStubReturn(mockSQLConnection); SQLDatabaseMetaData mockSQLDatabaseMetaData = mockHelper.createMock(SQLDatabaseMetaData.class); expect(mockSQLConnection.getSQLMetaData()).andStubReturn(mockSQLDatabaseMetaData); expect(mockSQLDatabaseMetaData.getTableTypes()).andStubReturn(tableTypes); mockHelper.replayAll(); classUnderTest = new DefaultDatabaseExpander(mockSession); mockHelper.verifyAll(); mockHelper.resetAll();
WITHOUT_CLASSIFICATION	IMessageHandler messageHandler = getEasyMockMessageHandler();
IMPLEMENTATION	TODO (@author karlpeder): Implementation of undo/redo missing
IMPLEMENTATION	TODO (@author karlpeder): Implementation of undo/redo missing
IMPLEMENTATION	TODO (@author karlpeder): Implementation of undo/redo missing
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: @author fdietz replace with regular expression
IMPLEMENTATION	TODO finish marshalling of all available properties
IMPLEMENTATION	TODO finish unmarshalling of all available properties
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO: @author fdietz replace with regular expression
IMPLEMENTATION	TODO: @author fdietz replace with regular expression
IMPLEMENTATION	TODO implement me!
IMPLEMENTATION	TODO implement me!
IMPLEMENTATION	TODO implement validation
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO Auto-generated constructor stub
IMPLEMENTATION	TODO (@author fdietz): implement
IMPLEMENTATION	TODO (@author fdietz): implement
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO implement
IMPLEMENTATION	not implemented yet
IMPLEMENTATION	create subject headerfield in using the senders message subject and prepending "Re:" if not already there @param header A <code>ColumbaHeader</code> which contains the headerfields of the message we want reply/forward. FIXME (@author fdietz): we need to i18n this!
IMPLEMENTATION	create Subject headerfield in using the senders message subject and prepending "Fwd:" if not already there @param header A <code>ColumbaHeader</code> which contains the headerfields of the message we want reply/forward. FIXME (@author fdietz): we need to i18n this!
IMPLEMENTATION	html - quoting is done by inserting a div around the message formattet with a blue line at left edge TODO (@author fdietz): Implement quoting (font color, stylesheet, blockquote???)
IMPLEMENTATION	TODO Auto-generated constructor stub
IMPLEMENTATION	TODO (@author fdietz): show error dialoghere
IMPLEMENTATION	TODO (@author fdietz): add error dialog
IMPLEMENTATION	TODO (@author fdietz): add error dialog
IMPLEMENTATION	TODO (@author karlpeder): Implementation of undo/redo missing
IMPLEMENTATION	TODO (@author fdietz): keep track of progress here
IMPLEMENTATION	TODO (@author javaprog):sizeComboBox can be enabled as paragraphComboBox when implemented
IMPLEMENTATION	TODO (@author fdietz):: implement action for font size combo box!
IMPLEMENTATION	TODO (@author fdietz): i18n
IMPLEMENTATION	TODO (@author fdietz): i18n
IMPLEMENTATION	TODO localize filter action names
IMPLEMENTATION	TODO localize filter action names
IMPLEMENTATION	TODO implement clear()
IMPLEMENTATION	TODO (@author fdietz): make i18n!
IMPLEMENTATION	FIXME threaded-view auto collapse
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO @author hubms show if there is already a virtual folder for this tag
IMPLEMENTATION	TODO: Show dialog
IMPLEMENTATION	update status message TODO (@author fdietz): i18n
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO: Add dialog to inform user that the smtp server does not support authentication
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	TODO Auto-generated catch block
IMPLEMENTATION	not needed
IMPLEMENTATION	not needed
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: implement this
IMPLEMENTATION	TODO: implement this
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO Auto-generated method stub
IMPLEMENTATION	TODO: @author fdietz replace with regular expression
IMPLEMENTATION	TODO: @author fdietz replace with regular expression
IMPLEMENTATION	TODO: @author fdietz replace with regular expression
WITHOUT_CLASSIFICATION	MUST do this for background to show up.
WITHOUT_CLASSIFICATION	XmlElement.printNode(item.getRoot(), "");
WITHOUT_CLASSIFICATION	private MainInterface mainInterface;
WITHOUT_CLASSIFICATION	retrieve list of all group members
WITHOUT_CLASSIFICATION	example configuration (tree.xml): <filter description="gnome" enabled="true"> <rules condition="matchany"> <criteria criteria="contains" headerfield="To or Cc" pattern="gnome" type="To or Cc"></criteria> </rules> <actionlist> <action uid="120" type="Move Message"></action> </actionlist> </filter>
WITHOUT_CLASSIFICATION	if not specified return empty iterator
WITHOUT_CLASSIFICATION	add all suffixes
WITHOUT_CLASSIFICATION	list of prefixes
WITHOUT_CLASSIFICATION	email addresses and phone numbers
WITHOUT_CLASSIFICATION	ensure that we are currently in the contact component
WITHOUT_CLASSIFICATION	public String marshall(IStructureType type); public IStructureType unmarshall(String xmlString);
WITHOUT_CLASSIFICATION	public FilterCriteria getCriteria(int index) { return (FilterCriteria) list.get(index); }
WITHOUT_CLASSIFICATION	passive: if not initialized do it now
WITHOUT_CLASSIFICATION	passive: if not initialized do it now
WITHOUT_CLASSIFICATION	still not ready, exit!
WITHOUT_CLASSIFICATION	still not ready, exit!
WITHOUT_CLASSIFICATION	wait for stream threads to die
WITHOUT_CLASSIFICATION	Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	update table
WITHOUT_CLASSIFICATION	set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	get array of message UIDs
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	close DB
WITHOUT_CLASSIFICATION	get source reference
WITHOUT_CLASSIFICATION	score message
WITHOUT_CLASSIFICATION	if message is spam
WITHOUT_CLASSIFICATION	mark message as spam
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	!!! Size = 12 create filter configuration -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	xp[0] = x + 6; xp[1] = x + 12; xp[2] = x; yp[0] = y - (c.getHeight() / 4); yp[1] = y + (c.getHeight() / 4); yp[2] = y + (c.getHeight() / 4); g2.setColor(Color.white); g2.drawLine(xp[0], yp[0], xp[1], yp[1]); g2.drawLine(xp[1], yp[1], xp[2], yp[2]); g2.setColor(Color.gray); g2.drawLine(xp[2], yp[2], xp[0], yp[0]);
WITHOUT_CLASSIFICATION	l_year = new JLabel(); p1.add(l_year);
WITHOUT_CLASSIFICATION	JPanel p2 = new JPanel(); p2.setLayout(new FlowLayout(FlowLayout.LEFT)); top.add("East", p2); b_lyear = new JButton("<"); b_lyear.addActionListener( this ); b_lyear.setMargin(KiwiUtils.emptyInsets); b_lyear.setFocusPainted(false); b_lyear.setOpaque(false); b_lyear.addActionListener(this); p2.add(b_lyear); l_year = new JLabel(); p2.add(l_year); b_ryear = new JButton(">"); b_ryear.addActionListener( this ); b_ryear.setMargin(KiwiUtils.emptyInsets); b_ryear.setFocusPainted(false); b_ryear.setOpaque(false); b_ryear.addActionListener(this); p2.add(b_ryear);
WITHOUT_CLASSIFICATION	gc.draw3DRect(xp, yp, cellSize, cellSize, true); if the cell is selected, fill it with the highlight color
WITHOUT_CLASSIFICATION	apply transparent icon
WITHOUT_CLASSIFICATION	search for mnemonic
WITHOUT_CLASSIFICATION	mnemonic found ...and not at the end of the string (which doesn't make sence)
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	super(str); set menu text incl. mnemonic if specified
WITHOUT_CLASSIFICATION	icon (we can't use the setIcon-method this time, as it relies on the border being set)
WITHOUT_CLASSIFICATION	Changing the Divider Border Visibility
WITHOUT_CLASSIFICATION	if we stopped at line break, increase array index pointer
WITHOUT_CLASSIFICATION	look and feel
WITHOUT_CLASSIFICATION	look and feel
WITHOUT_CLASSIFICATION	remember if Look And Feel has been changed
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	theme selection changed
WITHOUT_CLASSIFICATION	Init PGP
WITHOUT_CLASSIFICATION	get notified if search result arrived, to update view
WITHOUT_CLASSIFICATION	use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	if the collapsible is collapsed, we do not want its border to be painted.
WITHOUT_CLASSIFICATION	g.setColor(borderColor2); g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	JScrollPane scrollPane = new JScrollPane(tree); scrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED); add(scrollPane, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	Init Plugins
WITHOUT_CLASSIFICATION	titlebar.setMidColor(INACTIVE_MID_COLOR); titlebar.setFillColor(INACTIVE_FILL_COLOR); titlebar.setTitleColor(INACTIVE_LABEL_COLOR, INACTIVE_MID_COLOR, false);
WITHOUT_CLASSIFICATION	contentPanel.setBorder(new LineBorder(ACTIVE_BORDER_COLOR, 1));
WITHOUT_CLASSIFICATION	setBorder(BorderFactory.createEmptyBorder(2, 5, 3, 0)); setBorder(BorderFactory.createEmptyBorder(2, 2, 2, 2));
WITHOUT_CLASSIFICATION	builder2.addFixedNarrow((JButton) leftButtonVector.get(i)); builder2.addStrut(Sizes.pixel(2));
WITHOUT_CLASSIFICATION	GradientPaint painter = new GradientPaint(0, 0, midColor.brighter(), 0, 5, midColor); g2.setPaint(painter); g2.fillRect(0,0,w,5); new GradientPaint(0, h-1, midColor, 0, h-1-5, Color.red); g2.setPaint(painter); g2.fillRect(0,h-5,w,5);
WITHOUT_CLASSIFICATION	GeneralPath path = generatePath(h, w); g2.setColor(fillColor); g2.fill(path); path = generateTopPath(w); GradientPaint painter = new GradientPaint(0, 0, startColor, 0, 5, midColor); g2.setPaint(painter); g2.fill(path); path = generatePath(h, w); g2.setColor(UIManager.getColor("controlDkShadow")); g2.draw(path);
WITHOUT_CLASSIFICATION	the indent-number attribute causes an IllegalArgumentException under 1.4
WITHOUT_CLASSIFICATION	titleBar.addButton(new PinIcon(), new PinAction(this.getPersistentId()), BorderLayout.EAST); titleBar.addButton(new MaximizeIcon(), new MaximizeAction(this .getPersistentId()), BorderLayout.EAST);
WITHOUT_CLASSIFICATION	this is executed on shutdown: store all open frames so that they can be restored on the next start
WITHOUT_CLASSIFICATION	clear the tooltip message previously displayed in the status bar
WITHOUT_CLASSIFICATION	overwrite this method
WITHOUT_CLASSIFICATION	remove from old mediator's listener list
WITHOUT_CLASSIFICATION	use new viewitem
WITHOUT_CLASSIFICATION	use new viewitem
WITHOUT_CLASSIFICATION	20030831, karlpeder Also location is restored
WITHOUT_CLASSIFICATION	awt-event-thread
WITHOUT_CLASSIFICATION	awt-event-thread
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	short cut key
WITHOUT_CLASSIFICATION	OptionsItem optionsItem = MailConfig.getInstance().getOptionsItem(); String selectedBrowser = optionsItem.getStringWithDefault( OptionsItem.MESSAGEVIEWER, OptionsItem.SELECTED_BROWSER, "Default");
WITHOUT_CLASSIFICATION	in case of an error -> fall-back to Swing's built-in JTextPane
WITHOUT_CLASSIFICATION	update tree model
WITHOUT_CLASSIFICATION	PluginManager.getInstance().setEnabled(id, ((Boolean) value).booleanValue());
WITHOUT_CLASSIFICATION	mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	listView = new FilterListTable(filterList, this); listView.getSelectionModel().addListSelectionListener(this); JScrollPane scrollPane = new JScrollPane(listView); scrollPane.setPreferredSize(new Dimension(300, 250)); scrollPane.getViewport().setBackground(Color.white); centerPanel.add(scrollPane);
WITHOUT_CLASSIFICATION	Component strut2 = Box.createRigidArea(new Dimension(30, 5)); gridBagLayout.setConstraints(strut2, c); eastPanel.add(strut2); gridBagLayout.setConstraints(defaultButton, c); eastPanel.add(defaultButton);
WITHOUT_CLASSIFICATION	save to profiles.xml
WITHOUT_CLASSIFICATION	save to profiles.xml
WITHOUT_CLASSIFICATION	save to profiles.xml
WITHOUT_CLASSIFICATION	top.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	add result panel as listener for new search results
WITHOUT_CLASSIFICATION	create list of search requests
WITHOUT_CLASSIFICATION	create a rounded clip LARGER than the comp
WITHOUT_CLASSIFICATION	fill the clipped area g2d.setPaint(LIGHT_GRADIENT);
WITHOUT_CLASSIFICATION	paint inner border g2d.setPaint(INNER);
WITHOUT_CLASSIFICATION	builder.append(moreButton);
WITHOUT_CLASSIFICATION	get first provider ISearchProvider provider = searchPanel.getSearchManager() .getAllProviders().next(); ISearchCriteria defaultCriteria = null; SearchBar.this.searchPanel.searchInCriteria( textField.getText(), provider.getTechnicalName(), provider.getDefaultCriteria(textField.getText()) .getTechnicalName(), searchInsideCheckBox .isSelected());
WITHOUT_CLASSIFICATION	Map<String, ISearchProvider> historyMap = SearchHistoryList .getInstance().getHistoryMap();
WITHOUT_CLASSIFICATION	setBorder(BorderFactory.createEmptyBorder(1, 2, 1, 2));
WITHOUT_CLASSIFICATION	layoutComponents();
WITHOUT_CLASSIFICATION	taskButton = new JButton(); taskButton.setIcon(ImageLoader.getImageIcon("group_small.png")); taskButton.setToolTipText("Show list of running tasks"); taskButton.setRolloverEnabled(true); taskButton.setActionCommand("TASKMANAGER"); taskButton.addActionListener(this); taskButton.setBorder(BorderFactory.createEmptyBorder(1, 1, 1, 1));
WITHOUT_CLASSIFICATION	protected void layoutComponents() { setLayout(new BorderLayout()); leftMainPanel = new JPanel(); leftMainPanel.setLayout(new BorderLayout()); JPanel taskPanel = new JPanel(); taskPanel.setLayout(new BorderLayout()); Border border = getDefaultBorder(); Border margin = new EmptyBorder(0, 0, 0, 2); taskPanel.setBorder(new CompoundBorder(border, margin)); taskPanel.add(taskButton, BorderLayout.CENTER); leftMainPanel.add(taskPanel, BorderLayout.WEST); JPanel labelPanel = new JPanel(); labelPanel.setLayout(new BorderLayout()); margin = new EmptyBorder(0, 10, 0, 10); labelPanel.setBorder(new CompoundBorder(border, margin)); margin = new EmptyBorder(0, 0, 0, 2); labelPanel.add(label, BorderLayout.CENTER); leftMainPanel.add(labelPanel, BorderLayout.CENTER); add(leftMainPanel, BorderLayout.CENTER); mainRightPanel = new JPanel(); mainRightPanel.setLayout(new BorderLayout()); JPanel progressPanel = new JPanel(); progressPanel.setLayout(new BorderLayout()); progressPanel.setBorder(new CompoundBorder(border, margin)); progressPanel.add(progressBar, BorderLayout.CENTER); JPanel rightPanel = new JPanel(); rightPanel.setLayout(new BorderLayout()); rightPanel.add(progressPanel, BorderLayout.CENTER); JPanel onlinePanel = new JPanel(); onlinePanel.setLayout(new BorderLayout()); onlinePanel.setBorder(new CompoundBorder(border, margin)); onlinePanel.add(onlineButton, BorderLayout.CENTER); rightPanel.add(onlinePanel, BorderLayout.EAST); add(rightPanel, BorderLayout.EAST); } public Border getDefaultBorder() { return UIManager.getBorder("TableHeader.cellBorder"); }
WITHOUT_CLASSIFICATION	public static JButton createAnimatedIconButton() { ImageSequenceTimer button = new ImageSequenceTimer(); return button; }
WITHOUT_CLASSIFICATION	menu.add(new CMenuItem(new OpenNewMailWindowAction(null))); menu.add(new CMenuItem(new OpenNewAddressbookWindowAction(null))); menu.addSeparator(); menu.add(new CMenuItem(new AboutDialogAction(null))); menu.add(new CMenuItem(new ShowHelpAction(null))); menu.addSeparator(); menu.add(new CMenuItem(new ExitAction(null)));
WITHOUT_CLASSIFICATION	does not occur
WITHOUT_CLASSIFICATION	does not occur
WITHOUT_CLASSIFICATION	register interested on changes in the running worker list
WITHOUT_CLASSIFICATION	register as configuration change listener
WITHOUT_CLASSIFICATION	should we really overwrite the Look and Feel font settings
WITHOUT_CLASSIFICATION	UIManager.put("Label.font", mainFont); UIManager.put("Textfield.font", mainFont); UIManager.put("TextArea.font", mainFont); UIManager.put("MenuItem.font", mainFont); UIManager.put("MenuItem.acceleratorFont", mainFont); UIManager.put("Menu.font", mainFont); UIManager.put("Menu.acceleratorFont", mainFont); UIManager.put("MenuBar.font", mainFont); UIManager.put("Tree.font", mainFont); UIManager.put("Table.font", mainFont); UIManager.put("Button.font", mainFont); UIManager.put("CheckBoxButton.font", mainFont); UIManager.put("RadioButton.font", mainFont); UIManager.put("ComboBox.font", mainFont); UIManager.put("ToggleButton.font", mainFont); UIManager.put("CheckBoxMenuItem.font", mainFont); UIManager.put("RadioButtonMenuItem.font", mainFont); UIManager.put("TabbedPane.font", mainFont); UIManager.put("List.font", mainFont);
WITHOUT_CLASSIFICATION	mark found pattern (select) text.grabFocus();
WITHOUT_CLASSIFICATION	attempt
WITHOUT_CLASSIFICATION	If the fifo could not be restored initialize it
WITHOUT_CLASSIFICATION	we can't just load the first constructor -> go find the correct constructor based -> based on the arguments
WITHOUT_CLASSIFICATION	we can't just load the first constructor -> go find the correct constructor based -> based on the arguments
WITHOUT_CLASSIFICATION	do nothinh here ... use finalClose
WITHOUT_CLASSIFICATION	cancel
WITHOUT_CLASSIFICATION	cancel
WITHOUT_CLASSIFICATION	cancel
WITHOUT_CLASSIFICATION	e.printStackTrace();
WITHOUT_CLASSIFICATION	System.setProperty("javax.net.debug", "ssl,handshake,data,trustmanager"); init java.net.ssl debugging
WITHOUT_CLASSIFICATION	retrieve inputstream from resource
WITHOUT_CLASSIFICATION	use default Java classlodaer
WITHOUT_CLASSIFICATION	startup Columba
WITHOUT_CLASSIFICATION	stop server when shutting down
WITHOUT_CLASSIFICATION	we add every jar-file in /lib, too plugin-directory
WITHOUT_CLASSIFICATION	client isn't from local machine
WITHOUT_CLASSIFICATION	"store" html in jTextPane container reset starting position in y-direction
WITHOUT_CLASSIFICATION	set Look & Feel
WITHOUT_CLASSIFICATION	20030609, karlpeder Introduced scaling
WITHOUT_CLASSIFICATION	20030609, karlpeder Introduced scaling
WITHOUT_CLASSIFICATION	handle commandline parameters
WITHOUT_CLASSIFICATION	child views exist - operate recursively on these
WITHOUT_CLASSIFICATION	Add the tray icon to the System tray ColumbaTrayIcon.getInstance().addToSystemTray( FrameManager.getInstance().getActiveFrameMediator() .getFrameMediator());
WITHOUT_CLASSIFICATION	no childs - we have a leaf view (i.e. with contents)
WITHOUT_CLASSIFICATION	call the postStartups of the modules e.g. check for default mailclient
WITHOUT_CLASSIFICATION	calculate a new break height according to the contents, possibly smaller to break before some content (i.e. not to break in the middle of something
WITHOUT_CLASSIFICATION	following internal components plugin registration
WITHOUT_CLASSIFICATION	oops, something went wrong
WITHOUT_CLASSIFICATION	Platform maintainers: add your platform here
WITHOUT_CLASSIFICATION	If the height of a view exceeds the paperheight, there should be no break before (since it will be impossible to fit it in anywhere => an infinite loop). We don't have access to the pageheight here, therefore an "educated guess" is made: No breaks are inserted before views starting within the first 1% (chosen to avoid round-off errors) of the available space given by actBreakHeight. If the view starts after the first 1%, a break is inserted and the view will start at the top of the next page (i.e. withing the first 1% this time).
WITHOUT_CLASSIFICATION	no configuration available, create default config
WITHOUT_CLASSIFICATION	no configuration available, create default config
WITHOUT_CLASSIFICATION	create new locale xml treenode
WITHOUT_CLASSIFICATION	classLoader = ClassLoader.getSystemClassLoader();
WITHOUT_CLASSIFICATION	use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	I specifically want this here to ensure that the directory exists and this method never returns null. Any files that were in the observation list have already been previously removed by checkFiles().
WITHOUT_CLASSIFICATION	remove from script list
WITHOUT_CLASSIFICATION	add toolbar button between last button and cancel button
WITHOUT_CLASSIFICATION	it's the script responsability to define the "metadata" by invoking .setName(), .setAuthor() and .setDescription()
WITHOUT_CLASSIFICATION	it's the script responsability to define the "metadata" by invoking .setName(), .setAuthor() and .setDescription()
WITHOUT_CLASSIFICATION	stop background-manager so it doesn't interfere with shutdown manager
WITHOUT_CLASSIFICATION	wait 10 seconds and check for pending commands again this is useful if a command causes a deadlock
WITHOUT_CLASSIFICATION	clear
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	is true if the last search was successful a position of the word after the last search ivokation; -1 if nothing found a position of the word after the last replace ivokation; -1 if nothing was replaced
WITHOUT_CLASSIFICATION	false if search/replace is currently working
WITHOUT_CLASSIFICATION	some other version of the constructor
WITHOUT_CLASSIFICATION	the implementation of the search function. It returns always the position of the FIRST found word.
WITHOUT_CLASSIFICATION	Determine whether there are 1, 2, or 3 names specified. These names should be separated by spaces or commas. If a comma separates the first two names, assume that the last name is specified first, Otherwise, assume the first name is specified first. Middle name is always specified after the first name.
WITHOUT_CLASSIFICATION	Buffer for collecting data from the "characters" SAX event.
WITHOUT_CLASSIFICATION	setup and load constructor
WITHOUT_CLASSIFICATION	Create the XML reader... xr = XMLReaderFactory.createXMLReader();
WITHOUT_CLASSIFICATION	Set the ContentHandler... xr.setContentHandler( this );
WITHOUT_CLASSIFICATION	Resetting contents buffer. Assuming that tags either tag content or children, not both. This is usually the case with XML that is representing data strucutures in a programming language independant way. This assumption is not typically valid where XML is being used in the classical text mark up style where tagging is used to style content and several styles may overlap at once.
WITHOUT_CLASSIFICATION	Test for int hashCode().
WITHOUT_CLASSIFICATION	Test for boolean equals(Object)
WITHOUT_CLASSIFICATION	Test for boolean equals(Object)
WITHOUT_CLASSIFICATION	top-level structure
WITHOUT_CLASSIFICATION	top-level structure
WITHOUT_CLASSIFICATION	mandatory String-based attribute
WITHOUT_CLASSIFICATION	remove configuration directory
WITHOUT_CLASSIFICATION	LinkedList testList = new LinkedList(listFull_I);ListTools.intersect(testList,listFull_I);assertTrue(testList.equals(listFull_I));testList = new LinkedList(listFull_I);ListTools.intersect(testList,new LinkedList());assertTrue(testList.size()==0);testList = new LinkedList(listFull_I);ListTools.intersect(testList,listPart1_I);assertTrue(testList.equals(listPart1_I));testList = new LinkedList(listFull_I);ListTools.intersect(testList,listPart2_I);assertTrue(testList.equals(listPart2_I));testList = new LinkedList(listPart1_I);ListTools.intersect(testList,listPart2_I);assertTrue(testList.size()==0);
WITHOUT_CLASSIFICATION	mod: 20040629 SWITT for redirecting feature If FROM value was set, take this as From, else take Identity
WITHOUT_CLASSIFICATION	BufferedReader in = new BufferedReader( new InputStreamReader( new FileInputStream(file), model.getCharsetName()));
WITHOUT_CLASSIFICATION	Set Default Charset or selected
WITHOUT_CLASSIFICATION	check if the charset is US-ASCII then there is something wrong -> switch to UTF-8 and write to log-file
WITHOUT_CLASSIFICATION	20030921, karlpeder The old code was (accidentially!?) modifying the attachment list of the model. This affects the composing when called a second time for saving the message after sending!
WITHOUT_CLASSIFICATION	Set recipients from the recipients vector
WITHOUT_CLASSIFICATION	validates a hostname, i.e.: mail.myhost.com mail.us.myhost.com 127.0.0.1
WITHOUT_CLASSIFICATION	return default-account ImapItem instead
WITHOUT_CLASSIFICATION	return default-account ImapItem instead
WITHOUT_CLASSIFICATION	return default-account ImapItem instead
WITHOUT_CLASSIFICATION	private File file;
WITHOUT_CLASSIFICATION	public AdapterNode addEmptyFilterCriteria(AdapterNode filterRuleNode) { Element child = createElementNode("filtercriteria"); Element subNode = createTextElementNode("headeritem", "Subject"); addElement(child, subNode); subNode = createTextElementNode("criteria", "contains"); addElement(child, subNode); subNode = createTextElementNode("pattern", "pattern"); addElement(child, subNode); subNode = createTextElementNode("type", "Subject"); addElement(child, subNode); filterRuleNode.domNode.appendChild(child); return new AdapterNode(child);}
WITHOUT_CLASSIFICATION	options.xml <options> <gui> <messageviewer inline_attachments="false"> <smilies enabled="true" /> <quote color="0" enabled="true" /> </messageviewer> <tree> <sorting sorted="true" ascending="true" comparator="alphabetic" /> </tree> </gui> <html prefer="true" /> <markasread delay="2" enabled="true" /> <headerviewer style="0" headerfields="Subject Date Reply-To From To Cc Bcc" /> </options>
WITHOUT_CLASSIFICATION	Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	example: "columba:org.columba.mail/<folder-id>/<message-id>"
WITHOUT_CLASSIFICATION	retrieve Command of filter action
WITHOUT_CLASSIFICATION	string to search
WITHOUT_CLASSIFICATION	string to search
WITHOUT_CLASSIFICATION	string to search
WITHOUT_CLASSIFICATION	string to search
WITHOUT_CLASSIFICATION	string to search
WITHOUT_CLASSIFICATION	create reference
WITHOUT_CLASSIFICATION	create reference
WITHOUT_CLASSIFICATION	create reference
WITHOUT_CLASSIFICATION	create reference
WITHOUT_CLASSIFICATION	create reference
WITHOUT_CLASSIFICATION	create reference
WITHOUT_CLASSIFICATION	if there is no search engine, try the default one
WITHOUT_CLASSIFICATION	iterate through all foldertypes to find suitable ones
WITHOUT_CLASSIFICATION	Add child to parent
WITHOUT_CLASSIFICATION	register interest on tree node changes
WITHOUT_CLASSIFICATION	no filterlist treenode found -> create a new one
WITHOUT_CLASSIFICATION	get message with UID
WITHOUT_CLASSIFICATION	close stream
WITHOUT_CLASSIFICATION	close stream
WITHOUT_CLASSIFICATION	close stream
WITHOUT_CLASSIFICATION	close stream
WITHOUT_CLASSIFICATION	parse header
WITHOUT_CLASSIFICATION	message is already cached try to compare the headerfield count of the actually parsed message with the cached headerfield count
WITHOUT_CLASSIFICATION	We need to parse get message with UID
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get array of message UIDs
WITHOUT_CLASSIFICATION	use wrapper class for easier handling of references array adapter = new FolderCommandAdapter( (MailFolderCommandReference[]) getReferences()); get array of source references MailFolderCommandReference[] r = adapter.getSourceFolderReferences();
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	skip if message is not marked as spam
WITHOUT_CLASSIFICATION	move message to user-configured folder (generally "Junk" folder)
WITHOUT_CLASSIFICATION	get color from factory ->factory shares color objects to save memory
WITHOUT_CLASSIFICATION	create virtual folder (is attached to parentFolder)
WITHOUT_CLASSIFICATION	get destination foldedr
WITHOUT_CLASSIFICATION	two different root folders -> get inputstream from source-folder and add it to -> destination-folder as inputstream -----> moving of raw message source (works also for copying from local to IMAP folders, etc.
WITHOUT_CLASSIFICATION	We are done - clear the status message with a delay
WITHOUT_CLASSIFICATION	setup dialog title, active filter and file name
WITHOUT_CLASSIFICATION	save message
WITHOUT_CLASSIFICATION	Does the user prefer html or plain text?
WITHOUT_CLASSIFICATION	decode message body with respect to charset
WITHOUT_CLASSIFICATION	decode message body with respect to charset
WITHOUT_CLASSIFICATION	use body as is
WITHOUT_CLASSIFICATION	insert into message right after <body...>
WITHOUT_CLASSIFICATION	test on extension
WITHOUT_CLASSIFICATION	check if virtual folder, if yes, do not use these uids, use the real uids instead
WITHOUT_CLASSIFICATION	DateFormat
WITHOUT_CLASSIFICATION	20031216, karlpeder Changed handling of dates. Previously columba.date header was used. Now we use the Date header instead
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	display status message
WITHOUT_CLASSIFICATION	display status message
WITHOUT_CLASSIFICATION	display status message
WITHOUT_CLASSIFICATION	skip, if filter is disabled
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	message size should be at least 1 KB
WITHOUT_CLASSIFICATION	save boolean headerfields, compressing them to one int value
WITHOUT_CLASSIFICATION	If we have new messages add them to the headerlist
WITHOUT_CLASSIFICATION	-2 because of the decrement in line 317 removedLocalUids = localUids.size() - 2 - position;
WITHOUT_CLASSIFICATION	Find missing uids loop
WITHOUT_CLASSIFICATION	Sanity tests
WITHOUT_CLASSIFICATION	update headerlist of destination-folder -> this is necessary to reflect the changes visually but only do it if the target folder is still in sync!
WITHOUT_CLASSIFICATION	super(node, folderItem); super(getDefaultItem("IMAPRootFolder", getDefaultProperties()));
WITHOUT_CLASSIFICATION	if have already a suitable folder skip the search
WITHOUT_CLASSIFICATION	parse line by line
WITHOUT_CLASSIFICATION	if line doesn't start with "From" or line length is 0 -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	setup filter configuration
WITHOUT_CLASSIFICATION	only create new subfolders if we used the default "Search Folder"
WITHOUT_CLASSIFICATION	update tree-node (for renaming the new folder)
WITHOUT_CLASSIFICATION	if the parent is a virtual folder the search cannot be applied directly look for the correct uids by finding the first non virtual folder
WITHOUT_CLASSIFICATION	Now we can search this folder since no mail from this folder will come in the list
WITHOUT_CLASSIFICATION	get list of plugins
WITHOUT_CLASSIFICATION	load plugin
WITHOUT_CLASSIFICATION	notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	String definitions for the charsetnames NOTE: these are also used to look up the menuentries from the resourceloader
WITHOUT_CLASSIFICATION	simulate charset changed to initialize selectedMenuItem
WITHOUT_CLASSIFICATION	set default html or text based on stored option ... can be overridden by setting the composer model
WITHOUT_CLASSIFICATION	default value is 200 pixel int pos = viewItem.getIntegerWithDefault("splitpanes","attachment", 200);
WITHOUT_CLASSIFICATION	20030906, karlpeder Method signature changed to return an AbstractEditorController
WITHOUT_CLASSIFICATION	don't prompt user if composer should be closed
WITHOUT_CLASSIFICATION	close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	setText(accountName);
WITHOUT_CLASSIFICATION	int index = locationToIndex(new Point(x, y)); setSelectedIndex(index);
WITHOUT_CLASSIFICATION	model.setSignMessage(signMenuItem.isSelected()); model.setEncryptMessage(encryptMenuItem.isSelected());
WITHOUT_CLASSIFICATION	attachment controller doesn't support paste actions
WITHOUT_CLASSIFICATION	attachment controller doesn't support redo operation
WITHOUT_CLASSIFICATION	get first selected message
WITHOUT_CLASSIFICATION	get first selected message
WITHOUT_CLASSIFICATION	get headerfields
WITHOUT_CLASSIFICATION	get headerfields
WITHOUT_CLASSIFICATION	create composer model
WITHOUT_CLASSIFICATION	set subject
WITHOUT_CLASSIFICATION	setup to, references and account
WITHOUT_CLASSIFICATION	Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	Do decoding stuff
WITHOUT_CLASSIFICATION	Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	Html: Insertion of text before and after original message get necessary headerfields
WITHOUT_CLASSIFICATION	Html: Insertion of text before and after original message get necessary headerfields
WITHOUT_CLASSIFICATION	Remove duplicates or the mail address from the receiver account
WITHOUT_CLASSIFICATION	select the account this mail was received from
WITHOUT_CLASSIFICATION	remove the bodypart from the mimeparts that are added to the attachment viewer
WITHOUT_CLASSIFICATION	debug output
WITHOUT_CLASSIFICATION	choose addressbook
WITHOUT_CLASSIFICATION	try to fill the contact list
WITHOUT_CLASSIFICATION	folder selection changed
WITHOUT_CLASSIFICATION	register for text selection changes controller.getEditorController().addObserver(this);
WITHOUT_CLASSIFICATION	set initial enabled state of combo boxes XmlElement optionsElement = MailConfig.getInstance().get( "composer_options").getElement("/options"); XmlElement htmlElement = optionsElement.getElement("html"); String s = htmlElement.getAttribute("enable", "false"); boolean enableHtml = Boolean.valueOf(s).booleanValue();
WITHOUT_CLASSIFICATION	FormLayout layout = new FormLayout( "default, 3dlu, default, 3dlu, default, 3dlu, " + "default, 3dlu, default, 3dlu, default, 3dlu, " + "default, 6dlu, default, 3dlu, default, 3dlu, " + "default, 3dlu", "fill:default"); PanelBuilder b = new PanelBuilder(this, layout); CellConstraints c = new CellConstraints(); b.add(paragraphComboBox, cc.xy(1, 1)); b.add(sizeLabel, cc.xy(3, 1)); b.add(sizeComboBox, cc.xy(5, 1)); b.add(boldFormatButton, cc.xy(7, 1)); b.add(italicFormatButton, cc.xy(9, 1)); b.add(underlineFormatButton, cc.xy(11, 1)); b.add(strikeoutFormatButton, cc.xy(13, 1)); b.add(leftJustifyButton, cc.xy(15, 1)); b.add(centerJustifyButton, cc.xy(17, 1)); b.add(rightJustifyButton, cc.xy(19, 1));
WITHOUT_CLASSIFICATION	Handling of paragraph combo box select the item in the combo box corresponding to present format
WITHOUT_CLASSIFICATION	this can throw a ChangedCharsetException
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	register interest on configuratin changes
WITHOUT_CLASSIFICATION	20030906, karlpeder Method signature changed to take an AbstractEditorController (instead of an TextEditorView) as parameter since the view is no longer directly available
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	Add components to the panel: builder.append(defaultAccountCheckBox, 7); builder.nextLine();
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	builder.append(sslLabel, 3); builder.nextLine(); builder.append(disableSSLConnectionRadioButton, 2); builder.nextLine(); builder.append(enableSSLConnectionRadioButton, 2); builder.nextLine(); builder.append(enableSTARTTLSExtensionRadioButton, 2); builder.nextLine();
WITHOUT_CLASSIFICATION	Account is an IMAP account -> change root folder name
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	setBorder(selectedBorder);
WITHOUT_CLASSIFICATION	list.repaint();
WITHOUT_CLASSIFICATION	ask the user about the destination file
WITHOUT_CLASSIFICATION	ask the user about the destination file
WITHOUT_CLASSIFICATION	private JTextField textField; private JPanel leftPanel; private JTabbedPane rightPanel; private JButton addButton; private JButton removeButton; private JButton editButton; private JButton upButton; private JButton downButton; private JFrame frame;
WITHOUT_CLASSIFICATION	this probably means that the configuration is wrong -> change this to a sane default value
WITHOUT_CLASSIFICATION	if it is in a table, then we need to insert it at the selected position.
WITHOUT_CLASSIFICATION	matchComboBox.addItem("is"); matchComboBox.addItem("is not"); matchComboBox.addItem("begins with"); matchComboBox.addItem("ends with");
WITHOUT_CLASSIFICATION	remove all options
WITHOUT_CLASSIFICATION	builder.append(quotedColorCheckBox, quotedColorButton); builder.nextLine();
WITHOUT_CLASSIFICATION	add filter criteria
WITHOUT_CLASSIFICATION	add filter criteria
WITHOUT_CLASSIFICATION	add filter criteria
WITHOUT_CLASSIFICATION	don't search in subfolders recursively
WITHOUT_CLASSIFICATION	messageController.createPopupMenu();
WITHOUT_CLASSIFICATION	Unregister/register as Folder listener
WITHOUT_CLASSIFICATION	get selected row
WITHOUT_CLASSIFICATION	protected XmlElement createDefaultConfiguration(String id) { XmlElement child = super.createDefaultConfiguration(id); XmlElement splitpanes = new XmlElement("splitpanes"); splitpanes.addAttribute("main", "200"); splitpanes.addAttribute("header", "200"); splitpanes.addAttribute("attachment", "100"); child.addElement(splitpanes); return child; }
WITHOUT_CLASSIFICATION	putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.DOCUMENT_SAVE_AS));
WITHOUT_CLASSIFICATION	get selected message UID
WITHOUT_CLASSIFICATION	if the message it not yet seen
WITHOUT_CLASSIFICATION	date area grid line
WITHOUT_CLASSIFICATION	horizontal grid lines
WITHOUT_CLASSIFICATION	vertical light gray column separator line
WITHOUT_CLASSIFICATION	horizontal light gray column separator line
WITHOUT_CLASSIFICATION	define activity layout
WITHOUT_CLASSIFICATION	dateAreaBean.setActivityDepositoryContext(); dateAreaBean.getDateArea().setActivitiesSupported(true);
WITHOUT_CLASSIFICATION	showing the week number
WITHOUT_CLASSIFICATION	activity setup
WITHOUT_CLASSIFICATION	wrap with observable stream for progress bar updates
WITHOUT_CLASSIFICATION	monthlyActivityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	map selection to this temporary message
WITHOUT_CLASSIFICATION	something really got wrong here -> show error dialog JOptionPane.showMessageDialog(null, e.getMessage());
WITHOUT_CLASSIFICATION	There is no charset info -> the default system charset is used
WITHOUT_CLASSIFICATION	enable timer
WITHOUT_CLASSIFICATION	private String body; private URL url;
WITHOUT_CLASSIFICATION	if HTML stripping is enabled
WITHOUT_CLASSIFICATION	read configuration from options.xml file create css-stylesheet string set font of html-element <P>
WITHOUT_CLASSIFICATION	vertical grid lines
WITHOUT_CLASSIFICATION	dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	vertical grid lines
WITHOUT_CLASSIFICATION	light gray line every day
WITHOUT_CLASSIFICATION	select current day
WITHOUT_CLASSIFICATION	activity setup
WITHOUT_CLASSIFICATION	define activity layout
WITHOUT_CLASSIFICATION	css = "<style type=\"text/css\">\n" + "body {font-family:\"" + name + "\"; font-size:\"" + size + "pt; \"} \n" + "a { color: blue; text-decoration: underline }\n" + "font.quoting {color:#949494;} \n" + "</style>\n";
WITHOUT_CLASSIFICATION	layout.setVisualDateRangeRounder(new BoundaryRounder(DateRangeI.RANGE_TYPE_DAY, true, false, false)); DateRangeRounder for AllDay Events
WITHOUT_CLASSIFICATION	convert special characters
WITHOUT_CLASSIFICATION	set the start to 00:00:00
WITHOUT_CLASSIFICATION	if the end is on 00:00:00, round it to 23:59:59.999
WITHOUT_CLASSIFICATION	TextAShape titleText = new TextAShape(DEFAULT_TITLE_TEXT_SHAPE_NAME, "$startTime$ - $endTimeExcl$ ($timeZoneShort$)", titleTextAbsRect, TextAShape.TYPE_SINGE_LINE, textFont, textPaint, new AtStart(0), new AtStart(-3), GfxUtil.AA_HINT_ON);
WITHOUT_CLASSIFICATION	different border for recurrent events ActivityInteractor.setStaticOverride( AShapeUtil.DEFAULT_OUTLINE_SHAPE_NAME, AShape.A_STROKE, new OverrideFilter() { public Object getOverride(Object subject, Object defaultObject) { return ((ActivityView) subject).getModel() .isRecurrent() ? new BasicStroke(1.0f, BasicStroke.CAP_BUTT, BasicStroke.JOIN_BEVEL, 0, new float[] { 9 }, 0) : defaultObject; } });
WITHOUT_CLASSIFICATION	Color shadowPaint = new Color(0, 0, 0, 100);
WITHOUT_CLASSIFICATION	bgAShape.addSubShape(mainText);
WITHOUT_CLASSIFICATION	Drag, resize interactions
WITHOUT_CLASSIFICATION	Block mouse moves to the underlaying component won't restore the Cursor
WITHOUT_CLASSIFICATION	all day events
WITHOUT_CLASSIFICATION	AShapeUtil.addResizeBoxes(root, SwingConstants.HORIZONTAL, 4);
WITHOUT_CLASSIFICATION	setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	get header from folder
WITHOUT_CLASSIFICATION	get header from folder
WITHOUT_CLASSIFICATION	create a view more button, responsible for opening the attachment viewer popup
WITHOUT_CLASSIFICATION	remove old activity
WITHOUT_CLASSIFICATION	TODO: re-enable feature, the following code violates our design, accessing folders is only allowed in Command.execute()
WITHOUT_CLASSIFICATION	TreeController treeController = (TreeController) ((TreeViewOwner) frameController) .getTreeController(); TreeView treeView = treeController.getView();
WITHOUT_CLASSIFICATION	changing the selection to the first row
WITHOUT_CLASSIFICATION	and getting the uid for this node
WITHOUT_CLASSIFICATION	@author: fdietz never request focus requestFocus();
WITHOUT_CLASSIFICATION	com.miginfocom.util.LicenseValidator.setLicenseKey("Cu=Frederik_Dietz\nCo=OpenSource\nDm=false\nEx=0\nSignature=302C021408B54A0B041E79362B1951E9FDB9AFEAD0EBFBDD021409F4830B4AD832766388107CB1D38126A9473C0C");
WITHOUT_CLASSIFICATION	enabled event-firing
WITHOUT_CLASSIFICATION	we currently only support a single category per activity
WITHOUT_CLASSIFICATION	version 4
WITHOUT_CLASSIFICATION	IETF variant
WITHOUT_CLASSIFICATION	multicast bit
WITHOUT_CLASSIFICATION	retrieve event from store
WITHOUT_CLASSIFICATION	retrieve event from store
WITHOUT_CLASSIFICATION	set new calendar id
WITHOUT_CLASSIFICATION	set new calendar id
WITHOUT_CLASSIFICATION	persist modified calendar
WITHOUT_CLASSIFICATION	persist modified calendar
WITHOUT_CLASSIFICATION	update start/end time
WITHOUT_CLASSIFICATION	update store
WITHOUT_CLASSIFICATION	update store
WITHOUT_CLASSIFICATION	get Columba's top-level configuration directory
WITHOUT_CLASSIFICATION	create top-level configuration directory
WITHOUT_CLASSIFICATION	load configuration from persistence
WITHOUT_CLASSIFICATION	make sure configuration is saved when exiting
WITHOUT_CLASSIFICATION	we only use the first message
WITHOUT_CLASSIFICATION	retrieve subject
WITHOUT_CLASSIFICATION	generate default unique id
WITHOUT_CLASSIFICATION	create new event with new UUID
WITHOUT_CLASSIFICATION	copy all attributes
WITHOUT_CLASSIFICATION	copy all attributes
WITHOUT_CLASSIFICATION	java.util.Calendar stamp = event.getDtStamp();
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	FIXME r.setPos();
WITHOUT_CLASSIFICATION	create recurrence
WITHOUT_CLASSIFICATION	ensure tzid matches date-time timezone.. Parameter tzId = dtStart1.getParameters().getParameter( Parameter.TZID);
WITHOUT_CLASSIFICATION	we only update changes for events currently
WITHOUT_CLASSIFICATION	ensure tzid matches date-time timezone.. Parameter tzId = dtEnd1.getParameters().getParameter( Parameter.TZID);
WITHOUT_CLASSIFICATION	ensure tzid matches date-time timezone.. Parameter tzId = dtStamp1.getParameters().getParameter( Parameter.TZID);
WITHOUT_CLASSIFICATION	remove everything which is not A-Za-z0-9-_
WITHOUT_CLASSIFICATION	create recurrence
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.store.api.ICalendarStoreFactory#getLocaleStore()
WITHOUT_CLASSIFICATION	RRULE:FREQ=YEARLY;COUNT=5;INTERVAL=1 RRULE:FREQ=WEEKLY;UNTIL=20060725T215959;INTERVAL=1;BYDAY=TU RRULE:FREQ=YEARLY;INTERVAL=1
WITHOUT_CLASSIFICATION	MouseListener sorts table when clicking on a column header
WITHOUT_CLASSIFICATION	RRULE:FREQ=WEEKLY;COUNT=8;INTERVAL=2;BYDAY=TU,TH RRULE:FREQ=MONTHLY;UNTIL=20070627T215959;INTERVAL=2;BYDAY=4WE RRULE:FREQ=YEARLY;INTERVAL=1 RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=3 RRULE:FREQ=YEARLY;INTERVAL=1;BYDAY=-1SU;BYMONTH=10
WITHOUT_CLASSIFICATION	skip, if UID, dtStart or dtEnd is not defined
WITHOUT_CLASSIFICATION	if there is no string given, return a number
WITHOUT_CLASSIFICATION	DocType docType = factory .docType("iCalendar", "-IETFDTD XCAL/iCalendar XMLEN", "http:www.ietf.org/internet-drafts/draft-hare-xcalendar-01.txt"); doc.setDocType(docType);
WITHOUT_CLASSIFICATION	wrong xml-format
WITHOUT_CLASSIFICATION	found category
WITHOUT_CLASSIFICATION	Element child = getParentElement().getChild(ICALENDAR.CATEGORIES); List list = child.getChildren();
WITHOUT_CLASSIFICATION	find the property in the rrule string
WITHOUT_CLASSIFICATION	no recurrency, so nothing in the string
WITHOUT_CLASSIFICATION	build string
WITHOUT_CLASSIFICATION	optional parts
WITHOUT_CLASSIFICATION	UNTIL=20070627T215959
WITHOUT_CLASSIFICATION	generate new UUID if it does not exist yet
WITHOUT_CLASSIFICATION	remove old data
WITHOUT_CLASSIFICATION	generate xml document
WITHOUT_CLASSIFICATION	add new data to local store
WITHOUT_CLASSIFICATION	builder.setValidation(true);
WITHOUT_CLASSIFICATION	filename = "uuid.xcs"
WITHOUT_CLASSIFICATION	remove ".xcs"
WITHOUT_CLASSIFICATION	we only update changes for events currently
WITHOUT_CLASSIFICATION	ICalendarStore store = (ICalendarStore) next.getSource();
WITHOUT_CLASSIFICATION	retrieve event from store
WITHOUT_CLASSIFICATION	retrieve event from store
WITHOUT_CLASSIFICATION	update store
WITHOUT_CLASSIFICATION	update store
WITHOUT_CLASSIFICATION	remove old activity
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	create new activity
WITHOUT_CLASSIFICATION	process all events collected until now
WITHOUT_CLASSIFICATION	putValue(AbstractColumbaAction.LARGE_ICON, ResourceLoader .getImageIcon("new_appointment-32.png")); putValue(AbstractColumbaAction.SMALL_ICON, ResourceLoader .getImageIcon("new_appointment.png"));
WITHOUT_CLASSIFICATION	copy activity
WITHOUT_CLASSIFICATION	enable all menuitems
WITHOUT_CLASSIFICATION	enable all menuitems
WITHOUT_CLASSIFICATION	retrieve selected activity
WITHOUT_CLASSIFICATION	retrieve selected activity
WITHOUT_CLASSIFICATION	activity belongs to calendar id ?
WITHOUT_CLASSIFICATION	activity belongs to calendar id ?
WITHOUT_CLASSIFICATION	disable this calendar's id
WITHOUT_CLASSIFICATION	disable this calendar's id
WITHOUT_CLASSIFICATION	get selected calendar id
WITHOUT_CLASSIFICATION	get selected calendar
WITHOUT_CLASSIFICATION	A recurring event
WITHOUT_CLASSIFICATION	this is for the calendar component and only used internally
WITHOUT_CLASSIFICATION	2 columns
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	check if a single entry is selected
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	we need this for the focus manager
WITHOUT_CLASSIFICATION	background
WITHOUT_CLASSIFICATION	Drag, resize interactions
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	DocumentListener Methods
WITHOUT_CLASSIFICATION	select first item
WITHOUT_CLASSIFICATION	glocal grid line colors
WITHOUT_CLASSIFICATION	activityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	general grid size - if we don't set this property there won't be vertical scrollbars
WITHOUT_CLASSIFICATION	west header
WITHOUT_CLASSIFICATION	first row showing the hour
WITHOUT_CLASSIFICATION	north header background
WITHOUT_CLASSIFICATION	north header cell decorator
WITHOUT_CLASSIFICATION	first header showing Day info
WITHOUT_CLASSIFICATION	date area grid line
WITHOUT_CLASSIFICATION	horizontal grid lines
WITHOUT_CLASSIFICATION	dark gray line every hour
WITHOUT_CLASSIFICATION	light gray line every 30 min
WITHOUT_CLASSIFICATION	vertical grid lines
WITHOUT_CLASSIFICATION	light gray line every day
WITHOUT_CLASSIFICATION	horizontal light gray column separator line
WITHOUT_CLASSIFICATION	select current day
WITHOUT_CLASSIFICATION	select nodes
WITHOUT_CLASSIFICATION	differnt outline color is selected
WITHOUT_CLASSIFICATION	bold outline if selected
WITHOUT_CLASSIFICATION	Color titleBgPaint = null;new Color(200, 50, 50, 255);
WITHOUT_CLASSIFICATION	Color selectedTitlePaint = new Color(200, 100, 100);
WITHOUT_CLASSIFICATION	Color bulletPaint = new Color(100, 100, 100);
WITHOUT_CLASSIFICATION	Color textPaint = new Color(0, 0, 0, 50);
WITHOUT_CLASSIFICATION	even
WITHOUT_CLASSIFICATION	First (left) tab
WITHOUT_CLASSIFICATION	Second (right) tab
WITHOUT_CLASSIFICATION	Fallback shape for small sizes
WITHOUT_CLASSIFICATION	Resize events
WITHOUT_CLASSIFICATION	Static example shape creation
WITHOUT_CLASSIFICATION	AShapeUtil.addMouseFireEvent(outlineAShape, trigger, DefaultDateArea.AE_CATEGORY_DRAG_PRESSED, false, false, button);
WITHOUT_CLASSIFICATION	END1 because the draw should be correct
WITHOUT_CLASSIFICATION	States
WITHOUT_CLASSIFICATION	Shadow
WITHOUT_CLASSIFICATION	Shadow
WITHOUT_CLASSIFICATION	PlaceRect bgAbsRect = new AbsRect(new AtStart(0), new AtStart(0), new AtEnd(0), new AtEnd(0), null, null, shadowInsets);
WITHOUT_CLASSIFICATION	FillAShape filledShadow = new FillAShape("shadowShape", new RoundRectangle(0, 0, 1, 1, 5, 5), bgAbsRect, new Color(0, 0, 0, 100), GfxUtil.AA_HINT_ON);
WITHOUT_CLASSIFICATION	SliceSpec shwSI = new SliceSpec(new Insets(10, 10, 10, 10), SliceSpec.TYPE_TILE_CUT, SliceSpec.OPT_BORDER);
WITHOUT_CLASSIFICATION	FeatherAShape shadow = new FeatherAShape("shadow", filledShadow, new Color(255, 255, 255, 0), 5, shwSI);
WITHOUT_CLASSIFICATION	AbsRect textRect = new AbsRect(new AtStart(4), AtStart.START0, new AtEnd(-4), AtEnd.END0);
WITHOUT_CLASSIFICATION	root.addSubShape(shadow);
WITHOUT_CLASSIFICATION	root.addSubShape(shadow);
WITHOUT_CLASSIFICATION	root.addSubShape(textShape);
WITHOUT_CLASSIFICATION	root.addSubShape(textShape);
WITHOUT_CLASSIFICATION	root.addSubShape(outlineShape);
WITHOUT_CLASSIFICATION	root.setAttribute(AShape.A_REPORT_HIT_SHAPE, Boolean.TRUE);
WITHOUT_CLASSIFICATION	Animations for text
WITHOUT_CLASSIFICATION	textAShape.setAttribute(AShape.A_REPORT_HIT_SHAPE, Boolean.TRUE);
WITHOUT_CLASSIFICATION	Title
WITHOUT_CLASSIFICATION	Content
WITHOUT_CLASSIFICATION	Outline
WITHOUT_CLASSIFICATION	Build tree
WITHOUT_CLASSIFICATION	Color moOutlinePaint = new Color(0, 0, 0);
WITHOUT_CLASSIFICATION	private ThemeDateAreaContainer view;
WITHOUT_CLASSIFICATION	every year?
WITHOUT_CLASSIFICATION	for leap years!
WITHOUT_CLASSIFICATION	start with week view
WITHOUT_CLASSIFICATION	LOG.severe("no number!")
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	SliceSpec shwSI = new SliceSpec(new Insets(10, 10, 10, 10), SliceSpec.TYPE_TILE_CUT, SliceSpec.OPT_BORDER);
WITHOUT_CLASSIFICATION	FeatherAShape shadow = new FeatherAShape("shadow", filledShadow, new Color(255, 255, 255, 0), 5, shwSI);
WITHOUT_CLASSIFICATION	FillAShape filledShadow = new FillAShape("shadowShape", new RoundRectangle(0, 0, 1, 1, 5, 5), bgAbsRect, new Color(0, 0, 0, 100), Boolean.TRUE);
WITHOUT_CLASSIFICATION	DrawAShape outlineShape = new DrawAShape("bgFill", new Rectangle(0, 0, 1, 1), AbsRect.FILL, outlinePaint, new BasicStroke(1f), Boolean.FALSE);
WITHOUT_CLASSIFICATION	SizeConstraint sConstr1 = new SizeConstraint(new AtFixed(10), new AtFraction(1), 1.0f);
WITHOUT_CLASSIFICATION	SizeConstraint sConstr2 = new SizeConstraint(new AtFixed(0), new AtFraction(0.5f), 1.0f);
WITHOUT_CLASSIFICATION	SizeConstraint sConstr3 = new SizeConstraint(new AtFixed(0), new AtFraction(1), 0.0f);
WITHOUT_CLASSIFICATION	SizeConstraint sConstr4 = new SizeConstraint(new AtFixed(0), new AtFraction(1), 0.0f);
WITHOUT_CLASSIFICATION	ShapeGradientPaint bgPaint = new ShapeGradientPaint(new Color(235, 235, 235), new Color(255, 255, 255), 180, 1f, 0.5f, false);
WITHOUT_CLASSIFICATION	ShapeGradientPaint titlePaint = new ShapeGradientPaint(new Color(255, 150, 150), new Color(255, 200, 200), 0, 0.7f, 0.7f, false);
WITHOUT_CLASSIFICATION	addEnterExitOverride(outlineAShape, outlineAShape, AShape.A_PAINT, moOutlinePaint, false, true);
WITHOUT_CLASSIFICATION	toolTip.setForeground(Color.DARK_GRAY);
WITHOUT_CLASSIFICATION	((DefaultDateArea) localDateAreaBean.getDateArea()) .addActivityMoveListener(this);
WITHOUT_CLASSIFICATION	mouse hovers over activity
WITHOUT_CLASSIFICATION	}
WITHOUT_CLASSIFICATION	retrieve new selection
WITHOUT_CLASSIFICATION	remember selected activity
WITHOUT_CLASSIFICATION	notify all listeners
WITHOUT_CLASSIFICATION	check if happens on the selected activity
WITHOUT_CLASSIFICATION	check if happens in calendar, but not on activity
WITHOUT_CLASSIFICATION	trigged if activity is moved or daterange is modified
WITHOUT_CLASSIFICATION	the java methods return a nice week of year, we need hard facts
WITHOUT_CLASSIFICATION	update modification timestamp
WITHOUT_CLASSIFICATION	its always possible that no folder is currenlty selected
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	retrieve new selection
WITHOUT_CLASSIFICATION	remember selected activity
WITHOUT_CLASSIFICATION	notify all listeners
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#viewNext()
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	select activity before opening context context-menu selectedInternalActivitiy.getStates().setStates( GenericStates.SELECTED_BIT, true);
WITHOUT_CLASSIFICATION	double-click on empty calendar mediator.fireCreateActivity(null);
WITHOUT_CLASSIFICATION	it will not be done correctly, if the first statement is omitted
WITHOUT_CLASSIFICATION	roll correctly over years
WITHOUT_CLASSIFICATION	TimeSpan span = activityList.get(i);
WITHOUT_CLASSIFICATION	clicked on calendar - not activity
WITHOUT_CLASSIFICATION	table.put(item.getId(), item.getName());
WITHOUT_CLASSIFICATION	custom renderer to convert from calendar id to calendar name
WITHOUT_CLASSIFICATION	regexp for correct timestamp
WITHOUT_CLASSIFICATION	check value before :
WITHOUT_CLASSIFICATION	correct value!
WITHOUT_CLASSIFICATION	correct value!
WITHOUT_CLASSIFICATION	check value after :
WITHOUT_CLASSIFICATION	both values are okay, so create a correct time
WITHOUT_CLASSIFICATION	there is no :
WITHOUT_CLASSIFICATION	no correct value!
WITHOUT_CLASSIFICATION	in case we have to add another "0"
WITHOUT_CLASSIFICATION	enable selection
WITHOUT_CLASSIFICATION	click on this button will open the recurrence dialog
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	disable time pickers
WITHOUT_CLASSIFICATION	disable time pickers
WITHOUT_CLASSIFICATION	enable time pickers
WITHOUT_CLASSIFICATION	enable time pickers
WITHOUT_CLASSIFICATION	scrolling to the selected row
WITHOUT_CLASSIFICATION	A recurring event
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	private Hashtable<String, String> table = new Hashtable<String, String>(10);
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	disable time pickers
WITHOUT_CLASSIFICATION	enable time pickers
WITHOUT_CLASSIFICATION	it has to be set
WITHOUT_CLASSIFICATION	check if the user entered valid data
WITHOUT_CLASSIFICATION	enable button
WITHOUT_CLASSIFICATION	disable button
WITHOUT_CLASSIFICATION	frequency
WITHOUT_CLASSIFICATION	no end
WITHOUT_CLASSIFICATION	maximum occurrences
WITHOUT_CLASSIFICATION	end date
WITHOUT_CLASSIFICATION	enable all radio buttons
WITHOUT_CLASSIFICATION	disable all
WITHOUT_CLASSIFICATION	load options of newly selected folder
WITHOUT_CLASSIFICATION	disable date picker
WITHOUT_CLASSIFICATION	enable max occurrences
WITHOUT_CLASSIFICATION	enable until
WITHOUT_CLASSIFICATION	disable other
WITHOUT_CLASSIFICATION	TestDataGenerator.generateTestData();
WITHOUT_CLASSIFICATION	calendar list
WITHOUT_CLASSIFICATION	create empty value
WITHOUT_CLASSIFICATION	create identity value
WITHOUT_CLASSIFICATION	summary
WITHOUT_CLASSIFICATION	description
WITHOUT_CLASSIFICATION	location
WITHOUT_CLASSIFICATION	date range
WITHOUT_CLASSIFICATION	check if a single entry is selected
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	glocal grid line colors
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	date area grid line
WITHOUT_CLASSIFICATION	horizontal grid lines
WITHOUT_CLASSIFICATION	dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	vertical grid lines
WITHOUT_CLASSIFICATION	light gray line every day
WITHOUT_CLASSIFICATION	vertical light gray column separator line
WITHOUT_CLASSIFICATION	horizontal light gray column separator line
WITHOUT_CLASSIFICATION	select current day
WITHOUT_CLASSIFICATION	monthlyActivityAShapeBean = new ActivityAShapeBean();
WITHOUT_CLASSIFICATION	showing the week number
WITHOUT_CLASSIFICATION	enable selection
WITHOUT_CLASSIFICATION	JScrollPane tableScrollPane = new JScrollPane(navigationController .getView()); tableScrollPane.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	checkbox.setBackground(item.getColor());
WITHOUT_CLASSIFICATION	item.setSelected(checkbox.isSelected());
WITHOUT_CLASSIFICATION	Make the renderer reappear.
WITHOUT_CLASSIFICATION	create default root nodes <Local> and <Web>
WITHOUT_CLASSIFICATION	category filtering is disabled as default
WITHOUT_CLASSIFICATION	calendar is selected as default
WITHOUT_CLASSIFICATION	two column
WITHOUT_CLASSIFICATION	setBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4));
WITHOUT_CLASSIFICATION	setBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4));
WITHOUT_CLASSIFICATION	private CheckableItemListTableModel model;
WITHOUT_CLASSIFICATION	do not show header
WITHOUT_CLASSIFICATION	no grid lines
WITHOUT_CLASSIFICATION	setIntercellSpacing(new Dimension(2, 2));
WITHOUT_CLASSIFICATION	setRowMargin(5);
WITHOUT_CLASSIFICATION	setBackground(item.getColor());
WITHOUT_CLASSIFICATION	showing the month number
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	activity setup
WITHOUT_CLASSIFICATION	vertical grid lines
WITHOUT_CLASSIFICATION	monthlyWestDateHeaderBean .setLabelRotation(TextAShape.TYPE_SINGE_LINE_ROT_CCW);
WITHOUT_CLASSIFICATION	return if selection change is in flux
WITHOUT_CLASSIFICATION	check if its a calendar component
WITHOUT_CLASSIFICATION	get calendar ui component depository
WITHOUT_CLASSIFICATION	add tag id as last
WITHOUT_CLASSIFICATION	set all tags/categories to be not selected
WITHOUT_CLASSIFICATION	retrieve tag/category to be selected
WITHOUT_CLASSIFICATION	create new one
WITHOUT_CLASSIFICATION	mark it as selected
WITHOUT_CLASSIFICATION	update calendar viewer
WITHOUT_CLASSIFICATION	check if calendar item is tagged
WITHOUT_CLASSIFICATION	check three entries
WITHOUT_CLASSIFICATION	Event: Anniversary
WITHOUT_CLASSIFICATION	204524
WITHOUT_CLASSIFICATION	Event: All Day Event
WITHOUT_CLASSIFICATION	Event: Normal Event
WITHOUT_CLASSIFICATION	this is the expected cases
WITHOUT_CLASSIFICATION	delete all data in directory
WITHOUT_CLASSIFICATION	delete folder
WITHOUT_CLASSIFICATION	int column = view.convertColumnIndexToModel(viewColumn); int column2 = view.convertColumnIndexToView(viewColumn);
WITHOUT_CLASSIFICATION	mark all activities with the tag
WITHOUT_CLASSIFICATION	example: "columba:org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	now change all global categories
WITHOUT_CLASSIFICATION	that is the expected case
WITHOUT_CLASSIFICATION	normal cases
WITHOUT_CLASSIFICATION	edge values
WITHOUT_CLASSIFICATION	more than one year
WITHOUT_CLASSIFICATION	MONTH VIEW TEST
WITHOUT_CLASSIFICATION	new vis range = Start: Sep 23, 2007 12:00:00 AM (RAW:1.0, DST:-1.0) End: Nov 3, 2007 11:59:59 PM (RAW:1.0, DST:0.0) Time zone: null Locale: null new vis range = Start: Oct 1, 2007 12:00:00 AM (RAW:1.0, DST:-1.0) End: Nov 11, 2007 11:59:59 PM (RAW:1.0, DST:0.0) Time zone: null Locale: null should be new vis range = Start: Oct 1, 2007 12:00:00 AM (RAW:1.0, DST:-1.0) End: Nov 10, 2007 11:59:59 PM (RAW:1.0, DST:0.0) Time zone: null Locale: null
WITHOUT_CLASSIFICATION	valid inputs
WITHOUT_CLASSIFICATION	recoverable inputs
WITHOUT_CLASSIFICATION	unrecoverable inputs
WITHOUT_CLASSIFICATION	city
WITHOUT_CLASSIFICATION	state/province/county
WITHOUT_CLASSIFICATION	This should never happen since superclass is Object
WITHOUT_CLASSIFICATION	AdapterNode name;AdapterNode uid;AdapterNode type;AdapterNode rootNode;
WITHOUT_CLASSIFICATION	this.rootNode = root;parse();createMissingElements();
WITHOUT_CLASSIFICATION	filterList = new Vector();
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.gui.tree.AddressbookTreeNode#getName()
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	private File addressbookFile;
WITHOUT_CLASSIFICATION	skip if contact item is not valid
WITHOUT_CLASSIFICATION	check if contact with given email address exists already
WITHOUT_CLASSIFICATION	check if it contains comma character
WITHOUT_CLASSIFICATION	retrieve all contact items and add those to the list only
WITHOUT_CLASSIFICATION	simply all all group items to the list
WITHOUT_CLASSIFICATION	add group items
WITHOUT_CLASSIFICATION	example: "columba:org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	modify card properties in folder
WITHOUT_CLASSIFICATION	create list containing all contact item of this folder
WITHOUT_CLASSIFICATION	public AddressbookTreeNode(String name) { super(name); this.name = name; }
WITHOUT_CLASSIFICATION	FAILURE!!!
WITHOUT_CLASSIFICATION	public abstract Class getDefaultChild();
WITHOUT_CLASSIFICATION	Put properties that should be copied from parent here
WITHOUT_CLASSIFICATION	remove xml config
WITHOUT_CLASSIFICATION	remove node
WITHOUT_CLASSIFICATION	header file found
WITHOUT_CLASSIFICATION	skip, if null
WITHOUT_CLASSIFICATION	contact doesn't exist in parent folder anymore -> remove it
WITHOUT_CLASSIFICATION	start parsing line by line
WITHOUT_CLASSIFICATION	empty line, means new contactcard
WITHOUT_CLASSIFICATION	parse key:value lines
WITHOUT_CLASSIFICATION	return if selection change is in flux
WITHOUT_CLASSIFICATION	return if selection change is in flux
WITHOUT_CLASSIFICATION	create URI representing the contact
WITHOUT_CLASSIFICATION	if next node is null (the end of the list) return
WITHOUT_CLASSIFICATION	start parsing line
WITHOUT_CLASSIFICATION	found new token
WITHOUT_CLASSIFICATION	backwards compatibility
WITHOUT_CLASSIFICATION	protected AddressbookFolder tempFolder;
WITHOUT_CLASSIFICATION	tempFolder = new AddressbookFolder(null,addressbookInterface);
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	add new group to folder
WITHOUT_CLASSIFICATION	get parent
WITHOUT_CLASSIFICATION	notify model
WITHOUT_CLASSIFICATION	register interest on table selection changes
WITHOUT_CLASSIFICATION	register interest on tree selection changes
WITHOUT_CLASSIFICATION	register interest on tree selection changes
WITHOUT_CLASSIFICATION	remember last selected folder treenode
WITHOUT_CLASSIFICATION	remember last selected folder treenode
WITHOUT_CLASSIFICATION	remember last selected folder treenode
WITHOUT_CLASSIFICATION	enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected contact/group card
WITHOUT_CLASSIFICATION	create open file dialog
WITHOUT_CLASSIFICATION	if user pressed OK button
WITHOUT_CLASSIFICATION	add contact to folder
WITHOUT_CLASSIFICATION	register interest on contact selection changes
WITHOUT_CLASSIFICATION	check if contact is tagged
WITHOUT_CLASSIFICATION	modify card properties in folder
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get parent
WITHOUT_CLASSIFICATION	notify model
WITHOUT_CLASSIFICATION	remember last selected folder treenode
WITHOUT_CLASSIFICATION	remember last selected folder treenode
WITHOUT_CLASSIFICATION	enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	enable, if more than zero treenodes selected
WITHOUT_CLASSIFICATION	create open file dialog
WITHOUT_CLASSIFICATION	if user pressed OK button
WITHOUT_CLASSIFICATION	register interest on tree selection changes
WITHOUT_CLASSIFICATION	read VCARD file into string buffer
WITHOUT_CLASSIFICATION	create contact card
WITHOUT_CLASSIFICATION	add to folder
WITHOUT_CLASSIFICATION	update table
WITHOUT_CLASSIFICATION	get selected contact/group card
WITHOUT_CLASSIFICATION	re-select folder
WITHOUT_CLASSIFICATION	tree has focus
WITHOUT_CLASSIFICATION	tree has focus
WITHOUT_CLASSIFICATION	tree has focus
WITHOUT_CLASSIFICATION	re-select folder
WITHOUT_CLASSIFICATION	table has focus
WITHOUT_CLASSIFICATION	table has focus
WITHOUT_CLASSIFICATION	remove contacts/group cards from folder
WITHOUT_CLASSIFICATION	re-select folder
WITHOUT_CLASSIFICATION	remove folder from parent
WITHOUT_CLASSIFICATION	_editor.moveCaretPosition(cursor_pos);
WITHOUT_CLASSIFICATION	contacts item
WITHOUT_CLASSIFICATION	group item
WITHOUT_CLASSIFICATION	for each JComboBox item
WITHOUT_CLASSIFICATION	to lower case
WITHOUT_CLASSIFICATION	compare if item starts with str
WITHOUT_CLASSIFICATION	initialize completer
WITHOUT_CLASSIFICATION	can be only one
WITHOUT_CLASSIFICATION	can be only one
WITHOUT_CLASSIFICATION	======== this ========
WITHOUT_CLASSIFICATION	leave dialog empty if no source contact model specified
WITHOUT_CLASSIFICATION	model -> view
WITHOUT_CLASSIFICATION	fall back to default image
WITHOUT_CLASSIFICATION	we support up to 4 email addresses
WITHOUT_CLASSIFICATION	we support up to 4 email addresses
WITHOUT_CLASSIFICATION	we support up to 4 phone entries
WITHOUT_CLASSIFICATION	we support up to 4 im entries
WITHOUT_CLASSIFICATION	we support up to 3 address entries (work/private/other)
WITHOUT_CLASSIFICATION	view -> model
WITHOUT_CLASSIFICATION	we support up to 4 phones
WITHOUT_CLASSIFICATION	we support up to 4 im
WITHOUT_CLASSIFICATION	we support 3 address types (work/home/other)
WITHOUT_CLASSIFICATION	======== dialogPane ========
WITHOUT_CLASSIFICATION	======== contentPane ========
WITHOUT_CLASSIFICATION	======== tabbedPane2 ========
WITHOUT_CLASSIFICATION	======== contactPanel ========
WITHOUT_CLASSIFICATION	======== panel7 ========
WITHOUT_CLASSIFICATION	---- pictureButton ----
WITHOUT_CLASSIFICATION	---- nicknameLabel ----
WITHOUT_CLASSIFICATION	---- fileunderLabel ----
WITHOUT_CLASSIFICATION	---- categoriesButton ----
WITHOUT_CLASSIFICATION	---- emailTextField1 ----
WITHOUT_CLASSIFICATION	---- emailTextField3 ----
WITHOUT_CLASSIFICATION	---- emailTextField4 ----
WITHOUT_CLASSIFICATION	---- preferHtmlCheckBox ----
WITHOUT_CLASSIFICATION	---- telephoneTextField1 ----
WITHOUT_CLASSIFICATION	---- telephoneTextField3 ----
WITHOUT_CLASSIFICATION	---- telephoneTextField4 ----
WITHOUT_CLASSIFICATION	---- imTextField1 ----
WITHOUT_CLASSIFICATION	---- imTextField2 ----
WITHOUT_CLASSIFICATION	---- imTextField3 ----
WITHOUT_CLASSIFICATION	======== personalInfoPanel ========
WITHOUT_CLASSIFICATION	---- homepageLabel ----
WITHOUT_CLASSIFICATION	======== panel1 ========
WITHOUT_CLASSIFICATION	---- homepageTextField ----
WITHOUT_CLASSIFICATION	---- weblogLabel ----
WITHOUT_CLASSIFICATION	======== panel5 ========
WITHOUT_CLASSIFICATION	---- weblogTextField ----
WITHOUT_CLASSIFICATION	---- weblogButton ----
WITHOUT_CLASSIFICATION	======== panel6 ========
WITHOUT_CLASSIFICATION	---- calendarTextField ----
WITHOUT_CLASSIFICATION	---- calendarButton ----
WITHOUT_CLASSIFICATION	---- freebusyLabel ----
WITHOUT_CLASSIFICATION	---- freebusyTextField ----
WITHOUT_CLASSIFICATION	---- freebusyButton ----
WITHOUT_CLASSIFICATION	---- professionLabel ----
WITHOUT_CLASSIFICATION	---- professionTextField ----
WITHOUT_CLASSIFICATION	---- titleLabel ----
WITHOUT_CLASSIFICATION	---- companyLabel ----
WITHOUT_CLASSIFICATION	---- departmentTextField ----
WITHOUT_CLASSIFICATION	---- companyTextField ----
WITHOUT_CLASSIFICATION	---- managerTextField ----
WITHOUT_CLASSIFICATION	---- departmentLabel ----
WITHOUT_CLASSIFICATION	---- officeTextField ----
WITHOUT_CLASSIFICATION	---- managerLabel ----
WITHOUT_CLASSIFICATION	---- notesLabel ----
WITHOUT_CLASSIFICATION	---- officeLabel ----
WITHOUT_CLASSIFICATION	======== mailingAddressPanel ========
WITHOUT_CLASSIFICATION	---- birthdayLabel ----
WITHOUT_CLASSIFICATION	---- notesTextArea ----
WITHOUT_CLASSIFICATION	======== scrollPane3 ========
WITHOUT_CLASSIFICATION	---- privateCityLabel ----
WITHOUT_CLASSIFICATION	======== scrollPane1 ========
WITHOUT_CLASSIFICATION	---- privateAddressLabel ----
WITHOUT_CLASSIFICATION	---- privateCityTextField ----
WITHOUT_CLASSIFICATION	---- privateZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	---- label1 ----
WITHOUT_CLASSIFICATION	---- privateStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	---- privatePOBoxLabel ----
WITHOUT_CLASSIFICATION	---- privateCountryLabel ----
WITHOUT_CLASSIFICATION	shortcut key putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke("B"));
WITHOUT_CLASSIFICATION	---- workAddressLabel ----
WITHOUT_CLASSIFICATION	======== scrollPane2 ========
WITHOUT_CLASSIFICATION	---- workCityLabel ----
WITHOUT_CLASSIFICATION	---- workCityTextField ----
WITHOUT_CLASSIFICATION	---- workZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	---- label2 ----
WITHOUT_CLASSIFICATION	---- workStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	---- workPOBoxLabel ----
WITHOUT_CLASSIFICATION	---- workCountryLabel ----
WITHOUT_CLASSIFICATION	---- otherAddressLabel ----
WITHOUT_CLASSIFICATION	======== scrollPane4 ========
WITHOUT_CLASSIFICATION	---- otherCityLabel ----
WITHOUT_CLASSIFICATION	---- otherZipPostalCodeLabel ----
WITHOUT_CLASSIFICATION	---- label3 ----
WITHOUT_CLASSIFICATION	---- otherStateProvinceCountyLabel ----
WITHOUT_CLASSIFICATION	---- otherPOBoxLabel ----
WITHOUT_CLASSIFICATION	---- otherCountryLabel ----
WITHOUT_CLASSIFICATION	======== buttonBar ========
WITHOUT_CLASSIFICATION	---- okButton ----
WITHOUT_CLASSIFICATION	---- cancelButton ----
WITHOUT_CLASSIFICATION	contains "," comma character
WITHOUT_CLASSIFICATION	contains "," comma character
WITHOUT_CLASSIFICATION	set title
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	gettext $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	settext $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	FocusOwner lost = (FocusOwner) map.get(event.getSource());
WITHOUT_CLASSIFICATION	remove all children
WITHOUT_CLASSIFICATION	scrollPane.setPreferredSize( new Dimension(200,200) );
WITHOUT_CLASSIFICATION	add children
WITHOUT_CLASSIFICATION	this is a headeritem from autocompletion
WITHOUT_CLASSIFICATION	c.gridwidth = GridBagConstraints.RELATIVE;
WITHOUT_CLASSIFICATION	in the future, it will be possible to also add new addresses
WITHOUT_CLASSIFICATION	current = lost;
WITHOUT_CLASSIFICATION	destinationButton.setText(destinationFolder.getTreePath());
WITHOUT_CLASSIFICATION	adjust description field
WITHOUT_CLASSIFICATION	id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	associate ui component with FocusOwner
WITHOUT_CLASSIFICATION	true if action is enabled, false otherwiese
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isCutActionEnabled()
WITHOUT_CLASSIFICATION	no component has the focus -> disable all actions
WITHOUT_CLASSIFICATION	uncomment to enable action
WITHOUT_CLASSIFICATION	check if a single entry is selected
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	create empty value
WITHOUT_CLASSIFICATION	create identity value
WITHOUT_CLASSIFICATION	return if selection change is in flux
WITHOUT_CLASSIFICATION	modify card properties in folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected contact/group card
WITHOUT_CLASSIFICATION	re-select folder
WITHOUT_CLASSIFICATION	define false < true
WITHOUT_CLASSIFICATION	this is needed to update the titlebar
WITHOUT_CLASSIFICATION	getContainer().setContentPane(this);
WITHOUT_CLASSIFICATION	initPerspective(this.perspective);
WITHOUT_CLASSIFICATION	retrieve contact model from folder
WITHOUT_CLASSIFICATION	manipulateModel(TableModelPlugin.STRUCTURE_CHANGE);
WITHOUT_CLASSIFICATION	Where, in the drag image, the mouse was clicked
WITHOUT_CLASSIFICATION	debug messages for diagnostics
WITHOUT_CLASSIFICATION	HeaderItem[] items = new HeaderItem[selection1.length]; items = selection1; HeaderItemDNDManager.getInstance().setHeaderItemList(items);
WITHOUT_CLASSIFICATION	HeaderItem[] items = new HeaderItem[selection2.length]; items = selection2; HeaderItemDNDManager.getInstance().setHeaderItemList(items);
WITHOUT_CLASSIFICATION	dragSource.startDrag( event, new Cursor(Cursor.DEFAULT_CURSOR), ImageLoader.getImageIcon("contact_small","Add16").getImage(), new Point(5, 5), new StringSelection("contact"), this);
WITHOUT_CLASSIFICATION	removeElement();
WITHOUT_CLASSIFICATION	setCellRenderer(new AddressbookListRenderer());
WITHOUT_CLASSIFICATION	does exactly the same thing as EditPropertiesAction when contact table is focused
WITHOUT_CLASSIFICATION	Plain text components don't fire these events
WITHOUT_CLASSIFICATION	register as focus owner
WITHOUT_CLASSIFICATION	define false < true
WITHOUT_CLASSIFICATION	return if selection change is in flux
WITHOUT_CLASSIFICATION	TreePath path = tree.getPathForRow(row);
WITHOUT_CLASSIFICATION	we use the SortDecorator, because the indices are sorted
WITHOUT_CLASSIFICATION	this.addressbookModel = addressbookModel;
WITHOUT_CLASSIFICATION	set renderers for columns
WITHOUT_CLASSIFICATION	return new DefaultHeaderRenderer(controller.getSortDecorator(), name);
WITHOUT_CLASSIFICATION	the model which is decorated
WITHOUT_CLASSIFICATION	setBorder(selectedBorder);
WITHOUT_CLASSIFICATION	setBorder(unselectedBorder);
WITHOUT_CLASSIFICATION	create a virtual folder with all messages holding this tag
WITHOUT_CLASSIFICATION	check if its a contact component
WITHOUT_CLASSIFICATION	update folder selection
WITHOUT_CLASSIFICATION	XmlElement.printNode(item.getRoot(), "");
WITHOUT_CLASSIFICATION	now instanciate the folder classes
WITHOUT_CLASSIFICATION	register as focus owner
WITHOUT_CLASSIFICATION	private TreeView treeViewer;
WITHOUT_CLASSIFICATION	public SelectFolderTree tree;
WITHOUT_CLASSIFICATION	FolderTreeNode node = tree.getSelectedNode(); FolderItem item = node.getFolderItem();
WITHOUT_CLASSIFICATION	return item.getUid();
WITHOUT_CLASSIFICATION	init addressbook plugin handlers PluginManager.getInstance().addHandlers( "org/columba/addressbook/plugin/pluginhandler.xml");
WITHOUT_CLASSIFICATION	mainInterface.addressbookInterface.
WITHOUT_CLASSIFICATION	timer.start();
WITHOUT_CLASSIFICATION	fall-back to formatted name
WITHOUT_CLASSIFICATION	fall-back to email address
WITHOUT_CLASSIFICATION	<sortstring>value</sortstring>
WITHOUT_CLASSIFICATION	<fn>value</fn>
WITHOUT_CLASSIFICATION	<nickname>value</nickname>
WITHOUT_CLASSIFICATION	multicast bit
WITHOUT_CLASSIFICATION	backwards compatibility
WITHOUT_CLASSIFICATION	backwards compatibility
WITHOUT_CLASSIFICATION	<email> <work>value</work> <home>value</home> </email>
WITHOUT_CLASSIFICATION	<n> <family>value</family> <given>value</given> <prefix>value</prefix> <suffix>value</suffix> <additionalnames>value</additionalnames> </n>
WITHOUT_CLASSIFICATION	<org>value</org>
WITHOUT_CLASSIFICATION	<url>value</url>
WITHOUT_CLASSIFICATION	<office>value</office>
WITHOUT_CLASSIFICATION	<department>value</department>
WITHOUT_CLASSIFICATION	comma-separated category list <category>value1,value2,value3</category>
WITHOUT_CLASSIFICATION	<phone> <business>value</business> <home>value</home> </phone>
WITHOUT_CLASSIFICATION	<im> <aol>value</aol> <yahoo>value</yahoo> <jabber>value</jabber> </im>
WITHOUT_CLASSIFICATION	<adr> <work> <pobox>value</pobox> <street>value</street .. </work> .. </adr>
WITHOUT_CLASSIFICATION	base64 encode photo byte[] to string
WITHOUT_CLASSIFICATION	backwards compatiblity -> its not possible anymore to create a contact model without email address
WITHOUT_CLASSIFICATION	comma-separated category list <category>value1,value2,value3</category>
WITHOUT_CLASSIFICATION	compatibility - using SORTSTRING internally
WITHOUT_CLASSIFICATION	get first item
WITHOUT_CLASSIFICATION	tstich: CA-41 bugfix
WITHOUT_CLASSIFICATION	We need a place to store the color the JLabel should be returned to after its foreground and background colors have been set to the selection background color. These ivars will be made protected when their names are finalized.
WITHOUT_CLASSIFICATION	public String getAgent() { return agent; }
WITHOUT_CLASSIFICATION	create <email> element, if it doesn't exist yet
WITHOUT_CLASSIFICATION	create <type> element
WITHOUT_CLASSIFICATION	create <type> element
WITHOUT_CLASSIFICATION	if not specified return empty iterator
WITHOUT_CLASSIFICATION	if not specified return empty iterator
WITHOUT_CLASSIFICATION	if not specified return empty iterator
WITHOUT_CLASSIFICATION	iterate over all type elements
WITHOUT_CLASSIFICATION	create <adr>, if it doesn't exist
WITHOUT_CLASSIFICATION	create a CDATA section for the label
WITHOUT_CLASSIFICATION	exit immediately, nothing more to do
WITHOUT_CLASSIFICATION	exit immediately, nothing more to do
WITHOUT_CLASSIFICATION	create jpim contact instance
WITHOUT_CLASSIFICATION	set sort-string/displayname
WITHOUT_CLASSIFICATION	set first name
WITHOUT_CLASSIFICATION	set formatted name
WITHOUT_CLASSIFICATION	set last name
WITHOUT_CLASSIFICATION	add all additional names (middle names)
WITHOUT_CLASSIFICATION	add all nicknames
WITHOUT_CLASSIFICATION	add all prefixes
WITHOUT_CLASSIFICATION	set website/homepage
WITHOUT_CLASSIFICATION	add email addresses
WITHOUT_CLASSIFICATION	add all addresses
WITHOUT_CLASSIFICATION	set name of organization
WITHOUT_CLASSIFICATION	save contact to outputstream
WITHOUT_CLASSIFICATION	sort-string
WITHOUT_CLASSIFICATION	list of nick names
WITHOUT_CLASSIFICATION	list of additional names (middle names)
WITHOUT_CLASSIFICATION	list of suffices
WITHOUT_CLASSIFICATION	formatted name
WITHOUT_CLASSIFICATION	birthday
WITHOUT_CLASSIFICATION	url to website/homepage
WITHOUT_CLASSIFICATION	address list
WITHOUT_CLASSIFICATION	not that the editor ui only supports max of 3 addresses to edit
WITHOUT_CLASSIFICATION	name of organisation
WITHOUT_CLASSIFICATION	dummy address
WITHOUT_CLASSIFICATION	2 columns
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	check if a single entry is selected
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	DocumentListener Methods
WITHOUT_CLASSIFICATION	select first item
WITHOUT_CLASSIFICATION	delete folder
WITHOUT_CLASSIFICATION	update folder selection
WITHOUT_CLASSIFICATION	setBorder(BorderFactory.createEmptyBorder(4, 4, 4, 4));
WITHOUT_CLASSIFICATION	scrollPane.setBorder(null);
WITHOUT_CLASSIFICATION	create list of contact folders
WITHOUT_CLASSIFICATION	remember search result
WITHOUT_CLASSIFICATION	doesn't support search inside yet
WITHOUT_CLASSIFICATION	Class under test for HeaderItemList getHeaderItemList()
WITHOUT_CLASSIFICATION	Class under test for Object add(Contact)
WITHOUT_CLASSIFICATION	create config-folder
WITHOUT_CLASSIFICATION	new Config(file);
WITHOUT_CLASSIFICATION	now load all available plugins
WITHOUT_CLASSIFICATION	delete all mails in folder
WITHOUT_CLASSIFICATION	Class under test for void remove(Object)
WITHOUT_CLASSIFICATION	Condition
WITHOUT_CLASSIFICATION	passive: if not initialized do it now
WITHOUT_CLASSIFICATION	public Object getObject(ILocator locator); public IStructureValue getChild(ILocator locator);
WITHOUT_CLASSIFICATION	String getProperty(String name); void setProperty(String name, String value); Hashtable getProperties();
WITHOUT_CLASSIFICATION	if path startsWith "/" -> skip
WITHOUT_CLASSIFICATION	print attributes
WITHOUT_CLASSIFICATION	Hashcode value should be buffered.
WITHOUT_CLASSIFICATION	END public class XmlElement
WITHOUT_CLASSIFICATION	needed for hibernate!
WITHOUT_CLASSIFICATION	passive: if not initialized do it now
WITHOUT_CLASSIFICATION	still not ready, exit!
WITHOUT_CLASSIFICATION	still not ready, exit!
WITHOUT_CLASSIFICATION	transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	transaction is needed for the underlying jpa architecture
WITHOUT_CLASSIFICATION	disable logging for the startup
WITHOUT_CLASSIFICATION	set console handler to OFF
WITHOUT_CLASSIFICATION	ShutdownManager.getInstance().register(this);
WITHOUT_CLASSIFICATION	start HSQLDB
WITHOUT_CLASSIFICATION	do not start a second time!
WITHOUT_CLASSIFICATION	start JPA entity manager
WITHOUT_CLASSIFICATION	restore log level
WITHOUT_CLASSIFICATION	still not ready, exit!
WITHOUT_CLASSIFICATION	creates a shallow copy of this object
WITHOUT_CLASSIFICATION	passive: if not initialized do it now
WITHOUT_CLASSIFICATION	more than one item, very strange! duplicate entries! remove all
WITHOUT_CLASSIFICATION	refers to the entry in persistence.xml
WITHOUT_CLASSIFICATION	no item exists in table -> nothing todo
WITHOUT_CLASSIFICATION	shutdown hsql
WITHOUT_CLASSIFICATION	if the database is not started, don't do it
WITHOUT_CLASSIFICATION	shutdown entity manager
WITHOUT_CLASSIFICATION	one second (=1000 ms)
WITHOUT_CLASSIFICATION	sleep 5 minutes
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	test if a task is already running
WITHOUT_CLASSIFICATION	no java task running -> start background tasks
WITHOUT_CLASSIFICATION	grab a part of aInput which does not include aOldPattern
WITHOUT_CLASSIFICATION	add aNewPattern to take place of aOldPattern
WITHOUT_CLASSIFICATION	the final chunk will go to the end of aInput
WITHOUT_CLASSIFICATION	Check for no property
WITHOUT_CLASSIFICATION	return true for new files
WITHOUT_CLASSIFICATION	a < b
WITHOUT_CLASSIFICATION	a < b
WITHOUT_CLASSIFICATION	a == b
WITHOUT_CLASSIFICATION	a == b
WITHOUT_CLASSIFICATION	a > b
WITHOUT_CLASSIFICATION	a > b
WITHOUT_CLASSIFICATION	Platform identifiers: Windows, Linux, Mac OS, ...
WITHOUT_CLASSIFICATION	Single OS identifiers: Window 95, Window 98, ...
WITHOUT_CLASSIFICATION	version 4
WITHOUT_CLASSIFICATION	IETF variant
WITHOUT_CLASSIFICATION	startIdx and idxOld delimit various chunks of aInput; these chunks always end where aOldPattern begins
WITHOUT_CLASSIFICATION	reset the startIdx to just after the current match, to see if there are any further matches
WITHOUT_CLASSIFICATION	threadVar;
WITHOUT_CLASSIFICATION	following java guidelines I'm setting this to low priority -> this should make the gui more responsive, because the -> background worker has low priority whereas the gui worker -> has normal priority
WITHOUT_CLASSIFICATION	Is it already locked from locker ?
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.taskmanager.ITaskManager#register(org.columba.core.command.Worker)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.taskmanager.ITaskManager#unregister(org.columba.core.util.SwingWorker.ThreadVar)
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	see getValue(), setValue()
WITHOUT_CLASSIFICATION	propagate
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	Check if locked
WITHOUT_CLASSIFICATION	Initialize the cipher for encryption
WITHOUT_CLASSIFICATION	Initialize the cipher for encryption
WITHOUT_CLASSIFICATION	Encrypt the cleartext
WITHOUT_CLASSIFICATION	Encrypt the cleartext
WITHOUT_CLASSIFICATION	Return a String representation of the cipher text
WITHOUT_CLASSIFICATION	Our cleartext as bytes
WITHOUT_CLASSIFICATION	Wake up the others!
WITHOUT_CLASSIFICATION	public int type;
WITHOUT_CLASSIFICATION	gota go now
WITHOUT_CLASSIFICATION	else keep waiting
WITHOUT_CLASSIFICATION	exception handler should handle all error handling stuff
WITHOUT_CLASSIFICATION	Must create a ExceptionProcessor
WITHOUT_CLASSIFICATION	init event
WITHOUT_CLASSIFICATION	"new value" is used to pass on the delay
WITHOUT_CLASSIFICATION	fire event
WITHOUT_CLASSIFICATION	Create the cipher $NON-NLS-1$
WITHOUT_CLASSIFICATION	Our cleartext as bytes $NON-NLS-1$
WITHOUT_CLASSIFICATION	Create the cipher $NON-NLS-1$
WITHOUT_CLASSIFICATION	Return a String representation of the cipher text $NON-NLS-1$
WITHOUT_CLASSIFICATION	set display text stored here to an empty string (~ cleared) $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	Remove bogus Operation
WITHOUT_CLASSIFICATION	Create the workers
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.taskmanager.ITaskManager#addTaskManagerListener(org.columba.core.taskmanager.TaskManagerListener)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	notify that a new worker is available
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	make a deep copy
WITHOUT_CLASSIFICATION	Sort in with respect to priority and synchronize: Commands with higher priority will be processed before commands with lower priority. If there is a command that is of type synchronize don't put this command in front.
WITHOUT_CLASSIFICATION	retrieve plugin manager instance
WITHOUT_CLASSIFICATION	We have to process this command first -> break here!
WITHOUT_CLASSIFICATION	XmlElement child = getRoot().getElement(pathToElement); return child;
WITHOUT_CLASSIFICATION	nothing to do yet
WITHOUT_CLASSIFICATION	nothing to do yet
WITHOUT_CLASSIFICATION	nothing to do yet
WITHOUT_CLASSIFICATION	load config-file from disk
WITHOUT_CLASSIFICATION	fall back to default path
WITHOUT_CLASSIFICATION	final String key = (String) keys.next();
WITHOUT_CLASSIFICATION	this is no integer value
WITHOUT_CLASSIFICATION	Do nothing if we are hovering over the root node
WITHOUT_CLASSIFICATION	initialize default view options
WITHOUT_CLASSIFICATION	tstich: Default values are set in the loadPostions() method
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.IStatusObservable#getCancelled()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.config.IConfig#getConfigDirectory()
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	views.xml <view header="100" header_enabled="true" id="ThreePaneMail" infopanel="true" main="100"> <window maximized="true" height="721" width="1034" y="26" x="0"></window> <toolbars infopanel="true" main="true"></toolbars> <splitpanes header="200" header_enabled="true" main="283" attachment="100"></splitpanes> </view>
WITHOUT_CLASSIFICATION	options.xml: <gui> <theme name="Plastic" theme="Experience Blue"></theme> <fonts overwrite="false"> <text name="Default" size="12"></text> <main name="Default" size="12"></main> </fonts> <toolbar text_position="false" enable_icon="true" enable_text="true"></toolbar> </gui>
WITHOUT_CLASSIFICATION	callback
WITHOUT_CLASSIFICATION	if everything worked out all right, we copy the tmp file to the destination file
WITHOUT_CLASSIFICATION	create initial version from default configuration file
WITHOUT_CLASSIFICATION	return plain document
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	load xml configuration from file
WITHOUT_CLASSIFICATION	notify all listeners that search is finished
WITHOUT_CLASSIFICATION	check if default value exists
WITHOUT_CLASSIFICATION	remove old
WITHOUT_CLASSIFICATION	contains already a single element
WITHOUT_CLASSIFICATION	create empty list
WITHOUT_CLASSIFICATION	create empty structure value
WITHOUT_CLASSIFICATION	initialize context
WITHOUT_CLASSIFICATION	identity definition
WITHOUT_CLASSIFICATION	MULTIPLICITY.ZERO_TO_ONE is default
WITHOUT_CLASSIFICATION	date time timezone definition
WITHOUT_CLASSIFICATION	date range (start time, end time) definition
WITHOUT_CLASSIFICATION	document definition
WITHOUT_CLASSIFICATION	notify all listeners
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	register at shutdown manager -> this will save all configuration data, when closing Columba
WITHOUT_CLASSIFICATION	icons putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("mail-read.png")); putValue(LARGE_ICON, ImageLoader.getImageIcon("mail-read.png"));
WITHOUT_CLASSIFICATION	notify all listeners that have a new search result ensure this is called in the EDT
WITHOUT_CLASSIFICATION	<context> <core> <identity> </identity> <datetime> </datetime> </core> </context>
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	locale definition
WITHOUT_CLASSIFICATION	list of attachments
WITHOUT_CLASSIFICATION	single attachment
WITHOUT_CLASSIFICATION	message
WITHOUT_CLASSIFICATION	single sender - re-use identity type
WITHOUT_CLASSIFICATION	re-use identity type for recipient list
WITHOUT_CLASSIFICATION	message body
WITHOUT_CLASSIFICATION	message contains list of attachments
WITHOUT_CLASSIFICATION	replace "%1" parameter with file argument ...
WITHOUT_CLASSIFICATION	... or, add the file in case there was no "%1" used
WITHOUT_CLASSIFICATION	Wait for external editor to quit
WITHOUT_CLASSIFICATION	Try the built-in mime table
WITHOUT_CLASSIFICATION	Try the built-in mime table
WITHOUT_CLASSIFICATION	check if service is registered
WITHOUT_CLASSIFICATION	retrieve service instance
WITHOUT_CLASSIFICATION	load instance of service
WITHOUT_CLASSIFICATION	int index = list.size() - 1; remove(index);
WITHOUT_CLASSIFICATION	Condition
WITHOUT_CLASSIFICATION	public FilterCriteria getCriteria(int index) { return (FilterCriteria) list.get(index); }
WITHOUT_CLASSIFICATION	if win32 platform, prepend cmd.exe necessary for system environment variables usage
WITHOUT_CLASSIFICATION	check if there's already an instanciation available we can reuse here
WITHOUT_CLASSIFICATION	action.addAttribute( "class", "org.columba.mail.filter.action.MarkMessageAsReadFilterAction");
WITHOUT_CLASSIFICATION	example configuration (tree.xml) <actionlist> <action uid="122" type="Move Message"></action> </actionlist>
WITHOUT_CLASSIFICATION	folder uid doesn't exist -> create default value
WITHOUT_CLASSIFICATION	XmlElement.printNode(getRoot(),"");
WITHOUT_CLASSIFICATION	condition: match all (AND) = 0, match any (OR) = 1 private AdapterNode conditionNode;
WITHOUT_CLASSIFICATION	setTextValue(conditionNode, s);
WITHOUT_CLASSIFICATION	AdapterNode filterListNode = getFilterListNode(); AdapterNode node = MailInterface.config.getFolderConfig().addEmptyFilterNode( getFolder().getNode() ); Filter filter = new Filter( node ); add( filter ); return filter;
WITHOUT_CLASSIFICATION	list.add(f);
WITHOUT_CLASSIFICATION	if folder creation failed -> don't update tree ui
WITHOUT_CLASSIFICATION	sorting is disabled
WITHOUT_CLASSIFICATION	action.addAttribute("class", "org.columba.mail.filter.action.MarkMessageAsReadFilterAction");
WITHOUT_CLASSIFICATION	Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	repaint(x, y, width, height);
WITHOUT_CLASSIFICATION	setFont( UIManager.getFont("TextField.font") );
WITHOUT_CLASSIFICATION	setIcon(ImageLoader.getImageIcon("stock_down-16.png"));
WITHOUT_CLASSIFICATION	add( panel, BorderLayout.CENTER );
WITHOUT_CLASSIFICATION	add( panel, BorderLayout.CENTER );
WITHOUT_CLASSIFICATION	g.drawRect(0, 0, w - 3, h - 3);
WITHOUT_CLASSIFICATION	left
WITHOUT_CLASSIFICATION	top
WITHOUT_CLASSIFICATION	right
WITHOUT_CLASSIFICATION	right
WITHOUT_CLASSIFICATION	bottom
WITHOUT_CLASSIFICATION	bottom
WITHOUT_CLASSIFICATION	w+=1; h+=1; g.setColor(edge); bottom g.drawLine(x+2, h, x+w, h ); right g.drawLine(x+w, y+ovalHeight+2, x+w , y+h);
WITHOUT_CLASSIFICATION	Java 1.5 enumeration
WITHOUT_CLASSIFICATION	paint original first
WITHOUT_CLASSIFICATION	augment x.
WITHOUT_CLASSIFICATION	augment y.
WITHOUT_CLASSIFICATION	set display text - possibly with a mnemonic defined using &
WITHOUT_CLASSIFICATION	CEDRIC: not used right now.
WITHOUT_CLASSIFICATION	private ActionSupport asupport;
WITHOUT_CLASSIFICATION	private JLabel l_date, l_year, l_month;
WITHOUT_CLASSIFICATION	private JLabel l_date, l_year, l_month;
WITHOUT_CLASSIFICATION	private JButton b_lyear, b_ryear, b_lmonth, b_rmonth;
WITHOUT_CLASSIFICATION	private JButton b_lyear, b_ryear, b_lmonth, b_rmonth;
WITHOUT_CLASSIFICATION	asupport = new ActionSupport(this);
WITHOUT_CLASSIFICATION	Let's at least make a half-assed attempt at conforming to the Metal PLAF colors.
WITHOUT_CLASSIFICATION	top.setBorder( BorderFactory.createEtchedBorder() );
WITHOUT_CLASSIFICATION	b_lmonth.setFocusPainted(false); b_lmonth.setOpaque(false); b_lmonth.addActionListener(this);
WITHOUT_CLASSIFICATION	p1.add(l_month);
WITHOUT_CLASSIFICATION	Font f = getFont(); setFont(new Font(f.getName(), Font.BOLD, f.getSize()));
WITHOUT_CLASSIFICATION	Copy the relevant portions of a date.
WITHOUT_CLASSIFICATION	asupport.addActionListener(listener);
WITHOUT_CLASSIFICATION	asupport.removeActionListener(listener);
WITHOUT_CLASSIFICATION	asupport.fireActionEvent(((o == b_lmonth) || (o == b_rmonth)) ? MONTH_CHANGE_CMD : YEAR_CHANGE_CMD);
WITHOUT_CLASSIFICATION	Determine what day of week the first day of the month falls on. It's too bad we have to resort to this hack; the Java API provides no means of doing this any other way.
WITHOUT_CLASSIFICATION	This method is called whenever the month or year changes. It's job is to repaint the labels and determine whether any selection range limits have been reached.
WITHOUT_CLASSIFICATION	l_year.setText(String.valueOf(selectedDate.get(Calendar.YEAR)));
WITHOUT_CLASSIFICATION	b_lyear.setEnabled(true); b_ryear.setEnabled(true);
WITHOUT_CLASSIFICATION	Disable anything that would cause the date to go out of range. This logic is extremely sensitive so be very careful when making changes. Every condition test in here is necessary, so don't remove anything.
WITHOUT_CLASSIFICATION	b_lyear.setEnabled(y > y0);
WITHOUT_CLASSIFICATION	allow out-of-range selection selectedDate.set(Calendar.DATE, selectedDay);
WITHOUT_CLASSIFICATION	allow out-of-range selection selectedDate.set(Calendar.DATE, selectedDay);
WITHOUT_CLASSIFICATION	b_ryear.setEnabled(y < y1);
WITHOUT_CLASSIFICATION	repaint the calendar pane
WITHOUT_CLASSIFICATION	figure out how many blank spaces there are before first day of month, and calculate coordinates of first drawn cell
WITHOUT_CLASSIFICATION	paint the border
WITHOUT_CLASSIFICATION	set the clip rect to exclude the border & insets
WITHOUT_CLASSIFICATION	draw the weekday headings
WITHOUT_CLASSIFICATION	find out how many days there are in the current month
WITHOUT_CLASSIFICATION	draw all the day cells
WITHOUT_CLASSIFICATION	draw the outline of the cell gc.setColor(MetalLookAndFeel.getPrimaryControlShadow());
WITHOUT_CLASSIFICATION	set the pen color depending on weekday or weekend, and paint the day number in the cell
WITHOUT_CLASSIFICATION	advance to the next cell position
WITHOUT_CLASSIFICATION	Get the preferred size of the component.
WITHOUT_CLASSIFICATION	Get the minimum size of the component.
WITHOUT_CLASSIFICATION	Figure out which day the mouse click is on.
WITHOUT_CLASSIFICATION	check if totally out of range.
WITHOUT_CLASSIFICATION	mouse listener
WITHOUT_CLASSIFICATION	asupport.fireActionEvent(DATE_CHANGE_CMD);
WITHOUT_CLASSIFICATION	border
WITHOUT_CLASSIFICATION	Set text, possibly with a mnemonic if defined using &
WITHOUT_CLASSIFICATION	set display text - possible with a mnemonic defined using &
WITHOUT_CLASSIFICATION	setText(treeNode.getName()); setIcon(getFolderIcon(treeNode, expanded));
WITHOUT_CLASSIFICATION	setBackground(new Color(236, 233, 216));
WITHOUT_CLASSIFICATION	don't override update(), get the default clear
WITHOUT_CLASSIFICATION	Enable JavaHelp support if topic id is defined
WITHOUT_CLASSIFICATION	apply transparent icon
WITHOUT_CLASSIFICATION	setIconTextGap(5);setVerticalAlignment(JLabel.CENTER);
WITHOUT_CLASSIFICATION	centerpanel
WITHOUT_CLASSIFICATION	search for mnemonic
WITHOUT_CLASSIFICATION	mnemonic found ...and not at the end of the string (which doesn't make sence)
WITHOUT_CLASSIFICATION	if mnemonic is first character of this string
WITHOUT_CLASSIFICATION	if mnemonic is first character of this string
WITHOUT_CLASSIFICATION	set display text
WITHOUT_CLASSIFICATION	set display text
WITHOUT_CLASSIFICATION	set mnemonic
WITHOUT_CLASSIFICATION	set mnemonic
WITHOUT_CLASSIFICATION	no mnemonic found - just set the text on the menu item
WITHOUT_CLASSIFICATION	no mnemonic found - just set the text on the menu item
WITHOUT_CLASSIFICATION	RGB values discovered using ZoomIn
WITHOUT_CLASSIFICATION	Dimensions
WITHOUT_CLASSIFICATION	Layout a row and column "grid"
WITHOUT_CLASSIFICATION	Draw the white squares first, so the gray squares will overlap
WITHOUT_CLASSIFICATION	draw the gray squares overlapping the white background squares
WITHOUT_CLASSIFICATION	initialization
WITHOUT_CLASSIFICATION	controller
WITHOUT_CLASSIFICATION	draw horizontal lines
WITHOUT_CLASSIFICATION	draw vertical lines
WITHOUT_CLASSIFICATION	Add the default colors items.
WITHOUT_CLASSIFICATION	The length is 1 if no item is selected
WITHOUT_CLASSIFICATION	$NON-NLS-2$
WITHOUT_CLASSIFICATION	Instance Creation
WITHOUT_CLASSIFICATION	Accessing Properties
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	Constructor...
WITHOUT_CLASSIFICATION	cache the old color set the white color draw the square reset the old color
WITHOUT_CLASSIFICATION	insets.top += spacing; insets.bottom += spacing;
WITHOUT_CLASSIFICATION	if we stopped at line break, increase array index pointer
WITHOUT_CLASSIFICATION	increase minimum height by line height and line spacing
WITHOUT_CLASSIFICATION	add the component's border insets to our minimum dimension
WITHOUT_CLASSIFICATION	check for line breaks
WITHOUT_CLASSIFICATION	put them into the array
WITHOUT_CLASSIFICATION	draw line
WITHOUT_CLASSIFICATION	String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	button panel
WITHOUT_CLASSIFICATION	button panel
WITHOUT_CLASSIFICATION	look and feel
WITHOUT_CLASSIFICATION	fonts
WITHOUT_CLASSIFICATION	fonts
WITHOUT_CLASSIFICATION	fonts
WITHOUT_CLASSIFICATION	toolbar
WITHOUT_CLASSIFICATION	language
WITHOUT_CLASSIFICATION	language
WITHOUT_CLASSIFICATION	HTTP proxy
WITHOUT_CLASSIFICATION	ID of configuration plugin of this theme plugin
WITHOUT_CLASSIFICATION	get theme plugin-handler
WITHOUT_CLASSIFICATION	get config plugin-handler
WITHOUT_CLASSIFICATION	enable/disable button, too
WITHOUT_CLASSIFICATION	select Locale in ComboBox
WITHOUT_CLASSIFICATION	get language configuration
WITHOUT_CLASSIFICATION	set language config based on selected item
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	3 columns
WITHOUT_CLASSIFICATION	skip the first column
WITHOUT_CLASSIFICATION	Add components to the panel:
WITHOUT_CLASSIFICATION	init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	switch to new theme
WITHOUT_CLASSIFICATION	notify frame to update
WITHOUT_CLASSIFICATION	set fonts
WITHOUT_CLASSIFICATION	collapsible.getContentPane().setBackground(Color.WHITE);
WITHOUT_CLASSIFICATION	use the collapse/expand icons from the JTree UI
WITHOUT_CLASSIFICATION	link.setFont(link.getFont().deriveFont(Font.BOLD));
WITHOUT_CLASSIFICATION	link.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	SystemColor.controlLtHighlight,
WITHOUT_CLASSIFICATION	if the collapsible is collapsed, we do not want its border to be painted.
WITHOUT_CLASSIFICATION	g.setColor(borderColor2); g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	bottomPanel.setBorder(new WizardTopBorder()); Border border = bottomPanel.getBorder(); Border margin = BorderFactory.createEmptyBorder(15, 10, 10, 10); bottomPanel.setBorder(new CompoundBorder(border, margin));
WITHOUT_CLASSIFICATION	centerPanel.add(label, cc.xywh(3, 1, 1, 1));
WITHOUT_CLASSIFICATION	buttonPanel.add(reportBugButton);
WITHOUT_CLASSIFICATION	FormLayout layout = new FormLayout("default", "default, default"); IContainer c = getContentPane(); c.setLayout(layout); CellConstraints cc = new CellConstraints(); c.add(createCenterPanel(detailsButton.isSelected()), cc.xy(1, 1)); c.add(bottomPanel, cc.xy(1, 2));
WITHOUT_CLASSIFICATION	Spacings
WITHOUT_CLASSIFICATION	First Line with Labels
WITHOUT_CLASSIFICATION	Second Line with Names
WITHOUT_CLASSIFICATION	Third Line with Lists
WITHOUT_CLASSIFICATION	4. Line with PreviewLabel
WITHOUT_CLASSIFICATION	5. Line with Preview
WITHOUT_CLASSIFICATION	6. Line with Buttons
WITHOUT_CLASSIFICATION	String envfonts[] = gEnv.getAvailableFontFamilyNames();
WITHOUT_CLASSIFICATION	fill sizes string array with numbers from 7 to 18
WITHOUT_CLASSIFICATION	this.contentPane = comp;
WITHOUT_CLASSIFICATION	label.setFont(UIManager.getFont("Label.font").deriveFont(Font.PLAIN));
WITHOUT_CLASSIFICATION	builder.addFixedNarrow((JButton) rightButtonVector.get(i));
WITHOUT_CLASSIFICATION	ButtonBarBuilder builder2 = new ButtonBarBuilder(buttonWestPanel);
WITHOUT_CLASSIFICATION	builder2.addGlue();
WITHOUT_CLASSIFICATION	builder2.addStrut(Sizes.pixel(4));
WITHOUT_CLASSIFICATION	ButtonBarBuilder builder = new ButtonBarBuilder(buttonEastPanel); builder.addGlue();
WITHOUT_CLASSIFICATION	JPanel p = new JPanel(); p.setLayout(new FlowLayout());
WITHOUT_CLASSIFICATION	g2.setColor(fillColor); g2.fillRect(0,0,w,h);
WITHOUT_CLASSIFICATION	If this is a unix-based system, check the 2 best-known areas for the aspell binary.
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	setMargin(new Insets(0,0,0,0));
WITHOUT_CLASSIFICATION	this property is ignored under java 1.5.
WITHOUT_CLASSIFICATION	menu.setVisible(true);
WITHOUT_CLASSIFICATION	DockingManager.(DockableView.this);
WITHOUT_CLASSIFICATION	process exception -> show error dialog to user
WITHOUT_CLASSIFICATION	Print the stacktrace to our log file.
WITHOUT_CLASSIFICATION	does not happen
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	does not happen
WITHOUT_CLASSIFICATION	show error dialog, with exception message and stack-trace -> dialog also provides a button for the user to easily -> report a bug
WITHOUT_CLASSIFICATION	result.append(", ");
WITHOUT_CLASSIFICATION	RIYAD: The Prefs API cannot be used to read the Window's registry, it is coded to use the registry (if available) as a backing store on in the SOFTWARE/JavaSoft/Prefs registry keys for HKEY_CURRENT_USER and HKEY_LOCAL_MACHINE paths. I have seen a few java apps that use the Windows registry and they all required a native lib to do it.
WITHOUT_CLASSIFICATION	RIYAD: The Prefs API cannot be used to read the Window's registry, it is coded to use the registry (if available) as a backing store on in the SOFTWARE/JavaSoft/Prefs registry keys for HKEY_CURRENT_USER and HKEY_LOCAL_MACHINE paths. I have seen a few java apps that use the Windows registry and they all required a native lib to do it.
WITHOUT_CLASSIFICATION	If this is windows, check the default installation location for the aspell.exe binary.
WITHOUT_CLASSIFICATION	Couldn't find anything, so return null and let the wizard ask the user.
WITHOUT_CLASSIFICATION	Couldn't find anything, so return null and let the wizard ask the user.
WITHOUT_CLASSIFICATION	check configuration
WITHOUT_CLASSIFICATION	create xml node
WITHOUT_CLASSIFICATION	start the configuration wizard
WITHOUT_CLASSIFICATION	ok, now the tool is initialized correctly
WITHOUT_CLASSIFICATION	get location of executable
WITHOUT_CLASSIFICATION	get plugin ID
WITHOUT_CLASSIFICATION	get configuration
WITHOUT_CLASSIFICATION	set configuration of this plugin
WITHOUT_CLASSIFICATION	exit for-loop
WITHOUT_CLASSIFICATION	GPG for windows is an executable-only download, fortunately there is a windows registry file included in the download and has this as the default installation path in it. While users will probably install GPG into many other places, this is atleast a best-guess start.
WITHOUT_CLASSIFICATION	If this is a unix-based system, check the 2 best-known areas for the gpg binary.
WITHOUT_CLASSIFICATION	If this is windows, check the default installation location for the gpg.exe binary.
WITHOUT_CLASSIFICATION	init component before querying for sourceFile
WITHOUT_CLASSIFICATION	get plugin handler for handling frames
WITHOUT_CLASSIFICATION	store every open frame in our temporary list
WITHOUT_CLASSIFICATION	close every open frame
WITHOUT_CLASSIFICATION	if not we haven't actually closed a frame, leave viewList as is
WITHOUT_CLASSIFICATION	load all frames from configuration file
WITHOUT_CLASSIFICATION	get element from view list
WITHOUT_CLASSIFICATION	should not occur
WITHOUT_CLASSIFICATION	fall-back
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	used to temporarily store the values while the original viewList gets modified by the close method
WITHOUT_CLASSIFICATION	we cannot use an iterator here because the close method manipulates the list
WITHOUT_CLASSIFICATION	the close method manipulates the viewList so we have to remove the existing element and fill in our temporarily stored ones
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	found cached instance -> re-use this instance and remove it from cache
WITHOUT_CLASSIFICATION	create new instance -> get frame controller using the plugin handler found above
WITHOUT_CLASSIFICATION	look for default view settings (if not found, null is returned)
WITHOUT_CLASSIFICATION	look for default view settings (if not found, null is returned)
WITHOUT_CLASSIFICATION	Create a frame controller for this view view = null => defaults specified by frame controller is used
WITHOUT_CLASSIFICATION	cancel, if we show already correct frame mediator
WITHOUT_CLASSIFICATION	Create a frame controller for this view
WITHOUT_CLASSIFICATION	save old framemediator in cache (use containers's old id)
WITHOUT_CLASSIFICATION	If defaultViews doesn't exist, create it (backward compatibility)
WITHOUT_CLASSIFICATION	search through defaultViews to get settings for given id
WITHOUT_CLASSIFICATION	nothing to save
WITHOUT_CLASSIFICATION	removed previous default values
WITHOUT_CLASSIFICATION	store current view settings
WITHOUT_CLASSIFICATION	Check if the frame controller has been registered, else do nothing
WITHOUT_CLASSIFICATION	save in cache
WITHOUT_CLASSIFICATION	this is the last frame so store its data in the viewList
WITHOUT_CLASSIFICATION	shutdown Columba if no frame exists anymore
WITHOUT_CLASSIFICATION	Can we use the Java way to maximize the window
WITHOUT_CLASSIFICATION	We can use the Java way to maximize the window
WITHOUT_CLASSIFICATION	clear the tooltip message previously displayed in the status bar
WITHOUT_CLASSIFICATION	Menuitems use this to display a string in the statusbar
WITHOUT_CLASSIFICATION	init selection handler
WITHOUT_CLASSIFICATION	overwrite this method
WITHOUT_CLASSIFICATION	overwrite this method
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	make sure there is nothing within the root dockingport
WITHOUT_CLASSIFICATION	overwrite this method
WITHOUT_CLASSIFICATION	overwrite this method
WITHOUT_CLASSIFICATION	overwrite this method
WITHOUT_CLASSIFICATION	createMenuBar();
WITHOUT_CLASSIFICATION	load docking settings from last user session
WITHOUT_CLASSIFICATION	JPanel panel = (JPanel) this.getContentPane();
WITHOUT_CLASSIFICATION	convert region enum to flexdock string
WITHOUT_CLASSIFICATION	create new default frame controller
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	create menu
WITHOUT_CLASSIFICATION	add statusbar
WITHOUT_CLASSIFICATION	Set the icon and the title
WITHOUT_CLASSIFICATION	create toolbar
WITHOUT_CLASSIFICATION	register statusbar at global taskmanager
WITHOUT_CLASSIFICATION	contentPane.setBorder(BorderFactory.createEmptyBorder(5, 5, 5, 5));
WITHOUT_CLASSIFICATION	remove from old mediator's listener list
WITHOUT_CLASSIFICATION	contentPane.add(dockingPort, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	add window listener
WITHOUT_CLASSIFICATION	turn on floating support
WITHOUT_CLASSIFICATION	enable flexdock ghost preview
WITHOUT_CLASSIFICATION	update content-pane
WITHOUT_CLASSIFICATION	update content-pane
WITHOUT_CLASSIFICATION	add to new mediator's listener list
WITHOUT_CLASSIFICATION	add to new mediator's listener list
WITHOUT_CLASSIFICATION	default core menu
WITHOUT_CLASSIFICATION	setJMenuBar(menubar);
WITHOUT_CLASSIFICATION	default toolbar
WITHOUT_CLASSIFICATION	20030831, karlpeder Also location is restored
WITHOUT_CLASSIFICATION	if window is maximized -> ignore the window size properties otherwise, use window size property but ensure that the window is completly visible on the desktop
WITHOUT_CLASSIFICATION	20030831, karlpeder Now also location is stored
WITHOUT_CLASSIFICATION	retrieve metadata
WITHOUT_CLASSIFICATION	add action to menu
WITHOUT_CLASSIFICATION	remove old content pane
WITHOUT_CLASSIFICATION	contentPane.remove(mediator.getContentPane());
WITHOUT_CLASSIFICATION	add animated icon to right-hand side corner of menubar
WITHOUT_CLASSIFICATION	add new componnet
WITHOUT_CLASSIFICATION	show/hide new toolbar
WITHOUT_CLASSIFICATION	getContentPane().validate();
WITHOUT_CLASSIFICATION	save window position
WITHOUT_CLASSIFICATION	hide window
WITHOUT_CLASSIFICATION	don't do anything
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	if window is maximized -> ignore the window size properties otherwise, use window size property but ensure that the window is completly visible on the desktop
WITHOUT_CLASSIFICATION	Some error in the client/server communication --> fall back to default login process
WITHOUT_CLASSIFICATION	make window visible LOG.finest("setVisible()");
WITHOUT_CLASSIFICATION	load window position loadPositions(getViewItem());
WITHOUT_CLASSIFICATION	public ColumbaMenu getMenuBar() { return menu; }
WITHOUT_CLASSIFICATION	Tell frame model that frame is closing. If this frame hasn't been opened using FrameManager methods, FrameManager.close does nothing.
WITHOUT_CLASSIFICATION	getContentPane().remove(this.toolbar);
WITHOUT_CLASSIFICATION	remove old toolbar
WITHOUT_CLASSIFICATION	searchToolBar.addSeparator();
WITHOUT_CLASSIFICATION	searchBar.install(searchToolBar);
WITHOUT_CLASSIFICATION	add search bar to main toolbar, in case its a managed frame mediator
WITHOUT_CLASSIFICATION	getContentPane().validate();
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	register for change of the frame mediator
WITHOUT_CLASSIFICATION	check if mediator supports docking
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	awt-event-thread
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	Uses the FrameManager instance in MainInterface to open a new addressbook window.
WITHOUT_CLASSIFICATION	putValue(SMALL_ICON, ImageLoader.getIcon("script.png"));
WITHOUT_CLASSIFICATION	putValue(SMALL_ICON, ImageLoader.getIcon("script.png"));
WITHOUT_CLASSIFICATION	putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("mail-new.png"));
WITHOUT_CLASSIFICATION	Opens a new mail window using the FrameManager instance in MainInterface.
WITHOUT_CLASSIFICATION	small icon for JMenuItem
WITHOUT_CLASSIFICATION	big icon for JToolBar
WITHOUT_CLASSIFICATION	set JavaHelp topic ID setTopicID("cancel");
WITHOUT_CLASSIFICATION	short cut key
WITHOUT_CLASSIFICATION	FocusManager.getInstance().setDeleteAction(this);
WITHOUT_CLASSIFICATION	enable/disable search bar during search
WITHOUT_CLASSIFICATION	We need to sort the uids in order to have the correct association between the new and old uid
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	short cut key
WITHOUT_CLASSIFICATION	check if this is a management frame instance -> if so create submenu to switch perspectives -> otherwise, don't create submenu
WITHOUT_CLASSIFICATION	contains not
WITHOUT_CLASSIFICATION	FocusManager.getInstance().delete();
WITHOUT_CLASSIFICATION	create menuitems for all registered frame extensions
WITHOUT_CLASSIFICATION	create menuitems for all registered new items
WITHOUT_CLASSIFICATION	Close all open frames, which leads to exiting Columba
WITHOUT_CLASSIFICATION	FrameManager.getInstance().storeViews();
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	short cut key
WITHOUT_CLASSIFICATION	textPane.setMargin(new Insets(5, 5, 5, 5));
WITHOUT_CLASSIFICATION	setup base url in order to be able to display images in html-component
WITHOUT_CLASSIFICATION	scroll window to the beginning
WITHOUT_CLASSIFICATION	First find the beginning element
WITHOUT_CLASSIFICATION	in case of an error -> fall-back to Swing's built-in JTextPane
WITHOUT_CLASSIFICATION	we insert new menus between the "Edit" and the "Utilities, Help" menu
WITHOUT_CLASSIFICATION	extend existing menu
WITHOUT_CLASSIFICATION	extend existing menu
WITHOUT_CLASSIFICATION	create new menu
WITHOUT_CLASSIFICATION	create new menu
WITHOUT_CLASSIFICATION	make sure that we don't end up with two separators
WITHOUT_CLASSIFICATION	make sure that we don't end up with two separators
WITHOUT_CLASSIFICATION	do nothing
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	view -> model
WITHOUT_CLASSIFICATION	centerpanel
WITHOUT_CLASSIFICATION	This method is called when a cell value is edited by the user.
WITHOUT_CLASSIFICATION	Configure the component with the specified value
WITHOUT_CLASSIFICATION	Return the configured component
WITHOUT_CLASSIFICATION	This method is called when editing is completed. It must return the new value to be stored in the cell.
WITHOUT_CLASSIFICATION	enable/disable tree node
WITHOUT_CLASSIFICATION	enable/disable tree node
WITHOUT_CLASSIFICATION	enable/disable pluginString id = currentNode.getId();MainInterface.pluginManager.setEnabled(id, b.booleanValue());
WITHOUT_CLASSIFICATION	modal dialog
WITHOUT_CLASSIFICATION	model->view
WITHOUT_CLASSIFICATION	centerPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 5));
WITHOUT_CLASSIFICATION	setContentPane(mainPanel);
WITHOUT_CLASSIFICATION	int iconOffset = getHorizontalAlignment() + getIcon().getIconWidth() + 1;
WITHOUT_CLASSIFICATION	((DefaultTreeModel) model.getTree().getModel()).setAsksAllowsChildren(true);
WITHOUT_CLASSIFICATION	make "version" column fixed size
WITHOUT_CLASSIFICATION	make "enabled" column fixed size
WITHOUT_CLASSIFICATION	plugin wasn't correctly loaded
WITHOUT_CLASSIFICATION	this plugin doesn't define a category to which it belongs
WITHOUT_CLASSIFICATION	unknown category found -> just add this plugin to "Uncategorized"
WITHOUT_CLASSIFICATION	add node
WITHOUT_CLASSIFICATION	notify tree model
WITHOUT_CLASSIFICATION	make new node visible
WITHOUT_CLASSIFICATION	notify tree
WITHOUT_CLASSIFICATION	first column is a tree
WITHOUT_CLASSIFICATION	third column is a JCheckBox column
WITHOUT_CLASSIFICATION	checkbox pressed
WITHOUT_CLASSIFICATION	enabled/disabled checkbox must be editable
WITHOUT_CLASSIFICATION	tree must be editable, otherwise you can't collapse/expand tree nodes
WITHOUT_CLASSIFICATION	modal JDialog
WITHOUT_CLASSIFICATION	top panel
WITHOUT_CLASSIFICATION	topPanel.setLayout( );
WITHOUT_CLASSIFICATION	start search
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	centerpanel
WITHOUT_CLASSIFICATION	centerpanel
WITHOUT_CLASSIFICATION	topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 0));
WITHOUT_CLASSIFICATION	mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	get plugin directory
WITHOUT_CLASSIFICATION	delete plugin from disk
WITHOUT_CLASSIFICATION	remove plugin from view
WITHOUT_CLASSIFICATION	this is just a folder ->disable all actions
WITHOUT_CLASSIFICATION	if plugin has config extension point
WITHOUT_CLASSIFICATION	use user's config folder in his/her home-folder all plugins reside in "<config-folder>/plugins"
WITHOUT_CLASSIFICATION	extract plugin
WITHOUT_CLASSIFICATION	the plugin directory is "<config-folder>/plugins/<plugin-id>"
WITHOUT_CLASSIFICATION	the path to the plugin.xml descriptor file is: "<config-folder>/plugins/<plugin-id>/plugin.xml
WITHOUT_CLASSIFICATION	this node is category folder -> don't make it editable
WITHOUT_CLASSIFICATION	protected JButton defaultButton;
WITHOUT_CLASSIFICATION	top panel
WITHOUT_CLASSIFICATION	topPanel.setLayout( );
WITHOUT_CLASSIFICATION	topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 0));
WITHOUT_CLASSIFICATION	mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	add profile to profiles.xml
WITHOUT_CLASSIFICATION	add profile to profiles.xml
WITHOUT_CLASSIFICATION	add to listmodel
WITHOUT_CLASSIFICATION	add to listmodel
WITHOUT_CLASSIFICATION	rename profile in profiles.xml
WITHOUT_CLASSIFICATION	rename profile in profiles.xml
WITHOUT_CLASSIFICATION	modify listmodel
WITHOUT_CLASSIFICATION	modify listmodel
WITHOUT_CLASSIFICATION	defaultButton.setEnabled(enabled);
WITHOUT_CLASSIFICATION	user's can't edit default account
WITHOUT_CLASSIFICATION	protected JButton defaultButton;
WITHOUT_CLASSIFICATION	can't delete currently running profile
WITHOUT_CLASSIFICATION	delete directory recursivly
WITHOUT_CLASSIFICATION	delete all files
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	get current list selection
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getProfileForName(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getSelectedProfile()
WITHOUT_CLASSIFICATION	user's can't delete default account
WITHOUT_CLASSIFICATION	create directory, if it doesn't already exist
WITHOUT_CLASSIFICATION	load profiles.xml
WITHOUT_CLASSIFICATION	prompt user for profile
WITHOUT_CLASSIFICATION	use commandline-specified location
WITHOUT_CLASSIFICATION	try name first
WITHOUT_CLASSIFICATION	try directory
WITHOUT_CLASSIFICATION	create profile
WITHOUT_CLASSIFICATION	save to profiles.xml
WITHOUT_CLASSIFICATION	save to profiles.xml
WITHOUT_CLASSIFICATION	save to profiles.xml
WITHOUT_CLASSIFICATION	use preselected profile
WITHOUT_CLASSIFICATION	fall back to default profile
WITHOUT_CLASSIFICATION	show profile choosing dialog
WITHOUT_CLASSIFICATION	create profile config file
WITHOUT_CLASSIFICATION	load profile config file
WITHOUT_CLASSIFICATION	Is the location still existing?
WITHOUT_CLASSIFICATION	delete all directories
WITHOUT_CLASSIFICATION	remove profile xml-element
WITHOUT_CLASSIFICATION	do something with link
WITHOUT_CLASSIFICATION	setPreferredSize(list.getPreferredSize());
WITHOUT_CLASSIFICATION	private JLabel iconLabel = new JLabel();
WITHOUT_CLASSIFICATION	titleLabel.setBackground(UIManager.getColor("Label.background"));
WITHOUT_CLASSIFICATION	topPanel.add(iconLabel, BorderLayout.WEST);
WITHOUT_CLASSIFICATION	initialization
WITHOUT_CLASSIFICATION	controller
WITHOUT_CLASSIFICATION	link.setFont(link.getFont().deriveFont(Font.BOLD));
WITHOUT_CLASSIFICATION	if the collapsible is collapsed, we do not want its border to be painted.
WITHOUT_CLASSIFICATION	g.setColor(borderColor2); g.drawLine(x, y + height - 1, x + width, y + height - 1);
WITHOUT_CLASSIFICATION	if config-folder is really empty -> delete folder
WITHOUT_CLASSIFICATION	Border border = BorderFactory.createCompoundBorder(new ShadowBorder(),BorderFactory.createEmptyBorder(10, 10, 10,10)); ((JPanel) getContentPane()).setBorder(border);
WITHOUT_CLASSIFICATION	Border border = new CompoundBorder(BorderFactory.createEmptyBorder(2, 4, 2, 4), border1);
WITHOUT_CLASSIFICATION	iconLabel.setOpaque(true);
WITHOUT_CLASSIFICATION	top.setOpaque(true);
WITHOUT_CLASSIFICATION	popupMenu.setFocusable( false ); popupMenu.setRequestFocusEnabled(false);
WITHOUT_CLASSIFICATION	icon (we can't use the setIcon-method this time, as it relies on the border being set)
WITHOUT_CLASSIFICATION	popupMenu.getSelectionModel().clearSelection();
WITHOUT_CLASSIFICATION	popupMenu.getSelectionModel().setSelectedIndex(0);
WITHOUT_CLASSIFICATION	collapsible.getContentPane().setBackground(Color.WHITE);
WITHOUT_CLASSIFICATION	link.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	iconLabel.setBackground(titleBackground);
WITHOUT_CLASSIFICATION	private SearchResultView searchResultView;
WITHOUT_CLASSIFICATION	private StackedBox box;
WITHOUT_CLASSIFICATION	box = new StackedBox();
WITHOUT_CLASSIFICATION	topPanel.setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	createDefaultStackedBox();
WITHOUT_CLASSIFICATION	if in debug mode, register context debugger view
WITHOUT_CLASSIFICATION	search individual provider and individual criteria
WITHOUT_CLASSIFICATION	start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	search individual provider
WITHOUT_CLASSIFICATION	start a new search -> clear all previous search results
WITHOUT_CLASSIFICATION	box.setBackground(new Color(248, 248, 248)); JScrollPane pane = new JScrollPane(box); pane.setBorder(null);
WITHOUT_CLASSIFICATION	search across all providers
WITHOUT_CLASSIFICATION	search across all providers
WITHOUT_CLASSIFICATION	search across a few specific search criteria at once
WITHOUT_CLASSIFICATION	remove(topPanel);
WITHOUT_CLASSIFICATION	remove(topPanel);
WITHOUT_CLASSIFICATION	remove(topPanel);
WITHOUT_CLASSIFICATION	first, create bucket for each provider
WITHOUT_CLASSIFICATION	now search through all buckets
WITHOUT_CLASSIFICATION	defaultBox.removeAll();
WITHOUT_CLASSIFICATION	clear previous search results
WITHOUT_CLASSIFICATION	create new stacked box
WITHOUT_CLASSIFICATION	search all criteria in specific provider only
WITHOUT_CLASSIFICATION	search in specific criteria
WITHOUT_CLASSIFICATION	query with only a single criteria
WITHOUT_CLASSIFICATION	query only a single provider
WITHOUT_CLASSIFICATION	query all criteria of all providers
WITHOUT_CLASSIFICATION	repaint box
WITHOUT_CLASSIFICATION	add result panel as listener for new search results
WITHOUT_CLASSIFICATION	create visual container for result panel
WITHOUT_CLASSIFICATION	create visual container for result panel
WITHOUT_CLASSIFICATION	add to search panel
WITHOUT_CLASSIFICATION	add to search panel
WITHOUT_CLASSIFICATION	show search docking view
WITHOUT_CLASSIFICATION	show docking view
WITHOUT_CLASSIFICATION	execute background search
WITHOUT_CLASSIFICATION	addRightComponent(taskButton, 30);
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	init result view createContextStackedBox();
WITHOUT_CLASSIFICATION	skip if user didn't specify search term for this criteria
WITHOUT_CLASSIFICATION	execute search
WITHOUT_CLASSIFICATION	toolbar container
WITHOUT_CLASSIFICATION	user pressed "Search" button
WITHOUT_CLASSIFICATION	show search dialog
WITHOUT_CLASSIFICATION	on "RETURN" start seach
WITHOUT_CLASSIFICATION	to enable button again after search is finished
WITHOUT_CLASSIFICATION	skip "Search All"
WITHOUT_CLASSIFICATION	intersect this with the existing clip
WITHOUT_CLASSIFICATION	restore original clip
WITHOUT_CLASSIFICATION	make it translucent
WITHOUT_CLASSIFICATION	paint the text and icon
WITHOUT_CLASSIFICATION	builder.append(moreButton);
WITHOUT_CLASSIFICATION	builder.append(searchButton);
WITHOUT_CLASSIFICATION	searchInsideCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	paint outer border g2d.setPaint(OUTER);
WITHOUT_CLASSIFICATION	paint right outside border g2d.setPaint(p1);
WITHOUT_CLASSIFICATION	paint right inside border g2d.setPaint(p2);
WITHOUT_CLASSIFICATION	builder.append(contextButton); builder.append(providerComboBox);
WITHOUT_CLASSIFICATION	update popup menu based on searchterm
WITHOUT_CLASSIFICATION	create all individual search criteria for this provider
WITHOUT_CLASSIFICATION	create search history
WITHOUT_CLASSIFICATION	search is finished -> enable search button again
WITHOUT_CLASSIFICATION	do layout again
WITHOUT_CLASSIFICATION	private JButton taskButton;
WITHOUT_CLASSIFICATION	layoutComponents();
WITHOUT_CLASSIFICATION	update connection state
WITHOUT_CLASSIFICATION	init update timer
WITHOUT_CLASSIFICATION	updateTimer.start();
WITHOUT_CLASSIFICATION	The Stream finished before the header was completely read!
WITHOUT_CLASSIFICATION	update text and progress bar
WITHOUT_CLASSIFICATION	update text and progress bar
WITHOUT_CLASSIFICATION	remember last message
WITHOUT_CLASSIFICATION	immediately update text and progress bar updateGui();
WITHOUT_CLASSIFICATION	if only one task left
WITHOUT_CLASSIFICATION	stop update timer
WITHOUT_CLASSIFICATION	set text
WITHOUT_CLASSIFICATION	clear text with delay
WITHOUT_CLASSIFICATION	update timer event
WITHOUT_CLASSIFICATION	clear label
WITHOUT_CLASSIFICATION	stop clear timer
WITHOUT_CLASSIFICATION	return super.getListCellRendererComponent(arg0, arg1, arg2, arg3, arg4);
WITHOUT_CLASSIFICATION	disabled Kill button, because feature is not supported
WITHOUT_CLASSIFICATION	check if a single entry is selected
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	centerpanel
WITHOUT_CLASSIFICATION	get configuration
WITHOUT_CLASSIFICATION	fall-back
WITHOUT_CLASSIFICATION	create a panel with all 4 buttons of the window columns rows
WITHOUT_CLASSIFICATION	Component strut1 = Box.createRigidArea(new Dimension(30, 6)); gridBagLayout.setConstraints(strut1, c); eastPanel.add(strut1); gridBagLayout.setConstraints(killButton, c); eastPanel.add(killButton);
WITHOUT_CLASSIFICATION	force repaint
WITHOUT_CLASSIFICATION	fill list model with tags
WITHOUT_CLASSIFICATION	popup menu
WITHOUT_CLASSIFICATION	update tag list if mode changes
WITHOUT_CLASSIFICATION	descriptionLabel.setFont(descriptionLabel.getFont().deriveFont(Font.ITALIC));
WITHOUT_CLASSIFICATION	update menu if tags are changed
WITHOUT_CLASSIFICATION	fire callback to remove all tags from selected items
WITHOUT_CLASSIFICATION	don't want to have two separators
WITHOUT_CLASSIFICATION	add all existing tags to the menu
WITHOUT_CLASSIFICATION	mark tag, if the current selection is tagged with it
WITHOUT_CLASSIFICATION	listener updates menu in case the tags where changed
WITHOUT_CLASSIFICATION	get plugin-handler
WITHOUT_CLASSIFICATION	if no theme available -> set "Plastic" as default
WITHOUT_CLASSIFICATION	instanciate theme
WITHOUT_CLASSIFICATION	apply theme
WITHOUT_CLASSIFICATION	Gets the platform specific default theme. This is in all cases but MacOS X the Plastic theme. On MacOs X we use the System L&F.
WITHOUT_CLASSIFICATION	try the system aqua look and feel
WITHOUT_CLASSIFICATION	set the Quaqua Look and Feel in the UIManager
WITHOUT_CLASSIFICATION	set UI manager properties here that affect Quaqua
WITHOUT_CLASSIFICATION	UIManager.setLookAndFeel(lafName);
WITHOUT_CLASSIFICATION	setFloatable(true);
WITHOUT_CLASSIFICATION	no text!
WITHOUT_CLASSIFICATION	apply transparent icon
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.lang.Thread#run()
WITHOUT_CLASSIFICATION	replace with "MyListCellRenderer" for simple one-line renderer replace with "MyComplexListCellRenderer" for an additional description line
WITHOUT_CLASSIFICATION	JavaHelp support
WITHOUT_CLASSIFICATION	toolbar buttons always need an icon
WITHOUT_CLASSIFICATION	apply transparent icon button.setDisabledIcon(ImageUtil.createTransparentIcon(icon));
WITHOUT_CLASSIFICATION	deprecated config-file support
WITHOUT_CLASSIFICATION	deprecated config-file support -> skip creation of "Cancel" button
WITHOUT_CLASSIFICATION	tray icon not supported on Mac
WITHOUT_CLASSIFICATION	titleLabel.setAlignmentY(0);
WITHOUT_CLASSIFICATION	IServiceManager.getInstance().createService("");
WITHOUT_CLASSIFICATION	found email address
WITHOUT_CLASSIFICATION	openWithBrowser(getLink());
WITHOUT_CLASSIFICATION	Font font = MainInterface.columbaTheme.getControlTextFont();
WITHOUT_CLASSIFICATION	does not occur
WITHOUT_CLASSIFICATION	50k
WITHOUT_CLASSIFICATION	just the animation, if there are more than zero workers running
WITHOUT_CLASSIFICATION	columns rows
WITHOUT_CLASSIFICATION	if some action was performed
WITHOUT_CLASSIFICATION	setup the finder
WITHOUT_CLASSIFICATION	find action performed
WITHOUT_CLASSIFICATION	mark found pattern
WITHOUT_CLASSIFICATION	text.grabFocus();
WITHOUT_CLASSIFICATION	delete marks
WITHOUT_CLASSIFICATION	replace action performed
WITHOUT_CLASSIFICATION	grant "all-permissions"
WITHOUT_CLASSIFICATION	columns rows
WITHOUT_CLASSIFICATION	if some action was performed
WITHOUT_CLASSIFICATION	create a panel with a border and 3 options columns rows
WITHOUT_CLASSIFICATION	create a panel with a border and 3 options columns rows
WITHOUT_CLASSIFICATION	create a panel with all 4 buttons of the window columns rows
WITHOUT_CLASSIFICATION	text.grabFocus();
WITHOUT_CLASSIFICATION	text.grabFocus();
WITHOUT_CLASSIFICATION	delete marks
WITHOUT_CLASSIFICATION	get text where to find pattern
WITHOUT_CLASSIFICATION	replaceall action performed
WITHOUT_CLASSIFICATION	to mark a text in the JTextPane
WITHOUT_CLASSIFICATION	register as configuration change listener
WITHOUT_CLASSIFICATION	patch submitted by forum user Turbo Chen FIXED: user wasn't able to enter chinese text in Composer Subject textfield
WITHOUT_CLASSIFICATION	we got this from headerfieldtree
WITHOUT_CLASSIFICATION	private JTextPane textpane;
WITHOUT_CLASSIFICATION	list[2].setHorizontalTextPosition( JLabel.LEADING );
WITHOUT_CLASSIFICATION	get position of the pattern in the text
WITHOUT_CLASSIFICATION	mark found pattern text.grabFocus();
WITHOUT_CLASSIFICATION	find pattern
WITHOUT_CLASSIFICATION	delete marks (unselect)
WITHOUT_CLASSIFICATION	name of helpset resource
WITHOUT_CLASSIFICATION	could not find it!
WITHOUT_CLASSIFICATION	maybe based on HS?
WITHOUT_CLASSIFICATION	don't instantiate this class
WITHOUT_CLASSIFICATION	Open the ZIP file
WITHOUT_CLASSIFICATION	Open the ZIP file
WITHOUT_CLASSIFICATION	Get the first entry
WITHOUT_CLASSIFICATION	Get the first entry
WITHOUT_CLASSIFICATION	Open the output file
WITHOUT_CLASSIFICATION	Transfer bytes from the ZIP file to the output file
WITHOUT_CLASSIFICATION	Close the stream
WITHOUT_CLASSIFICATION	Close the stream
WITHOUT_CLASSIFICATION	Close the stream
WITHOUT_CLASSIFICATION	don't instantiate this
WITHOUT_CLASSIFICATION	ensureDirectory
WITHOUT_CLASSIFICATION	saveStringInFile
WITHOUT_CLASSIFICATION	shutdown Columba
WITHOUT_CLASSIFICATION	saveStringInFile
WITHOUT_CLASSIFICATION	JMenu options = (JMenu) menuBar.add(new JMenu("Options")); options.setMnemonic('O');
WITHOUT_CLASSIFICATION	deleteDirectory
WITHOUT_CLASSIFICATION	emptyDirectory
WITHOUT_CLASSIFICATION	getResourceStream
WITHOUT_CLASSIFICATION	throws java.io.IOException
WITHOUT_CLASSIFICATION	url = ClassLoader.getSystemResource(path);
WITHOUT_CLASSIFICATION	getResourceURL
WITHOUT_CLASSIFICATION	setResourceRoot
WITHOUT_CLASSIFICATION	copyFile
WITHOUT_CLASSIFICATION	attempt
WITHOUT_CLASSIFICATION	copyResource
WITHOUT_CLASSIFICATION	Byte
WITHOUT_CLASSIFICATION	try to restore from previous session
WITHOUT_CLASSIFICATION	Never mind
WITHOUT_CLASSIFICATION	Try again after shutdown
WITHOUT_CLASSIFICATION	ignore this yet
WITHOUT_CLASSIFICATION	do nothing here
WITHOUT_CLASSIFICATION	make sure file is deleted automatically when closing VM
WITHOUT_CLASSIFICATION	add a new inputstream to read from
WITHOUT_CLASSIFICATION	only if tempfile was corrupted
WITHOUT_CLASSIFICATION	Delete the tempfile immedietly
WITHOUT_CLASSIFICATION	init console handler
WITHOUT_CLASSIFICATION	create logging file in "<users config-folder>/log"
WITHOUT_CLASSIFICATION	Setup file logging
WITHOUT_CLASSIFICATION	don't use standard XML formatting
WITHOUT_CLASSIFICATION	create new client and try to connect to server
WITHOUT_CLASSIFICATION	no server running, start our own
WITHOUT_CLASSIFICATION	display error message
WITHOUT_CLASSIFICATION	prompt user for profile
WITHOUT_CLASSIFICATION	set global class loader to null
WITHOUT_CLASSIFICATION	force object finalization
WITHOUT_CLASSIFICATION	run garbage collector
WITHOUT_CLASSIFICATION	initialize global class loader
WITHOUT_CLASSIFICATION	use global class loader to bootstrap Columba
WITHOUT_CLASSIFICATION	do nothing here, just continue
WITHOUT_CLASSIFICATION	create random port number within range
WITHOUT_CLASSIFICATION	store port number in file
WITHOUT_CLASSIFICATION	port is in use, try next
WITHOUT_CLASSIFICATION	only accept client from local machine
WITHOUT_CLASSIFICATION	do something with the arguments..
WITHOUT_CLASSIFICATION	through reflection
WITHOUT_CLASSIFICATION	memorize all URLs
WITHOUT_CLASSIFICATION	initialize configuration with selected profile
WITHOUT_CLASSIFICATION	if user doesn't overwrite logger settings with commandline arguments just initialize default logging Logging.createDefaultHandler();
WITHOUT_CLASSIFICATION	enable debugging of repaint manager to track down swing gui access from outside the awt-event dispatcher thread
WITHOUT_CLASSIFICATION	use heavy-weight popups to ensure they are always on top
WITHOUT_CLASSIFICATION	keep track of active windows (used by dialogs which don't have a direct parent)
WITHOUT_CLASSIFICATION	show splash screen
WITHOUT_CLASSIFICATION	register protocol handler
WITHOUT_CLASSIFICATION	load user-customised language pack
WITHOUT_CLASSIFICATION	init all components
WITHOUT_CLASSIFICATION	initialize platform-dependant services
WITHOUT_CLASSIFICATION	init font configuration
WITHOUT_CLASSIFICATION	set application wide font
WITHOUT_CLASSIFICATION	handle the commandline arguments of the modules
WITHOUT_CLASSIFICATION	now load all available plugins PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	restore frames of last session
WITHOUT_CLASSIFICATION	initialize services before dismissing the splash screen
WITHOUT_CLASSIFICATION	register shutdown manager
WITHOUT_CLASSIFICATION	initialize tagging
WITHOUT_CLASSIFICATION	register for cleanup
WITHOUT_CLASSIFICATION	hide splash screen
WITHOUT_CLASSIFICATION	$NON-NLS-2$
WITHOUT_CLASSIFICATION	everything is up and running, start services
WITHOUT_CLASSIFICATION	first load all extension handlers
WITHOUT_CLASSIFICATION	load core extension handlers
WITHOUT_CLASSIFICATION	load addressbook extension handler
WITHOUT_CLASSIFICATION	load mail extension handler
WITHOUT_CLASSIFICATION	load all internal core plugins
WITHOUT_CLASSIFICATION	load all internal addressbook plugins
WITHOUT_CLASSIFICATION	load all internal mail plugins
WITHOUT_CLASSIFICATION	load all internal calendar plugins
WITHOUT_CLASSIFICATION	now load all external plugins residing in /plugins directory
WITHOUT_CLASSIFICATION	This is necessary because getArgList returns the path in square brackets
WITHOUT_CLASSIFICATION	Do not exit
WITHOUT_CLASSIFICATION	Platform maintainers: add your platform here
WITHOUT_CLASSIFICATION	Setup the path Platform maintainers: add your platform here see also initPlatformServices() method
WITHOUT_CLASSIFICATION	Find all native jars
WITHOUT_CLASSIFICATION	Get the current classpath from the sysloader through reflection
WITHOUT_CLASSIFICATION	add all native jars
WITHOUT_CLASSIFICATION	add the old classpath
WITHOUT_CLASSIFICATION	replace with the modified classpath
WITHOUT_CLASSIFICATION	Initialise system dependent stuff
WITHOUT_CLASSIFICATION	switch for restoring last session of Columba. if true, restores all windows.
WITHOUT_CLASSIFICATION	automatically generate the help statement
WITHOUT_CLASSIFICATION	remove directories which don't contain a plugin
WITHOUT_CLASSIFICATION	protected static ClassLoader loader = ClassLoader.getSystemClassLoader();
WITHOUT_CLASSIFICATION	couldn't find correct constructor
WITHOUT_CLASSIFICATION	couldn't find correct constructor
WITHOUT_CLASSIFICATION	we can't just load the first constructor -> go find the correct constructor -> based on the arguments
WITHOUT_CLASSIFICATION	find all possible plugin directories
WITHOUT_CLASSIFICATION	parse "/plugin.xml" file
WITHOUT_CLASSIFICATION	cancel
WITHOUT_CLASSIFICATION	register all extensions
WITHOUT_CLASSIFICATION	register all extensions
WITHOUT_CLASSIFICATION	loop through all extensions this plugin uses -> search the corresponding extension handler -> register the extension at the extension handler
WITHOUT_CLASSIFICATION	we have a plugin-handler for this kind of extension
WITHOUT_CLASSIFICATION	if extension wasn't already registered
WITHOUT_CLASSIFICATION	if no plugin directory exists -> return
WITHOUT_CLASSIFICATION	if no plugin directory exists -> return
WITHOUT_CLASSIFICATION	try to load all plugins
WITHOUT_CLASSIFICATION	skip if it doesn't exist
WITHOUT_CLASSIFICATION	skip if it doesn't exist
WITHOUT_CLASSIFICATION	try all possible version of readme files...
WITHOUT_CLASSIFICATION	retrieve inputstream from resource
WITHOUT_CLASSIFICATION	parse plugin metadata
WITHOUT_CLASSIFICATION	remember plugin metadata pluginMap.put(id, pluginMetadata);
WITHOUT_CLASSIFICATION	try to load extensin handlers of all plugins
WITHOUT_CLASSIFICATION	this constructor has the correct number of arguments
WITHOUT_CLASSIFICATION	skip non-matching elements
WITHOUT_CLASSIFICATION	loop through all extensions this plugin uses
WITHOUT_CLASSIFICATION	skip if no <extensionlist> element found
WITHOUT_CLASSIFICATION	skip if no <extension> element found
WITHOUT_CLASSIFICATION	retrieve JDom Document from inputstream
WITHOUT_CLASSIFICATION	if external plugin, we need the directory of it
WITHOUT_CLASSIFICATION	if available, load cached instance
WITHOUT_CLASSIFICATION	couldn't find correct constructor
WITHOUT_CLASSIFICATION	ok, we found a matching constructor -> create correct list of arguments
WITHOUT_CLASSIFICATION	use default Java classlodaer
WITHOUT_CLASSIFICATION	external plugin
WITHOUT_CLASSIFICATION	just in case that someone who developers on a plugin adds the plugin files to his classpath, we try to load them with the default classloader
WITHOUT_CLASSIFICATION	use external Java URL classloader
WITHOUT_CLASSIFICATION	remember instance
WITHOUT_CLASSIFICATION	disable extension
WITHOUT_CLASSIFICATION	disable extension
WITHOUT_CLASSIFICATION	all Java plugins package their class-files in "plugin.jar"
WITHOUT_CLASSIFICATION	append URLs to global classloader
WITHOUT_CLASSIFICATION	plugin = instanciateJavaClass(className, arguments);
WITHOUT_CLASSIFICATION	create new class loader using the global class loader as parent
WITHOUT_CLASSIFICATION	use our global class loader
WITHOUT_CLASSIFICATION	plugin-directory
WITHOUT_CLASSIFICATION	jar-file found
WITHOUT_CLASSIFICATION	get plugin id
WITHOUT_CLASSIFICATION	disable plugin
WITHOUT_CLASSIFICATION	By using an instance of SyncHTMLEditorKit, the html should load synchroniously - so everything is loaded before printing starts
WITHOUT_CLASSIFICATION	reset starting position in y-direction
WITHOUT_CLASSIFICATION	20030609, karlpeder Introduced scaling
WITHOUT_CLASSIFICATION	get origin & size information (height as "total" height minus current pos.)
WITHOUT_CLASSIFICATION	set size of mPane according to the available width and fetch root view
WITHOUT_CLASSIFICATION	scale the graphics
WITHOUT_CLASSIFICATION	set clipping for the graphics object
WITHOUT_CLASSIFICATION	translate g to line up with origin of print area (trans 1)
WITHOUT_CLASSIFICATION	set allocation (defines print area together with the clipping and translation made above), and print...
WITHOUT_CLASSIFICATION	translate graphics object back to original position and reset clip and scaling
WITHOUT_CLASSIFICATION	child views exist - operate recursively on these
WITHOUT_CLASSIFICATION	handle child view by recursive call
WITHOUT_CLASSIFICATION	no childs - we have a leaf view (i.e. with contents)
WITHOUT_CLASSIFICATION	view starts on page - print it
WITHOUT_CLASSIFICATION	resize jTextPane component to calculate height and get it
WITHOUT_CLASSIFICATION	correct for starting position if printing should not start at the top
WITHOUT_CLASSIFICATION	calculate size and return it
WITHOUT_CLASSIFICATION	width unchanged
WITHOUT_CLASSIFICATION	height of content + top margin + bottom margin height corrected for scaling
WITHOUT_CLASSIFICATION	ensure contents is layed out properly
WITHOUT_CLASSIFICATION	calculate scaling and return it
WITHOUT_CLASSIFICATION	do not scale up, i.e. no scale factor above 1.0
WITHOUT_CLASSIFICATION	create remainder
WITHOUT_CLASSIFICATION	modify "this" to start where remainder ends
WITHOUT_CLASSIFICATION	this happends if there's nothing left for the next page
WITHOUT_CLASSIFICATION	return (possibly) updated value
WITHOUT_CLASSIFICATION	define allocation rectangle (startY is used to compensate for different start point if printing shall not start from the top)
WITHOUT_CLASSIFICATION	set initial value for height where this print object should be broken in points, without scale
WITHOUT_CLASSIFICATION	calculate break height for child, and use updated value in the further processing
WITHOUT_CLASSIFICATION	view starts on page and exceeds it
WITHOUT_CLASSIFICATION	unchanged, i.e. no breaks before this view
WITHOUT_CLASSIFICATION	view can be broken
WITHOUT_CLASSIFICATION	break before start of view
WITHOUT_CLASSIFICATION	unchanged
WITHOUT_CLASSIFICATION	unchanged
WITHOUT_CLASSIFICATION	Methods called by the Variable parsers
WITHOUT_CLASSIFICATION	For getHeight() to return the right Value
WITHOUT_CLASSIFICATION	SizePolicy
WITHOUT_CLASSIFICATION	Margins
WITHOUT_CLASSIFICATION	Orientation
WITHOUT_CLASSIFICATION	ensure that the text does not start with a newline
WITHOUT_CLASSIFICATION	insert space btw. double newlines
WITHOUT_CLASSIFICATION	really delete file
WITHOUT_CLASSIFICATION	this is ok
WITHOUT_CLASSIFICATION	does not occur
WITHOUT_CLASSIFICATION	using default english language, shipped with Columba
WITHOUT_CLASSIFICATION	use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	Find out if we already loaded the needed ResourceBundle object in the hashtable.
WITHOUT_CLASSIFICATION	should not occur, otherwise the static initializer should have thrown a RuntimeException
WITHOUT_CLASSIFICATION	retrieve new bundle use ResourceBundle's internal classloader
WITHOUT_CLASSIFICATION	overwrite old bundle
WITHOUT_CLASSIFICATION	check if script directory exists
WITHOUT_CLASSIFICATION	initialize file observer thread with a reference to our beanshellScripts map
WITHOUT_CLASSIFICATION	nothing to dispose, yet...
WITHOUT_CLASSIFICATION	start pooling thread
WITHOUT_CLASSIFICATION	in case of a stop-start
WITHOUT_CLASSIFICATION	check current file list for changes
WITHOUT_CLASSIFICATION	it isn't possible to undo whatever the script did
WITHOUT_CLASSIFICATION	check for new files in the scripts directory
WITHOUT_CLASSIFICATION	seconds
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	scripts should reside in <config-folder>/scripts/ directory
WITHOUT_CLASSIFICATION	scripting.xml configuration file should reside in <config-folder>
WITHOUT_CLASSIFICATION	oh oh! casting to a specific implementation here ;-)
WITHOUT_CLASSIFICATION	it's the script responsability to define the "metadata" by invoking .setName(), .setAuthor() and .setDescription()
WITHOUT_CLASSIFICATION	find out if the interpreter is already registered
WITHOUT_CLASSIFICATION	if so, remove it
WITHOUT_CLASSIFICATION	any errors that may occur cannot stop other scripts from running
WITHOUT_CLASSIFICATION	retrieving the instance for the first time creates an instance in ExtensionHandler subclass instance reference is kept in hashmap automatically
WITHOUT_CLASSIFICATION	This method is called just after a new entry has been added
WITHOUT_CLASSIFICATION	ensure map can be used by multiple threads
WITHOUT_CLASSIFICATION	ensure map can be used by multiple threads
WITHOUT_CLASSIFICATION	temporary hashtable to check for duplicated
WITHOUT_CLASSIFICATION	if result is already in hashtable remove from result set
WITHOUT_CLASSIFICATION	memorize location URI
WITHOUT_CLASSIFICATION	fire up search command
WITHOUT_CLASSIFICATION	fire up search command
WITHOUT_CLASSIFICATION	fire up search command
WITHOUT_CLASSIFICATION	first, create bucket for each provider
WITHOUT_CLASSIFICATION	now search through all buckets
WITHOUT_CLASSIFICATION	execute search
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	execute search
WITHOUT_CLASSIFICATION	query using all criteria
WITHOUT_CLASSIFICATION	query using all criteria
WITHOUT_CLASSIFICATION	notify all listeners that new search results arrived
WITHOUT_CLASSIFICATION	notify all listeners that new search results arrived
WITHOUT_CLASSIFICATION	ensure this is called in the EDT
WITHOUT_CLASSIFICATION	ensure this is called in the EDT
WITHOUT_CLASSIFICATION	notify that search is finished
WITHOUT_CLASSIFICATION	query provider
WITHOUT_CLASSIFICATION	retrieve total result count
WITHOUT_CLASSIFICATION	init Map
WITHOUT_CLASSIFICATION	wait for 2 seconds until the dialog is openened
WITHOUT_CLASSIFICATION	ask user to kill pending running commands or wait
WITHOUT_CLASSIFICATION	create tag vector
WITHOUT_CLASSIFICATION	ensure root exists
WITHOUT_CLASSIFICATION	Do not allow an empty name
WITHOUT_CLASSIFICATION	create uuid
WITHOUT_CLASSIFICATION	very unlikely to happen
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	don't wait, just continue shutdown procedure, commands will be killed
WITHOUT_CLASSIFICATION	we don't need to check for running commands here because there aren't any, shutdown plugins only use this thread
WITHOUT_CLASSIFICATION	load xml configuration -> will be automatically saved every couple of minutes and on shutdown
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	this will overwrite the "old" tag with same id
WITHOUT_CLASSIFICATION	private Hashtable properties = new Hashtable();
WITHOUT_CLASSIFICATION	intern variable which is used for text replace purposes
WITHOUT_CLASSIFICATION	constructor for the class
WITHOUT_CLASSIFICATION	some other version of the constructor
WITHOUT_CLASSIFICATION	need to be called before search/replace to set up all the states we need
WITHOUT_CLASSIFICATION	find backwards
WITHOUT_CLASSIFICATION	match whole word
WITHOUT_CLASSIFICATION	create pattern
WITHOUT_CLASSIFICATION	need to be called after search/replace to make some changes in the states
WITHOUT_CLASSIFICATION	lastreplaceposition = lastfoundposition;
WITHOUT_CLASSIFICATION	lastreplaceposition = lastfoundposition; + replaceWith.length();
WITHOUT_CLASSIFICATION	the implementation of the search next function. It returns always the position of the NEXT found word.
WITHOUT_CLASSIFICATION	end of text was reached -> begin at the start
WITHOUT_CLASSIFICATION	the implementation of the replace function. It returns always the position of the NEXT replaced word.
WITHOUT_CLASSIFICATION	the implementation of the replace all function.
WITHOUT_CLASSIFICATION	$NON-NLS-2$
WITHOUT_CLASSIFICATION	optional String-based attribute
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	text which we are looking for, or want to replace replaced text which we want to have text where we make a search search/replace is case sensitive search/replace matches whole words only search/replace works backwards on the text
WITHOUT_CLASSIFICATION	private static final String[] SALUTATIONS = { "Mr.", "Mrs.", "Ms.", "Dr.", "Congressman", "Congresswoman", "Senator", "President", "Chancellor", "Minister", "Prime Minister" };
WITHOUT_CLASSIFICATION	private static final String[] TITLES = { "PhD", "Ph.D.", "PhD.", "Esq.", "Esquire" };
WITHOUT_CLASSIFICATION	Initialize salutation strings
WITHOUT_CLASSIFICATION	Initialize title strings
WITHOUT_CLASSIFICATION	Treat a null name input string the same as an empty input string
WITHOUT_CLASSIFICATION	Get the salutation if one is specified
WITHOUT_CLASSIFICATION	Remove the salutation
WITHOUT_CLASSIFICATION	Get the title if one is specified
WITHOUT_CLASSIFICATION	Remove the title and the preceding comma
WITHOUT_CLASSIFICATION	Assume last name only
WITHOUT_CLASSIFICATION	More than 3 tokens. Assume the last token is the last name and take the rest of the names as the first name. This handles names like this: "Sue & Gene Stark".
WITHOUT_CLASSIFICATION	abort if not in debugging mode
WITHOUT_CLASSIFICATION	abort if not in debugging mode
WITHOUT_CLASSIFICATION	current time
WITHOUT_CLASSIFICATION	store profiling point data
WITHOUT_CLASSIFICATION	this profiling point is parent of the next one
WITHOUT_CLASSIFICATION	store id
WITHOUT_CLASSIFICATION	print all collected profile data
WITHOUT_CLASSIFICATION	current path is the parent of the current element
WITHOUT_CLASSIFICATION	Use static variables so the date is only updated once during runtime
WITHOUT_CLASSIFICATION	Top level element (Used to hold everything else)
WITHOUT_CLASSIFICATION	The current element you are working on
WITHOUT_CLASSIFICATION	For writing out the data Indent for each level
WITHOUT_CLASSIFICATION	Maximum data to put on a "one liner"
WITHOUT_CLASSIFICATION	Default constructor public XmlIO() { }
WITHOUT_CLASSIFICATION	setup and load constructor public XmlIO(String FilePath) { currentElement = null; }
WITHOUT_CLASSIFICATION	setup and load constructor
WITHOUT_CLASSIFICATION	this.file = F;
WITHOUT_CLASSIFICATION	Load a file. This is what starts things off.
WITHOUT_CLASSIFICATION	Create the XML reader... xr = XMLReaderFactory.createXMLReader();
WITHOUT_CLASSIFICATION	Set the ContentHandler... xr.setContentHandler( this );
WITHOUT_CLASSIFICATION	Error
WITHOUT_CLASSIFICATION	Error
WITHOUT_CLASSIFICATION	XmlElement.printNode( getRoot(), "");
WITHOUT_CLASSIFICATION	XmlElement.printNode( getRoot(), "");
WITHOUT_CLASSIFICATION	element name
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	nothing to do
WITHOUT_CLASSIFICATION	namespaceAware = false
WITHOUT_CLASSIFICATION	Attr name
WITHOUT_CLASSIFICATION	accumulate the contents into a buffer.
WITHOUT_CLASSIFICATION	Writer interface
WITHOUT_CLASSIFICATION	End class XmlIO
WITHOUT_CLASSIFICATION	Important!! -> replacing this character must happen first
WITHOUT_CLASSIFICATION	20030621, karlpeder
WITHOUT_CLASSIFICATION	builder.setValidation(true);
WITHOUT_CLASSIFICATION	store.shutdown();
WITHOUT_CLASSIFICATION	empty the worker list until one is left
WITHOUT_CLASSIFICATION	Test for int hashCode().
WITHOUT_CLASSIFICATION	Test for boolean equals(Object)
WITHOUT_CLASSIFICATION	Test for clone()
WITHOUT_CLASSIFICATION	top-level structure
WITHOUT_CLASSIFICATION	top-level structure
WITHOUT_CLASSIFICATION	mandatory String-based attribute
WITHOUT_CLASSIFICATION	mandatory String-based attribute
WITHOUT_CLASSIFICATION	mandatory String-based attribute
WITHOUT_CLASSIFICATION	optional String-based attribute
WITHOUT_CLASSIFICATION	optional String-based attribute
WITHOUT_CLASSIFICATION	optional String-based attribute
WITHOUT_CLASSIFICATION	should throw exception as attribute type "name2" is not defined in type structure
WITHOUT_CLASSIFICATION	user struct
WITHOUT_CLASSIFICATION	identity definition
WITHOUT_CLASSIFICATION	MULTIPLICITY.ZERO_TO_ONE is default
WITHOUT_CLASSIFICATION	date time timezone definition
WITHOUT_CLASSIFICATION	date range (start time, end time) definition
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	document definition
WITHOUT_CLASSIFICATION	locale definition
WITHOUT_CLASSIFICATION	list of attachments
WITHOUT_CLASSIFICATION	single attachment
WITHOUT_CLASSIFICATION	message
WITHOUT_CLASSIFICATION	single sender - re-use identity type
WITHOUT_CLASSIFICATION	re-use identity type for recipient list
WITHOUT_CLASSIFICATION	message body
WITHOUT_CLASSIFICATION	message contains list of attachments
WITHOUT_CLASSIFICATION	find all possible plugin directories
WITHOUT_CLASSIFICATION	Test for clone()
WITHOUT_CLASSIFICATION	user struct
WITHOUT_CLASSIFICATION	(.:.?)" "something" with : (could be .? but then the Pattern would match whitespace) ( (&gt;). a html-Encoded > followed by anything | or(["+punc+"])" any Punctuation (<br>)? 0 or 1 trailing <br> )$ end of String
WITHOUT_CLASSIFICATION	create test userlist data
WITHOUT_CLASSIFICATION	MULTIPLICITY.ONE is default
WITHOUT_CLASSIFICATION	Test for getColor()
WITHOUT_CLASSIFICATION	create config-folder
WITHOUT_CLASSIFICATION	create config-folder
WITHOUT_CLASSIFICATION	remove configuration directory
WITHOUT_CLASSIFICATION	Test method for 'org.columba.core.tagging.TagManager.addTag(String)'
WITHOUT_CLASSIFICATION	Test method for 'org.columba.core.tagging.TagManager.getAllTags()'
WITHOUT_CLASSIFICATION	Test method for 'org.columba.core.tagging.TagManager.getTag(String)'
WITHOUT_CLASSIFICATION	getByName
WITHOUT_CLASSIFICATION	Test method for 'org.columba.core.tagging.TagManager.removeTag(String)'
WITHOUT_CLASSIFICATION	test if the size of self substracted list is 0
WITHOUT_CLASSIFICATION	tests, if the list substracted with an empty list is equal to itself
WITHOUT_CLASSIFICATION	tests, if the listPart substracted
WITHOUT_CLASSIFICATION	Setup the XML that is to be written
WITHOUT_CLASSIFICATION	Test for boolean not equals(Object)
WITHOUT_CLASSIFICATION	Test for hashCode()
WITHOUT_CLASSIFICATION	Test for XmlElement(String,String)
WITHOUT_CLASSIFICATION	AbstractFolderOptionsPlugin getPlugin(String name);
WITHOUT_CLASSIFICATION	TableView getView();
WITHOUT_CLASSIFICATION	MessageNode getRootNode();
WITHOUT_CLASSIFICATION	MessageNode getMessageNode(Object uid);
WITHOUT_CLASSIFICATION	get configuration
WITHOUT_CLASSIFICATION	for example: "Re: this is a subject"
WITHOUT_CLASSIFICATION	int getRow(MessageNode node);
WITHOUT_CLASSIFICATION	MessageNode getMessageNodeAtRow(int index);
WITHOUT_CLASSIFICATION	if subject doesn't start already with "Re:" prepend it
WITHOUT_CLASSIFICATION	for example: "[columba-users]Re: this is a subject"
WITHOUT_CLASSIFICATION	if subject doesn't start already with "Fwd:" prepend it
WITHOUT_CLASSIFICATION	create To headerfield
WITHOUT_CLASSIFICATION	Reply-To headerfield isn't specified, try to use From instead
WITHOUT_CLASSIFICATION	Quote according model type (text/html)
WITHOUT_CLASSIFICATION	if Reply-To headerfield isn't specified, try to use from
WITHOUT_CLASSIFICATION	example: X-BeenThere: columba-devel@lists.sourceforge.net
WITHOUT_CLASSIFICATION	plain text
WITHOUT_CLASSIFICATION	20040229, karlpeder Use default account as fall back
WITHOUT_CLASSIFICATION	RFC822 - Header
WITHOUT_CLASSIFICATION	create html element, if it doesn't exist
WITHOUT_CLASSIFICATION	get enable attribute
WITHOUT_CLASSIFICATION	reply-to
WITHOUT_CLASSIFICATION	date
WITHOUT_CLASSIFICATION	attachments
WITHOUT_CLASSIFICATION	copy flags
WITHOUT_CLASSIFICATION	compose text part
WITHOUT_CLASSIFICATION	compose html part
WITHOUT_CLASSIFICATION	merge mimeparts and return
WITHOUT_CLASSIFICATION	Init Mime-Header with Default-Values (text/html)
WITHOUT_CLASSIFICATION	Set Default Charset or selected
WITHOUT_CLASSIFICATION	insert link tags for urls and email addresses
WITHOUT_CLASSIFICATION	for text comparisons
WITHOUT_CLASSIFICATION	insert document type decl.
WITHOUT_CLASSIFICATION	insert head section with charset def.
WITHOUT_CLASSIFICATION	add <head> section
WITHOUT_CLASSIFICATION	replace <head> section
WITHOUT_CLASSIFICATION	add rest of body until start of </body>
WITHOUT_CLASSIFICATION	add signature if defined
WITHOUT_CLASSIFICATION	add the rest of the original body - and transfer back to body var.
WITHOUT_CLASSIFICATION	add encoding if necessary
WITHOUT_CLASSIFICATION	check if the charset is US-ASCII then there is something wrong -> switch to UTF-8 and write to log-file
WITHOUT_CLASSIFICATION	to allow empty messages
WITHOUT_CLASSIFICATION	to allow empty messages
WITHOUT_CLASSIFICATION	Init Mime-Header with Default-Values (text/plain)
WITHOUT_CLASSIFICATION	20030918, karlpeder Tags are stripped if the model contains a html message (since we are composing a plain text message here.
WITHOUT_CLASSIFICATION	write charset to header
WITHOUT_CLASSIFICATION	List mimeParts = model.getAttachments();
WITHOUT_CLASSIFICATION	20030919, karlpeder Added handling of html messages
WITHOUT_CLASSIFICATION	compose message body as multipart/alternative
WITHOUT_CLASSIFICATION	send as multipart/alternative
WITHOUT_CLASSIFICATION	send as text/html
WITHOUT_CLASSIFICATION	compose message body as text/plain
WITHOUT_CLASSIFICATION	Create Multipart/Mixed if necessary
WITHOUT_CLASSIFICATION	if the id not currently set (for example in the security panel in the account-config
WITHOUT_CLASSIFICATION	Set id on from address
WITHOUT_CLASSIFICATION	model -> view
WITHOUT_CLASSIFICATION	size
WITHOUT_CLASSIFICATION	Do not access the inputstream after this line!
WITHOUT_CLASSIFICATION	Add supported account formats here
WITHOUT_CLASSIFICATION	private boolean pop3;
WITHOUT_CLASSIFICATION	return default-account ImapItem instead
WITHOUT_CLASSIFICATION	return default-account ImapItem instead
WITHOUT_CLASSIFICATION	create if not available
WITHOUT_CLASSIFICATION	return default-account SpamItem instead
WITHOUT_CLASSIFICATION	return default-account identityItem instead
WITHOUT_CLASSIFICATION	same object
WITHOUT_CLASSIFICATION	The fields on this object is in fact represented in the xml structure found as getRoot(). Therefore super.equals() should do the job
WITHOUT_CLASSIFICATION	The fields on this object is in fact represented in the xml structure found as getRoot(). Therefore super.hashCode() should do the job.
WITHOUT_CLASSIFICATION	XmlElement.printNode(e,"");
WITHOUT_CLASSIFICATION	search for SecurityItem based on To headerfield
WITHOUT_CLASSIFICATION	found match
WITHOUT_CLASSIFICATION	path to account templates for POP3/IMAP
WITHOUT_CLASSIFICATION	load xml document
WITHOUT_CLASSIFICATION	get pop3 or imap account xml node
WITHOUT_CLASSIFICATION	Default signature
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	fall back to first account as default
WITHOUT_CLASSIFICATION	private File file;
WITHOUT_CLASSIFICATION	example: "columba:org.columba.mail/<folder-id>/<message-id>"
WITHOUT_CLASSIFICATION	found mail component frame
WITHOUT_CLASSIFICATION	composer_options.xml: <options> <gui> <view id="0"> <window maximized="false" height="700" width="600" y="0" x="0" /> <toolbars infopanel="true" main="true" /> <splitpanes header="200" attachment="100" main="200" /> <addressbook enabled="false" /> </view> </gui> <spellcheck executable="/usr/bin/aspell" /> <external_editor enabled="false" /> <forward style="attachment" /> <subject ask_if_empty="true" /> <html send_as_multipart="true" enable="false" /> </options>
WITHOUT_CLASSIFICATION	apply initial version information
WITHOUT_CLASSIFICATION	add initial messageframe treenode
WITHOUT_CLASSIFICATION	use global table options
WITHOUT_CLASSIFICATION	Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	dismiss char
WITHOUT_CLASSIFICATION	model -> view
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	Choice btw. text and html will be based on stored option
WITHOUT_CLASSIFICATION	type-cast here is safe
WITHOUT_CLASSIFICATION	header-item
WITHOUT_CLASSIFICATION	get plugin handler for filter actions
WITHOUT_CLASSIFICATION	get list of all filter actions
WITHOUT_CLASSIFICATION	interate through all filter actions
WITHOUT_CLASSIFICATION	name is used to load plugin
WITHOUT_CLASSIFICATION	try to get instance of FilterAction
WITHOUT_CLASSIFICATION	add command to CompoundCommand
WITHOUT_CLASSIFICATION	get headerfield to search in (for example: Subject)
WITHOUT_CLASSIFICATION	get headerfield to search in (for example: Subject)
WITHOUT_CLASSIFICATION	string to search
WITHOUT_CLASSIFICATION	string to search
WITHOUT_CLASSIFICATION	get message header
WITHOUT_CLASSIFICATION	cancel if headerfield doesn't exist
WITHOUT_CLASSIFICATION	decode headerfield
WITHOUT_CLASSIFICATION	see if theirs a match
WITHOUT_CLASSIFICATION	skip if message doesn't contain the requested headerfield
WITHOUT_CLASSIFICATION	get condition and convert it to constant as defined in FilterCriteria
WITHOUT_CLASSIFICATION	we don't need any configuration here
WITHOUT_CLASSIFICATION	match all matches
WITHOUT_CLASSIFICATION	transform string to Date representation
WITHOUT_CLASSIFICATION	get date
WITHOUT_CLASSIFICATION	convert criteria into int-value
WITHOUT_CLASSIFICATION	get message body
WITHOUT_CLASSIFICATION	if something goes wrong here, fall back to "mark as read"
WITHOUT_CLASSIFICATION	create reference
WITHOUT_CLASSIFICATION	create command
WITHOUT_CLASSIFICATION	implement your own search-engine here
WITHOUT_CLASSIFICATION	used by virtual folder only
WITHOUT_CLASSIFICATION	only used by VirtualFolder
WITHOUT_CLASSIFICATION	update treenode
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	update treenode
WITHOUT_CLASSIFICATION	update treenode
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	case '\'': sb.append("&apos;"); i++; break;
WITHOUT_CLASSIFICATION	@author fdietz -> Moved code for updating mailfolderinfo to markMessage() intentionally!
WITHOUT_CLASSIFICATION	on startup, there's shouldn't be any recent messages -> we simply remember 0 recent messages here property.addAttribute("recent", "0");
WITHOUT_CLASSIFICATION	Check if the MessageFolderInfo is sane
WITHOUT_CLASSIFICATION	get list of all uids
WITHOUT_CLASSIFICATION	if message with uid doesn't exist -> skip
WITHOUT_CLASSIFICATION	move message to trash if marked as expunged
WITHOUT_CLASSIFICATION	remove message
WITHOUT_CLASSIFICATION	remove from header-list
WITHOUT_CLASSIFICATION	public abstract IHeaderListStorage getHeaderListStorage();
WITHOUT_CLASSIFICATION	set folder changed flag -> if not, the header cache wouldn't notice that something -> has changed. And wouldn't save the changes.
WITHOUT_CLASSIFICATION	if there is no search engine, try the default one
WITHOUT_CLASSIFICATION	Sanity checks
WITHOUT_CLASSIFICATION	protected RemoteSearchEngine searchEngine;
WITHOUT_CLASSIFICATION	Groups are separated by at least one WS character
WITHOUT_CLASSIFICATION	parent directory for mail folders for example: ".columba/mail/"
WITHOUT_CLASSIFICATION	Get the handler
WITHOUT_CLASSIFICATION	which parents are possible ?
WITHOUT_CLASSIFICATION	the group of the given parent
WITHOUT_CLASSIFICATION	iterate through all foldertypes to find suitable ones
WITHOUT_CLASSIFICATION	Add child to parent
WITHOUT_CLASSIFICATION	Add child to parent
WITHOUT_CLASSIFICATION	get root folder
WITHOUT_CLASSIFICATION	create mandatory IMAP Inbox folder
WITHOUT_CLASSIFICATION	associate inbox with root folder
WITHOUT_CLASSIFICATION	notify folder tree model
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	the next new folder will get this UID
WITHOUT_CLASSIFICATION	folderitem wraps xml configuration from tree.xml
WITHOUT_CLASSIFICATION	locking mechanism
WITHOUT_CLASSIFICATION	Root folder cache
WITHOUT_CLASSIFICATION	register interest on tree node changes
WITHOUT_CLASSIFICATION	register interest on tree node changes
WITHOUT_CLASSIFICATION	public MailFolderCommandReference getCommandReference(MailFolderCommandReference r) {return r;}
WITHOUT_CLASSIFICATION	remove XmlElement
WITHOUT_CLASSIFICATION	Check the type
WITHOUT_CLASSIFICATION	do the same for the XmlElement node
WITHOUT_CLASSIFICATION	do the same for the XmlElement of child
WITHOUT_CLASSIFICATION	If rootFolder is not cached traverse the tree
WITHOUT_CLASSIFICATION	There is no parent
WITHOUT_CLASSIFICATION	no filterlist treenode found -> create a new one
WITHOUT_CLASSIFICATION	create filterlist datastructure
WITHOUT_CLASSIFICATION	delete folder from your harddrive
WITHOUT_CLASSIFICATION	if this worked, remove it from tree.xml configuration, too
WITHOUT_CLASSIFICATION	get message with UID
WITHOUT_CLASSIFICATION	get message with UID
WITHOUT_CLASSIFICATION	get tree-like structure of mimeparts
WITHOUT_CLASSIFICATION	Get the mimepart
WITHOUT_CLASSIFICATION	Get the mimepart
WITHOUT_CLASSIFICATION	skip this message, if it doesn't exist in source folder
WITHOUT_CLASSIFICATION	((AbstractLocalFolder) destFolder).setFlags(destuid, (Flags) getFlags( uids[i]).clone());
WITHOUT_CLASSIFICATION	destFolder.fireMessageAdded(uids[i]);
WITHOUT_CLASSIFICATION	we are done - clear the progress bar
WITHOUT_CLASSIFICATION	generate UID for new message
WITHOUT_CLASSIFICATION	save message stream to file
WITHOUT_CLASSIFICATION	close stream
WITHOUT_CLASSIFICATION	save header and attributes. Copy the flags!
WITHOUT_CLASSIFICATION	Check if the message is already cached
WITHOUT_CLASSIFICATION	this message is already cached
WITHOUT_CLASSIFICATION	Parse Message from DataStorage
WITHOUT_CLASSIFICATION	number of headerfields
WITHOUT_CLASSIFICATION	number of headerfields
WITHOUT_CLASSIFICATION	get header from cache
WITHOUT_CLASSIFICATION	message doesn't exist (this shouldn't happen here)
WITHOUT_CLASSIFICATION	if header contains more fields than the cached header
WITHOUT_CLASSIFICATION	message isn't cached -> just return header from cache
WITHOUT_CLASSIFICATION	remove message from disk
WITHOUT_CLASSIFICATION	fireMessageRemoved(uid, getFlags(uid));
WITHOUT_CLASSIFICATION	update MessageFolderInfo
WITHOUT_CLASSIFICATION	cached headerfield list
WITHOUT_CLASSIFICATION	make sure to close all file handles to the currently cached message -> necessary for windows to be able to delete the local file
WITHOUT_CLASSIFICATION	header cache is stored in "headerlist" subfolder
WITHOUT_CLASSIFICATION	Must be out of sync!
WITHOUT_CLASSIFICATION	Check if still consistent
WITHOUT_CLASSIFICATION	get references
WITHOUT_CLASSIFICATION	create output stream
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get array of message UIDs
WITHOUT_CLASSIFICATION	initialize progressbar with total number of messages
WITHOUT_CLASSIFICATION	for each message in folder i
WITHOUT_CLASSIFICATION	get message source from folder
WITHOUT_CLASSIFICATION	prepend From line
WITHOUT_CLASSIFICATION	write message source to file
WITHOUT_CLASSIFICATION	append newline
WITHOUT_CLASSIFICATION	update status message
WITHOUT_CLASSIFICATION	close output stream
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	which kind of mark?
WITHOUT_CLASSIFICATION	add check box for incl. of headers
WITHOUT_CLASSIFICATION	create command
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get array of message UIDs
WITHOUT_CLASSIFICATION	update status message
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	un-mark messages
WITHOUT_CLASSIFICATION	train bayesian filter
WITHOUT_CLASSIFICATION	train bayesian filter
WITHOUT_CLASSIFICATION	mark messages
WITHOUT_CLASSIFICATION	mark as spam /as not spam for each message
WITHOUT_CLASSIFICATION	increase progressbar value
WITHOUT_CLASSIFICATION	cancel here if user requests
WITHOUT_CLASSIFICATION	message belongs to which account?
WITHOUT_CLASSIFICATION	skip if account information is not available
WITHOUT_CLASSIFICATION	if spam filter is not enabled -> return
WITHOUT_CLASSIFICATION	execute command
WITHOUT_CLASSIFICATION	skip if user didn't enable this option
WITHOUT_CLASSIFICATION	move message to user-configured folder (generally "Junk" folder)
WITHOUT_CLASSIFICATION	move message to trash
WITHOUT_CLASSIFICATION	get array of source references
WITHOUT_CLASSIFICATION	which kind of color?
WITHOUT_CLASSIFICATION	saving last selected Message to the folder
WITHOUT_CLASSIFICATION	for each message
WITHOUT_CLASSIFICATION	set columba.color flag
WITHOUT_CLASSIFICATION	vfolder.showFilterDialog((AbstractMailFrameController) getFrameMediator());
WITHOUT_CLASSIFICATION	get references to selected folder and message
WITHOUT_CLASSIFICATION	uid for messages to save
WITHOUT_CLASSIFICATION	no message selected.
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	get value of Subject, From or To header
WITHOUT_CLASSIFICATION	create virtual folder
WITHOUT_CLASSIFICATION	should be virtual
WITHOUT_CLASSIFICATION	get references
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get array of message UIDs
WITHOUT_CLASSIFICATION	update status message
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	for each message
WITHOUT_CLASSIFICATION	uid for messages to save
WITHOUT_CLASSIFICATION	set properties for virtual folder default is inbox if parent is null
WITHOUT_CLASSIFICATION	define filter rule
WITHOUT_CLASSIFICATION	define criteria
WITHOUT_CLASSIFICATION	get folder that is going to be moved
WITHOUT_CLASSIFICATION	get destination folder
WITHOUT_CLASSIFICATION	AbstractFolder.append also automatically removes the folder from its parent
WITHOUT_CLASSIFICATION	get reference
WITHOUT_CLASSIFICATION	get header of message
WITHOUT_CLASSIFICATION	get sender
WITHOUT_CLASSIFICATION	add sender to addressbook
WITHOUT_CLASSIFICATION	add contact to addressbook
WITHOUT_CLASSIFICATION	skip if no reference available
WITHOUT_CLASSIFICATION	if folder is message folder ->TODO (@author fdietz): there should be an interface, instead of the AbstractMessageFolder class
WITHOUT_CLASSIFICATION	save headercache
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	Save message source for each selected message
WITHOUT_CLASSIFICATION	setup save dialog
WITHOUT_CLASSIFICATION	show dialog
WITHOUT_CLASSIFICATION	file exists, user needs to confirm overwrite
WITHOUT_CLASSIFICATION	save message source under selected filename
WITHOUT_CLASSIFICATION	end of loop over selected messages
WITHOUT_CLASSIFICATION	remove source folder
WITHOUT_CLASSIFICATION	setting lastSelection for srcFolder to null
WITHOUT_CLASSIFICATION	get array of message UIDs
WITHOUT_CLASSIFICATION	update status message
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	which kind of mark?
WITHOUT_CLASSIFICATION	uid for messages to save
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	initialize progress bar with total number of messages
WITHOUT_CLASSIFICATION	add source to destination folder
WITHOUT_CLASSIFICATION	retry copy
WITHOUT_CLASSIFICATION	update progress bar
WITHOUT_CLASSIFICATION	reset progress bar
WITHOUT_CLASSIFICATION	We are done - clear the status message with a delay
WITHOUT_CLASSIFICATION	use wrapper class for easier handling of references array adapter = new FolderCommandAdapter( (MailFolderCommandReference[]) getReferences()); get array of source references MailFolderCommandReference[] r = adapter.getSourceFolderReferences();
WITHOUT_CLASSIFICATION	saving last selected message to the folder
WITHOUT_CLASSIFICATION	mark message
WITHOUT_CLASSIFICATION	get name of folder
WITHOUT_CLASSIFICATION	rename folder
WITHOUT_CLASSIFICATION	get source references
WITHOUT_CLASSIFICATION	expunge folder
WITHOUT_CLASSIFICATION	System.getProperty("line.separator");
WITHOUT_CLASSIFICATION	save each message
WITHOUT_CLASSIFICATION	determine type of body part
WITHOUT_CLASSIFICATION	setup filters and filename for file chooser dialog
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get array of source references
WITHOUT_CLASSIFICATION	show dialog
WITHOUT_CLASSIFICATION	file exists, user needs to confirm overwrite
WITHOUT_CLASSIFICATION	dismiss char
WITHOUT_CLASSIFICATION	substitute special characters like: <,>,&,\t,\n
WITHOUT_CLASSIFICATION	Add default extension if no extension is given by the user
WITHOUT_CLASSIFICATION	store whether all headers should be incl.
WITHOUT_CLASSIFICATION	save message
WITHOUT_CLASSIFICATION	save message
WITHOUT_CLASSIFICATION	end of for loop over uids to save
WITHOUT_CLASSIFICATION	default value
WITHOUT_CLASSIFICATION	create new
WITHOUT_CLASSIFICATION	Does the user prefer html or plain text?
WITHOUT_CLASSIFICATION	Get body of message depending on user preferences
WITHOUT_CLASSIFICATION	First determine which charset to use
WITHOUT_CLASSIFICATION	get charset from message
WITHOUT_CLASSIFICATION	decode using default charset
WITHOUT_CLASSIFICATION	test on extension
WITHOUT_CLASSIFICATION	parse for urls / email adr. and substite with HTML-code
WITHOUT_CLASSIFICATION	mark quotings with special font
WITHOUT_CLASSIFICATION	encapsulate bodytext in html-code
WITHOUT_CLASSIFICATION	use body as is
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	headers
WITHOUT_CLASSIFICATION	read configuration from options.xml file
WITHOUT_CLASSIFICATION	create css-stylesheet string
WITHOUT_CLASSIFICATION	create header table
WITHOUT_CLASSIFICATION	process header value
WITHOUT_CLASSIFICATION	strip tags body = parser.stripHTMLTags(decodedBody, true); body = parser.restoreSpecialCharacters(body);
WITHOUT_CLASSIFICATION	message composed of headers and body
WITHOUT_CLASSIFICATION	loop over all headers
WITHOUT_CLASSIFICATION	ignore - columba.date is used instead
WITHOUT_CLASSIFICATION	all headers should be included
WITHOUT_CLASSIFICATION	add from, to, date, subj so they are the last elements
WITHOUT_CLASSIFICATION	create array and return
WITHOUT_CLASSIFICATION	get original folder
WITHOUT_CLASSIFICATION	get references
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	get reference
WITHOUT_CLASSIFICATION	get header of message
WITHOUT_CLASSIFICATION	add sender to addressbook
WITHOUT_CLASSIFICATION	add contact to addressbook
WITHOUT_CLASSIFICATION	Get body of message depending on user preferences
WITHOUT_CLASSIFICATION	First determine which charset to use
WITHOUT_CLASSIFICATION	get charset from message
WITHOUT_CLASSIFICATION	decode using default charset
WITHOUT_CLASSIFICATION	decode message body with respect to charset
WITHOUT_CLASSIFICATION	check if virtual folder, if yes, do not use these uids, use the real uids instead
WITHOUT_CLASSIFICATION	selected messages
WITHOUT_CLASSIFICATION	selected folder
WITHOUT_CLASSIFICATION	for every message
WITHOUT_CLASSIFICATION	the header key for date field
WITHOUT_CLASSIFICATION	Header
WITHOUT_CLASSIFICATION	Footer
WITHOUT_CLASSIFICATION	20030604, karlpeder Fixed minor flaws to be able to print text messages. Further more added support for html messages.
WITHOUT_CLASSIFICATION	uid for messages to print
WITHOUT_CLASSIFICATION	Print each message
WITHOUT_CLASSIFICATION	Setup print document for message
WITHOUT_CLASSIFICATION	Add header information to print
WITHOUT_CLASSIFICATION	20030531, karlpeder setting headerKeys to lowercase for lookup!
WITHOUT_CLASSIFICATION	special handling for dates
WITHOUT_CLASSIFICATION	ignore leading weekday name (e.g. "Mon,"), since this seems to give problems during parsing
WITHOUT_CLASSIFICATION	fall back to use the Date header contents directly
WITHOUT_CLASSIFICATION	Add list of attachments if applicable
WITHOUT_CLASSIFICATION	Add body of message to print
WITHOUT_CLASSIFICATION	print the print document (i.e. the message)
WITHOUT_CLASSIFICATION	end of for loop over uids to print
WITHOUT_CLASSIFICATION	create a print object and return it
WITHOUT_CLASSIFICATION	create new local xml treenode
WITHOUT_CLASSIFICATION	add to options if possible (so it will be saved)
WITHOUT_CLASSIFICATION	try to fix broken html-strings
WITHOUT_CLASSIFICATION	create temporary file and save validated body
WITHOUT_CLASSIFICATION	true ~ scaling allowed
WITHOUT_CLASSIFICATION	if we have a result
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	process all events collected until now
WITHOUT_CLASSIFICATION	get references
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	update status message
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	get references to selected folder and message
WITHOUT_CLASSIFICATION	uid for messages to save
WITHOUT_CLASSIFICATION	no message selected.
WITHOUT_CLASSIFICATION	get value of Subject, From or To header
WITHOUT_CLASSIFICATION	get folder that is going to be moved
WITHOUT_CLASSIFICATION	get reference
WITHOUT_CLASSIFICATION	get destination foldedr
WITHOUT_CLASSIFICATION	expunge folder
WITHOUT_CLASSIFICATION	cancel, if source equals destination folder
WITHOUT_CLASSIFICATION	calling CopyMessageCommand.execute() here! super.execute(worker);
WITHOUT_CLASSIFICATION	get messgae UIDs
WITHOUT_CLASSIFICATION	setting lastSelection to null
WITHOUT_CLASSIFICATION	mark all messages as expunged
WITHOUT_CLASSIFICATION	We are done - clear the status message after a delay
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	display status message
WITHOUT_CLASSIFICATION	get filter list from folder
WITHOUT_CLASSIFICATION	initialize progressbar
WITHOUT_CLASSIFICATION	for each filter
WITHOUT_CLASSIFICATION	update progressbar
WITHOUT_CLASSIFICATION	get filter
WITHOUT_CLASSIFICATION	search all messages which match this filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	First sort so that Events from one folder stick together
WITHOUT_CLASSIFICATION	Collect the uids for one folder
WITHOUT_CLASSIFICATION	Collect the uids for one folder
WITHOUT_CLASSIFICATION	new folder, fire to the old folder
WITHOUT_CLASSIFICATION	new folder, fire to the old folder
WITHOUT_CLASSIFICATION	clear list and collect uids for new folder
WITHOUT_CLASSIFICATION	clear list and collect uids for new folder
WITHOUT_CLASSIFICATION	If there is still a parent -> remove it
WITHOUT_CLASSIFICATION	add child to this node
WITHOUT_CLASSIFICATION	perform other environment configurations
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	date
WITHOUT_CLASSIFICATION	make sure that we have a Message-ID
WITHOUT_CLASSIFICATION	add command to scheduler MainInterface.processor.addOp(command);
WITHOUT_CLASSIFICATION	size of message
WITHOUT_CLASSIFICATION	perform other database configurations
WITHOUT_CLASSIFICATION	message size should be at least 1 KB
WITHOUT_CLASSIFICATION	parse all message files to recreate the header cache
WITHOUT_CLASSIFICATION	we are done
WITHOUT_CLASSIFICATION	headerList.clear();
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	true/false
WITHOUT_CLASSIFICATION	set the attachment flag
WITHOUT_CLASSIFICATION	Update is unnecessary
WITHOUT_CLASSIFICATION	Can't happen
WITHOUT_CLASSIFICATION	was this message already fetched from the server?
WITHOUT_CLASSIFICATION	message flags
WITHOUT_CLASSIFICATION	priority as integer value
WITHOUT_CLASSIFICATION	true, if message has attachments, false otherwise
WITHOUT_CLASSIFICATION	properly decoded subject
WITHOUT_CLASSIFICATION	short from, containing only name of person
WITHOUT_CLASSIFICATION	Cc
WITHOUT_CLASSIFICATION	host from which this message was downloaded
WITHOUT_CLASSIFICATION	show attachment panel
WITHOUT_CLASSIFICATION	message color
WITHOUT_CLASSIFICATION	these are cached by default
WITHOUT_CLASSIFICATION	account ID
WITHOUT_CLASSIFICATION	return h;
WITHOUT_CLASSIFICATION	to
WITHOUT_CLASSIFICATION	POP3 message UID
WITHOUT_CLASSIFICATION	copy all internally used headerfields
WITHOUT_CLASSIFICATION	header cache is stored in "headerlist" subfolder
WITHOUT_CLASSIFICATION	Do nothing
WITHOUT_CLASSIFICATION	internally used headerfields these are all boolean values, which are saved using a single int value
WITHOUT_CLASSIFICATION	this internally used headerfields can be of every basic type, including String, Integer, Boolean, Date, etc.
WITHOUT_CLASSIFICATION	load boolean headerfields, which are compressed in one int value
WITHOUT_CLASSIFICATION	load other internal headerfields, non-boolean type
WITHOUT_CLASSIFICATION	load default headerfields, as defined in RFC822
WITHOUT_CLASSIFICATION	if value doesn't exist, use false as default
WITHOUT_CLASSIFICATION	save other internal headerfields, of non-boolean type
WITHOUT_CLASSIFICATION	save default headerfields, as defined in RFC822
WITHOUT_CLASSIFICATION	only called by FolderFactory
WITHOUT_CLASSIFICATION	if creating new folder
WITHOUT_CLASSIFICATION	Trigger Synchronization
WITHOUT_CLASSIFICATION	Check if the mailbox has changed
WITHOUT_CLASSIFICATION	Sort the uid list
WITHOUT_CLASSIFICATION	Seems to be no change!
WITHOUT_CLASSIFICATION	Ensure sizes are correct
WITHOUT_CLASSIFICATION	Compute the number of new messages
WITHOUT_CLASSIFICATION	Find the index of the largest local Uid
WITHOUT_CLASSIFICATION	Still not found -> do a binary search
WITHOUT_CLASSIFICATION	removedLocalUids = localUids.size() - 1 - position;
WITHOUT_CLASSIFICATION	Check if all local uids have been deleted
WITHOUT_CLASSIFICATION	all messages are new
WITHOUT_CLASSIFICATION	all messages are new
WITHOUT_CLASSIFICATION	Find the messages that have been deleted
WITHOUT_CLASSIFICATION	Pack size is min 10, max 200 else mailboxsize / 10
WITHOUT_CLASSIFICATION	Fetch Pack outer loop
WITHOUT_CLASSIFICATION	Compare inner loop
WITHOUT_CLASSIFICATION	next position in the local uid list
WITHOUT_CLASSIFICATION	All the other local mails are deleted
WITHOUT_CLASSIFICATION	Build a list of the new uids
WITHOUT_CLASSIFICATION	Update the list of new and local uids
WITHOUT_CLASSIFICATION	Fetch the headers of the new messages ...
WITHOUT_CLASSIFICATION	.. and set the flags
WITHOUT_CLASSIFICATION	fire message added updates
WITHOUT_CLASSIFICATION	cached headerfield list
WITHOUT_CLASSIFICATION	get references
WITHOUT_CLASSIFICATION	Trigger Synchronization
WITHOUT_CLASSIFICATION	Sort the uid list
WITHOUT_CLASSIFICATION	Build the remote lists of messages that are UNSEEN, FLAGGED, DELETED, JUNK
WITHOUT_CLASSIFICATION	Number of deleted messages is computed from exists on imap and local newMessages
WITHOUT_CLASSIFICATION	First deleted all local uids that are larger than the largest remote uid
WITHOUT_CLASSIFICATION	Fetch these uids and compare them to the local list
WITHOUT_CLASSIFICATION	Search in packs beginning from newest to oldest -> in most cases this should save us a lot of uid fetchings to find the deleted messages
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.Folder#getObservable()
WITHOUT_CLASSIFICATION	Copy the header
WITHOUT_CLASSIFICATION	We found the uid of a deleted message -> remove it from the headerlist
WITHOUT_CLASSIFICATION	Check if maybe no message at all got copied In this case we are finished here
WITHOUT_CLASSIFICATION	update the local flags and ensure that the MailboxInfo is correct
WITHOUT_CLASSIFICATION	get IMAP rootfolder
WITHOUT_CLASSIFICATION	Junk flag
WITHOUT_CLASSIFICATION	Was this message actually copied?
WITHOUT_CLASSIFICATION	update the HeaderList
WITHOUT_CLASSIFICATION	We need IMAPFlags
WITHOUT_CLASSIFICATION	update the HeaderList
WITHOUT_CLASSIFICATION	Parser the header
WITHOUT_CLASSIFICATION	Apply filter if enabled
WITHOUT_CLASSIFICATION	get header with UID
WITHOUT_CLASSIFICATION	Reenable Updating the mailbox
WITHOUT_CLASSIFICATION	remember parent path (this is necessary for IMAPRootFolder sync operations)
WITHOUT_CLASSIFICATION	IMAP Folders have no own lock ,but share the lock from the Root to ensure that only one operation can be processed simultanous
WITHOUT_CLASSIFICATION	Since JUNK is a non-system Flag we have to set it with an addtitional STORE command
WITHOUT_CLASSIFICATION	Number of deleted messages is computed from exists on imap and local newMessages
WITHOUT_CLASSIFICATION	if "automatically apply filter" is selected & there are new messages
WITHOUT_CLASSIFICATION	cache.clear();
WITHOUT_CLASSIFICATION	private ImapOperator operator;
WITHOUT_CLASSIFICATION	super(node, folderItem);
WITHOUT_CLASSIFICATION	delimiter found -> recursively create all necessary folders to create -> the final folder
WITHOUT_CLASSIFICATION	if folder doesn't exist already
WITHOUT_CLASSIFICATION	this is the final folder subFolder = addIMAPChildFolder(parent, info, subchild);
WITHOUT_CLASSIFICATION	recursively go on
WITHOUT_CLASSIFICATION	no delimiter found -> this is already the final folder if folder doesn't exist already
WITHOUT_CLASSIFICATION	Check the Noselect flag
WITHOUT_CLASSIFICATION	Check the Noinferior flag
WITHOUT_CLASSIFICATION	first remove all subfolders recursively
WITHOUT_CLASSIFICATION	A child got removed -> stay at this position to get the next
WITHOUT_CLASSIFICATION	maybe remove this folder
WITHOUT_CLASSIFICATION	Find special
WITHOUT_CLASSIFICATION	search for a folder thats on the IMAP account first try to find the local translation of special
WITHOUT_CLASSIFICATION	fall back to the english version
WITHOUT_CLASSIFICATION	we found a suitable folder -> set it
WITHOUT_CLASSIFICATION	first clear all flags
WITHOUT_CLASSIFICATION	create and tag all subfolders on server
WITHOUT_CLASSIFICATION	don't care
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	fire event
WITHOUT_CLASSIFICATION	get references
WITHOUT_CLASSIFICATION	get references
WITHOUT_CLASSIFICATION	get references
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	This fixes the strange behaviour of the courier imapserver which sets the \Noselect flag on INBOX
WITHOUT_CLASSIFICATION	If we are online sync the subscribed folders on first connection
WITHOUT_CLASSIFICATION	MainInterface.processor.addOp(c);
WITHOUT_CLASSIFICATION	Trigger synchronization of the selected Folder
WITHOUT_CLASSIFICATION	Trigger synchronization of the IMAPFolder
WITHOUT_CLASSIFICATION	has the imap account no trash folder using the default trash folder
WITHOUT_CLASSIFICATION	Find old numbers
WITHOUT_CLASSIFICATION	check for new headers
WITHOUT_CLASSIFICATION	Get the new numbers
WITHOUT_CLASSIFICATION	fire new message event to interested listeners
WITHOUT_CLASSIFICATION	create reference of newly arrived messages
WITHOUT_CLASSIFICATION	Reenable the action
WITHOUT_CLASSIFICATION	Trigger any pending Flag syncs
WITHOUT_CLASSIFICATION	parse line by line
WITHOUT_CLASSIFICATION	parse line by line
WITHOUT_CLASSIFICATION	if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	found new message
WITHOUT_CLASSIFICATION	this is necessary to do!
WITHOUT_CLASSIFICATION	Do not take existing link tags into account
WITHOUT_CLASSIFICATION	parse line by line
WITHOUT_CLASSIFICATION	if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	found new message
WITHOUT_CLASSIFICATION	line contains "@" (evolution mbox style) or -> import message in Columba
WITHOUT_CLASSIFICATION	found new message
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.mailboximport.AbstractMailboxImporter#importMailbox(java.io.File, org.columba.api.command.IWorkerStatusController)
WITHOUT_CLASSIFICATION	MATCH ANY
WITHOUT_CLASSIFICATION	save last message, because while loop aborted before being able to save message
WITHOUT_CLASSIFICATION	save last message, because while loop aborted before being able to save message
WITHOUT_CLASSIFICATION	line contains "-" (mozilla mbox style) -> import message in Columba
WITHOUT_CLASSIFICATION	if line doesn't start with "From ???@???" or line length is 0 -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	enable lucene search index by default
WITHOUT_CLASSIFICATION	enable lucene search index by default
WITHOUT_CLASSIFICATION	update message starts of following messages
WITHOUT_CLASSIFICATION	delete the file containing the message in the file system
WITHOUT_CLASSIFICATION	Could not delete the file - possibly someone has a lock on it
WITHOUT_CLASSIFICATION	... delete it when Columba exists instead
WITHOUT_CLASSIFICATION	try to re-use already instanciated class
WITHOUT_CLASSIFICATION	setup filter configuration
WITHOUT_CLASSIFICATION	MATCH_ALL
WITHOUT_CLASSIFICATION	Add all found virtual uids to the result
WITHOUT_CLASSIFICATION	initialisation
WITHOUT_CLASSIFICATION	selecting the message
WITHOUT_CLASSIFICATION	get header with UID
WITHOUT_CLASSIFICATION	save last message, because while loop aborted before being able to save message
WITHOUT_CLASSIFICATION	worker.setDisplayText( "Search Result: " + notDefaultEngineResult.size() + " messages found in " + (System.currentTimeMillis() - startTime) + " ms");
WITHOUT_CLASSIFICATION	A list of all files that seem to be messages (only numbers in the name) new Object[list.length];
WITHOUT_CLASSIFICATION	MATCH_ALL
WITHOUT_CLASSIFICATION	result = mergeFilterResult(v, uids, match); only for debugging purpose printList( result );
WITHOUT_CLASSIFICATION	filter is disabled
WITHOUT_CLASSIFICATION	this search request is covered by the query engine
WITHOUT_CLASSIFICATION	clear status bar message now we are done (with a delay)
WITHOUT_CLASSIFICATION	MATCH_ANY
WITHOUT_CLASSIFICATION	method is not needed by IMAP
WITHOUT_CLASSIFICATION	return searchMessages(filter, null);
WITHOUT_CLASSIFICATION	method is not needed by IMAP
WITHOUT_CLASSIFICATION	This list is reduced, because most search requests can be answered anyway, using locally cached headerfields
WITHOUT_CLASSIFICATION	pass the work to IMAPStore
WITHOUT_CLASSIFICATION	method is not needed by IMAP
WITHOUT_CLASSIFICATION	method is not needed by IMAP
WITHOUT_CLASSIFICATION	If there is an existing lock then it must be from a previous crash -> remove it!
WITHOUT_CLASSIFICATION	pass the work to IMAPStore
WITHOUT_CLASSIFICATION	Check if index is consitent with mailbox
WITHOUT_CLASSIFICATION	Remove of lock didn't work -> delete by hand
WITHOUT_CLASSIFICATION	Search again
WITHOUT_CLASSIFICATION	Find all VirtualFolders and rewrite the FolderReference
WITHOUT_CLASSIFICATION	show neat error dialog here
WITHOUT_CLASSIFICATION	Find the body text part
WITHOUT_CLASSIFICATION	current position in s
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	already handled
WITHOUT_CLASSIFICATION	super.removeFolder(); do nothing
WITHOUT_CLASSIFICATION	Check if the parentfolder is remote & we are online
WITHOUT_CLASSIFICATION	only called by FolderTreeModel.createDirectories() and FolderTreeModel.add()
WITHOUT_CLASSIFICATION	Analyze the Filter
WITHOUT_CLASSIFICATION	If no flags filter the seach is still valid
WITHOUT_CLASSIFICATION	redo the seach for the flags criteria
WITHOUT_CLASSIFICATION	(tstich) reduced to 3 because all need to be search when activated on startup we only want 3 subfolders -> if more children exist remove them
WITHOUT_CLASSIFICATION	create new subfolder
WITHOUT_CLASSIFICATION	if creation failed
WITHOUT_CLASSIFICATION	copy all properties to the subfolder
WITHOUT_CLASSIFICATION	lets find a good name for our new vfolder
WITHOUT_CLASSIFICATION	update tree-view
WITHOUT_CLASSIFICATION	get source folder reference
WITHOUT_CLASSIFICATION	get source folder reference
WITHOUT_CLASSIFICATION	VirtualMessage m = new VirtualMessage(f, uid, index);
WITHOUT_CLASSIFICATION	Check if all uids are still exisiting
WITHOUT_CLASSIFICATION	change to new folder
WITHOUT_CLASSIFICATION	remove from source folder
WITHOUT_CLASSIFICATION	remove from virtual folder
WITHOUT_CLASSIFICATION	Now we can search this folder since no mail from this folder will come in the list
WITHOUT_CLASSIFICATION	Create a src uid array
WITHOUT_CLASSIFICATION	Create a src uid array
WITHOUT_CLASSIFICATION	search the src folder with the src uid array
WITHOUT_CLASSIFICATION	search the src folder with the src uid array
WITHOUT_CLASSIFICATION	Convert the src uids back to virtual uids
WITHOUT_CLASSIFICATION	Convert the src uids back to virtual uids
WITHOUT_CLASSIFICATION	Add all found virtual uids to the result
WITHOUT_CLASSIFICATION	Add this header to the list for later searching
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	get header with UID
WITHOUT_CLASSIFICATION	Check if all uids are still exisiting
WITHOUT_CLASSIFICATION	change to new folder
WITHOUT_CLASSIFICATION	can be an email address in a link BUG CA-174 fix that with looking for an open link in the same line before on the way from left to the current position of the email at s1 find the last open link <a
WITHOUT_CLASSIFICATION	First try to get the lock of the virtual folder
WITHOUT_CLASSIFICATION	ColumbaHeader header = (ColumbaHeader) headerList.get(uid); header.getAttributes().put(key, value);
WITHOUT_CLASSIFICATION	We need to get the locks of all folders
WITHOUT_CLASSIFICATION	not supported
WITHOUT_CLASSIFICATION	not supported
WITHOUT_CLASSIFICATION	deactivate the folder
WITHOUT_CLASSIFICATION	Copy the rest
WITHOUT_CLASSIFICATION	Update the Virtual Header
WITHOUT_CLASSIFICATION	fire updates
WITHOUT_CLASSIFICATION	create scrollapen
WITHOUT_CLASSIFICATION	don't care
WITHOUT_CLASSIFICATION	shall we insert a link?
WITHOUT_CLASSIFICATION	not supported by virtual folder
WITHOUT_CLASSIFICATION	global option
WITHOUT_CLASSIFICATION	use folder specific options
WITHOUT_CLASSIFICATION	create element if not available
WITHOUT_CLASSIFICATION	check if this folder is overwriting global options
WITHOUT_CLASSIFICATION	use folder-based options
WITHOUT_CLASSIFICATION	use global options
WITHOUT_CLASSIFICATION	only local options have overwrite attribute
WITHOUT_CLASSIFICATION	check if there are columns which need to be saved
WITHOUT_CLASSIFICATION	remove all child nodes
WITHOUT_CLASSIFICATION	save width
WITHOUT_CLASSIFICATION	add columns
WITHOUT_CLASSIFICATION	add column to JTable column model
WITHOUT_CLASSIFICATION	tc.setModelIndex(position);
WITHOUT_CLASSIFICATION	resize column width
WITHOUT_CLASSIFICATION	these are the items, enabled as default
WITHOUT_CLASSIFICATION	TableView view = tableController.getView();
WITHOUT_CLASSIFICATION	should we re-use the last remembered selection?
WITHOUT_CLASSIFICATION	sorting order
WITHOUT_CLASSIFICATION	row count
WITHOUT_CLASSIFICATION	row count == 0 --> empty table
WITHOUT_CLASSIFICATION	if the last selection for the current folder is null, then we show the first/last message in the table and scroll to it.
WITHOUT_CLASSIFICATION	changing the selection to the first/last row based on ascending state
WITHOUT_CLASSIFICATION	no messages in this folder
WITHOUT_CLASSIFICATION	no messages in this folder
WITHOUT_CLASSIFICATION	if a lastSelection for this folder is set getting the last selected uid
WITHOUT_CLASSIFICATION	this message doesn't exit in this folder anymore
WITHOUT_CLASSIFICATION	init plugin handler
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	use folder specific options
WITHOUT_CLASSIFICATION	check if this folder is overwriting global options
WITHOUT_CLASSIFICATION	use folder-based options
WITHOUT_CLASSIFICATION	use global options
WITHOUT_CLASSIFICATION	get list of plugins
WITHOUT_CLASSIFICATION	get list of plugins
WITHOUT_CLASSIFICATION	if no folder was passed as argument, use global options
WITHOUT_CLASSIFICATION	load plugin
WITHOUT_CLASSIFICATION	create default configuration
WITHOUT_CLASSIFICATION	use global settings
WITHOUT_CLASSIFICATION	notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	if we search in The MessageConroller
WITHOUT_CLASSIFICATION	get the message controller
WITHOUT_CLASSIFICATION	20030614, karlpeder In main view only enabled when message(s) selected
WITHOUT_CLASSIFICATION	check if we should use the folder-based configuration or the global table configuration
WITHOUT_CLASSIFICATION	toolbar text
WITHOUT_CLASSIFICATION	check for new messages
WITHOUT_CLASSIFICATION	send all unsent messages found in Outbox
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	model -> view
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	set small icon for menu putValue(SMALL_ICON, ImageLoader.getImageIcon("stock_convert-16.png"));
WITHOUT_CLASSIFICATION	"menu_edit_findagain_tooltip").replaceAll("&", ""));
WITHOUT_CLASSIFICATION	@author Erich Schaer, Dmytro Podalyuk
WITHOUT_CLASSIFICATION	if no account exists, return
WITHOUT_CLASSIFICATION	Global # 1
WITHOUT_CLASSIFICATION	West Europe # 4
WITHOUT_CLASSIFICATION	East Europe # 10
WITHOUT_CLASSIFICATION	East Asian # 17
WITHOUT_CLASSIFICATION	West Asian # 30
WITHOUT_CLASSIFICATION	protected CharsetMenuItem selectedMenuItem = new CharsetMenuItem(null);
WITHOUT_CLASSIFICATION	setIcon(ImageLoader.getImageIcon("stock_font_16.png"));
WITHOUT_CLASSIFICATION	Automatic Generation of Groups
WITHOUT_CLASSIFICATION	selectedMenuItem.setCharset(e.getCharset());
WITHOUT_CLASSIFICATION	init model (defaults to empty plain text message)
WITHOUT_CLASSIFICATION	init controllers for different parts of the composer
WITHOUT_CLASSIFICATION	listen to changes in the Subject to update the title bar of the message composer window
WITHOUT_CLASSIFICATION	composer can either edit in html or plain text mode listen for configuration changes
WITHOUT_CLASSIFICATION	init controller for the editor depending on message type
WITHOUT_CLASSIFICATION	add JPanel with useful HTML related actions.
WITHOUT_CLASSIFICATION	Hack to ensure charset is set correctly at start-up
WITHOUT_CLASSIFICATION	ignore this
WITHOUT_CLASSIFICATION	Setup DnD for the text and attachment list control.
WITHOUT_CLASSIFICATION	create default element if not available
WITHOUT_CLASSIFICATION	set model based on configuration
WITHOUT_CLASSIFICATION	remove all components from container
WITHOUT_CLASSIFICATION	re-add all top components like recipient editor/subject editor
WITHOUT_CLASSIFICATION	if message contains attachments
WITHOUT_CLASSIFICATION	show signature viewer
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	create splitpane containing the bodytext editor and the attachment panel
WITHOUT_CLASSIFICATION	add splitpane to the center
WITHOUT_CLASSIFICATION	ViewItem viewItem = getViewItem();
WITHOUT_CLASSIFICATION	no attachments -> only show bodytext editor
WITHOUT_CLASSIFICATION	no attachments -> only show bodytext editor
WITHOUT_CLASSIFICATION	re-paint composer-view
WITHOUT_CLASSIFICATION	update panel
WITHOUT_CLASSIFICATION	return isToolbarEnabled(ACCOUNTINFOPANEL);
WITHOUT_CLASSIFICATION	update ComposerModel based on user-changes in ComposerView
WITHOUT_CLASSIFICATION	show attachment panel if necessary
WITHOUT_CLASSIFICATION	Update all component according to the new model
WITHOUT_CLASSIFICATION	sync model with the current (old) view
WITHOUT_CLASSIFICATION	convert body text to comply with new editor format
WITHOUT_CLASSIFICATION	switch editor and resync view with model
WITHOUT_CLASSIFICATION	sync view with new update to date model
WITHOUT_CLASSIFICATION	change ui container
WITHOUT_CLASSIFICATION	enable/disable html toolbar
WITHOUT_CLASSIFICATION	only prompt user, if composer contains some text
WITHOUT_CLASSIFICATION	close Columba, if composer is only visible frame
WITHOUT_CLASSIFICATION	default button title
WITHOUT_CLASSIFICATION	save changes
WITHOUT_CLASSIFICATION	close composer
WITHOUT_CLASSIFICATION	close composer
WITHOUT_CLASSIFICATION	cancel question dialog and don't close composer
WITHOUT_CLASSIFICATION	save charset
WITHOUT_CLASSIFICATION	save html state
WITHOUT_CLASSIFICATION	hide signature viewer
WITHOUT_CLASSIFICATION	original: "^[a-zA-Z0-9]+@[a-zA-Z0-9\\.\\-]+\\.[a-zA-Z]{2,4}+$";
WITHOUT_CLASSIFICATION	make sure that JFrame is not closed automatically -> we want to prompt the user to save his work
WITHOUT_CLASSIFICATION	Display error ? As it is inmutable
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.frapuccino.addresscombobox.PatternSeparatedAutoCompleter#acceptedListItem(java.lang.Object)
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	private ImageIcon image2 = null; private ImageIcon image3 = null;
WITHOUT_CLASSIFICATION	default ~ plain text
WITHOUT_CLASSIFICATION	set message
WITHOUT_CLASSIFICATION	set whether the model should handle html or plain text
WITHOUT_CLASSIFICATION	more initialization
WITHOUT_CLASSIFICATION	notifyListeners();
WITHOUT_CLASSIFICATION	notifyListeners();
WITHOUT_CLASSIFICATION	20030917, karlpeder Set the model to html or text based on the body specified on the command line. This is done using a simple check: Does the body contain <html> and </html>
WITHOUT_CLASSIFICATION	set the body text
WITHOUT_CLASSIFICATION	if this is no URI
WITHOUT_CLASSIFICATION	Remove leading space after the separator character so that it is not removed from the text component's document, below.
WITHOUT_CLASSIFICATION	Surround the selected element with double-quotes, if necessary
WITHOUT_CLASSIFICATION	clear autocomplete hashmap
WITHOUT_CLASSIFICATION	fill hashmap with all available contacts and groups
WITHOUT_CLASSIFICATION	view.table.getModel().addTableModelListener(this);
WITHOUT_CLASSIFICATION	skip empty strings
WITHOUT_CLASSIFICATION	setText(accountName);
WITHOUT_CLASSIFICATION	view.setSelectedItem( model.getHeaderField("X-Priority") );
WITHOUT_CLASSIFICATION	model.setHeaderField("X-Priority",(String) view.getSelectedItem());
WITHOUT_CLASSIFICATION	setModel(listModel);
WITHOUT_CLASSIFICATION	setCellRenderer(new ListRenderer());
WITHOUT_CLASSIFICATION	Get Tooltip for Icon
WITHOUT_CLASSIFICATION	remove from model
WITHOUT_CLASSIFICATION	remove from view
WITHOUT_CLASSIFICATION	clear model
WITHOUT_CLASSIFICATION	clear view
WITHOUT_CLASSIFICATION	pass contact data along to AddressComboBox
WITHOUT_CLASSIFICATION	encryptMenuItem.setSelected(model.isEncryptMessage()); signMenuItem.setSelected(model.isSignMessage());
WITHOUT_CLASSIFICATION	view.addListSelectionListener(this);
WITHOUT_CLASSIFICATION	transfer attachments from model to view
WITHOUT_CLASSIFICATION	clear existing attachments from the view 20031105, karlpeder Added to avoid dupplicating attachments when switching btw. html and plain text.
WITHOUT_CLASSIFICATION	add attachments (mimeparts) from model to the view
WITHOUT_CLASSIFICATION	transfer attachments from view to model clear existing attachments from the model
WITHOUT_CLASSIFICATION	add attachments (mimeparts) from view to the model
WITHOUT_CLASSIFICATION	hide/show attachment panel
WITHOUT_CLASSIFICATION	attachment controller doesn't support copy-operation
WITHOUT_CLASSIFICATION	attachment controller doesn't support copy actions
WITHOUT_CLASSIFICATION	attachment controller doesn't support paste actions
WITHOUT_CLASSIFICATION	attachment controller doesn't support redo operation
WITHOUT_CLASSIFICATION	attachment controller doesn't support undo operation
WITHOUT_CLASSIFICATION	attachment controller doesn't support undo operation
WITHOUT_CLASSIFICATION	view.setSelectionInterval(0, view.count() - 1);
WITHOUT_CLASSIFICATION	FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	name of font
WITHOUT_CLASSIFICATION	size of font
WITHOUT_CLASSIFICATION	currently used font
WITHOUT_CLASSIFICATION	font configuration
WITHOUT_CLASSIFICATION	overwrite look and feel font settings
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	fonts
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Gets fired if configuration has changed. @see org.columba.mail.gui.config.general.MailOptionsDialog @see java.util.Observer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	"menu_edit_findagain_tooltip").replaceAll("&", ""));
WITHOUT_CLASSIFICATION	@author Erich Schaer, Dmytro Podalyuk
WITHOUT_CLASSIFICATION	overwrite look and feel font settings
WITHOUT_CLASSIFICATION	register for configuration changes
WITHOUT_CLASSIFICATION	Methods necessary to hide view from clients
WITHOUT_CLASSIFICATION	use default font settings
WITHOUT_CLASSIFICATION	setBorder(BorderFactory.createCompoundBorder(BorderFactory .createEmptyBorder(5, 5, 5, 5), BorderFactory .createCompoundBorder(new RoundedBorder( new Color(220, 220, 220)), BorderFactory .createEmptyBorder(5, 5, 5, 5))));
WITHOUT_CLASSIFICATION	textPane.setEnabled(false);
WITHOUT_CLASSIFICATION	register interest on configuration changes
WITHOUT_CLASSIFICATION	if account selection changes, reload signature file
WITHOUT_CLASSIFICATION	add listener to changes
WITHOUT_CLASSIFICATION	add listener to changes
WITHOUT_CLASSIFICATION	remove listener from old account selection
WITHOUT_CLASSIFICATION	SubjectDialog dialog = new SubjectDialog(composerInterface.composerFrame);
WITHOUT_CLASSIFICATION	view data ->model
WITHOUT_CLASSIFICATION	get selected account
WITHOUT_CLASSIFICATION	get "Drafts" folder of account
WITHOUT_CLASSIFICATION	check if we are currently editing a draft message
WITHOUT_CLASSIFICATION	-> we need to replace old message
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	Add components to the panel:
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	large icon for toolbar
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	create command
WITHOUT_CLASSIFICATION	toolbar text
WITHOUT_CLASSIFICATION	toolbar text
WITHOUT_CLASSIFICATION	view data ->model
WITHOUT_CLASSIFICATION	delete source message
WITHOUT_CLASSIFICATION	mark as read, mark as draft
WITHOUT_CLASSIFICATION	create command reference
WITHOUT_CLASSIFICATION	disable text in toolbar
WITHOUT_CLASSIFICATION	disable text in toolbar
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	String checked = composerController.getComposerSpellCheck().checkText( composerController.getEditorController().getView().getText());
WITHOUT_CLASSIFICATION	composerController.getEditorController().getView().setText(checked);
WITHOUT_CLASSIFICATION	update view accordingly
WITHOUT_CLASSIFICATION	small icon for menu putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("send-later-16.png"));
WITHOUT_CLASSIFICATION	-> get source reference of message when replying this is the original sender's message you selected and replied to
WITHOUT_CLASSIFICATION	mark message as answered
WITHOUT_CLASSIFICATION	close composer view
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	Runs on the event-dispatching thread.
WITHOUT_CLASSIFICATION	required for SwingWorker 3
WITHOUT_CLASSIFICATION	setEnabled(false);
WITHOUT_CLASSIFICATION	setEnabled(false);
WITHOUT_CLASSIFICATION	getFrameController().close();
WITHOUT_CLASSIFICATION	composerInterface.composerController.saveWindowPosition(); composerInterface.composerController.hideComposerWindow();
WITHOUT_CLASSIFICATION	ComposerModel model = (ComposerModel) ((ComposerController)getFrameController()).getModel();
WITHOUT_CLASSIFICATION	open composer frame
WITHOUT_CLASSIFICATION	apply model
WITHOUT_CLASSIFICATION	model->view update
WITHOUT_CLASSIFICATION	get first selected message
WITHOUT_CLASSIFICATION	get headerfields
WITHOUT_CLASSIFICATION	create composer model
WITHOUT_CLASSIFICATION	create composer model
WITHOUT_CLASSIFICATION	->set source reference in composermodel when replying this is the original sender's message you selected and replied to
WITHOUT_CLASSIFICATION	set subject
WITHOUT_CLASSIFICATION	initialize MimeHeader as RFC822-compliant-message
WITHOUT_CLASSIFICATION	add mimepart to model
WITHOUT_CLASSIFICATION	setup to, references and account
WITHOUT_CLASSIFICATION	get mimeparts
WITHOUT_CLASSIFICATION	setup charset and html
WITHOUT_CLASSIFICATION	20040210, karlpeder Remove html comments - they are not displayed properly in the composer
WITHOUT_CLASSIFICATION	add all attachments
WITHOUT_CLASSIFICATION	skip if bodypart (already added as quoted text)
WITHOUT_CLASSIFICATION	add attachment
WITHOUT_CLASSIFICATION	builder.setLeadingColumnOffset(2);
WITHOUT_CLASSIFICATION	get first selected message
WITHOUT_CLASSIFICATION	get headerfields
WITHOUT_CLASSIFICATION	create composer model
WITHOUT_CLASSIFICATION	set subject
WITHOUT_CLASSIFICATION	set subject
WITHOUT_CLASSIFICATION	setup to, references and account
WITHOUT_CLASSIFICATION	get mimeparts
WITHOUT_CLASSIFICATION	Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	setup charset and html
WITHOUT_CLASSIFICATION	Select the charset of the original message
WITHOUT_CLASSIFICATION	Stick with the default charset
WITHOUT_CLASSIFICATION	Do decoding stuff
WITHOUT_CLASSIFICATION	Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	build "quoted" message
WITHOUT_CLASSIFICATION	comments are not displayed correctly in composer
WITHOUT_CLASSIFICATION	Text: Addition of > before each line
WITHOUT_CLASSIFICATION	->set source reference in composermodel when replying this is the original sender's message you selected and replied to
WITHOUT_CLASSIFICATION	get answer from template
WITHOUT_CLASSIFICATION	template folder has uid=107
WITHOUT_CLASSIFICATION	retrieve headerlist of tempate folder
WITHOUT_CLASSIFICATION	choose template
WITHOUT_CLASSIFICATION	user pressed OK
WITHOUT_CLASSIFICATION	get bodytext of template message
WITHOUT_CLASSIFICATION	20030926, karlpeder Added html support MimePart mp = tree.getFirstTextPart("plain");
WITHOUT_CLASSIFICATION	Add all recipients to the collected addresses
WITHOUT_CLASSIFICATION	From which account is this mail?
WITHOUT_CLASSIFICATION	remove duplicates
WITHOUT_CLASSIFICATION	Add addresses to the addressbook
WITHOUT_CLASSIFICATION	create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	select the account this mail was received from
WITHOUT_CLASSIFICATION	open composer frame
WITHOUT_CLASSIFICATION	apply model
WITHOUT_CLASSIFICATION	model->view update
WITHOUT_CLASSIFICATION	get first selected message
WITHOUT_CLASSIFICATION	get headerfields
WITHOUT_CLASSIFICATION	create composer model
WITHOUT_CLASSIFICATION	set subject
WITHOUT_CLASSIFICATION	setup to, references and account
WITHOUT_CLASSIFICATION	get mimeparts
WITHOUT_CLASSIFICATION	Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	setup charset and html
WITHOUT_CLASSIFICATION	20040210, karlpeder Remove html comments - they are not displayed properly in the composer
WITHOUT_CLASSIFICATION	skip if bodypart (already added as quoted text)
WITHOUT_CLASSIFICATION	add attachment
WITHOUT_CLASSIFICATION	Select the charset of the original message
WITHOUT_CLASSIFICATION	Stick with the default charset
WITHOUT_CLASSIFICATION	Do decoding stuff
WITHOUT_CLASSIFICATION	->set source reference in composermodel when replying this is the original sender's message you selected and replied to
WITHOUT_CLASSIFICATION	create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	select the account this mail was received from
WITHOUT_CLASSIFICATION	Use reply-to field if given, else use from
WITHOUT_CLASSIFICATION	get selected messages
WITHOUT_CLASSIFICATION	we only need the first message
WITHOUT_CLASSIFICATION	get message flags
WITHOUT_CLASSIFICATION	store reference to source message
WITHOUT_CLASSIFICATION	html
WITHOUT_CLASSIFICATION	copy every headerfield the original message contains
WITHOUT_CLASSIFICATION	Get all MimeParts
WITHOUT_CLASSIFICATION	add all attachments
WITHOUT_CLASSIFICATION	set subject ; mod:20040629 SWITT
WITHOUT_CLASSIFICATION	set From for redirecting; new: 20040629 SWITT
WITHOUT_CLASSIFICATION	Html: Insertion of text before and after original message
WITHOUT_CLASSIFICATION	build message orginal ; mod:2004629 SWITT
WITHOUT_CLASSIFICATION	Text: take org. message; mod:20040629 SWITT
WITHOUT_CLASSIFICATION	open composer frame
WITHOUT_CLASSIFICATION	apply model
WITHOUT_CLASSIFICATION	model->view update
WITHOUT_CLASSIFICATION	get first selected message
WITHOUT_CLASSIFICATION	get headerfields
WITHOUT_CLASSIFICATION	create composer model
WITHOUT_CLASSIFICATION	->set source reference in composermodel when replying this is the original sender's message you selected and replied to
WITHOUT_CLASSIFICATION	set subject
WITHOUT_CLASSIFICATION	initialize MimeHeader as RFC822-compliant-message
WITHOUT_CLASSIFICATION	add mimepart to model
WITHOUT_CLASSIFICATION	setup to, references and account
WITHOUT_CLASSIFICATION	get mimeparts
WITHOUT_CLASSIFICATION	Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	setup charset and html
WITHOUT_CLASSIFICATION	Select the charset of the original message
WITHOUT_CLASSIFICATION	Stick with the default charset
WITHOUT_CLASSIFICATION	Quote original message - different methods for text and html
WITHOUT_CLASSIFICATION	build "quoted" message
WITHOUT_CLASSIFICATION	Text: Addition of > before each line
WITHOUT_CLASSIFICATION	->set source reference in composermodel when replying this is the original sender's message you selected and replied to
WITHOUT_CLASSIFICATION	Add addresses to the addressbook
WITHOUT_CLASSIFICATION	create In-Reply-To:, References: headerfields
WITHOUT_CLASSIFICATION	select the account this mail was received from
WITHOUT_CLASSIFICATION	Use reply-to field if given, else use from
WITHOUT_CLASSIFICATION	Set the focus to the editor pane and set cursor to the top
WITHOUT_CLASSIFICATION	Stick with the default charset
WITHOUT_CLASSIFICATION	recipient lists
WITHOUT_CLASSIFICATION	addressbook list
WITHOUT_CLASSIFICATION	action buttons for moving contacts
WITHOUT_CLASSIFICATION	labels
WITHOUT_CLASSIFICATION	models for addressbook/recipients lists
WITHOUT_CLASSIFICATION	b2.nextLine();
WITHOUT_CLASSIFICATION	comments are not displayed correctly in composer
WITHOUT_CLASSIFICATION	public IHeaderItemList[] getHeaderItemLists() { return headerItemList; }
WITHOUT_CLASSIFICATION	toListModel.clear(); ccListModel.clear(); bccListModel.clear();
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	register for changes to the editor controller.addContainerListenerForEditor(this);
WITHOUT_CLASSIFICATION	register for changes to editor type (text / html)
WITHOUT_CLASSIFICATION	CellConstraints cc = new CellConstraints();
WITHOUT_CLASSIFICATION	we generate most buttons using the actions already instanciated
WITHOUT_CLASSIFICATION	paragraphComboBox.setEnabled(enableHtml);
WITHOUT_CLASSIFICATION	builder.add(paraLabel, cc.xy(1, 7));
WITHOUT_CLASSIFICATION	builder.add(panel, cc.xy(1, 7));
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	need to change selection Set ignore flag
WITHOUT_CLASSIFICATION	clear ignore flag
WITHOUT_CLASSIFICATION	selection in the paragraph combo box
WITHOUT_CLASSIFICATION	only do something if ignore flag is not set
WITHOUT_CLASSIFICATION	set paragraph formatting according to the selection
WITHOUT_CLASSIFICATION	int selectedIndex = sizeComboBox.getSelectedIndex();
WITHOUT_CLASSIFICATION	select the "Normal" entry as default
WITHOUT_CLASSIFICATION	enable controls if we are not in html edit mode
WITHOUT_CLASSIFICATION	private JTextPane view;
WITHOUT_CLASSIFICATION	view = editor.getView();
WITHOUT_CLASSIFICATION	This doesn't handle ChangedCharsetExceptions correctly. view.setText(text);
WITHOUT_CLASSIFICATION	try again, but ignore charset specification in the html
WITHOUT_CLASSIFICATION	other IOExceptions than ChangedCharsetException
WITHOUT_CLASSIFICATION	clear existing text
WITHOUT_CLASSIFICATION	delete old contents
WITHOUT_CLASSIFICATION	if no text is specified, we are done now
WITHOUT_CLASSIFICATION	load contents into document
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	select the "Normal" entry as default
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	register for model changes to enable/disable when user switches between html or text plain mode
WITHOUT_CLASSIFICATION	register for text cursor/caret and formatting changes to select/deselect action
WITHOUT_CLASSIFICATION	register for text cursor/caret and formatting changes to select/deselect action
WITHOUT_CLASSIFICATION	view.addCaretListener(this);
WITHOUT_CLASSIFICATION	set paragraph formatting according to the given action
WITHOUT_CLASSIFICATION	Enable when implemented
WITHOUT_CLASSIFICATION	select the menu item corresponding to present format
WITHOUT_CLASSIFICATION	Update the composer
WITHOUT_CLASSIFICATION	reset
WITHOUT_CLASSIFICATION	group item
WITHOUT_CLASSIFICATION	to lower case
WITHOUT_CLASSIFICATION	compare if item starts with str
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	END public ExternalEditor()
WITHOUT_CLASSIFICATION	END public ExternalEditor(String EditorCommand)
WITHOUT_CLASSIFICATION	write text to file
WITHOUT_CLASSIFICATION	remember old font properties
WITHOUT_CLASSIFICATION	create big size font to display in the composer textfield
WITHOUT_CLASSIFICATION	execute application, enabling blocking
WITHOUT_CLASSIFICATION	rafter the user saved the file and closed the external text editor, we read the new text from the file
WITHOUT_CLASSIFICATION	set old font properties
WITHOUT_CLASSIFICATION	set new text
WITHOUT_CLASSIFICATION	END public boolean startExternalEditor()
WITHOUT_CLASSIFICATION	END public class ExternalEditor
WITHOUT_CLASSIFICATION	dialog.getContentPane().setLayout( new BoxLayout( dialog.getContentPane(), BoxLayout.Y_AXIS ) );
WITHOUT_CLASSIFICATION	centerPanel.setLayout( new BoxLayout( centerPanel, BoxLayout.Y_AXIS ) );
WITHOUT_CLASSIFICATION	TitledBorder etched = javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), " Login ");centerPanel.setBorder( etched );
WITHOUT_CLASSIFICATION	centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) );
WITHOUT_CLASSIFICATION	JPanel panel = new JPanel();panel.setLayout( new BoxLayout( panel, BoxLayout.X_AXIS ) );panel.add( hostLabel );centerPanel.add( panel );
WITHOUT_CLASSIFICATION	centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) ); centerPanel.add( Box.createRigidArea( new java.awt.Dimension(0,5) ) );
WITHOUT_CLASSIFICATION	Plain text components don't fire these events
WITHOUT_CLASSIFICATION	First print a quote
WITHOUT_CLASSIFICATION	Do we have to insert a quoteprefix?
WITHOUT_CLASSIFICATION	for each JComboBox item
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	check if the user entered valid data
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	attributPanel.add(imapPanel, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	mainConstraints.fill = GridBagConstraints.BOTH; mainConstraints.insets = new Insets(0, 0, 0, 0); mainConstraints.gridwidth = GridBagConstraints.REMAINDER; mainConstraints.weightx = 1.0; mainConstraints.weighty = 1.0;
WITHOUT_CLASSIFICATION	disable components
WITHOUT_CLASSIFICATION	update configuration
WITHOUT_CLASSIFICATION	update signature -> will notify all listeners that signature changed
WITHOUT_CLASSIFICATION	mainPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 10, 0));
WITHOUT_CLASSIFICATION	update tree label
WITHOUT_CLASSIFICATION	@author: fdietz
WITHOUT_CLASSIFICATION	notify all observers
WITHOUT_CLASSIFICATION	here)
WITHOUT_CLASSIFICATION	restart timer
WITHOUT_CLASSIFICATION	Create the file
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them
WITHOUT_CLASSIFICATION	user didn't select any folder -> make Inbox the default folder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	skip the first column
WITHOUT_CLASSIFICATION	skip the first column
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	mainConstraints.fill = GridBagConstraints.BOTH; mainConstraints.insets = new Insets(0, 0, 0, 0); mainConstraints.gridwidth = GridBagConstraints.REMAINDER; mainConstraints.weightx = 1.0; mainConstraints.weighty = 1.0;
WITHOUT_CLASSIFICATION	defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	defaultAccountCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	user didn't select any folder -> make Inbox the default folder
WITHOUT_CLASSIFICATION	Add components to the panel: builder.append(defaultAccountCheckBox, 7); builder.nextLine();
WITHOUT_CLASSIFICATION	builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	builder.setLeadingColumnOffset(1);
WITHOUT_CLASSIFICATION	builder.nextLine();
WITHOUT_CLASSIFICATION	builder.nextLine();
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	b.nextLine(); b.append(loginLabel, loginTextField);
WITHOUT_CLASSIFICATION	authenticationComboBox.addActionListener(this);
WITHOUT_CLASSIFICATION	Add previously fetch authentication modes
WITHOUT_CLASSIFICATION	Add previously fetch authentication modes
WITHOUT_CLASSIFICATION	let exception handler process other errors
WITHOUT_CLASSIFICATION	Save the authentication modes
WITHOUT_CLASSIFICATION	private ConfigFrame frame;
WITHOUT_CLASSIFICATION	disable the actionlistener for this period to avoid an unwanted port check
WITHOUT_CLASSIFICATION	reactivate
WITHOUT_CLASSIFICATION	if securest write DEFAULT
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	Update the Port
WITHOUT_CLASSIFICATION	Default Port
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	skip the first column
WITHOUT_CLASSIFICATION	skip the first column
WITHOUT_CLASSIFICATION	Add components to the panel:
WITHOUT_CLASSIFICATION	Add components to the panel:
WITHOUT_CLASSIFICATION	does not occur
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	let exception handler process other errors
WITHOUT_CLASSIFICATION	let exception handler process other errors
WITHOUT_CLASSIFICATION	Save the authentication modes
WITHOUT_CLASSIFICATION	POP3s / IMAPs
WITHOUT_CLASSIFICATION	Check for default Ports
WITHOUT_CLASSIFICATION	accountItem.getPopItem()
WITHOUT_CLASSIFICATION	private ConfigFrame frame;
WITHOUT_CLASSIFICATION	this.frame = frame;
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	3 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	b.append(selectSignatureButton);
WITHOUT_CLASSIFICATION	JPanel innerPanel = builder.getPanel(); FormDebugUtils.dumpAll(innerPanel); setLayout(new BorderLayout()); add(innerPanel, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	enableCheckBox.setEnabled(false);
WITHOUT_CLASSIFICATION	builder.append(alwaysEncryptCheckBox, 3); builder.nextLine();
WITHOUT_CLASSIFICATION	typeComboBox.setMargin( new Insets( 0,0,0,0 ) );
WITHOUT_CLASSIFICATION	pathButton.setMargin( new Insets( 0,0,0,0 ) );
WITHOUT_CLASSIFICATION	typeComboBox.setEnabled(b);
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	MUST do this for background to show up.
WITHOUT_CLASSIFICATION	top panel
WITHOUT_CLASSIFICATION	topPanel.setLayout( );
WITHOUT_CLASSIFICATION	mainPanel.add( topBorderPanel, BorderLayout.NORTH );
WITHOUT_CLASSIFICATION	c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	notify all observers
WITHOUT_CLASSIFICATION	String value = (String) theList.getSelectedValue();
WITHOUT_CLASSIFICATION	remove mail-checking stuff
WITHOUT_CLASSIFICATION	MUST do this for background to show up.
WITHOUT_CLASSIFICATION	setBorder( BorderFactory.createEmptyBorder(0,1,0,0) );
WITHOUT_CLASSIFICATION	setBorder(unselectedBorder);
WITHOUT_CLASSIFICATION	this should not happen, the templates seem to be missing
WITHOUT_CLASSIFICATION	IMAPRootFolder parentFolder = FolderFactory.getInstance() .createIMAPRootFolder(account); IMailFolder inbox = FolderFactory.getInstance() .createIMAPFolder(parentFolder, "INBOX");
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	centerpanel
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	execute the command
WITHOUT_CLASSIFICATION	top panel
WITHOUT_CLASSIFICATION	topPanel.setLayout( );
WITHOUT_CLASSIFICATION	topBorderPanel.setBorder(BorderFactory.createEmptyBorder(0, 0, 5, 0));
WITHOUT_CLASSIFICATION	c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	notify all observers
WITHOUT_CLASSIFICATION	add welcome message to new account inbox
WITHOUT_CLASSIFICATION	add account to mail-checking manager
WITHOUT_CLASSIFICATION	generally we can just use the same login for both servers
WITHOUT_CLASSIFICATION	get column of list
WITHOUT_CLASSIFICATION	find colum
WITHOUT_CLASSIFICATION	remove disabled column
WITHOUT_CLASSIFICATION	make sure this configuration is also visually working immediately
WITHOUT_CLASSIFICATION	list.repaint();
WITHOUT_CLASSIFICATION	disable selected item
WITHOUT_CLASSIFICATION	ask the user about the destination file
WITHOUT_CLASSIFICATION	get list of all folders
WITHOUT_CLASSIFICATION	get list of all selected folders
WITHOUT_CLASSIFICATION	create command reference array for the command
WITHOUT_CLASSIFICATION	TreePath path = tree.getSelectionPath();
WITHOUT_CLASSIFICATION	I need revalidate if node is root. but why?
WITHOUT_CLASSIFICATION	private AdapterNode actNode;
WITHOUT_CLASSIFICATION	private Filter filter; private JDialog dialog;
WITHOUT_CLASSIFICATION	private JButton enableButton; private JButton disableButton;
WITHOUT_CLASSIFICATION	Must go backwards or else the list will remove the wrong filters.
WITHOUT_CLASSIFICATION	private TitledBorderLabel m_titledborderlabel1 = new TitledBorderLabel(); private TitledBorderLabel m_titledborderlabel2 = new TitledBorderLabel();
WITHOUT_CLASSIFICATION	jpanel1.add(addCriteriaButton, cc.xy(1, 1));
WITHOUT_CLASSIFICATION	jpanel1.add(addActionButton, cc.xy(1, 1));
WITHOUT_CLASSIFICATION	description
WITHOUT_CLASSIFICATION	id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	cancel
WITHOUT_CLASSIFICATION	user didn't select any folder -> make Inbox the default folder
WITHOUT_CLASSIFICATION	set component values
WITHOUT_CLASSIFICATION	filter description JTextField
WITHOUT_CLASSIFICATION	all / match any JComboBox
WITHOUT_CLASSIFICATION	get values from components
WITHOUT_CLASSIFICATION	frame.listView.update();
WITHOUT_CLASSIFICATION	int type = action.getActionInt();
WITHOUT_CLASSIFICATION	maybe the plugin wasn't loaded correctly -> use default row = new MarkActionRow(this,action);
WITHOUT_CLASSIFICATION	c.gridx = GridBagConstraints.REMAINDER; c.anchor = GridBagConstraints.NORTHEAST; gridbag.setConstraints( removeButton, c ); panel.add( removeButton );
WITHOUT_CLASSIFICATION	fall-back if error occurs
WITHOUT_CLASSIFICATION	block transfer to self!
WITHOUT_CLASSIFICATION	if it is in a scroll pane, then we add to the end of the list.
WITHOUT_CLASSIFICATION	enabled/disabled
WITHOUT_CLASSIFICATION	matchComboBox.addItem("is"); matchComboBox.addItem("is not"); matchComboBox.addItem("begins with"); matchComboBox.addItem("ends with");
WITHOUT_CLASSIFICATION	Fall back to today
WITHOUT_CLASSIFICATION	textField.setText(criteria.getPattern());
WITHOUT_CLASSIFICATION	criteria.setPattern((String) textField.getText());
WITHOUT_CLASSIFICATION	Ok
WITHOUT_CLASSIFICATION	couldn't find folder associated with this uid -> open the select folder dialog
WITHOUT_CLASSIFICATION	treePathButton.setMargin(new Insets(0,0,0,0));
WITHOUT_CLASSIFICATION	use "mark as read" as default fallback mechanism
WITHOUT_CLASSIFICATION	Add the custom color item.
WITHOUT_CLASSIFICATION	String userVisibleName = pluginHandler.getUserVisibleName(id);
WITHOUT_CLASSIFICATION	private JLabel enableTextIndexingLabel;
WITHOUT_CLASSIFICATION	JCheckBox overwriteOptionsCheckBox;
WITHOUT_CLASSIFICATION	focus name textfield
WITHOUT_CLASSIFICATION	3 columns $NON-NLS-1$
WITHOUT_CLASSIFICATION	Create a FormLayout instance. $NON-NLS-1$
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	Add components to the panel:
WITHOUT_CLASSIFICATION	enableTextIndexingLabel.setEnabled(false);
WITHOUT_CLASSIFICATION	@author tstich: Added Lucene gui element here builder.add(enableTextIndexingLabel, cc.xy(2, 13));
WITHOUT_CLASSIFICATION	builder.addSeparator("Full-text indexing"); builder.add(enableLabel, cc.xywh(1, 7, 5, 1)); builder.add(enableTextIndexingCheckBox, cc.xywh(2, 9, 4, 1));
WITHOUT_CLASSIFICATION	JPanel panel= new JPanel(); panel.setLayout(new BorderLayout()); panel.add(resetButton, BorderLayout.EAST); builder.add(panel, cc.xywh(5, 7, 1, 1));
WITHOUT_CLASSIFICATION	overwriteOptionsCheckBox = new JCheckBox("Overwrite global settings"); overwriteOptionsCheckBox.addActionListener(this); overwriteOptionsCheckBox.setActionCommand("OVERWRITE");
WITHOUT_CLASSIFICATION	user changed folder name
WITHOUT_CLASSIFICATION	bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	only local folders have an full-text indexing capability
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	enable lucene search index by default $NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	c.gridwidth = GridBagConstraints.RELATIVE;
WITHOUT_CLASSIFICATION	adjust description field
WITHOUT_CLASSIFICATION	debug messages for diagnostics
WITHOUT_CLASSIFICATION	notify configuration changes listeners @see org.columba.mail.gui.table.util.MarkAsReadTimer
WITHOUT_CLASSIFICATION	notify configuration changes listeners @see org.columba.mail.gui.message.TextViewer
WITHOUT_CLASSIFICATION	send notification event @see org.columba.mail.gui.message.TextViewer
WITHOUT_CLASSIFICATION	notify listeners @see org.columba.mail.gui.composer.SubjectController
WITHOUT_CLASSIFICATION	general
WITHOUT_CLASSIFICATION	button panel
WITHOUT_CLASSIFICATION	Create a FormLayout instance.
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	skip the first column
WITHOUT_CLASSIFICATION	Add components to the panel:
WITHOUT_CLASSIFICATION	init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	notify listeners
WITHOUT_CLASSIFICATION	ask the user about the destination file
WITHOUT_CLASSIFICATION	only local folders have an full-text indexing capability
WITHOUT_CLASSIFICATION	bottom.setBorder(new SingleSideEtchedBorder(SwingConstants.TOP)); bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) ); bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	Create the closing boundary
WITHOUT_CLASSIFICATION	remove all old elements
WITHOUT_CLASSIFICATION	add new element
WITHOUT_CLASSIFICATION	cast to Local AbstractMessageFolder is safe here
WITHOUT_CLASSIFICATION	execute resyncing command
WITHOUT_CLASSIFICATION	restore settings
WITHOUT_CLASSIFICATION	re-select folder to make changes visible to the user
WITHOUT_CLASSIFICATION	create new default options
WITHOUT_CLASSIFICATION	update list view
WITHOUT_CLASSIFICATION	if size > than 1000 KB, transform to MB
WITHOUT_CLASSIFICATION	composer
WITHOUT_CLASSIFICATION	builder.nextLine();
WITHOUT_CLASSIFICATION	layout.setRowGroups(new int[][]{ {1, 3, 5, 7, 9, 11, 13, 15} });
WITHOUT_CLASSIFICATION	builder.append(spellLabel, spellButton); builder.nextLine();
WITHOUT_CLASSIFICATION	Set up color chooser for setting quoted color
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	model -> view
WITHOUT_CLASSIFICATION	view -> model
WITHOUT_CLASSIFICATION	id = org.columba.example.HelloWorld$HelloWorldPlugin
WITHOUT_CLASSIFICATION	Where, in the drag image, the mouse was clicked
WITHOUT_CLASSIFICATION	centerpanel
WITHOUT_CLASSIFICATION	top panel
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	topPanel.setLayout( );
WITHOUT_CLASSIFICATION	c.fill = GridBagConstraints.HORIZONTAL;
WITHOUT_CLASSIFICATION	3 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	get values from components
WITHOUT_CLASSIFICATION	If f==null because of deleted AbstractMessageFolder fallback to Inbox
WITHOUT_CLASSIFICATION	builder.append(showAttachmentsInlineCheckBox, 4); builder.nextLine();
WITHOUT_CLASSIFICATION	Create list of unsubscribed folders
WITHOUT_CLASSIFICATION	Deactivate this vFolder because changes are about to happen and the search needs to be redone.
WITHOUT_CLASSIFICATION	create default namespace
WITHOUT_CLASSIFICATION	Process shared namespaces
WITHOUT_CLASSIFICATION	Does the server support the namespace extension?
WITHOUT_CLASSIFICATION	Process personal namespaces
WITHOUT_CLASSIFICATION	Process other users namespaces
WITHOUT_CLASSIFICATION	Handle special case in which INBOX has a NIL delimiter -> there might exist a pseudo hierarchy under INBOX+delimiter
WITHOUT_CLASSIFICATION	Now we have the subscribed folders in subscribedFolders and the unsubscribed folders in unsubscribedFolders Next step: Create a treestructure
WITHOUT_CLASSIFICATION	INBOX is always subscribed
WITHOUT_CLASSIFICATION	bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	split the hierarchical name with at the delimiters
WITHOUT_CLASSIFICATION	Create the header of the multipart
WITHOUT_CLASSIFICATION	can be only one
WITHOUT_CLASSIFICATION	manipulateModel(TableModelPlugin.STRUCTURE_CHANGE);
WITHOUT_CLASSIFICATION	HeaderItem[] items = new HeaderItem[selection2.length]; items = selection2; HeaderItemDNDManager.getInstance().setHeaderItemList(items);
WITHOUT_CLASSIFICATION	dragSource.startDrag( event, new Cursor(Cursor.DEFAULT_CURSOR), ImageLoader.getImageIcon("contact_small","Add16").getImage(), new Point(5, 5), new StringSelection("contact"), this);
WITHOUT_CLASSIFICATION	removeElement();
WITHOUT_CLASSIFICATION	Plain text components don't fire these events
WITHOUT_CLASSIFICATION	JSCFDriverManager.registerJSCFDriver(new GPGDriver());JSCFConnection con = JSCFDriverManager.getConnection("jscf:gpg:"+pgpItem.get("path"));
WITHOUT_CLASSIFICATION	show all search results
WITHOUT_CLASSIFICATION	select search folder
WITHOUT_CLASSIFICATION	select search folder
WITHOUT_CLASSIFICATION	get selected search criteria
WITHOUT_CLASSIFICATION	create filter criteria based on selected type
WITHOUT_CLASSIFICATION	set criteria for search folder
WITHOUT_CLASSIFICATION	add search to history
WITHOUT_CLASSIFICATION	get search folder
WITHOUT_CLASSIFICATION	remove old filters
WITHOUT_CLASSIFICATION	add filter criteria
WITHOUT_CLASSIFICATION	set source folder UID
WITHOUT_CLASSIFICATION	execute custom search
WITHOUT_CLASSIFICATION	enable/disable textfield in-dependency of selected criteria
WITHOUT_CLASSIFICATION	directly execute search
WITHOUT_CLASSIFICATION	get currently selected folder
WITHOUT_CLASSIFICATION	create selection handlers
WITHOUT_CLASSIFICATION	double-click mouse listener
WITHOUT_CLASSIFICATION	table registers interest in tree selection events
WITHOUT_CLASSIFICATION	Register F2 hotkey for renaming folder when the message panel has focus
WITHOUT_CLASSIFICATION	Register F2 hotkey for renaming folder when the folder tree itself has focus
WITHOUT_CLASSIFICATION	Register Alt-Up hotkey for moving up folder when folder tree or table have focus
WITHOUT_CLASSIFICATION	Register Alt-Down hotkey for moving up folder when folder tree or table have focus
WITHOUT_CLASSIFICATION	public JComponent getContentPane() { JComponent c = super.getContentPane(); return c; }
WITHOUT_CLASSIFICATION	public IContentPane getContentPane() { return this; }
WITHOUT_CLASSIFICATION	tree selection event
WITHOUT_CLASSIFICATION	view headerlist in message list viewer
WITHOUT_CLASSIFICATION	update frame title
WITHOUT_CLASSIFICATION	show message content
WITHOUT_CLASSIFICATION	update message list view title
WITHOUT_CLASSIFICATION	simply demonstration of how to change the docking title
WITHOUT_CLASSIFICATION	get selected row
WITHOUT_CLASSIFICATION	get message node at selected row
WITHOUT_CLASSIFICATION	is the message marked as draft ?
WITHOUT_CLASSIFICATION	edit message in composer
WITHOUT_CLASSIFICATION	open message in new message-frame
WITHOUT_CLASSIFICATION	select node
WITHOUT_CLASSIFICATION	folder-based configuration
WITHOUT_CLASSIFICATION	mail folder tree
WITHOUT_CLASSIFICATION	message list
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	small icon for menu
WITHOUT_CLASSIFICATION	short cut key
WITHOUT_CLASSIFICATION	add contact to addressbook
WITHOUT_CLASSIFICATION	apply model
WITHOUT_CLASSIFICATION	Which Bodypart shall be shown? (html/plain)
WITHOUT_CLASSIFICATION	TagList tagList = new MailTagList(this); JScrollPane tagListScrollPane = new JScrollPane(tagList); tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); tagListScrollPane .setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	fire in EDT
WITHOUT_CLASSIFICATION	needs to be private so that subclasses won't forget calling fireCharsetChanged
WITHOUT_CLASSIFICATION	splitPane.setDividerSize(1); setDividerSize(5);
WITHOUT_CLASSIFICATION	this has to be set by themes setDividerSize( 5 );
WITHOUT_CLASSIFICATION	bottom.add(c, BorderLayout.CENTER);
WITHOUT_CLASSIFICATION	if necessary decrypt/verify message
WITHOUT_CLASSIFICATION	map to new reference
WITHOUT_CLASSIFICATION	notify all interested listeners
WITHOUT_CLASSIFICATION	exit immediately
WITHOUT_CLASSIFICATION	create Address from URL
WITHOUT_CLASSIFICATION	copy selected URL to clipboard as string
WITHOUT_CLASSIFICATION	putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.FOLDER_OPEN));
WITHOUT_CLASSIFICATION	putValue(LARGE_ICON, ImageLoader.getSmallIcon(IconKeys.FOLDER_OPEN));
WITHOUT_CLASSIFICATION	some server have a bogus apop try user/pass to check if the password is correct
WITHOUT_CLASSIFICATION	create empty value
WITHOUT_CLASSIFICATION	create identity value
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	putValue(LARGE_ICON, ImageLoader.getIcon(IconKeys.DOCUMENT_SAVE_AS));
WITHOUT_CLASSIFICATION	this has to be set by themes splitPane.setDividerSize( 5 );
WITHOUT_CLASSIFICATION	splitPane.resetToPreferredSizes(); hideAttachmentViewer();
WITHOUT_CLASSIFICATION	JPanel bottom = new JPanel(); bottom.setBackground(backgroundColor); bottom.setLayout(new BorderLayout());
WITHOUT_CLASSIFICATION	ensure that there is an HTML part in the email, otherwise JTextPanel throws a RuntimeException
WITHOUT_CLASSIFICATION	login and get # of messages on server
WITHOUT_CLASSIFICATION	show selected message
WITHOUT_CLASSIFICATION	clear message viewer
WITHOUT_CLASSIFICATION	Update only if the selection did not change
WITHOUT_CLASSIFICATION	display changes
WITHOUT_CLASSIFICATION	create message value
WITHOUT_CLASSIFICATION	set value
WITHOUT_CLASSIFICATION	get command reference
WITHOUT_CLASSIFICATION	get selected message UID
WITHOUT_CLASSIFICATION	get flags
WITHOUT_CLASSIFICATION	get messagecontroller of frame
WITHOUT_CLASSIFICATION	fill semantic context
WITHOUT_CLASSIFICATION	Synchronize the complete folder
WITHOUT_CLASSIFICATION	from email address
WITHOUT_CLASSIFICATION	old command-specific selection
WITHOUT_CLASSIFICATION	new selection
WITHOUT_CLASSIFICATION	abort if nothing selected
WITHOUT_CLASSIFICATION	if attachment can't be opened, save it only
WITHOUT_CLASSIFICATION	wrap with observable stream for progress bar updates
WITHOUT_CLASSIFICATION	write to temporary file
WITHOUT_CLASSIFICATION	substitute special characters like: <,>,&,\t,\n
WITHOUT_CLASSIFICATION	cancel command execution/updateGUI methods, if folder or message selection has been modified
WITHOUT_CLASSIFICATION	in case no attachment handler was executed correctly -> fall back to default handler
WITHOUT_CLASSIFICATION	rename ".part" file to destination file
WITHOUT_CLASSIFICATION	reset progress bar
WITHOUT_CLASSIFICATION	decode filename
WITHOUT_CLASSIFICATION	add message to temporary folder
WITHOUT_CLASSIFICATION	create reference to this message
WITHOUT_CLASSIFICATION	this is needed to be able to open attachments of the decrypted message
WITHOUT_CLASSIFICATION	messageController.setAttachmentSelectionReference(local);
WITHOUT_CLASSIFICATION	Check if the message still exists or has been moved by e.g. a filter
WITHOUT_CLASSIFICATION	the second child must be the encrypted message
WITHOUT_CLASSIFICATION	return null;
WITHOUT_CLASSIFICATION	just show the encrypted raw message
WITHOUT_CLASSIFICATION	if the pgp mode is active we should get the decrypted part
WITHOUT_CLASSIFICATION	check if the returned String is has a length != 0
WITHOUT_CLASSIFICATION	else we set the body to the i18n String
WITHOUT_CLASSIFICATION	construct new Message from decrypted string
WITHOUT_CLASSIFICATION	call AbstractFilter to do the tricky part
WITHOUT_CLASSIFICATION	header = (ColumbaHeader) message.getHeaderInterface();
WITHOUT_CLASSIFICATION	the first child must be the signed part
WITHOUT_CLASSIFICATION	the second child must be the pgp-signature
WITHOUT_CLASSIFICATION	make quotes font-color darkgray
WITHOUT_CLASSIFICATION	layoutComponents(isSpam);
WITHOUT_CLASSIFICATION	only show view if message is marked as spam
WITHOUT_CLASSIFICATION	get selected message
WITHOUT_CLASSIFICATION	mark as not spam
WITHOUT_CLASSIFICATION	pass command to scheduler
WITHOUT_CLASSIFICATION	register as configuration change listener
WITHOUT_CLASSIFICATION	encapsulate bodytext in html-code
WITHOUT_CLASSIFICATION	register for configuration changes
WITHOUT_CLASSIFICATION	register interest on configuratin changes
WITHOUT_CLASSIFICATION	parse for urls and substite with HTML-code
WITHOUT_CLASSIFICATION	parse for email addresses and substite with HTML-code
WITHOUT_CLASSIFICATION	parse for quotings and color the darkgray
WITHOUT_CLASSIFICATION	add smilies
WITHOUT_CLASSIFICATION	encapsulate bodytext in HTML code
WITHOUT_CLASSIFICATION	prepend
WITHOUT_CLASSIFICATION	append
WITHOUT_CLASSIFICATION	default encoding is plain
WITHOUT_CLASSIFICATION	((CharsetOwnerInterface) mediator).setCharset(charset);
WITHOUT_CLASSIFICATION	updateBackground();
WITHOUT_CLASSIFICATION	set double-click action for attachment viewer
WITHOUT_CLASSIFICATION	Display resulting MimeParts
WITHOUT_CLASSIFICATION	Get Text for Icon
WITHOUT_CLASSIFICATION	Get Tooltip for Icon
WITHOUT_CLASSIFICATION	definition of a second
WITHOUT_CLASSIFICATION	timer to use
WITHOUT_CLASSIFICATION	Singleton
WITHOUT_CLASSIFICATION	listen for configuration changes
WITHOUT_CLASSIFICATION	get interval value
WITHOUT_CLASSIFICATION	stylesheet is created dynamically because user configurable fonts are used
WITHOUT_CLASSIFICATION	enable/disable smilies configuration
WITHOUT_CLASSIFICATION	name of font
WITHOUT_CLASSIFICATION	Shall we use the HTML-IViewer?
WITHOUT_CLASSIFICATION	Which Charset shall we use ?
WITHOUT_CLASSIFICATION	Read Stream in String
WITHOUT_CLASSIFICATION	strip HTML message -> remove all HTML tags
WITHOUT_CLASSIFICATION	this is a HTML message
WITHOUT_CLASSIFICATION	Download any CIDs in the html mail
WITHOUT_CLASSIFICATION	FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	apply model
WITHOUT_CLASSIFICATION	get inbox-folder from pop3-server preferences
WITHOUT_CLASSIFICATION	XmlElement selectedBrowser = messageviewer.getElement(OptionsItem.SELECTED_BROWSER); selectedBrowser.addObserver(this);
WITHOUT_CLASSIFICATION	this is a text/plain message
WITHOUT_CLASSIFICATION	setText(body);
WITHOUT_CLASSIFICATION	remove old renderer
WITHOUT_CLASSIFICATION	init new renderer
WITHOUT_CLASSIFICATION	add new renderer
WITHOUT_CLASSIFICATION	open composer
WITHOUT_CLASSIFICATION	final URL url = extractURL(ev);
WITHOUT_CLASSIFICATION	open context-menu -> this has to happen in the awt-event dispatcher thread
WITHOUT_CLASSIFICATION	builder.setDefaultButtonBarGapBorder();
WITHOUT_CLASSIFICATION	TODO i18n "Close" button
WITHOUT_CLASSIFICATION	TODO i18n "Help" button
WITHOUT_CLASSIFICATION	scale image
WITHOUT_CLASSIFICATION	convert special characters
WITHOUT_CLASSIFICATION	buf.append("<b>" + title + "</b><br>");
WITHOUT_CLASSIFICATION	contains headerfields which are to be displayed
WITHOUT_CLASSIFICATION	TODO (@author fdietz): this should be changed into a "real" window
WITHOUT_CLASSIFICATION	top.setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	add headerfields which are about to show up
WITHOUT_CLASSIFICATION	get header from folder
WITHOUT_CLASSIFICATION	get header from folder
WITHOUT_CLASSIFICATION	transform headers if necessary
WITHOUT_CLASSIFICATION	transform headers if necessary
WITHOUT_CLASSIFICATION	transform headers if necessary
WITHOUT_CLASSIFICATION	custom headers
WITHOUT_CLASSIFICATION	TODO i18n "attachments" label
WITHOUT_CLASSIFICATION	Display resulting MimeParts
WITHOUT_CLASSIFICATION	Get Text for Icon
WITHOUT_CLASSIFICATION	Get Tooltip for Icon
WITHOUT_CLASSIFICATION	builder.setDefaultButtonBarGapBorder();
WITHOUT_CLASSIFICATION	TODO i18n "Close" button
WITHOUT_CLASSIFICATION	TODO i18n "Help" button
WITHOUT_CLASSIFICATION	scale image
WITHOUT_CLASSIFICATION	setBackground(UIManager.getColor("TextField.background"));
WITHOUT_CLASSIFICATION	substitute special characters like: <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	remove body part if already shown in text viewer
WITHOUT_CLASSIFICATION	create a view more button, responsible for opening the attachment viewer popup JButton moreButton = createAttachmentMoreButton();
WITHOUT_CLASSIFICATION	vector.add(moreButton);
WITHOUT_CLASSIFICATION	button.setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 0));
WITHOUT_CLASSIFICATION	Remove the BodyPart(s) if any
WITHOUT_CLASSIFICATION	message doesn't contain this headerfield
WITHOUT_CLASSIFICATION	headerfield is empty
WITHOUT_CLASSIFICATION	substitute special characters like: <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	substitute special characters like: <,>,&,\t,\n,"
WITHOUT_CLASSIFICATION	create search folder
WITHOUT_CLASSIFICATION	button.setOpaque(false);
WITHOUT_CLASSIFICATION	button.addMouseListener(new LinkMouseListener());
WITHOUT_CLASSIFICATION	check if a single entry is selected
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	setPreferredSize(list.getPreferredSize());
WITHOUT_CLASSIFICATION	Get all MimeParts
WITHOUT_CLASSIFICATION	Remove the BodyPart(s) if any
WITHOUT_CLASSIFICATION	create search folder
WITHOUT_CLASSIFICATION	Color backgroundColor = UIManager.getColor("TextField.background");
WITHOUT_CLASSIFICATION	button.addMouseListener(new LabelMouseListener());
WITHOUT_CLASSIFICATION	If the same message is still shown Mark it as read
WITHOUT_CLASSIFICATION	pass it along to parent frame
WITHOUT_CLASSIFICATION	public JComponent getComponent() { JPanel panel = new JPanel(); panel.setLayout(new BorderLayout()); panel.add(messageController, BorderLayout.CENTER); return panel; }
WITHOUT_CLASSIFICATION	super.dock(messageViewerDockable, IDock.REGION.CENTER);
WITHOUT_CLASSIFICATION	Current column whose tooltip is being displayed. This variable is used to minimize the calls to setToolTipText().
WITHOUT_CLASSIFICATION	Maps TableColumn objects to tooltips
WITHOUT_CLASSIFICATION	If tooltip is null, removes any tooltip text.
WITHOUT_CLASSIFICATION	Return if not clicked on any column header
WITHOUT_CLASSIFICATION	copy
WITHOUT_CLASSIFICATION	UnsupportedFlavorException, IOException
WITHOUT_CLASSIFICATION	AbstractMessageFolder destFolder = (AbstractMessageFolder) treeView .getDropTargetFolder();
WITHOUT_CLASSIFICATION	move
WITHOUT_CLASSIFICATION	load plugin handler used for the columns
WITHOUT_CLASSIFICATION	disable subject column renderer, use tree-cellrenderer instead
WITHOUT_CLASSIFICATION	tc.setCellEditor(new CustomTreeTableCellEditor());
WITHOUT_CLASSIFICATION	change subject column renderer back to default
WITHOUT_CLASSIFICATION	set name of column
WITHOUT_CLASSIFICATION	no specific renderer found -> use default renderer
WITHOUT_CLASSIFICATION	Logging.log.info("setting size =" + size);
WITHOUT_CLASSIFICATION	if there are entries in the table
WITHOUT_CLASSIFICATION	if there are entries in the table
WITHOUT_CLASSIFICATION	changing the selection to the first row
WITHOUT_CLASSIFICATION	getting the node
WITHOUT_CLASSIFICATION	getting the node
WITHOUT_CLASSIFICATION	and getting the uid for this node
WITHOUT_CLASSIFICATION	scrolling to the first row
WITHOUT_CLASSIFICATION	scrolling to the first row
WITHOUT_CLASSIFICATION	@author: fdietz never request focus requestFocus();
WITHOUT_CLASSIFICATION	expand all rows
WITHOUT_CLASSIFICATION	select all rows
WITHOUT_CLASSIFICATION	@author: fdietz never request focus requestFocus();
WITHOUT_CLASSIFICATION	scrolling to the first row scrollRectToVisible(getCellRect(row, 0, false)); requestFocus();
WITHOUT_CLASSIFICATION	don't clear selection
WITHOUT_CLASSIFICATION	init table model
WITHOUT_CLASSIFICATION	init threaded-view model
WITHOUT_CLASSIFICATION	init sorting model
WITHOUT_CLASSIFICATION	init view
WITHOUT_CLASSIFICATION	pass tree to model, used by the threaded-view
WITHOUT_CLASSIFICATION	clear model
WITHOUT_CLASSIFICATION	register interest on folder events
WITHOUT_CLASSIFICATION	Assign a tooltip for each of the columns
WITHOUT_CLASSIFICATION	column IDs are all lower case
WITHOUT_CLASSIFICATION	append "_tooltip"
WITHOUT_CLASSIFICATION	get translation
WITHOUT_CLASSIFICATION	selected rows before updating the model -> used later to restore the selection
WITHOUT_CLASSIFICATION	folder in which the update occurs
WITHOUT_CLASSIFICATION	get current selection
WITHOUT_CLASSIFICATION	update infopanel (gray panel below the toolbar) showing total/unread/recent messages count
WITHOUT_CLASSIFICATION	only update table if, this folder is the same as the currently selected
WITHOUT_CLASSIFICATION	when marking messages, don't touch selection
WITHOUT_CLASSIFICATION	re-select previous selection
WITHOUT_CLASSIFICATION	only re-select if only a single row was formerly selected
WITHOUT_CLASSIFICATION	if message was removed from JTable
WITHOUT_CLASSIFICATION	select row
WITHOUT_CLASSIFICATION	save previously selected folder options
WITHOUT_CLASSIFICATION	load options of newly selected folder
WITHOUT_CLASSIFICATION	remember previously selected folder
WITHOUT_CLASSIFICATION	enable/disable cut/copy/paste/selectall actions FocusManager.getInstance().updateActions();
WITHOUT_CLASSIFICATION	if user is currently changing selection, don't do anything -> wait until the final selection is available
WITHOUT_CLASSIFICATION	selected nodes
WITHOUT_CLASSIFICATION	expand all unread message nodes
WITHOUT_CLASSIFICATION	remove all columns from table model
WITHOUT_CLASSIFICATION	reset row height
WITHOUT_CLASSIFICATION	remove all columns for column model
WITHOUT_CLASSIFICATION	if new columns were added, we have to initialize the tooltips
WITHOUT_CLASSIFICATION	remember selected node
WITHOUT_CLASSIFICATION	repaint table header
WITHOUT_CLASSIFICATION	clear messagenode cache
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	notify observers (sorting state submenu)
WITHOUT_CLASSIFICATION	setEnabled(false);
WITHOUT_CLASSIFICATION	remember selected node
WITHOUT_CLASSIFICATION	for some weird reason the table loses its inter-cell spacing property, when changing the underlying column model -> setting this to (0,0) again
WITHOUT_CLASSIFICATION	int column = view.convertColumnIndexToModel(viewColumn); int column2 = view.convertColumnIndexToView(viewColumn);
WITHOUT_CLASSIFICATION	disable every icon -> set appropriate icon for selected column
WITHOUT_CLASSIFICATION	disable every icon -> set appropriate icon for selected column
WITHOUT_CLASSIFICATION	repaint table header
WITHOUT_CLASSIFICATION	notify the model to sort the table sorter.sort(column);
WITHOUT_CLASSIFICATION	notify the model to sort the table sorter.sort(column);
WITHOUT_CLASSIFICATION	make selected row visible again
WITHOUT_CLASSIFICATION	make selected row visible again
WITHOUT_CLASSIFICATION	putValue(LARGE_ICON, ImageLoader.getImageIcon("reply_small.png"));
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	getting last selection
WITHOUT_CLASSIFICATION	getting current uid
WITHOUT_CLASSIFICATION	getting current node (under the selection)
WITHOUT_CLASSIFICATION	getting next node
WITHOUT_CLASSIFICATION	getting from the next node the uid
WITHOUT_CLASSIFICATION	and set this to the actual ref
WITHOUT_CLASSIFICATION	check if the node is not null
WITHOUT_CLASSIFICATION	if the node is not null
WITHOUT_CLASSIFICATION	select it
WITHOUT_CLASSIFICATION	saving the last selection for the current folder
WITHOUT_CLASSIFICATION	view the message under the new node
WITHOUT_CLASSIFICATION	((MailFrameMediator) frameMediator).registerTableSelectionListener(this);
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	toolbar text
WITHOUT_CLASSIFICATION	toolbar text
WITHOUT_CLASSIFICATION	getting last selection
WITHOUT_CLASSIFICATION	getting current uid
WITHOUT_CLASSIFICATION	getting current node (under the selection)
WITHOUT_CLASSIFICATION	check if the node is not null
WITHOUT_CLASSIFICATION	if the node is not null
WITHOUT_CLASSIFICATION	select it
WITHOUT_CLASSIFICATION	saving the last selection for the current folder
WITHOUT_CLASSIFICATION	view the message under the new node
WITHOUT_CLASSIFICATION	necessary for the message-frame only
WITHOUT_CLASSIFICATION	select message in message list
WITHOUT_CLASSIFICATION	clear message list
WITHOUT_CLASSIFICATION	clear message-list selection
WITHOUT_CLASSIFICATION	clear message-viewer
WITHOUT_CLASSIFICATION	get selected stuff
WITHOUT_CLASSIFICATION	get selected stuff
WITHOUT_CLASSIFICATION	add command for execution
WITHOUT_CLASSIFICATION	add command for execution
WITHOUT_CLASSIFICATION	icon for menu
WITHOUT_CLASSIFICATION	icon for toolbar
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	set toolbar text
WITHOUT_CLASSIFICATION	getting prev node
WITHOUT_CLASSIFICATION	create new search folder, but re-use old search folder
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	get selected stuff
WITHOUT_CLASSIFICATION	get selected stuff
WITHOUT_CLASSIFICATION	add command for execution
WITHOUT_CLASSIFICATION	add command for execution
WITHOUT_CLASSIFICATION	do the search
WITHOUT_CLASSIFICATION	mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	toolbar text is usually a bit shorter ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	tooltip text ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	icons ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("redirect_small.png")); putValue(LARGE_ICON, ImageLoader.getImageIcon("redirect.png"));
WITHOUT_CLASSIFICATION	shortcut key is STRG-E ;mod: 20040629 SWITT
WITHOUT_CLASSIFICATION	icons putValue(SMALL_ICON, MailImageLoader.getIcon("email_edit.png")); putValue(LARGE_ICON, MailImageLoader.getIcon("email_edit.png"));
WITHOUT_CLASSIFICATION	putValue(SMALL_ICON, MailImageLoader.getIcon("email_open.png"));
WITHOUT_CLASSIFICATION	folder.getConfiguration().set("property", "enable_threaded_view", enableThreadedView);
WITHOUT_CLASSIFICATION	get current message list selection
WITHOUT_CLASSIFICATION	pass command to scheduler
WITHOUT_CLASSIFICATION	pass command to scheduler
WITHOUT_CLASSIFICATION	which menuitem was selected?
WITHOUT_CLASSIFICATION	add color selection to reference
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	toolbar text
WITHOUT_CLASSIFICATION	setEnabled(false);
WITHOUT_CLASSIFICATION	listen for configuration changes
WITHOUT_CLASSIFICATION	uncomment to enable action
WITHOUT_CLASSIFICATION	((MailFrameMediator) frameMediator).registerTableSelectionListener(this);
WITHOUT_CLASSIFICATION	necessary for the message-frame only
WITHOUT_CLASSIFICATION	select message in message list
WITHOUT_CLASSIFICATION	icon for menu
WITHOUT_CLASSIFICATION	icon for menu
WITHOUT_CLASSIFICATION	icon for toolbar
WITHOUT_CLASSIFICATION	icon for toolbar
WITHOUT_CLASSIFICATION	get current message list selection
WITHOUT_CLASSIFICATION	shortcut key putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_BRACELEFT, 0));
WITHOUT_CLASSIFICATION	remove color add color selection to reference
WITHOUT_CLASSIFICATION	remember search folder for "show total results" action
WITHOUT_CLASSIFICATION	register as Observer
WITHOUT_CLASSIFICATION	createSubMenu();
WITHOUT_CLASSIFICATION	20040510, karlpeder columns may be null (first time we visit a folder!?)
WITHOUT_CLASSIFICATION	all headerfields are lowercase in property file
WITHOUT_CLASSIFICATION	update(observable, null);
WITHOUT_CLASSIFICATION	update(observable, null);
WITHOUT_CLASSIFICATION	20040510, karlpeder columns may be null (first time we visit a folder!?) IDefaultItem item = new DefaultItem(xmlElement);
WITHOUT_CLASSIFICATION	Mark the messages as deleted
WITHOUT_CLASSIFICATION	-> move messages to trash
WITHOUT_CLASSIFICATION	close window
WITHOUT_CLASSIFICATION	toolbar text is usually a bit shorter
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	disable toolbar text
WITHOUT_CLASSIFICATION	get original folder
WITHOUT_CLASSIFICATION	should be virtual
WITHOUT_CLASSIFICATION	setEnabled(false);
WITHOUT_CLASSIFICATION	uncomment to enable action
WITHOUT_CLASSIFICATION	((MailFrameMediator) frameMediator).registerTableSelectionListener(this);
WITHOUT_CLASSIFICATION	get selected stuff
WITHOUT_CLASSIFICATION	add command for execution
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	get current message list selection
WITHOUT_CLASSIFICATION	get current message list selection
WITHOUT_CLASSIFICATION	get current message list selection
WITHOUT_CLASSIFICATION	pass command to scheduler
WITHOUT_CLASSIFICATION	putValue(LARGE_ICON, ImageLoader.getImageIcon("drafts-16.png"));
WITHOUT_CLASSIFICATION	trash folder is selected -> delete message
WITHOUT_CLASSIFICATION	listener updates selection status, when ever a message selection changes
WITHOUT_CLASSIFICATION	if this is a message-viewer frame viewing a message only the window should be closed, too
WITHOUT_CLASSIFICATION	putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_L, Toolkit.getDefaultToolkit().getMenuShortcutKeyMask()));
WITHOUT_CLASSIFICATION	if all messages are tagged with tag, then return true, else false
WITHOUT_CLASSIFICATION	necessary for the message-frame only
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	setEnabled(false);
WITHOUT_CLASSIFICATION	uncomment to enable action
WITHOUT_CLASSIFICATION	necessary for the message-frame only
WITHOUT_CLASSIFICATION	select message in message list
WITHOUT_CLASSIFICATION	get selected stuff
WITHOUT_CLASSIFICATION	get selected stuff
WITHOUT_CLASSIFICATION	add command for execution
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	toolbar text is usually a bit shorter
WITHOUT_CLASSIFICATION	shortcut key putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F, 0));
WITHOUT_CLASSIFICATION	select message in message list
WITHOUT_CLASSIFICATION	Shortcut key putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_BRACELEFT,0));
WITHOUT_CLASSIFICATION	( ( AbstractMailFrameController) frameMediator) .registerTableSelectionListener( this);
WITHOUT_CLASSIFICATION	20030614, karlpeder only enabled when message(s) selected
WITHOUT_CLASSIFICATION	get active charset - necessary to decode msg for saving
WITHOUT_CLASSIFICATION	view message list
WITHOUT_CLASSIFICATION	clear message list viewer
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	Register as listener to the SelectionManger to check for selection changes
WITHOUT_CLASSIFICATION	Update only if the selection did not change
WITHOUT_CLASSIFICATION	old command-specific selection
WITHOUT_CLASSIFICATION	new selection
WITHOUT_CLASSIFICATION	abort if nothing selected
WITHOUT_CLASSIFICATION	add every header from HeaderList to the table as MessageNode
WITHOUT_CLASSIFICATION	Register as SelectionListener to track the selection of the tree
WITHOUT_CLASSIFICATION	add array to vector
WITHOUT_CLASSIFICATION	fetch the headerlist
WITHOUT_CLASSIFICATION	add array to vector
WITHOUT_CLASSIFICATION	Reset the selection
WITHOUT_CLASSIFICATION	add this node to cache
WITHOUT_CLASSIFICATION	cancel command execution/updateGUI methods, if folder selection has been modified
WITHOUT_CLASSIFICATION	update treemodel
WITHOUT_CLASSIFICATION	get unique id
WITHOUT_CLASSIFICATION	remove all children from tree
WITHOUT_CLASSIFICATION	create tree structure
WITHOUT_CLASSIFICATION	add node to tree
WITHOUT_CLASSIFICATION	get header
WITHOUT_CLASSIFICATION	if no Message-Id: available create bogus
WITHOUT_CLASSIFICATION	create MessageNode
WITHOUT_CLASSIFICATION	save every MessageNode in hashmap for later reference
WITHOUT_CLASSIFICATION	the last element is the direct parent
WITHOUT_CLASSIFICATION	save every message-id in hashtable for later reference
WITHOUT_CLASSIFICATION	send from address and recipient list to SMTP server ->all addresses have to be normalized
WITHOUT_CLASSIFICATION	save every message in a list
WITHOUT_CLASSIFICATION	table is empty -> just display empty table
WITHOUT_CLASSIFICATION	for each element in the message-header-reference or in-reply-to headerfield: - find a container whose message-id matches and add message, otherwise create empty container
WITHOUT_CLASSIFICATION	has children
WITHOUT_CLASSIFICATION	check if there are messages marked as recent -> in case underline parent node
WITHOUT_CLASSIFICATION	recent found
WITHOUT_CLASSIFICATION	go through whole tree and sort the siblings after date
WITHOUT_CLASSIFICATION	observable connects the sorting table with the sort menu (View->Sort Messages)
WITHOUT_CLASSIFICATION	get a list of MessageNode objects of the first hierachy level
WITHOUT_CLASSIFICATION	do the sorting
WITHOUT_CLASSIFICATION	notify tree getRealModel().getTreeModel().nodeStructureChanged(getRootNode()); }
WITHOUT_CLASSIFICATION	define false < true
WITHOUT_CLASSIFICATION	setOpaque(true); MUST do this for background to show up.
WITHOUT_CLASSIFICATION	setOpaque(true); MUST do this for background to show up.
WITHOUT_CLASSIFICATION	use local date settings
WITHOUT_CLASSIFICATION	private Border unselectedBorder = null; private Border selectedBorder = null; private Color background; private Color foreground;
WITHOUT_CLASSIFICATION	private boolean isBordered = true;
WITHOUT_CLASSIFICATION	TreePath path = tree.getPathForRow(row);
WITHOUT_CLASSIFICATION	mark as bold if message is unseen
WITHOUT_CLASSIFICATION	mark as bold if message is unseen
WITHOUT_CLASSIFICATION	p2.setBorder(BorderFactory.createEmptyBorder(0,0,2,0));
WITHOUT_CLASSIFICATION	setBorder(UIManager.getBorder("Table.focusCellHighlightBorder"));
WITHOUT_CLASSIFICATION	setBorder(noFocusBorder);
WITHOUT_CLASSIFICATION	setForeground( Color.red );
WITHOUT_CLASSIFICATION	setText("!");
WITHOUT_CLASSIFICATION	setText("!");
WITHOUT_CLASSIFICATION	eteTextForeground( Color.blue );
WITHOUT_CLASSIFICATION	setForeground( Color.blue );
WITHOUT_CLASSIFICATION	return if selection change is in flux
WITHOUT_CLASSIFICATION	create a virtual folder with all messages holding this tag
WITHOUT_CLASSIFICATION	setForeground( Color.red ); setText("!!");
WITHOUT_CLASSIFICATION	setText("!!");
WITHOUT_CLASSIFICATION	if this is set to true, we use the local selection, instead of using the table selection
WITHOUT_CLASSIFICATION	user is still manipulating the selection
WITHOUT_CLASSIFICATION	no rows are selected
WITHOUT_CLASSIFICATION	setBackground(list.getSelectionBackground()); setForeground(list.getSelectionForeground());
WITHOUT_CLASSIFICATION	setBackground(list.getSelectionBackground()); setForeground(list.getSelectionForeground());
WITHOUT_CLASSIFICATION	do not only update the tag search result when click on a different tag, also do a refresh of the same tag when double click on it
WITHOUT_CLASSIFICATION	if there is nothing selected return
WITHOUT_CLASSIFICATION	create a virtual folder
WITHOUT_CLASSIFICATION	should be a MutableTreeNode
WITHOUT_CLASSIFICATION	skip all non-mail component items
WITHOUT_CLASSIFICATION	ensure that we are currently in the mail component
WITHOUT_CLASSIFICATION	select invisible virtual folder
WITHOUT_CLASSIFICATION	update message list
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	copy
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	now instanciate the folder classes
WITHOUT_CLASSIFICATION	get search folder
WITHOUT_CLASSIFICATION	set source folder UID
WITHOUT_CLASSIFICATION	UnsupportedFlavorException, IOException
WITHOUT_CLASSIFICATION	move
WITHOUT_CLASSIFICATION	search in subfolders recursively
WITHOUT_CLASSIFICATION	We're always doing a MOVE and this is handled in the exportDone method.
WITHOUT_CLASSIFICATION	copy CopyMessageCommand command = new CopyMessageCommand(result); CommandProcessor.getInstance().addOp(command);
WITHOUT_CLASSIFICATION	setBorder(BorderFactory.createEmptyBorder(2, 0, 2, 0));
WITHOUT_CLASSIFICATION	get configuration from tree.xml file
WITHOUT_CLASSIFICATION	expand folder
WITHOUT_CLASSIFICATION	recursivly expand all children
WITHOUT_CLASSIFICATION	Do nothing if we are hovering over the root node
WITHOUT_CLASSIFICATION	view.setLeadSelectionPath(path); view.setAnchorSelectionPath(path);
WITHOUT_CLASSIFICATION	save expanded state
WITHOUT_CLASSIFICATION	save expanded state
WITHOUT_CLASSIFICATION	no sorting
WITHOUT_CLASSIFICATION	safe to cast to IMailFolder here, because only those are visible to the user
WITHOUT_CLASSIFICATION	create temporary folder in "<your-config-folder>/mail/"
WITHOUT_CLASSIFICATION	i18n stuff
WITHOUT_CLASSIFICATION	warn user
WITHOUT_CLASSIFICATION	warn user in any other cases
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	icons
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	parent directory for mail folders for example: ".columba/mail/"
WITHOUT_CLASSIFICATION	icons putValue(SMALL_ICON, ImageLoader.getIcon("folder_delete.png")); putValue(LARGE_ICON, ImageLoader.getIcon("folder_delete.png"));
WITHOUT_CLASSIFICATION	Note: we negate the expanded state because this is a will-expand/collapse listener
WITHOUT_CLASSIFICATION	register at shutdownmanager -> when closing Columba, this will automatically save all folder data
WITHOUT_CLASSIFICATION	icon for menu putValue(SMALL_ICON, ImageLoader .getSmallImageIcon("16_configure_folder.png"));
WITHOUT_CLASSIFICATION	it is safe here to cast to AbstractMailFrameControlller
WITHOUT_CLASSIFICATION	calculate mailbox size in background worker
WITHOUT_CLASSIFICATION	cast to Folder
WITHOUT_CLASSIFICATION	only use the first selected folder
WITHOUT_CLASSIFICATION	set parent folder uid
WITHOUT_CLASSIFICATION	ok pressed
WITHOUT_CLASSIFICATION	ok pressed
WITHOUT_CLASSIFICATION	open search dialog
WITHOUT_CLASSIFICATION	cancel pressed
WITHOUT_CLASSIFICATION	select folder again after move operation
WITHOUT_CLASSIFICATION	-> uncomment to enable/disable action
WITHOUT_CLASSIFICATION	((MailFrameController) frameMediator).registerTreeSelectionListener( this);
WITHOUT_CLASSIFICATION	we are done - clear status text with a delay (if this is not done, the initial text will stay in case no messages were sent)
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	button panel
WITHOUT_CLASSIFICATION	create EmptyBorder between components and dialog-frame
WITHOUT_CLASSIFICATION	init bottom panel with OK, Cancel buttons
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	shortcut key
WITHOUT_CLASSIFICATION	select folder again after move operation
WITHOUT_CLASSIFICATION	select node in JTree
WITHOUT_CLASSIFICATION	implement this
WITHOUT_CLASSIFICATION	show error message
WITHOUT_CLASSIFICATION	icon putValue(SMALL_ICON, ImageLoader .getSmallImageIcon("apply-filters-16.png"));
WITHOUT_CLASSIFICATION	BUGFIX but don't know why that bug occurs
WITHOUT_CLASSIFICATION	Folder folder = (AbstractMessageFolder) r[0].getFolder();
WITHOUT_CLASSIFICATION	MailInterface.treeModel.nodeStructureChanged(parentFolder);
WITHOUT_CLASSIFICATION	get global sorting state
WITHOUT_CLASSIFICATION	try to set selection
WITHOUT_CLASSIFICATION	layout center panel
WITHOUT_CLASSIFICATION	apply sorting state
WITHOUT_CLASSIFICATION	Init components
WITHOUT_CLASSIFICATION	We have a special Command for VFolders
WITHOUT_CLASSIFICATION	sorting is enabled
WITHOUT_CLASSIFICATION	if the character / is found shows the user a error message
WITHOUT_CLASSIFICATION	sorting is disabled
WITHOUT_CLASSIFICATION	RIYAD: Even though we don't do anything with this value, what it is doing is setting up the selection colors and such as implemented per the default cell rendered.
WITHOUT_CLASSIFICATION	If no exception happened we have successfully logged in
WITHOUT_CLASSIFICATION	successfully connected and autenthenticated to SMTP server
WITHOUT_CLASSIFICATION	ok pressed
WITHOUT_CLASSIFICATION	cancel pressed
WITHOUT_CLASSIFICATION	get global sorting state
WITHOUT_CLASSIFICATION	If it isnt a message folder, then it must be a root, and those should not be sorted.
WITHOUT_CLASSIFICATION	If the tree is in a DND action then we dont need to update all listeners, since this only a temporary folder selection.
WITHOUT_CLASSIFICATION	skip the first column builder.setLeadingColumnOffset(1); Add components to the panel:
WITHOUT_CLASSIFICATION	sorting is enabled
WITHOUT_CLASSIFICATION	apply sorting state
WITHOUT_CLASSIFICATION	sorting is disabled
WITHOUT_CLASSIFICATION	setting default Values setFont(plainFont); setToolTipText("");
WITHOUT_CLASSIFICATION	getting folder info
WITHOUT_CLASSIFICATION	get folder item configuration
WITHOUT_CLASSIFICATION	set tooltip text
WITHOUT_CLASSIFICATION	set label text
WITHOUT_CLASSIFICATION	set label text
WITHOUT_CLASSIFICATION	name of folder
WITHOUT_CLASSIFICATION	append unseen count to folder name
WITHOUT_CLASSIFICATION	if IMAP selectable folder
WITHOUT_CLASSIFICATION	if mediator contains a sortable treemodel
WITHOUT_CLASSIFICATION	default selection is local Inbox
WITHOUT_CLASSIFICATION	add selection listener
WITHOUT_CLASSIFICATION	name = textField.getText();
WITHOUT_CLASSIFICATION	Constants...
WITHOUT_CLASSIFICATION	Member variables...
WITHOUT_CLASSIFICATION	Set the width, height and image type
WITHOUT_CLASSIFICATION	Create a graphics context for this buffered image
WITHOUT_CLASSIFICATION	SystemColor.controlLtHighlight,
WITHOUT_CLASSIFICATION	The type of DnD object being dragged...
WITHOUT_CLASSIFICATION	Transferable interface methods...
WITHOUT_CLASSIFICATION	DataFlavor.javaJVMLocalObjectMimeType))
WITHOUT_CLASSIFICATION	create message
WITHOUT_CLASSIFICATION	convert to inputstream
WITHOUT_CLASSIFICATION	result.append(", ");
WITHOUT_CLASSIFICATION	don't care
WITHOUT_CLASSIFICATION	bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	bottom.add( Box.createHorizontalGlue() );
WITHOUT_CLASSIFICATION	if IMAP selectable folder -> lightgray font color and italic
WITHOUT_CLASSIFICATION	draw folder name and unseen count -> using bold font
WITHOUT_CLASSIFICATION	append recent message count -> using blue font
WITHOUT_CLASSIFICATION	tstich: Someone added <html> tags here. This is not the right place!
WITHOUT_CLASSIFICATION	only update if timestamp is equal
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getDelimiter()
WITHOUT_CLASSIFICATION	implemented for completeness. Time-out for clearing text is ignored here.
WITHOUT_CLASSIFICATION	case WorkerStatusChangedEvent.FINISHED : setVisible(false); break;
WITHOUT_CLASSIFICATION	send cancel event to worker
WITHOUT_CLASSIFICATION	private JFrame frame;
WITHOUT_CLASSIFICATION	private JTextField loginTextField;
WITHOUT_CLASSIFICATION	bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) );
WITHOUT_CLASSIFICATION	bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	JButton[] buttons = new JButton[2];
WITHOUT_CLASSIFICATION	user = loginTextField.getText();
WITHOUT_CLASSIFICATION	loginMethod = (String) loginMethodComboBox.getSelectedItem();
WITHOUT_CLASSIFICATION	bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) );
WITHOUT_CLASSIFICATION	bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	create IMAP protocol
WITHOUT_CLASSIFICATION	register interest on status updates
WITHOUT_CLASSIFICATION	try to determine delimiter
WITHOUT_CLASSIFICATION	open a port to the server
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	reopen the port
WITHOUT_CLASSIFICATION	reopen the port
WITHOUT_CLASSIFICATION	shall we switch to SSL?
WITHOUT_CLASSIFICATION	if CAPA was not support just give it a try...
WITHOUT_CLASSIFICATION	CAPAs say that SSL is not supported
WITHOUT_CLASSIFICATION	Just use the default as fallback
WITHOUT_CLASSIFICATION	LOGIN is always supported
WITHOUT_CLASSIFICATION	private JComboBox loginMethodComboBox; String loginMethod;
WITHOUT_CLASSIFICATION	AUTH?
WITHOUT_CLASSIFICATION	Used to control the state in which the automatic updated mechanism is
WITHOUT_CLASSIFICATION	Login loop until authenticated
WITHOUT_CLASSIFICATION	combine them to one string
WITHOUT_CLASSIFICATION	CAPA not supported
WITHOUT_CLASSIFICATION	remove the 'AUTH='
WITHOUT_CLASSIFICATION	Show the password dialog
WITHOUT_CLASSIFICATION	On the first try check if we need to show the password dialog -> not necessary when password was stored
WITHOUT_CLASSIFICATION	Try to get Password from Configuration
WITHOUT_CLASSIFICATION	ensure that we are logged in already
WITHOUT_CLASSIFICATION	User cancelled authentication
WITHOUT_CLASSIFICATION	User pressed OK
WITHOUT_CLASSIFICATION	AUTH
WITHOUT_CLASSIFICATION	Save or Clear the password in the configuration
WITHOUT_CLASSIFICATION	From this point we have a username and password from configuration of from the dialog
WITHOUT_CLASSIFICATION	Convert to a MailboxStatus
WITHOUT_CLASSIFICATION	login failed?
WITHOUT_CLASSIFICATION	Here we get the new mailboxinfo for the folder
WITHOUT_CLASSIFICATION	if mailbox is not already selected select it
WITHOUT_CLASSIFICATION	Set the readOnly flag
WITHOUT_CLASSIFICATION	delete any cached information
WITHOUT_CLASSIFICATION	if none selected select this folder instead of getting the status
WITHOUT_CLASSIFICATION	No response means zero!
WITHOUT_CLASSIFICATION	make sure we are already logged in
WITHOUT_CLASSIFICATION	-> get source reference of message when replying this is the original sender's message you selected and replied to
WITHOUT_CLASSIFICATION	make sure we are already logged in
WITHOUT_CLASSIFICATION	close the mailbox if it is selected
WITHOUT_CLASSIFICATION	make sure we are logged in
WITHOUT_CLASSIFICATION	concate the full name of the new mailbox
WITHOUT_CLASSIFICATION	check if the mailbox already exists -> subscribe only
WITHOUT_CLASSIFICATION	set the attachment flag
WITHOUT_CLASSIFICATION	If no exception happened we have successfully logged in
WITHOUT_CLASSIFICATION	load database from file
WITHOUT_CLASSIFICATION	If the cause is a IMAPExcpetion then only password wrong else bogus authentication mechanism
WITHOUT_CLASSIFICATION	We don't need to issue a additional NOOP here since the ensureLogin() call above ensures also the correct Status in a MIN_IDLE interval timeframe.
WITHOUT_CLASSIFICATION	Some error in the client/server communication --> fall back to default login process
WITHOUT_CLASSIFICATION	make sure we are already logged in
WITHOUT_CLASSIFICATION	This exception is not because wrong username or password
WITHOUT_CLASSIFICATION	make sure we are already logged in
WITHOUT_CLASSIFICATION	Sync subscribed folders if this is the first login in this session
WITHOUT_CLASSIFICATION	make sure we are already logged in
WITHOUT_CLASSIFICATION	make sure we are already logged in
WITHOUT_CLASSIFICATION	subscribe to the new mailbox
WITHOUT_CLASSIFICATION	create the mailbox on the server
WITHOUT_CLASSIFICATION	divide in packs
WITHOUT_CLASSIFICATION	the UIDS start UIDNext till UIDNext + uids.length
WITHOUT_CLASSIFICATION	make sure this mailbox is selected
WITHOUT_CLASSIFICATION	update the progress
WITHOUT_CLASSIFICATION	update the progress
WITHOUT_CLASSIFICATION	update the progress
WITHOUT_CLASSIFICATION	update the progress
WITHOUT_CLASSIFICATION	dont forget the rest
WITHOUT_CLASSIFICATION	store the intermediate results in a list
WITHOUT_CLASSIFICATION	get list of user-defined headerfields
WITHOUT_CLASSIFICATION	Combine the results in one array
WITHOUT_CLASSIFICATION	add it to the headerlist
WITHOUT_CLASSIFICATION	make sure that we have a Message-ID
WITHOUT_CLASSIFICATION	One or many arguments?
WITHOUT_CLASSIFICATION	Entry does not exist on server -> add nothing
WITHOUT_CLASSIFICATION	Now the state of the procotol is more certain correct
WITHOUT_CLASSIFICATION	One is the easiest case
WITHOUT_CLASSIFICATION	update this point of time as last communication since every functio calls this before communicating with the server
WITHOUT_CLASSIFICATION	AFTER
WITHOUT_CLASSIFICATION	Use a caching mechanism for this
WITHOUT_CLASSIFICATION	AND or OR ? -> AND is implicit, OR must be specified
WITHOUT_CLASSIFICATION	something else is wrong
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	non-ascii
WITHOUT_CLASSIFICATION	AND : simply create a list of arguments
WITHOUT_CLASSIFICATION	OR : the arguments must be glued by a OR SearchKey
WITHOUT_CLASSIFICATION	Also set the delimiter
WITHOUT_CLASSIFICATION	contains not
WITHOUT_CLASSIFICATION	contains not
WITHOUT_CLASSIFICATION	contains not
WITHOUT_CLASSIFICATION	contains not
WITHOUT_CLASSIFICATION	contains not
WITHOUT_CLASSIFICATION	contains not
WITHOUT_CLASSIFICATION	contains not
WITHOUT_CLASSIFICATION	split key/value pairs
WITHOUT_CLASSIFICATION	Show first time Account Wizard
WITHOUT_CLASSIFICATION	get inputstream of message body
WITHOUT_CLASSIFICATION	account ID
WITHOUT_CLASSIFICATION	account ID
WITHOUT_CLASSIFICATION	restart timer
WITHOUT_CLASSIFICATION	remove all items
WITHOUT_CLASSIFICATION	If this also does not work -> fall back to no charset specified
WITHOUT_CLASSIFICATION	recreate menu
WITHOUT_CLASSIFICATION	calculate rest
WITHOUT_CLASSIFICATION	offline -> go online
WITHOUT_CLASSIFICATION	private POP3ServerCollection popServer;
WITHOUT_CLASSIFICATION	get list of all accounts
WITHOUT_CLASSIFICATION	register interest on account changes
WITHOUT_CLASSIFICATION	menuitem/toolbar button action
WITHOUT_CLASSIFICATION	for each account that is enabled and in the fetchalllist
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	for each account
WITHOUT_CLASSIFICATION	for each account
WITHOUT_CLASSIFICATION	system peep on new messages
WITHOUT_CLASSIFICATION	system beep
WITHOUT_CLASSIFICATION	found matching account
WITHOUT_CLASSIFICATION	remove whitespaces
WITHOUT_CLASSIFICATION	remove this account
WITHOUT_CLASSIFICATION	generate label for menuitem
WITHOUT_CLASSIFICATION	check if we are online
WITHOUT_CLASSIFICATION	new message
WITHOUT_CLASSIFICATION	recreate name of menuitem
WITHOUT_CLASSIFICATION	timer action
WITHOUT_CLASSIFICATION	only do checking if we are in online state
WITHOUT_CLASSIFICATION	found new message
WITHOUT_CLASSIFICATION	remove whitespaces
WITHOUT_CLASSIFICATION	Check Internet Connection
WITHOUT_CLASSIFICATION	check if the optional value exists
WITHOUT_CLASSIFICATION	uid = o;
WITHOUT_CLASSIFICATION	new NewMessageAction().actionPerformed(null);
WITHOUT_CLASSIFICATION	Activate all Virtual Folders
WITHOUT_CLASSIFICATION	Check default mail client
WITHOUT_CLASSIFICATION	We save only the first item in the cc-list
WITHOUT_CLASSIFICATION	remove leading or trailing whitespaces
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	skip
WITHOUT_CLASSIFICATION	Check if Columba is the default mail client
WITHOUT_CLASSIFICATION	message colour should be black as default
WITHOUT_CLASSIFICATION	Copy the commandline from the client info to the Classes mailto entry
WITHOUT_CLASSIFICATION	We save only the first item in the to-list
WITHOUT_CLASSIFICATION	use default account
WITHOUT_CLASSIFICATION	Remote double-quotes
WITHOUT_CLASSIFICATION	Create a emtpy header an back off
WITHOUT_CLASSIFICATION	Create a emtpy header an back off
WITHOUT_CLASSIFICATION	Remove the ending separator and whitespace, if any exist
WITHOUT_CLASSIFICATION	do the parsing
WITHOUT_CLASSIFICATION	the next token is an token with the whole Mailaddress
WITHOUT_CLASSIFICATION	Remove the double-quote characters from around the addresses in the string
WITHOUT_CLASSIFICATION	If address contains a comma, enclose the display name portion in double-quotes
WITHOUT_CLASSIFICATION	Convert to MessageOptions
WITHOUT_CLASSIFICATION	found contact item in contact component
WITHOUT_CLASSIFICATION	check if its a group item
WITHOUT_CLASSIFICATION	the first token is irrelevant
WITHOUT_CLASSIFICATION	The Stream finished before the header was completely read!
WITHOUT_CLASSIFICATION	just look if the first character alrady an < so can use this mailaddress as the correct address
WITHOUT_CLASSIFICATION	due to bug CA-174 changed: return EMAIL_PATTERN.matcher(s).replaceAll("<A HREF=\"mailto:$1\">$1</A>");
WITHOUT_CLASSIFICATION	\\b Start at word boundary ((\\w(:\\S)?@)? [user:[pass]]@ - Constructprot + ": protocol and : ["+any+"] match literaly anything... ) (?=\\s|$) ...until we find whitespace or end of String
WITHOUT_CLASSIFICATION	The form of the entities must be a regexp!
WITHOUT_CLASSIFICATION	initial check of input:
WITHOUT_CLASSIFICATION	initial check of input:
WITHOUT_CLASSIFICATION	remove header
WITHOUT_CLASSIFICATION	remove extra whitespace
WITHOUT_CLASSIFICATION	replace br, p and heading tags with newlines
WITHOUT_CLASSIFICATION	strip remaining tags
WITHOUT_CLASSIFICATION	tag stripping can leave some double spaces at line beginnings
WITHOUT_CLASSIFICATION	replace <br> and </br> with newline
WITHOUT_CLASSIFICATION	replace </p> with double newline
WITHOUT_CLASSIFICATION	strip tags
WITHOUT_CLASSIFICATION	First replace all special entities
WITHOUT_CLASSIFICATION	replace the other entities
WITHOUT_CLASSIFICATION	Convert 4 WS in a row to a tab
WITHOUT_CLASSIFICATION	stripHtmlTags called with true ~ p & br => newlines
WITHOUT_CLASSIFICATION	insert surrounding html tags
WITHOUT_CLASSIFICATION	sb.append("&nbsp;");
WITHOUT_CLASSIFICATION	error
WITHOUT_CLASSIFICATION	error
WITHOUT_CLASSIFICATION	20030623, karlpeder " and space handled also
WITHOUT_CLASSIFICATION	Check for missing <html> tag
WITHOUT_CLASSIFICATION	Check for missing </html> tag
WITHOUT_CLASSIFICATION	remove characters after </html> tag
WITHOUT_CLASSIFICATION	Do not take existing link tags into account
WITHOUT_CLASSIFICATION	found an url with links - is it the same?
WITHOUT_CLASSIFICATION	initialisation
WITHOUT_CLASSIFICATION	current position in s
WITHOUT_CLASSIFICATION	an email adress was found - check whether its already a link
WITHOUT_CLASSIFICATION	found an email address with links - is it the same?
WITHOUT_CLASSIFICATION	same email adress - just append and continue
WITHOUT_CLASSIFICATION	already handled
WITHOUT_CLASSIFICATION	already handled
WITHOUT_CLASSIFICATION	not the same
WITHOUT_CLASSIFICATION	not the same
WITHOUT_CLASSIFICATION	no match with mailto link tags
WITHOUT_CLASSIFICATION	found an open link
WITHOUT_CLASSIFICATION	check if it is closed
WITHOUT_CLASSIFICATION	if the closing mark is after the s1 mark do not insert a link
WITHOUT_CLASSIFICATION	shall we insert a link?
WITHOUT_CLASSIFICATION	no more matches - append rest of string
WITHOUT_CLASSIFICATION	no more matches - append rest of string
WITHOUT_CLASSIFICATION	return result
WITHOUT_CLASSIFICATION	return result
WITHOUT_CLASSIFICATION	Test if there is a trailing html tag
WITHOUT_CLASSIFICATION	an url - check whether its already a link
WITHOUT_CLASSIFICATION	locate body start- and end tags
WITHOUT_CLASSIFICATION	no match with link tags
WITHOUT_CLASSIFICATION	same url - just append and continue
WITHOUT_CLASSIFICATION	search for closing bracket separately to account for attributes in tag
WITHOUT_CLASSIFICATION	correct limits if body tags where not found
WITHOUT_CLASSIFICATION	return body
WITHOUT_CLASSIFICATION	remove comments
WITHOUT_CLASSIFICATION	Create boundary to separate the mime-parts
WITHOUT_CLASSIFICATION	Create the header and body of the multipart
WITHOUT_CLASSIFICATION	Add the MimePart that will be signed
WITHOUT_CLASSIFICATION	Add the signature
WITHOUT_CLASSIFICATION	set the attachment flag
WITHOUT_CLASSIFICATION	Create boundary to separate the mime-parts
WITHOUT_CLASSIFICATION	Add pgp-specific content-parameters we take as default hash-algo SHA1
WITHOUT_CLASSIFICATION	Create the closing boundary
WITHOUT_CLASSIFICATION	loop until signing was sucessful or the user cancels the passphrase dialog
WITHOUT_CLASSIFICATION	save passphrase in hash map
WITHOUT_CLASSIFICATION	at the moment we are only supporting gpg. So let us code hard here the gpg driver
WITHOUT_CLASSIFICATION	let us hard coding the gpg for each connection. Later we should support also other variants (like smime)
WITHOUT_CLASSIFICATION	getting the path to gpg
WITHOUT_CLASSIFICATION	Add pgp-specific content-parameters
WITHOUT_CLASSIFICATION	Add the ControlMimePart
WITHOUT_CLASSIFICATION	Add the encrypted MimePart
WITHOUT_CLASSIFICATION	con.getProperties().put("USERID", pgpItem.get("id"));
WITHOUT_CLASSIFICATION	notifyListeners(new ModelChangedEvent(ModelChangedEvent.ADDED, server));
WITHOUT_CLASSIFICATION	notifyListeners(new ModelChangedEvent(ModelChangedEvent.REMOVED));
WITHOUT_CLASSIFICATION	Get the uids from the headercache
WITHOUT_CLASSIFICATION	Get the list of the uids on the server Important: Use a clone of the List since we must not change it!
WITHOUT_CLASSIFICATION	substract the uids that we already downloaded -> newUids contains all uids to fetch from the server
WITHOUT_CLASSIFICATION	substract the uids on the server from the downloaded uids -> headerUids are the uids that have been removed from the server
WITHOUT_CLASSIFICATION	update the cache
WITHOUT_CLASSIFICATION	return the uids that are new
WITHOUT_CLASSIFICATION	set dirty flag
WITHOUT_CLASSIFICATION	Message already deleted from server
WITHOUT_CLASSIFICATION	Store the complete stream in a source so that we can parse it
WITHOUT_CLASSIFICATION	set headercache dirty flag
WITHOUT_CLASSIFICATION	add status information observable
WITHOUT_CLASSIFICATION	ok pressed
WITHOUT_CLASSIFICATION	open a port to the server
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	reopen the port
WITHOUT_CLASSIFICATION	reopen the port
WITHOUT_CLASSIFICATION	shall we switch to SSL?
WITHOUT_CLASSIFICATION	if CAPA was not support just give it a try...
WITHOUT_CLASSIFICATION	CAPAs say that SSL is not supported
WITHOUT_CLASSIFICATION	AUTH?
WITHOUT_CLASSIFICATION	CAPA not supported
WITHOUT_CLASSIFICATION	Just use the default as fallback
WITHOUT_CLASSIFICATION	AUTH
WITHOUT_CLASSIFICATION	If the cause is a IMAPExcpetion then only password wrong else bogus authentication mechanism
WITHOUT_CLASSIFICATION	Some error in the client/server communication --> fall back to default login process
WITHOUT_CLASSIFICATION	fill with nulls
WITHOUT_CLASSIFICATION	put size at the specified place
WITHOUT_CLASSIFICATION	user/pass worked -> this is indeed a bogus server.
WITHOUT_CLASSIFICATION	USER/PASS is always supported
WITHOUT_CLASSIFICATION	APOP?
WITHOUT_CLASSIFICATION	APOP not supported
WITHOUT_CLASSIFICATION	register interest on status bar information
WITHOUT_CLASSIFICATION	synchronize local UID list with server UID list
WITHOUT_CLASSIFICATION	only download new messages
WITHOUT_CLASSIFICATION	Delete old message from server if the feature is enabled
WITHOUT_CLASSIFICATION	logout cleanly
WITHOUT_CLASSIFICATION	display downloaded message count in statusbar
WITHOUT_CLASSIFICATION	get inbox-folder from pop3-server preferences
WITHOUT_CLASSIFICATION	clear statusbar message
WITHOUT_CLASSIFICATION	clear statusbar message
WITHOUT_CLASSIFICATION	always enable the menuitem again r[0].getPOP3ServerController().enableActions(true);
WITHOUT_CLASSIFICATION	important for cancel
WITHOUT_CLASSIFICATION	download message
WITHOUT_CLASSIFICATION	not needed anymore
WITHOUT_CLASSIFICATION	try to authenticate
WITHOUT_CLASSIFICATION	message belongs to which account?
WITHOUT_CLASSIFICATION	if spam filter is not enabled -> return
WITHOUT_CLASSIFICATION	move message to trash
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	display status message
WITHOUT_CLASSIFICATION	remove old filters
WITHOUT_CLASSIFICATION	add filter criteria
WITHOUT_CLASSIFICATION	set source folder UID
WITHOUT_CLASSIFICATION	search in subfolders recursively
WITHOUT_CLASSIFICATION	NOTE if SSL is possible we just need the plain login since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	server message numbers start with 1 whereas List numbers start with 0 -> always increase fetch number
WITHOUT_CLASSIFICATION	which UID should be downloaded next
WITHOUT_CLASSIFICATION	check if message isn't too big to download
WITHOUT_CLASSIFICATION	if message-size is bigger skip download of this message
WITHOUT_CLASSIFICATION	now download the message
WITHOUT_CLASSIFICATION	delete message from server
WITHOUT_CLASSIFICATION	synchronize local UID-list with server
WITHOUT_CLASSIFICATION	mark message as recent
WITHOUT_CLASSIFICATION	apply spam filter
WITHOUT_CLASSIFICATION	apply filter on message
WITHOUT_CLASSIFICATION	score message and mark as "spam" or "not spam"
WITHOUT_CLASSIFICATION	is message marked as spam
WITHOUT_CLASSIFICATION	create search folder
WITHOUT_CLASSIFICATION	create search folder
WITHOUT_CLASSIFICATION	check if string is a number
WITHOUT_CLASSIFICATION	create search criteria
WITHOUT_CLASSIFICATION	remember request id for "search in results"
WITHOUT_CLASSIFICATION	remove memorized search folders
WITHOUT_CLASSIFICATION	searchFolders.remove(searchRequestId);
WITHOUT_CLASSIFICATION	use local date settings
WITHOUT_CLASSIFICATION	ensure that we are currently in the mail component
WITHOUT_CLASSIFICATION	select invisible virtual folder
WITHOUT_CLASSIFICATION	update message list
WITHOUT_CLASSIFICATION	create search criteria
WITHOUT_CLASSIFICATION	remember request id for "search in results"
WITHOUT_CLASSIFICATION	return empty result, in case the criteria doesn't match the search term
WITHOUT_CLASSIFICATION	create virtual folder for criteria
WITHOUT_CLASSIFICATION	get first one
WITHOUT_CLASSIFICATION	do the search
WITHOUT_CLASSIFICATION	retrieve the actual search result data
WITHOUT_CLASSIFICATION	retrieve the actual search result data
WITHOUT_CLASSIFICATION	sort all the results
WITHOUT_CLASSIFICATION	sort all the results
WITHOUT_CLASSIFICATION	remember search folder for "show total results" action
WITHOUT_CLASSIFICATION	memorize total result count
WITHOUT_CLASSIFICATION	memorize total result count
WITHOUT_CLASSIFICATION	remove all memorized search folders
WITHOUT_CLASSIFICATION	create virtual folder for each criteria
WITHOUT_CLASSIFICATION	ensure we are in existing result range
WITHOUT_CLASSIFICATION	gather result results
WITHOUT_CLASSIFICATION	if complex use the last search folder
WITHOUT_CLASSIFICATION	initialise protocol layer
WITHOUT_CLASSIFICATION	Start login procedure
WITHOUT_CLASSIFICATION	Init Values user's email address
WITHOUT_CLASSIFICATION	no esmtp - use POP3-before-SMTP instead
WITHOUT_CLASSIFICATION	ask password from user
WITHOUT_CLASSIFICATION	display status message
WITHOUT_CLASSIFICATION	turn off SSL for the future
WITHOUT_CLASSIFICATION	NOTE if SSL is possible we just need the plain login since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	offline -> go online
WITHOUT_CLASSIFICATION	there seems to be no username set in the smtp-options -> use username from pop3 or imap options
WITHOUT_CLASSIFICATION	Authentication is not supported
WITHOUT_CLASSIFICATION	Turn off authentication for the future
WITHOUT_CLASSIFICATION	Some error in the client/server communication --> fall back to default login process
WITHOUT_CLASSIFICATION	authentication was successful -> save name/password
WITHOUT_CLASSIFICATION	Add a default PLAIN login as fallback
WITHOUT_CLASSIFICATION	EHLO not supported -> AUTH not supported
WITHOUT_CLASSIFICATION	Fallback to Securest Login method
WITHOUT_CLASSIFICATION	No Authentication available
WITHOUT_CLASSIFICATION	Close Port
WITHOUT_CLASSIFICATION	now send message source
WITHOUT_CLASSIFICATION	icon
WITHOUT_CLASSIFICATION	shortcut key no shortcut here, because F10 conflicts with system accelerator key putValue(ACCELERATOR_KEY, KeyStroke.getKeyStroke(KeyEvent.VK_F10, 0));
WITHOUT_CLASSIFICATION	check if we are online
WITHOUT_CLASSIFICATION	get outbox folder
WITHOUT_CLASSIFICATION	create referenc
WITHOUT_CLASSIFICATION	start command
WITHOUT_CLASSIFICATION	get Outbox folder from reference
WITHOUT_CLASSIFICATION	get UID list of messages
WITHOUT_CLASSIFICATION	send all messages
WITHOUT_CLASSIFICATION	get account information from message
WITHOUT_CLASSIFICATION	use the default account
WITHOUT_CLASSIFICATION	skip message if there's no account available to send it
WITHOUT_CLASSIFICATION	Sent folder
WITHOUT_CLASSIFICATION	open connection to SMTP server
WITHOUT_CLASSIFICATION	move all successfully send messages to the Sent folder
WITHOUT_CLASSIFICATION	start move command
WITHOUT_CLASSIFICATION	validate command parameters. At the moment only checks if there are any invalid email addresses
WITHOUT_CLASSIFICATION	mark message as answered
WITHOUT_CLASSIFICATION	close composer view
WITHOUT_CLASSIFICATION	important for cancel
WITHOUT_CLASSIFICATION	not needed anymore
WITHOUT_CLASSIFICATION	String invalidRecipient = null;
WITHOUT_CLASSIFICATION	get composer controller -> get all the account information from the controller
WITHOUT_CLASSIFICATION	sent folder
WITHOUT_CLASSIFICATION	get the SendableMessage object
WITHOUT_CLASSIFICATION	compose the message suitable for sending
WITHOUT_CLASSIFICATION	user cancelled sending operation open composer view
WITHOUT_CLASSIFICATION	open composer view
WITHOUT_CLASSIFICATION	open connection
WITHOUT_CLASSIFICATION	send message
WITHOUT_CLASSIFICATION	mark as read
WITHOUT_CLASSIFICATION	save message in Sent folder
WITHOUT_CLASSIFICATION	does not occur
WITHOUT_CLASSIFICATION	close stream
WITHOUT_CLASSIFICATION	display status message
WITHOUT_CLASSIFICATION	set dirty flag
WITHOUT_CLASSIFICATION	set dirty flag
WITHOUT_CLASSIFICATION	open composer view
WITHOUT_CLASSIFICATION	close connection to server
WITHOUT_CLASSIFICATION	can no longer assume that sendMessageDialog has been displayed
WITHOUT_CLASSIFICATION	close send message dialog
WITHOUT_CLASSIFICATION	re-open composer view
WITHOUT_CLASSIFICATION	do not prompt user if composer should be really closed
WITHOUT_CLASSIFICATION	save composer window state
WITHOUT_CLASSIFICATION	create directory <config-folder>/mail/spamdb
WITHOUT_CLASSIFICATION	make Columba logger parent of macchiato logger
WITHOUT_CLASSIFICATION	load database from file
WITHOUT_CLASSIFICATION	load database from file
WITHOUT_CLASSIFICATION	get inputstream of message body
WITHOUT_CLASSIFICATION	get inputstream of message body
WITHOUT_CLASSIFICATION	get stream
WITHOUT_CLASSIFICATION	apply additional handcrafted rules
WITHOUT_CLASSIFICATION	get headers
WITHOUT_CLASSIFICATION	get headers
WITHOUT_CLASSIFICATION	put headers in list
WITHOUT_CLASSIFICATION	put headers in list
WITHOUT_CLASSIFICATION	get new inputstream
WITHOUT_CLASSIFICATION	get new inputstream
WITHOUT_CLASSIFICATION	check if this message was already learned -> only add if this is not the case
WITHOUT_CLASSIFICATION	message already exists --> correct token data
WITHOUT_CLASSIFICATION	new message
WITHOUT_CLASSIFICATION	check if this message was already learned
WITHOUT_CLASSIFICATION	message already exists
WITHOUT_CLASSIFICATION	--> correct token data
WITHOUT_CLASSIFICATION	only save if changes exist
WITHOUT_CLASSIFICATION	cleanup DB -> remove old tokens
WITHOUT_CLASSIFICATION	mark message as not spam
WITHOUT_CLASSIFICATION	train message as spam or non spam
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	does not happen
WITHOUT_CLASSIFICATION	does not happen
WITHOUT_CLASSIFICATION	does not happen
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get source folder
WITHOUT_CLASSIFICATION	get array of message UIDs
WITHOUT_CLASSIFICATION	get array of message UIDs
WITHOUT_CLASSIFICATION	update status message
WITHOUT_CLASSIFICATION	update status message
WITHOUT_CLASSIFICATION	register for status events
WITHOUT_CLASSIFICATION	message belongs to which account?
WITHOUT_CLASSIFICATION	get array of source references
WITHOUT_CLASSIFICATION	get array of source references
WITHOUT_CLASSIFICATION	mark spam messages
WITHOUT_CLASSIFICATION	mark non spam messages
WITHOUT_CLASSIFICATION	calculate message score
WITHOUT_CLASSIFICATION	check if sender is already in addressbook
WITHOUT_CLASSIFICATION	add this message to frequency database
WITHOUT_CLASSIFICATION	train message as spam
WITHOUT_CLASSIFICATION	train message as ham
WITHOUT_CLASSIFICATION	try to get the account using the email address
WITHOUT_CLASSIFICATION	use default account as fallback
WITHOUT_CLASSIFICATION	if 1/3 of all characters are digits
WITHOUT_CLASSIFICATION	convert to lower-case
WITHOUT_CLASSIFICATION	whitespace detected
WITHOUT_CLASSIFICATION	if already detected before
WITHOUT_CLASSIFICATION	wait for stream threads to die
WITHOUT_CLASSIFICATION	spam found
WITHOUT_CLASSIFICATION	--no-rebuild option is deprecated in recent SpamAssassin versions
WITHOUT_CLASSIFICATION	ipcHelper.executeCommand(ExternalToolsHelper.getSALearn()+ " --no-rebuild --spam --single");
WITHOUT_CLASSIFICATION	don't need this
WITHOUT_CLASSIFICATION	don't need this
WITHOUT_CLASSIFICATION	If this is a unix-based system, check the 2 best-known areas for the aspell binary.
WITHOUT_CLASSIFICATION	Test for boolean equals(Object)
WITHOUT_CLASSIFICATION	-- Text Fields
WITHOUT_CLASSIFICATION	save current location statically for next time
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	-- Buttons
WITHOUT_CLASSIFICATION	-- Other components
WITHOUT_CLASSIFICATION	suggestionsJScrollPane.setPreferredSize(
WITHOUT_CLASSIFICATION	new Dimension( suggestionsJScrollPane.getPreferredSize().width, 75 ) );
WITHOUT_CLASSIFICATION	-- Overall Dialog box
WITHOUT_CLASSIFICATION	suggestionsJScrollPane.setMinimumSize( new Dimension( 200, 300 ) );
WITHOUT_CLASSIFICATION	suggestionsJScrollPane.setMaximumSize( new Dimension( Integer.MAX_VALUE, Integer.MAX_VALUE ) );
WITHOUT_CLASSIFICATION	setSize( 750, getPreferredSize().height );
WITHOUT_CLASSIFICATION	-- Availables Actions
WITHOUT_CLASSIFICATION	skip '#'
WITHOUT_CLASSIFICATION	skip '#'
WITHOUT_CLASSIFICATION	How to retrieve the mime part's contentID: String contentID = url.getRef(); initialize stuff here
WITHOUT_CLASSIFICATION	Default
WITHOUT_CLASSIFICATION	Protocol defined Mechanisms
WITHOUT_CLASSIFICATION	SMTP
WITHOUT_CLASSIFICATION	SASL Mechanisms
WITHOUT_CLASSIFICATION	We compare three classes: plain, md5 and popbeforesmtp
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	first account item
WITHOUT_CLASSIFICATION	first account item
WITHOUT_CLASSIFICATION	second account item
WITHOUT_CLASSIFICATION	second account item
WITHOUT_CLASSIFICATION	third item, a bit different from the first
WITHOUT_CLASSIFICATION	third item, a bit different from the first
WITHOUT_CLASSIFICATION	should have the same hashcodes...
WITHOUT_CLASSIFICATION	expect a different hashcode from a newly created item...
WITHOUT_CLASSIFICATION	expect a different hashcode for item and item3
WITHOUT_CLASSIFICATION	test self equality...
WITHOUT_CLASSIFICATION	item and item2 should be equal...
WITHOUT_CLASSIFICATION	item and item2 should be two different objects
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	item should not be equal to a newly created item or null
WITHOUT_CLASSIFICATION	item and item3 should not be equal
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	!!! Subject: test create filter configuration -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	!!! Subject: test create filter configuration -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	!!! Subject: test create filter configuration -> check if <Subject> <contains> pattern <test>
WITHOUT_CLASSIFICATION	!!! From: alice@mail.org create filter configuration -> check if <From> <contains> pattern <alice@mail.org>
WITHOUT_CLASSIFICATION	!!! From: alice@mail.org create filter configuration -> check if <From> <contains> pattern <alice@mail.org>
WITHOUT_CLASSIFICATION	add message to folder
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	create MH folder -> use homeDirectory as top-level folder -> this has to be an absolute path
WITHOUT_CLASSIFICATION	sourceFolder = new CachedMHFolder("test", "CachedMHFolder", FolderTstHelper.homeDirectory + "/folders/");
WITHOUT_CLASSIFICATION	delete all files in folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	disabled IMAP folder tests as they require connection to remote IMAP server setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	delete all files in folder
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add message "1.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	get inputstream of mimepart 0 from folder
WITHOUT_CLASSIFICATION	create string from inputstream
WITHOUT_CLASSIFICATION	create string from inputstream
WITHOUT_CLASSIFICATION	create string from inputstream
WITHOUT_CLASSIFICATION	compare both messages
WITHOUT_CLASSIFICATION	compare both messages
WITHOUT_CLASSIFICATION	compare both messages
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	get inputstream of this message from folder
WITHOUT_CLASSIFICATION	get inputstream of this message from folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	get flags of message
WITHOUT_CLASSIFICATION	set flags
WITHOUT_CLASSIFICATION	set flags
WITHOUT_CLASSIFICATION	get message source stream
WITHOUT_CLASSIFICATION	get message attributes
WITHOUT_CLASSIFICATION	close inpustream
WITHOUT_CLASSIFICATION	disabled IMAP folder tests as they require connection to remote IMAP server setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	get flags of message
WITHOUT_CLASSIFICATION	mark message as read
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	create string from inputstream
WITHOUT_CLASSIFICATION	compare both messages
WITHOUT_CLASSIFICATION	get inputstream of this message from folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	An individual 3 digit number
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create folders, etc.
WITHOUT_CLASSIFICATION	delete folders
WITHOUT_CLASSIFICATION	ask the user
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	disabled IMAP folder tests as they require connection to remote IMAP server setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	create string from inputstream
WITHOUT_CLASSIFICATION	compare both messages
WITHOUT_CLASSIFICATION	get inputstream of this message from folder
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	get flags of message
WITHOUT_CLASSIFICATION	set flags
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	oldFlags.setRecent(true); oldFlags.setFlagged(true); oldFlags.setExpunged(false);
WITHOUT_CLASSIFICATION	assertEquals("copied message should be marked as recent", true, flags .getRecent()); assertEquals("copied message should be marked as flagged", true, flags .getFlagged()); assertEquals("copied message should be marked as not expunged", false, flags.getExpunged());
WITHOUT_CLASSIFICATION	Add some messages
WITHOUT_CLASSIFICATION	Add some messages
WITHOUT_CLASSIFICATION	Add some messages
WITHOUT_CLASSIFICATION	Check for the new messages
WITHOUT_CLASSIFICATION	Check for the new messages
WITHOUT_CLASSIFICATION	Check for success
WITHOUT_CLASSIFICATION	Check for success
WITHOUT_CLASSIFICATION	Check for success
WITHOUT_CLASSIFICATION	Add some new messages and remove the same number of old messages
WITHOUT_CLASSIFICATION	model should contain the data
WITHOUT_CLASSIFICATION	model should contain the data
WITHOUT_CLASSIFICATION	model should contain the data
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	remove configuration directory
WITHOUT_CLASSIFICATION	try to get account using the account ID
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	disabled IMAP folder tests as they require connection to remote IMAP server setup(suite, new IMAPTstFactory());
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create Command reference
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	model should contain the data
WITHOUT_CLASSIFICATION	model should contain the data
WITHOUT_CLASSIFICATION	model should contain the data
WITHOUT_CLASSIFICATION	model should contain the data
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	AccountList list = MailConfig.getInstance().getAccountList(); list.addEmptyAccount("pop3");
WITHOUT_CLASSIFICATION	3 columns table
WITHOUT_CLASSIFICATION	create sample headerlist
WITHOUT_CLASSIFICATION	check number of tree nodes
WITHOUT_CLASSIFICATION	check number of tree nodes
WITHOUT_CLASSIFICATION	check number of cached MessageNodes assertEquals(2, model.getMap().size());
WITHOUT_CLASSIFICATION	check number of JTable rows
WITHOUT_CLASSIFICATION	check number of JTable rows
WITHOUT_CLASSIFICATION	check number of JTree rows
WITHOUT_CLASSIFICATION	check number of JTree rows
WITHOUT_CLASSIFICATION	remove MessageNode with uid=0
WITHOUT_CLASSIFICATION	check number of cached MessageNodes assertEquals(1, model.getMap().size());
WITHOUT_CLASSIFICATION	if this is the last token, check if the last element is the same than in the array
WITHOUT_CLASSIFICATION	if this is the last token, check if the last element is the same than in the array
WITHOUT_CLASSIFICATION	check for at least 10 whitespaces
WITHOUT_CLASSIFICATION	if this is the last token, check if the last element is the same than in the array
WITHOUT_CLASSIFICATION	if this is the last token, check if the last element is the same than in the array
WITHOUT_CLASSIFICATION	test with null list
WITHOUT_CLASSIFICATION	create group with two contacts
WITHOUT_CLASSIFICATION	test with empty list
WITHOUT_CLASSIFICATION	url decode
WITHOUT_CLASSIFICATION	Test with all kinds of input data
WITHOUT_CLASSIFICATION	first group contains first contact item
WITHOUT_CLASSIFICATION	create group containing first contact
WITHOUT_CLASSIFICATION	first group contains first contact item
WITHOUT_CLASSIFICATION	add contact to roaster, nickname="", group=null
WITHOUT_CLASSIFICATION	Test method for 'org.columba.mail.parser.ListBuilder.createStringListFromItemList(List<IHeaderItem>)'
WITHOUT_CLASSIFICATION	public abstract IChatMediator getChatMediator();
WITHOUT_CLASSIFICATION	mock folder class, only returns folder id
WITHOUT_CLASSIFICATION	mock object folder facade, only returns folder list
WITHOUT_CLASSIFICATION	public abstract void setChatMediator(IChatMediator mediator);
WITHOUT_CLASSIFICATION	we are only interested on subscription requests
WITHOUT_CLASSIFICATION	if already in roster
WITHOUT_CLASSIFICATION	create chat connection, if not available yet
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	get Columba's top-level configuration directory
WITHOUT_CLASSIFICATION	create top-level configuration directory
WITHOUT_CLASSIFICATION	fall-back to global resource loader
WITHOUT_CLASSIFICATION	close stream
WITHOUT_CLASSIFICATION	close stream
WITHOUT_CLASSIFICATION	--no-rebuild option is deprecated in recent SpamAssassin versions
WITHOUT_CLASSIFICATION	and add it to the buddylist
WITHOUT_CLASSIFICATION	example: fdietz@jabber.org/Jabber-client -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	add all contacts as leafs of group folders
WITHOUT_CLASSIFICATION	add all groups as folder to JTree
WITHOUT_CLASSIFICATION	buddy already exists
WITHOUT_CLASSIFICATION	add "Uncategorized" note
WITHOUT_CLASSIFICATION	add to global buddy list
WITHOUT_CLASSIFICATION	update status information
WITHOUT_CLASSIFICATION	create new buddy
WITHOUT_CLASSIFICATION	found group for buddy
WITHOUT_CLASSIFICATION	get presence
WITHOUT_CLASSIFICATION	persist changes on exit
WITHOUT_CLASSIFICATION	check if this buddy belongs to a group
WITHOUT_CLASSIFICATION	add to "Uncategorized" node
WITHOUT_CLASSIFICATION	didn't find any group for this buddy
WITHOUT_CLASSIFICATION	load configuraation
WITHOUT_CLASSIFICATION	create account object
WITHOUT_CLASSIFICATION	use key/value properties file
WITHOUT_CLASSIFICATION	load properties from stream
WITHOUT_CLASSIFICATION	open stream to file
WITHOUT_CLASSIFICATION	save properties to file
WITHOUT_CLASSIFICATION	create stream to file
WITHOUT_CLASSIFICATION	store account data in properties
WITHOUT_CLASSIFICATION	selected buddy in buddylist
WITHOUT_CLASSIFICATION	selected buddy in buddylist
WITHOUT_CLASSIFICATION	use selected buddy
WITHOUT_CLASSIFICATION	use selected buddy
WITHOUT_CLASSIFICATION	prompt for jabber id
WITHOUT_CLASSIFICATION	prompt for jabber id
WITHOUT_CLASSIFICATION	prompt for jabber id
WITHOUT_CLASSIFICATION	if user cancelled action
WITHOUT_CLASSIFICATION	awt-event-thread
WITHOUT_CLASSIFICATION	send message
WITHOUT_CLASSIFICATION	If this is a unix-based system, check the 2 best-known areas for the aspell binary.
WITHOUT_CLASSIFICATION	If this is a unix-based system, check the 2 best-known areas for the aspell binary.
WITHOUT_CLASSIFICATION	example: fdietz@jabber.org/Jabber-client -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	example: fdietz@jabber.org/Jabber-client -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	example: fdietz@jabber.org/Jabber-client -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	DateFormat format = DateFormat.getTimeInstance(DateFormat.SHORT); green color
WITHOUT_CLASSIFICATION	DateFormat format = DateFormat.getTimeInstance(DateFormat.SHORT);
WITHOUT_CLASSIFICATION	private SendButtonController sendButton;
WITHOUT_CLASSIFICATION	JPanel mainPanel = new JPanel(mainLayout); mainPanel.setBorder(Borders.DIALOG_BORDER);
WITHOUT_CLASSIFICATION	create message object
WITHOUT_CLASSIFICATION	set message body
WITHOUT_CLASSIFICATION	clear text box
WITHOUT_CLASSIFICATION	return (ChatMediator) chatList.get(index);
WITHOUT_CLASSIFICATION	private JPasswordField passwordTextField;
WITHOUT_CLASSIFICATION	passwordTextField.setText(account.getPassword());
WITHOUT_CLASSIFICATION	b.addSeparator("Account Options");
WITHOUT_CLASSIFICATION	b.append("Pass&word:", passwordTextField);
WITHOUT_CLASSIFICATION	passwordTextField = new JPasswordField(10);
WITHOUT_CLASSIFICATION	public String getPassword() { return passwordTextField.getText(); }
WITHOUT_CLASSIFICATION	comboBox.setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	setIconTextGap(5); setVerticalAlignment(JLabel.CENTER);
WITHOUT_CLASSIFICATION	IAccount account = object.getAccount();
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	TODO
WITHOUT_CLASSIFICATION	Force that the last line in buffer does NOT have a newline
WITHOUT_CLASSIFICATION	example: fdietz@jabber.org/Jabber-client -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	example: fdietz@jabber.org/Jabber-client -> remove "/Jabber-client"
WITHOUT_CLASSIFICATION	connect to server new ConnectAction(this).actionPerformed(null);
WITHOUT_CLASSIFICATION	checkBox.addItem("Custom Message...", null); checkBox.addItem("Leave...");
WITHOUT_CLASSIFICATION	private void addStatus(String tooltip, ImageIcon icon) { JLabel label = new JLabel(icon); label.setToolTipText(tooltip); comboBox.addItem(tooltip); }
WITHOUT_CLASSIFICATION	just ignore unknown people
WITHOUT_CLASSIFICATION	IAccount account = object.getAccount();
WITHOUT_CLASSIFICATION	contact
WITHOUT_CLASSIFICATION	group
WITHOUT_CLASSIFICATION	Set bean properties
WITHOUT_CLASSIFICATION	The following methods override the defaults for performance reasons
WITHOUT_CLASSIFICATION	Make sure we get all log info as fast as we can get ahold of it.
WITHOUT_CLASSIFICATION	notifyTableListeners(new TableModelEvent(this, 0, logMessages.size()));
WITHOUT_CLASSIFICATION	notifyTableListeners(new TableModelEvent(this, logMessages.size(), logMessages.size(), TableModelEvent.ALL_COLUMNS, TableModelEvent.INSERT));
WITHOUT_CLASSIFICATION	"right:max(40dlu;pref),3dlu,
WITHOUT_CLASSIFICATION	private JTable logTable;
WITHOUT_CLASSIFICATION	bottomPanel.add(closeButton);
WITHOUT_CLASSIFICATION	open configuration file
WITHOUT_CLASSIFICATION	navigate to treenode "text"
WITHOUT_CLASSIFICATION	read attribute "value"
WITHOUT_CLASSIFICATION	start parsing line
WITHOUT_CLASSIFICATION	found new token
WITHOUT_CLASSIFICATION	open file
WITHOUT_CLASSIFICATION	add contact to addressbook
WITHOUT_CLASSIFICATION	parse line by line
WITHOUT_CLASSIFICATION	if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	if user cancelled task exit immediately
WITHOUT_CLASSIFICATION	found new message
WITHOUT_CLASSIFICATION	save last message, because while loop aborted before being able to save message
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	model -> view read configuration and set gui elements appropriately
WITHOUT_CLASSIFICATION	view -> model write configuration given the data the user entered in the gui
WITHOUT_CLASSIFICATION	create new contact card
WITHOUT_CLASSIFICATION	the boundary parameter
WITHOUT_CLASSIFICATION	parameters ~ rest of string
WITHOUT_CLASSIFICATION	strip "'s
WITHOUT_CLASSIFICATION	Lines not starting with "From ???@???" is part of the message (headers or body)
WITHOUT_CLASSIFICATION	we reached "From ..." (start of new message)
WITHOUT_CLASSIFICATION	reset for new message
WITHOUT_CLASSIFICATION	save last message (while loop terminated before last msg was saved)
WITHOUT_CLASSIFICATION	End of method importMailboxFile
WITHOUT_CLASSIFICATION	invalid date format - not enough tokens in it!!
WITHOUT_CLASSIFICATION	End of method getDateHeader
WITHOUT_CLASSIFICATION	divide message into headers and body
WITHOUT_CLASSIFICATION	loop over headers and modify them as needed
WITHOUT_CLASSIFICATION	a header
WITHOUT_CLASSIFICATION	Logging.log.severe( "Not enough tokens in \"" + dateStr + "\" to create Date: header. Returning null", e);
WITHOUT_CLASSIFICATION	day of week month day of month time year
WITHOUT_CLASSIFICATION	handle header
WITHOUT_CLASSIFICATION	parse Content-Type
WITHOUT_CLASSIFICATION	boundary not found - Content-Type must be changed
WITHOUT_CLASSIFICATION	just convert it to text/plain or text/html
WITHOUT_CLASSIFICATION	mixed or unknown multipart type (to be treated as mixed). This is typically a message with attachments. Eudora just stores links to them - therefore we create a new multipart/mixed message with 2nd part = html page with links to attachments
WITHOUT_CLASSIFICATION	no attachments found - just convert it to text/plain or text/html
WITHOUT_CLASSIFICATION	Such a header is used by Eudora to indicate attachments for outgoing messages. Outgoing messages have no Content-Type specified. Therefore the Content-Type header can be safely set here without risk of conflicts with the modifications made above
WITHOUT_CLASSIFICATION	attachments found
WITHOUT_CLASSIFICATION	no attachments found - just insert a Content-Type header extra header necessary X-Attachments header is replaced
WITHOUT_CLASSIFICATION	get unique boundary (not checked against att. list part - but guess its ok)
WITHOUT_CLASSIFICATION	extra header necessary X-Attachments header is replaced
WITHOUT_CLASSIFICATION	we have now added such a header
WITHOUT_CLASSIFICATION	End of while loop over headers
WITHOUT_CLASSIFICATION	If no Content-Type header was found, it is necessary to construct a new one (for outgoing msg Eudora never includes a Content-Type => html msg is not shown correctly).
WITHOUT_CLASSIFICATION	save message to destination folder
WITHOUT_CLASSIFICATION	End of method convertAndSavemessage
WITHOUT_CLASSIFICATION	create full msg from headers and body
WITHOUT_CLASSIFICATION	... and save it
WITHOUT_CLASSIFICATION	NB: This is the saveMessage method def. in DefaultMessageImporter
WITHOUT_CLASSIFICATION	Logging.log.severe("Error saving converted message", e);
WITHOUT_CLASSIFICATION	End of method saveMessage
WITHOUT_CLASSIFICATION	build new message body
WITHOUT_CLASSIFICATION	initial guess
WITHOUT_CLASSIFICATION	unique boundary found
WITHOUT_CLASSIFICATION	End of method divideMessage
WITHOUT_CLASSIFICATION	is it HTML or plain text
WITHOUT_CLASSIFICATION	Logging.log.severe("Error while looking for charset", e);
WITHOUT_CLASSIFICATION	for easier search / matching
WITHOUT_CLASSIFICATION	meta tag with content definition found
WITHOUT_CLASSIFICATION	charset is specified - find it
WITHOUT_CLASSIFICATION	step past spaces find position of '>', '"'. or ' ' which is = end of charset name
WITHOUT_CLASSIFICATION	charset is found from line, not lcLine => not forced lower case
WITHOUT_CLASSIFICATION	we found what we were looking for
WITHOUT_CLASSIFICATION	Logging.log.severe( "Error while looking for charset", e);
WITHOUT_CLASSIFICATION	this will terminate the loop
WITHOUT_CLASSIFICATION	end of while loop
WITHOUT_CLASSIFICATION	End of method guessBodyContentType
WITHOUT_CLASSIFICATION	handle attachment (by creating a link)
WITHOUT_CLASSIFICATION	no attachments found - should in fact have been checked by the caller
WITHOUT_CLASSIFICATION	string to search
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	Server does not support UTF-8 -> fall back to System default
WITHOUT_CLASSIFICATION	We trigger an update only when the exists changed which should be equal with a Recent change.
WITHOUT_CLASSIFICATION	we are using this inpustream multiple times --> istream will be closed by CloneStreamMaster
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	handle attachment (by creating a link)
WITHOUT_CLASSIFICATION	20030515, kpo '\n' appended
WITHOUT_CLASSIFICATION	body untouched
WITHOUT_CLASSIFICATION	attachments found... insert start and end for html
WITHOUT_CLASSIFICATION	insert header for attachment list
WITHOUT_CLASSIFICATION	build new body part
WITHOUT_CLASSIFICATION	build new body part
WITHOUT_CLASSIFICATION	return parts
WITHOUT_CLASSIFICATION	End of method createAttachmentListFromHeader
WITHOUT_CLASSIFICATION	part of body
WITHOUT_CLASSIFICATION	insert start and end for html
WITHOUT_CLASSIFICATION	no attachments found
WITHOUT_CLASSIFICATION	Logging.log.severe("Error parsing body for attachments", e);
WITHOUT_CLASSIFICATION	End of method createAttachmentListFromAttachmentConverted
WITHOUT_CLASSIFICATION	End of class EudoraMailImportFilter
WITHOUT_CLASSIFICATION	This Method frees a given String from Comments defined in Rfc822
WITHOUT_CLASSIFICATION	This Method delivers the next line
WITHOUT_CLASSIFICATION	just a simple example
WITHOUT_CLASSIFICATION	you need a sound.wav in your program folder
WITHOUT_CLASSIFICATION	get the header of the message
WITHOUT_CLASSIFICATION	convert the condition string to an int which is easier to handle
WITHOUT_CLASSIFICATION	get the "To" headerfield from the header
WITHOUT_CLASSIFICATION	get the "Cc" headerfield from the header
WITHOUT_CLASSIFICATION	test if our To headerfield contains or contains not the search string
WITHOUT_CLASSIFICATION	do the same for the Cc headerfield and OR the results
WITHOUT_CLASSIFICATION	return the result as boolean value true or false
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	parse for urls / email adresses and substite with HTML-code html = HtmlParser.substituteURL(html); html = HtmlParser.substituteEmailAddress(html);
WITHOUT_CLASSIFICATION	since the indices on the pop server start with 1 we add a dummy null for the 0 element in the list
WITHOUT_CLASSIFICATION	start command which adds message to folder and calls apply-filter on this specific message
WITHOUT_CLASSIFICATION	If the cause is a SMTPExcpetion then only password wrong else bogus authentication mechanism
WITHOUT_CLASSIFICATION	VALIDATION DISABLE ! Sebastian Witt 25.07.04, "NAME" <email@somewhat.de> isnt true, which should :( root@localhost is valid, but not with this check. :( root is also valid (with local mailserver), but not with this check :(
WITHOUT_CLASSIFICATION	"-L" use local tests only String cmd = "spamassassin -L"; String cmd = "spamc -c -L";
WITHOUT_CLASSIFICATION	--
WITHOUT_CLASSIFICATION	if this is the last token, check if the last element is the same than in the array
WITHOUT_CLASSIFICATION	create config-folder File file = new File("test_config"); file.mkdir(); new Config(file); Logging.DEBUG = true; Logging.createDefaultHandler(); init mail component new MailMain().init(); new AddressbookMain().init(); now load all available plugins PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	@author: fdietz Disabled this testcase, as it doesn't really fit into this category of message operations It fails because we would have to create a folder-hierarchy including parent folders to execute the move
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	mock objects contact facade, only returns getContactItem() and getAllGroups()
WITHOUT_CLASSIFICATION	public IChatMediator getChatMediator() { return mediator; }
WITHOUT_CLASSIFICATION	Logging stuff
WITHOUT_CLASSIFICATION	if line doesn't start with "From" or line length is 0 -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	Date header we got a date header (store this fact for later use
WITHOUT_CLASSIFICATION	append the new Date header
WITHOUT_CLASSIFICATION	PlaceRect bgAbsRect = new AbsRect(new AtStart(0), new AtStart(0), new AtEnd(0), new AtEnd(0), null, null, shadowInsets);
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	check if firstname, middlename or lastname contain only valid characters
WITHOUT_CLASSIFICATION	TagList tagList = new ContactTagList(this); JScrollPane tagListScrollPane = new JScrollPane(tagList); tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); tagListScrollPane .setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	commandline arguments which can't be handled by the core are passed along to other subcomponents
WITHOUT_CLASSIFICATION	register at shutdown manager -> this will save all configuration data, when closing Columba
WITHOUT_CLASSIFICATION	g.setColor(bg); g.fillRect(0, h - 3, 3, 3); g.fillRect(w - 3, 0, 3, 3); g.fillRect(w - 3, h - 3, 3, 3);
WITHOUT_CLASSIFICATION	b_rmonth.setFocusPainted(false); b_rmonth.setOpaque(false); b_rmonth.addActionListener(this);
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	create filter configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	add toolbar panel.add(toolbar, BorderLayout.NORTH);
WITHOUT_CLASSIFICATION	finally, add all external extension menu additions for example: Hello World Plugin
WITHOUT_CLASSIFICATION	small icon for menu putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("stock_about-16.png"));
WITHOUT_CLASSIFICATION	update popup menu with search term before its made visible textField.addPopupMenuListener(this);
WITHOUT_CLASSIFICATION	textField.showPopup(); textField.requestFocus();
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	init configuration
WITHOUT_CLASSIFICATION	Implement the content hander methods that will delegate SAX events to the tag tracker network.
WITHOUT_CLASSIFICATION	Integer priority = Integer.valueOf(pattern); return priority;
WITHOUT_CLASSIFICATION	We use the attributes and flags from the cache but the parsed header from the parsed message
WITHOUT_CLASSIFICATION	create one list containing the marked items, which have to be "unmarked" and another list containing the items remained to be marked
WITHOUT_CLASSIFICATION	resync search engine -> this is only needed for Lucene right now
WITHOUT_CLASSIFICATION	folders have same root folder -> for example: two IMAP folders on the same server -----> this means we use server-side copying which -----> is much faster than using inputstreams here also used for local folders, which saves some parsing work
WITHOUT_CLASSIFICATION	DocumentParser parser = new DocumentParser(); decode message body with respect to charset
WITHOUT_CLASSIFICATION	one line is added to the header for each attachment (which has a filename defined)
WITHOUT_CLASSIFICATION	create a Command for every action of this filter -> create a compound object which encapsulates all commands
WITHOUT_CLASSIFICATION	First remove all headers that are in the headerlist but not the Folder
WITHOUT_CLASSIFICATION	There are still more messages to update -> issue another fetch messages command
WITHOUT_CLASSIFICATION	Something is wrong Sync again
WITHOUT_CLASSIFICATION	remember parent path (this is necessary for IMAPRootFolder sync operations)
WITHOUT_CLASSIFICATION	if line doesn't start with "From" or line length is 0 -> save everything in StringBuffer
WITHOUT_CLASSIFICATION	search request isn't covered by query engine -> fall back to default search engine
WITHOUT_CLASSIFICATION	clear message viewer /tableController.valueChanged(new ListSelectionEvent(this,-1,-1,false));
WITHOUT_CLASSIFICATION	register Component as FocusOwner FocusManager.getInstance().registerComponent(this);
WITHOUT_CLASSIFICATION	NOTE if SSL is possible we just need the plain login since SSL does the encryption for us.
WITHOUT_CLASSIFICATION	this is save because the only shutdown plugin to stop this server, the configuration isn't touched
WITHOUT_CLASSIFICATION	register for configuration changes for the html(enabled/disabled) state
WITHOUT_CLASSIFICATION	get size of content (width, height is size without scaling) scaled size
WITHOUT_CLASSIFICATION	should not occur, otherwise the bundlePath would not be in the hashtable
WITHOUT_CLASSIFICATION	small icon for menu putValue(SMALL_ICON, ImageLoader .getSmallImageIcon("configure_16_mail.png"));
WITHOUT_CLASSIFICATION	we assume user cancelled search -> remove cached command
WITHOUT_CLASSIFICATION	small icon for menu putValue(SMALL_ICON, ImageLoader.getSmallImageIcon("16_sign.png"));
WITHOUT_CLASSIFICATION	public VirtualFolder(FolderItem item) { super(item); headerList = new MemoryHeaderList(); ensureValidFilterElement(); }
WITHOUT_CLASSIFICATION	DefaultItem item = new DefaultItem(element); item.set("header_enabled", getState());
WITHOUT_CLASSIFICATION	->set source reference in composermodel when replying this is the original sender's message you selected and replied to
WITHOUT_CLASSIFICATION	the following lines add cut/copy/paste/undo/redo/selectall actions support using the Columba action objects. This means that we only have a single instance of these specific actions, which is shared by all menuitems and toolbar buttons.
WITHOUT_CLASSIFICATION	2 columns rows are added dynamically (no need to define them here)
WITHOUT_CLASSIFICATION	Must go backwards or else the filters will swap places with each other.
WITHOUT_CLASSIFICATION	comments are not displayed correctly in composer
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	execute filter
WITHOUT_CLASSIFICATION	this action is disabled when the text/plain editor is used -> so, its safe to just cast to HtmlEditorController here
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	user may have changed hostname. use dialog settings instead of stored settings
WITHOUT_CLASSIFICATION	super.getTableCellRendererComponent( table, value, isSelected, hasFocus, row, column );
WITHOUT_CLASSIFICATION	bottom.setLayout( new BoxLayout( bottom, BoxLayout.X_AXIS ) ); bottom.add( Box.createHorizontalStrut());
WITHOUT_CLASSIFICATION	also register interest in tree seleciton events for updating the title
WITHOUT_CLASSIFICATION	Register as listener to the SelectionManger to check for selection changes
WITHOUT_CLASSIFICATION	if we don't use this here - actions like reply would only work on the the encrypted message
WITHOUT_CLASSIFICATION	no charset specified -> automatic mode -> try to determine charset based on content parameter
WITHOUT_CLASSIFICATION	create attachment component with text, icon tooltip, context menu and double-click action
WITHOUT_CLASSIFICATION	changing the selection to the specified row changeSelection(row, 0, true, false);
WITHOUT_CLASSIFICATION	at any time i get here uids of length 0. If this is so we should return and do nothing
WITHOUT_CLASSIFICATION	20040510, karlpeder columns may be null (first time we visit a folder!?)
WITHOUT_CLASSIFICATION	Folder trash = (AbstractMessageFolder) MainInterface.treeModel.getTrashFolder(); trash folder has uid==105
WITHOUT_CLASSIFICATION	putValue(LARGE_ICON, ImageLoader .getImageIcon("mark-as-important-16.png"));
WITHOUT_CLASSIFICATION	table is empty -> just display empty table
WITHOUT_CLASSIFICATION	@author: fdietz never request focus view.requestFocus();
WITHOUT_CLASSIFICATION	folder.showFilterDialog(((AbstractMailFrameController) getFrameMediator()));
WITHOUT_CLASSIFICATION	IMAP folder specific - Is this folder selectable (does it contain messages?)
WITHOUT_CLASSIFICATION	minimal unchecked time is 30 Seconds in ms
WITHOUT_CLASSIFICATION	create config-folder File file = new File("test_config"); file.mkdir(); new Config(file); Logging.DEBUG = true; Logging.createDefaultHandler(); init mail component new MailMain().init(); new AddressbookMain().init(); now load all available plugins PluginManager.getInstance().initExternalPlugins();
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	add message "0.eml" as inputstream to folder
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	create stream from string
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	add stream to folder
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	close streams
WITHOUT_CLASSIFICATION	((AbstractFolder)MailInterface.treeModel.getRoot()).add(cyrusRoot);((AbstractFolder) MailInterface.treeModel.getRoot()) .getConfiguration().getRoot().addElement( cyrusRoot.getConfiguration().getRoot());MailInterface.treeModel.nodeStructureChanged(cyrusRoot.getParent());
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	create copy command
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	execute command -> use mock object class as worker which does nothing
WITHOUT_CLASSIFICATION	setPreferredSize(new Dimension(250, 300));
WITHOUT_CLASSIFICATION	buffer.append(getShortClassName(record.getSourceClassName())); buffer.append("."); buffer.append(record.getSourceMethodName()); buffer.append(" - ");
WITHOUT_CLASSIFICATION	Table model stuff
WITHOUT_CLASSIFICATION	LIST model stuff
WITHOUT_CLASSIFICATION	-> import message in Columba
WITHOUT_CLASSIFICATION	counts how many messages has been processed date fetched from "From ???@??? ..."
WITHOUT_CLASSIFICATION	If a msg has been read, import it into Columba
WITHOUT_CLASSIFICATION	fetch date from "From ???@??? ..."
WITHOUT_CLASSIFICATION	For multipart Content-Types we need to take action (if boundary is nonexistent): Eudora stores content type = multipart even though the message is not really multipart - e.g. because an attachment already has has been decoded by Eudora)
WITHOUT_CLASSIFICATION	attachments found
WITHOUT_CLASSIFICATION	store header after processing
WITHOUT_CLASSIFICATION	If no Date header was found, it is necessary to contruct a new one (this is the case for outgoing messages from Eudora)
WITHOUT_CLASSIFICATION	It is HTML, try to find out which charset from meta tag: NB: The seach for charset below is very simple. It assumes that the meta tag to find is on ITS OWN LINE, i.e. " <meta" can be found at the beginning of the line, and all the content of the tag is found on the same line! Could be better, but this is first shot...
WITHOUT_CLASSIFICATION	body untouched
WITHOUT_CLASSIFICATION	insert header for attachment list
WITHOUT_CLASSIFICATION	system beep
WITHOUT_CLASSIFICATION	for time consuming tasks you need to create your own Command
WITHOUT_CLASSIFICATION	border
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$ $NON-NLS-4$ $NON-NLS-5$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ nameLabel.setFont(boldFont);
WITHOUT_CLASSIFICATION	$NON-NLS-1$ enableLabel.setFont(boldFont);
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#setUp()
WITHOUT_CLASSIFICATION	@see TestCase#tearDown()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#remove(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.store.api.IStoreListener#itemAdded(org.columba.calendar.store.api.StoreEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.store.api.IStoreListener#itemRemoved(org.columba.calendar.store.api.StoreEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.store.api.IStoreListener#itemChanged(org.columba.calendar.store.api.StoreEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.IActivitySelectionChangedListener#selectionChanged(org.columba.calendar.ui.calendar.api.ActivitySelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#getSelectedActivity()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#getView()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#setViewMode(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#recreateFilterRows()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.miginfocom.ashape.interaction.InteractionListener#interactionOccured(com.miginfocom.ashape.interaction.InteractionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.miginfocom.calendar.datearea.ActivityMoveListener#activityMoved(com.miginfocom.calendar.datearea.ActivityMoveEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#viewToday()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#viewPrevious()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.calendar.api.ICalendarView#setVisibleDateRange(org.columba.calendar.model.api.IDateRange)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see com.miginfocom.calendar.datearea.ActivityDragResizeListener#activityDragResized(com.miginfocom.calendar.datearea.ActivityDragResizeEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.list.api.ICalendarListView#getView()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.calendar.ui.list.api.ICalendarListView#getSelected()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.facade.IHeaderItem#setId(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#getContacts()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#setContacts(java.util.List)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#addContact(org.columba.addressbook.facade.IContactItem)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#removeContact(org.columba.addressbook.facade.IContactItem)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.facade.IGroupItem#getContactCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isCopyActionEnabled()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isPasteActionEnabled()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isDeleteActionEnabled()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isSelectAllActionEnabled()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isUndoActionEnabled()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#isRedoActionEnabled()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#cut()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#copy()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#paste()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#delete()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#undo()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#redo()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#selectAll()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.focus.FocusOwner#getComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.gui.table.model.TableModelDecorator#getRowCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilter#getFilterActionList()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilter#getFilterRule()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilter#getEnabled()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilter#setEnabled(boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilter#setName(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilter#getName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilter#clone()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.model.IEmailModel#getAddress()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.addressbook.model.IEmailModel#getType()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.taskmanager.ITaskManager#removeTaskManagerListener(org.columba.core.taskmanager.TaskManagerListener)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.ICommand#updateGUI()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.ICommand#execute(org.columba.api.command.IWorkerStatusController)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.ICommand#getReference()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.IWorkerStatusController#removeWorkerStatusChangeListener(org.columba.core.gui.statusbar.event.WorkerStatusChangeListener)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.IWorkerStatusController#addWorkerStatusChangeListener(org.columba.core.gui.statusbar.event.WorkerStatusChangeListener)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.IWorkerStatusController#getTimeStamp()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterAction#getUid()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterAction#setUid(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterAction#getAction()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterAction#setAction(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#addEmptyCriteria()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#add(org.columba.core.filter.FilterCriteria)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#remove(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#removeAll()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#removeLast()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#get(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#count()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#getCondition()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#setCondition(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#setCondition(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterRule#getConditionInt()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#add(org.columba.core.filter.Filter)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#addAll(org.columba.core.filter.FilterList)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#remove(org.columba.core.filter.Filter)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#insert(org.columba.core.filter.Filter, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#moveUp(org.columba.core.filter.Filter)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#moveDown(org.columba.core.filter.Filter)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#move(org.columba.core.filter.Filter, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#move(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#indexOf(org.columba.core.filter.Filter)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#count()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterList#get(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterCriteria#setCriteria(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterCriteria#getCriteria()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterActionList#get(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterActionList#remove(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.filter.IFilterActionList#addEmptyAction()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	notify all listeners @see org.columba.core.gui.util.FontProperties @see org.columba.mail.gui.message.TextViewer @see org.columba.mail.gui.composer.text.TextEditorController
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.javaprog.ui.wizard.AbstractStep#createComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.javaprog.ui.wizard.Step#prepareRendering()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.javaprog.ui.wizard.AbstractStep#createComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.javaprog.ui.wizard.Step#prepareRendering()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.javaprog.ui.wizard.AbstractStep#createComponent()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see net.javaprog.ui.wizard.Step#prepareRendering()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.IFrameManager#getActiveFrameMediator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.IFrameManager#openView(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.frame.IFrameManager#switchView(org.columba.core.gui.frame.IContainer, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IFrameMediator#getContentPane()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IFrameMediator#loadPositions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IFrameMediator#savePositions()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IFrameMediator#isInitialized()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IDock#registerDockable(org.columba.api.gui.frame.IDockable)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IDock#registerDockable(java.lang.String, java.lang.String, javax.swing.JComponent, javax.swing.JPopupMenu)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IDock#getDockableIterator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION, float)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IDock#dock(org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDockable, org.columba.api.gui.frame.IDock.REGION, float)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.gui.frame.IDock#setSplitProportion(org.columba.api.gui.frame.IDockable, float)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see junit.framework.TestCase#setUp()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	Overwrite the method to maintain line breaks when copying messages form the MessageViewer. @author aoki-y @see javax.swing.text.html.HTMLDocument#getReader(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#setValueAt(java.lang.Object, int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableModel#isCellEditable(int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.table.TableCellRenderer#getTableCellRendererComponent(javax.swing.JTable, java.lang.Object, boolean, boolean, int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getProfile(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getProfiles()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.profiles.IProfileManager#getCurrentProfile()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.plugin.AbstractConfigPlugin#createPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.plugin.AbstractConfigPlugin#updateComponents(boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.net.URLClassLoader#findResource(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.print.cParagraph#print(java.awt.Graphics2D)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.search.api.ISearchResult#getTitle()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.search.api.ISearchResult#getDescription()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.search.api.ISearchResult#getLocation()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.shutdown.IShutdownManager#register(java.lang.Runnable)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.shutdown.IShutdownManager#shutdown(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.gui.table.model.TableModelModifier#remove(java.lang.Object[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.gui.table.model.TableModelModifier#set(org.columba.mail.message.HeaderList)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.message.HeaderInterface#count()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.message.HeaderInterface#getFlags()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.message.HeaderInterface#set(java.lang.String, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getHeader()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getBodyPart()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getMimePart(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getMimePartCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getSource()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#setSource(org.columba.ristretto.message.io.Source)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.FolderTreeNode#getName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.RootFolder#getTrashFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.RootFolder#getInbox()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.AbstractMessageFolder#loadMessageFolderInfo()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#add(org.columba.mail.message.IColumbaHeader, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#clear()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#containsValue(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#count()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#get(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#getUids()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#keySet()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#remove(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.PersistantHeaderList#persist()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#headerIterator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#keyIterator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.headercache.HeaderList#update(java.lang.Object, org.columba.mail.message.IColumbaHeader)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.message.ICloseableIterator#close()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Iterator#hasNext()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Iterator#next()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Iterator#remove()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.FolderTreeNode#addSubfolder(org.columba.mail.folder.FolderTreeNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object, java.lang.Integer[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.Folder#isInboxFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.Folder#isTrashFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream, org.columba.ristretto.message.Attributes)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.AbstractMessageFolder#save()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.FolderTreeNode#addSubfolder(org.columba.mail.folder.FolderTreeNode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.Folder#save()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.RootFolder#getTrashFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.RootFolder#getInbox()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IDataStorage#getMessages()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IDataStorage#getFileSource(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IDataStorage#saveInputStream(java.lang.Object, java.io.InputStream)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getAttribute(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getFlags(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMimePartBodyStream(java.lang.Object, java.lang.Integer[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object, java.lang.Integer[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream, org.columba.ristretto.message.Attributes)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.Folder#getUids(org.columba.api.command.IWorkerStatusController)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getAttribute(java.lang.Object, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getFlags(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getHeaderFields(java.lang.Object, java.lang.String[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMessageSourceStream(java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMimePartBodyStream(java.lang.Object, java.lang.Integer[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#getMimePartSourceStream(java.lang.Object, java.lang.Integer[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailbox#addMessage(java.io.InputStream, org.columba.ristretto.message.Attributes)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailFolder#getRootFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#messageAdded(org.columba.mail.folder.event.IFolderEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#messageRemoved(org.columba.mail.folder.event.IFolderEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#messageFlagChanged(org.columba.mail.folder.event.IFolderEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#folderPropertyChanged(org.columba.mail.folder.event.IFolderEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#folderAdded(org.columba.mail.folder.event.IFolderEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.event.IFolderListener#folderRemoved(org.columba.mail.folder.event.IFolderEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.IMailFolder#removeFolder()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folderoptions.AbstractFolderOptionsPlugin#restoreUISettings()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.event.CaretListener#caretUpdate(javax.swing.event.CaretEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.gui.composer.AbstractEditorController#setViewText(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.io.InputStream#read()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.io.InputStream#read(byte[], int, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#updateGUI()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#updateGUI()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#execute(org.columba.api.command.Worker)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.api.command.Command#updateGUI()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.event.ListSelectionListener#valueChanged(javax.swing.event.ListSelectionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see javax.swing.ListCellRenderer#getListCellRendererComponent(javax.swing.JList, java.lang.Object, int, boolean, boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Observer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.gui.config.general.MailOptionsDialog @see java.util.Observer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.selection.SelectionHandler#getSelection()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.selection.SelectionHandler#setSelection(org.columba.api.command.DefaultCommandReference[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Observer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.selection.ISelectionListener#selectionChanged(org.columba.core.gui.selection.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.gui.table.model.TableModelModifier#modify(java.lang.Object[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.gui.table.model.TableModelModifier#remove(java.lang.Object[])
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.gui.table.model.TableModelModifier#set(org.columba.mail.message.HeaderList)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.ISelectionListener#selectionChanged(org.columba.core.gui.util.SelectionChangedEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.util.SelectionHandler#getSelection()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#logout()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#checkSupportedAuthenticationMethods()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#isSupported(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#setFirstLoginAction(org.columba.mail.imap.IFirstLoginAction)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#ensureSelectedState(org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getStatus(org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#list(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#append(java.io.InputStream, org.columba.ristretto.imap.IMAPFlags, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#append(java.io.InputStream, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#createMailbox(java.lang.String, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#deleteFolder(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#renameFolder(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#subscribeFolder(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#unsubscribeFolder(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#expunge(org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#copy(org.columba.mail.folder.imap.IMAPFolder, java.lang.Object[], org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchUid(org.columba.ristretto.imap.SequenceSet, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchUids(org.columba.ristretto.imap.SequenceSet, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchFlagsListStartFrom(int, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchFlagsListStartFrom2(int, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchNamespaces()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchHeaderList(org.columba.mail.message.IHeaderList, java.util.List, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMimeTree(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMimePartBodyStream(java.lang.Object, java.lang.Integer[], org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getHeaders(java.lang.Object, java.lang.String[], org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getAllHeaders(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMimePartSourceStream(java.lang.Object, java.lang.Integer[], org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMessageSourceStream(java.lang.Object, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#markMessage(java.lang.Object[], int, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#setFlags(java.lang.Object[], org.columba.ristretto.imap.IMAPFlags, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#search(java.lang.Object[], org.columba.core.filter.FilterRule, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getIndex(java.lang.Integer, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#search(org.columba.ristretto.imap.SearchKey, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#search(org.columba.core.filter.FilterRule, org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getMessageFolderInfo(org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#fetchSubscribedFolders()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#isSelected(org.columba.mail.folder.imap.IMAPFolder)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#alertMessage(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#connectionClosed(java.lang.String, java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#existsChanged(java.lang.String, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#flagsChanged(java.lang.String, org.columba.ristretto.imap.IMAPFlags)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#parseError(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#recentChanged(java.lang.String, int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#warningMessage(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#getItem()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#update(java.util.Observable, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#setExistsChangedAction(org.columba.mail.imap.IExistsChangedAction)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#setUpdateFlagAction(org.columba.mail.imap.IUpdateFlagAction)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.imap.IImapServer#setObservable(org.columba.api.command.IStatusObservable)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Iterator#hasNext()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Iterator#next()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.util.Iterator#remove()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.message.HeaderInterface#count()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.message.HeaderInterface#getFlags()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.message.HeaderInterface#set(java.lang.String, java.lang.Object)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getHeader()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getBodyPart()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getMimePart(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getMimePartCount()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#getSource()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#setHeader(org.columba.ristretto.message.Header)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.message.Message#setSource(org.columba.ristretto.message.io.Source)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.composer.MimePartRenderer#render(org.columba.ristretto.message.StreamableMimePart)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.ristretto.composer.MimePartRenderer#render(org.columba.ristretto.message.StreamableMimePart)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getJabberId()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getPresenceMode()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#isSignedOn()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getStatusMessage()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getChatMediator()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#setChatMediator(org.columba.chat.api.IChatMediator)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#setPresenceMode(org.jivesoftware.smack.packet.Presence.Mode)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#setSignedOn(boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#setStatusMessage(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.jabber.IBuddyStatus#getName()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.ui.conversation.IConversationController#addChat(java.lang.String)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.ui.conversation.IConversationController#getSelected()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.ui.conversation.IConversationController#get(int)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.ui.conversation.IConversationController#closeSelected()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.ui.roaster.IRoasterTree#getSelected()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.chat.ui.roaster.IRoasterTree#updateBuddyPresence(org.columba.chat.api.IBuddyStatus)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.themes.plugin.AbstractThemePlugin#setLookAndFeel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.plugin.AbstractConfigPlugin#updateComponents(boolean)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.core.gui.plugin.AbstractConfigPlugin#createPanel()
WITHOUT_CLASSIFICATION	(non-Javadoc) @see java.awt.event.ActionListener#actionPerformed(java.awt.event.ActionEvent)
WITHOUT_CLASSIFICATION	(non-Javadoc) @see org.columba.mail.folder.mailboximport.DefaultMailboxImporter#getDescription()
WITHOUT_CLASSIFICATION	size -> @see org.columba.mail.folder.cache.CachedHeaderfields for a -> complete -> list of possible attributes
WITHOUT_CLASSIFICATION	notify listeners @see org.columba.mail.gui.table.action.ForwardAction
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Process the listeners last to first, notifying those that are interested in this event
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	Guaranteed to return a non-null array
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	ignore
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-BEGIN$
WITHOUT_CLASSIFICATION	$JUnit-END$
WITHOUT_CLASSIFICATION	retrieve event from store
WITHOUT_CLASSIFICATION	create new event with new UUID
WITHOUT_CLASSIFICATION	v.getEndDate().getParameters().add(Value.DATE);
WITHOUT_CLASSIFICATION	FIXME r.setPos();
WITHOUT_CLASSIFICATION	only import VEVENT and VTODO for now
WITHOUT_CLASSIFICATION	ensure tzid matches date-time timezone.. Parameter tzId = dtStart1.getParameters().getParameter( Parameter.TZID);
WITHOUT_CLASSIFICATION	ensure tzid matches date-time timezone.. Parameter tzId = dtEnd1.getParameters().getParameter( Parameter.TZID);
WITHOUT_CLASSIFICATION	ensure tzid matches date-time timezone.. Parameter tzId = dtStamp1.getParameters().getParameter( Parameter.TZID);
WITHOUT_CLASSIFICATION	RRULE:FREQ=YEARLY;COUNT=5;INTERVAL=1 RRULE:FREQ=WEEKLY;UNTIL=20060725T215959;INTERVAL=1;BYDAY=TU RRULE:FREQ=YEARLY;INTERVAL=1
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	wrong xml-format
WITHOUT_CLASSIFICATION	fall-back to global resource loader
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	Process the events
WITHOUT_CLASSIFICATION	2 columns
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-3$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$$NON-NLS-2$ $NON-NLS-1$$NON-NLS-2$
WITHOUT_CLASSIFICATION	3 columns $NON-NLS-1$
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	create a form builder
WITHOUT_CLASSIFICATION	check if a single entry is selected
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	select new item
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	show context menu
WITHOUT_CLASSIFICATION	$NON-NLS-1$ totalLabel.setFont(boldFont); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ unreadLabel.setFont(boldFont); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ recentLabel.setFont(boldFont); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ sizeLabel.setFont(boldFont); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ locationLabel.setFont(boldFont); $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-2$
WITHOUT_CLASSIFICATION	second row showing the minutes
WITHOUT_CLASSIFICATION	dark gray line at 12 and 13
WITHOUT_CLASSIFICATION	light gray line every day
WITHOUT_CLASSIFICATION	light gray line every day
WITHOUT_CLASSIFICATION	vertical light gray column separator line
WITHOUT_CLASSIFICATION	defaultShapeFactory.setShape(AShapeCreator.createTraslucentShapeHorizontal(), null);
WITHOUT_CLASSIFICATION	else set it to 23:59:59.999
WITHOUT_CLASSIFICATION	Drag, resize interactions
WITHOUT_CLASSIFICATION	Drag, resize interactions
WITHOUT_CLASSIFICATION	Drag, resize interactions
WITHOUT_CLASSIFICATION	Color bgPaint = new Color(255, 150, 150);
WITHOUT_CLASSIFICATION	Edges of the poly shape
WITHOUT_CLASSIFICATION	END1 because the draw should be correct
WITHOUT_CLASSIFICATION	Shadow
WITHOUT_CLASSIFICATION	AShape textShape = new TextAShape("text", "$" + GridRow.NAME + "$", textRect, TextAShape.TYPE_SINGE_LINE, font, fgColor, AtFraction.CENTER, AtStart.START0, Boolean.FALSE);
WITHOUT_CLASSIFICATION	roll correctly over years
WITHOUT_CLASSIFICATION	roll correctly over years
WITHOUT_CLASSIFICATION	roll correctly over years
WITHOUT_CLASSIFICATION	roll correctly over years
WITHOUT_CLASSIFICATION	roll correctly over years
WITHOUT_CLASSIFICATION	roll correctly over years
WITHOUT_CLASSIFICATION	roll correctly over years
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	associate with JavaHelp
WITHOUT_CLASSIFICATION	check if the user entered valid data
WITHOUT_CLASSIFICATION	it has to be set
WITHOUT_CLASSIFICATION	disable max occurrences
WITHOUT_CLASSIFICATION	set background of scrollpane, in case the list is smaller than the dockable
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	TagList tagList = new CalendarTagList(this); JScrollPane tagListScrollPane = new JScrollPane(tagList); tagListScrollPane.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_NEVER); tagListScrollPane .setBorder(BorderFactory.createEmptyBorder(0, 0, 0, 0));
WITHOUT_CLASSIFICATION	if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	if mouse button was pressed twice times
WITHOUT_CLASSIFICATION	checkbox.setBorder(BorderFactory.createEmptyBorder(2,4,2,4));
WITHOUT_CLASSIFICATION	public CalendarItem getSelected() { int row = getSelectedRow(); return ((CheckableItemListTableModel) getModel()).getElement(row); }
WITHOUT_CLASSIFICATION	return if selection change is in flux
WITHOUT_CLASSIFICATION	return if selection change is in flux
WITHOUT_CLASSIFICATION	example: "columba:org.columba.contact/<folder-id>/<contact-id>"
WITHOUT_CLASSIFICATION	create URI representing the contact
WITHOUT_CLASSIFICATION	check three entries
WITHOUT_CLASSIFICATION	check if it contains comma character
WITHOUT_CLASSIFICATION	modify card properties in folder
WITHOUT_CLASSIFICATION	XmlElement filter = new XmlElement("filter"); defaultElement.addElement(filter);
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	tooltip text
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	get selected folder
WITHOUT_CLASSIFICATION	register interest on tree selection changes
WITHOUT_CLASSIFICATION	add to folder
WITHOUT_CLASSIFICATION	register interest on tree selection changes
WITHOUT_CLASSIFICATION	should never happen
WITHOUT_CLASSIFICATION	get selected contact/group card
WITHOUT_CLASSIFICATION	get selected contact/group card
WITHOUT_CLASSIFICATION	tree has focus
WITHOUT_CLASSIFICATION	contacts item
WITHOUT_CLASSIFICATION	initialize completer
WITHOUT_CLASSIFICATION	======== this ========
WITHOUT_CLASSIFICATION	leave dialog empty if no source contact model specified
WITHOUT_CLASSIFICATION	model -> view
WITHOUT_CLASSIFICATION	fill formatted textfield
WITHOUT_CLASSIFICATION	---- fullnameButton ----
WITHOUT_CLASSIFICATION	---- emailTextField2 ----
WITHOUT_CLASSIFICATION	---- telephoneTextField2 ----
WITHOUT_CLASSIFICATION	---- imTextField4 ----
WITHOUT_CLASSIFICATION	---- homepageButton ----
WITHOUT_CLASSIFICATION	---- calendarLabel ----
WITHOUT_CLASSIFICATION	======== panel8 ========
WITHOUT_CLASSIFICATION	---- titleTextField ----
WITHOUT_CLASSIFICATION	contains "," comma character
WITHOUT_CLASSIFICATION	default
WITHOUT_CLASSIFICATION	concrete implementation of actions
WITHOUT_CLASSIFICATION	table should be updated when tree selection changes
WITHOUT_CLASSIFICATION	HeaderItem[] items = new HeaderItem[selection1.length]; items = selection1; HeaderItemDNDManager.getInstance().setHeaderItemList(items);
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$ $NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	setCellRenderer(new AddressbookListRenderer());
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	$NON-NLS-1$
WITHOUT_CLASSIFICATION	Plain text components don't fire these events
