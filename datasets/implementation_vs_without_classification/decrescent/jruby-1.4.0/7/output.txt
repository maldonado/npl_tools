// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9966022078080294	WITHOUT_CLASSIFICATION	0.0033977921919705347	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.5763761409177336	IMPLEMENTATION	0.4236238590822664	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.6736289408650804	IMPLEMENTATION	0.3263710591349195	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.765737448129901	IMPLEMENTATION	0.23426255187009898	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7187268910738052	WITHOUT_CLASSIFICATION	0.2812731089261949	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.7733355491979811	IMPLEMENTATION	0.22666445080201889	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.7192382630770109	IMPLEMENTATION	0.28076173692298906	WITHOUT_CLASSIFICATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8825985431454736	WITHOUT_CLASSIFICATION	0.11740145685452637	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.8825985431454736	WITHOUT_CLASSIFICATION	0.11740145685452637	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.8618202145137275	IMPLEMENTATION	0.1381797854862726	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9951892190434463	WITHOUT_CLASSIFICATION	0.004810780956553714	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9933950838279615	IMPLEMENTATION	0.0066049161720385515	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9204291826309275	IMPLEMENTATION	0.07957081736907241	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9994515262193066	WITHOUT_CLASSIFICATION	5.484737806934329E-4	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9582776305394568	IMPLEMENTATION	0.04172236946054315	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7687543447404682	IMPLEMENTATION	0.2312456552595317	WITHOUT_CLASSIFICATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7053789963302265	WITHOUT_CLASSIFICATION	0.2946210036697735	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.5146169948387896	WITHOUT_CLASSIFICATION	0.4853830051612102	IMPLEMENTATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.7608715188528494	WITHOUT_CLASSIFICATION	0.2391284811471506	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.985785565598089	WITHOUT_CLASSIFICATION	0.014214434401910966	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.5626643579978401	IMPLEMENTATION	0.43733564200216	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.6434301651791013	IMPLEMENTATION	0.3565698348208986	WITHOUT_CLASSIFICATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.5082922989454081	IMPLEMENTATION	0.4917077010545919	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9467260691867794	WITHOUT_CLASSIFICATION	0.05327393081322069	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9968899778397986	IMPLEMENTATION	0.003110022160201317	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.5742068656133005	IMPLEMENTATION	0.4257931343866994	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.7297200976160256	IMPLEMENTATION	0.2702799023839744	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9974880207390591	IMPLEMENTATION	0.0025119792609409716	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.7297200976160256	IMPLEMENTATION	0.2702799023839744	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9974880207390591	IMPLEMENTATION	0.0025119792609409716	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.6827839353431938	WITHOUT_CLASSIFICATION	0.31721606465680613	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9429595023483262	WITHOUT_CLASSIFICATION	0.05704049765167389	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9982878089752362	IMPLEMENTATION	0.0017121910247637811	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9950450082934539	IMPLEMENTATION	0.004954991706546167	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9483023214630188	WITHOUT_CLASSIFICATION	0.051697678536981206	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9483023214630188	WITHOUT_CLASSIFICATION	0.051697678536981206	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.5110989795850573	WITHOUT_CLASSIFICATION	0.4889010204149427	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.915216562171697	IMPLEMENTATION	0.084783437828303	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.8935389715046349	WITHOUT_CLASSIFICATION	0.10646102849536505	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9927557001907447	WITHOUT_CLASSIFICATION	0.007244299809255386	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8984302323276749	IMPLEMENTATION	0.10156976767232505	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.912147850887307	IMPLEMENTATION	0.08785214911269307	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9910545942975437	IMPLEMENTATION	0.008945405702456355	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.946621357348257	WITHOUT_CLASSIFICATION	0.05337864265174307	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.8203436867883218	WITHOUT_CLASSIFICATION	0.17965631321167821	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.95413214822926	IMPLEMENTATION	0.04586785177074016	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9934637233185141	WITHOUT_CLASSIFICATION	0.00653627668148601	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.7860170433717221	WITHOUT_CLASSIFICATION	0.21398295662827793	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.7026874089712187	IMPLEMENTATION	0.29731259102878116	WITHOUT_CLASSIFICATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.9879377021111596	IMPLEMENTATION	0.012062297888840522	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9934637233185141	WITHOUT_CLASSIFICATION	0.00653627668148601	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9997461629425982	WITHOUT_CLASSIFICATION	2.5383705740177244E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.7960021375067357	WITHOUT_CLASSIFICATION	0.2039978624932644	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9276859511567137	IMPLEMENTATION	0.07231404884328635	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9536805573829045	IMPLEMENTATION	0.04631944261709556	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9968951101012712	WITHOUT_CLASSIFICATION	0.003104889898728765	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9713413613337367	WITHOUT_CLASSIFICATION	0.028658638666263288	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.5101252174708842	WITHOUT_CLASSIFICATION	0.4898747825291158	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.7792501975684387	WITHOUT_CLASSIFICATION	0.22074980243156142	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.99862365462571	WITHOUT_CLASSIFICATION	0.0013763453742900516	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9886196024329509	WITHOUT_CLASSIFICATION	0.011380397567049144	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9925021230882912	IMPLEMENTATION	0.0074978769117087386	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9925021230882912	IMPLEMENTATION	0.0074978769117087386	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.8300621104826749	WITHOUT_CLASSIFICATION	0.16993788951732514	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999853321365542	IMPLEMENTATION	1.466786344585916E-5	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.8454443126065773	WITHOUT_CLASSIFICATION	0.1545556873934227	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.6400001503615468	IMPLEMENTATION	0.3599998496384531	WITHOUT_CLASSIFICATION
// TODO: deal with varargs	IMPLEMENTATION	0.6400001503615468	IMPLEMENTATION	0.3599998496384531	WITHOUT_CLASSIFICATION
// TODO: other reserved names?	IMPLEMENTATION	0.9964562103468292	IMPLEMENTATION	0.003543789653170766	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9707705653431892	IMPLEMENTATION	0.02922943465681081	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.8568266813397705	IMPLEMENTATION	0.14317331866022956	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.5303787748378456	WITHOUT_CLASSIFICATION	0.46962122516215443	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.5592655150540395	IMPLEMENTATION	0.44073448494596046	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.5592655150540395	IMPLEMENTATION	0.44073448494596046	WITHOUT_CLASSIFICATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.990544116705331	IMPLEMENTATION	0.009455883294668977	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9351498825062329	WITHOUT_CLASSIFICATION	0.06485011749376708	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999987307994938	WITHOUT_CLASSIFICATION	1.2692005062813155E-6	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9928576544461225	IMPLEMENTATION	0.007142345553877472	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.956428289551444	IMPLEMENTATION	0.04357171044855605	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9930958870317192	IMPLEMENTATION	0.0069041129682807355	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.8233324576521089	IMPLEMENTATION	0.17666754234789106	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9157533460656838	IMPLEMENTATION	0.08424665393431614	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.6824805497093436	WITHOUT_CLASSIFICATION	0.31751945029065654	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.6824805497093436	WITHOUT_CLASSIFICATION	0.31751945029065654	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9477815787762492	WITHOUT_CLASSIFICATION	0.05221842122375086	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9379976775397942	WITHOUT_CLASSIFICATION	0.06200232246020569	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9907850655590601	WITHOUT_CLASSIFICATION	0.00921493444093995	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9907850655590601	WITHOUT_CLASSIFICATION	0.00921493444093995	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9880262730361745	WITHOUT_CLASSIFICATION	0.011973726963825477	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6083656736047353	IMPLEMENTATION	0.39163432639526474	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6083656736047353	IMPLEMENTATION	0.39163432639526474	WITHOUT_CLASSIFICATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.6083656736047353	IMPLEMENTATION	0.39163432639526474	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9149761871261435	WITHOUT_CLASSIFICATION	0.08502381287385655	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9149761871261435	WITHOUT_CLASSIFICATION	0.08502381287385655	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.555803186339317	IMPLEMENTATION	0.44419681366068303	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999156509816554	WITHOUT_CLASSIFICATION	8.434901834464669E-5	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.604205429647124	WITHOUT_CLASSIFICATION	0.3957945703528761	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999744265171816	IMPLEMENTATION	2.557348281836129E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997240404861374	IMPLEMENTATION	2.75959513862607E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997240404861374	IMPLEMENTATION	2.75959513862607E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997240404861374	IMPLEMENTATION	2.75959513862607E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8984302323276749	IMPLEMENTATION	0.10156976767232505	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.8984302323276749	IMPLEMENTATION	0.10156976767232505	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.8409796816166172	WITHOUT_CLASSIFICATION	0.15902031838338287	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.6400403680271538	IMPLEMENTATION	0.35995963197284625	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9483023214630188	WITHOUT_CLASSIFICATION	0.051697678536981206	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9483023214630188	WITHOUT_CLASSIFICATION	0.051697678536981206	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.8794598755262143	IMPLEMENTATION	0.12054012447378565	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.9637884474998423	WITHOUT_CLASSIFICATION	0.03621155250015778	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.7687543447404682	IMPLEMENTATION	0.2312456552595317	WITHOUT_CLASSIFICATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9850804797604664	WITHOUT_CLASSIFICATION	0.014919520239533642	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.975412365912714	IMPLEMENTATION	0.02458763408728608	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9967178246589995	IMPLEMENTATION	0.0032821753410006297	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9951390603475285	WITHOUT_CLASSIFICATION	0.004860939652471451	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999995766782529	WITHOUT_CLASSIFICATION	4.233217470397562E-7	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999997060678975	WITHOUT_CLASSIFICATION	2.9393210251793665E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999989240977171	WITHOUT_CLASSIFICATION	1.0759022828847028E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999989240977171	WITHOUT_CLASSIFICATION	1.0759022828847028E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999807565955438	WITHOUT_CLASSIFICATION	1.9243404456212942E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999807565955438	WITHOUT_CLASSIFICATION	1.9243404456212942E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999532831827208	WITHOUT_CLASSIFICATION	4.671681727920628E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999988202221376	WITHOUT_CLASSIFICATION	1.1797778623765331E-6	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999998584023545	WITHOUT_CLASSIFICATION	1.415976455283256E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.999999888670664	WITHOUT_CLASSIFICATION	1.1132933592750827E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999554364578197	WITHOUT_CLASSIFICATION	4.456354218038978E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999554364578197	WITHOUT_CLASSIFICATION	4.456354218038978E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999990511632268	WITHOUT_CLASSIFICATION	9.488367731685331E-7	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998960483129411	WITHOUT_CLASSIFICATION	1.0395168705881896E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998960483129411	WITHOUT_CLASSIFICATION	1.0395168705881896E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999994905162849	WITHOUT_CLASSIFICATION	5.094837151574991E-7	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999998042366592	WITHOUT_CLASSIFICATION	1.9576334081781766E-7	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966569072531	WITHOUT_CLASSIFICATION	3.3430927468887107E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966569072531	WITHOUT_CLASSIFICATION	3.3430927468887107E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966569072531	WITHOUT_CLASSIFICATION	3.3430927468887107E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966569072531	WITHOUT_CLASSIFICATION	3.3430927468887107E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966569072531	WITHOUT_CLASSIFICATION	3.3430927468887107E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966569072531	WITHOUT_CLASSIFICATION	3.3430927468887107E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999966569072531	WITHOUT_CLASSIFICATION	3.3430927468887107E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999717127136127	WITHOUT_CLASSIFICATION	2.8287286387267927E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999717127136127	WITHOUT_CLASSIFICATION	2.8287286387267927E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999717127136127	WITHOUT_CLASSIFICATION	2.8287286387267927E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999717127136127	WITHOUT_CLASSIFICATION	2.8287286387267927E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999717127136127	WITHOUT_CLASSIFICATION	2.8287286387267927E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999717127136127	WITHOUT_CLASSIFICATION	2.8287286387267927E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999717127136127	WITHOUT_CLASSIFICATION	2.8287286387267927E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998851714936761	WITHOUT_CLASSIFICATION	1.148285063239585E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998851714936761	WITHOUT_CLASSIFICATION	1.148285063239585E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998851714936761	WITHOUT_CLASSIFICATION	1.148285063239585E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998851714936761	WITHOUT_CLASSIFICATION	1.148285063239585E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998851714936761	WITHOUT_CLASSIFICATION	1.148285063239585E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998851714936761	WITHOUT_CLASSIFICATION	1.148285063239585E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999344771285895	WITHOUT_CLASSIFICATION	6.552287141042142E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999344771285895	WITHOUT_CLASSIFICATION	6.552287141042142E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999344771285895	WITHOUT_CLASSIFICATION	6.552287141042142E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999344771285895	WITHOUT_CLASSIFICATION	6.552287141042142E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999344771285895	WITHOUT_CLASSIFICATION	6.552287141042142E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999344771285895	WITHOUT_CLASSIFICATION	6.552287141042142E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998471615486818	WITHOUT_CLASSIFICATION	1.5283845131809336E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998471615486818	WITHOUT_CLASSIFICATION	1.5283845131809336E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998471615486818	WITHOUT_CLASSIFICATION	1.5283845131809336E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998471615486818	WITHOUT_CLASSIFICATION	1.5283845131809336E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998471615486818	WITHOUT_CLASSIFICATION	1.5283845131809336E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998471615486818	WITHOUT_CLASSIFICATION	1.5283845131809336E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9998471615486818	WITHOUT_CLASSIFICATION	1.5283845131809336E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998411662584185	WITHOUT_CLASSIFICATION	1.5883374158144172E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998411662584185	WITHOUT_CLASSIFICATION	1.5883374158144172E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998411662584185	WITHOUT_CLASSIFICATION	1.5883374158144172E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998411662584185	WITHOUT_CLASSIFICATION	1.5883374158144172E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999967425855016	WITHOUT_CLASSIFICATION	3.2574144983292284E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999967425855016	WITHOUT_CLASSIFICATION	3.2574144983292284E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.999999943106837	WITHOUT_CLASSIFICATION	5.6893162986194E-8	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999999399853011	WITHOUT_CLASSIFICATION	6.001469890391486E-8	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.999998641782609	WITHOUT_CLASSIFICATION	1.3582173909888726E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999998491414909	WITHOUT_CLASSIFICATION	1.508585091359636E-7	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999969307422581	WITHOUT_CLASSIFICATION	3.0692577418430103E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999990792878277	WITHOUT_CLASSIFICATION	9.207121721655978E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999990792878277	WITHOUT_CLASSIFICATION	9.207121721655978E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999990792878277	WITHOUT_CLASSIFICATION	9.207121721655978E-7	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999990792878277	WITHOUT_CLASSIFICATION	9.207121721655978E-7	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999985250816863	WITHOUT_CLASSIFICATION	1.4749183137050715E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999974677162338	WITHOUT_CLASSIFICATION	2.532283766364237E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999991544727426	WITHOUT_CLASSIFICATION	8.455272574514457E-7	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999996345652101	WITHOUT_CLASSIFICATION	3.6543478993426746E-7	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999996600427553	WITHOUT_CLASSIFICATION	3.399572447217869E-7	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999481665736	WITHOUT_CLASSIFICATION	5.183342639308477E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999990505434266	WITHOUT_CLASSIFICATION	9.494565733141487E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.999999994496344	WITHOUT_CLASSIFICATION	5.503655994485698E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999997149559	WITHOUT_CLASSIFICATION	2.850441433453918E-10	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999997179829491	WITHOUT_CLASSIFICATION	2.820170509190107E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999996832425723	WITHOUT_CLASSIFICATION	3.1675742770820305E-7	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999994747808075	WITHOUT_CLASSIFICATION	5.252191923830904E-7	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999648315787765	WITHOUT_CLASSIFICATION	3.516842122358758E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999474995189	WITHOUT_CLASSIFICATION	5.250048097994094E-8	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999366908058	WITHOUT_CLASSIFICATION	6.33091942322055E-8	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999316407294	WITHOUT_CLASSIFICATION	6.835927051635066E-8	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9998588430966735	WITHOUT_CLASSIFICATION	1.4115690332647512E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999990792878277	WITHOUT_CLASSIFICATION	9.207121721655978E-7	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999989687766249	WITHOUT_CLASSIFICATION	1.0312233750916584E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999957159006	WITHOUT_CLASSIFICATION	4.284099421200034E-9	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998304324565	WITHOUT_CLASSIFICATION	1.6956754343593197E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998846317666756	WITHOUT_CLASSIFICATION	1.1536823332427106E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999662116910506	WITHOUT_CLASSIFICATION	3.37883089494556E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.999999966287071	WITHOUT_CLASSIFICATION	3.3712929108301546E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999977922174	WITHOUT_CLASSIFICATION	2.20778258835236E-9	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999998662481224	WITHOUT_CLASSIFICATION	1.337518776532827E-7	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999843394768176	WITHOUT_CLASSIFICATION	1.5660523182415243E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.999999486423961	WITHOUT_CLASSIFICATION	5.135760390562039E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999999876619137	WITHOUT_CLASSIFICATION	1.2338086307185735E-8	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999996098111692	WITHOUT_CLASSIFICATION	3.901888308081208E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999994538912428	WITHOUT_CLASSIFICATION	5.461087572967629E-7	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999829963963105	WITHOUT_CLASSIFICATION	1.7003603689572252E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999975114454495	WITHOUT_CLASSIFICATION	2.4885545504925597E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999998252276693	WITHOUT_CLASSIFICATION	1.7477233073805202E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999999373214493	WITHOUT_CLASSIFICATION	6.267855069799424E-8	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999574767967	WITHOUT_CLASSIFICATION	4.252320326772426E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999993280892892	WITHOUT_CLASSIFICATION	6.719107108896696E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999949404162	WITHOUT_CLASSIFICATION	5.059583717610342E-9	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.999967614409262	WITHOUT_CLASSIFICATION	3.238559073803217E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999994814329495	WITHOUT_CLASSIFICATION	5.185670504927451E-7	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999999858978004	WITHOUT_CLASSIFICATION	1.4102199589906817E-8	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.999797860006623	WITHOUT_CLASSIFICATION	2.021399933770856E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999998215528304	WITHOUT_CLASSIFICATION	1.7844716961936382E-7	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999998030298959	WITHOUT_CLASSIFICATION	1.9697010412249007E-7	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999987537014375	WITHOUT_CLASSIFICATION	1.246298562549941E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.999996385897495	WITHOUT_CLASSIFICATION	3.6141025051496562E-6	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999965473875	WITHOUT_CLASSIFICATION	3.452612623512731E-9	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999998446296122	WITHOUT_CLASSIFICATION	1.5537038778213333E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999789081956	WITHOUT_CLASSIFICATION	2.1091804381948866E-8	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999998079900435	WITHOUT_CLASSIFICATION	1.920099564084677E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999957855406	WITHOUT_CLASSIFICATION	4.21445948366492E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999583823701	WITHOUT_CLASSIFICATION	4.1617629875279034E-8	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999967170379285	WITHOUT_CLASSIFICATION	3.2829620715419477E-6	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999999320795685	WITHOUT_CLASSIFICATION	6.792043149650373E-8	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999996410312594	WITHOUT_CLASSIFICATION	3.5896874055191685E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999999932154	WITHOUT_CLASSIFICATION	6.784544215959649E-12	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999997464943922	WITHOUT_CLASSIFICATION	2.5350560774926517E-7	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999990140084427	WITHOUT_CLASSIFICATION	9.859915573652645E-7	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999713729184	WITHOUT_CLASSIFICATION	2.862708157312026E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992946329642	WITHOUT_CLASSIFICATION	7.053670356913659E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999999537596787	WITHOUT_CLASSIFICATION	4.624032142898316E-8	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9148585530591307	WITHOUT_CLASSIFICATION	0.08514144694086927	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9148585530591307	WITHOUT_CLASSIFICATION	0.08514144694086927	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9695133467348271	WITHOUT_CLASSIFICATION	0.030486653265172897	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999996342121629	WITHOUT_CLASSIFICATION	3.657878372045815E-7	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999952608464616	WITHOUT_CLASSIFICATION	4.739153538450144E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999390783034	WITHOUT_CLASSIFICATION	6.092169662186863E-8	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999988893520851	WITHOUT_CLASSIFICATION	1.1106479149327499E-6	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999989779012654	WITHOUT_CLASSIFICATION	1.022098734707819E-6	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999999325088575	WITHOUT_CLASSIFICATION	6.749114236121941E-8	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999980569153128	WITHOUT_CLASSIFICATION	1.943084687108297E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992946329642	WITHOUT_CLASSIFICATION	7.053670356913659E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999996608019	WITHOUT_CLASSIFICATION	3.391981003278379E-10	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999890627879098	WITHOUT_CLASSIFICATION	1.0937212090332593E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999257213062913	WITHOUT_CLASSIFICATION	7.427869370869045E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999999113341135	WITHOUT_CLASSIFICATION	8.866588659611636E-8	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999479641932	WITHOUT_CLASSIFICATION	5.203580679320459E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999882405796	WITHOUT_CLASSIFICATION	1.1759420508375294E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999882405796	WITHOUT_CLASSIFICATION	1.1759420508375294E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999882405796	WITHOUT_CLASSIFICATION	1.1759420508375294E-8	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999789566081	WITHOUT_CLASSIFICATION	2.1043391941355672E-8	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999647699774	WITHOUT_CLASSIFICATION	3.523002255446937E-8	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999991161497	WITHOUT_CLASSIFICATION	8.838502938881651E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999981569899118	WITHOUT_CLASSIFICATION	1.8430100882717417E-6	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999503930421	WITHOUT_CLASSIFICATION	4.9606957824334216E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999921325774	WITHOUT_CLASSIFICATION	7.867422721903484E-9	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999736430434346	WITHOUT_CLASSIFICATION	2.6356956565452594E-5	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999962806284	WITHOUT_CLASSIFICATION	3.7193714826856703E-9	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999996998011627	WITHOUT_CLASSIFICATION	3.0019883729981855E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999996998011627	WITHOUT_CLASSIFICATION	3.0019883729981855E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999999291949894	WITHOUT_CLASSIFICATION	7.080501060586124E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999977042040101	WITHOUT_CLASSIFICATION	2.295795989946034E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999611408575	WITHOUT_CLASSIFICATION	3.885914240847504E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999611408575	WITHOUT_CLASSIFICATION	3.885914240847504E-8	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998508981202	WITHOUT_CLASSIFICATION	1.4910187989192738E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999999490459475	WITHOUT_CLASSIFICATION	5.095405238905269E-8	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999956601402545	WITHOUT_CLASSIFICATION	4.339859745527774E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999998920812	WITHOUT_CLASSIFICATION	1.0791877231255481E-10	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999984787776538	WITHOUT_CLASSIFICATION	1.5212223462696691E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.999999792970851	WITHOUT_CLASSIFICATION	2.0702914909401108E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.999999526589452	WITHOUT_CLASSIFICATION	4.734105479976197E-7	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999986469250943	WITHOUT_CLASSIFICATION	1.3530749057561365E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999922165328257	WITHOUT_CLASSIFICATION	7.783467174339005E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999999402315164	WITHOUT_CLASSIFICATION	5.976848357983438E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992946329642	WITHOUT_CLASSIFICATION	7.053670356913659E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999999935154358	WITHOUT_CLASSIFICATION	6.484564171228773E-9	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999979247222	WITHOUT_CLASSIFICATION	2.0752777714136344E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999974022009209	WITHOUT_CLASSIFICATION	2.5977990790264737E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9985789432289811	WITHOUT_CLASSIFICATION	0.0014210567710189494	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999999862458507	WITHOUT_CLASSIFICATION	1.375414929068702E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999967083806667	WITHOUT_CLASSIFICATION	3.2916193332898527E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999996351170174	WITHOUT_CLASSIFICATION	3.648829826255398E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999995481118892	WITHOUT_CLASSIFICATION	4.518881107435506E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999473807667	WITHOUT_CLASSIFICATION	5.261923340819159E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999595903211932	WITHOUT_CLASSIFICATION	4.0409678806904884E-5	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999998670535675	WITHOUT_CLASSIFICATION	1.3294643256259125E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999998468123	WITHOUT_CLASSIFICATION	1.5318769345224086E-10	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999992333069047	WITHOUT_CLASSIFICATION	7.666930953626156E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999796354588	WITHOUT_CLASSIFICATION	2.0364541195095947E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999982501573	WITHOUT_CLASSIFICATION	1.7498427687492264E-9	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999983342293371	WITHOUT_CLASSIFICATION	1.6657706628133031E-6	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999986890207737	WITHOUT_CLASSIFICATION	1.310979226331062E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999999776497035	WITHOUT_CLASSIFICATION	2.2350296465858757E-8	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999999903317009	WITHOUT_CLASSIFICATION	9.668299099410323E-8	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999996378929361	WITHOUT_CLASSIFICATION	3.621070638722609E-7	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999997701294893	WITHOUT_CLASSIFICATION	2.2987051067813125E-7	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999777558832	WITHOUT_CLASSIFICATION	2.224411678244411E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999033085216	WITHOUT_CLASSIFICATION	9.669147845982257E-8	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999999764700327	WITHOUT_CLASSIFICATION	2.3529967334416213E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999973338964	WITHOUT_CLASSIFICATION	2.666103652431291E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999508987129749	WITHOUT_CLASSIFICATION	4.9101287025070774E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999976058247488	WITHOUT_CLASSIFICATION	2.3941752512849533E-6	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999999918609537	WITHOUT_CLASSIFICATION	8.139046303277021E-8	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999748618411	WITHOUT_CLASSIFICATION	2.5138158896964263E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999998691371633	WITHOUT_CLASSIFICATION	1.3086283666531234E-7	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999978509725	WITHOUT_CLASSIFICATION	2.149027535049075E-9	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999998642114021	WITHOUT_CLASSIFICATION	1.3578859787097284E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999992174354433	WITHOUT_CLASSIFICATION	7.825645567867349E-7	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999990413619495	WITHOUT_CLASSIFICATION	9.586380505088317E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.999998662290437	WITHOUT_CLASSIFICATION	1.3377095629809813E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999957685554455	WITHOUT_CLASSIFICATION	4.231444554537928E-6	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995864576574	WITHOUT_CLASSIFICATION	4.135423426390673E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999993684292588	WITHOUT_CLASSIFICATION	6.315707412059144E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999945805797869	WITHOUT_CLASSIFICATION	5.41942021314345E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999425602165	WITHOUT_CLASSIFICATION	5.743978342348028E-8	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999828728856	WITHOUT_CLASSIFICATION	1.7127114435272115E-8	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999999579070795	WITHOUT_CLASSIFICATION	4.209292050600696E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999999966043753	WITHOUT_CLASSIFICATION	3.395624715429382E-9	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999999061846689	WITHOUT_CLASSIFICATION	9.381533105917263E-8	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999972749637983	WITHOUT_CLASSIFICATION	2.7250362015968644E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999999593336548	WITHOUT_CLASSIFICATION	4.0666345141162775E-8	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999999557451469	WITHOUT_CLASSIFICATION	4.425485304175654E-8	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999461585464128	WITHOUT_CLASSIFICATION	5.3841453587299605E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999565516946	WITHOUT_CLASSIFICATION	4.344830530332086E-8	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999957212205476	WITHOUT_CLASSIFICATION	4.278779452497524E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998242144568349	WITHOUT_CLASSIFICATION	1.757855431651901E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999963710895357	WITHOUT_CLASSIFICATION	3.6289104643030717E-6	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999962264227351	WITHOUT_CLASSIFICATION	3.7735772648965224E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999756372664	WITHOUT_CLASSIFICATION	2.4362733565957146E-8	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999948470245583	WITHOUT_CLASSIFICATION	5.152975441666185E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999993083682238	WITHOUT_CLASSIFICATION	6.916317761647594E-7	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999999219403842	WITHOUT_CLASSIFICATION	7.805961573350084E-8	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999999392690837	WITHOUT_CLASSIFICATION	6.073091630419317E-8	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999956513203988	WITHOUT_CLASSIFICATION	4.348679601148636E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999923116327271	WITHOUT_CLASSIFICATION	7.688367272873874E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999992381216477	WITHOUT_CLASSIFICATION	7.618783522566175E-7	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999992381216477	WITHOUT_CLASSIFICATION	7.618783522566175E-7	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999982878347163	WITHOUT_CLASSIFICATION	1.7121652835707349E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999982878347163	WITHOUT_CLASSIFICATION	1.7121652835707349E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999998445493795	WITHOUT_CLASSIFICATION	1.554506204510311E-7	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999998445493795	WITHOUT_CLASSIFICATION	1.554506204510311E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999994877987815	WITHOUT_CLASSIFICATION	5.122012186135814E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999994877987815	WITHOUT_CLASSIFICATION	5.122012186135814E-7	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999999408000777	WITHOUT_CLASSIFICATION	5.919992228370521E-8	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999850112674458	WITHOUT_CLASSIFICATION	1.4988732554093416E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999699305714	WITHOUT_CLASSIFICATION	3.006942860365244E-7	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999993119896	WITHOUT_CLASSIFICATION	6.880104182795107E-10	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999999570299051	WITHOUT_CLASSIFICATION	4.297009491058231E-8	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999612255794	WITHOUT_CLASSIFICATION	3.8774420564383666E-8	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999970010036064	WITHOUT_CLASSIFICATION	2.998996393549235E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999664679953	WITHOUT_CLASSIFICATION	3.353200477206451E-8	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999999258816402	WITHOUT_CLASSIFICATION	7.411835977328677E-8	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999882692561	WITHOUT_CLASSIFICATION	1.1730743958302694E-8	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999973376134634	WITHOUT_CLASSIFICATION	2.6623865366189507E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.999999993842523	WITHOUT_CLASSIFICATION	6.157476920462361E-9	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999998687378074	WITHOUT_CLASSIFICATION	1.3126219256121754E-7	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999998909679768	WITHOUT_CLASSIFICATION	1.0903202328135112E-7	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999999766036459	WITHOUT_CLASSIFICATION	2.3396354160029055E-8	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999999618652683	WITHOUT_CLASSIFICATION	3.813473166700621E-8	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999915544857528	WITHOUT_CLASSIFICATION	8.445514247183978E-6	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999830859407	WITHOUT_CLASSIFICATION	1.6914059273863398E-8	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999999884418892	WITHOUT_CLASSIFICATION	1.1558110767549283E-8	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999489612795724	WITHOUT_CLASSIFICATION	5.1038720427591154E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999998772537418	WITHOUT_CLASSIFICATION	1.2274625820212063E-7	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999999245478051	WITHOUT_CLASSIFICATION	7.545219491112029E-8	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999775646383926	WITHOUT_CLASSIFICATION	2.2435361607353677E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999999826803188	WITHOUT_CLASSIFICATION	1.731968116621656E-8	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999999920554977	WITHOUT_CLASSIFICATION	7.944502294800208E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999972418593	WITHOUT_CLASSIFICATION	2.7581406267608102E-9	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999993459951487	WITHOUT_CLASSIFICATION	6.540048512247111E-7	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999975823871856	WITHOUT_CLASSIFICATION	2.4176128143907067E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999975823871856	WITHOUT_CLASSIFICATION	2.4176128143907067E-6	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999999811562551	WITHOUT_CLASSIFICATION	1.88437449020861E-8	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999993447657826	WITHOUT_CLASSIFICATION	6.552342174521644E-7	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999978183641697	WITHOUT_CLASSIFICATION	2.1816358302969305E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999998984532	WITHOUT_CLASSIFICATION	1.0154678515390861E-10	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999999782267706	WITHOUT_CLASSIFICATION	2.1773229435884914E-8	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999999303672323	WITHOUT_CLASSIFICATION	6.96327677006772E-8	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999964090952502	WITHOUT_CLASSIFICATION	3.590904749802257E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999964090952502	WITHOUT_CLASSIFICATION	3.590904749802257E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999999471700332	WITHOUT_CLASSIFICATION	5.28299669750192E-8	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9755290659073657	WITHOUT_CLASSIFICATION	0.024470934092634407	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999506337951	WITHOUT_CLASSIFICATION	4.9366204889651124E-8	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999506337951	WITHOUT_CLASSIFICATION	4.9366204889651124E-8	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999999832582096	WITHOUT_CLASSIFICATION	1.6741790397635654E-8	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999995203476683	WITHOUT_CLASSIFICATION	4.796523317019484E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999995203476683	WITHOUT_CLASSIFICATION	4.796523317019484E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999461226586054	WITHOUT_CLASSIFICATION	5.387734139473968E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999461226586054	WITHOUT_CLASSIFICATION	5.387734139473968E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996516226997	WITHOUT_CLASSIFICATION	3.483773004408734E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996516226997	WITHOUT_CLASSIFICATION	3.483773004408734E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999998861878232	WITHOUT_CLASSIFICATION	1.138121768316956E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999989007461217	WITHOUT_CLASSIFICATION	1.099253878254814E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999058769269	WITHOUT_CLASSIFICATION	9.41230730136866E-8	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999998549065	WITHOUT_CLASSIFICATION	1.4509347975069214E-10	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999992819995	WITHOUT_CLASSIFICATION	7.180004875828134E-10	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999442979987	WITHOUT_CLASSIFICATION	5.570200123928532E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999629428996	WITHOUT_CLASSIFICATION	3.705710042704004E-8	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999794127439	WITHOUT_CLASSIFICATION	2.0587256141535056E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999629428996	WITHOUT_CLASSIFICATION	3.705710042704004E-8	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9998106802534619	WITHOUT_CLASSIFICATION	1.8931974653806186E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999993936422813	WITHOUT_CLASSIFICATION	6.063577188269894E-7	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999998425043167	WITHOUT_CLASSIFICATION	1.5749568340085547E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999941466766794	WITHOUT_CLASSIFICATION	5.853323320605737E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999487446898	WITHOUT_CLASSIFICATION	5.125531036735625E-8	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999683323712092	WITHOUT_CLASSIFICATION	3.166762879078138E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999935426753183	WITHOUT_CLASSIFICATION	6.457324681792343E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.999992975818175	WITHOUT_CLASSIFICATION	7.024181824951512E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998984893206	WITHOUT_CLASSIFICATION	1.0151067942326382E-7	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999236482897	WITHOUT_CLASSIFICATION	7.635171028430216E-8	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999902146774	WITHOUT_CLASSIFICATION	9.785322576572362E-9	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999703861479	WITHOUT_CLASSIFICATION	2.9613852162159007E-8	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999537168336537	WITHOUT_CLASSIFICATION	4.6283166346222066E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999996409789944	WITHOUT_CLASSIFICATION	3.5902100561881695E-7	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999999131081454	WITHOUT_CLASSIFICATION	8.689185456122681E-8	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999958624401	WITHOUT_CLASSIFICATION	4.137559847510167E-9	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999979095760289	WITHOUT_CLASSIFICATION	2.090423971126502E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999733133395327	WITHOUT_CLASSIFICATION	2.6686660467333566E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9898442512888687	WITHOUT_CLASSIFICATION	0.010155748711131427	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999535868665592	WITHOUT_CLASSIFICATION	4.6413133440720575E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999999996891813	WITHOUT_CLASSIFICATION	3.10818755113435E-10	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999982956973958	WITHOUT_CLASSIFICATION	1.7043026041625476E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999977608154	WITHOUT_CLASSIFICATION	2.2391846139315652E-9	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999983564867948	WITHOUT_CLASSIFICATION	1.6435132052096556E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999998719532702	WITHOUT_CLASSIFICATION	1.2804672983014327E-7	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999999730986822	WITHOUT_CLASSIFICATION	2.6901317894978786E-8	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999971181002	WITHOUT_CLASSIFICATION	2.8818999533175345E-9	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999940912734	WITHOUT_CLASSIFICATION	5.908726670138426E-9	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999989954231	WITHOUT_CLASSIFICATION	1.0045767884718699E-9	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999464223642	WITHOUT_CLASSIFICATION	5.357763573155207E-8	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999905842806	WITHOUT_CLASSIFICATION	9.415719443977305E-9	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999987460686186	WITHOUT_CLASSIFICATION	1.2539313813719182E-6	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999956726535	WITHOUT_CLASSIFICATION	4.3273464195554795E-9	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.999999914131818	WITHOUT_CLASSIFICATION	8.586818198943436E-8	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.999994798010326	WITHOUT_CLASSIFICATION	5.2019896740895635E-6	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999816662435	WITHOUT_CLASSIFICATION	1.8333756595778453E-8	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999931110269	WITHOUT_CLASSIFICATION	6.8889730600070766E-9	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.999999372825994	WITHOUT_CLASSIFICATION	6.271740059484018E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999994959267797	WITHOUT_CLASSIFICATION	5.040732202374057E-7	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999985036625	WITHOUT_CLASSIFICATION	1.4963374739380325E-9	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999970081653	WITHOUT_CLASSIFICATION	2.991834537064E-9	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997734567349	WITHOUT_CLASSIFICATION	2.2654326523062193E-7	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999838817364	WITHOUT_CLASSIFICATION	1.6118263602627427E-8	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999730475889	WITHOUT_CLASSIFICATION	2.6952411160544402E-8	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.999999997774965	WITHOUT_CLASSIFICATION	2.2250350816990873E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999912058617	WITHOUT_CLASSIFICATION	8.794138239166238E-9	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999986136909	WITHOUT_CLASSIFICATION	1.3863090252771541E-9	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999659029332	WITHOUT_CLASSIFICATION	3.4097066841734953E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999491886541	WITHOUT_CLASSIFICATION	5.0811345922732465E-8	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.999998110934475	WITHOUT_CLASSIFICATION	1.8890655251099396E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999956042698888	WITHOUT_CLASSIFICATION	4.395730111193959E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999719147648	WITHOUT_CLASSIFICATION	2.8085235342513533E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999988584180552	WITHOUT_CLASSIFICATION	1.1415819447266892E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999999461329331	WITHOUT_CLASSIFICATION	5.386706700509166E-8	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999998369354189	WITHOUT_CLASSIFICATION	1.6306458106406724E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999998369354189	WITHOUT_CLASSIFICATION	1.6306458106406724E-7	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999996752831	WITHOUT_CLASSIFICATION	3.247169409310014E-10	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999970625768	WITHOUT_CLASSIFICATION	2.937423186075583E-9	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.999999998044822	WITHOUT_CLASSIFICATION	1.955178031697515E-9	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999989612191256	WITHOUT_CLASSIFICATION	1.038780874416505E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999999140234767	WITHOUT_CLASSIFICATION	8.597652332800905E-8	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999997015113614	WITHOUT_CLASSIFICATION	2.984886385231039E-7	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999999834259589	WITHOUT_CLASSIFICATION	1.6574041101073202E-8	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999536534873814	WITHOUT_CLASSIFICATION	4.6346512618663825E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999887284216392	WITHOUT_CLASSIFICATION	1.1271578360864901E-5	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999946596615	WITHOUT_CLASSIFICATION	5.340338468251048E-9	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999997581099006	WITHOUT_CLASSIFICATION	2.4189009945575126E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999997581099006	WITHOUT_CLASSIFICATION	2.4189009945575126E-7	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9997319564900886	WITHOUT_CLASSIFICATION	2.680435099113459E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999336141865	WITHOUT_CLASSIFICATION	6.638581341843901E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999993834760904	WITHOUT_CLASSIFICATION	6.165239096050519E-7	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999997115923	WITHOUT_CLASSIFICATION	2.8840770743278513E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999998423055	WITHOUT_CLASSIFICATION	1.576944497926708E-10	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999999331976923	WITHOUT_CLASSIFICATION	6.680230767780579E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999985376137	WITHOUT_CLASSIFICATION	1.4623863420708301E-9	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999890434811	WITHOUT_CLASSIFICATION	1.095651888560716E-8	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999997883801177	WITHOUT_CLASSIFICATION	2.116198823451451E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999865190456709	WITHOUT_CLASSIFICATION	1.3480954329114842E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999995979462	WITHOUT_CLASSIFICATION	4.020538775885797E-10	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999167877536	WITHOUT_CLASSIFICATION	8.321224643440626E-8	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999998618386768	WITHOUT_CLASSIFICATION	1.3816132319271722E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999998618386768	WITHOUT_CLASSIFICATION	1.3816132319271722E-7	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999986013652303	WITHOUT_CLASSIFICATION	1.3986347697285475E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999917928640878	WITHOUT_CLASSIFICATION	8.207135912182946E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999998148241233	WITHOUT_CLASSIFICATION	1.8517587678485887E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999965745621782	WITHOUT_CLASSIFICATION	3.425437821860488E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999987924038963	WITHOUT_CLASSIFICATION	1.2075961037054574E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999999909208068	WITHOUT_CLASSIFICATION	9.079193177076205E-9	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999997939628513	WITHOUT_CLASSIFICATION	2.060371486183771E-7	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999974517052	WITHOUT_CLASSIFICATION	2.5482947181219597E-9	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9998434852343705	WITHOUT_CLASSIFICATION	1.5651476562949983E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999440228632	WITHOUT_CLASSIFICATION	5.59771368782045E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999993834760904	WITHOUT_CLASSIFICATION	6.165239096050519E-7	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999926720965088	WITHOUT_CLASSIFICATION	7.327903491256671E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999989756366151	WITHOUT_CLASSIFICATION	1.0243633848692869E-6	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999480118397	WITHOUT_CLASSIFICATION	5.198816029180271E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999996887178499	WITHOUT_CLASSIFICATION	3.112821500129629E-7	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999998754815094	WITHOUT_CLASSIFICATION	1.245184906110186E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999976264543	WITHOUT_CLASSIFICATION	2.3735457173479935E-9	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999892809682169	WITHOUT_CLASSIFICATION	1.0719031783176153E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.99999407313972	WITHOUT_CLASSIFICATION	5.926860280000059E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999982322152	WITHOUT_CLASSIFICATION	1.767784812802278E-9	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999688206109764	WITHOUT_CLASSIFICATION	3.1179389023562984E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999510596834922	WITHOUT_CLASSIFICATION	4.894031650783336E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.999999973580748	WITHOUT_CLASSIFICATION	2.6419252008948365E-8	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999997940514082	WITHOUT_CLASSIFICATION	2.0594859192675162E-7	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999719217110138	WITHOUT_CLASSIFICATION	2.807828898627954E-5	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999993207231416	WITHOUT_CLASSIFICATION	6.792768584969256E-7	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999999558486264	WITHOUT_CLASSIFICATION	4.415137360141815E-8	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999997597511473	WITHOUT_CLASSIFICATION	2.402488527277896E-7	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999998379378991	WITHOUT_CLASSIFICATION	1.6206210087986742E-7	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999956607702574	WITHOUT_CLASSIFICATION	4.339229742613059E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999999978071049	WITHOUT_CLASSIFICATION	2.192895063373996E-9	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999999173028	WITHOUT_CLASSIFICATION	8.269710483876612E-11	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999977377166691	WITHOUT_CLASSIFICATION	2.2622833309845943E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999999176751537	WITHOUT_CLASSIFICATION	8.232484631829566E-8	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999478741313595	WITHOUT_CLASSIFICATION	5.2125868640427416E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999998026361391	WITHOUT_CLASSIFICATION	1.973638610597553E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999999998615941	WITHOUT_CLASSIFICATION	1.384058922698445E-9	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999996722499922	WITHOUT_CLASSIFICATION	3.277500078190142E-7	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999996876437086	WITHOUT_CLASSIFICATION	3.123562914256818E-7	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999988238100093	WITHOUT_CLASSIFICATION	1.1761899906579203E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999995054675113	WITHOUT_CLASSIFICATION	4.94532488744921E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.999999602722862	WITHOUT_CLASSIFICATION	3.972771379872321E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.999999602722862	WITHOUT_CLASSIFICATION	3.972771379872321E-7	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9993009801349833	WITHOUT_CLASSIFICATION	6.990198650166685E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.999799146271879	WITHOUT_CLASSIFICATION	2.008537281210188E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999994748535	WITHOUT_CLASSIFICATION	5.2514653750949E-10	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9997102029596086	WITHOUT_CLASSIFICATION	2.897970403915067E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999972505903912	WITHOUT_CLASSIFICATION	2.7494096088105623E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998716726527	WITHOUT_CLASSIFICATION	1.2832734733555183E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999992946329642	WITHOUT_CLASSIFICATION	7.053670356913659E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999892333508	WITHOUT_CLASSIFICATION	1.0766649256279862E-8	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999995668289745	WITHOUT_CLASSIFICATION	4.331710254367992E-7	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998376435579	WITHOUT_CLASSIFICATION	1.6235644214308297E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999116120671	WITHOUT_CLASSIFICATION	8.838793290343793E-8	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999999329374142	WITHOUT_CLASSIFICATION	6.706258580160894E-8	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999997251409909	WITHOUT_CLASSIFICATION	2.748590090575546E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999425602165	WITHOUT_CLASSIFICATION	5.743978342348028E-8	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9996381435784433	WITHOUT_CLASSIFICATION	3.618564215567468E-4	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999981744626103	WITHOUT_CLASSIFICATION	1.8255373897880552E-6	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999992635687036	WITHOUT_CLASSIFICATION	7.364312963407096E-7	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999757583702	WITHOUT_CLASSIFICATION	2.4241629851730612E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999998215411109	WITHOUT_CLASSIFICATION	1.784588891136502E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999989605164503	WITHOUT_CLASSIFICATION	1.0394835497583862E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999899191392806	WITHOUT_CLASSIFICATION	1.0080860719384053E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999899191392806	WITHOUT_CLASSIFICATION	1.0080860719384053E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999973214591606	WITHOUT_CLASSIFICATION	2.6785408394309368E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999974470206826	WITHOUT_CLASSIFICATION	2.5529793173186942E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999994877615258	WITHOUT_CLASSIFICATION	5.122384741176354E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999999993033502	WITHOUT_CLASSIFICATION	6.966498562959108E-10	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999918768178	WITHOUT_CLASSIFICATION	8.123182210329186E-9	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9999161625666043	WITHOUT_CLASSIFICATION	8.383743339567517E-5	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999222336569	WITHOUT_CLASSIFICATION	7.776634312662982E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999997805185	WITHOUT_CLASSIFICATION	2.1948144710732582E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999985565710909	WITHOUT_CLASSIFICATION	1.4434289091047443E-6	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999870626517601	WITHOUT_CLASSIFICATION	1.293734823997767E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999992243278155	WITHOUT_CLASSIFICATION	7.756721844355681E-7	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999999964939849	WITHOUT_CLASSIFICATION	3.506015092552172E-8	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999992347550356	WITHOUT_CLASSIFICATION	7.65244964382015E-7	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999995677362	WITHOUT_CLASSIFICATION	4.32263859053368E-10	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999990197267561	WITHOUT_CLASSIFICATION	9.802732439528456E-7	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999998974479424	WITHOUT_CLASSIFICATION	1.0255205770502466E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999988765848496	WITHOUT_CLASSIFICATION	1.123415150417426E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999998301210056	WITHOUT_CLASSIFICATION	1.6987899439005702E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999835397462	WITHOUT_CLASSIFICATION	1.6460253821667422E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999981153868	WITHOUT_CLASSIFICATION	1.884613185097685E-9	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999655313773219	WITHOUT_CLASSIFICATION	3.446862267809676E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.999999644283436	WITHOUT_CLASSIFICATION	3.5571656396313606E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999999311062296	WITHOUT_CLASSIFICATION	6.889377036432383E-8	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999999005086919	WITHOUT_CLASSIFICATION	9.949130812740472E-8	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.99999975317308	WITHOUT_CLASSIFICATION	2.4682692007535284E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.999999130989065	WITHOUT_CLASSIFICATION	8.690109349114137E-7	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999924568176581	WITHOUT_CLASSIFICATION	7.543182341839058E-6	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999999750521565	WITHOUT_CLASSIFICATION	2.494784350388414E-8	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999999819391512	WITHOUT_CLASSIFICATION	1.806084885732574E-8	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999998892239195	WITHOUT_CLASSIFICATION	1.1077608048095366E-7	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999998834948847	WITHOUT_CLASSIFICATION	1.1650511526520779E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.999985048809116	WITHOUT_CLASSIFICATION	1.4951190884035388E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999993188188591	WITHOUT_CLASSIFICATION	6.811811410118961E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.999999716586653	WITHOUT_CLASSIFICATION	2.834133470704789E-7	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999981650552	WITHOUT_CLASSIFICATION	1.8349447419081333E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999996059409	WITHOUT_CLASSIFICATION	3.940590123685176E-10	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999317143253	WITHOUT_CLASSIFICATION	6.828567470387113E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999737183273197	WITHOUT_CLASSIFICATION	2.6281672680375504E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9999693321800274	WITHOUT_CLASSIFICATION	3.0667819972608485E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999935510028495	WITHOUT_CLASSIFICATION	6.448997150512678E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.999999999403111	WITHOUT_CLASSIFICATION	5.968890220580107E-10	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999997326880529	WITHOUT_CLASSIFICATION	2.6731194711793705E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999999502891141	WITHOUT_CLASSIFICATION	4.9710885857701136E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999998171749244	WITHOUT_CLASSIFICATION	1.8282507556113405E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999998736444397	WITHOUT_CLASSIFICATION	1.2635556032176647E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999998171749244	WITHOUT_CLASSIFICATION	1.8282507556113405E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999999877640696	WITHOUT_CLASSIFICATION	1.2235930413681401E-7	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9849224802606958	WITHOUT_CLASSIFICATION	0.015077519739304048	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999974556759228	WITHOUT_CLASSIFICATION	2.544324077276921E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6871064057650308	IMPLEMENTATION	0.3128935942349693	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999995699603892	WITHOUT_CLASSIFICATION	4.300396108216605E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999918476363	WITHOUT_CLASSIFICATION	8.152363607653873E-9	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999999923196214	WITHOUT_CLASSIFICATION	7.680378565851425E-9	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999700864377	WITHOUT_CLASSIFICATION	2.991356229331526E-8	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999860507163447	WITHOUT_CLASSIFICATION	1.3949283655195564E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7851864353094387	IMPLEMENTATION	0.21481356469056137	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9998591301250287	WITHOUT_CLASSIFICATION	1.4086987497141494E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999988588222	WITHOUT_CLASSIFICATION	1.141177800027786E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9998663551010427	WITHOUT_CLASSIFICATION	1.3364489895735136E-4	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999980106075675	WITHOUT_CLASSIFICATION	1.9893924325166287E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9929540512213952	WITHOUT_CLASSIFICATION	0.007045948778604688	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9818290077273812	WITHOUT_CLASSIFICATION	0.018170992272618713	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9997364736639871	WITHOUT_CLASSIFICATION	2.635263360129289E-4	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999971811235	WITHOUT_CLASSIFICATION	2.8188763921034706E-9	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999981438018694	WITHOUT_CLASSIFICATION	1.856198130601199E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999970369942376	WITHOUT_CLASSIFICATION	2.963005762421225E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999797386319355	WITHOUT_CLASSIFICATION	2.0261368064538244E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999938639664	WITHOUT_CLASSIFICATION	6.136033595580584E-9	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999990724895913	WITHOUT_CLASSIFICATION	9.27510408719148E-7	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999999397171025	WITHOUT_CLASSIFICATION	6.028289741693185E-8	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999993164291844	WITHOUT_CLASSIFICATION	6.835708156344826E-7	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.999999621494889	WITHOUT_CLASSIFICATION	3.7850511106769336E-7	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999946288739	WITHOUT_CLASSIFICATION	5.371126095272507E-9	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999676172893	WITHOUT_CLASSIFICATION	3.238271067618368E-8	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999996832425723	WITHOUT_CLASSIFICATION	3.1675742770820305E-7	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.999999460460199	WITHOUT_CLASSIFICATION	5.395398009426053E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997934774075	WITHOUT_CLASSIFICATION	2.0652259243030754E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999996958967159	WITHOUT_CLASSIFICATION	3.041032840410529E-7	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999996634939633	WITHOUT_CLASSIFICATION	3.365060366230348E-7	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999978102374552	WITHOUT_CLASSIFICATION	2.1897625448594626E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999994329047573	WITHOUT_CLASSIFICATION	5.670952426693752E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999997768311221	WITHOUT_CLASSIFICATION	2.2316887793065057E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999999607289	WITHOUT_CLASSIFICATION	3.92711593675445E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999987249243	WITHOUT_CLASSIFICATION	1.2750757579668796E-9	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999952958219961	WITHOUT_CLASSIFICATION	4.704178003914175E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999534526522	WITHOUT_CLASSIFICATION	4.6547347793887726E-8	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999702891885942	WITHOUT_CLASSIFICATION	2.9710811405799255E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999983676931418	WITHOUT_CLASSIFICATION	1.632306858207288E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999764199929	WITHOUT_CLASSIFICATION	2.3580007044225376E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.999997662038256	WITHOUT_CLASSIFICATION	2.3379617439890826E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.999997662038256	WITHOUT_CLASSIFICATION	2.3379617439890826E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999975915111029	WITHOUT_CLASSIFICATION	2.4084888970710633E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999999985019659	WITHOUT_CLASSIFICATION	1.4980341124310604E-9	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999497829304	WITHOUT_CLASSIFICATION	5.021706947279547E-8	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999983878	WITHOUT_CLASSIFICATION	1.612117665166909E-12	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999996	WITHOUT_CLASSIFICATION	4.4214009739737975E-16	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999986785723	WITHOUT_CLASSIFICATION	1.3214277013535923E-9	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999539291919136	WITHOUT_CLASSIFICATION	4.6070808086379005E-5	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.999999870773888	WITHOUT_CLASSIFICATION	1.292261119535893E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999998331857541	WITHOUT_CLASSIFICATION	1.6681424579247216E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999980334967	WITHOUT_CLASSIFICATION	1.966503213025489E-9	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999996975819	WITHOUT_CLASSIFICATION	3.024181870763391E-10	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999806956065	WITHOUT_CLASSIFICATION	1.9304393447876005E-8	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999298489295	WITHOUT_CLASSIFICATION	7.015107047119258E-8	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999017743834326	WITHOUT_CLASSIFICATION	9.8225616567303E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999931595653	WITHOUT_CLASSIFICATION	6.840434715790251E-9	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9999624871082473	WITHOUT_CLASSIFICATION	3.751289175265096E-5	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999614079036	WITHOUT_CLASSIFICATION	3.8592096333056257E-8	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999979822422	WITHOUT_CLASSIFICATION	2.0177579101098647E-9	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999999706520751	WITHOUT_CLASSIFICATION	2.934792487217294E-8	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999792593147	WITHOUT_CLASSIFICATION	2.0740685171956383E-8	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.999905476071981	WITHOUT_CLASSIFICATION	9.45239280189668E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9992481538344957	WITHOUT_CLASSIFICATION	7.518461655041688E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999996099372754	WITHOUT_CLASSIFICATION	3.900627245998451E-7	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999703776402	WITHOUT_CLASSIFICATION	2.962235979646889E-8	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999965382624	WITHOUT_CLASSIFICATION	3.4617376010320304E-9	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999973379149	WITHOUT_CLASSIFICATION	2.6620851397915117E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999998779381	WITHOUT_CLASSIFICATION	1.2206183560522864E-10	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999999804821026	WITHOUT_CLASSIFICATION	1.9517897424551707E-8	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999920535065	WITHOUT_CLASSIFICATION	7.946493517038783E-9	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999999968390489	WITHOUT_CLASSIFICATION	3.160951152800065E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999993683110852	WITHOUT_CLASSIFICATION	6.316889148099719E-7	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999646061898	WITHOUT_CLASSIFICATION	3.5393810295453924E-8	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999975407924	WITHOUT_CLASSIFICATION	2.459207608021671E-9	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999980647458445	WITHOUT_CLASSIFICATION	1.935254155539071E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999996221247	WITHOUT_CLASSIFICATION	3.778753392848441E-10	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.999999929160507	WITHOUT_CLASSIFICATION	7.083949311924607E-8	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998516169096	WITHOUT_CLASSIFICATION	1.4838309044288944E-7	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998826198003	WITHOUT_CLASSIFICATION	1.1738019974698154E-7	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999331171200976	WITHOUT_CLASSIFICATION	6.688287990240967E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999999951272337	WITHOUT_CLASSIFICATION	4.872766291876763E-8	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.999999606571296	WITHOUT_CLASSIFICATION	3.934287039584456E-7	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9990121687978307	WITHOUT_CLASSIFICATION	9.878312021693151E-4	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999472914755752	WITHOUT_CLASSIFICATION	5.270852442476971E-5	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999665883013	WITHOUT_CLASSIFICATION	3.341169882870453E-8	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999814810213937	WITHOUT_CLASSIFICATION	1.8518978606284567E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999997797322839	WITHOUT_CLASSIFICATION	2.2026771602143856E-7	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999999840796263	WITHOUT_CLASSIFICATION	1.5920373695828424E-7	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999999832798435	WITHOUT_CLASSIFICATION	1.6720156508075035E-7	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999987411562906	WITHOUT_CLASSIFICATION	1.258843709313327E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999337544481491	WITHOUT_CLASSIFICATION	6.624555185086462E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999967387709413	WITHOUT_CLASSIFICATION	3.2612290587654115E-6	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999999200252196	WITHOUT_CLASSIFICATION	7.997478039625439E-7	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999999924826564	WITHOUT_CLASSIFICATION	7.517343601517744E-8	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999960059522	WITHOUT_CLASSIFICATION	3.994047772847153E-9	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999999739195124	WITHOUT_CLASSIFICATION	2.608048760325766E-7	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999901385290482	WITHOUT_CLASSIFICATION	9.861470951790387E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999900080236	WITHOUT_CLASSIFICATION	9.991976366145076E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999927130391	WITHOUT_CLASSIFICATION	7.286960989732298E-9	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999956875176412	WITHOUT_CLASSIFICATION	4.312482358868067E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999465585174	WITHOUT_CLASSIFICATION	5.344148252215897E-8	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999912828826	WITHOUT_CLASSIFICATION	8.717117330559096E-9	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999696442897	WITHOUT_CLASSIFICATION	3.035571036276548E-8	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999999841294	WITHOUT_CLASSIFICATION	1.587063926149024E-11	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.999999997887711	WITHOUT_CLASSIFICATION	2.1122890119277067E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999733121004297	WITHOUT_CLASSIFICATION	2.6687899570324E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999234611521	WITHOUT_CLASSIFICATION	7.653884789044239E-8	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999266556483	WITHOUT_CLASSIFICATION	7.33443516631062E-8	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999898688651	WITHOUT_CLASSIFICATION	1.0131134940131274E-8	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999985217674572	WITHOUT_CLASSIFICATION	1.478232542859436E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999997999394733	WITHOUT_CLASSIFICATION	2.0006052678383802E-7	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999992431042326	WITHOUT_CLASSIFICATION	7.568957672716997E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999934824435135	WITHOUT_CLASSIFICATION	6.517556486490105E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999999813341772	WITHOUT_CLASSIFICATION	1.8665822777731828E-8	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999997196679473	WITHOUT_CLASSIFICATION	2.8033205273342317E-7	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999996512632472	WITHOUT_CLASSIFICATION	3.487367528913299E-7	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999989689757145	WITHOUT_CLASSIFICATION	1.0310242855382997E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999995587821802	WITHOUT_CLASSIFICATION	4.412178197980486E-7	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999994937161221	WITHOUT_CLASSIFICATION	5.062838778335241E-7	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.999999449014417	WITHOUT_CLASSIFICATION	5.509855829693383E-7	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999994984844325	WITHOUT_CLASSIFICATION	5.015155675846282E-7	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999993713254653	WITHOUT_CLASSIFICATION	6.286745347143049E-7	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999995084304543	WITHOUT_CLASSIFICATION	4.915695457250939E-7	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999991949067027	WITHOUT_CLASSIFICATION	8.050932972667846E-7	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999993481223214	WITHOUT_CLASSIFICATION	6.518776785532405E-7	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999994576826018	WITHOUT_CLASSIFICATION	5.423173981852427E-7	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999995985201625	WITHOUT_CLASSIFICATION	4.014798374387173E-7	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999994432367045	WITHOUT_CLASSIFICATION	5.567632955013233E-7	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999994259289007	WITHOUT_CLASSIFICATION	5.740710992705321E-7	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999993035981631	WITHOUT_CLASSIFICATION	6.964018369033481E-7	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999995016503651	WITHOUT_CLASSIFICATION	4.983496348618642E-7	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999992942546124	WITHOUT_CLASSIFICATION	7.057453876499058E-7	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.999999869767943	WITHOUT_CLASSIFICATION	1.3023205700124738E-7	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999995522243235	WITHOUT_CLASSIFICATION	4.4777567652695147E-7	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999996969476285	WITHOUT_CLASSIFICATION	3.030523715255561E-7	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9985480236321534	WITHOUT_CLASSIFICATION	0.0014519763678466054	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998722933856323	WITHOUT_CLASSIFICATION	1.27706614367625E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999996521282436	WITHOUT_CLASSIFICATION	3.478717564064358E-7	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999996570437671	WITHOUT_CLASSIFICATION	3.429562328960206E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.999999763367043	WITHOUT_CLASSIFICATION	2.3663295713800142E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999994723161351	WITHOUT_CLASSIFICATION	5.276838648991571E-7	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9852386973165462	WITHOUT_CLASSIFICATION	0.014761302683453858	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999998355266719	WITHOUT_CLASSIFICATION	1.644733279879941E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999949647594419	WITHOUT_CLASSIFICATION	5.035240557977625E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.8324822014530822	IMPLEMENTATION	0.16751779854691787	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999996405288301	WITHOUT_CLASSIFICATION	3.594711699674941E-7	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999999067384	WITHOUT_CLASSIFICATION	9.326161847269122E-11	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999160501998	WITHOUT_CLASSIFICATION	8.394980022863007E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999160501998	WITHOUT_CLASSIFICATION	8.394980022863007E-8	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999997833996042	WITHOUT_CLASSIFICATION	2.1660039576570558E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.999919284845807	WITHOUT_CLASSIFICATION	8.071515419304123E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999877274	WITHOUT_CLASSIFICATION	1.227272233924107E-11	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999989613996244	WITHOUT_CLASSIFICATION	1.0386003756271924E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999986100496652	WITHOUT_CLASSIFICATION	1.3899503347889352E-6	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999997022902927	WITHOUT_CLASSIFICATION	2.9770970734626594E-7	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999999447559721	WITHOUT_CLASSIFICATION	5.5244027932137524E-8	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999996559888589	WITHOUT_CLASSIFICATION	3.440111410940028E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999996827330424	WITHOUT_CLASSIFICATION	3.172669576340127E-7	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999999330830485	WITHOUT_CLASSIFICATION	6.691695161654882E-8	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999908891687854	WITHOUT_CLASSIFICATION	9.110831214610823E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999698570248	WITHOUT_CLASSIFICATION	3.014297522309806E-8	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999998241723933	WITHOUT_CLASSIFICATION	1.7582760672950644E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999998916557015	WITHOUT_CLASSIFICATION	1.0834429848750304E-7	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999998996762726	WITHOUT_CLASSIFICATION	1.0032372751076155E-7	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.999999075536606	WITHOUT_CLASSIFICATION	9.244633940163812E-7	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.999999966287071	WITHOUT_CLASSIFICATION	3.3712929108301546E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999888627634	WITHOUT_CLASSIFICATION	1.1137236682009215E-8	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999998479317979	WITHOUT_CLASSIFICATION	1.5206820218051207E-7	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999979362586388	WITHOUT_CLASSIFICATION	2.063741361290761E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999936992021	WITHOUT_CLASSIFICATION	6.300798006172483E-9	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999999647048132	WITHOUT_CLASSIFICATION	3.529518690579709E-8	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999965337734971	WITHOUT_CLASSIFICATION	3.4662265028838037E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999999998456919	WITHOUT_CLASSIFICATION	1.5430814071031547E-10	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999996821034723	WITHOUT_CLASSIFICATION	3.178965276045544E-7	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999972246783869	WITHOUT_CLASSIFICATION	2.77532161309379E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999999997488209	WITHOUT_CLASSIFICATION	2.5117909741783482E-9	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999998201702144	WITHOUT_CLASSIFICATION	1.7982978560780898E-7	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999966400150341	WITHOUT_CLASSIFICATION	3.3599849660294144E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999986589631618	WITHOUT_CLASSIFICATION	1.3410368381853945E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999971014219087	WITHOUT_CLASSIFICATION	2.898578091260496E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999951326620607	WITHOUT_CLASSIFICATION	4.867337939185821E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999987195055711	WITHOUT_CLASSIFICATION	1.28049442896809E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999980063249667	WITHOUT_CLASSIFICATION	1.993675033184679E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999988539911104	WITHOUT_CLASSIFICATION	1.146008889647734E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999958380546885	WITHOUT_CLASSIFICATION	4.161945311535273E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999461451401	WITHOUT_CLASSIFICATION	5.3854859933348456E-8	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999980720292	WITHOUT_CLASSIFICATION	1.9279707851105022E-9	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999950313270367	WITHOUT_CLASSIFICATION	4.968672963310551E-6	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999852399855	WITHOUT_CLASSIFICATION	1.4760014631685831E-8	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.997932906129017	WITHOUT_CLASSIFICATION	0.002067093870983025	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999922110359024	WITHOUT_CLASSIFICATION	7.788964097645055E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999933046634023	WITHOUT_CLASSIFICATION	6.695336597654887E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999106773703758	WITHOUT_CLASSIFICATION	8.932262962432285E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999106773703758	WITHOUT_CLASSIFICATION	8.932262962432285E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.999999994025996	WITHOUT_CLASSIFICATION	5.974003880104348E-9	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999994272225055	WITHOUT_CLASSIFICATION	5.727774946460865E-7	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999559424717	WITHOUT_CLASSIFICATION	4.405752830846904E-8	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999990650841882	WITHOUT_CLASSIFICATION	9.349158118081935E-7	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999998777726166	WITHOUT_CLASSIFICATION	1.222273834734728E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999995026858165	WITHOUT_CLASSIFICATION	4.97314183494056E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999992622003756	WITHOUT_CLASSIFICATION	7.377996243562678E-7	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999881692008225	WITHOUT_CLASSIFICATION	1.1830799177607558E-5	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999980116540166	WITHOUT_CLASSIFICATION	1.988345983397377E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999997025717666	WITHOUT_CLASSIFICATION	2.9742823343941537E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999998068995549	WITHOUT_CLASSIFICATION	1.9310044514213382E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999997744131132	WITHOUT_CLASSIFICATION	2.2558688689288753E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999981763838758	WITHOUT_CLASSIFICATION	1.8236161242184926E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999981345906	WITHOUT_CLASSIFICATION	1.86540933064778E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8747776701545308	WITHOUT_CLASSIFICATION	0.1252223298454692	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.999881304410666	WITHOUT_CLASSIFICATION	1.1869558933397611E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.999985983502309	WITHOUT_CLASSIFICATION	1.4016497690879783E-5	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.999999988802294	WITHOUT_CLASSIFICATION	1.119770608538414E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9998708403251636	WITHOUT_CLASSIFICATION	1.291596748364035E-4	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.999993684292588	WITHOUT_CLASSIFICATION	6.315707412059144E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999999255952175	WITHOUT_CLASSIFICATION	7.440478251209784E-7	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.999999255952175	WITHOUT_CLASSIFICATION	7.440478251209784E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.999999973479683	WITHOUT_CLASSIFICATION	2.652031708116085E-8	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999988982590068	WITHOUT_CLASSIFICATION	1.1017409931840307E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996222607466	WITHOUT_CLASSIFICATION	3.7773925339428736E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999913860305	WITHOUT_CLASSIFICATION	8.613969644058375E-9	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999058769269	WITHOUT_CLASSIFICATION	9.41230730136866E-8	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999999219807	WITHOUT_CLASSIFICATION	7.801930422611307E-10	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9965705035407949	WITHOUT_CLASSIFICATION	0.0034294964592051624	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.999999729623875	WITHOUT_CLASSIFICATION	2.703761251007043E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999999811775587	WITHOUT_CLASSIFICATION	1.8822441279538574E-8	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999998104387297	WITHOUT_CLASSIFICATION	1.8956127036490456E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999963587054	WITHOUT_CLASSIFICATION	3.64129466216601E-9	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999835503893	WITHOUT_CLASSIFICATION	1.6449610639838593E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999999437381	WITHOUT_CLASSIFICATION	5.6261983187285616E-11	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999942862056065	WITHOUT_CLASSIFICATION	5.713794393438124E-6	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999996171140294	WITHOUT_CLASSIFICATION	3.828859705326356E-7	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.999999460974353	WITHOUT_CLASSIFICATION	5.390256470270873E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999844975138867	WITHOUT_CLASSIFICATION	1.5502486113304505E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999922194457	WITHOUT_CLASSIFICATION	7.78055423676964E-9	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999985536390509	WITHOUT_CLASSIFICATION	1.446360949108893E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999944275769527	WITHOUT_CLASSIFICATION	5.572423047290862E-6	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999983116010941	WITHOUT_CLASSIFICATION	1.6883989059158154E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999992260597755	WITHOUT_CLASSIFICATION	7.73940224442417E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.999999995461215	WITHOUT_CLASSIFICATION	4.538785073765811E-9	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999946288739	WITHOUT_CLASSIFICATION	5.371126095272507E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999986785723	WITHOUT_CLASSIFICATION	1.3214277013535923E-9	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999989555054846	WITHOUT_CLASSIFICATION	1.0444945154171072E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999821910626	WITHOUT_CLASSIFICATION	1.7808937450109964E-8	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999987589849	WITHOUT_CLASSIFICATION	1.241015127237047E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999791442749	WITHOUT_CLASSIFICATION	2.085572508014913E-8	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999995803221496	WITHOUT_CLASSIFICATION	4.19677850316536E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999995803221496	WITHOUT_CLASSIFICATION	4.19677850316536E-7	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999587149832	WITHOUT_CLASSIFICATION	4.1285016766933125E-8	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999998564025122	WITHOUT_CLASSIFICATION	1.4359748786234156E-7	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999992401991818	WITHOUT_CLASSIFICATION	7.598008181018736E-7	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999953547206	WITHOUT_CLASSIFICATION	4.645279407245586E-9	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999003443658	WITHOUT_CLASSIFICATION	9.965563421302058E-8	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999994611540489	WITHOUT_CLASSIFICATION	5.388459510834303E-7	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999980243988866	WITHOUT_CLASSIFICATION	1.975601113349506E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.999999752494388	WITHOUT_CLASSIFICATION	2.4750561204031653E-7	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999993772123502	WITHOUT_CLASSIFICATION	6.227876498465811E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999962142792	WITHOUT_CLASSIFICATION	3.785720843405647E-9	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999999482401633	WITHOUT_CLASSIFICATION	5.175983677573359E-8	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999996911970163	WITHOUT_CLASSIFICATION	3.0880298377335154E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.999989068531417	WITHOUT_CLASSIFICATION	1.0931468583016551E-5	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999983540553	WITHOUT_CLASSIFICATION	1.6459446903713022E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999956886968	WITHOUT_CLASSIFICATION	4.311303164784918E-9	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999699305714	WITHOUT_CLASSIFICATION	3.006942860365244E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999999891444016	WITHOUT_CLASSIFICATION	1.0855598394087157E-7	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999858425652	WITHOUT_CLASSIFICATION	1.415743479507511E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999999290552481	WITHOUT_CLASSIFICATION	7.094475189624387E-7	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999352237074	WITHOUT_CLASSIFICATION	6.477629259988661E-8	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999999996771332	WITHOUT_CLASSIFICATION	3.2286681011106322E-9	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999878985512	WITHOUT_CLASSIFICATION	1.2101448922349872E-8	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.999999973686855	WITHOUT_CLASSIFICATION	2.6313145063503144E-8	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999988244152388	WITHOUT_CLASSIFICATION	1.1755847612074823E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999960564435	WITHOUT_CLASSIFICATION	3.943556450719798E-9	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999577074631	WITHOUT_CLASSIFICATION	4.2292536968479834E-8	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999993965416529	WITHOUT_CLASSIFICATION	6.034583469750621E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999990224733	WITHOUT_CLASSIFICATION	9.775266808077885E-10	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999994192944	WITHOUT_CLASSIFICATION	5.807055713478093E-10	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999993369926972	WITHOUT_CLASSIFICATION	6.630073029261152E-7	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999665358498283	WITHOUT_CLASSIFICATION	3.346415017169736E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999987999487354	WITHOUT_CLASSIFICATION	1.2000512645526913E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999829058575	WITHOUT_CLASSIFICATION	1.709414246394861E-8	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999799072950781	WITHOUT_CLASSIFICATION	2.0092704921913183E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999970528452622	WITHOUT_CLASSIFICATION	2.947154737847799E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999425171025865	WITHOUT_CLASSIFICATION	5.748289741354307E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999992843534178	WITHOUT_CLASSIFICATION	7.156465822165149E-7	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999944329767689	WITHOUT_CLASSIFICATION	5.567023231097467E-6	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999999741910615	WITHOUT_CLASSIFICATION	2.580893850105495E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999708581869693	WITHOUT_CLASSIFICATION	2.9141813030781152E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999818104621	WITHOUT_CLASSIFICATION	1.8189537800563387E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999993300203398	WITHOUT_CLASSIFICATION	6.699796602391311E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999995992352596	WITHOUT_CLASSIFICATION	4.0076474030725526E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999999354379222	WITHOUT_CLASSIFICATION	6.456207776308386E-8	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999988138363426	WITHOUT_CLASSIFICATION	1.1861636574109399E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999999349303897	WITHOUT_CLASSIFICATION	6.506961034369437E-8	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999565285848	WITHOUT_CLASSIFICATION	4.347141516875563E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999623296819	WITHOUT_CLASSIFICATION	3.7670318003046706E-8	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999977631034408	WITHOUT_CLASSIFICATION	2.23689655928514E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999993692673534	WITHOUT_CLASSIFICATION	6.30732646491131E-7	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999998155098592	WITHOUT_CLASSIFICATION	1.8449014070516222E-7	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999995933797814	WITHOUT_CLASSIFICATION	4.0662021860836434E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999967259030932	WITHOUT_CLASSIFICATION	3.2740969066673626E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999979546534091	WITHOUT_CLASSIFICATION	2.0453465909485735E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999997122741512	WITHOUT_CLASSIFICATION	2.8772584878596407E-7	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.999999175969685	WITHOUT_CLASSIFICATION	8.240303149480328E-7	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999986138862603	WITHOUT_CLASSIFICATION	1.3861137396575956E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999997948242	WITHOUT_CLASSIFICATION	2.051756601120798E-10	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999992317659885	WITHOUT_CLASSIFICATION	7.682340115335389E-7	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999774759085	WITHOUT_CLASSIFICATION	2.252409149089278E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999980023634409	WITHOUT_CLASSIFICATION	1.997636559098044E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999998155098592	WITHOUT_CLASSIFICATION	1.8449014070516222E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999967259030932	WITHOUT_CLASSIFICATION	3.2740969066673626E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999995933797814	WITHOUT_CLASSIFICATION	4.0662021860836434E-7	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999997025053198	WITHOUT_CLASSIFICATION	2.974946801860574E-7	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999995002241183	WITHOUT_CLASSIFICATION	4.997758817054121E-7	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999995769696904	WITHOUT_CLASSIFICATION	4.2303030964771964E-7	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999996797767399	WITHOUT_CLASSIFICATION	3.20223260161081E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9999510185492779	WITHOUT_CLASSIFICATION	4.898145072206382E-5	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999997609870112	WITHOUT_CLASSIFICATION	2.3901298888838203E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999996319726528	WITHOUT_CLASSIFICATION	3.6802734711176997E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998801355491	WITHOUT_CLASSIFICATION	1.19864450894393E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999981495993462	WITHOUT_CLASSIFICATION	1.8504006537756427E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999827674368	WITHOUT_CLASSIFICATION	1.7232563151334383E-8	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999464729386	WITHOUT_CLASSIFICATION	5.3527061535452364E-8	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999953795237444	WITHOUT_CLASSIFICATION	4.62047625560717E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999994933223566	WITHOUT_CLASSIFICATION	5.066776433488881E-7	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999977069898455	WITHOUT_CLASSIFICATION	2.2930101545112527E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999271784764	WITHOUT_CLASSIFICATION	7.28215235571338E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999997269351325	WITHOUT_CLASSIFICATION	2.7306486743302305E-7	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999908424188312	WITHOUT_CLASSIFICATION	9.157581168826736E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999998266875305	WITHOUT_CLASSIFICATION	1.733124694811338E-7	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999998266875305	WITHOUT_CLASSIFICATION	1.733124694811338E-7	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999999837981063	WITHOUT_CLASSIFICATION	1.620189369761653E-7	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999834878678	WITHOUT_CLASSIFICATION	1.6512132153249514E-8	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999998798367854	WITHOUT_CLASSIFICATION	1.201632145281642E-7	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999599609911185	WITHOUT_CLASSIFICATION	4.0039008881536884E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999970285092858	WITHOUT_CLASSIFICATION	2.971490714157685E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999687733523	WITHOUT_CLASSIFICATION	3.122664775381312E-8	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999720899287	WITHOUT_CLASSIFICATION	2.791007135990825E-8	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999999240896542	WITHOUT_CLASSIFICATION	7.591034582259946E-8	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999989258981216	WITHOUT_CLASSIFICATION	1.0741018785019016E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999782422867	WITHOUT_CLASSIFICATION	2.1757713340423888E-8	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.999999981989872	WITHOUT_CLASSIFICATION	1.8010127946122416E-8	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.999997431614342	WITHOUT_CLASSIFICATION	2.5683856580234083E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999997851853081	WITHOUT_CLASSIFICATION	2.1481469197803009E-7	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999998036557058	WITHOUT_CLASSIFICATION	1.9634429416508718E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9966024645861156	WITHOUT_CLASSIFICATION	0.003397535413884319	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999778519544	WITHOUT_CLASSIFICATION	2.2148045564801095E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997756331267	WITHOUT_CLASSIFICATION	2.2436687339841735E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997459975581	WITHOUT_CLASSIFICATION	2.540024418733268E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997459975581	WITHOUT_CLASSIFICATION	2.540024418733268E-7	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999994758552886	WITHOUT_CLASSIFICATION	5.24144711434637E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999999618653594	WITHOUT_CLASSIFICATION	3.8134640569043287E-8	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999731062887	WITHOUT_CLASSIFICATION	2.689371133284795E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999978682002298	WITHOUT_CLASSIFICATION	2.131799770121613E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999996925421288	WITHOUT_CLASSIFICATION	3.0745787120399765E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997459975581	WITHOUT_CLASSIFICATION	2.540024418733268E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997459975581	WITHOUT_CLASSIFICATION	2.540024418733268E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993820423753	WITHOUT_CLASSIFICATION	6.179576248541618E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993820423753	WITHOUT_CLASSIFICATION	6.179576248541618E-7	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999983398448318	WITHOUT_CLASSIFICATION	1.6601551682858385E-6	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999968122451035	WITHOUT_CLASSIFICATION	3.1877548965249847E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999189114863	WITHOUT_CLASSIFICATION	8.108851368585968E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999936747663	WITHOUT_CLASSIFICATION	6.325233750006514E-9	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999997702869405	WITHOUT_CLASSIFICATION	2.2971305948409634E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999997702869405	WITHOUT_CLASSIFICATION	2.2971305948409634E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999758236598	WITHOUT_CLASSIFICATION	2.4176340093547685E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999967674561309	WITHOUT_CLASSIFICATION	3.232543869167783E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999555203569	WITHOUT_CLASSIFICATION	4.4479643046684076E-8	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999918382779163	WITHOUT_CLASSIFICATION	8.161722083730793E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993580174668	WITHOUT_CLASSIFICATION	6.419825331871545E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995039309798	WITHOUT_CLASSIFICATION	4.960690201530327E-7	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9996031949098538	WITHOUT_CLASSIFICATION	3.9680509014624276E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999601765647	WITHOUT_CLASSIFICATION	3.982343539548391E-8	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999988453696	WITHOUT_CLASSIFICATION	1.1546303795966663E-9	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999984234499	WITHOUT_CLASSIFICATION	1.5765501165614712E-9	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999975644210294	WITHOUT_CLASSIFICATION	2.4355789705228567E-6	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999782540672	WITHOUT_CLASSIFICATION	2.1745932896949935E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.999999906563806	WITHOUT_CLASSIFICATION	9.343619403520189E-8	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999855083881	WITHOUT_CLASSIFICATION	1.449161196592544E-8	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999778519544	WITHOUT_CLASSIFICATION	2.2148045564801095E-8	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997459975581	WITHOUT_CLASSIFICATION	2.540024418733268E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993820423753	WITHOUT_CLASSIFICATION	6.179576248541618E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995039309798	WITHOUT_CLASSIFICATION	4.960690201530327E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997610028	WITHOUT_CLASSIFICATION	2.3899726340143523E-10	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997610028	WITHOUT_CLASSIFICATION	2.3899726340143523E-10	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.999992857228094	WITHOUT_CLASSIFICATION	7.142771906049438E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999991399795	WITHOUT_CLASSIFICATION	8.600205529559178E-10	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999904022164	WITHOUT_CLASSIFICATION	9.597783535928658E-9	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999912340378	WITHOUT_CLASSIFICATION	8.765962166114758E-9	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999998783895647	WITHOUT_CLASSIFICATION	1.2161043528406352E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999999993746768	WITHOUT_CLASSIFICATION	6.253233195797014E-10	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999998959772576	WITHOUT_CLASSIFICATION	1.0402274244052992E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999995177882318	WITHOUT_CLASSIFICATION	4.8221176807719E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999998079108	WITHOUT_CLASSIFICATION	1.9208924248064303E-10	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999995653995821	WITHOUT_CLASSIFICATION	4.346004178923603E-7	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999956922323405	WITHOUT_CLASSIFICATION	4.3077676594665425E-6	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999949636773	WITHOUT_CLASSIFICATION	5.03632270410776E-9	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999887012996	WITHOUT_CLASSIFICATION	1.1298700403835727E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997756331267	WITHOUT_CLASSIFICATION	2.2436687339841735E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993820423753	WITHOUT_CLASSIFICATION	6.179576248541618E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999967674561309	WITHOUT_CLASSIFICATION	3.232543869167783E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999555203569	WITHOUT_CLASSIFICATION	4.4479643046684076E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999555203569	WITHOUT_CLASSIFICATION	4.4479643046684076E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993580174668	WITHOUT_CLASSIFICATION	6.419825331871545E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995039309798	WITHOUT_CLASSIFICATION	4.960690201530327E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999995039309798	WITHOUT_CLASSIFICATION	4.960690201530327E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997610028	WITHOUT_CLASSIFICATION	2.3899726340143523E-10	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999951419283782	WITHOUT_CLASSIFICATION	4.858071621723374E-6	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999991217038979	WITHOUT_CLASSIFICATION	8.782961021757539E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999991473	WITHOUT_CLASSIFICATION	8.525584598182716E-13	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999739072700149	WITHOUT_CLASSIFICATION	2.6092729985116127E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999957005318253	WITHOUT_CLASSIFICATION	4.299468174734725E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999419494782099	WITHOUT_CLASSIFICATION	5.805052179016032E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999984384171043	WITHOUT_CLASSIFICATION	1.5615828956101474E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999983959086	WITHOUT_CLASSIFICATION	1.6040913916796802E-9	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999999186659304	WITHOUT_CLASSIFICATION	8.133406968291771E-8	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999967674561309	WITHOUT_CLASSIFICATION	3.232543869167783E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999555203569	WITHOUT_CLASSIFICATION	4.4479643046684076E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999555203569	WITHOUT_CLASSIFICATION	4.4479643046684076E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993580174668	WITHOUT_CLASSIFICATION	6.419825331871545E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999995177882318	WITHOUT_CLASSIFICATION	4.8221176807719E-7	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999995653995821	WITHOUT_CLASSIFICATION	4.346004178923603E-7	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9998091630226886	WITHOUT_CLASSIFICATION	1.9083697731140094E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999966854124563	WITHOUT_CLASSIFICATION	3.314587543650398E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.999993234423826	WITHOUT_CLASSIFICATION	6.7655761739899375E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.999993234423826	WITHOUT_CLASSIFICATION	6.7655761739899375E-6	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999996344883112	WITHOUT_CLASSIFICATION	3.655116887274247E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999999991209992	WITHOUT_CLASSIFICATION	8.790008144886351E-9	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999994960499	WITHOUT_CLASSIFICATION	5.039500712108825E-10	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999944991700669	WITHOUT_CLASSIFICATION	5.50082993316282E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998375530295	WITHOUT_CLASSIFICATION	1.6244697053696684E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998375530295	WITHOUT_CLASSIFICATION	1.6244697053696684E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997675776749855	WITHOUT_CLASSIFICATION	2.3242232501453393E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997675776749855	WITHOUT_CLASSIFICATION	2.3242232501453393E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999041530718	WITHOUT_CLASSIFICATION	9.584692827199397E-8	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999041530718	WITHOUT_CLASSIFICATION	9.584692827199397E-8	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999999870797245	WITHOUT_CLASSIFICATION	1.2920275496637786E-8	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999998968425535	WITHOUT_CLASSIFICATION	1.0315744648144386E-7	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999860471901327	WITHOUT_CLASSIFICATION	1.395280986714929E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999998493735424	WITHOUT_CLASSIFICATION	1.5062645775175265E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999998886996582	WITHOUT_CLASSIFICATION	1.1130034176183364E-7	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999998742915198	WITHOUT_CLASSIFICATION	1.2570848021042257E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.999999326097483	WITHOUT_CLASSIFICATION	6.739025169777096E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999992411206905	WITHOUT_CLASSIFICATION	7.588793095682776E-7	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999999215103328	WITHOUT_CLASSIFICATION	7.848966715684277E-8	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999984214449	WITHOUT_CLASSIFICATION	1.5785550800123047E-9	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.999932981087161	WITHOUT_CLASSIFICATION	6.701891283896577E-5	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999996315346871	WITHOUT_CLASSIFICATION	3.6846531304219855E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999998731397387	WITHOUT_CLASSIFICATION	1.2686026133727646E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999999111464359	WITHOUT_CLASSIFICATION	8.885356408309283E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.999999111464359	WITHOUT_CLASSIFICATION	8.885356408309283E-7	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999998646911702	WITHOUT_CLASSIFICATION	1.353088297306942E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.999999999219807	WITHOUT_CLASSIFICATION	7.801930422611307E-10	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999887585489511	WITHOUT_CLASSIFICATION	1.1241451048880867E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999994538677	WITHOUT_CLASSIFICATION	5.461321610919962E-10	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999980848083	WITHOUT_CLASSIFICATION	1.915191702770843E-9	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999515559281098	WITHOUT_CLASSIFICATION	4.84440718902099E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999129435609	WITHOUT_CLASSIFICATION	8.70564389874421E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999983660226659	WITHOUT_CLASSIFICATION	1.6339773341558567E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999998385266947	WITHOUT_CLASSIFICATION	1.6147330524990524E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999936211599	WITHOUT_CLASSIFICATION	6.3788400581600175E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.999999591869487	WITHOUT_CLASSIFICATION	4.081305131388183E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999701378791328	WITHOUT_CLASSIFICATION	2.9862120867208823E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999997676139256	WITHOUT_CLASSIFICATION	2.323860743511776E-7	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.998998875626558	WITHOUT_CLASSIFICATION	0.0010011243734420767	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999998281485761	WITHOUT_CLASSIFICATION	1.7185142391972944E-7	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999999225966604	WITHOUT_CLASSIFICATION	7.740333967866843E-8	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999864655815832	WITHOUT_CLASSIFICATION	1.3534418416811786E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999983283749747	WITHOUT_CLASSIFICATION	1.6716250252772922E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999947009199	WITHOUT_CLASSIFICATION	5.299080020563812E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999947009199	WITHOUT_CLASSIFICATION	5.299080020563812E-9	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999996213174345	WITHOUT_CLASSIFICATION	3.786825654890566E-7	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999990611433	WITHOUT_CLASSIFICATION	9.388566079248412E-10	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999970999996609	WITHOUT_CLASSIFICATION	2.900000339117561E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999970999996609	WITHOUT_CLASSIFICATION	2.900000339117561E-6	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999950600653731	WITHOUT_CLASSIFICATION	4.939934626908119E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.999999997472559	WITHOUT_CLASSIFICATION	2.527440952053373E-9	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999997831694307	WITHOUT_CLASSIFICATION	2.168305691984974E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999927832074	WITHOUT_CLASSIFICATION	7.216792650340342E-9	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.999999997862869	WITHOUT_CLASSIFICATION	2.137131106640511E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999864146434	WITHOUT_CLASSIFICATION	1.3585356576330166E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999864146434	WITHOUT_CLASSIFICATION	1.3585356576330166E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999996586515559	WITHOUT_CLASSIFICATION	3.4134844406196267E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999983892357	WITHOUT_CLASSIFICATION	1.610764245170108E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999995351379538	WITHOUT_CLASSIFICATION	4.64862046170616E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999987778037	WITHOUT_CLASSIFICATION	1.2221962619847503E-9	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999990611433	WITHOUT_CLASSIFICATION	9.388566079248412E-10	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999801570914	WITHOUT_CLASSIFICATION	1.9842908637741543E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999999998805392	WITHOUT_CLASSIFICATION	1.194607886717925E-9	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.999999998805392	WITHOUT_CLASSIFICATION	1.194607886717925E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999693511782927	WITHOUT_CLASSIFICATION	3.0648821707381956E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999990162672	WITHOUT_CLASSIFICATION	9.837326778489342E-10	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999990162672	WITHOUT_CLASSIFICATION	9.837326778489342E-10	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999985277704971	WITHOUT_CLASSIFICATION	1.4722295028872591E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999985277704971	WITHOUT_CLASSIFICATION	1.4722295028872591E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.999985277704971	WITHOUT_CLASSIFICATION	1.4722295028872591E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999990162672	WITHOUT_CLASSIFICATION	9.837326778489342E-10	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999990162672	WITHOUT_CLASSIFICATION	9.837326778489342E-10	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999693511782927	WITHOUT_CLASSIFICATION	3.0648821707381956E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999894301086	WITHOUT_CLASSIFICATION	1.0569891312864E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999999663685154	WITHOUT_CLASSIFICATION	3.3631484520064175E-8	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999982655155499	WITHOUT_CLASSIFICATION	1.734484450075592E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999977589694115	WITHOUT_CLASSIFICATION	2.2410305885066805E-6	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999992722547	WITHOUT_CLASSIFICATION	7.2774530131996E-10	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999224780984427	WITHOUT_CLASSIFICATION	7.752190155730455E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999999446360931	WITHOUT_CLASSIFICATION	5.5363906929189513E-8	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999994294072	WITHOUT_CLASSIFICATION	5.705928517437831E-10	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.999999591869487	WITHOUT_CLASSIFICATION	4.081305131388183E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999990162672	WITHOUT_CLASSIFICATION	9.837326778489342E-10	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999990162672	WITHOUT_CLASSIFICATION	9.837326778489342E-10	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999996820458	WITHOUT_CLASSIFICATION	3.1795422760921755E-10	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999810815210423	WITHOUT_CLASSIFICATION	1.891847895778827E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999808350655	WITHOUT_CLASSIFICATION	1.9164934589186525E-8	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999991808243	WITHOUT_CLASSIFICATION	8.191758728818055E-10	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.999992132158012	WITHOUT_CLASSIFICATION	7.867841988098524E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999992861990274	WITHOUT_CLASSIFICATION	7.138009724484229E-7	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999987046515	WITHOUT_CLASSIFICATION	1.2953485354416715E-9	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996138363012	WITHOUT_CLASSIFICATION	3.8616369879463536E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999994026850618	WITHOUT_CLASSIFICATION	5.973149381264196E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999936586667	WITHOUT_CLASSIFICATION	6.341333370693343E-9	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999981594746851	WITHOUT_CLASSIFICATION	1.8405253149599921E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.999999623055921	WITHOUT_CLASSIFICATION	3.769440789585681E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.99999656651387	WITHOUT_CLASSIFICATION	3.4334861299087188E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999988143031173	WITHOUT_CLASSIFICATION	1.1856968826518696E-6	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999998507821216	WITHOUT_CLASSIFICATION	1.4921787836734126E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999684230656	WITHOUT_CLASSIFICATION	3.157693432757428E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999684230656	WITHOUT_CLASSIFICATION	3.157693432757428E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999684230656	WITHOUT_CLASSIFICATION	3.157693432757428E-8	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999995570185911	WITHOUT_CLASSIFICATION	4.4298140882849313E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999998934371902	WITHOUT_CLASSIFICATION	1.0656280982768278E-7	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999997818608949	WITHOUT_CLASSIFICATION	2.181391050168997E-7	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.999999898284116	WITHOUT_CLASSIFICATION	1.0171588398168596E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999981684474031	WITHOUT_CLASSIFICATION	1.8315525969474855E-6	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999998180940099	WITHOUT_CLASSIFICATION	1.8190599010871095E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999999661708	WITHOUT_CLASSIFICATION	3.3829185237711936E-11	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999802336859	WITHOUT_CLASSIFICATION	1.9766314247609165E-8	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999981089882	WITHOUT_CLASSIFICATION	1.8910117339685393E-9	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999855615189	WITHOUT_CLASSIFICATION	1.4438481012620124E-8	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9998371967333308	WITHOUT_CLASSIFICATION	1.628032666692159E-4	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999801056392219	WITHOUT_CLASSIFICATION	1.9894360778087516E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999996586515559	WITHOUT_CLASSIFICATION	3.4134844406196267E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999990162672	WITHOUT_CLASSIFICATION	9.837326778489342E-10	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999990162672	WITHOUT_CLASSIFICATION	9.837326778489342E-10	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999693511782927	WITHOUT_CLASSIFICATION	3.0648821707381956E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999224780984427	WITHOUT_CLASSIFICATION	7.752190155730455E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999810815210423	WITHOUT_CLASSIFICATION	1.891847895778827E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999991808243	WITHOUT_CLASSIFICATION	8.191758728818055E-10	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999992861990274	WITHOUT_CLASSIFICATION	7.138009724484229E-7	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999808350655	WITHOUT_CLASSIFICATION	1.9164934589186525E-8	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999987046515	WITHOUT_CLASSIFICATION	1.2953485354416715E-9	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999936586667	WITHOUT_CLASSIFICATION	6.341333370693343E-9	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999994026850618	WITHOUT_CLASSIFICATION	5.973149381264196E-7	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.999999623055921	WITHOUT_CLASSIFICATION	3.769440789585681E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999768272175412	WITHOUT_CLASSIFICATION	2.3172782458782877E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999956844833331	WITHOUT_CLASSIFICATION	4.31551666680172E-6	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999926766672561	WITHOUT_CLASSIFICATION	7.323332743885456E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999940620687	WITHOUT_CLASSIFICATION	5.937931288192755E-9	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999982742830791	WITHOUT_CLASSIFICATION	1.7257169209460996E-6	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.999999913157831	WITHOUT_CLASSIFICATION	8.684216898983306E-8	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999999083958364	WITHOUT_CLASSIFICATION	9.160416361126436E-8	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999997025452063	WITHOUT_CLASSIFICATION	2.974547937250273E-7	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999979920314069	WITHOUT_CLASSIFICATION	2.0079685929700303E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999993798374011	WITHOUT_CLASSIFICATION	6.201625988770777E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999964460435693	WITHOUT_CLASSIFICATION	3.5539564306543473E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997520511876	WITHOUT_CLASSIFICATION	2.4794881242409645E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999966809353	WITHOUT_CLASSIFICATION	3.3190646774471172E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999951659465	WITHOUT_CLASSIFICATION	4.834053553711781E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999998712896	WITHOUT_CLASSIFICATION	1.2871039655427982E-9	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999755198132	WITHOUT_CLASSIFICATION	2.4480186830526195E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999797418387	WITHOUT_CLASSIFICATION	2.0258161254961146E-8	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999997495568731	WITHOUT_CLASSIFICATION	2.5044312690591482E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999939870780965	WITHOUT_CLASSIFICATION	6.012921903482893E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998628525597	WITHOUT_CLASSIFICATION	1.3714744027226605E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999572619729	WITHOUT_CLASSIFICATION	4.273802709747302E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999696159	WITHOUT_CLASSIFICATION	3.038409912391054E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999696159	WITHOUT_CLASSIFICATION	3.038409912391054E-11	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999999705475342	WITHOUT_CLASSIFICATION	2.9452465746517384E-8	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999859143540719	WITHOUT_CLASSIFICATION	1.4085645928081477E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999936468330856	WITHOUT_CLASSIFICATION	6.353166914433618E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999936468330856	WITHOUT_CLASSIFICATION	6.353166914433618E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999936468330856	WITHOUT_CLASSIFICATION	6.353166914433618E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999843401803483	WITHOUT_CLASSIFICATION	1.5659819651680696E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999843401803483	WITHOUT_CLASSIFICATION	1.5659819651680696E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999928795710581	WITHOUT_CLASSIFICATION	7.120428941921265E-6	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999934477761273	WITHOUT_CLASSIFICATION	6.55222387264066E-6	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999859143540719	WITHOUT_CLASSIFICATION	1.4085645928081477E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998272643217	WITHOUT_CLASSIFICATION	1.7273567837753695E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999936468330856	WITHOUT_CLASSIFICATION	6.353166914433618E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999936468330856	WITHOUT_CLASSIFICATION	6.353166914433618E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999843401803483	WITHOUT_CLASSIFICATION	1.5659819651680696E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999934477761273	WITHOUT_CLASSIFICATION	6.55222387264066E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999977822008389	WITHOUT_CLASSIFICATION	2.2177991611208335E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999977822008389	WITHOUT_CLASSIFICATION	2.2177991611208335E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999990516026	WITHOUT_CLASSIFICATION	9.4839740147785E-10	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999990516026	WITHOUT_CLASSIFICATION	9.4839740147785E-10	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999998413490321	WITHOUT_CLASSIFICATION	1.5865096799839545E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999998413490321	WITHOUT_CLASSIFICATION	1.5865096799839545E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999914364933873	WITHOUT_CLASSIFICATION	8.563506612781435E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999761487385	WITHOUT_CLASSIFICATION	2.385126160678136E-8	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999761487385	WITHOUT_CLASSIFICATION	2.385126160678136E-8	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999908027569846	WITHOUT_CLASSIFICATION	9.197243015439157E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999908027569846	WITHOUT_CLASSIFICATION	9.197243015439157E-6	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999999427109	WITHOUT_CLASSIFICATION	5.728914388540716E-11	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999993387000589	WITHOUT_CLASSIFICATION	6.612999411996772E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999993387000589	WITHOUT_CLASSIFICATION	6.612999411996772E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999997706173159	WITHOUT_CLASSIFICATION	2.2938268410892928E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999966545547117	WITHOUT_CLASSIFICATION	3.345445288247832E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999981530718	WITHOUT_CLASSIFICATION	1.8469280673318502E-9	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.999997706173159	WITHOUT_CLASSIFICATION	2.2938268410892928E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999995599295	WITHOUT_CLASSIFICATION	4.4007049297030577E-10	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999990106785708	WITHOUT_CLASSIFICATION	9.893214292761377E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999990106785708	WITHOUT_CLASSIFICATION	9.893214292761377E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999990106785708	WITHOUT_CLASSIFICATION	9.893214292761377E-7	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999998571218757	WITHOUT_CLASSIFICATION	1.4287812434346073E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999520373393	WITHOUT_CLASSIFICATION	4.796266072175354E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999999006145934	WITHOUT_CLASSIFICATION	9.938540660463246E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999999006145934	WITHOUT_CLASSIFICATION	9.938540660463246E-8	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999143252891	WITHOUT_CLASSIFICATION	8.567471081246658E-8	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998691951844	WITHOUT_CLASSIFICATION	1.308048155582115E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999991168547	WITHOUT_CLASSIFICATION	8.831453312462492E-10	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999931055513	WITHOUT_CLASSIFICATION	6.894448651940803E-9	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999511401276	WITHOUT_CLASSIFICATION	4.885987248410517E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999859069	WITHOUT_CLASSIFICATION	1.4093099961542581E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999859069	WITHOUT_CLASSIFICATION	1.4093099961542581E-8	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999544400481228	WITHOUT_CLASSIFICATION	4.5559951877148326E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999898809552838	WITHOUT_CLASSIFICATION	1.0119044716129553E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999898809552838	WITHOUT_CLASSIFICATION	1.0119044716129553E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999990106785708	WITHOUT_CLASSIFICATION	9.893214292761377E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999520373393	WITHOUT_CLASSIFICATION	4.796266072175354E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999999006145934	WITHOUT_CLASSIFICATION	9.938540660463246E-8	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999999143252891	WITHOUT_CLASSIFICATION	8.567471081246658E-8	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998691951844	WITHOUT_CLASSIFICATION	1.308048155582115E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999991168547	WITHOUT_CLASSIFICATION	8.831453312462492E-10	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999931055513	WITHOUT_CLASSIFICATION	6.894448651940803E-9	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999898809552838	WITHOUT_CLASSIFICATION	1.0119044716129553E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999958564757	WITHOUT_CLASSIFICATION	4.1435243084272825E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999990933588107	WITHOUT_CLASSIFICATION	9.066411893931443E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.999999976563902	WITHOUT_CLASSIFICATION	2.3436097954382406E-8	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999982823315363	WITHOUT_CLASSIFICATION	1.7176684637720647E-6	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999887131495	WITHOUT_CLASSIFICATION	1.1286850481673085E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.999999980704477	WITHOUT_CLASSIFICATION	1.9295522896913086E-8	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999995135292504	WITHOUT_CLASSIFICATION	4.864707496224496E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999995135292504	WITHOUT_CLASSIFICATION	4.864707496224496E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999998586538579	WITHOUT_CLASSIFICATION	1.413461422320621E-7	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999447089183	WITHOUT_CLASSIFICATION	5.52910817298298E-8	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999998395951272	WITHOUT_CLASSIFICATION	1.6040487287195088E-7	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999892674599	WITHOUT_CLASSIFICATION	1.0732540116284253E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999998728144532	WITHOUT_CLASSIFICATION	1.271855467742905E-7	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999998728144532	WITHOUT_CLASSIFICATION	1.271855467742905E-7	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999996270566588	WITHOUT_CLASSIFICATION	3.729433412200096E-7	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999382889047	WITHOUT_CLASSIFICATION	6.171109535727203E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999676900376	WITHOUT_CLASSIFICATION	3.23099623882453E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999676900376	WITHOUT_CLASSIFICATION	3.23099623882453E-8	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999999781076507	WITHOUT_CLASSIFICATION	2.189234933036487E-8	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999497134458271	WITHOUT_CLASSIFICATION	5.028655417301646E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999511401276	WITHOUT_CLASSIFICATION	4.885987248410517E-8	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.99999985390284	WITHOUT_CLASSIFICATION	1.460971601012798E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996484424	WITHOUT_CLASSIFICATION	3.5155754168286207E-10	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999716211471	WITHOUT_CLASSIFICATION	2.837885300296234E-8	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999906172243	WITHOUT_CLASSIFICATION	9.382775668095756E-9	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.999999998574091	WITHOUT_CLASSIFICATION	1.4259089954443772E-9	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999968365924481	WITHOUT_CLASSIFICATION	3.1634075518593882E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999951614116	WITHOUT_CLASSIFICATION	4.838588491555201E-9	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999993147803338	WITHOUT_CLASSIFICATION	6.852196663132825E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999376560865	WITHOUT_CLASSIFICATION	6.234391351972202E-8	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999376560865	WITHOUT_CLASSIFICATION	6.234391351972202E-8	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999997893819231	WITHOUT_CLASSIFICATION	2.106180767591633E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999997893819231	WITHOUT_CLASSIFICATION	2.106180767591633E-7	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999509512298	WITHOUT_CLASSIFICATION	4.9048770098290243E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997634821435	WITHOUT_CLASSIFICATION	2.36517856661543E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997634821435	WITHOUT_CLASSIFICATION	2.36517856661543E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997634821435	WITHOUT_CLASSIFICATION	2.36517856661543E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999995920122948	WITHOUT_CLASSIFICATION	4.07987705193955E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.999995920122948	WITHOUT_CLASSIFICATION	4.07987705193955E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999671133849	WITHOUT_CLASSIFICATION	3.288661506773722E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999962280374819	WITHOUT_CLASSIFICATION	3.7719625181143264E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999994553099866	WITHOUT_CLASSIFICATION	5.446900134863821E-7	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999998803280457	WITHOUT_CLASSIFICATION	1.1967195427645065E-7	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.999998183942118	WITHOUT_CLASSIFICATION	1.8160578820058976E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9999553974144425	WITHOUT_CLASSIFICATION	4.4602585557563826E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.999999935993211	WITHOUT_CLASSIFICATION	6.400678904787045E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999966809353	WITHOUT_CLASSIFICATION	3.3190646774471172E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999966809353	WITHOUT_CLASSIFICATION	3.3190646774471172E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999671133849	WITHOUT_CLASSIFICATION	3.288661506773722E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999729925307	WITHOUT_CLASSIFICATION	2.700746934833962E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999962280374819	WITHOUT_CLASSIFICATION	3.7719625181143264E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999994553099866	WITHOUT_CLASSIFICATION	5.446900134863821E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999765473746552	WITHOUT_CLASSIFICATION	2.3452625344715523E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999998925615037	WITHOUT_CLASSIFICATION	1.0743849628734955E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999447529375	WITHOUT_CLASSIFICATION	5.524706257840933E-8	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.999998374093295	WITHOUT_CLASSIFICATION	1.6259067049773713E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999770278262158	WITHOUT_CLASSIFICATION	2.297217378431106E-5	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999986674131	WITHOUT_CLASSIFICATION	1.3325869756869312E-9	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999997883069601	WITHOUT_CLASSIFICATION	2.116930398651506E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999765473746552	WITHOUT_CLASSIFICATION	2.3452625344715523E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999154539689	WITHOUT_CLASSIFICATION	8.45460311076586E-8	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999154539689	WITHOUT_CLASSIFICATION	8.45460311076586E-8	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999999954754063	WITHOUT_CLASSIFICATION	4.524593739127174E-9	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999994126742301	WITHOUT_CLASSIFICATION	5.873257698655429E-7	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999998795665278	WITHOUT_CLASSIFICATION	1.2043347217381605E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999993056277057	WITHOUT_CLASSIFICATION	6.943722943719934E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999995312280722	WITHOUT_CLASSIFICATION	4.687719278393094E-7	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999381389893434	WITHOUT_CLASSIFICATION	6.186101065670108E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999966550493419	WITHOUT_CLASSIFICATION	3.344950658046418E-6	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999878865269047	WITHOUT_CLASSIFICATION	1.211347309533127E-5	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999978383163	WITHOUT_CLASSIFICATION	2.161683714250899E-9	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999999273651261	WITHOUT_CLASSIFICATION	7.263487391113558E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999999211730566	WITHOUT_CLASSIFICATION	7.882694350488214E-8	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999993056277057	WITHOUT_CLASSIFICATION	6.943722943719934E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999995312280722	WITHOUT_CLASSIFICATION	4.687719278393094E-7	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999994656195481	WITHOUT_CLASSIFICATION	5.34380451872825E-7	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999999481956059	WITHOUT_CLASSIFICATION	5.180439410892241E-8	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999983553974	WITHOUT_CLASSIFICATION	1.6446024969652886E-9	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999985661637406	WITHOUT_CLASSIFICATION	1.4338362594258397E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999994800908	WITHOUT_CLASSIFICATION	5.19909251331592E-10	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999999845941278	WITHOUT_CLASSIFICATION	1.5405872224807045E-8	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999981886474646	WITHOUT_CLASSIFICATION	1.8113525353965239E-6	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999995288957917	WITHOUT_CLASSIFICATION	4.711042082431005E-7	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.999999956148228	WITHOUT_CLASSIFICATION	4.3851772011485404E-8	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999999909928811	WITHOUT_CLASSIFICATION	9.007118882304566E-9	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999999093500315	WITHOUT_CLASSIFICATION	9.064996850318955E-8	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999959101918091	WITHOUT_CLASSIFICATION	4.089808190830571E-6	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999997685166855	WITHOUT_CLASSIFICATION	2.3148331450219176E-7	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999958382049	WITHOUT_CLASSIFICATION	4.161795079186166E-9	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999999532299	WITHOUT_CLASSIFICATION	4.6770116404930494E-11	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999952810344	WITHOUT_CLASSIFICATION	4.71896556781511E-9	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999973894021008	WITHOUT_CLASSIFICATION	2.6105978992198183E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999998724359062	WITHOUT_CLASSIFICATION	1.275640937776356E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999996309249	WITHOUT_CLASSIFICATION	3.6907512297057335E-10	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999997169090487	WITHOUT_CLASSIFICATION	2.830909514516035E-7	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999973894021008	WITHOUT_CLASSIFICATION	2.6105978992198183E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999998724359062	WITHOUT_CLASSIFICATION	1.275640937776356E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999996309249	WITHOUT_CLASSIFICATION	3.6907512297057335E-10	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999997516471607	WITHOUT_CLASSIFICATION	2.4835283933968816E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999955911699978	WITHOUT_CLASSIFICATION	4.408830002177896E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999943666697548	WITHOUT_CLASSIFICATION	5.6333302451178945E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999994720943286	WITHOUT_CLASSIFICATION	5.279056714716572E-7	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999884523076	WITHOUT_CLASSIFICATION	1.1547692398117782E-8	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999998549938075	WITHOUT_CLASSIFICATION	1.450061925372053E-7	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999989147815713	WITHOUT_CLASSIFICATION	1.0852184287239846E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999719355244124	WITHOUT_CLASSIFICATION	2.806447558752334E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999998282639431	WITHOUT_CLASSIFICATION	1.7173605686439221E-7	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999995441076728	WITHOUT_CLASSIFICATION	4.5589232728270583E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9922198947101665	WITHOUT_CLASSIFICATION	0.007780105289833549	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999909162163	WITHOUT_CLASSIFICATION	9.083783718841724E-9	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.999998817250123	WITHOUT_CLASSIFICATION	1.182749877065638E-6	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999975233150927	WITHOUT_CLASSIFICATION	2.476684907217347E-6	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999998772408014	WITHOUT_CLASSIFICATION	1.227591986002633E-7	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999997332576852	WITHOUT_CLASSIFICATION	2.6674231477645493E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999991531681757	WITHOUT_CLASSIFICATION	8.468318242946869E-7	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999997847527068	WITHOUT_CLASSIFICATION	2.1524729313218288E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999464305881713	WITHOUT_CLASSIFICATION	5.356941182866438E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999965186733908	WITHOUT_CLASSIFICATION	3.481326609241465E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998898901031	WITHOUT_CLASSIFICATION	1.1010989683775417E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999982606940347	WITHOUT_CLASSIFICATION	1.7393059652600257E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999982606940347	WITHOUT_CLASSIFICATION	1.7393059652600257E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999993371070646	WITHOUT_CLASSIFICATION	6.62892935382506E-7	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999993371070646	WITHOUT_CLASSIFICATION	6.62892935382506E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999298396123	WITHOUT_CLASSIFICATION	7.016038772773413E-8	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999298396123	WITHOUT_CLASSIFICATION	7.016038772773413E-8	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999473968352	WITHOUT_CLASSIFICATION	5.260316471393262E-8	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999935259946	WITHOUT_CLASSIFICATION	6.474005484215717E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999987505246	WITHOUT_CLASSIFICATION	1.249475424409636E-9	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999997894112194	WITHOUT_CLASSIFICATION	2.1058878059435326E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999998113167	WITHOUT_CLASSIFICATION	1.886832632090199E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999715820946	WITHOUT_CLASSIFICATION	2.8417905341944368E-8	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999250364878	WITHOUT_CLASSIFICATION	7.496351215837278E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999970753524948	WITHOUT_CLASSIFICATION	2.924647505239646E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999966809353	WITHOUT_CLASSIFICATION	3.3190646774471172E-9	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999999473968352	WITHOUT_CLASSIFICATION	5.260316471393262E-8	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999935259946	WITHOUT_CLASSIFICATION	6.474005484215717E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999987505246	WITHOUT_CLASSIFICATION	1.249475424409636E-9	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999998113167	WITHOUT_CLASSIFICATION	1.886832632090199E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999715820946	WITHOUT_CLASSIFICATION	2.8417905341944368E-8	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999998835341418	WITHOUT_CLASSIFICATION	1.1646585818461977E-7	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999998199018854	WITHOUT_CLASSIFICATION	1.8009811460361041E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999982031743887	WITHOUT_CLASSIFICATION	1.7968256113263016E-6	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999982031743887	WITHOUT_CLASSIFICATION	1.7968256113263016E-6	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999994665214905	WITHOUT_CLASSIFICATION	5.334785094020455E-7	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999720660309	WITHOUT_CLASSIFICATION	2.7933969125621895E-8	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998023521167	WITHOUT_CLASSIFICATION	1.976478834111179E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999996059032	WITHOUT_CLASSIFICATION	3.940967897477846E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999996059032	WITHOUT_CLASSIFICATION	3.940967897477846E-9	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999987994646	WITHOUT_CLASSIFICATION	1.2005354572351266E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999998070156	WITHOUT_CLASSIFICATION	1.929844747297127E-10	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998133476791	WITHOUT_CLASSIFICATION	1.8665232080614896E-7	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999979081276029	WITHOUT_CLASSIFICATION	2.09187239715652E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999915660247	WITHOUT_CLASSIFICATION	8.433975310810379E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999951659465	WITHOUT_CLASSIFICATION	4.834053553711781E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999998712896	WITHOUT_CLASSIFICATION	1.2871039655427982E-9	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999755198132	WITHOUT_CLASSIFICATION	2.4480186830526195E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999797418387	WITHOUT_CLASSIFICATION	2.0258161254961146E-8	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999998628525597	WITHOUT_CLASSIFICATION	1.3714744027226605E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999572619729	WITHOUT_CLASSIFICATION	4.273802709747302E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999987994646	WITHOUT_CLASSIFICATION	1.2005354572351266E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999998070156	WITHOUT_CLASSIFICATION	1.929844747297127E-10	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999979081276029	WITHOUT_CLASSIFICATION	2.09187239715652E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999894184281053	WITHOUT_CLASSIFICATION	1.0581571894608482E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998023521167	WITHOUT_CLASSIFICATION	1.976478834111179E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998023521167	WITHOUT_CLASSIFICATION	1.976478834111179E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999999211730566	WITHOUT_CLASSIFICATION	7.882694350488214E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999999211730566	WITHOUT_CLASSIFICATION	7.882694350488214E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993604818221066	WITHOUT_CLASSIFICATION	6.395181778934627E-4	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993604818221066	WITHOUT_CLASSIFICATION	6.395181778934627E-4	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999966765133	WITHOUT_CLASSIFICATION	3.3234866242976288E-9	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999959151957	WITHOUT_CLASSIFICATION	4.084804269441763E-9	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999997427201449	WITHOUT_CLASSIFICATION	2.572798550948116E-7	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999999584501866	WITHOUT_CLASSIFICATION	4.1549813281283444E-8	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999993493212	WITHOUT_CLASSIFICATION	6.506787671605264E-10	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998511088989	WITHOUT_CLASSIFICATION	1.48891101074267E-7	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999999160671	WITHOUT_CLASSIFICATION	8.393292064213485E-10	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999690111734	WITHOUT_CLASSIFICATION	3.098882657069082E-8	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998971627533	WITHOUT_CLASSIFICATION	1.0283724670101642E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999998332214294	WITHOUT_CLASSIFICATION	1.6677857062728035E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999999977824382	WITHOUT_CLASSIFICATION	2.2175617984962356E-8	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.999999642920035	WITHOUT_CLASSIFICATION	3.570799650882738E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999672044969	WITHOUT_CLASSIFICATION	3.2795503130601636E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999998108987436	WITHOUT_CLASSIFICATION	1.891012564326148E-7	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999997190227048	WITHOUT_CLASSIFICATION	2.809772951209193E-7	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9998189303024505	WITHOUT_CLASSIFICATION	1.8106969754942966E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999998142865427	WITHOUT_CLASSIFICATION	1.8571345735558507E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999148778367	WITHOUT_CLASSIFICATION	8.512216331584491E-8	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999997026481592	WITHOUT_CLASSIFICATION	2.9735184075628274E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999998712896	WITHOUT_CLASSIFICATION	1.2871039655427982E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999797418387	WITHOUT_CLASSIFICATION	2.0258161254961146E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999696159	WITHOUT_CLASSIFICATION	3.038409912391054E-11	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999999006145934	WITHOUT_CLASSIFICATION	9.938540660463246E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999999006145934	WITHOUT_CLASSIFICATION	9.938540660463246E-8	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999894184281053	WITHOUT_CLASSIFICATION	1.0581571894608482E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998023521167	WITHOUT_CLASSIFICATION	1.976478834111179E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999999211730566	WITHOUT_CLASSIFICATION	7.882694350488214E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993604818221066	WITHOUT_CLASSIFICATION	6.395181778934627E-4	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999985864300591	WITHOUT_CLASSIFICATION	1.4135699408143105E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999981697515389	WITHOUT_CLASSIFICATION	1.8302484611422425E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999968954288303	WITHOUT_CLASSIFICATION	3.104571169726051E-6	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.999999884529384	WITHOUT_CLASSIFICATION	1.1547061586444692E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999918857997	WITHOUT_CLASSIFICATION	8.114200291776412E-9	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999918857997	WITHOUT_CLASSIFICATION	8.114200291776412E-9	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999916257686	WITHOUT_CLASSIFICATION	8.374231485795958E-9	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999978740014814	WITHOUT_CLASSIFICATION	2.125998518592206E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999888238739	WITHOUT_CLASSIFICATION	1.1176126166849337E-8	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999986276620975	WITHOUT_CLASSIFICATION	1.3723379025170745E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999994443332862	WITHOUT_CLASSIFICATION	5.556667136995738E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999994443332862	WITHOUT_CLASSIFICATION	5.556667136995738E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999348781121	WITHOUT_CLASSIFICATION	6.512188787866977E-8	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999990714175603	WITHOUT_CLASSIFICATION	9.285824397405138E-7	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999864725909	WITHOUT_CLASSIFICATION	1.3527409121056027E-8	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999950829419232	WITHOUT_CLASSIFICATION	4.917058076858729E-6	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999988819079647	WITHOUT_CLASSIFICATION	1.1180920352885974E-6	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999912201375	WITHOUT_CLASSIFICATION	8.779862523157663E-9	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999999015325084	WITHOUT_CLASSIFICATION	9.846749154453698E-8	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999906931986	WITHOUT_CLASSIFICATION	9.306801387560874E-9	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9993589956908145	WITHOUT_CLASSIFICATION	6.41004309185438E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.999833323132009	WITHOUT_CLASSIFICATION	1.6667686799107345E-4	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999988519818	WITHOUT_CLASSIFICATION	1.1480182424156345E-9	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999999761716362	WITHOUT_CLASSIFICATION	2.3828363918677317E-8	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999965487349	WITHOUT_CLASSIFICATION	3.451265085697663E-8	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999962854517429	WITHOUT_CLASSIFICATION	3.714548257149791E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.999999748047908	WITHOUT_CLASSIFICATION	2.5195209204757244E-7	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998507820041378	WITHOUT_CLASSIFICATION	1.4921799586226073E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999998414895	WITHOUT_CLASSIFICATION	1.5851059037862416E-10	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999964097616502	WITHOUT_CLASSIFICATION	3.590238349940254E-6	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999877904710662	WITHOUT_CLASSIFICATION	1.2209528933725193E-5	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999999421212232	WITHOUT_CLASSIFICATION	5.787877666946551E-8	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999945669105313	WITHOUT_CLASSIFICATION	5.433089468660739E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999802726854	WITHOUT_CLASSIFICATION	1.972731464260532E-8	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999802726854	WITHOUT_CLASSIFICATION	1.972731464260532E-8	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999999186935244	WITHOUT_CLASSIFICATION	8.130647547344047E-8	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999918370351	WITHOUT_CLASSIFICATION	8.16296485226902E-9	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999983660226659	WITHOUT_CLASSIFICATION	1.6339773341558567E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999983660226659	WITHOUT_CLASSIFICATION	1.6339773341558567E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9231262903697581	WITHOUT_CLASSIFICATION	0.07687370963024182	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999999958039244	WITHOUT_CLASSIFICATION	4.196075600516374E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999982064871472	WITHOUT_CLASSIFICATION	1.7935128528250343E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999611376773	WITHOUT_CLASSIFICATION	3.886232272333605E-8	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999611376773	WITHOUT_CLASSIFICATION	3.886232272333605E-8	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999993756229929	WITHOUT_CLASSIFICATION	6.243770071000181E-7	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999995477276	WITHOUT_CLASSIFICATION	4.5227242202808764E-10	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999685567406	WITHOUT_CLASSIFICATION	3.1443259450390743E-8	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999998391325087	WITHOUT_CLASSIFICATION	1.6086749126786185E-7	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999994899985455	WITHOUT_CLASSIFICATION	5.100014545350468E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999978781914	WITHOUT_CLASSIFICATION	2.1218085911904385E-9	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999998666644296	WITHOUT_CLASSIFICATION	1.333355703525313E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999998748446365	WITHOUT_CLASSIFICATION	1.2515536340274E-7	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999990166104373	WITHOUT_CLASSIFICATION	9.833895627249088E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999966603761573	WITHOUT_CLASSIFICATION	3.339623842738494E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999975770400372	WITHOUT_CLASSIFICATION	2.4229599626782135E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999867915312479	WITHOUT_CLASSIFICATION	1.320846875207371E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999997995627068	WITHOUT_CLASSIFICATION	2.00437293207124E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999301761392	WITHOUT_CLASSIFICATION	6.982386077153147E-8	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9996444583798121	WITHOUT_CLASSIFICATION	3.555416201879312E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999998862389982	WITHOUT_CLASSIFICATION	1.1376100194604416E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999999562139	WITHOUT_CLASSIFICATION	4.378600063186622E-11	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999892082799816	WITHOUT_CLASSIFICATION	1.0791720018430863E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999983589579565	WITHOUT_CLASSIFICATION	1.641042043550315E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999984948186	WITHOUT_CLASSIFICATION	1.5051814205994502E-9	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.99999313701163	WITHOUT_CLASSIFICATION	6.862988370002744E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999997190655985	WITHOUT_CLASSIFICATION	2.8093440150562747E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999861232615347	WITHOUT_CLASSIFICATION	1.38767384652533E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999995345515339	WITHOUT_CLASSIFICATION	4.654484660335978E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999930295481428	WITHOUT_CLASSIFICATION	6.970451857082427E-6	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999999864581667	WITHOUT_CLASSIFICATION	1.354183339894006E-8	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9998281094531145	WITHOUT_CLASSIFICATION	1.7189054688553706E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999888278593	WITHOUT_CLASSIFICATION	1.1172140734116564E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999985779985612	WITHOUT_CLASSIFICATION	1.4220014388701947E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999995999255	WITHOUT_CLASSIFICATION	4.000745624507974E-10	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999937398434	WITHOUT_CLASSIFICATION	6.260156653744576E-9	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999301761392	WITHOUT_CLASSIFICATION	6.982386077153147E-8	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999888278593	WITHOUT_CLASSIFICATION	1.1172140734116564E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999985779985612	WITHOUT_CLASSIFICATION	1.4220014388701947E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999937398434	WITHOUT_CLASSIFICATION	6.260156653744576E-9	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999974902327883	WITHOUT_CLASSIFICATION	2.5097672117829086E-6	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999963520553508	WITHOUT_CLASSIFICATION	3.6479446492744034E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999997748190154	WITHOUT_CLASSIFICATION	2.25180984716377E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999513043961	WITHOUT_CLASSIFICATION	4.869560391390803E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999753928988	WITHOUT_CLASSIFICATION	2.460710124593642E-8	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999992287483	WITHOUT_CLASSIFICATION	7.712517421264029E-10	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999992919593732	WITHOUT_CLASSIFICATION	7.080406267126443E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999988505982566	WITHOUT_CLASSIFICATION	1.1494017435204175E-6	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999997238646894	WITHOUT_CLASSIFICATION	2.76135310622124E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999999556541732	WITHOUT_CLASSIFICATION	4.434582665402376E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999999940524087	WITHOUT_CLASSIFICATION	5.9475912999305166E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999999940524087	WITHOUT_CLASSIFICATION	5.9475912999305166E-8	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999999999765098	WITHOUT_CLASSIFICATION	2.3490200111002184E-10	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999999537805103	WITHOUT_CLASSIFICATION	4.621948969441216E-8	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999914106307	WITHOUT_CLASSIFICATION	8.589369202562619E-9	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999989605923607	WITHOUT_CLASSIFICATION	1.0394076392606596E-6	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999497040596	WITHOUT_CLASSIFICATION	5.029594037747024E-8	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999799957843	WITHOUT_CLASSIFICATION	2.00042156693409E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999998820997218	WITHOUT_CLASSIFICATION	1.1790027813859952E-7	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999997486226	WITHOUT_CLASSIFICATION	2.513773387991702E-10	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999999984311085	WITHOUT_CLASSIFICATION	1.5688914960297486E-8	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999998932831601	WITHOUT_CLASSIFICATION	1.067168399001574E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999996870310572	WITHOUT_CLASSIFICATION	3.1296894282006517E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999963537291614	WITHOUT_CLASSIFICATION	3.64627083855696E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999606966665	WITHOUT_CLASSIFICATION	3.930333357301382E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999998168655861	WITHOUT_CLASSIFICATION	1.8313441377803337E-7	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999985765212507	WITHOUT_CLASSIFICATION	1.4234787492782295E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.999991756974616	WITHOUT_CLASSIFICATION	8.243025384068395E-6	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999995140378127	WITHOUT_CLASSIFICATION	4.859621872561133E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999983623070222	WITHOUT_CLASSIFICATION	1.6376929777959408E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999662603566846	WITHOUT_CLASSIFICATION	3.3739643315429095E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999947632108093	WITHOUT_CLASSIFICATION	5.236789190677845E-6	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999996215595435	WITHOUT_CLASSIFICATION	3.7844045653516035E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999984990957218	WITHOUT_CLASSIFICATION	1.5009042781902328E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999489035365	WITHOUT_CLASSIFICATION	5.109646345147436E-8	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999929332141806	WITHOUT_CLASSIFICATION	7.0667858194144136E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.999999997681127	WITHOUT_CLASSIFICATION	2.3188729483064647E-9	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999936014993204	WITHOUT_CLASSIFICATION	6.398500679604478E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.99999998728538	WITHOUT_CLASSIFICATION	1.2714620147167314E-8	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999319932974	WITHOUT_CLASSIFICATION	6.800670258384308E-8	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.999999978244997	WITHOUT_CLASSIFICATION	2.17550030156084E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999982141838	WITHOUT_CLASSIFICATION	1.785816077732278E-9	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999994320018	WITHOUT_CLASSIFICATION	5.679983097621982E-10	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999901086246	WITHOUT_CLASSIFICATION	9.891375324140197E-9	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999997905828788	WITHOUT_CLASSIFICATION	2.094171212631137E-7	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999995532628327	WITHOUT_CLASSIFICATION	4.4673716726411544E-7	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999892225164	WITHOUT_CLASSIFICATION	1.077748358952425E-8	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999618893015	WITHOUT_CLASSIFICATION	3.811069852706295E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999778096308	WITHOUT_CLASSIFICATION	2.21903692171938E-8	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999999850457237	WITHOUT_CLASSIFICATION	1.4954276280981334E-8	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.999999794908729	WITHOUT_CLASSIFICATION	2.050912709979347E-7	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999984553043031	WITHOUT_CLASSIFICATION	1.5446956969094623E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999885025607	WITHOUT_CLASSIFICATION	1.1497439464718479E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999585521516905	WITHOUT_CLASSIFICATION	4.144784830940575E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999984914391604	WITHOUT_CLASSIFICATION	1.508560839623453E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999998986372992	WITHOUT_CLASSIFICATION	1.0136270084483692E-7	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999995601708079	WITHOUT_CLASSIFICATION	4.3982919210402006E-7	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999985415587	WITHOUT_CLASSIFICATION	1.4584412935288072E-9	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9997871678658432	WITHOUT_CLASSIFICATION	2.128321341568525E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999998319154432	WITHOUT_CLASSIFICATION	1.6808455681744399E-7	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999982171569647	WITHOUT_CLASSIFICATION	1.7828430353662497E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999999747285421	WITHOUT_CLASSIFICATION	2.5271457940710508E-8	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999875999808503	WITHOUT_CLASSIFICATION	1.2400019149703733E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999999989770023	WITHOUT_CLASSIFICATION	1.0229976449125462E-9	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999555710723431	WITHOUT_CLASSIFICATION	4.442892765688664E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999747767717	WITHOUT_CLASSIFICATION	2.522322824306112E-8	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999994695236114	WITHOUT_CLASSIFICATION	5.304763885999248E-7	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999763442238	WITHOUT_CLASSIFICATION	2.3655776250617738E-8	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999881330547841	WITHOUT_CLASSIFICATION	1.1866945215908925E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999816707737163	WITHOUT_CLASSIFICATION	1.8329226283697055E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.8325271309337782	WITHOUT_CLASSIFICATION	0.16747286906622175	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999299230783765	WITHOUT_CLASSIFICATION	7.007692162353889E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999299230783765	WITHOUT_CLASSIFICATION	7.007692162353889E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999411971988	WITHOUT_CLASSIFICATION	5.880280115901551E-8	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999982310288343	WITHOUT_CLASSIFICATION	1.7689711657108506E-6	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999770226411	WITHOUT_CLASSIFICATION	2.2977358963831855E-8	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999601326968	WITHOUT_CLASSIFICATION	3.9867303209541296E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.999999720665116	WITHOUT_CLASSIFICATION	2.793348840299206E-7	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999998617065431	WITHOUT_CLASSIFICATION	1.382934568811441E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999973568588498	WITHOUT_CLASSIFICATION	2.643141150096158E-6	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999389425040812	WITHOUT_CLASSIFICATION	6.105749591883963E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999999303927343	WITHOUT_CLASSIFICATION	6.960726579242753E-8	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999997284376687	WITHOUT_CLASSIFICATION	2.71562331349134E-7	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999961964452	WITHOUT_CLASSIFICATION	3.803554871011453E-9	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999897266366	WITHOUT_CLASSIFICATION	1.027336338053213E-8	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999997902583654	WITHOUT_CLASSIFICATION	2.097416347491048E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999482263239744	WITHOUT_CLASSIFICATION	5.1773676025634466E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999999727006363	WITHOUT_CLASSIFICATION	2.729936370076643E-8	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999988018320314	WITHOUT_CLASSIFICATION	1.198167968678637E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999998198480068	WITHOUT_CLASSIFICATION	1.8015199315235628E-7	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999980310519	WITHOUT_CLASSIFICATION	1.968948057123865E-9	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999864030149567	WITHOUT_CLASSIFICATION	1.359698504331005E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999935563809306	WITHOUT_CLASSIFICATION	6.443619069430799E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999888852666	WITHOUT_CLASSIFICATION	1.1114733430330405E-8	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999337703775	WITHOUT_CLASSIFICATION	6.622962241480803E-8	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999902810522007	WITHOUT_CLASSIFICATION	9.718947799222518E-6	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999986198723	WITHOUT_CLASSIFICATION	1.3801277033688353E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999998345125144	WITHOUT_CLASSIFICATION	1.6548748558226256E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999581007058372	WITHOUT_CLASSIFICATION	4.189929416283469E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999999353890829	WITHOUT_CLASSIFICATION	6.46109170966349E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999998054664	WITHOUT_CLASSIFICATION	1.945336388545057E-10	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.999999728181322	WITHOUT_CLASSIFICATION	2.7181867794631063E-7	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.999999999883009	WITHOUT_CLASSIFICATION	1.1699106482361448E-10	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999977810368447	WITHOUT_CLASSIFICATION	2.2189631553862306E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999990894915874	WITHOUT_CLASSIFICATION	9.105084124079178E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998391362974	WITHOUT_CLASSIFICATION	1.608637026718015E-7	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999993780590639	WITHOUT_CLASSIFICATION	6.219409361644597E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998391362974	WITHOUT_CLASSIFICATION	1.608637026718015E-7	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999222239231	WITHOUT_CLASSIFICATION	7.777607691444024E-8	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999987761109215	WITHOUT_CLASSIFICATION	1.2238890784505561E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999987761109215	WITHOUT_CLASSIFICATION	1.2238890784505561E-6	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999987761109215	WITHOUT_CLASSIFICATION	1.2238890784505561E-6	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999992392937498	WITHOUT_CLASSIFICATION	7.607062501912775E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999992392937498	WITHOUT_CLASSIFICATION	7.607062501912775E-7	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999999947948998	WITHOUT_CLASSIFICATION	5.205100290220053E-9	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999999564262	WITHOUT_CLASSIFICATION	4.3573822476625E-11	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999962509616	WITHOUT_CLASSIFICATION	3.749038345179396E-9	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.999988374082298	WITHOUT_CLASSIFICATION	1.1625917701896103E-5	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999998913475784	WITHOUT_CLASSIFICATION	1.0865242157007282E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999998448420881	WITHOUT_CLASSIFICATION	1.5515791188441403E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999997312881396	WITHOUT_CLASSIFICATION	2.687118603590311E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999996434734519	WITHOUT_CLASSIFICATION	3.5652654795580913E-7	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999991272036737	WITHOUT_CLASSIFICATION	8.727963262865298E-7	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999306920978	WITHOUT_CLASSIFICATION	6.930790225038808E-8	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999996147145336	WITHOUT_CLASSIFICATION	3.8528546642590563E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999995822806764	WITHOUT_CLASSIFICATION	4.1771932351677776E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999995337093944	WITHOUT_CLASSIFICATION	4.662906056832507E-7	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999996755827035	WITHOUT_CLASSIFICATION	3.2441729648020863E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999992152470639	WITHOUT_CLASSIFICATION	7.847529360744195E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999926220065	WITHOUT_CLASSIFICATION	7.37799353417723E-9	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999995288321	WITHOUT_CLASSIFICATION	4.711678496196576E-10	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999991227357878	WITHOUT_CLASSIFICATION	8.772642120268492E-7	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999991227357878	WITHOUT_CLASSIFICATION	8.772642120268492E-7	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999995182388715	WITHOUT_CLASSIFICATION	4.817611284778218E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998948295112	WITHOUT_CLASSIFICATION	1.0517048867818358E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998948295112	WITHOUT_CLASSIFICATION	1.0517048867818358E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999995777500135	WITHOUT_CLASSIFICATION	4.2224998656093535E-7	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.999999922609225	WITHOUT_CLASSIFICATION	7.739077496020445E-8	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999625366766067	WITHOUT_CLASSIFICATION	3.746332339330931E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999998741040252	WITHOUT_CLASSIFICATION	1.2589597481095582E-7	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999996766558178	WITHOUT_CLASSIFICATION	3.233441823075345E-7	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999359262554	WITHOUT_CLASSIFICATION	6.407374453210557E-8	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999999014933756	WITHOUT_CLASSIFICATION	9.850662444821338E-8	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999889766921695	WITHOUT_CLASSIFICATION	1.1023307830624192E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999663368324	WITHOUT_CLASSIFICATION	3.366316758890104E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999997812664975	WITHOUT_CLASSIFICATION	2.1873350248810233E-6	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999281053363551	WITHOUT_CLASSIFICATION	7.189466364489589E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999468935362329	WITHOUT_CLASSIFICATION	5.3106463767127724E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999989555054846	WITHOUT_CLASSIFICATION	1.0444945154171072E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999417709301	WITHOUT_CLASSIFICATION	5.822906984864183E-8	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999996434734519	WITHOUT_CLASSIFICATION	3.5652654795580913E-7	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999979633485004	WITHOUT_CLASSIFICATION	2.036651499565484E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999969021661	WITHOUT_CLASSIFICATION	3.0978340016798118E-9	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999966216802552	WITHOUT_CLASSIFICATION	3.3783197448070026E-6	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999966216802552	WITHOUT_CLASSIFICATION	3.3783197448070026E-6	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999999830236193	WITHOUT_CLASSIFICATION	1.6976380840721805E-8	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999880279776334	WITHOUT_CLASSIFICATION	1.1972022366652386E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999811035379	WITHOUT_CLASSIFICATION	1.889646206493153E-8	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999995338623618	WITHOUT_CLASSIFICATION	4.661376382293595E-7	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999998371387	WITHOUT_CLASSIFICATION	1.6286122645914887E-10	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999990675742911	WITHOUT_CLASSIFICATION	9.324257088557639E-7	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999997571710414	WITHOUT_CLASSIFICATION	2.4282895861103346E-7	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999979926746808	WITHOUT_CLASSIFICATION	2.0073253191632375E-6	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999991562984728	WITHOUT_CLASSIFICATION	8.43701527167067E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999975582233415	WITHOUT_CLASSIFICATION	2.441776658629265E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9997448520734024	WITHOUT_CLASSIFICATION	2.5514792659772E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999998648196274	WITHOUT_CLASSIFICATION	1.3518037258807692E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8753361288354373	WITHOUT_CLASSIFICATION	0.1246638711645627	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999688046396	WITHOUT_CLASSIFICATION	3.1195360441468184E-8	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999976007166	WITHOUT_CLASSIFICATION	2.3992834605638164E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999962375753	WITHOUT_CLASSIFICATION	3.762424724607654E-9	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999994717840445	WITHOUT_CLASSIFICATION	5.282159556328367E-7	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999534670259096	WITHOUT_CLASSIFICATION	4.65329740902835E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999991983011802	WITHOUT_CLASSIFICATION	8.016988199059128E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999881046011	WITHOUT_CLASSIFICATION	1.1895398885786241E-8	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999985280815745	WITHOUT_CLASSIFICATION	1.4719184254712687E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999935777161858	WITHOUT_CLASSIFICATION	6.422283814179102E-6	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999961381209722	WITHOUT_CLASSIFICATION	3.861879027774716E-6	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999993175633	WITHOUT_CLASSIFICATION	6.824367354571215E-10	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.999993961966188	WITHOUT_CLASSIFICATION	6.038033812102091E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999989611477258	WITHOUT_CLASSIFICATION	1.0388522742672436E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999997750247733	WITHOUT_CLASSIFICATION	2.2497522670430015E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9996104187866248	WITHOUT_CLASSIFICATION	3.8958121337517144E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999926534279	WITHOUT_CLASSIFICATION	7.346572202758396E-9	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999967230527	WITHOUT_CLASSIFICATION	3.2769472722028796E-9	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999984560269883	WITHOUT_CLASSIFICATION	1.5439730115436842E-6	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999998684294485	WITHOUT_CLASSIFICATION	1.3157055149413225E-7	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999995204091788	WITHOUT_CLASSIFICATION	4.795908211151462E-7	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999999569305958	WITHOUT_CLASSIFICATION	4.306940425748226E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999999916508419	WITHOUT_CLASSIFICATION	8.349158176012924E-9	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999999493082914	WITHOUT_CLASSIFICATION	5.069170868192343E-8	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9996104187866248	WITHOUT_CLASSIFICATION	3.8958121337517144E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999923681439	WITHOUT_CLASSIFICATION	7.631856136048161E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999999916508419	WITHOUT_CLASSIFICATION	8.349158176012924E-9	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.99999994520076	WITHOUT_CLASSIFICATION	5.479924006385209E-8	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999219469292	WITHOUT_CLASSIFICATION	7.805307072184629E-8	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.999999687235637	WITHOUT_CLASSIFICATION	3.1276436299985394E-7	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999998178264004	WITHOUT_CLASSIFICATION	1.821735996911388E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999997469947807	WITHOUT_CLASSIFICATION	2.5300521934025836E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999976922165508	WITHOUT_CLASSIFICATION	2.307783449191895E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999976922165508	WITHOUT_CLASSIFICATION	2.307783449191895E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.8174742975728078	WITHOUT_CLASSIFICATION	0.1825257024271923	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999846012646143	WITHOUT_CLASSIFICATION	1.539873538561349E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999997235757997	WITHOUT_CLASSIFICATION	2.7642420028152445E-7	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999997235757997	WITHOUT_CLASSIFICATION	2.7642420028152445E-7	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999999140352693	WITHOUT_CLASSIFICATION	8.596473069077189E-8	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9998825916389281	WITHOUT_CLASSIFICATION	1.1740836107184126E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999907120855706	WITHOUT_CLASSIFICATION	9.287914429377802E-6	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999907120855706	WITHOUT_CLASSIFICATION	9.287914429377802E-6	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999793615996339	WITHOUT_CLASSIFICATION	2.0638400366221768E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999993550811184	WITHOUT_CLASSIFICATION	6.449188816483504E-7	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999999999671549	WITHOUT_CLASSIFICATION	3.2845109823070624E-10	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999551440513	WITHOUT_CLASSIFICATION	4.485594861671067E-8	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999986009507	WITHOUT_CLASSIFICATION	1.3990492630400704E-9	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999893032460956	WITHOUT_CLASSIFICATION	1.0696753904372792E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.999999949551308	WITHOUT_CLASSIFICATION	5.044869193829345E-8	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999999062761848	WITHOUT_CLASSIFICATION	9.372381516534131E-8	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999991064711629	WITHOUT_CLASSIFICATION	8.935288371859613E-7	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999996936355549	WITHOUT_CLASSIFICATION	3.0636444510833184E-7	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.999955184659988	WITHOUT_CLASSIFICATION	4.481534001200822E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999990851073901	WITHOUT_CLASSIFICATION	9.148926098823673E-7	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999989334697276	WITHOUT_CLASSIFICATION	1.0665302724086377E-6	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999973627693746	WITHOUT_CLASSIFICATION	2.637230625442109E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999977967803081	WITHOUT_CLASSIFICATION	2.2032196919231345E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999136917384	WITHOUT_CLASSIFICATION	8.630826173046303E-8	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999971173672386	WITHOUT_CLASSIFICATION	2.8826327614254675E-6	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998383641909	WITHOUT_CLASSIFICATION	1.6163580893655647E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999993382383183	WITHOUT_CLASSIFICATION	6.61761681700942E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9917103626656859	WITHOUT_CLASSIFICATION	0.008289637334314032	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999999932947796	WITHOUT_CLASSIFICATION	6.705220394320661E-9	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999997587969667	WITHOUT_CLASSIFICATION	2.4120303336454065E-7	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9997777971368026	WITHOUT_CLASSIFICATION	2.2220286319734754E-4	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999991648177362	WITHOUT_CLASSIFICATION	8.35182263644382E-7	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999992046220371	WITHOUT_CLASSIFICATION	7.953779629924476E-7	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999999171312399	WITHOUT_CLASSIFICATION	8.286875999846367E-8	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999999636499612	WITHOUT_CLASSIFICATION	3.635003879972488E-8	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.999999772564262	WITHOUT_CLASSIFICATION	2.2743573797695425E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999465585174	WITHOUT_CLASSIFICATION	5.344148252215897E-8	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999465585174	WITHOUT_CLASSIFICATION	5.344148252215897E-8	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999999205034	WITHOUT_CLASSIFICATION	7.949656456588491E-11	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999866756479	WITHOUT_CLASSIFICATION	1.3324351953589682E-8	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999891366462	WITHOUT_CLASSIFICATION	1.0863353727735473E-8	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999999306551117	WITHOUT_CLASSIFICATION	6.934488820578121E-8	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999806395954	WITHOUT_CLASSIFICATION	1.9360404629667993E-8	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999993360372815	WITHOUT_CLASSIFICATION	6.639627184267337E-7	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999978705329773	WITHOUT_CLASSIFICATION	2.129467022765643E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998201022986	WITHOUT_CLASSIFICATION	1.798977014581791E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999999996435764	WITHOUT_CLASSIFICATION	3.564236030161055E-10	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999993999530022	WITHOUT_CLASSIFICATION	6.000469978010888E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9991171832905653	WITHOUT_CLASSIFICATION	8.828167094348142E-4	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.999999989362609	WITHOUT_CLASSIFICATION	1.0637390954415288E-8	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9999094982559869	WITHOUT_CLASSIFICATION	9.050174401314128E-5	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999953547756029	WITHOUT_CLASSIFICATION	4.645224397196154E-6	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999995055424752	WITHOUT_CLASSIFICATION	4.944575247571755E-7	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999978546024512	WITHOUT_CLASSIFICATION	2.1453975488287335E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.998641367078194	WITHOUT_CLASSIFICATION	0.0013586329218061416	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999995951286219	WITHOUT_CLASSIFICATION	4.0487137800767975E-7	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999997692173958	WITHOUT_CLASSIFICATION	2.3078260435997757E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999959900659117	WITHOUT_CLASSIFICATION	4.0099340884030745E-6	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999974821350892	WITHOUT_CLASSIFICATION	2.5178649106782405E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999878110601504	WITHOUT_CLASSIFICATION	1.2188939849449149E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999998929101185	WITHOUT_CLASSIFICATION	1.0708988154145457E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999999261318887	WITHOUT_CLASSIFICATION	7.386811132212254E-8	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999989955320693	WITHOUT_CLASSIFICATION	1.0044679307202188E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997880830131166	WITHOUT_CLASSIFICATION	2.1191698688332436E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999981543712304	WITHOUT_CLASSIFICATION	1.845628769653362E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999989574754188	WITHOUT_CLASSIFICATION	1.0425245811887711E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999999168184062	WITHOUT_CLASSIFICATION	8.31815939531967E-8	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999998290592926	WITHOUT_CLASSIFICATION	1.709407074643853E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999910494881	WITHOUT_CLASSIFICATION	8.950511860554961E-9	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999997159207035	WITHOUT_CLASSIFICATION	2.8407929645789106E-7	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999993709880428	WITHOUT_CLASSIFICATION	6.290119572146732E-7	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999985321304491	WITHOUT_CLASSIFICATION	1.4678695508649852E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999998341109764	WITHOUT_CLASSIFICATION	1.6588902360663824E-7	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9999334785730781	WITHOUT_CLASSIFICATION	6.6521426921925E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999940724080386	WITHOUT_CLASSIFICATION	5.927591961381474E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999899133513235	WITHOUT_CLASSIFICATION	1.0086648676505309E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999983900504943	WITHOUT_CLASSIFICATION	1.6099495056657225E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999994597898388	WITHOUT_CLASSIFICATION	5.402101612173755E-7	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.99998288394608	WITHOUT_CLASSIFICATION	1.7116053920010733E-5	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999998977059585	WITHOUT_CLASSIFICATION	1.022940414375797E-7	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999992580645904	WITHOUT_CLASSIFICATION	7.419354095656253E-7	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999992580645904	WITHOUT_CLASSIFICATION	7.419354095656253E-7	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999641226096699	WITHOUT_CLASSIFICATION	3.5877390330014345E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999999814197478	WITHOUT_CLASSIFICATION	1.8580252205400582E-8	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9968550332615382	WITHOUT_CLASSIFICATION	0.003144966738461831	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999999128247303	WITHOUT_CLASSIFICATION	8.717526963735565E-8	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999464305881713	WITHOUT_CLASSIFICATION	5.356941182866438E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999965186733908	WITHOUT_CLASSIFICATION	3.481326609241465E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9996770316428678	WITHOUT_CLASSIFICATION	3.229683571321174E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999128070702223	WITHOUT_CLASSIFICATION	8.719292977767709E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999997522022451	WITHOUT_CLASSIFICATION	2.477977548909869E-7	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999996169337165	WITHOUT_CLASSIFICATION	3.830662833609164E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999999473477154	WITHOUT_CLASSIFICATION	5.265228472166116E-8	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999991463316277	WITHOUT_CLASSIFICATION	8.536683723118737E-7	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999999450144574	WITHOUT_CLASSIFICATION	5.498554250049062E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999910031004	WITHOUT_CLASSIFICATION	8.996899539840819E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999924062231	WITHOUT_CLASSIFICATION	7.593776878828996E-9	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999999054814442	WITHOUT_CLASSIFICATION	9.451855581311759E-8	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999998321124	WITHOUT_CLASSIFICATION	1.6788760365503914E-9	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999998467215819	WITHOUT_CLASSIFICATION	1.5327841800883292E-7	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.999999988391174	WITHOUT_CLASSIFICATION	1.1608825956991757E-8	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999999215985267	WITHOUT_CLASSIFICATION	7.84014732480879E-8	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999844880568	WITHOUT_CLASSIFICATION	1.5511943133838877E-8	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999926979706434	WITHOUT_CLASSIFICATION	7.302029356622015E-6	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999995491029765	WITHOUT_CLASSIFICATION	4.5089702353048895E-7	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999998997862518	WITHOUT_CLASSIFICATION	1.0021374815608846E-7	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999998625761	WITHOUT_CLASSIFICATION	1.37423951952194E-10	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999993591416	WITHOUT_CLASSIFICATION	6.408583168377112E-10	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999994530478	WITHOUT_CLASSIFICATION	5.469520889517086E-10	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999627119652	WITHOUT_CLASSIFICATION	3.728803480003989E-8	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999950812981	WITHOUT_CLASSIFICATION	4.918701932724491E-9	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999999572972048	WITHOUT_CLASSIFICATION	4.2702795239773997E-8	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999759612378	WITHOUT_CLASSIFICATION	2.4038762136244017E-8	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999999469726057	WITHOUT_CLASSIFICATION	5.30273942872568E-8	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999655577605221	WITHOUT_CLASSIFICATION	3.444223947799807E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9961047032849811	WITHOUT_CLASSIFICATION	0.0038952967150189506	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.999899133513235	WITHOUT_CLASSIFICATION	1.0086648676505309E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9995761563739262	WITHOUT_CLASSIFICATION	4.238436260738493E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999573643813	WITHOUT_CLASSIFICATION	4.263561878230358E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999573643813	WITHOUT_CLASSIFICATION	4.263561878230358E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999987189064	WITHOUT_CLASSIFICATION	1.2810936257151246E-9	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999991834465	WITHOUT_CLASSIFICATION	8.165535105502212E-10	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999695785828725	WITHOUT_CLASSIFICATION	3.0421417127616548E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9994954267740782	WITHOUT_CLASSIFICATION	5.04573225921791E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9992258188788039	WITHOUT_CLASSIFICATION	7.741811211960484E-4	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9992959954263801	WITHOUT_CLASSIFICATION	7.040045736198491E-4	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9991275234566898	WITHOUT_CLASSIFICATION	8.724765433102397E-4	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9993221017236975	WITHOUT_CLASSIFICATION	6.778982763024132E-4	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9979095609944808	WITHOUT_CLASSIFICATION	0.002090439005519223	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.99828157421069	WITHOUT_CLASSIFICATION	0.00171842578930996	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9979869762729965	WITHOUT_CLASSIFICATION	0.0020130237270034592	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.996621334543451	WITHOUT_CLASSIFICATION	0.003378665456549068	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9986435143342084	WITHOUT_CLASSIFICATION	0.0013564856657916115	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999936998261044	WITHOUT_CLASSIFICATION	6.300173895581297E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999997134372643	WITHOUT_CLASSIFICATION	2.865627356099333E-7	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999996530247369	WITHOUT_CLASSIFICATION	3.469752630396805E-7	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9976696557995819	WITHOUT_CLASSIFICATION	0.002330344200418144	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9872899213676278	WITHOUT_CLASSIFICATION	0.012710078632372198	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9926594074128912	WITHOUT_CLASSIFICATION	0.007340592587108783	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9939600796685554	WITHOUT_CLASSIFICATION	0.006039920331444715	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9945548623648908	WITHOUT_CLASSIFICATION	0.005445137635109308	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9953367075677485	WITHOUT_CLASSIFICATION	0.004663292432251584	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999959020101918	WITHOUT_CLASSIFICATION	4.0979898081183846E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999998993301905	WITHOUT_CLASSIFICATION	1.0066980947479774E-7	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999988342169	WITHOUT_CLASSIFICATION	1.1657831927129605E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9974265290760689	WITHOUT_CLASSIFICATION	0.002573470923931223	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999967968151987	WITHOUT_CLASSIFICATION	3.2031848013478962E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998966317845	WITHOUT_CLASSIFICATION	1.0336821553291897E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999997794358033	WITHOUT_CLASSIFICATION	2.2056419667034999E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999925921199389	WITHOUT_CLASSIFICATION	7.407880061130295E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.999999966126009	WITHOUT_CLASSIFICATION	3.38739909196627E-8	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999781411196	WITHOUT_CLASSIFICATION	2.1858880417540834E-8	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999998578923964	WITHOUT_CLASSIFICATION	1.4210760360771973E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999255161305	WITHOUT_CLASSIFICATION	7.44838695060194E-8	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999995928204491	WITHOUT_CLASSIFICATION	4.07179550762196E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999972102496412	WITHOUT_CLASSIFICATION	2.7897503588075143E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999994109647	WITHOUT_CLASSIFICATION	5.890352397041066E-10	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9974265290760689	WITHOUT_CLASSIFICATION	0.002573470923931223	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999967968151987	WITHOUT_CLASSIFICATION	3.2031848013478962E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998966317845	WITHOUT_CLASSIFICATION	1.0336821553291897E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999925921199389	WITHOUT_CLASSIFICATION	7.407880061130295E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9929116973425066	WITHOUT_CLASSIFICATION	0.0070883026574934515	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999937224194	WITHOUT_CLASSIFICATION	6.277580579499371E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999008457201592	WITHOUT_CLASSIFICATION	9.915427984071952E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999998892641454	WITHOUT_CLASSIFICATION	1.1073585465734509E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999969508235429	WITHOUT_CLASSIFICATION	3.0491764570178605E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999971772334	WITHOUT_CLASSIFICATION	2.8227665610671397E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999980092394942	WITHOUT_CLASSIFICATION	1.9907605058501334E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997937211536	WITHOUT_CLASSIFICATION	2.0627884641614418E-7	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999683095723	WITHOUT_CLASSIFICATION	3.1690427732619014E-8	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.999997223266595	WITHOUT_CLASSIFICATION	2.7767334049781275E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999999958541049	WITHOUT_CLASSIFICATION	4.1458950977211255E-8	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999997263063684	WITHOUT_CLASSIFICATION	2.736936316040059E-7	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999985274712	WITHOUT_CLASSIFICATION	1.4725288279235215E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.999999352385424	WITHOUT_CLASSIFICATION	6.476145760000942E-7	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999985709041087	WITHOUT_CLASSIFICATION	1.4290958912571239E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999992948031707	WITHOUT_CLASSIFICATION	7.051968293555565E-7	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999753140532	WITHOUT_CLASSIFICATION	2.4685946876912964E-8	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.999999624329738	WITHOUT_CLASSIFICATION	3.756702619424778E-7	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999995271677753	WITHOUT_CLASSIFICATION	4.7283222472662557E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999994109647	WITHOUT_CLASSIFICATION	5.890352397041066E-10	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999937224194	WITHOUT_CLASSIFICATION	6.277580579499371E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999008457201592	WITHOUT_CLASSIFICATION	9.915427984071952E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999969508235429	WITHOUT_CLASSIFICATION	3.0491764570178605E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999971772334	WITHOUT_CLASSIFICATION	2.8227665610671397E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999980092394942	WITHOUT_CLASSIFICATION	1.9907605058501334E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997937211536	WITHOUT_CLASSIFICATION	2.0627884641614418E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999449112653	WITHOUT_CLASSIFICATION	5.508873459501917E-8	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999824005516263	WITHOUT_CLASSIFICATION	1.75994483737216E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999065936306	WITHOUT_CLASSIFICATION	9.340636936351924E-8	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999997177017	WITHOUT_CLASSIFICATION	2.8229833682427164E-10	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998069590577	WITHOUT_CLASSIFICATION	1.93040942467869E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998069590577	WITHOUT_CLASSIFICATION	1.93040942467869E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999963378999	WITHOUT_CLASSIFICATION	3.6621000038176213E-9	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999999080886051	WITHOUT_CLASSIFICATION	9.191139495621487E-8	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999192301781	WITHOUT_CLASSIFICATION	8.076982190101449E-8	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.999998750231954	WITHOUT_CLASSIFICATION	1.2497680460220193E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999959806835	WITHOUT_CLASSIFICATION	4.019316648174976E-9	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999994749650594	WITHOUT_CLASSIFICATION	5.250349406695679E-7	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999998159753541	WITHOUT_CLASSIFICATION	1.8402464572103613E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999996794682523	WITHOUT_CLASSIFICATION	3.2053174768677416E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999995188044669	WITHOUT_CLASSIFICATION	4.811955330848647E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.999980438729447	WITHOUT_CLASSIFICATION	1.9561270552997975E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999956413423289	WITHOUT_CLASSIFICATION	4.3586576711328204E-6	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999470048413105	WITHOUT_CLASSIFICATION	5.2995158689554786E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999971535914589	WITHOUT_CLASSIFICATION	2.8464085410550986E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999991114421383	WITHOUT_CLASSIFICATION	8.885578617366996E-7	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999994158284238	WITHOUT_CLASSIFICATION	5.841715762189146E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999397686848058	WITHOUT_CLASSIFICATION	6.023131519402311E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999995176728556	WITHOUT_CLASSIFICATION	4.823271444487194E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999976158831	WITHOUT_CLASSIFICATION	2.3841168353708477E-9	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999998570595889	WITHOUT_CLASSIFICATION	1.4294041105435322E-7	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999995439782833	WITHOUT_CLASSIFICATION	4.5602171669048665E-7	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9714072689246082	IMPLEMENTATION	0.02859273107539191	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999632958398	WITHOUT_CLASSIFICATION	3.670416010936687E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999950515638	WITHOUT_CLASSIFICATION	4.9484361523171835E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5006415300594159	WITHOUT_CLASSIFICATION	0.4993584699405842	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999956339550062	WITHOUT_CLASSIFICATION	4.3660449938226226E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999821856639926	WITHOUT_CLASSIFICATION	1.7814336007430222E-5	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999533030475	WITHOUT_CLASSIFICATION	4.66969524857442E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999992754086886	WITHOUT_CLASSIFICATION	7.245913113740271E-7	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.999999753777664	WITHOUT_CLASSIFICATION	2.462223359520404E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999956339550062	WITHOUT_CLASSIFICATION	4.3660449938226226E-6	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999821856639926	WITHOUT_CLASSIFICATION	1.7814336007430222E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999991114421383	WITHOUT_CLASSIFICATION	8.885578617366996E-7	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999693154926043	WITHOUT_CLASSIFICATION	3.0684507395714806E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999976564098837	WITHOUT_CLASSIFICATION	2.3435901164043545E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998717887089638	WITHOUT_CLASSIFICATION	1.282112910362694E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999999793283	WITHOUT_CLASSIFICATION	2.0671687903500286E-11	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999902054193482	WITHOUT_CLASSIFICATION	9.794580651655213E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999985294861549	WITHOUT_CLASSIFICATION	1.4705138452211324E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999989540640298	WITHOUT_CLASSIFICATION	1.0459359700936478E-6	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999995657375798	WITHOUT_CLASSIFICATION	4.342624202416023E-7	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999989426138148	WITHOUT_CLASSIFICATION	1.0573861852372575E-6	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999999071273	WITHOUT_CLASSIFICATION	9.287269726874534E-11	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999941998753622	WITHOUT_CLASSIFICATION	5.800124637847638E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999623646514177	WITHOUT_CLASSIFICATION	3.7635348582273785E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9998614652571506	WITHOUT_CLASSIFICATION	1.3853474284938313E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999796106978	WITHOUT_CLASSIFICATION	2.0389302213877178E-8	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999971950122	WITHOUT_CLASSIFICATION	2.8049878113513106E-9	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999997771775083	WITHOUT_CLASSIFICATION	2.228224915538049E-7	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999348613218468	WITHOUT_CLASSIFICATION	6.513867815311165E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999400403405274	WITHOUT_CLASSIFICATION	5.9959659472533067E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999965819373302	WITHOUT_CLASSIFICATION	3.4180626698806842E-6	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999985411803	WITHOUT_CLASSIFICATION	1.4588196429678469E-9	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999998423854967	WITHOUT_CLASSIFICATION	1.5761450322944312E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999660732362	WITHOUT_CLASSIFICATION	3.392676384235809E-8	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999988939220267	WITHOUT_CLASSIFICATION	1.1060779733249372E-6	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999954533596	WITHOUT_CLASSIFICATION	4.5466403342721736E-9	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999495147486	WITHOUT_CLASSIFICATION	5.0485251360050064E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999998942033876	WITHOUT_CLASSIFICATION	1.0579661236085221E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999865371847936	WITHOUT_CLASSIFICATION	1.3462815206462674E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999976035053105	WITHOUT_CLASSIFICATION	2.3964946894509256E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999899730687	WITHOUT_CLASSIFICATION	1.0026931167130965E-8	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999989010793	WITHOUT_CLASSIFICATION	1.0989207525572001E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999995550142887	WITHOUT_CLASSIFICATION	4.4498571130928934E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999971535914589	WITHOUT_CLASSIFICATION	2.8464085410550986E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999999001483	WITHOUT_CLASSIFICATION	9.985163829246556E-11	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999368673475992	WITHOUT_CLASSIFICATION	6.313265240072962E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999996046314009	WITHOUT_CLASSIFICATION	3.953685989653405E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999932762524059	WITHOUT_CLASSIFICATION	6.7237475942273235E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999932762524059	WITHOUT_CLASSIFICATION	6.7237475942273235E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998187876287	WITHOUT_CLASSIFICATION	1.8121237138596982E-7	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999958731579504	WITHOUT_CLASSIFICATION	4.126842049611209E-6	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999996282250837	WITHOUT_CLASSIFICATION	3.7177491638992113E-7	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999999361210443	WITHOUT_CLASSIFICATION	6.387895567575118E-8	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999605626522	WITHOUT_CLASSIFICATION	3.9437347945825304E-8	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999999977883	WITHOUT_CLASSIFICATION	2.211646147714955E-12	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999990797243699	WITHOUT_CLASSIFICATION	9.202756301837406E-7	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999869241231769	WITHOUT_CLASSIFICATION	1.3075876823092895E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999956403325	WITHOUT_CLASSIFICATION	4.359667420188283E-9	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999980168822686	WITHOUT_CLASSIFICATION	1.9831177312911284E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999998809114967	WITHOUT_CLASSIFICATION	1.1908850332111292E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999720728358	WITHOUT_CLASSIFICATION	2.7927164360279312E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999377250075	WITHOUT_CLASSIFICATION	6.22749924571711E-8	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999996649286546	WITHOUT_CLASSIFICATION	3.350713453938653E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999996102767927	WITHOUT_CLASSIFICATION	3.897232072212407E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.999998793133834	WITHOUT_CLASSIFICATION	1.2068661659255182E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999999426432	WITHOUT_CLASSIFICATION	5.7356738071713554E-11	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999999426432	WITHOUT_CLASSIFICATION	5.7356738071713554E-11	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999815196993	WITHOUT_CLASSIFICATION	1.8480300697892432E-8	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999999815196993	WITHOUT_CLASSIFICATION	1.8480300697892432E-8	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999982034631	WITHOUT_CLASSIFICATION	1.796536842820762E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999756603098	WITHOUT_CLASSIFICATION	2.4339690242842326E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999975179732985	WITHOUT_CLASSIFICATION	2.4820267015541746E-6	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9976902786761438	WITHOUT_CLASSIFICATION	0.0023097213238562767	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999916203605	WITHOUT_CLASSIFICATION	8.379639561912274E-9	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999973478612314	WITHOUT_CLASSIFICATION	2.6521387686406665E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.999999616432418	WITHOUT_CLASSIFICATION	3.835675820202556E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999720728358	WITHOUT_CLASSIFICATION	2.7927164360279312E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999999377250075	WITHOUT_CLASSIFICATION	6.22749924571711E-8	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999996102767927	WITHOUT_CLASSIFICATION	3.897232072212407E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999989992672	WITHOUT_CLASSIFICATION	1.000732873427961E-9	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999998419277706	WITHOUT_CLASSIFICATION	1.5807222928448218E-7	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999810273971	WITHOUT_CLASSIFICATION	1.897260290920531E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.999999829686794	WITHOUT_CLASSIFICATION	1.7031320594950511E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999999480972	WITHOUT_CLASSIFICATION	5.190286621583121E-11	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999991362018799	WITHOUT_CLASSIFICATION	8.637981201789294E-7	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999991064959179	WITHOUT_CLASSIFICATION	8.935040821263737E-7	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999949702023841	WITHOUT_CLASSIFICATION	5.029797615905316E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.999999177863528	WITHOUT_CLASSIFICATION	8.221364720402932E-7	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999999976554	WITHOUT_CLASSIFICATION	2.34450007430164E-12	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9996222663378919	WITHOUT_CLASSIFICATION	3.7773366210807995E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999977738958405	WITHOUT_CLASSIFICATION	2.2261041595534E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999999409914639	WITHOUT_CLASSIFICATION	5.900853600131926E-8	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.999999899497566	WITHOUT_CLASSIFICATION	1.0050243413377298E-7	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999695630068896	WITHOUT_CLASSIFICATION	3.0436993110440266E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999798362924	WITHOUT_CLASSIFICATION	2.0163707609921426E-8	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999998310085334	WITHOUT_CLASSIFICATION	1.6899146651088517E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999984529483616	WITHOUT_CLASSIFICATION	1.5470516384077027E-6	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999849790957396	WITHOUT_CLASSIFICATION	1.502090426045449E-5	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999965516249	WITHOUT_CLASSIFICATION	3.448375069567712E-9	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999953589779	WITHOUT_CLASSIFICATION	4.64102218511891E-9	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999845714077351	WITHOUT_CLASSIFICATION	1.542859226487028E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999921848396747	WITHOUT_CLASSIFICATION	7.81516032531465E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999936307195	WITHOUT_CLASSIFICATION	6.3692806040647316E-9	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.999999953865803	WITHOUT_CLASSIFICATION	4.613419695517739E-8	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999990755874809	WITHOUT_CLASSIFICATION	9.244125191480356E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999947836790883	WITHOUT_CLASSIFICATION	5.216320911715908E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999983582426584	WITHOUT_CLASSIFICATION	1.6417573415497996E-6	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999846456028	WITHOUT_CLASSIFICATION	1.535439720942467E-8	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.999999587443021	WITHOUT_CLASSIFICATION	4.1255697913357644E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999992745001655	WITHOUT_CLASSIFICATION	7.254998345385768E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999998484385351	WITHOUT_CLASSIFICATION	1.5156146492885843E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.999999977371647	WITHOUT_CLASSIFICATION	2.262835286660289E-8	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.999999942336759	WITHOUT_CLASSIFICATION	5.766324104766446E-8	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999858637854255	WITHOUT_CLASSIFICATION	1.4136214574354353E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.99999824462926	WITHOUT_CLASSIFICATION	1.7553707399411593E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.99998985585981	WITHOUT_CLASSIFICATION	1.0144140189916324E-5	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999999479620229	WITHOUT_CLASSIFICATION	5.203797716109769E-8	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999992631839836	WITHOUT_CLASSIFICATION	7.368160163373571E-7	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999980237194	WITHOUT_CLASSIFICATION	1.9762806182071385E-9	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999997613092944	WITHOUT_CLASSIFICATION	2.3869070567537605E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999368673475992	WITHOUT_CLASSIFICATION	6.313265240072962E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.99998985585981	WITHOUT_CLASSIFICATION	1.0144140189916324E-5	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999993242751	WITHOUT_CLASSIFICATION	6.757248978794966E-10	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999885089151	WITHOUT_CLASSIFICATION	1.1491084809547104E-8	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999984669422142	WITHOUT_CLASSIFICATION	1.5330577857607271E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999996749103577	WITHOUT_CLASSIFICATION	3.250896422501555E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999996749103577	WITHOUT_CLASSIFICATION	3.250896422501555E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999784178518182	WITHOUT_CLASSIFICATION	2.1582148181821473E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999870679315697	WITHOUT_CLASSIFICATION	1.293206843029439E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.999999740019736	WITHOUT_CLASSIFICATION	2.599802639632046E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999997836581	WITHOUT_CLASSIFICATION	2.1634189957523444E-10	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.999108128605738	WITHOUT_CLASSIFICATION	8.918713942618873E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999999715087299	WITHOUT_CLASSIFICATION	2.8491270181513175E-8	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999999930494	WITHOUT_CLASSIFICATION	6.9504684218250674E-12	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999922602434859	WITHOUT_CLASSIFICATION	7.739756514194398E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999689616167	WITHOUT_CLASSIFICATION	3.103838326426999E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.9999999689616167	WITHOUT_CLASSIFICATION	3.103838326426999E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.999999798140139	WITHOUT_CLASSIFICATION	2.0185986100999846E-7	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999995473166527	WITHOUT_CLASSIFICATION	4.526833473316612E-7	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999983118729	WITHOUT_CLASSIFICATION	1.688127011744439E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999969794091	WITHOUT_CLASSIFICATION	3.020590908583631E-9	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999998609679	WITHOUT_CLASSIFICATION	1.3903217432029107E-10	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999601333665	WITHOUT_CLASSIFICATION	3.986663358782275E-8	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.999999997043562	WITHOUT_CLASSIFICATION	2.9564378647777027E-9	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999964616811	WITHOUT_CLASSIFICATION	3.5383188998702835E-9	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999995711813153	WITHOUT_CLASSIFICATION	4.288186847056509E-7	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999981456746	WITHOUT_CLASSIFICATION	1.854325256649279E-9	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999890983915528	WITHOUT_CLASSIFICATION	1.0901608447148447E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999999732543813	WITHOUT_CLASSIFICATION	2.6745618630507818E-8	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999992454954063	WITHOUT_CLASSIFICATION	7.545045936347984E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994400216887	WITHOUT_CLASSIFICATION	5.599783112705071E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999994400216887	WITHOUT_CLASSIFICATION	5.599783112705071E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.999999991209992	WITHOUT_CLASSIFICATION	8.790008144886351E-9	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997937211536	WITHOUT_CLASSIFICATION	2.0627884641614418E-7	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999999371952	WITHOUT_CLASSIFICATION	6.280475977812138E-11	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999996168829021	WITHOUT_CLASSIFICATION	3.8311709789540844E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999999955079	WITHOUT_CLASSIFICATION	4.49202235997362E-12	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999939427227	WITHOUT_CLASSIFICATION	6.057277380406854E-9	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999997875259	WITHOUT_CLASSIFICATION	2.124742395195007E-10	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999994041416532	WITHOUT_CLASSIFICATION	5.95858346809302E-7	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999995579885478	WITHOUT_CLASSIFICATION	4.4201145220856084E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999999509254035	WITHOUT_CLASSIFICATION	4.907459651316817E-8	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999746555980924	WITHOUT_CLASSIFICATION	2.5344401907635305E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999999436920961	WITHOUT_CLASSIFICATION	5.630790393330943E-8	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999593027868392	WITHOUT_CLASSIFICATION	4.0697213160869456E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.999999999895087	WITHOUT_CLASSIFICATION	1.0491296873267769E-10	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999999993671901	WITHOUT_CLASSIFICATION	6.328098551652863E-10	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.999999984712462	WITHOUT_CLASSIFICATION	1.52875380209552E-8	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999303217356	WITHOUT_CLASSIFICATION	6.967826440988364E-8	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999997918240041	WITHOUT_CLASSIFICATION	2.081759957527879E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999623799392	WITHOUT_CLASSIFICATION	3.7620060854027766E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999997970633097	WITHOUT_CLASSIFICATION	2.0293669034411706E-7	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999970888833329	WITHOUT_CLASSIFICATION	2.911116667024546E-6	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999949731032	WITHOUT_CLASSIFICATION	5.026896801766417E-9	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999756603252875	WITHOUT_CLASSIFICATION	2.4339674712500658E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999996784405121	WITHOUT_CLASSIFICATION	3.215594879959854E-7	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.6446708345686359	IMPLEMENTATION	0.35532916543136417	WITHOUT_CLASSIFICATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.999999799613088	WITHOUT_CLASSIFICATION	2.0038691187673175E-7	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999993529314797	WITHOUT_CLASSIFICATION	6.470685203871592E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999996893500811	WITHOUT_CLASSIFICATION	3.1064991894885596E-7	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999999701029213	WITHOUT_CLASSIFICATION	2.989707881638648E-8	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9989545651465861	WITHOUT_CLASSIFICATION	0.001045434853413951	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999998150414243	WITHOUT_CLASSIFICATION	1.8495857561134132E-7	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999986135913985	WITHOUT_CLASSIFICATION	1.3864086015166991E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999425385482	WITHOUT_CLASSIFICATION	5.746145185759924E-8	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999930852398407	WITHOUT_CLASSIFICATION	6.914760159314866E-6	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999969175509595	WITHOUT_CLASSIFICATION	3.082449040452851E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999948847332	WITHOUT_CLASSIFICATION	5.115266739240727E-9	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.999999508252365	WITHOUT_CLASSIFICATION	4.917476350317323E-7	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999997002336709	WITHOUT_CLASSIFICATION	2.997663291668948E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999885395987	WITHOUT_CLASSIFICATION	1.1460401345459373E-8	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999996374892489	WITHOUT_CLASSIFICATION	3.625107510363715E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999999885774354	WITHOUT_CLASSIFICATION	1.1422564528647965E-8	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.998793106711379	WITHOUT_CLASSIFICATION	0.0012068932886209556	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9999956633109508	WITHOUT_CLASSIFICATION	4.336689049182128E-6	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999808175112	WITHOUT_CLASSIFICATION	1.9182488879595643E-8	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999998894599594	WITHOUT_CLASSIFICATION	1.1054004059941136E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996222607466	WITHOUT_CLASSIFICATION	3.7773925339428736E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999913860305	WITHOUT_CLASSIFICATION	8.613969644058375E-9	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999998079108	WITHOUT_CLASSIFICATION	1.9208924248064303E-10	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999739072700149	WITHOUT_CLASSIFICATION	2.6092729985116127E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999956339550062	WITHOUT_CLASSIFICATION	4.3660449938226226E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999956339550062	WITHOUT_CLASSIFICATION	4.3660449938226226E-6	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.999999721897674	WITHOUT_CLASSIFICATION	2.7810232596937113E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.999999977716314	WITHOUT_CLASSIFICATION	2.2283685946686458E-8	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999642554998	WITHOUT_CLASSIFICATION	3.5744500216417315E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999998249967	WITHOUT_CLASSIFICATION	1.750032197090808E-10	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999955784433981	WITHOUT_CLASSIFICATION	4.421556601891529E-6	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999842976733778	WITHOUT_CLASSIFICATION	1.5702326622126826E-5	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999943745568	WITHOUT_CLASSIFICATION	5.625443221319788E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999995970373	WITHOUT_CLASSIFICATION	4.029626339786162E-10	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.999999995736695	WITHOUT_CLASSIFICATION	4.263305002680016E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999998475726318	WITHOUT_CLASSIFICATION	1.5242736816857846E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998193133095	WITHOUT_CLASSIFICATION	1.8068669042870066E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998193133095	WITHOUT_CLASSIFICATION	1.8068669042870066E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999998193133095	WITHOUT_CLASSIFICATION	1.8068669042870066E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9982912604958665	WITHOUT_CLASSIFICATION	0.0017087395041334823	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.99999990306042	WITHOUT_CLASSIFICATION	9.69395800480969E-8	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999995763031331	WITHOUT_CLASSIFICATION	4.236968669809198E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999323446996	WITHOUT_CLASSIFICATION	6.76553003404766E-8	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999999323446996	WITHOUT_CLASSIFICATION	6.76553003404766E-8	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999921059946012	WITHOUT_CLASSIFICATION	7.894005398802942E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999399011088961	WITHOUT_CLASSIFICATION	6.0098891103883004E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999994128672	WITHOUT_CLASSIFICATION	5.871328807987413E-10	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999739316743	WITHOUT_CLASSIFICATION	2.6068325730930237E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.999999977822402	WITHOUT_CLASSIFICATION	2.2177597971647428E-8	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9993885279853224	WITHOUT_CLASSIFICATION	6.114720146775498E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999999878712902	WITHOUT_CLASSIFICATION	1.2128709816191267E-8	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999689638236566	WITHOUT_CLASSIFICATION	3.103617634331329E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999880778594	WITHOUT_CLASSIFICATION	1.192214060062836E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999946381785968	WITHOUT_CLASSIFICATION	5.361821403186528E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999946381785968	WITHOUT_CLASSIFICATION	5.361821403186528E-6	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999998497175676	WITHOUT_CLASSIFICATION	1.5028243250538996E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999998426709784	WITHOUT_CLASSIFICATION	1.5732902168050253E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998776435434	WITHOUT_CLASSIFICATION	1.223564567344674E-7	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999996064492065	WITHOUT_CLASSIFICATION	3.935507935536835E-7	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999078281204	WITHOUT_CLASSIFICATION	9.217187947875813E-8	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999987078608118	WITHOUT_CLASSIFICATION	1.2921391882969127E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.999998837771038	WITHOUT_CLASSIFICATION	1.1622289619791597E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999905721397775	WITHOUT_CLASSIFICATION	9.427860222535758E-6	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999993424050366	WITHOUT_CLASSIFICATION	6.575949634793109E-7	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999995802507647	WITHOUT_CLASSIFICATION	4.1974923531541015E-7	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999999862026643	WITHOUT_CLASSIFICATION	1.3797335694540908E-8	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999998863434796	WITHOUT_CLASSIFICATION	1.1365652043642427E-7	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999999437436704	WITHOUT_CLASSIFICATION	5.625632960408843E-8	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999998544692372	WITHOUT_CLASSIFICATION	1.4553076287199423E-7	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9974380931941206	WITHOUT_CLASSIFICATION	0.0025619068058793187	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999472599864	WITHOUT_CLASSIFICATION	5.274001358500322E-8	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999983613589458	WITHOUT_CLASSIFICATION	1.638641054169094E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.999999958023027	WITHOUT_CLASSIFICATION	4.197697312084101E-8	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999974248386226	WITHOUT_CLASSIFICATION	2.5751613773695765E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999999343314605	WITHOUT_CLASSIFICATION	6.566853946574514E-8	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999735432263523	WITHOUT_CLASSIFICATION	2.6456773647669388E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999959984468547	WITHOUT_CLASSIFICATION	4.001553145261567E-6	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999991391748276	WITHOUT_CLASSIFICATION	8.608251724916399E-7	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999968191578763	WITHOUT_CLASSIFICATION	3.180842123811784E-6	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999985591059319	WITHOUT_CLASSIFICATION	1.440894067978002E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999940221332193	WITHOUT_CLASSIFICATION	5.97786678071077E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999997689150434	WITHOUT_CLASSIFICATION	2.3108495659345892E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999998320109464	WITHOUT_CLASSIFICATION	1.6798905353035779E-7	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999959775597	WITHOUT_CLASSIFICATION	4.022440323181571E-9	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999993278350016	WITHOUT_CLASSIFICATION	6.721649984504664E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999997344737594	WITHOUT_CLASSIFICATION	2.6552624055142315E-7	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999254870467617	WITHOUT_CLASSIFICATION	7.451295323836444E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999999160523331	WITHOUT_CLASSIFICATION	8.394766689893674E-8	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999997344737594	WITHOUT_CLASSIFICATION	2.6552624055142315E-7	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999973455598183	WITHOUT_CLASSIFICATION	2.6544401817052997E-6	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999991948175344	WITHOUT_CLASSIFICATION	8.05182465513976E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999996131291627	WITHOUT_CLASSIFICATION	3.868708371958247E-7	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999996512007955	WITHOUT_CLASSIFICATION	3.487992044897765E-7	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999999018354775	WITHOUT_CLASSIFICATION	9.816452248963058E-8	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999998805288528	WITHOUT_CLASSIFICATION	1.1947114708034073E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999751821613	WITHOUT_CLASSIFICATION	2.4817838570896854E-8	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.999999843184745	WITHOUT_CLASSIFICATION	1.568152548966497E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.999998394707303	WITHOUT_CLASSIFICATION	1.6052926970169853E-6	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.99999242191503	WITHOUT_CLASSIFICATION	7.578084969978151E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999748497105284	WITHOUT_CLASSIFICATION	2.515028947149938E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.999999196100591	WITHOUT_CLASSIFICATION	8.038994091235515E-7	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.999990421618294	WITHOUT_CLASSIFICATION	9.578381705969486E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999237797566802	WITHOUT_CLASSIFICATION	7.622024331976768E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999995628194049	WITHOUT_CLASSIFICATION	4.371805949981436E-7	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999966992436348	WITHOUT_CLASSIFICATION	3.300756365186531E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999976520893742	WITHOUT_CLASSIFICATION	2.3479106258249134E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999995229591598	WITHOUT_CLASSIFICATION	4.77040840094403E-7	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999989264422822	WITHOUT_CLASSIFICATION	1.0735577178709657E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9998987510241283	WITHOUT_CLASSIFICATION	1.0124897587160182E-4	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999299193506	WITHOUT_CLASSIFICATION	7.008064939059024E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999996505078782	WITHOUT_CLASSIFICATION	3.494921217918171E-7	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999991155462176	WITHOUT_CLASSIFICATION	8.844537824490392E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999999858603175	WITHOUT_CLASSIFICATION	1.4139682506995603E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999026016071	WITHOUT_CLASSIFICATION	9.739839287234371E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999999998872956	WITHOUT_CLASSIFICATION	1.1270445708903067E-10	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999994681399624	WITHOUT_CLASSIFICATION	5.318600375709164E-7	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999997747430281	WITHOUT_CLASSIFICATION	2.2525697195841203E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999992431453406	WITHOUT_CLASSIFICATION	7.568546594135077E-7	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999971560333524	WITHOUT_CLASSIFICATION	2.8439666475950204E-6	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999998979987386	WITHOUT_CLASSIFICATION	1.0200126145817057E-7	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.998415656008461	WITHOUT_CLASSIFICATION	0.001584343991539031	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.8388287276768757	WITHOUT_CLASSIFICATION	0.16117127232312425	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999994516169	WITHOUT_CLASSIFICATION	5.483831797733464E-10	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999781387803296	WITHOUT_CLASSIFICATION	2.1861219670471022E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999999894636279	WITHOUT_CLASSIFICATION	1.0536372080616055E-8	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999997920141006	WITHOUT_CLASSIFICATION	2.0798589936792467E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999992085224979	WITHOUT_CLASSIFICATION	7.914775021346809E-7	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999925890372977	WITHOUT_CLASSIFICATION	7.410962702369343E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999999116347786	WITHOUT_CLASSIFICATION	8.836522137917817E-8	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999993833969802	WITHOUT_CLASSIFICATION	6.166030198514729E-7	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999831375233718	WITHOUT_CLASSIFICATION	1.686247662834505E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999643808683192	WITHOUT_CLASSIFICATION	3.561913168081315E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999845478162476	WITHOUT_CLASSIFICATION	1.5452183752392592E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999984537613017	WITHOUT_CLASSIFICATION	1.5462386983334245E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999999886113353	WITHOUT_CLASSIFICATION	1.13886647749568E-8	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999957732771505	WITHOUT_CLASSIFICATION	4.226722849563216E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999999946822828	WITHOUT_CLASSIFICATION	5.317717096860424E-9	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997904046515	WITHOUT_CLASSIFICATION	2.0959534853296047E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999998934782045	WITHOUT_CLASSIFICATION	1.0652179551805699E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999999435018396	WITHOUT_CLASSIFICATION	5.649816052551944E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998043324649	WITHOUT_CLASSIFICATION	1.9566753516119176E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999927273754793	WITHOUT_CLASSIFICATION	7.272624520737327E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999997904046515	WITHOUT_CLASSIFICATION	2.0959534853296047E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8921258311222263	IMPLEMENTATION	0.10787416887777371	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.8921258311222263	IMPLEMENTATION	0.10787416887777371	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999996620402746	WITHOUT_CLASSIFICATION	3.379597253982059E-7	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999999317142542	WITHOUT_CLASSIFICATION	6.82857458314214E-8	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999077459726	WITHOUT_CLASSIFICATION	9.225402739332044E-8	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999999289107511	WITHOUT_CLASSIFICATION	7.108924895458719E-8	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999991802062325	WITHOUT_CLASSIFICATION	8.197937674661774E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999990291181017	WITHOUT_CLASSIFICATION	9.708818983460969E-7	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999997342692857	WITHOUT_CLASSIFICATION	2.657307143073E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9420482706675272	IMPLEMENTATION	0.0579517293324728	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999998825548483	WITHOUT_CLASSIFICATION	1.1744515177781451E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999966855357834	WITHOUT_CLASSIFICATION	3.3144642167374493E-6	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999999111476	WITHOUT_CLASSIFICATION	8.885239282489663E-11	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999855425384	WITHOUT_CLASSIFICATION	1.4457461664198932E-8	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999978497137887	WITHOUT_CLASSIFICATION	2.1502862112510572E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999996300373944	WITHOUT_CLASSIFICATION	3.6996260559814284E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9997236117347714	WITHOUT_CLASSIFICATION	2.763882652284861E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.999955868969573	WITHOUT_CLASSIFICATION	4.4131030427049506E-5	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999995138006	WITHOUT_CLASSIFICATION	4.861994254541206E-10	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999977987371046	WITHOUT_CLASSIFICATION	2.2012628954729618E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999977987371046	WITHOUT_CLASSIFICATION	2.2012628954729618E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999977987371046	WITHOUT_CLASSIFICATION	2.2012628954729618E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999977987371046	WITHOUT_CLASSIFICATION	2.2012628954729618E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999977987371046	WITHOUT_CLASSIFICATION	2.2012628954729618E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999997588726326	WITHOUT_CLASSIFICATION	2.41127367416141E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995508526089	WITHOUT_CLASSIFICATION	4.4914739096672625E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999353712481157	WITHOUT_CLASSIFICATION	6.462875188419074E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999874053626	WITHOUT_CLASSIFICATION	1.259463739948148E-8	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999913922869	WITHOUT_CLASSIFICATION	8.607713199547105E-9	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999975932284	WITHOUT_CLASSIFICATION	2.4067716554237733E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999810743278174	WITHOUT_CLASSIFICATION	1.8925672182671977E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998046197334	WITHOUT_CLASSIFICATION	1.953802665418537E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989369244117	WITHOUT_CLASSIFICATION	1.063075588274979E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999991804703513	WITHOUT_CLASSIFICATION	8.195296487281279E-7	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999997105316896	WITHOUT_CLASSIFICATION	2.894683104372347E-7	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999997979690438	WITHOUT_CLASSIFICATION	2.020309561295077E-7	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999992668103662	WITHOUT_CLASSIFICATION	7.331896337656912E-7	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999995149326096	WITHOUT_CLASSIFICATION	4.850673904096454E-7	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999995963817306	WITHOUT_CLASSIFICATION	4.036182693667242E-7	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999998589526622	WITHOUT_CLASSIFICATION	1.4104733786951925E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999995691658293	WITHOUT_CLASSIFICATION	4.30834170635975E-7	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999991892502825	WITHOUT_CLASSIFICATION	8.107497173461589E-7	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999997072876287	WITHOUT_CLASSIFICATION	2.9271237135981753E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999992965611227	WITHOUT_CLASSIFICATION	7.034388773240944E-7	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999996458014917	WITHOUT_CLASSIFICATION	3.541985083051774E-7	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.999999718762368	WITHOUT_CLASSIFICATION	2.812376319699764E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.999999888670664	WITHOUT_CLASSIFICATION	1.1132933592750827E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999996721631118	WITHOUT_CLASSIFICATION	3.278368881869113E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999998258084819	WITHOUT_CLASSIFICATION	1.741915180051906E-7	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999998397809271	WITHOUT_CLASSIFICATION	1.6021907285611286E-7	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999992160769181	WITHOUT_CLASSIFICATION	7.839230817663192E-7	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999994453621891	WITHOUT_CLASSIFICATION	5.546378108471719E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999995684459058	WITHOUT_CLASSIFICATION	4.3155409426989175E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999998970053203	WITHOUT_CLASSIFICATION	1.0299467959533203E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999997318469485	WITHOUT_CLASSIFICATION	2.681530515565712E-7	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.999999726602256	WITHOUT_CLASSIFICATION	2.7339774398766743E-7	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999997043491327	WITHOUT_CLASSIFICATION	2.956508673941887E-7	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999996266801897	WITHOUT_CLASSIFICATION	3.7331981021371786E-7	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999998765690288	WITHOUT_CLASSIFICATION	1.234309712410334E-7	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999997520392563	WITHOUT_CLASSIFICATION	2.479607437820041E-7	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999996363138693	WITHOUT_CLASSIFICATION	3.6368613069200293E-7	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999996976180477	WITHOUT_CLASSIFICATION	3.0238195226149106E-7	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999998828751092	WITHOUT_CLASSIFICATION	1.1712489084320363E-7	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999997095626592	WITHOUT_CLASSIFICATION	2.9043734088101446E-7	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999995421226758	WITHOUT_CLASSIFICATION	4.578773242116251E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999995184506568	WITHOUT_CLASSIFICATION	4.815493431207508E-7	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.999999846128226	WITHOUT_CLASSIFICATION	1.5387177389183582E-7	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999995461646712	WITHOUT_CLASSIFICATION	4.538353288428191E-7	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999995277929434	WITHOUT_CLASSIFICATION	4.72207056607974E-7	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999998050252953	WITHOUT_CLASSIFICATION	1.9497470474566112E-7	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999998527576234	WITHOUT_CLASSIFICATION	1.4724237669893096E-7	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.999999843636586	WITHOUT_CLASSIFICATION	1.5636341387736334E-7	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999994768019432	WITHOUT_CLASSIFICATION	5.231980567915857E-7	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999997512882193	WITHOUT_CLASSIFICATION	2.4871178076174547E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999353712481157	WITHOUT_CLASSIFICATION	6.462875188419074E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999997957926028	WITHOUT_CLASSIFICATION	2.0420739723729952E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999999848538773	WITHOUT_CLASSIFICATION	1.5146122697735705E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999997448477266	WITHOUT_CLASSIFICATION	2.5515227352716884E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999996778230488	WITHOUT_CLASSIFICATION	3.2217695127093444E-7	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999996547239844	WITHOUT_CLASSIFICATION	3.45276015528471E-7	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999996588496246	WITHOUT_CLASSIFICATION	3.411503752921293E-7	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999997195281493	WITHOUT_CLASSIFICATION	2.80471850847552E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999996505088905	WITHOUT_CLASSIFICATION	3.4949110953106037E-7	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999996465502988	WITHOUT_CLASSIFICATION	3.534497011584565E-7	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999997249838237	WITHOUT_CLASSIFICATION	2.750161763163999E-7	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999996741719831	WITHOUT_CLASSIFICATION	3.258280169172267E-7	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999996456569489	WITHOUT_CLASSIFICATION	3.5434305111078083E-7	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999996552423175	WITHOUT_CLASSIFICATION	3.447576824415555E-7	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999997388837427	WITHOUT_CLASSIFICATION	2.6111625721988745E-7	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.999999790159835	WITHOUT_CLASSIFICATION	2.0984016497319736E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999997974885684	WITHOUT_CLASSIFICATION	2.0251143164719178E-7	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999994619186657	WITHOUT_CLASSIFICATION	5.380813342909767E-7	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999993377445726	WITHOUT_CLASSIFICATION	6.622554273829448E-7	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.999999704427964	WITHOUT_CLASSIFICATION	2.9557203589291425E-7	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999995723377682	WITHOUT_CLASSIFICATION	4.276622318717305E-7	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999996785886305	WITHOUT_CLASSIFICATION	3.2141136956050156E-7	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999996016123613	WITHOUT_CLASSIFICATION	3.9838763867702525E-7	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999996260245886	WITHOUT_CLASSIFICATION	3.739754115077276E-7	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999997826361824	WITHOUT_CLASSIFICATION	2.1736381758478116E-7	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999996550421166	WITHOUT_CLASSIFICATION	3.449578834540271E-7	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999998625285269	WITHOUT_CLASSIFICATION	1.3747147308303188E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999998609011194	WITHOUT_CLASSIFICATION	1.3909888062810236E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999995665754103	WITHOUT_CLASSIFICATION	4.334245895889809E-7	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999996679926666	WITHOUT_CLASSIFICATION	3.3200733334335357E-7	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999995210666685	WITHOUT_CLASSIFICATION	4.789333315158532E-7	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999999051310288	WITHOUT_CLASSIFICATION	9.486897127379864E-8	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999997528727467	WITHOUT_CLASSIFICATION	2.4712725325314417E-7	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999997581229687	WITHOUT_CLASSIFICATION	2.41877031316924E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998911876609	WITHOUT_CLASSIFICATION	1.0881233907759266E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999997731043166	WITHOUT_CLASSIFICATION	2.26895683332304E-7	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999996674411633	WITHOUT_CLASSIFICATION	3.32558836626349E-7	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.999999278792849	WITHOUT_CLASSIFICATION	7.212071510298019E-7	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999997483319127	WITHOUT_CLASSIFICATION	2.5166808718102785E-7	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999997122871825	WITHOUT_CLASSIFICATION	2.877128174519433E-7	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999998230461153	WITHOUT_CLASSIFICATION	1.7695388457608539E-7	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.999999723340279	WITHOUT_CLASSIFICATION	2.766597209958966E-7	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999996513659559	WITHOUT_CLASSIFICATION	3.4863404413500686E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999998601143492	WITHOUT_CLASSIFICATION	1.3988565082228194E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999997110550546	WITHOUT_CLASSIFICATION	2.889449454485265E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999998301718627	WITHOUT_CLASSIFICATION	1.698281374393349E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999995946366276	WITHOUT_CLASSIFICATION	4.0536337246318755E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999990718751607	WITHOUT_CLASSIFICATION	9.28124839183772E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.999999690457031	WITHOUT_CLASSIFICATION	3.095429690594868E-7	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999996488451516	WITHOUT_CLASSIFICATION	3.5115484838697005E-7	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999997195014634	WITHOUT_CLASSIFICATION	2.8049853657953183E-7	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999996232187628	WITHOUT_CLASSIFICATION	3.7678123720557416E-7	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999996410484093	WITHOUT_CLASSIFICATION	3.5895159067949207E-7	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999992596540728	WITHOUT_CLASSIFICATION	7.40345927126978E-7	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999988790873245	WITHOUT_CLASSIFICATION	1.1209126755174207E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999989740113516	WITHOUT_CLASSIFICATION	1.0259886483490114E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999996427075918	WITHOUT_CLASSIFICATION	3.5729240829698896E-7	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999998199348458	WITHOUT_CLASSIFICATION	1.8006515427990418E-7	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999995553936598	WITHOUT_CLASSIFICATION	4.4460634016876906E-7	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.999999551671414	WITHOUT_CLASSIFICATION	4.483285859714803E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999995548815417	WITHOUT_CLASSIFICATION	4.4511845828775437E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999997899366814	WITHOUT_CLASSIFICATION	2.1006331862594889E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999994978619796	WITHOUT_CLASSIFICATION	5.021380203155834E-7	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.999999815184252	WITHOUT_CLASSIFICATION	1.8481574810615845E-7	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999995436595758	WITHOUT_CLASSIFICATION	4.56340424187183E-7	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999985073265815	WITHOUT_CLASSIFICATION	1.4926734184881921E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.999999451324267	WITHOUT_CLASSIFICATION	5.486757328987716E-7	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.999998909840169	WITHOUT_CLASSIFICATION	1.0901598309805757E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.999999560121401	WITHOUT_CLASSIFICATION	4.3987859902068856E-7	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999995679022298	WITHOUT_CLASSIFICATION	4.3209777022325223E-7	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999995651577774	WITHOUT_CLASSIFICATION	4.3484222263483627E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999995693177287	WITHOUT_CLASSIFICATION	4.3068227138400956E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999994533157823	WITHOUT_CLASSIFICATION	5.466842177181463E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999994637029543	WITHOUT_CLASSIFICATION	5.362970456973139E-7	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999997736107307	WITHOUT_CLASSIFICATION	2.2638926932872708E-7	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999998015070902	WITHOUT_CLASSIFICATION	1.9849290988988486E-7	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999993856277303	WITHOUT_CLASSIFICATION	6.143722697562824E-7	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999998775707144	WITHOUT_CLASSIFICATION	1.2242928562527143E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999997631503201	WITHOUT_CLASSIFICATION	2.3684967990583922E-7	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999996812748003	WITHOUT_CLASSIFICATION	3.187251996760606E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999998549207264	WITHOUT_CLASSIFICATION	1.4507927370167848E-7	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999996364017848	WITHOUT_CLASSIFICATION	3.6359821517087575E-7	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999998004939865	WITHOUT_CLASSIFICATION	1.9950601353937404E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999995966061133	WITHOUT_CLASSIFICATION	4.033938866475833E-7	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999994761765009	WITHOUT_CLASSIFICATION	5.238234992141151E-7	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999996261857405	WITHOUT_CLASSIFICATION	3.7381425957126446E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999997704682705	WITHOUT_CLASSIFICATION	2.2953172946741913E-7	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999995900858815	WITHOUT_CLASSIFICATION	4.0991411857031973E-7	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999996357315587	WITHOUT_CLASSIFICATION	3.642684412560697E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999999855673468	WITHOUT_CLASSIFICATION	1.4432653198541294E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999995746926512	WITHOUT_CLASSIFICATION	4.2530734878601884E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999997376999177	WITHOUT_CLASSIFICATION	2.62300082255292E-7	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999994998215737	WITHOUT_CLASSIFICATION	5.001784262951738E-7	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999994374498853	WITHOUT_CLASSIFICATION	5.625501147400893E-7	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.999999548046814	WITHOUT_CLASSIFICATION	4.519531859987797E-7	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999994251017889	WITHOUT_CLASSIFICATION	5.748982111635572E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999996319844723	WITHOUT_CLASSIFICATION	3.6801552778664274E-7	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999994918825612	WITHOUT_CLASSIFICATION	5.081174387841499E-7	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.999999648739276	WITHOUT_CLASSIFICATION	3.512607239519234E-7	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999996553306941	WITHOUT_CLASSIFICATION	3.4466930582427386E-7	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999998438048784	WITHOUT_CLASSIFICATION	1.5619512156035488E-7	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999996700619759	WITHOUT_CLASSIFICATION	3.299380241932753E-7	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999996188734405	WITHOUT_CLASSIFICATION	3.811265594596037E-7	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999994471325411	WITHOUT_CLASSIFICATION	5.528674590233235E-7	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999993816018992	WITHOUT_CLASSIFICATION	6.183981008763284E-7	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999995322995733	WITHOUT_CLASSIFICATION	4.6770042667800413E-7	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999998319174527	WITHOUT_CLASSIFICATION	1.680825473166904E-7	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999997590674854	WITHOUT_CLASSIFICATION	2.4093251465071987E-7	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999996892788706	WITHOUT_CLASSIFICATION	3.107211293881354E-7	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999996945231625	WITHOUT_CLASSIFICATION	3.0547683747713066E-7	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999997565418376	WITHOUT_CLASSIFICATION	2.4345816246306247E-7	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.999999411020479	WITHOUT_CLASSIFICATION	5.889795209876299E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999996042335076	WITHOUT_CLASSIFICATION	3.9576649240854414E-7	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999997798769706	WITHOUT_CLASSIFICATION	2.2012302928199248E-7	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999997253899151	WITHOUT_CLASSIFICATION	2.746100848335455E-7	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999997684758989	WITHOUT_CLASSIFICATION	2.3152410114593057E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999985680292465	WITHOUT_CLASSIFICATION	1.4319707534090302E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.999999324028746	WITHOUT_CLASSIFICATION	6.759712539991789E-7	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999992735741992	WITHOUT_CLASSIFICATION	7.264258008762146E-7	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999991486921764	WITHOUT_CLASSIFICATION	8.51307823517801E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999997182424953	WITHOUT_CLASSIFICATION	2.817575046193882E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999993130865619	WITHOUT_CLASSIFICATION	6.869134380711423E-7	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999994235877879	WITHOUT_CLASSIFICATION	5.764122121059716E-7	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999994520295631	WITHOUT_CLASSIFICATION	5.479704369479646E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999996275130083	WITHOUT_CLASSIFICATION	3.724869917614058E-7	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999988236870092	WITHOUT_CLASSIFICATION	1.176312990735744E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999993641657104	WITHOUT_CLASSIFICATION	6.358342895641088E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999991105389865	WITHOUT_CLASSIFICATION	8.894610134601416E-7	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999992289094404	WITHOUT_CLASSIFICATION	7.710905596828991E-7	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999994742081486	WITHOUT_CLASSIFICATION	5.257918513024828E-7	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999992509895641	WITHOUT_CLASSIFICATION	7.490104358685022E-7	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999988376652011	WITHOUT_CLASSIFICATION	1.1623347988930136E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999985897197237	WITHOUT_CLASSIFICATION	1.4102802762483377E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999993137786707	WITHOUT_CLASSIFICATION	6.86221329252164E-7	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999997471200894	WITHOUT_CLASSIFICATION	2.528799105902382E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999998089179856	WITHOUT_CLASSIFICATION	1.910820143751213E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999998110700165	WITHOUT_CLASSIFICATION	1.8892998361683494E-7	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999994402032346	WITHOUT_CLASSIFICATION	5.597967654581731E-7	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.999999656069938	WITHOUT_CLASSIFICATION	3.4393006198965397E-7	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.999999553368706	WITHOUT_CLASSIFICATION	4.4663129406815614E-7	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999995237810182	WITHOUT_CLASSIFICATION	4.762189817755189E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999995238802242	WITHOUT_CLASSIFICATION	4.7611977592307034E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999991280504544	WITHOUT_CLASSIFICATION	8.719495456809189E-7	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999994935271106	WITHOUT_CLASSIFICATION	5.064728894826464E-7	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999993617658527	WITHOUT_CLASSIFICATION	6.382341473946873E-7	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999996261571287	WITHOUT_CLASSIFICATION	3.738428713329459E-7	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999993697533778	WITHOUT_CLASSIFICATION	6.302466221389748E-7	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999997072675069	WITHOUT_CLASSIFICATION	2.927324930766239E-7	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999993704221651	WITHOUT_CLASSIFICATION	6.295778348131168E-7	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999993823843409	WITHOUT_CLASSIFICATION	6.176156589774626E-7	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999997858692917	WITHOUT_CLASSIFICATION	2.1413070837196684E-7	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999994726315511	WITHOUT_CLASSIFICATION	5.273684489086187E-7	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999991359593045	WITHOUT_CLASSIFICATION	8.640406954125291E-7	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999992445191197	WITHOUT_CLASSIFICATION	7.554808801954365E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999997632255301	WITHOUT_CLASSIFICATION	2.3677446985990764E-7	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999992466939438	WITHOUT_CLASSIFICATION	7.533060561912273E-7	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999992642322864	WITHOUT_CLASSIFICATION	7.357677136683557E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.999999048603687	WITHOUT_CLASSIFICATION	9.513963129464768E-7	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999997189680843	WITHOUT_CLASSIFICATION	2.810319157521135E-7	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999991134447815	WITHOUT_CLASSIFICATION	8.865552185329596E-7	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999993979818479	WITHOUT_CLASSIFICATION	6.020181520895975E-7	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999981243046691	WITHOUT_CLASSIFICATION	1.875695330938022E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999991230534	WITHOUT_CLASSIFICATION	8.769466000337211E-7	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999996475182766	WITHOUT_CLASSIFICATION	3.524817233456306E-7	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999991398803982	WITHOUT_CLASSIFICATION	8.601196017165047E-7	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999986177787592	WITHOUT_CLASSIFICATION	1.3822212408383382E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999992712681968	WITHOUT_CLASSIFICATION	7.287318032521544E-7	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999995322193815	WITHOUT_CLASSIFICATION	4.6778061842134795E-7	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999992119429731	WITHOUT_CLASSIFICATION	7.88057026807994E-7	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999993897872472	WITHOUT_CLASSIFICATION	6.102127526805385E-7	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999991688551089	WITHOUT_CLASSIFICATION	8.311448911594231E-7	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999995942015493	WITHOUT_CLASSIFICATION	4.057984507836107E-7	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999991258484384	WITHOUT_CLASSIFICATION	8.741515614943445E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999996879028561	WITHOUT_CLASSIFICATION	3.120971438674294E-7	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999992075854269	WITHOUT_CLASSIFICATION	7.924145730656162E-7	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999994014821454	WITHOUT_CLASSIFICATION	5.985178545551134E-7	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.99999890134635	WITHOUT_CLASSIFICATION	1.0986536499185878E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.999998778025455	WITHOUT_CLASSIFICATION	1.221974544968873E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.999998970943438	WITHOUT_CLASSIFICATION	1.0290565619869485E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997637307522	WITHOUT_CLASSIFICATION	2.3626924784971656E-7	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999997372694079	WITHOUT_CLASSIFICATION	2.6273059204476643E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999993019554828	WITHOUT_CLASSIFICATION	6.98044517200334E-7	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999991247973511	WITHOUT_CLASSIFICATION	8.752026488107506E-7	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.999999332713933	WITHOUT_CLASSIFICATION	6.672860669617613E-7	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999995774783621	WITHOUT_CLASSIFICATION	4.2252163786737647E-7	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999993407289339	WITHOUT_CLASSIFICATION	6.59271065976715E-7	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.999999100424074	WITHOUT_CLASSIFICATION	8.995759258768585E-7	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999990212395268	WITHOUT_CLASSIFICATION	9.78760473187986E-7	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999988583703674	WITHOUT_CLASSIFICATION	1.1416296326188657E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999988624250424	WITHOUT_CLASSIFICATION	1.1375749575967997E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999993779140104	WITHOUT_CLASSIFICATION	6.220859896657209E-7	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999992852406717	WITHOUT_CLASSIFICATION	7.147593282230759E-7	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999990769762316	WITHOUT_CLASSIFICATION	9.230237684337915E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999990788449924	WITHOUT_CLASSIFICATION	9.211550077074343E-7	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.999998939733146	WITHOUT_CLASSIFICATION	1.060266853947662E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999995228790016	WITHOUT_CLASSIFICATION	4.771209983913921E-7	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999992480427036	WITHOUT_CLASSIFICATION	7.519572963538615E-7	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999994280913213	WITHOUT_CLASSIFICATION	5.719086787982631E-7	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999992444352389	WITHOUT_CLASSIFICATION	7.555647611181415E-7	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999992473734151	WITHOUT_CLASSIFICATION	7.526265849349695E-7	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999996490205377	WITHOUT_CLASSIFICATION	3.509794623092746E-7	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999989273256704	WITHOUT_CLASSIFICATION	1.0726743295462698E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999982691760994	WITHOUT_CLASSIFICATION	1.7308239005860338E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999990326106585	WITHOUT_CLASSIFICATION	9.673893415199321E-7	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999989729999215	WITHOUT_CLASSIFICATION	1.027000078503173E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999990622576564	WITHOUT_CLASSIFICATION	9.377423435899063E-7	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999988565265937	WITHOUT_CLASSIFICATION	1.1434734063626828E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999981452166498	WITHOUT_CLASSIFICATION	1.8547833503081095E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999996511468271	WITHOUT_CLASSIFICATION	3.4885317300447903E-7	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999991345841414	WITHOUT_CLASSIFICATION	8.654158585213216E-7	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999988919746713	WITHOUT_CLASSIFICATION	1.1080253286754527E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999990076170299	WITHOUT_CLASSIFICATION	9.923829701337165E-7	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996897298755	WITHOUT_CLASSIFICATION	3.1027012447704987E-7	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999994799219016	WITHOUT_CLASSIFICATION	5.200780983965888E-7	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999999514024313	WITHOUT_CLASSIFICATION	4.859756871310784E-7	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999993790948389	WITHOUT_CLASSIFICATION	6.209051610769679E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999997070344254	WITHOUT_CLASSIFICATION	2.929655745995599E-7	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999993830761471	WITHOUT_CLASSIFICATION	6.169238527755484E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999992685668125	WITHOUT_CLASSIFICATION	7.314331874439821E-7	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999993389436118	WITHOUT_CLASSIFICATION	6.610563883064486E-7	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999991994288829	WITHOUT_CLASSIFICATION	8.00571117130835E-7	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999996787956159	WITHOUT_CLASSIFICATION	3.212043841336002E-7	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999993365101449	WITHOUT_CLASSIFICATION	6.634898551131138E-7	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999991262915155	WITHOUT_CLASSIFICATION	8.73708484424489E-7	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999988260216622	WITHOUT_CLASSIFICATION	1.1739783377764327E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.999998273999533	WITHOUT_CLASSIFICATION	1.7260004670907056E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999981315624504	WITHOUT_CLASSIFICATION	1.8684375496703151E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999992278534992	WITHOUT_CLASSIFICATION	7.721465007474549E-7	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995400183954	WITHOUT_CLASSIFICATION	4.599816044992006E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9998987601230568	WITHOUT_CLASSIFICATION	1.0123987694327117E-4	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999974848689469	WITHOUT_CLASSIFICATION	2.5151310530997455E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.999998184656373	WITHOUT_CLASSIFICATION	1.8153436269891501E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999948020208549	WITHOUT_CLASSIFICATION	5.197979145056392E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999383188657256	WITHOUT_CLASSIFICATION	6.168113427438868E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9991017122841863	WITHOUT_CLASSIFICATION	8.982877158137571E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999426378062446	WITHOUT_CLASSIFICATION	5.736219375539395E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999811299730991	WITHOUT_CLASSIFICATION	1.887002690095611E-5	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999161326256122	WITHOUT_CLASSIFICATION	8.386737438783007E-5	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999298457316548	WITHOUT_CLASSIFICATION	7.015426834525501E-5	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999997665545126	WITHOUT_CLASSIFICATION	2.3344548735580784E-7	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999997685351262	WITHOUT_CLASSIFICATION	2.314648736876197E-7	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999410630996708	WITHOUT_CLASSIFICATION	5.893690032918993E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999981151100092	WITHOUT_CLASSIFICATION	1.884889990702586E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9981299990906086	WITHOUT_CLASSIFICATION	0.0018700009093913156	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.99994295070369	WITHOUT_CLASSIFICATION	5.704929630987376E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999682099082608	WITHOUT_CLASSIFICATION	3.179009173921488E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999984049976	WITHOUT_CLASSIFICATION	1.5950023266575524E-9	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998274082548	WITHOUT_CLASSIFICATION	1.7259174510468574E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999983469499478	WITHOUT_CLASSIFICATION	1.653050052080156E-6	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999998245444136	WITHOUT_CLASSIFICATION	1.7545558638047326E-7	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999997806887	WITHOUT_CLASSIFICATION	2.19311265460061E-10	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999908958139	WITHOUT_CLASSIFICATION	9.104186084029208E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999908958139	WITHOUT_CLASSIFICATION	9.104186084029208E-9	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999999303020898	WITHOUT_CLASSIFICATION	6.969791026264733E-8	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.999980943377103	WITHOUT_CLASSIFICATION	1.9056622897107428E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999999893831685	WITHOUT_CLASSIFICATION	1.06168315346947E-8	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999997632563615	WITHOUT_CLASSIFICATION	2.3674363844764717E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999997731223353	WITHOUT_CLASSIFICATION	2.2687766457959082E-7	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999996958185	WITHOUT_CLASSIFICATION	3.0418138537879195E-10	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999957501088076	WITHOUT_CLASSIFICATION	4.249891192388875E-6	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999999843200303	WITHOUT_CLASSIFICATION	1.567996967443711E-8	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.999871264608869	WITHOUT_CLASSIFICATION	1.2873539113105074E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.999985830027025	WITHOUT_CLASSIFICATION	1.416997297496899E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999999224122639	WITHOUT_CLASSIFICATION	7.758773612890398E-8	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999994937318186	WITHOUT_CLASSIFICATION	5.062681813696637E-7	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999981511250935	WITHOUT_CLASSIFICATION	1.8488749064305359E-6	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.999999276578596	WITHOUT_CLASSIFICATION	7.234214038872779E-7	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999996283860738	WITHOUT_CLASSIFICATION	3.7161392625285546E-7	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999985646638786	WITHOUT_CLASSIFICATION	1.4353361213806872E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999282740084	WITHOUT_CLASSIFICATION	7.172599167032203E-8	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.999998680721134	WITHOUT_CLASSIFICATION	1.319278866102629E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999995823879598	WITHOUT_CLASSIFICATION	4.1761204025921837E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9989429076239527	WITHOUT_CLASSIFICATION	0.0010570923760473124	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999874256382	WITHOUT_CLASSIFICATION	1.2574361799843936E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999972187712718	WITHOUT_CLASSIFICATION	2.7812287282196646E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9964159975072385	WITHOUT_CLASSIFICATION	0.0035840024927615375	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999974915683477	WITHOUT_CLASSIFICATION	2.508431652256202E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9964159975072385	WITHOUT_CLASSIFICATION	0.0035840024927615375	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999952746997415	WITHOUT_CLASSIFICATION	4.725300258471484E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999984411304451	WITHOUT_CLASSIFICATION	1.5588695549068382E-6	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.8733421207141966	WITHOUT_CLASSIFICATION	0.12665787928580344	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999936727255992	WITHOUT_CLASSIFICATION	6.327274400700325E-6	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999929637796	WITHOUT_CLASSIFICATION	7.036220471407154E-9	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999999327032844	WITHOUT_CLASSIFICATION	6.729671559106777E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999999327032844	WITHOUT_CLASSIFICATION	6.729671559106777E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.999999327032844	WITHOUT_CLASSIFICATION	6.729671559106777E-7	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999995576432025	WITHOUT_CLASSIFICATION	4.423567975159401E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999693250958074	WITHOUT_CLASSIFICATION	3.067490419261857E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999999169269828	WITHOUT_CLASSIFICATION	8.307301727535937E-8	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999992639086718	WITHOUT_CLASSIFICATION	7.360913281676347E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999992639086718	WITHOUT_CLASSIFICATION	7.360913281676347E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999992639086718	WITHOUT_CLASSIFICATION	7.360913281676347E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999992639086718	WITHOUT_CLASSIFICATION	7.360913281676347E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999992639086718	WITHOUT_CLASSIFICATION	7.360913281676347E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999992639086718	WITHOUT_CLASSIFICATION	7.360913281676347E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999989240977171	WITHOUT_CLASSIFICATION	1.0759022828847028E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999989240977171	WITHOUT_CLASSIFICATION	1.0759022828847028E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999989240977171	WITHOUT_CLASSIFICATION	1.0759022828847028E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999989240977171	WITHOUT_CLASSIFICATION	1.0759022828847028E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999989240977171	WITHOUT_CLASSIFICATION	1.0759022828847028E-6	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999807565955438	WITHOUT_CLASSIFICATION	1.9243404456212942E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999807565955438	WITHOUT_CLASSIFICATION	1.9243404456212942E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999807565955438	WITHOUT_CLASSIFICATION	1.9243404456212942E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999807565955438	WITHOUT_CLASSIFICATION	1.9243404456212942E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999807565955438	WITHOUT_CLASSIFICATION	1.9243404456212942E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999532831827208	WITHOUT_CLASSIFICATION	4.671681727920628E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999532831827208	WITHOUT_CLASSIFICATION	4.671681727920628E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999532831827208	WITHOUT_CLASSIFICATION	4.671681727920628E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999532831827208	WITHOUT_CLASSIFICATION	4.671681727920628E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999532831827208	WITHOUT_CLASSIFICATION	4.671681727920628E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999532831827208	WITHOUT_CLASSIFICATION	4.671681727920628E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999554364578197	WITHOUT_CLASSIFICATION	4.456354218038978E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999554364578197	WITHOUT_CLASSIFICATION	4.456354218038978E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999554364578197	WITHOUT_CLASSIFICATION	4.456354218038978E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999554364578197	WITHOUT_CLASSIFICATION	4.456354218038978E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999554364578197	WITHOUT_CLASSIFICATION	4.456354218038978E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998960483129411	WITHOUT_CLASSIFICATION	1.0395168705881896E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998960483129411	WITHOUT_CLASSIFICATION	1.0395168705881896E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998960483129411	WITHOUT_CLASSIFICATION	1.0395168705881896E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998960483129411	WITHOUT_CLASSIFICATION	1.0395168705881896E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9998960483129411	WITHOUT_CLASSIFICATION	1.0395168705881896E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999353712481157	WITHOUT_CLASSIFICATION	6.462875188419074E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999353712481157	WITHOUT_CLASSIFICATION	6.462875188419074E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999353712481157	WITHOUT_CLASSIFICATION	6.462875188419074E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999353712481157	WITHOUT_CLASSIFICATION	6.462875188419074E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999353712481157	WITHOUT_CLASSIFICATION	6.462875188419074E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999874053626	WITHOUT_CLASSIFICATION	1.259463739948148E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999975932284	WITHOUT_CLASSIFICATION	2.4067716554237733E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999810743278174	WITHOUT_CLASSIFICATION	1.8925672182671977E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999998046197334	WITHOUT_CLASSIFICATION	1.953802665418537E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989369244117	WITHOUT_CLASSIFICATION	1.063075588274979E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999993550811184	WITHOUT_CLASSIFICATION	6.449188816483504E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999992965611227	WITHOUT_CLASSIFICATION	7.034388773240944E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999998258084819	WITHOUT_CLASSIFICATION	1.741915180051906E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999995684459058	WITHOUT_CLASSIFICATION	4.3155409426989175E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999998970053203	WITHOUT_CLASSIFICATION	1.0299467959533203E-7	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999998007410499	WITHOUT_CLASSIFICATION	1.9925895020793595E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999997318469485	WITHOUT_CLASSIFICATION	2.681530515565712E-7	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999997497658206	WITHOUT_CLASSIFICATION	2.5023417937278206E-7	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999995783687661	WITHOUT_CLASSIFICATION	4.2163123384899004E-7	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999995787507577	WITHOUT_CLASSIFICATION	4.2124924230819447E-7	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999997755388689	WITHOUT_CLASSIFICATION	2.244611311471046E-7	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999998060833666	WITHOUT_CLASSIFICATION	1.9391663335873046E-7	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999990649019451	WITHOUT_CLASSIFICATION	9.350980548203825E-7	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999996538198211	WITHOUT_CLASSIFICATION	3.461801788969139E-7	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999996467028428	WITHOUT_CLASSIFICATION	3.532971572385254E-7	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.999999875544895	WITHOUT_CLASSIFICATION	1.2445510490109881E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999997413423756	WITHOUT_CLASSIFICATION	2.586576244673681E-7	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999996198960189	WITHOUT_CLASSIFICATION	3.801039810368283E-7	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999997468153877	WITHOUT_CLASSIFICATION	2.5318461235649864E-7	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999995621126087	WITHOUT_CLASSIFICATION	4.3788739135594084E-7	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999997238201795	WITHOUT_CLASSIFICATION	2.761798205436822E-7	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999995820743033	WITHOUT_CLASSIFICATION	4.17925696706219E-7	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999998592180595	WITHOUT_CLASSIFICATION	1.4078194054316355E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999997204629301	WITHOUT_CLASSIFICATION	2.7953706992621553E-7	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999997373957193	WITHOUT_CLASSIFICATION	2.626042806627327E-7	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999998789676435	WITHOUT_CLASSIFICATION	1.2103235634446314E-7	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.999999696665491	WITHOUT_CLASSIFICATION	3.0333450894966205E-7	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999996822778864	WITHOUT_CLASSIFICATION	3.1772211364192985E-7	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999995391891295	WITHOUT_CLASSIFICATION	4.6081087054176777E-7	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999997022937573	WITHOUT_CLASSIFICATION	2.9770624270891635E-7	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999996914168351	WITHOUT_CLASSIFICATION	3.0858316498348944E-7	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999996243565646	WITHOUT_CLASSIFICATION	3.756434352386521E-7	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999996202960686	WITHOUT_CLASSIFICATION	3.7970393137012016E-7	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999996486361116	WITHOUT_CLASSIFICATION	3.513638884292986E-7	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999987384823782	WITHOUT_CLASSIFICATION	1.261517621848888E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999995416045174	WITHOUT_CLASSIFICATION	4.5839548256402664E-7	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999996299894489	WITHOUT_CLASSIFICATION	3.7001055113925264E-7	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999996945695954	WITHOUT_CLASSIFICATION	3.054304046666318E-7	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999998253508695	WITHOUT_CLASSIFICATION	1.7464913052705472E-7	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.999999765421549	WITHOUT_CLASSIFICATION	2.3457845109149633E-7	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.999999776662872	WITHOUT_CLASSIFICATION	2.2333712799610441E-7	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999998113555117	WITHOUT_CLASSIFICATION	1.8864448824307358E-7	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.999999368674127	WITHOUT_CLASSIFICATION	6.313258731229054E-7	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999997587533364	WITHOUT_CLASSIFICATION	2.412466637394247E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.999999848538773	WITHOUT_CLASSIFICATION	1.5146122697735705E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999997448477266	WITHOUT_CLASSIFICATION	2.5515227352716884E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999996778230488	WITHOUT_CLASSIFICATION	3.2217695127093444E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999996505088905	WITHOUT_CLASSIFICATION	3.4949110953106037E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999997974885684	WITHOUT_CLASSIFICATION	2.0251143164719178E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999998609011194	WITHOUT_CLASSIFICATION	1.3909888062810236E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999988135599305	WITHOUT_CLASSIFICATION	1.1864400695162015E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999995665754103	WITHOUT_CLASSIFICATION	4.334245895889809E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999998601143492	WITHOUT_CLASSIFICATION	1.3988565082228194E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999998301718627	WITHOUT_CLASSIFICATION	1.698281374393349E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999996337608839	WITHOUT_CLASSIFICATION	3.662391161226613E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999995946366276	WITHOUT_CLASSIFICATION	4.0536337246318755E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999990718751607	WITHOUT_CLASSIFICATION	9.28124839183772E-7	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999997822825012	WITHOUT_CLASSIFICATION	2.177174988431081E-7	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.999999674912224	WITHOUT_CLASSIFICATION	3.25087776121291E-7	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999998635277484	WITHOUT_CLASSIFICATION	1.3647225160023864E-7	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999995695278608	WITHOUT_CLASSIFICATION	4.3047213917219486E-7	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999990665699434	WITHOUT_CLASSIFICATION	9.334300565977765E-7	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999993238169734	WITHOUT_CLASSIFICATION	6.761830266282507E-7	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999997611635645	WITHOUT_CLASSIFICATION	2.3883643553443155E-7	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999997319869098	WITHOUT_CLASSIFICATION	2.680130901477205E-7	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999995522818618	WITHOUT_CLASSIFICATION	4.4771813830799596E-7	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999995700307551	WITHOUT_CLASSIFICATION	4.2996924491665354E-7	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999998625217332	WITHOUT_CLASSIFICATION	1.3747826678509959E-7	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999996490812828	WITHOUT_CLASSIFICATION	3.509187171668172E-7	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999995981202113	WITHOUT_CLASSIFICATION	4.018797887149684E-7	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999997719137462	WITHOUT_CLASSIFICATION	2.2808625366146654E-7	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999997583223028	WITHOUT_CLASSIFICATION	2.41677697212548E-7	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.999999859171871	WITHOUT_CLASSIFICATION	1.4082812901312868E-7	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.999999652278566	WITHOUT_CLASSIFICATION	3.477214340067398E-7	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999996518780443	WITHOUT_CLASSIFICATION	3.48121955654541E-7	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999994990459076	WITHOUT_CLASSIFICATION	5.009540923334489E-7	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999997096188361	WITHOUT_CLASSIFICATION	2.903811639579229E-7	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.999998855939362	WITHOUT_CLASSIFICATION	1.1440606380944926E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999995717966953	WITHOUT_CLASSIFICATION	4.2820330465678263E-7	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999995955743817	WITHOUT_CLASSIFICATION	4.0442561839533274E-7	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999997782598783	WITHOUT_CLASSIFICATION	2.2174012167813883E-7	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999994680116976	WITHOUT_CLASSIFICATION	5.319883024644304E-7	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999995668625591	WITHOUT_CLASSIFICATION	4.331374408439623E-7	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999997896604571	WITHOUT_CLASSIFICATION	2.1033954297626775E-7	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999997735503108	WITHOUT_CLASSIFICATION	2.2644968926133338E-7	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999997503299473	WITHOUT_CLASSIFICATION	2.496700527704943E-7	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999997233030145	WITHOUT_CLASSIFICATION	2.76696985575488E-7	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999997930459738	WITHOUT_CLASSIFICATION	2.069540262829762E-7	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999996612593115	WITHOUT_CLASSIFICATION	3.387406885556069E-7	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999992417488451	WITHOUT_CLASSIFICATION	7.582511547946253E-7	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999996623670986	WITHOUT_CLASSIFICATION	3.3763290131891916E-7	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999988383963023	WITHOUT_CLASSIFICATION	1.1616036976312242E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999993601646676	WITHOUT_CLASSIFICATION	6.398353324322349E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999997899366814	WITHOUT_CLASSIFICATION	2.1006331862594889E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999995576662053	WITHOUT_CLASSIFICATION	4.423337946590469E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999994978619796	WITHOUT_CLASSIFICATION	5.021380203155834E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999995693177287	WITHOUT_CLASSIFICATION	4.3068227138400956E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999994637029543	WITHOUT_CLASSIFICATION	5.362970456973139E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999998549207264	WITHOUT_CLASSIFICATION	1.4507927370167848E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999995966061133	WITHOUT_CLASSIFICATION	4.033938866475833E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999997704682705	WITHOUT_CLASSIFICATION	2.2953172946741913E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999997376999177	WITHOUT_CLASSIFICATION	2.62300082255292E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999996319844723	WITHOUT_CLASSIFICATION	3.6801552778664274E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999995225989999	WITHOUT_CLASSIFICATION	4.774010000555779E-7	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999998494576329	WITHOUT_CLASSIFICATION	1.505423671752878E-7	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999996080685782	WITHOUT_CLASSIFICATION	3.9193142174025127E-7	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.999999616228424	WITHOUT_CLASSIFICATION	3.83771575853007E-7	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999999821081687	WITHOUT_CLASSIFICATION	1.7891831296805144E-7	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999988062916834	WITHOUT_CLASSIFICATION	1.1937083165749376E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999996287630858	WITHOUT_CLASSIFICATION	3.7123691416755657E-7	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999997162437304	WITHOUT_CLASSIFICATION	2.8375626961813464E-7	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999995515184599	WITHOUT_CLASSIFICATION	4.4848154007416835E-7	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999994411735854	WITHOUT_CLASSIFICATION	5.588264146408436E-7	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.999999434920907	WITHOUT_CLASSIFICATION	5.650790929929397E-7	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999996314216963	WITHOUT_CLASSIFICATION	3.6857830363220154E-7	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999995084171355	WITHOUT_CLASSIFICATION	4.915828645842188E-7	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999995624252644	WITHOUT_CLASSIFICATION	4.375747355250922E-7	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999997490245129	WITHOUT_CLASSIFICATION	2.509754870563443E-7	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999998823885944	WITHOUT_CLASSIFICATION	1.1761140563166727E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999997136709426	WITHOUT_CLASSIFICATION	2.863290573499551E-7	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999997275141522	WITHOUT_CLASSIFICATION	2.7248584781974673E-7	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999992832064548	WITHOUT_CLASSIFICATION	7.167935450964075E-7	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999998195608697	WITHOUT_CLASSIFICATION	1.8043913033891648E-7	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999996107649239	WITHOUT_CLASSIFICATION	3.8923507614985076E-7	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999988826867344	WITHOUT_CLASSIFICATION	1.1173132655643078E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999996637946733	WITHOUT_CLASSIFICATION	3.3620532675316296E-7	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999990456905962	WITHOUT_CLASSIFICATION	9.54309403798694E-7	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999996177736538	WITHOUT_CLASSIFICATION	3.8222634623145915E-7	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.99999960494151	WITHOUT_CLASSIFICATION	3.9505849003522023E-7	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999995476822113	WITHOUT_CLASSIFICATION	4.523177885950292E-7	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999996418009037	WITHOUT_CLASSIFICATION	3.5819909628126504E-7	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999995575543525	WITHOUT_CLASSIFICATION	4.4244564749818384E-7	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999996849696468	WITHOUT_CLASSIFICATION	3.1503035328968854E-7	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.999999738324101	WITHOUT_CLASSIFICATION	2.616758989122848E-7	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999996742825052	WITHOUT_CLASSIFICATION	3.257174947294474E-7	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999992383561846	WITHOUT_CLASSIFICATION	7.616438154108824E-7	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999996452810882	WITHOUT_CLASSIFICATION	3.5471891180411496E-7	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999996656425822	WITHOUT_CLASSIFICATION	3.343574176761176E-7	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999997021822588	WITHOUT_CLASSIFICATION	2.978177412419611E-7	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999995516317155	WITHOUT_CLASSIFICATION	4.4836828446423907E-7	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999994727282389	WITHOUT_CLASSIFICATION	5.27271761125158E-7	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999997396392201	WITHOUT_CLASSIFICATION	2.603607800026207E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999997253510611	WITHOUT_CLASSIFICATION	2.746489389278232E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999985680292465	WITHOUT_CLASSIFICATION	1.4319707534090302E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999997120053336	WITHOUT_CLASSIFICATION	2.87994666541716E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999997182424953	WITHOUT_CLASSIFICATION	2.817575046193882E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999996275130083	WITHOUT_CLASSIFICATION	3.724869917614058E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999991105389865	WITHOUT_CLASSIFICATION	8.894610134601416E-7	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999997471200894	WITHOUT_CLASSIFICATION	2.528799105902382E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999998089179856	WITHOUT_CLASSIFICATION	1.910820143751213E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999995238802242	WITHOUT_CLASSIFICATION	4.7611977592307034E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999991280504544	WITHOUT_CLASSIFICATION	8.719495456809189E-7	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999989112254203	WITHOUT_CLASSIFICATION	1.0887745796470991E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999996307607584	WITHOUT_CLASSIFICATION	3.6923924169359207E-7	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.999999454578092	WITHOUT_CLASSIFICATION	5.454219080361074E-7	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.999999514501286	WITHOUT_CLASSIFICATION	4.854987139799097E-7	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999996296344017	WITHOUT_CLASSIFICATION	3.7036559825383907E-7	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999996061575264	WITHOUT_CLASSIFICATION	3.938424735769712E-7	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999992459340552	WITHOUT_CLASSIFICATION	7.540659448091665E-7	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999991524726279	WITHOUT_CLASSIFICATION	8.475273721897023E-7	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999985941054754	WITHOUT_CLASSIFICATION	1.4058945245761264E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999995364304933	WITHOUT_CLASSIFICATION	4.635695066128507E-7	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999994909784565	WITHOUT_CLASSIFICATION	5.090215433782054E-7	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999991551582619	WITHOUT_CLASSIFICATION	8.448417381020215E-7	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999992468381701	WITHOUT_CLASSIFICATION	7.531618298557081E-7	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999992005541376	WITHOUT_CLASSIFICATION	7.994458623922737E-7	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999992705687665	WITHOUT_CLASSIFICATION	7.29431233410406E-7	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999996548173409	WITHOUT_CLASSIFICATION	3.451826592347175E-7	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999995136789211	WITHOUT_CLASSIFICATION	4.863210788091408E-7	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999993839495529	WITHOUT_CLASSIFICATION	6.16050447068712E-7	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999994167982186	WITHOUT_CLASSIFICATION	5.832017813716502E-7	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999995932590852	WITHOUT_CLASSIFICATION	4.067409148494389E-7	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999991290070124	WITHOUT_CLASSIFICATION	8.709929875806053E-7	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999994980680631	WITHOUT_CLASSIFICATION	5.019319369028337E-7	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999995340471007	WITHOUT_CLASSIFICATION	4.6595289937761893E-7	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.999999230763089	WITHOUT_CLASSIFICATION	7.692369109127698E-7	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999995498154476	WITHOUT_CLASSIFICATION	4.5018455231545256E-7	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999994284133802	WITHOUT_CLASSIFICATION	5.715866198589668E-7	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999995287446285	WITHOUT_CLASSIFICATION	4.7125537145714717E-7	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999993408011334	WITHOUT_CLASSIFICATION	6.591988665402464E-7	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999994283672742	WITHOUT_CLASSIFICATION	5.716327258489859E-7	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999998040829733	WITHOUT_CLASSIFICATION	1.9591702666846684E-7	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999996183848691	WITHOUT_CLASSIFICATION	3.8161513089276983E-7	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999995055018354	WITHOUT_CLASSIFICATION	4.944981647049786E-7	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.999999514168432	WITHOUT_CLASSIFICATION	4.858315678541819E-7	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999995488119127	WITHOUT_CLASSIFICATION	4.511880873681799E-7	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999992302204683	WITHOUT_CLASSIFICATION	7.697795315680802E-7	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999996438313407	WITHOUT_CLASSIFICATION	3.56168659392509E-7	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999994669862028	WITHOUT_CLASSIFICATION	5.330137972338993E-7	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999992595162568	WITHOUT_CLASSIFICATION	7.404837432530241E-7	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999995876248492	WITHOUT_CLASSIFICATION	4.123751507136905E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.999999048603687	WITHOUT_CLASSIFICATION	9.513963129464768E-7	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999991230534	WITHOUT_CLASSIFICATION	8.769466000337211E-7	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999996475182766	WITHOUT_CLASSIFICATION	3.524817233456306E-7	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999987717095239	WITHOUT_CLASSIFICATION	1.228290476090612E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999995942015493	WITHOUT_CLASSIFICATION	4.057984507836107E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999996879028561	WITHOUT_CLASSIFICATION	3.120971438674294E-7	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.999998970943438	WITHOUT_CLASSIFICATION	1.0290565619869485E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997637307522	WITHOUT_CLASSIFICATION	2.3626924784971656E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999990788449924	WITHOUT_CLASSIFICATION	9.211550077074343E-7	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.999998939733146	WITHOUT_CLASSIFICATION	1.060266853947662E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999993657931563	WITHOUT_CLASSIFICATION	6.342068437771573E-7	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999988146405451	WITHOUT_CLASSIFICATION	1.1853594549643883E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999993474582609	WITHOUT_CLASSIFICATION	6.525417391114187E-7	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999994305257415	WITHOUT_CLASSIFICATION	5.694742584824465E-7	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999993835183197	WITHOUT_CLASSIFICATION	6.164816802196408E-7	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999993962748945	WITHOUT_CLASSIFICATION	6.037251055058596E-7	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999993008980871	WITHOUT_CLASSIFICATION	6.991019128738322E-7	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999996884900466	WITHOUT_CLASSIFICATION	3.115099534169877E-7	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999993525825367	WITHOUT_CLASSIFICATION	6.4741746319314E-7	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999993662814265	WITHOUT_CLASSIFICATION	6.337185734898688E-7	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999992974580286	WITHOUT_CLASSIFICATION	7.025419714243466E-7	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999991257928265	WITHOUT_CLASSIFICATION	8.742071736223322E-7	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999991153918842	WITHOUT_CLASSIFICATION	8.846081156822614E-7	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999993370602817	WITHOUT_CLASSIFICATION	6.62939718356464E-7	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999993082980514	WITHOUT_CLASSIFICATION	6.917019486056527E-7	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999989180189403	WITHOUT_CLASSIFICATION	1.081981059820028E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999991327990886	WITHOUT_CLASSIFICATION	8.67200911477208E-7	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999991155759114	WITHOUT_CLASSIFICATION	8.844240885637395E-7	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999993127659913	WITHOUT_CLASSIFICATION	6.87234008694408E-7	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999992570516861	WITHOUT_CLASSIFICATION	7.429483138984147E-7	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999993031744268	WITHOUT_CLASSIFICATION	6.968255731667592E-7	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999994370661455	WITHOUT_CLASSIFICATION	5.629338544442788E-7	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999996753246794	WITHOUT_CLASSIFICATION	3.2467532063214035E-7	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999991983766878	WITHOUT_CLASSIFICATION	8.016233122929676E-7	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999991914728724	WITHOUT_CLASSIFICATION	8.085271277302274E-7	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999995978147779	WITHOUT_CLASSIFICATION	4.0218522212077335E-7	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999991531121244	WITHOUT_CLASSIFICATION	8.468878756576815E-7	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999989619859891	WITHOUT_CLASSIFICATION	1.0380140107823241E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.999999030632033	WITHOUT_CLASSIFICATION	9.69367967026721E-7	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999987671923362	WITHOUT_CLASSIFICATION	1.2328076638845402E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999991899594153	WITHOUT_CLASSIFICATION	8.100405848521639E-7	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999996163589876	WITHOUT_CLASSIFICATION	3.8364101244639455E-7	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999991208934524	WITHOUT_CLASSIFICATION	8.791065474134891E-7	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999997314685208	WITHOUT_CLASSIFICATION	2.685314792087809E-7	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999991793188937	WITHOUT_CLASSIFICATION	8.206811061952256E-7	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999996608760924	WITHOUT_CLASSIFICATION	3.391239076718446E-7	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999992857865571	WITHOUT_CLASSIFICATION	7.142134430073694E-7	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999994489722834	WITHOUT_CLASSIFICATION	5.510277164929664E-7	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999984283856225	WITHOUT_CLASSIFICATION	1.5716143775434693E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999990631937434	WITHOUT_CLASSIFICATION	9.368062566044569E-7	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999992473734151	WITHOUT_CLASSIFICATION	7.526265849349695E-7	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999996490205377	WITHOUT_CLASSIFICATION	3.509794623092746E-7	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996897298755	WITHOUT_CLASSIFICATION	3.1027012447704987E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999992523954423	WITHOUT_CLASSIFICATION	7.476045577487908E-7	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.999999514024313	WITHOUT_CLASSIFICATION	4.859756871310784E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999997070344254	WITHOUT_CLASSIFICATION	2.929655745995599E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999992685668125	WITHOUT_CLASSIFICATION	7.314331874439821E-7	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999981315624504	WITHOUT_CLASSIFICATION	1.8684375496703151E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999992278534992	WITHOUT_CLASSIFICATION	7.721465007474549E-7	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999994721154806	WITHOUT_CLASSIFICATION	5.278845194066009E-7	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999996719134224	WITHOUT_CLASSIFICATION	3.2808657753625433E-7	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999995642793805	WITHOUT_CLASSIFICATION	4.3572061943991255E-7	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999993403773288	WITHOUT_CLASSIFICATION	6.596226711105071E-7	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999991365074848	WITHOUT_CLASSIFICATION	8.634925150633335E-7	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999991268307034	WITHOUT_CLASSIFICATION	8.731692965853317E-7	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999991946069123	WITHOUT_CLASSIFICATION	8.053930877844491E-7	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999984877555149	WITHOUT_CLASSIFICATION	1.5122444850556E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999992718699168	WITHOUT_CLASSIFICATION	7.28130083316265E-7	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999994544109925	WITHOUT_CLASSIFICATION	5.455890075945062E-7	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999991372086656	WITHOUT_CLASSIFICATION	8.627913344251524E-7	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999989857207827	WITHOUT_CLASSIFICATION	1.014279217318802E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999998244528697	WITHOUT_CLASSIFICATION	1.7554713037408824E-7	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999990386109037	WITHOUT_CLASSIFICATION	9.613890963315622E-7	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999992491219949	WITHOUT_CLASSIFICATION	7.508780051301676E-7	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.99999967890795	WITHOUT_CLASSIFICATION	3.2109204985122925E-7	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999989294383648	WITHOUT_CLASSIFICATION	1.0705616351985454E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999994747943073	WITHOUT_CLASSIFICATION	5.252056927300532E-7	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999992363424933	WITHOUT_CLASSIFICATION	7.636575067079473E-7	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999992747124835	WITHOUT_CLASSIFICATION	7.252875165355264E-7	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999993512688393	WITHOUT_CLASSIFICATION	6.487311606953342E-7	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999991911423838	WITHOUT_CLASSIFICATION	8.088576162680903E-7	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999986342776552	WITHOUT_CLASSIFICATION	1.3657223447155523E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.999999181704822	WITHOUT_CLASSIFICATION	8.182951779424185E-7	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999992081601973	WITHOUT_CLASSIFICATION	7.918398028457749E-7	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999996100222123	WITHOUT_CLASSIFICATION	3.899777876286241E-7	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999991590022357	WITHOUT_CLASSIFICATION	8.409977641956383E-7	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999990691609454	WITHOUT_CLASSIFICATION	9.30839054679831E-7	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999986246723934	WITHOUT_CLASSIFICATION	1.3753276066096206E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999991948303272	WITHOUT_CLASSIFICATION	8.051696726988195E-7	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999992087119712	WITHOUT_CLASSIFICATION	7.912880287323748E-7	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999990246825737	WITHOUT_CLASSIFICATION	9.753174262361398E-7	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.999998689899693	WITHOUT_CLASSIFICATION	1.3101003069823054E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999987518948306	WITHOUT_CLASSIFICATION	1.2481051694562593E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999983372656928	WITHOUT_CLASSIFICATION	1.662734307149757E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999988301224613	WITHOUT_CLASSIFICATION	1.169877538672361E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999986943647354	WITHOUT_CLASSIFICATION	1.305635264574284E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.999997330374827	WITHOUT_CLASSIFICATION	2.6696251730370323E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999985690004035	WITHOUT_CLASSIFICATION	1.43099959642582E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9991017122841863	WITHOUT_CLASSIFICATION	8.982877158137571E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.999426378062446	WITHOUT_CLASSIFICATION	5.736219375539395E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999997685351262	WITHOUT_CLASSIFICATION	2.314648736876197E-7	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999981151100092	WITHOUT_CLASSIFICATION	1.884889990702586E-6	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9981299990906086	WITHOUT_CLASSIFICATION	0.0018700009093913156	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.99994295070369	WITHOUT_CLASSIFICATION	5.704929630987376E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.999682099082608	WITHOUT_CLASSIFICATION	3.179009173921488E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999992318698638	WITHOUT_CLASSIFICATION	7.681301362344148E-7	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999985507878655	WITHOUT_CLASSIFICATION	1.449212134444888E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999980340003726	WITHOUT_CLASSIFICATION	1.965999627324052E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.999999379881876	WITHOUT_CLASSIFICATION	6.20118123952002E-7	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999984616455158	WITHOUT_CLASSIFICATION	1.538354484323771E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999980777779228	WITHOUT_CLASSIFICATION	1.9222220771169883E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999983157866924	WITHOUT_CLASSIFICATION	1.6842133076131985E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999997081715104	WITHOUT_CLASSIFICATION	2.9182848958816455E-7	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999994381914009	WITHOUT_CLASSIFICATION	5.618085992163821E-7	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999984596508145	WITHOUT_CLASSIFICATION	1.5403491854208175E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999981015451535	WITHOUT_CLASSIFICATION	1.8984548465150064E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999992527926882	WITHOUT_CLASSIFICATION	7.472073117243684E-7	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999989048310994	WITHOUT_CLASSIFICATION	1.0951689006063324E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999995632033764	WITHOUT_CLASSIFICATION	4.367966236510734E-7	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.999998686637383	WITHOUT_CLASSIFICATION	1.3133626169251558E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999994331295058	WITHOUT_CLASSIFICATION	5.668704942336462E-7	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999991035461091	WITHOUT_CLASSIFICATION	8.964538908307557E-7	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999985992796351	WITHOUT_CLASSIFICATION	1.4007203649729007E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999996438833948	WITHOUT_CLASSIFICATION	3.561166052470735E-7	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999994476637194	WITHOUT_CLASSIFICATION	5.523362805848592E-7	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999990553602638	WITHOUT_CLASSIFICATION	9.446397361793832E-7	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999999066764763	WITHOUT_CLASSIFICATION	9.332352366540253E-8	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999998676161261	WITHOUT_CLASSIFICATION	1.3238387392863842E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999998848418299	WITHOUT_CLASSIFICATION	1.1515817022041E-7	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999931738271302	WITHOUT_CLASSIFICATION	6.82617286991465E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999869218500029	WITHOUT_CLASSIFICATION	1.3078149997012059E-5	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.999999398532494	WITHOUT_CLASSIFICATION	6.014675059840631E-7	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.999995742583418	WITHOUT_CLASSIFICATION	4.257416581956035E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998517791542	WITHOUT_CLASSIFICATION	1.482208457794384E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999932193051201	WITHOUT_CLASSIFICATION	6.7806948799465406E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998274082548	WITHOUT_CLASSIFICATION	1.7259174510468574E-7	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999983469499478	WITHOUT_CLASSIFICATION	1.653050052080156E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999908958139	WITHOUT_CLASSIFICATION	9.104186084029208E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999908958139	WITHOUT_CLASSIFICATION	9.104186084029208E-9	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9994052187731142	WITHOUT_CLASSIFICATION	5.947812268858265E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999090061742	WITHOUT_CLASSIFICATION	9.0993825819698E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999997237783	WITHOUT_CLASSIFICATION	2.762217104613683E-10	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999997224383004	WITHOUT_CLASSIFICATION	2.775616996474499E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.999999996816714	WITHOUT_CLASSIFICATION	3.1832859880493503E-9	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999819745729599	WITHOUT_CLASSIFICATION	1.802542704019505E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999957084795	WITHOUT_CLASSIFICATION	4.2915204454479314E-9	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999997547726723	WITHOUT_CLASSIFICATION	2.452273277464762E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999958275641392	WITHOUT_CLASSIFICATION	4.1724358607987895E-6	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999984505794	WITHOUT_CLASSIFICATION	1.5494206436396433E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999998142709396	WITHOUT_CLASSIFICATION	1.8572906044687692E-7	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999998745685407	WITHOUT_CLASSIFICATION	1.2543145929813345E-7	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999997038387425	WITHOUT_CLASSIFICATION	2.961612574248191E-7	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999996999706005	WITHOUT_CLASSIFICATION	3.000293995181157E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999996241096925	WITHOUT_CLASSIFICATION	3.758903075041468E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.999996241096925	WITHOUT_CLASSIFICATION	3.758903075041468E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999995793291108	WITHOUT_CLASSIFICATION	4.2067088927534523E-7	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999995895806199	WITHOUT_CLASSIFICATION	4.1041938021792296E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999984347133	WITHOUT_CLASSIFICATION	1.5652866601907124E-9	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999988914725934	WITHOUT_CLASSIFICATION	1.108527406606352E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999828874484	WITHOUT_CLASSIFICATION	1.711255156113706E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999765380749	WITHOUT_CLASSIFICATION	2.3461925160583383E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999854345178998	WITHOUT_CLASSIFICATION	1.456548210018698E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999765380749	WITHOUT_CLASSIFICATION	2.3461925160583383E-8	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999984938586034	WITHOUT_CLASSIFICATION	1.5061413965968642E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999996466901536	WITHOUT_CLASSIFICATION	3.533098464056559E-6	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9992995306668996	WITHOUT_CLASSIFICATION	7.004693331004144E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.999953919915689	WITHOUT_CLASSIFICATION	4.6080084310887E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999868222034257	WITHOUT_CLASSIFICATION	1.3177796574340773E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999985245623436	WITHOUT_CLASSIFICATION	1.4754376563728896E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9999156854492323	WITHOUT_CLASSIFICATION	8.431455076772096E-5	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999750579883195	WITHOUT_CLASSIFICATION	2.49420116805138E-5	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999996656638535	WITHOUT_CLASSIFICATION	3.343361465618169E-7	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999996893751855	WITHOUT_CLASSIFICATION	3.1062481461932244E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999988006077373	WITHOUT_CLASSIFICATION	1.1993922627970379E-6	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999999881420603	WITHOUT_CLASSIFICATION	1.1857939758642362E-8	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999997357397116	WITHOUT_CLASSIFICATION	2.642602884340442E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999874670523561	WITHOUT_CLASSIFICATION	1.253294764392133E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999932503497	WITHOUT_CLASSIFICATION	6.7496504085788674E-9	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999932503497	WITHOUT_CLASSIFICATION	6.7496504085788674E-9	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.999999281614867	WITHOUT_CLASSIFICATION	7.183851330024019E-7	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999951171093625	WITHOUT_CLASSIFICATION	4.882890637509947E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999997466894337	WITHOUT_CLASSIFICATION	2.533105663744835E-7	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999916296984857	WITHOUT_CLASSIFICATION	8.370301514412324E-6	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999990317814363	WITHOUT_CLASSIFICATION	9.682185636466197E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999765380749	WITHOUT_CLASSIFICATION	2.3461925160583383E-8	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.999999995666318	WITHOUT_CLASSIFICATION	4.33368199081181E-9	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.999999764824588	WITHOUT_CLASSIFICATION	2.3517541215025525E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999918673325	WITHOUT_CLASSIFICATION	8.132667514106696E-9	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999935505952	WITHOUT_CLASSIFICATION	6.449404770093564E-9	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.99999999999749	WITHOUT_CLASSIFICATION	2.5100798607758527E-12	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999933225540635	WITHOUT_CLASSIFICATION	6.677445936632085E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999980624108415	WITHOUT_CLASSIFICATION	1.937589158432955E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999970758423	WITHOUT_CLASSIFICATION	2.9241577371244396E-9	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999998237659924	WITHOUT_CLASSIFICATION	1.7623400768955958E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999998729783142	WITHOUT_CLASSIFICATION	1.2702168589068038E-7	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999999342049521	WITHOUT_CLASSIFICATION	6.579504794736937E-8	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999982569313	WITHOUT_CLASSIFICATION	1.7430687799246627E-9	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999998089636359	WITHOUT_CLASSIFICATION	1.9103636411430608E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998061663671	WITHOUT_CLASSIFICATION	1.9383363302813976E-7	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9996629744297756	WITHOUT_CLASSIFICATION	3.370255702244303E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999933826006652	WITHOUT_CLASSIFICATION	6.617399334853288E-6	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999992193695165	WITHOUT_CLASSIFICATION	7.806304834164899E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999993001861501	WITHOUT_CLASSIFICATION	6.998138497795035E-7	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999998080545013	WITHOUT_CLASSIFICATION	1.9194549869225834E-7	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999987958431371	WITHOUT_CLASSIFICATION	1.2041568628267891E-6	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999997258598411	WITHOUT_CLASSIFICATION	2.741401589438091E-7	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999998723062743	WITHOUT_CLASSIFICATION	1.2769372570635664E-7	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999978584717273	WITHOUT_CLASSIFICATION	2.141528272703447E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999795865228	WITHOUT_CLASSIFICATION	2.0413477305479725E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999863725985	WITHOUT_CLASSIFICATION	1.3627401580927846E-8	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999997514245689	WITHOUT_CLASSIFICATION	2.4857543111974305E-7	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999994164458291	WITHOUT_CLASSIFICATION	5.835541708641707E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999996982554541	WITHOUT_CLASSIFICATION	3.0174454586783314E-7	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999996262740222	WITHOUT_CLASSIFICATION	3.7372597779262714E-7	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999866424493	WITHOUT_CLASSIFICATION	1.3357550777827105E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999997061391167	WITHOUT_CLASSIFICATION	2.9386088336479765E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999998721500418	WITHOUT_CLASSIFICATION	1.2784995809568106E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999999606556611	WITHOUT_CLASSIFICATION	3.9344338846716475E-8	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.999995344270068	WITHOUT_CLASSIFICATION	4.655729932028944E-6	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999989625031112	WITHOUT_CLASSIFICATION	1.0374968888770198E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999630155470972	WITHOUT_CLASSIFICATION	3.69844529027554E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999999731384152	WITHOUT_CLASSIFICATION	2.686158486650465E-8	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.999997014760761	WITHOUT_CLASSIFICATION	2.985239238908271E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999996662477766	WITHOUT_CLASSIFICATION	3.337522234641921E-7	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999887431176	WITHOUT_CLASSIFICATION	1.1256882509412535E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999992318698638	WITHOUT_CLASSIFICATION	7.681301362344148E-7	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.6867905737278789	IMPLEMENTATION	0.3132094262721212	WITHOUT_CLASSIFICATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999988982590068	WITHOUT_CLASSIFICATION	1.1017409931840307E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999996222607466	WITHOUT_CLASSIFICATION	3.7773925339428736E-7	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999913860305	WITHOUT_CLASSIFICATION	8.613969644058375E-9	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999996466901536	WITHOUT_CLASSIFICATION	3.533098464056559E-6	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.999883294787	WITHOUT_CLASSIFICATION	1.1670521300005145E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999830946152	WITHOUT_CLASSIFICATION	1.69053847291607E-8	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999992784103	WITHOUT_CLASSIFICATION	7.215897132257775E-10	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999998009746	WITHOUT_CLASSIFICATION	1.990253969096391E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999998009746	WITHOUT_CLASSIFICATION	1.990253969096391E-9	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999920440303	WITHOUT_CLASSIFICATION	7.95596956307045E-9	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999920440303	WITHOUT_CLASSIFICATION	7.95596956307045E-9	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999920440303	WITHOUT_CLASSIFICATION	7.95596956307045E-9	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999973937313719	WITHOUT_CLASSIFICATION	2.606268628106718E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999973937313719	WITHOUT_CLASSIFICATION	2.606268628106718E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999998208634591	WITHOUT_CLASSIFICATION	1.7913654094535767E-7	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999998208634591	WITHOUT_CLASSIFICATION	1.7913654094535767E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999995307963	WITHOUT_CLASSIFICATION	4.692036976338884E-10	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.999999964567628	WITHOUT_CLASSIFICATION	3.543237207424421E-8	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999992782522074	WITHOUT_CLASSIFICATION	7.21747792686921E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999992782522074	WITHOUT_CLASSIFICATION	7.21747792686921E-7	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999868128756	WITHOUT_CLASSIFICATION	1.3187124305848072E-8	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999988345332435	WITHOUT_CLASSIFICATION	1.16546675655453E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999242361539	WITHOUT_CLASSIFICATION	7.576384605378305E-8	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999855435485	WITHOUT_CLASSIFICATION	1.4456451523153135E-8	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999587210567	WITHOUT_CLASSIFICATION	4.127894323667002E-8	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.999999302169356	WITHOUT_CLASSIFICATION	6.978306439731397E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999999560046514	WITHOUT_CLASSIFICATION	4.3995348706011646E-8	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999998222151589	WITHOUT_CLASSIFICATION	1.7778484111925618E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999994974395134	WITHOUT_CLASSIFICATION	5.025604864551403E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999967612606331	WITHOUT_CLASSIFICATION	3.2387393668676623E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999995603565495	WITHOUT_CLASSIFICATION	4.396434505830123E-7	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999996327656685	WITHOUT_CLASSIFICATION	3.6723433147366323E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999982520102532	WITHOUT_CLASSIFICATION	1.7479897467741582E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999903447612601	WITHOUT_CLASSIFICATION	9.655238739805753E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999998587294395	WITHOUT_CLASSIFICATION	1.4127056056166303E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999944649397378	WITHOUT_CLASSIFICATION	5.53506026228555E-6	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9999415946283455	WITHOUT_CLASSIFICATION	5.840537165451911E-5	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999975354056606	WITHOUT_CLASSIFICATION	2.4645943394720764E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999995344057674	WITHOUT_CLASSIFICATION	4.655942326708617E-7	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999899287422159	WITHOUT_CLASSIFICATION	1.007125778396665E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999780276546	WITHOUT_CLASSIFICATION	2.197234532970313E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999896408108	WITHOUT_CLASSIFICATION	1.0359189243524453E-8	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999998526045273	WITHOUT_CLASSIFICATION	1.4739547268743158E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999998627118327	WITHOUT_CLASSIFICATION	1.3728816727363937E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999107939982	WITHOUT_CLASSIFICATION	8.920600176253338E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999993902572275	WITHOUT_CLASSIFICATION	6.097427725227586E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999921057338	WITHOUT_CLASSIFICATION	7.894266132814172E-9	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999927376425	WITHOUT_CLASSIFICATION	7.262357448093306E-9	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999745351558	WITHOUT_CLASSIFICATION	2.5464844216680474E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999834536589	WITHOUT_CLASSIFICATION	1.6546341132104E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999886902047	WITHOUT_CLASSIFICATION	1.1309795299925472E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999566179647	WITHOUT_CLASSIFICATION	4.338203520000547E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999718115709	WITHOUT_CLASSIFICATION	2.818842918577112E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998440881774	WITHOUT_CLASSIFICATION	1.5591182266019674E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999718115709	WITHOUT_CLASSIFICATION	2.818842918577112E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999718115709	WITHOUT_CLASSIFICATION	2.818842918577112E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999718115709	WITHOUT_CLASSIFICATION	2.818842918577112E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999718115709	WITHOUT_CLASSIFICATION	2.818842918577112E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999718115709	WITHOUT_CLASSIFICATION	2.818842918577112E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999718115709	WITHOUT_CLASSIFICATION	2.818842918577112E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998440881774	WITHOUT_CLASSIFICATION	1.5591182266019674E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998440881774	WITHOUT_CLASSIFICATION	1.5591182266019674E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998440881774	WITHOUT_CLASSIFICATION	1.5591182266019674E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998440881774	WITHOUT_CLASSIFICATION	1.5591182266019674E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998440881774	WITHOUT_CLASSIFICATION	1.5591182266019674E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998440881774	WITHOUT_CLASSIFICATION	1.5591182266019674E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999969706658348	WITHOUT_CLASSIFICATION	3.02933416516415E-6	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999995530059751	WITHOUT_CLASSIFICATION	4.4699402498227467E-7	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999799872860562	WITHOUT_CLASSIFICATION	2.001271394377076E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999993788825703	WITHOUT_CLASSIFICATION	6.211174296584682E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.999999999870584	WITHOUT_CLASSIFICATION	1.2941604706060766E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999995133539217	WITHOUT_CLASSIFICATION	4.866460783729583E-7	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999972091235159	WITHOUT_CLASSIFICATION	2.7908764841091915E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.99999999951167	WITHOUT_CLASSIFICATION	4.883301113443146E-10	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999991475289717	WITHOUT_CLASSIFICATION	8.524710282898389E-7	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999871277818767	WITHOUT_CLASSIFICATION	1.2872218123348625E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.7930179229743635	IMPLEMENTATION	0.20698207702563648	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999996214927	WITHOUT_CLASSIFICATION	3.7850739236130945E-10	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999947332446035	WITHOUT_CLASSIFICATION	5.266755396517331E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999998530311	WITHOUT_CLASSIFICATION	1.469689896512283E-10	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999994936143	WITHOUT_CLASSIFICATION	5.06385667418665E-10	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999995100917634	WITHOUT_CLASSIFICATION	4.899082366130391E-7	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999967745553353	WITHOUT_CLASSIFICATION	3.225444664669613E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999074791615	WITHOUT_CLASSIFICATION	9.252083848946858E-8	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.999999800701033	WITHOUT_CLASSIFICATION	1.992989670805491E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999617658148	WITHOUT_CLASSIFICATION	3.8234185209332896E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999433755843	WITHOUT_CLASSIFICATION	5.66244157683972E-8	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999999811352501	WITHOUT_CLASSIFICATION	1.8864749840247674E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999854345178998	WITHOUT_CLASSIFICATION	1.456548210018698E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999805693369758	WITHOUT_CLASSIFICATION	1.943066302421855E-5	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999998891551962	WITHOUT_CLASSIFICATION	1.1084480380708842E-7	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999998209876102	WITHOUT_CLASSIFICATION	1.7901238986062962E-7	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999966615399	WITHOUT_CLASSIFICATION	3.338460068001582E-9	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998873933936616	WITHOUT_CLASSIFICATION	1.1260660633838713E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999827531502826	WITHOUT_CLASSIFICATION	1.724684971734327E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999998989567871	WITHOUT_CLASSIFICATION	1.0104321279715058E-7	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999051355107154	WITHOUT_CLASSIFICATION	9.486448928456151E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999910573049405	WITHOUT_CLASSIFICATION	8.94269505943657E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999999572742203	WITHOUT_CLASSIFICATION	4.272577962710394E-8	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999285550207	WITHOUT_CLASSIFICATION	7.144497925282163E-8	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999995174505887	WITHOUT_CLASSIFICATION	4.825494113395649E-7	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999073556423311	WITHOUT_CLASSIFICATION	9.264435766888563E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999919078369024	WITHOUT_CLASSIFICATION	8.09216309767212E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999886355091	WITHOUT_CLASSIFICATION	1.1364490967788627E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999972724675719	WITHOUT_CLASSIFICATION	2.7275324281392662E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999874767932	WITHOUT_CLASSIFICATION	1.252320681557679E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999994792961389	WITHOUT_CLASSIFICATION	5.207038611234884E-7	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999999544053623	WITHOUT_CLASSIFICATION	4.559463771040491E-8	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999989662656	WITHOUT_CLASSIFICATION	1.0337344987949956E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999930072082	WITHOUT_CLASSIFICATION	6.99279182427367E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999930072082	WITHOUT_CLASSIFICATION	6.99279182427367E-9	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999487331972	WITHOUT_CLASSIFICATION	5.126680270280677E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999999487331972	WITHOUT_CLASSIFICATION	5.126680270280677E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998777906557	WITHOUT_CLASSIFICATION	1.2220934433731593E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999998777906557	WITHOUT_CLASSIFICATION	1.2220934433731593E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999480086429684	WITHOUT_CLASSIFICATION	5.199135703149998E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999907877694587	WITHOUT_CLASSIFICATION	9.212230541248947E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999995820075	WITHOUT_CLASSIFICATION	4.1799256412971146E-10	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999999958848245	WITHOUT_CLASSIFICATION	4.1151754897709535E-9	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999983078189624	WITHOUT_CLASSIFICATION	1.6921810376082385E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999997032675737	WITHOUT_CLASSIFICATION	2.967324263744323E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999998637364699	WITHOUT_CLASSIFICATION	1.3626353015911416E-7	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999982650308	WITHOUT_CLASSIFICATION	1.7349691287013586E-9	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999955573	WITHOUT_CLASSIFICATION	4.442741763098515E-12	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999999396985	WITHOUT_CLASSIFICATION	6.030150934108926E-11	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.999999993616636	WITHOUT_CLASSIFICATION	6.383363863372118E-9	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999940822556	WITHOUT_CLASSIFICATION	5.917744353006739E-9	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999866370283	WITHOUT_CLASSIFICATION	1.3362971635624602E-8	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999870525388	WITHOUT_CLASSIFICATION	1.2947461205118618E-8	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999974529922494	WITHOUT_CLASSIFICATION	2.5470077505461595E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999999522893647	WITHOUT_CLASSIFICATION	4.771063542783909E-8	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999992875762126	WITHOUT_CLASSIFICATION	7.124237874855013E-7	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999999855905215	WITHOUT_CLASSIFICATION	1.440947855512973E-8	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999789949224539	WITHOUT_CLASSIFICATION	2.10050775461678E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999998529889844	WITHOUT_CLASSIFICATION	1.470110156315872E-7	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.999999594988871	WITHOUT_CLASSIFICATION	4.050111288904794E-7	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999978896637566	WITHOUT_CLASSIFICATION	2.1103362433933115E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999990380965181	WITHOUT_CLASSIFICATION	9.619034817716943E-7	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999717154122	WITHOUT_CLASSIFICATION	2.8284587838478936E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999962775344	WITHOUT_CLASSIFICATION	3.7224656262626136E-9	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999979541729	WITHOUT_CLASSIFICATION	2.0458270537641363E-9	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999999684056335	WITHOUT_CLASSIFICATION	3.159436655653273E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999447238224	WITHOUT_CLASSIFICATION	5.527617769199685E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999447238224	WITHOUT_CLASSIFICATION	5.527617769199685E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999447238224	WITHOUT_CLASSIFICATION	5.527617769199685E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999986995883491	WITHOUT_CLASSIFICATION	1.300411650906923E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999986995883491	WITHOUT_CLASSIFICATION	1.300411650906923E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998061663671	WITHOUT_CLASSIFICATION	1.9383363302813976E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998061663671	WITHOUT_CLASSIFICATION	1.9383363302813976E-7	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999999848904	WITHOUT_CLASSIFICATION	1.510963727894468E-11	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9959077212968602	WITHOUT_CLASSIFICATION	0.004092278703139806	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999999138170187	WITHOUT_CLASSIFICATION	8.618298141202506E-8	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999969537775	WITHOUT_CLASSIFICATION	3.0462223644844733E-9	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999447238224	WITHOUT_CLASSIFICATION	5.527617769199685E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999447238224	WITHOUT_CLASSIFICATION	5.527617769199685E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999447238224	WITHOUT_CLASSIFICATION	5.527617769199685E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999986995883491	WITHOUT_CLASSIFICATION	1.300411650906923E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999986995883491	WITHOUT_CLASSIFICATION	1.300411650906923E-6	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999986995883491	WITHOUT_CLASSIFICATION	1.300411650906923E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998061663671	WITHOUT_CLASSIFICATION	1.9383363302813976E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999998061663671	WITHOUT_CLASSIFICATION	1.9383363302813976E-7	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999997869128	WITHOUT_CLASSIFICATION	2.1308721076410767E-10	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999998771151	WITHOUT_CLASSIFICATION	1.2288498546598772E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999625551	WITHOUT_CLASSIFICATION	3.744501196507649E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999625551	WITHOUT_CLASSIFICATION	3.744501196507649E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999625551	WITHOUT_CLASSIFICATION	3.744501196507649E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999625551	WITHOUT_CLASSIFICATION	3.744501196507649E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999625551	WITHOUT_CLASSIFICATION	3.744501196507649E-11	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999995186197501	WITHOUT_CLASSIFICATION	4.813802499617766E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.999999909957831	WITHOUT_CLASSIFICATION	9.004216898280052E-8	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999785838938019	WITHOUT_CLASSIFICATION	2.1416106198086793E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.999999323248515	WITHOUT_CLASSIFICATION	6.767514850354127E-7	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999987149945787	WITHOUT_CLASSIFICATION	1.2850054212035408E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999999732911345	WITHOUT_CLASSIFICATION	2.6708865386534093E-8	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9997058840564664	WITHOUT_CLASSIFICATION	2.94115943533638E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999998331655336	WITHOUT_CLASSIFICATION	1.6683446645233946E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999997664768326	WITHOUT_CLASSIFICATION	2.3352316748648937E-7	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999999270673978	WITHOUT_CLASSIFICATION	7.293260214465039E-8	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999961417314267	WITHOUT_CLASSIFICATION	3.858268573347823E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999991204226	WITHOUT_CLASSIFICATION	8.795775144022523E-10	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999982594081601	WITHOUT_CLASSIFICATION	1.7405918398848045E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.999999206177584	WITHOUT_CLASSIFICATION	7.938224160987955E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.999999998739803	WITHOUT_CLASSIFICATION	1.2601969717487043E-9	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999998427598329	WITHOUT_CLASSIFICATION	1.572401670951176E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999998427598329	WITHOUT_CLASSIFICATION	1.572401670951176E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.999998427598329	WITHOUT_CLASSIFICATION	1.572401670951176E-6	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999984966192	WITHOUT_CLASSIFICATION	1.5033807829079933E-9	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999984967886	WITHOUT_CLASSIFICATION	1.5032114535916276E-9	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999968013704673	WITHOUT_CLASSIFICATION	3.198629532655393E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999999132	WITHOUT_CLASSIFICATION	8.685222507287106E-14	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.999999987191875	WITHOUT_CLASSIFICATION	1.2808125003593926E-8	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999992808515245	WITHOUT_CLASSIFICATION	7.191484754448377E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999342606829	WITHOUT_CLASSIFICATION	6.57393170198588E-8	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999999049472866	WITHOUT_CLASSIFICATION	9.505271341079438E-8	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.999999774117151	WITHOUT_CLASSIFICATION	2.2588284889125425E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999936922408	WITHOUT_CLASSIFICATION	6.307759161077333E-9	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999990576031	WITHOUT_CLASSIFICATION	9.423970117187222E-10	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999980637976	WITHOUT_CLASSIFICATION	1.9362024623873928E-9	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.999999826326225	WITHOUT_CLASSIFICATION	1.7367377501742572E-7	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999999724673599	WITHOUT_CLASSIFICATION	2.7532640073862104E-8	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999739085463	WITHOUT_CLASSIFICATION	2.6091453602709305E-8	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999998227365199	WITHOUT_CLASSIFICATION	1.772634800820004E-7	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999999716806279	WITHOUT_CLASSIFICATION	2.831937202920106E-8	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.999999990579129	WITHOUT_CLASSIFICATION	9.420871008604939E-9	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999998616783758	WITHOUT_CLASSIFICATION	1.3832162413110953E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999990124994981	WITHOUT_CLASSIFICATION	9.875005019148812E-7	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999995489400638	WITHOUT_CLASSIFICATION	4.510599362378041E-7	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999981727028756	WITHOUT_CLASSIFICATION	1.8272971243279646E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9999152580406604	WITHOUT_CLASSIFICATION	8.474195933967546E-5	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.999999963920924	WITHOUT_CLASSIFICATION	3.607907594063407E-8	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999997299206563	WITHOUT_CLASSIFICATION	2.7007934359871893E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.999999817197576	WITHOUT_CLASSIFICATION	1.8280242404086452E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999999282211854	WITHOUT_CLASSIFICATION	7.177881459924694E-8	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.999998782671168	WITHOUT_CLASSIFICATION	1.217328831930781E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999933608471496	WITHOUT_CLASSIFICATION	6.63915285038205E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999996702933076	WITHOUT_CLASSIFICATION	3.297066923143399E-7	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999996037547331	WITHOUT_CLASSIFICATION	3.9624526705764223E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999998037068988	WITHOUT_CLASSIFICATION	1.9629310129541647E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.999999792977089	WITHOUT_CLASSIFICATION	2.0702291102109563E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.999999806791085	WITHOUT_CLASSIFICATION	1.9320891512554937E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999997512143854	WITHOUT_CLASSIFICATION	2.487856145795969E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999997902251833	WITHOUT_CLASSIFICATION	2.097748167124097E-7	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999996578826004	WITHOUT_CLASSIFICATION	3.4211739970683405E-7	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999970735064	WITHOUT_CLASSIFICATION	2.9264935726199592E-9	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999975163738039	WITHOUT_CLASSIFICATION	2.4836261961976204E-6	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999498396644668	WITHOUT_CLASSIFICATION	5.016033553321244E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999999173032	WITHOUT_CLASSIFICATION	8.269691110722435E-11	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999996560599173	WITHOUT_CLASSIFICATION	3.439400827320604E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999620349443502	WITHOUT_CLASSIFICATION	3.796505564970865E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999873547959439	WITHOUT_CLASSIFICATION	1.264520405605686E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999999622748978	WITHOUT_CLASSIFICATION	3.7725102139473214E-8	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999916913535039	WITHOUT_CLASSIFICATION	8.308646496052251E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999843693664244	WITHOUT_CLASSIFICATION	1.5630633575488665E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999843693664244	WITHOUT_CLASSIFICATION	1.5630633575488665E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999999667755265	WITHOUT_CLASSIFICATION	3.3224473552515736E-8	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999996417371736	WITHOUT_CLASSIFICATION	3.582628263421258E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999947737385643	WITHOUT_CLASSIFICATION	5.226261435671544E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999999996787785	WITHOUT_CLASSIFICATION	3.212215070305648E-9	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999995963198889	WITHOUT_CLASSIFICATION	4.0368011112152403E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999999645230753	WITHOUT_CLASSIFICATION	3.5476924720485195E-8	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999999916238952	WITHOUT_CLASSIFICATION	8.376104773018077E-9	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999999995767	WITHOUT_CLASSIFICATION	4.233002303240273E-12	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999998762539352	WITHOUT_CLASSIFICATION	1.2374606477676846E-7	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999990883899265	WITHOUT_CLASSIFICATION	9.116100734678359E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999868191818	WITHOUT_CLASSIFICATION	1.318081825241514E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999868191818	WITHOUT_CLASSIFICATION	1.318081825241514E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999868191818	WITHOUT_CLASSIFICATION	1.318081825241514E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999868191818	WITHOUT_CLASSIFICATION	1.318081825241514E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999983743576564	WITHOUT_CLASSIFICATION	1.6256423435550892E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999999175297697	WITHOUT_CLASSIFICATION	8.247023028885675E-8	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999963048741064	WITHOUT_CLASSIFICATION	3.6951258936694023E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999935485669068	WITHOUT_CLASSIFICATION	6.45143309314209E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999876370636853	WITHOUT_CLASSIFICATION	1.2362936314660361E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997266932352	WITHOUT_CLASSIFICATION	2.733067648488305E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999997766857668	WITHOUT_CLASSIFICATION	2.2331423315101426E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999995867823527	WITHOUT_CLASSIFICATION	4.132176473685592E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999995867823527	WITHOUT_CLASSIFICATION	4.132176473685592E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999937185665	WITHOUT_CLASSIFICATION	6.281433505756578E-9	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999991913259726	WITHOUT_CLASSIFICATION	8.086740273779807E-7	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999965066496	WITHOUT_CLASSIFICATION	3.4933503023788327E-9	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999997977953	WITHOUT_CLASSIFICATION	2.0220475016438855E-10	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999997977953	WITHOUT_CLASSIFICATION	2.0220475016438855E-10	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999999610133	WITHOUT_CLASSIFICATION	3.8986571600192375E-11	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999997774913382	WITHOUT_CLASSIFICATION	2.2250866179831157E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.999997774913382	WITHOUT_CLASSIFICATION	2.2250866179831157E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999941584145	WITHOUT_CLASSIFICATION	5.8415855785867884E-9	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999998994371	WITHOUT_CLASSIFICATION	1.0056283219812464E-10	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999561673856	WITHOUT_CLASSIFICATION	4.383261438706664E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999996823879945	WITHOUT_CLASSIFICATION	3.176120054395983E-7	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9984412577937624	WITHOUT_CLASSIFICATION	0.0015587422062375879	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999959895665	WITHOUT_CLASSIFICATION	4.010433520466265E-9	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999813598125115	WITHOUT_CLASSIFICATION	1.8640187488484696E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999890760215076	WITHOUT_CLASSIFICATION	1.0923978492560002E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999992884604916	WITHOUT_CLASSIFICATION	7.11539508479893E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999976662853	WITHOUT_CLASSIFICATION	2.3337146661068584E-9	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999171139675	WITHOUT_CLASSIFICATION	8.288603250900427E-8	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999994579676205	WITHOUT_CLASSIFICATION	5.420323795419899E-7	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.9999989638001672	WITHOUT_CLASSIFICATION	1.0361998328334973E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999987843011356	WITHOUT_CLASSIFICATION	1.2156988643064817E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999996928951173	WITHOUT_CLASSIFICATION	3.0710488272862427E-7	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999989955934264	WITHOUT_CLASSIFICATION	1.00440657366586E-6	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999997323028843	WITHOUT_CLASSIFICATION	2.676971156302138E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.99999991485533	WITHOUT_CLASSIFICATION	8.514466996348817E-8	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999949899236	WITHOUT_CLASSIFICATION	5.010076407966661E-9	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999989659887488	WITHOUT_CLASSIFICATION	1.0340112511592032E-6	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999901108033147	WITHOUT_CLASSIFICATION	9.889196685421464E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.999999859178853	WITHOUT_CLASSIFICATION	1.4082114688419508E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999999582951371	WITHOUT_CLASSIFICATION	4.170486286150054E-8	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999999488009769	WITHOUT_CLASSIFICATION	5.119902301060617E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999998908342328	WITHOUT_CLASSIFICATION	1.0916576725864137E-7	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999906845302	WITHOUT_CLASSIFICATION	9.315469839722174E-9	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.9999998309960157	WITHOUT_CLASSIFICATION	1.6900398424181154E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999999885495445	WITHOUT_CLASSIFICATION	1.1450455462773234E-8	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999999375461	WITHOUT_CLASSIFICATION	6.245397935486732E-11	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999998650809002	WITHOUT_CLASSIFICATION	1.3491909974934848E-7	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999998299262187	WITHOUT_CLASSIFICATION	1.700737812548595E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999753002284	WITHOUT_CLASSIFICATION	2.4699771578041395E-8	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9351570228447335	WITHOUT_CLASSIFICATION	0.06484297715526649	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999980862702582	WITHOUT_CLASSIFICATION	1.913729741852171E-6	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999999166232759	WITHOUT_CLASSIFICATION	8.33767240145337E-8	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999990506612	WITHOUT_CLASSIFICATION	9.493388429404523E-10	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999999705284856	WITHOUT_CLASSIFICATION	2.947151438760054E-7	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999898590879	WITHOUT_CLASSIFICATION	1.0140912155317594E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999997684177396	WITHOUT_CLASSIFICATION	2.3158226034964568E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999990506612	WITHOUT_CLASSIFICATION	9.493388429404523E-10	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.999999705284856	WITHOUT_CLASSIFICATION	2.947151438760054E-7	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999996753196368	WITHOUT_CLASSIFICATION	3.246803631485589E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999993990586349	WITHOUT_CLASSIFICATION	6.009413650991849E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999993990586349	WITHOUT_CLASSIFICATION	6.009413650991849E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999376139117466	WITHOUT_CLASSIFICATION	6.238608825340516E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999992757101	WITHOUT_CLASSIFICATION	7.242898699116582E-10	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999840029868	WITHOUT_CLASSIFICATION	1.5997013126502745E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999411719412	WITHOUT_CLASSIFICATION	5.882805880795362E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998810559128045	WITHOUT_CLASSIFICATION	1.189440871955027E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999999203967175	WITHOUT_CLASSIFICATION	7.960328243481696E-8	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999663736762932	WITHOUT_CLASSIFICATION	3.362632370679223E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999780677611134	WITHOUT_CLASSIFICATION	2.193223888653823E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999948288111851	WITHOUT_CLASSIFICATION	5.171188814924318E-6	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999997867497552	WITHOUT_CLASSIFICATION	2.132502448565158E-7	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999996756141982	WITHOUT_CLASSIFICATION	3.2438580176301175E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999999728109862	WITHOUT_CLASSIFICATION	2.7189013758715386E-8	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.999999999608306	WITHOUT_CLASSIFICATION	3.9169400035716253E-10	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999981179908	WITHOUT_CLASSIFICATION	1.8820093169353435E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999981179908	WITHOUT_CLASSIFICATION	1.8820093169353435E-9	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999467739594143	WITHOUT_CLASSIFICATION	5.3226040585603605E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999467739594143	WITHOUT_CLASSIFICATION	5.3226040585603605E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999906892975	WITHOUT_CLASSIFICATION	9.310702590690535E-9	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999997691703317	WITHOUT_CLASSIFICATION	2.308296683272446E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999951301080791	WITHOUT_CLASSIFICATION	4.869891920893628E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999988209985	WITHOUT_CLASSIFICATION	1.179001496321414E-9	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999991844334118	WITHOUT_CLASSIFICATION	8.155665882364053E-7	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.999999923439908	WITHOUT_CLASSIFICATION	7.656009210807216E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999840029868	WITHOUT_CLASSIFICATION	1.5997013126502745E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999411719412	WITHOUT_CLASSIFICATION	5.882805880795362E-8	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999948288111851	WITHOUT_CLASSIFICATION	5.171188814924318E-6	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999997867497552	WITHOUT_CLASSIFICATION	2.132502448565158E-7	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999844610086093	WITHOUT_CLASSIFICATION	1.5538991390684145E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999967721096042	WITHOUT_CLASSIFICATION	3.2278903957521615E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997079721757	WITHOUT_CLASSIFICATION	2.9202782425259565E-7	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999924014759	WITHOUT_CLASSIFICATION	7.59852410633032E-9	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999999577667574	WITHOUT_CLASSIFICATION	4.2233242605851617E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999997755659	WITHOUT_CLASSIFICATION	2.2443413383529721E-10	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999998514163086	WITHOUT_CLASSIFICATION	1.4858369140463288E-6	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999998517036164	WITHOUT_CLASSIFICATION	1.4829638354049295E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.999999164714027	WITHOUT_CLASSIFICATION	8.352859730463102E-7	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999997761269984	WITHOUT_CLASSIFICATION	2.238730015216952E-7	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999999256756	WITHOUT_CLASSIFICATION	7.432440637651181E-11	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999990065652	WITHOUT_CLASSIFICATION	9.934347381592756E-10	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999994654791092	WITHOUT_CLASSIFICATION	5.345208907554014E-7	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.999999905161251	WITHOUT_CLASSIFICATION	9.483874891496653E-8	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999986899932473	WITHOUT_CLASSIFICATION	1.3100067527212705E-6	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999657641583	WITHOUT_CLASSIFICATION	3.423584181891557E-8	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.999998201279279	WITHOUT_CLASSIFICATION	1.7987207209513923E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999999844258017	WITHOUT_CLASSIFICATION	1.5574198367300294E-8	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.999999998897363	WITHOUT_CLASSIFICATION	1.1026369840670976E-9	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999943991046	WITHOUT_CLASSIFICATION	5.600895493638238E-9	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999999984229072	WITHOUT_CLASSIFICATION	1.5770928026903037E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999999984229072	WITHOUT_CLASSIFICATION	1.5770928026903037E-8	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.999999586101173	WITHOUT_CLASSIFICATION	4.138988270935456E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999998694360519	WITHOUT_CLASSIFICATION	1.3056394813350086E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999998702228	WITHOUT_CLASSIFICATION	1.2977719527711184E-10	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999861465069	WITHOUT_CLASSIFICATION	1.3853493151903216E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999861465069	WITHOUT_CLASSIFICATION	1.3853493151903216E-8	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997079721757	WITHOUT_CLASSIFICATION	2.9202782425259565E-7	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999999018380105	WITHOUT_CLASSIFICATION	9.816198952597877E-8	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999892607112	WITHOUT_CLASSIFICATION	1.0739288811308109E-8	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999740306434	WITHOUT_CLASSIFICATION	2.596935656627401E-8	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999662530975	WITHOUT_CLASSIFICATION	3.374690244491611E-8	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999972541634	WITHOUT_CLASSIFICATION	2.7458365726154664E-9	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999887545299	WITHOUT_CLASSIFICATION	1.124547018555084E-8	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999931322753777	WITHOUT_CLASSIFICATION	6.867724622393673E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999993534022045	WITHOUT_CLASSIFICATION	6.465977954971382E-7	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999999124259525	WITHOUT_CLASSIFICATION	8.75740473523351E-8	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999983814652693	WITHOUT_CLASSIFICATION	1.6185347306692145E-6	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999993914184924	WITHOUT_CLASSIFICATION	6.085815077424799E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999990710287716	WITHOUT_CLASSIFICATION	9.2897122836996E-7	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999995115414518	WITHOUT_CLASSIFICATION	4.884585481723E-7	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999995244378306	WITHOUT_CLASSIFICATION	4.755621694559263E-7	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999747081638	WITHOUT_CLASSIFICATION	2.52918361656502E-8	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999998647364863	WITHOUT_CLASSIFICATION	1.3526351375540314E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999811941539	WITHOUT_CLASSIFICATION	1.8805846185440516E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999996345945	WITHOUT_CLASSIFICATION	3.654054570758615E-10	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999999034187	WITHOUT_CLASSIFICATION	9.658137470114526E-11	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999998579870936	WITHOUT_CLASSIFICATION	1.420129064179444E-7	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.9999946448592795	WITHOUT_CLASSIFICATION	5.355140720603774E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999998530728785	WITHOUT_CLASSIFICATION	1.4692712151801747E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999976514963	WITHOUT_CLASSIFICATION	2.348503721764422E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999977222887	WITHOUT_CLASSIFICATION	2.2777113074758594E-8	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.999999878753538	WITHOUT_CLASSIFICATION	1.2124646201397025E-7	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999997407294318	WITHOUT_CLASSIFICATION	2.5927056819914217E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999999010609448	WITHOUT_CLASSIFICATION	9.893905511511138E-8	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999994234301098	WITHOUT_CLASSIFICATION	5.765698901366736E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999527060628	WITHOUT_CLASSIFICATION	4.7293937156032035E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999527060628	WITHOUT_CLASSIFICATION	4.7293937156032035E-8	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999978122481	WITHOUT_CLASSIFICATION	2.1877519125360196E-9	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999997169510059	WITHOUT_CLASSIFICATION	2.8304899410529995E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999997169510059	WITHOUT_CLASSIFICATION	2.8304899410529995E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999558645009	WITHOUT_CLASSIFICATION	4.4135499228651066E-8	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999999558645009	WITHOUT_CLASSIFICATION	4.4135499228651066E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996652873961	WITHOUT_CLASSIFICATION	3.3471260382392184E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999864312822	WITHOUT_CLASSIFICATION	1.3568717661656109E-8	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999997021550019	WITHOUT_CLASSIFICATION	2.978449981812191E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998966324617	WITHOUT_CLASSIFICATION	1.0336753830459012E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999999997478695	WITHOUT_CLASSIFICATION	2.5213051311520205E-9	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999999006145934	WITHOUT_CLASSIFICATION	9.938540660463246E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999999006145934	WITHOUT_CLASSIFICATION	9.938540660463246E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999976514963	WITHOUT_CLASSIFICATION	2.348503721764422E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999976514963	WITHOUT_CLASSIFICATION	2.348503721764422E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999976514963	WITHOUT_CLASSIFICATION	2.348503721764422E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999977222887	WITHOUT_CLASSIFICATION	2.2777113074758594E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999527060628	WITHOUT_CLASSIFICATION	4.7293937156032035E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999527060628	WITHOUT_CLASSIFICATION	4.7293937156032035E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999527060628	WITHOUT_CLASSIFICATION	4.7293937156032035E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996652873961	WITHOUT_CLASSIFICATION	3.3471260382392184E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996652873961	WITHOUT_CLASSIFICATION	3.3471260382392184E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996652873961	WITHOUT_CLASSIFICATION	3.3471260382392184E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998966324617	WITHOUT_CLASSIFICATION	1.0336753830459012E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999998966324617	WITHOUT_CLASSIFICATION	1.0336753830459012E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999996652305224	WITHOUT_CLASSIFICATION	3.347694775475142E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999999271518808	WITHOUT_CLASSIFICATION	7.284811911143679E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999124738032	WITHOUT_CLASSIFICATION	8.75261967374582E-8	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9999340520505343	WITHOUT_CLASSIFICATION	6.594794946566161E-5	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999344784759048	WITHOUT_CLASSIFICATION	6.552152409519207E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999999261497224	WITHOUT_CLASSIFICATION	7.385027761047509E-7	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.999999261497224	WITHOUT_CLASSIFICATION	7.385027761047509E-7	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999839446699	WITHOUT_CLASSIFICATION	1.6055330069098347E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999884130668	WITHOUT_CLASSIFICATION	1.1586933327756184E-8	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999884130668	WITHOUT_CLASSIFICATION	1.1586933327756184E-8	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999884130668	WITHOUT_CLASSIFICATION	1.1586933327756184E-8	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999996309196	WITHOUT_CLASSIFICATION	3.6908036839575685E-10	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999995906449759	WITHOUT_CLASSIFICATION	4.09355024097203E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999977222887	WITHOUT_CLASSIFICATION	2.2777113074758594E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996652873961	WITHOUT_CLASSIFICATION	3.3471260382392184E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996652873961	WITHOUT_CLASSIFICATION	3.3471260382392184E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999884130668	WITHOUT_CLASSIFICATION	1.1586933327756184E-8	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999839446699	WITHOUT_CLASSIFICATION	1.6055330069098347E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999961851398	WITHOUT_CLASSIFICATION	3.8148602512308165E-9	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999998025894349	WITHOUT_CLASSIFICATION	1.9741056513333342E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999250912928	WITHOUT_CLASSIFICATION	7.490870715490942E-8	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.999999983426638	WITHOUT_CLASSIFICATION	1.6573362004141076E-8	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999998690935752	WITHOUT_CLASSIFICATION	1.3090642483252573E-7	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999999714766274	WITHOUT_CLASSIFICATION	2.8523372603790466E-8	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999906264578616	WITHOUT_CLASSIFICATION	9.373542138415159E-6	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999990120239831	WITHOUT_CLASSIFICATION	9.879760168875803E-7	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999983980002434	WITHOUT_CLASSIFICATION	1.6019997565742215E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999918283736	WITHOUT_CLASSIFICATION	8.171626419505688E-9	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999394774834395	WITHOUT_CLASSIFICATION	6.052251656050322E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999895110661	WITHOUT_CLASSIFICATION	1.0488933851036537E-8	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999962868052895	WITHOUT_CLASSIFICATION	3.7131947105565993E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9974473445405795	WITHOUT_CLASSIFICATION	0.0025526554594205294	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999997642406052	WITHOUT_CLASSIFICATION	2.3575939478048272E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9998830959859941	WITHOUT_CLASSIFICATION	1.169040140058607E-4	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999972414552035	WITHOUT_CLASSIFICATION	2.7585447965407003E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999972778053	WITHOUT_CLASSIFICATION	2.722194735669173E-9	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999614001180966	WITHOUT_CLASSIFICATION	3.859988190333396E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999918716178	WITHOUT_CLASSIFICATION	8.128382217262329E-9	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999963696259809	WITHOUT_CLASSIFICATION	3.630374019046441E-6	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999999206641	WITHOUT_CLASSIFICATION	7.93358530882704E-11	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999999876457	WITHOUT_CLASSIFICATION	1.2354322572244789E-11	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999998693533776	WITHOUT_CLASSIFICATION	1.3064662235590106E-7	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998579618605	WITHOUT_CLASSIFICATION	1.4203813939471986E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999998179753432	WITHOUT_CLASSIFICATION	1.8202465686271024E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999997707990622	WITHOUT_CLASSIFICATION	2.292009377785739E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999953662736	WITHOUT_CLASSIFICATION	4.6337263780377525E-9	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999999448883483	WITHOUT_CLASSIFICATION	5.5111651630823204E-8	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999956492738219	WITHOUT_CLASSIFICATION	4.350726178123014E-6	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999992120341	WITHOUT_CLASSIFICATION	7.879658447122584E-10	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999886372182	WITHOUT_CLASSIFICATION	1.1362781903385973E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999999592722	WITHOUT_CLASSIFICATION	4.072766755684154E-11	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999861257827	WITHOUT_CLASSIFICATION	1.38742172370292E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999961851398	WITHOUT_CLASSIFICATION	3.8148602512308165E-9	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999912539589	WITHOUT_CLASSIFICATION	8.746041084886711E-9	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999887096457	WITHOUT_CLASSIFICATION	1.1290354345380868E-8	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999999856854203	WITHOUT_CLASSIFICATION	1.4314579835721367E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999999922117204	WITHOUT_CLASSIFICATION	7.788279606161444E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999999922117204	WITHOUT_CLASSIFICATION	7.788279606161444E-8	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999567843316128	WITHOUT_CLASSIFICATION	4.3215668387185705E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999567843316128	WITHOUT_CLASSIFICATION	4.3215668387185705E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999997804245	WITHOUT_CLASSIFICATION	2.195754107384962E-10	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.999999982693432	WITHOUT_CLASSIFICATION	1.7306567977181603E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.999999938251681	WITHOUT_CLASSIFICATION	6.174831900868448E-8	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999996909745491	WITHOUT_CLASSIFICATION	3.0902545093638817E-7	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999807709555	WITHOUT_CLASSIFICATION	1.922904455616004E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999992095093202	WITHOUT_CLASSIFICATION	7.90490679772314E-7	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.999999995565216	WITHOUT_CLASSIFICATION	4.4347839999303674E-9	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999984843705734	WITHOUT_CLASSIFICATION	1.5156294265556716E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998275696226033	WITHOUT_CLASSIFICATION	1.7243037739672317E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999995773732	WITHOUT_CLASSIFICATION	4.2262677558245165E-10	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999999052398	WITHOUT_CLASSIFICATION	9.476014541646121E-11	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999998783834786	WITHOUT_CLASSIFICATION	1.2161652142766983E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999998783834786	WITHOUT_CLASSIFICATION	1.2161652142766983E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999999625526	WITHOUT_CLASSIFICATION	3.744727024595693E-11	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.999999997076416	WITHOUT_CLASSIFICATION	2.923584058212333E-9	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999993231118862	WITHOUT_CLASSIFICATION	6.768881137685804E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999993231118862	WITHOUT_CLASSIFICATION	6.768881137685804E-7	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999992014175	WITHOUT_CLASSIFICATION	7.985825983029311E-10	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999983484148	WITHOUT_CLASSIFICATION	1.651585179371858E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999990770124362	WITHOUT_CLASSIFICATION	9.229875637711582E-7	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999999911271309	WITHOUT_CLASSIFICATION	8.872869073353142E-9	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999937688996	WITHOUT_CLASSIFICATION	6.231100398454912E-9	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999996709036932	WITHOUT_CLASSIFICATION	3.2909630682488875E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999902894157168	WITHOUT_CLASSIFICATION	9.710584283128778E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999806692667474	WITHOUT_CLASSIFICATION	1.933073325254456E-5	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999885590613651	WITHOUT_CLASSIFICATION	1.1440938634992867E-5	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999999429467731	WITHOUT_CLASSIFICATION	5.705322689086085E-8	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999997901853452	WITHOUT_CLASSIFICATION	2.098146548315452E-7	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999999666997755	WITHOUT_CLASSIFICATION	3.33002244061335E-8	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999979490867468	WITHOUT_CLASSIFICATION	2.050913253170982E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999996871754822	WITHOUT_CLASSIFICATION	3.128245178854555E-7	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999926449351	WITHOUT_CLASSIFICATION	7.3550649145293956E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999983125455334	WITHOUT_CLASSIFICATION	1.687454466642891E-6	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999995158084252	WITHOUT_CLASSIFICATION	4.841915749064638E-7	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999998587119009	WITHOUT_CLASSIFICATION	1.4128809906103024E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999999848208	WITHOUT_CLASSIFICATION	1.5179176240384065E-11	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999998555653494	WITHOUT_CLASSIFICATION	1.4443465068321049E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8212848296902345	WITHOUT_CLASSIFICATION	0.17871517030976547	IMPLEMENTATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999997702388431	WITHOUT_CLASSIFICATION	2.2976115697950186E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999997264879377	WITHOUT_CLASSIFICATION	2.7351206231981347E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999968105482471	WITHOUT_CLASSIFICATION	3.189451752922462E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999998218074106	WITHOUT_CLASSIFICATION	1.7819258946468598E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999960734197189	WITHOUT_CLASSIFICATION	3.926580281091699E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999997854120548	WITHOUT_CLASSIFICATION	2.1458794514460544E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999970785128128	WITHOUT_CLASSIFICATION	2.9214871872071827E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999969637297	WITHOUT_CLASSIFICATION	3.0362704164881196E-9	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999997058723	WITHOUT_CLASSIFICATION	2.9412774781969646E-10	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999976699064	WITHOUT_CLASSIFICATION	2.3300935697218375E-9	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999980213021	WITHOUT_CLASSIFICATION	1.978697845625553E-9	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999971598763	WITHOUT_CLASSIFICATION	2.8401237664040667E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999894994065	WITHOUT_CLASSIFICATION	1.0500593512026447E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999894994065	WITHOUT_CLASSIFICATION	1.0500593512026447E-8	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999999961296694	WITHOUT_CLASSIFICATION	3.870330622061487E-9	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999998677226348	WITHOUT_CLASSIFICATION	1.322773652134777E-7	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999995351324	WITHOUT_CLASSIFICATION	4.648675875372181E-10	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999994876075439	WITHOUT_CLASSIFICATION	5.123924562398428E-7	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999997271323334	WITHOUT_CLASSIFICATION	2.728676665027739E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.999999767677507	WITHOUT_CLASSIFICATION	2.3232249297355224E-7	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999984279388989	WITHOUT_CLASSIFICATION	1.5720611011167607E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999988851905939	WITHOUT_CLASSIFICATION	1.114809406038221E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999999851208553	WITHOUT_CLASSIFICATION	1.4879144794882768E-8	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999996787365676	WITHOUT_CLASSIFICATION	3.2126343236968733E-7	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999960783995	WITHOUT_CLASSIFICATION	3.921600430942497E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999854816301029	WITHOUT_CLASSIFICATION	1.4518369897107302E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999810406165647	WITHOUT_CLASSIFICATION	1.8959383435292438E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999992712811249	WITHOUT_CLASSIFICATION	7.287188752594407E-7	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999999126954205	WITHOUT_CLASSIFICATION	8.730457947679845E-8	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.999999971401469	WITHOUT_CLASSIFICATION	2.859853104139949E-8	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999999307817128	WITHOUT_CLASSIFICATION	6.92182872231152E-8	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999997045608848	WITHOUT_CLASSIFICATION	2.954391152547901E-7	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9987602669927432	WITHOUT_CLASSIFICATION	0.0012397330072567748	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999933796226176	WITHOUT_CLASSIFICATION	6.620377382431901E-6	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999999870026857	WITHOUT_CLASSIFICATION	1.2997314397016733E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999972418593	WITHOUT_CLASSIFICATION	2.7581406267608102E-9	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999997959088183	WITHOUT_CLASSIFICATION	2.0409118173569845E-7	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999986740691911	WITHOUT_CLASSIFICATION	1.3259308089159232E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999957471030066	WITHOUT_CLASSIFICATION	4.2528969933445535E-6	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.999932917312565	WITHOUT_CLASSIFICATION	6.708268743508458E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999999841361	WITHOUT_CLASSIFICATION	1.5863771827559623E-11	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999981291964	WITHOUT_CLASSIFICATION	1.8708036290031142E-9	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.999997485567709	WITHOUT_CLASSIFICATION	2.5144322911201355E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999997262376466	WITHOUT_CLASSIFICATION	2.7376235339500868E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999997002550004	WITHOUT_CLASSIFICATION	2.997449995928693E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9997823724183046	WITHOUT_CLASSIFICATION	2.17627581695431E-4	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999999788837831	WITHOUT_CLASSIFICATION	2.111621688977348E-8	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999961029749	WITHOUT_CLASSIFICATION	3.89702512994926E-9	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999997532591536	WITHOUT_CLASSIFICATION	2.467408464148636E-7	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999973297706	WITHOUT_CLASSIFICATION	2.670229434759171E-9	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999999320450922	WITHOUT_CLASSIFICATION	6.795490779124136E-8	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999999413497526	WITHOUT_CLASSIFICATION	5.865024739514261E-8	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999904535000972	WITHOUT_CLASSIFICATION	9.546499902836431E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999856379689	WITHOUT_CLASSIFICATION	1.436203126903653E-8	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999991004555125	WITHOUT_CLASSIFICATION	8.995444875049177E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998675651179	WITHOUT_CLASSIFICATION	1.3243488198708746E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998675651179	WITHOUT_CLASSIFICATION	1.3243488198708746E-7	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999995580969818	WITHOUT_CLASSIFICATION	4.419030182210239E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999943764692	WITHOUT_CLASSIFICATION	5.623530737165654E-9	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999997739049588	WITHOUT_CLASSIFICATION	2.2609504135471331E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999975720327169	WITHOUT_CLASSIFICATION	2.4279672832158146E-6	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999993434312054	WITHOUT_CLASSIFICATION	6.565687945733041E-7	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999999984048	WITHOUT_CLASSIFICATION	1.5951906291210164E-12	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999696159	WITHOUT_CLASSIFICATION	3.038409912391054E-11	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999999867514227	WITHOUT_CLASSIFICATION	1.3248577405282216E-8	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999528194226	WITHOUT_CLASSIFICATION	4.718057738613651E-8	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999970337549989	WITHOUT_CLASSIFICATION	2.966245000963821E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999987778037	WITHOUT_CLASSIFICATION	1.2221962619847503E-9	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999998272643217	WITHOUT_CLASSIFICATION	1.7273567837753695E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999998623660054	WITHOUT_CLASSIFICATION	1.376339946835091E-7	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999995114838021	WITHOUT_CLASSIFICATION	4.885161978979347E-7	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999487942952	WITHOUT_CLASSIFICATION	5.120570487281112E-8	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9656945488582577	WITHOUT_CLASSIFICATION	0.03430545114174239	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999885089151	WITHOUT_CLASSIFICATION	1.1491084809547104E-8	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999999947235365	WITHOUT_CLASSIFICATION	5.276463396093674E-9	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999999537392702	WITHOUT_CLASSIFICATION	4.626072965333169E-8	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9932839383768846	WITHOUT_CLASSIFICATION	0.006716061623115386	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999997579064304	WITHOUT_CLASSIFICATION	2.420935696214405E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999963442124815	WITHOUT_CLASSIFICATION	3.6557875185030313E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999998182077096	WITHOUT_CLASSIFICATION	1.817922905074961E-7	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999961667009408	WITHOUT_CLASSIFICATION	3.833299059156722E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999956403325	WITHOUT_CLASSIFICATION	4.359667420188283E-9	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999857116394787	WITHOUT_CLASSIFICATION	1.4288360521415274E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999999995974	WITHOUT_CLASSIFICATION	4.026129729897296E-13	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999966062347588	WITHOUT_CLASSIFICATION	3.393765241143824E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999968387228	WITHOUT_CLASSIFICATION	3.1612772730697087E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997949792417	WITHOUT_CLASSIFICATION	2.050207583717487E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999966088678	WITHOUT_CLASSIFICATION	3.3911321132620212E-9	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999999989746444	WITHOUT_CLASSIFICATION	1.0253556026481533E-8	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999997949792417	WITHOUT_CLASSIFICATION	2.050207583717487E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999990538341	WITHOUT_CLASSIFICATION	9.46165889180082E-10	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999998908342328	WITHOUT_CLASSIFICATION	1.0916576725864137E-7	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9679173743903774	WITHOUT_CLASSIFICATION	0.03208262560962263	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8212324891325942	IMPLEMENTATION	0.17876751086740578	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999996826276046	WITHOUT_CLASSIFICATION	3.1737239533824714E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999625551	WITHOUT_CLASSIFICATION	3.744501196507649E-11	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999992905789	WITHOUT_CLASSIFICATION	7.094210553515366E-10	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999993569384471	WITHOUT_CLASSIFICATION	6.430615528078207E-7	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999992757101	WITHOUT_CLASSIFICATION	7.242898699116582E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999998555653494	WITHOUT_CLASSIFICATION	1.4443465068321049E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999124738032	WITHOUT_CLASSIFICATION	8.75261967374582E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997610028	WITHOUT_CLASSIFICATION	2.3899726340143523E-10	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.999999659551182	WITHOUT_CLASSIFICATION	3.404488179968893E-7	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998646672383	WITHOUT_CLASSIFICATION	1.3533276175490405E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999989752889162	WITHOUT_CLASSIFICATION	1.0247110837779021E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999999116345724	WITHOUT_CLASSIFICATION	8.836542761931477E-8	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999991475348452	WITHOUT_CLASSIFICATION	8.524651546661322E-7	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999984565446992	WITHOUT_CLASSIFICATION	1.5434553007217222E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999935969293	WITHOUT_CLASSIFICATION	6.403070741771815E-9	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999999127119468	WITHOUT_CLASSIFICATION	8.728805325113983E-8	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.999996737407906	WITHOUT_CLASSIFICATION	3.2625920940676024E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.999997308404581	WITHOUT_CLASSIFICATION	2.691595419106182E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999959016861691	WITHOUT_CLASSIFICATION	4.098313830866862E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999994421510596	WITHOUT_CLASSIFICATION	5.578489403329559E-7	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998649343701568	WITHOUT_CLASSIFICATION	1.350656298432347E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999998007410499	WITHOUT_CLASSIFICATION	1.9925895020793595E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999995184506568	WITHOUT_CLASSIFICATION	4.815493431207508E-7	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999997282614	WITHOUT_CLASSIFICATION	2.717385462718689E-10	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999997805185	WITHOUT_CLASSIFICATION	2.1948144710732582E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999927130391	WITHOUT_CLASSIFICATION	7.286960989732298E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999927130391	WITHOUT_CLASSIFICATION	7.286960989732298E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999947009199	WITHOUT_CLASSIFICATION	5.299080020563812E-9	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999999623708	WITHOUT_CLASSIFICATION	3.7629180280959606E-11	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999846012646143	WITHOUT_CLASSIFICATION	1.539873538561349E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5006415300594159	WITHOUT_CLASSIFICATION	0.4993584699405842	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5006415300594159	WITHOUT_CLASSIFICATION	0.4993584699405842	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5006415300594159	WITHOUT_CLASSIFICATION	0.4993584699405842	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5006415300594159	WITHOUT_CLASSIFICATION	0.4993584699405842	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999982171721	WITHOUT_CLASSIFICATION	1.7828279064561044E-9	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999988143031173	WITHOUT_CLASSIFICATION	1.1856968826518696E-6	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999999622346317	WITHOUT_CLASSIFICATION	3.7765368173819035E-8	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9887123234118951	WITHOUT_CLASSIFICATION	0.011287676588104917	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999956339550062	WITHOUT_CLASSIFICATION	4.3660449938226226E-6	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999992279636175	WITHOUT_CLASSIFICATION	7.720363825296002E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999992174354433	WITHOUT_CLASSIFICATION	7.825645567867349E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999992174354433	WITHOUT_CLASSIFICATION	7.825645567867349E-7	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999980261617	WITHOUT_CLASSIFICATION	1.9738382698116003E-9	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.999999691350458	WITHOUT_CLASSIFICATION	3.08649542059076E-7	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999993956149562	WITHOUT_CLASSIFICATION	6.043850437778666E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9998945370558668	WITHOUT_CLASSIFICATION	1.0546294413315531E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.99999656651387	WITHOUT_CLASSIFICATION	3.4334861299087188E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999997224425987	WITHOUT_CLASSIFICATION	2.7755740129664407E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999990490953	WITHOUT_CLASSIFICATION	9.509046516007081E-10	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999996024986822	WITHOUT_CLASSIFICATION	3.9750131784759624E-7	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999977987371046	WITHOUT_CLASSIFICATION	2.2012628954729618E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999977987371046	WITHOUT_CLASSIFICATION	2.2012628954729618E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.999999989746444	WITHOUT_CLASSIFICATION	1.0253556026481533E-8	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999996233483376	WITHOUT_CLASSIFICATION	3.7665166236237734E-7	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999996731366269	WITHOUT_CLASSIFICATION	3.2686337316529796E-7	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999990839035516	WITHOUT_CLASSIFICATION	9.160964484088731E-7	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999825653	WITHOUT_CLASSIFICATION	1.7434752703483427E-11	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999993599085423	WITHOUT_CLASSIFICATION	6.400914577079468E-7	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999958631891855	WITHOUT_CLASSIFICATION	4.1368108144415045E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999963720076808	WITHOUT_CLASSIFICATION	3.627992319143663E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998898901031	WITHOUT_CLASSIFICATION	1.1010989683775417E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999998898901031	WITHOUT_CLASSIFICATION	1.1010989683775417E-7	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999992932870857	WITHOUT_CLASSIFICATION	7.067129143352642E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999981897352	WITHOUT_CLASSIFICATION	1.8102648676893858E-9	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999999670087267	WITHOUT_CLASSIFICATION	3.2991273294482504E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999982606940347	WITHOUT_CLASSIFICATION	1.7393059652600257E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999958877613324	WITHOUT_CLASSIFICATION	4.112238667601033E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999987640591463	WITHOUT_CLASSIFICATION	1.2359408536326042E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9966024645861156	WITHOUT_CLASSIFICATION	0.003397535413884319	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997520511876	WITHOUT_CLASSIFICATION	2.4794881242409645E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997520511876	WITHOUT_CLASSIFICATION	2.4794881242409645E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997520511876	WITHOUT_CLASSIFICATION	2.4794881242409645E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999997520511876	WITHOUT_CLASSIFICATION	2.4794881242409645E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999611376773	WITHOUT_CLASSIFICATION	3.886232272333605E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999631923	WITHOUT_CLASSIFICATION	3.680764452597754E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999971173672386	WITHOUT_CLASSIFICATION	2.8826327614254675E-6	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998873395273	WITHOUT_CLASSIFICATION	1.1266047271223469E-7	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999999945218088	WITHOUT_CLASSIFICATION	5.478191210853867E-9	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999997103039456	WITHOUT_CLASSIFICATION	2.8969605433113497E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999778519544	WITHOUT_CLASSIFICATION	2.2148045564801095E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999966809353	WITHOUT_CLASSIFICATION	3.3190646774471172E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999966809353	WITHOUT_CLASSIFICATION	3.3190646774471172E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999966809353	WITHOUT_CLASSIFICATION	3.3190646774471172E-9	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999720660309	WITHOUT_CLASSIFICATION	2.7933969125621895E-8	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999356362331	WITHOUT_CLASSIFICATION	6.436376683381246E-8	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998391362974	WITHOUT_CLASSIFICATION	1.608637026718015E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999998391362974	WITHOUT_CLASSIFICATION	1.608637026718015E-7	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999991648177362	WITHOUT_CLASSIFICATION	8.35182263644382E-7	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9999278812681975	WITHOUT_CLASSIFICATION	7.211873180245985E-5	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999962840058968	WITHOUT_CLASSIFICATION	3.7159941032230716E-6	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999997888904234	WITHOUT_CLASSIFICATION	2.1110957650387482E-7	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999994178259	WITHOUT_CLASSIFICATION	5.82174030742583E-10	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997756331267	WITHOUT_CLASSIFICATION	2.2436687339841735E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999951659465	WITHOUT_CLASSIFICATION	4.834053553711781E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999951659465	WITHOUT_CLASSIFICATION	4.834053553711781E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.999999996059032	WITHOUT_CLASSIFICATION	3.940967897477846E-9	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999996973018	WITHOUT_CLASSIFICATION	3.0269815636043257E-10	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999998803687482	WITHOUT_CLASSIFICATION	1.1963125171249913E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999972159954027	WITHOUT_CLASSIFICATION	2.784004597275318E-6	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9981672067808348	WITHOUT_CLASSIFICATION	0.0018327932191652327	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999991225222188	WITHOUT_CLASSIFICATION	8.774777813011264E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999998568229749	WITHOUT_CLASSIFICATION	1.4317702510208396E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9998851714936761	WITHOUT_CLASSIFICATION	1.148285063239585E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999913922869	WITHOUT_CLASSIFICATION	8.607713199547105E-9	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999683551252	WITHOUT_CLASSIFICATION	3.164487479267038E-8	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999998958619694	WITHOUT_CLASSIFICATION	1.0413803062147681E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999998712896	WITHOUT_CLASSIFICATION	1.2871039655427982E-9	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9993604818221066	WITHOUT_CLASSIFICATION	6.395181778934627E-4	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999991440054837	WITHOUT_CLASSIFICATION	8.55994516205536E-7	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999993999530022	WITHOUT_CLASSIFICATION	6.000469978010888E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999904455182035	WITHOUT_CLASSIFICATION	9.554481796539886E-6	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999862150097815	WITHOUT_CLASSIFICATION	1.3784990218645054E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999940684785	WITHOUT_CLASSIFICATION	5.931521500416656E-9	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999939870780965	WITHOUT_CLASSIFICATION	6.012921903482893E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999999710620072	WITHOUT_CLASSIFICATION	2.8937992763405862E-8	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999995999255	WITHOUT_CLASSIFICATION	4.000745624507974E-10	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9929116973425066	WITHOUT_CLASSIFICATION	0.0070883026574934515	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999998595214946	WITHOUT_CLASSIFICATION	1.4047850539511483E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999975179732985	WITHOUT_CLASSIFICATION	2.4820267015541746E-6	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.999999297288968	WITHOUT_CLASSIFICATION	7.027110320030943E-7	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999994300319753	WITHOUT_CLASSIFICATION	5.699680246501977E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.999999877640696	WITHOUT_CLASSIFICATION	1.2235930413681401E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999696159	WITHOUT_CLASSIFICATION	3.038409912391054E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999696159	WITHOUT_CLASSIFICATION	3.038409912391054E-11	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999872279023	WITHOUT_CLASSIFICATION	1.2772097800435188E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999470846191	WITHOUT_CLASSIFICATION	5.2915380880858834E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999986043736	WITHOUT_CLASSIFICATION	1.395626400360173E-9	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999878694387	WITHOUT_CLASSIFICATION	1.2130561280948104E-8	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999972102496412	WITHOUT_CLASSIFICATION	2.7897503588075143E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999996732006479	WITHOUT_CLASSIFICATION	3.2679935208998123E-7	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999996649198352	WITHOUT_CLASSIFICATION	3.350801647842874E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999489612795724	WITHOUT_CLASSIFICATION	5.1038720427591154E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999949647594419	WITHOUT_CLASSIFICATION	5.035240557977625E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997459975581	WITHOUT_CLASSIFICATION	2.540024418733268E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997459975581	WITHOUT_CLASSIFICATION	2.540024418733268E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997459975581	WITHOUT_CLASSIFICATION	2.540024418733268E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999918857997	WITHOUT_CLASSIFICATION	8.114200291776412E-9	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999468935362329	WITHOUT_CLASSIFICATION	5.3106463767127724E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.999999920554977	WITHOUT_CLASSIFICATION	7.944502294800208E-8	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999918476363	WITHOUT_CLASSIFICATION	8.152363607653873E-9	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9997957774059576	WITHOUT_CLASSIFICATION	2.0422259404226243E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999888238739	WITHOUT_CLASSIFICATION	1.1176126166849337E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999753928988	WITHOUT_CLASSIFICATION	2.460710124593642E-8	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999795367723266	WITHOUT_CLASSIFICATION	2.046322767328069E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997880830131166	WITHOUT_CLASSIFICATION	2.1191698688332436E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9997880830131166	WITHOUT_CLASSIFICATION	2.1191698688332436E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999998892641454	WITHOUT_CLASSIFICATION	1.1073585465734509E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999368673475992	WITHOUT_CLASSIFICATION	6.313265240072962E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999943694705	WITHOUT_CLASSIFICATION	5.6305294828529295E-9	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999406370572	WITHOUT_CLASSIFICATION	5.936294283720484E-8	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999975823871856	WITHOUT_CLASSIFICATION	2.4176128143907067E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999975823871856	WITHOUT_CLASSIFICATION	2.4176128143907067E-6	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999983889670166	WITHOUT_CLASSIFICATION	1.611032983329522E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999972046119	WITHOUT_CLASSIFICATION	2.7953881638924186E-9	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999967674561309	WITHOUT_CLASSIFICATION	3.232543869167783E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999937389454621	WITHOUT_CLASSIFICATION	6.261054537894454E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999994443332862	WITHOUT_CLASSIFICATION	5.556667136995738E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999969021661	WITHOUT_CLASSIFICATION	3.0978340016798118E-9	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999969021661	WITHOUT_CLASSIFICATION	3.0978340016798118E-9	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999995271345752	WITHOUT_CLASSIFICATION	4.728654247636278E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999995271345752	WITHOUT_CLASSIFICATION	4.728654247636278E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999449112653	WITHOUT_CLASSIFICATION	5.508873459501917E-8	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999932762524059	WITHOUT_CLASSIFICATION	6.7237475942273235E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.999999865259507	WITHOUT_CLASSIFICATION	1.3474049306270814E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996516226997	WITHOUT_CLASSIFICATION	3.483773004408734E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999990724895913	WITHOUT_CLASSIFICATION	9.27510408719148E-7	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.999999970657477	WITHOUT_CLASSIFICATION	2.9342522961211728E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999993580174668	WITHOUT_CLASSIFICATION	6.419825331871545E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999999006145934	WITHOUT_CLASSIFICATION	9.938540660463246E-8	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999765341212	WITHOUT_CLASSIFICATION	2.3465878755112956E-8	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999999991935	WITHOUT_CLASSIFICATION	8.065389582389809E-13	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.8753361288354373	WITHOUT_CLASSIFICATION	0.1246638711645627	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999989574754188	WITHOUT_CLASSIFICATION	1.0425245811887711E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999990165448288	WITHOUT_CLASSIFICATION	9.834551712563252E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999990797243699	WITHOUT_CLASSIFICATION	9.202756301837406E-7	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999991397776332	WITHOUT_CLASSIFICATION	8.602223667860856E-7	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999991747887	WITHOUT_CLASSIFICATION	8.252113593628385E-10	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999998987852055	WITHOUT_CLASSIFICATION	1.0121479454682043E-7	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998984893206	WITHOUT_CLASSIFICATION	1.0151067942326382E-7	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999977455329	WITHOUT_CLASSIFICATION	2.254467033018304E-9	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999995504422486	WITHOUT_CLASSIFICATION	4.4955775132879956E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999997610028	WITHOUT_CLASSIFICATION	2.3899726340143523E-10	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999898809552838	WITHOUT_CLASSIFICATION	1.0119044716129553E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999252694386	WITHOUT_CLASSIFICATION	7.47305614647184E-8	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999978452620241	WITHOUT_CLASSIFICATION	2.154737976025885E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999998127536541	WITHOUT_CLASSIFICATION	1.8724634574458237E-7	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999998062522905	WITHOUT_CLASSIFICATION	1.9374770954236933E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999992631839836	WITHOUT_CLASSIFICATION	7.368160163373571E-7	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999998319404	WITHOUT_CLASSIFICATION	1.6805953442096888E-10	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999904020901	WITHOUT_CLASSIFICATION	9.59790990409264E-9	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999998181985482	WITHOUT_CLASSIFICATION	1.818014518204941E-7	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.999999182036446	WITHOUT_CLASSIFICATION	8.179635539047385E-7	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999972089322	WITHOUT_CLASSIFICATION	2.7910678534370596E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999990933588107	WITHOUT_CLASSIFICATION	9.066411893931443E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999976888616	WITHOUT_CLASSIFICATION	2.3111384605463053E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999982956973958	WITHOUT_CLASSIFICATION	1.7043026041625476E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999999998669582	WITHOUT_CLASSIFICATION	1.3304179378651974E-9	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999989468235	WITHOUT_CLASSIFICATION	1.053176486835325E-9	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999879892596	WITHOUT_CLASSIFICATION	1.201074038605934E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.999999980704477	WITHOUT_CLASSIFICATION	1.9295522896913086E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999997486226	WITHOUT_CLASSIFICATION	2.513773387991702E-10	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999904029637	WITHOUT_CLASSIFICATION	9.597036230444665E-9	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999910494881	WITHOUT_CLASSIFICATION	8.950511860554961E-9	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999981564098	WITHOUT_CLASSIFICATION	1.843590243178184E-9	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999989584193	WITHOUT_CLASSIFICATION	1.0415807711161207E-9	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999997599989592	WITHOUT_CLASSIFICATION	2.4000104086379244E-7	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999739072700149	WITHOUT_CLASSIFICATION	2.6092729985116127E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999999211434699	WITHOUT_CLASSIFICATION	7.885652999242323E-8	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999979046197	WITHOUT_CLASSIFICATION	2.0953803843206124E-9	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999579280364	WITHOUT_CLASSIFICATION	4.2071963607401046E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997934774075	WITHOUT_CLASSIFICATION	2.0652259243030754E-7	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999999192288195	WITHOUT_CLASSIFICATION	8.077118050519878E-8	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999944991700669	WITHOUT_CLASSIFICATION	5.50082993316282E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999944991700669	WITHOUT_CLASSIFICATION	5.50082993316282E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996484424	WITHOUT_CLASSIFICATION	3.5155754168286207E-10	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996484424	WITHOUT_CLASSIFICATION	3.5155754168286207E-10	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999585521516905	WITHOUT_CLASSIFICATION	4.144784830940575E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999585521516905	WITHOUT_CLASSIFICATION	4.144784830940575E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999990140084427	WITHOUT_CLASSIFICATION	9.859915573652645E-7	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999990140084427	WITHOUT_CLASSIFICATION	9.859915573652645E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999724488834	WITHOUT_CLASSIFICATION	2.755111657194549E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999716211471	WITHOUT_CLASSIFICATION	2.837885300296234E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999716211471	WITHOUT_CLASSIFICATION	2.837885300296234E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999716211471	WITHOUT_CLASSIFICATION	2.837885300296234E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999980168822686	WITHOUT_CLASSIFICATION	1.9831177312911284E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992946329642	WITHOUT_CLASSIFICATION	7.053670356913659E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992946329642	WITHOUT_CLASSIFICATION	7.053670356913659E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992946329642	WITHOUT_CLASSIFICATION	7.053670356913659E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999491886541	WITHOUT_CLASSIFICATION	5.0811345922732465E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999491886541	WITHOUT_CLASSIFICATION	5.0811345922732465E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999491886541	WITHOUT_CLASSIFICATION	5.0811345922732465E-8	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999996958967159	WITHOUT_CLASSIFICATION	3.041032840410529E-7	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999992364976857	WITHOUT_CLASSIFICATION	7.635023142969759E-7	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999344771285895	WITHOUT_CLASSIFICATION	6.552287141042142E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998411662584185	WITHOUT_CLASSIFICATION	1.5883374158144172E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998411662584185	WITHOUT_CLASSIFICATION	1.5883374158144172E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9998411662584185	WITHOUT_CLASSIFICATION	1.5883374158144172E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999929627293	WITHOUT_CLASSIFICATION	7.037270619239373E-9	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999995505636601	WITHOUT_CLASSIFICATION	4.4943633995061966E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999995505636601	WITHOUT_CLASSIFICATION	4.4943633995061966E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999999537596787	WITHOUT_CLASSIFICATION	4.624032142898316E-8	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999103178995	WITHOUT_CLASSIFICATION	8.968210056593933E-8	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999999103178995	WITHOUT_CLASSIFICATION	8.968210056593933E-8	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9980248583869937	IMPLEMENTATION	0.0019751416130062392	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.6867905737278789	IMPLEMENTATION	0.3132094262721212	WITHOUT_CLASSIFICATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999993381013198	WITHOUT_CLASSIFICATION	6.618986802718762E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999988893520851	WITHOUT_CLASSIFICATION	1.1106479149327499E-6	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999999422107	WITHOUT_CLASSIFICATION	5.7789403368256976E-11	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999999790729079	WITHOUT_CLASSIFICATION	2.0927092056530012E-8	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.999999420174146	WITHOUT_CLASSIFICATION	5.79825853981788E-7	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999999863299438	WITHOUT_CLASSIFICATION	1.3670056149324243E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999876947461	WITHOUT_CLASSIFICATION	1.2305253998352044E-8	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999991983011802	WITHOUT_CLASSIFICATION	8.016988199059128E-7	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999940724080386	WITHOUT_CLASSIFICATION	5.927591961381474E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999996930885	WITHOUT_CLASSIFICATION	3.0691154407841397E-10	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999998809114967	WITHOUT_CLASSIFICATION	1.1908850332111292E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999997188094	WITHOUT_CLASSIFICATION	2.81190584159484E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980074666401441	WITHOUT_CLASSIFICATION	0.001992533359855936	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999998398903	WITHOUT_CLASSIFICATION	1.6010980002676432E-10	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999791442749	WITHOUT_CLASSIFICATION	2.085572508014913E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999729925307	WITHOUT_CLASSIFICATION	2.700746934833962E-8	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999999421212232	WITHOUT_CLASSIFICATION	5.787877666946551E-8	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999881046011	WITHOUT_CLASSIFICATION	1.1895398885786241E-8	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999963442124815	WITHOUT_CLASSIFICATION	3.6557875185030313E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999999616538224	WITHOUT_CLASSIFICATION	3.834617752760516E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999977042040101	WITHOUT_CLASSIFICATION	2.295795989946034E-6	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999994225793053	WITHOUT_CLASSIFICATION	5.77420694619184E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9971120136215075	WITHOUT_CLASSIFICATION	0.002887986378492493	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999994023191222	WITHOUT_CLASSIFICATION	5.976808778369456E-7	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999666866602	WITHOUT_CLASSIFICATION	3.331333968594212E-8	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999763715579	WITHOUT_CLASSIFICATION	2.3628442053818088E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999985376137	WITHOUT_CLASSIFICATION	1.4623863420708301E-9	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999999593706483	WITHOUT_CLASSIFICATION	4.0629351675309056E-8	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999962142792	WITHOUT_CLASSIFICATION	3.785720843405647E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999970337549989	WITHOUT_CLASSIFICATION	2.966245000963821E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999447529375	WITHOUT_CLASSIFICATION	5.524706257840933E-8	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999447529375	WITHOUT_CLASSIFICATION	5.524706257840933E-8	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999447529375	WITHOUT_CLASSIFICATION	5.524706257840933E-8	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999999447529375	WITHOUT_CLASSIFICATION	5.524706257840933E-8	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998344501383	WITHOUT_CLASSIFICATION	1.6554986184517963E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999811690385507	WITHOUT_CLASSIFICATION	1.8830961449288278E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999925816989	WITHOUT_CLASSIFICATION	7.418301093849956E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.999999925816989	WITHOUT_CLASSIFICATION	7.418301093849956E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999952810344	WITHOUT_CLASSIFICATION	4.71896556781511E-9	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999928804258	WITHOUT_CLASSIFICATION	7.119574125274494E-9	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999923681439	WITHOUT_CLASSIFICATION	7.631856136048161E-9	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999993784134	WITHOUT_CLASSIFICATION	6.215865923868088E-10	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999756603098	WITHOUT_CLASSIFICATION	2.4339690242842326E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999821491400734	WITHOUT_CLASSIFICATION	1.7850859926586204E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999989162398619	WITHOUT_CLASSIFICATION	1.0837601381335582E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997051861528	WITHOUT_CLASSIFICATION	2.948138471761022E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997051861528	WITHOUT_CLASSIFICATION	2.948138471761022E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997051861528	WITHOUT_CLASSIFICATION	2.948138471761022E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997051861528	WITHOUT_CLASSIFICATION	2.948138471761022E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999289024232	WITHOUT_CLASSIFICATION	7.10975767779349E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999998779381	WITHOUT_CLASSIFICATION	1.2206183560522864E-10	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999998779381	WITHOUT_CLASSIFICATION	1.2206183560522864E-10	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999998779381	WITHOUT_CLASSIFICATION	1.2206183560522864E-10	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999129435609	WITHOUT_CLASSIFICATION	8.70564389874421E-8	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999028557535	WITHOUT_CLASSIFICATION	9.714424655976534E-8	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999560570728339	WITHOUT_CLASSIFICATION	4.394292716622618E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5006415300594159	WITHOUT_CLASSIFICATION	0.4993584699405842	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5006415300594159	WITHOUT_CLASSIFICATION	0.4993584699405842	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999897292349	WITHOUT_CLASSIFICATION	1.0270765019738681E-8	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999985385496639	WITHOUT_CLASSIFICATION	1.461450335965082E-6	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999997670845981	WITHOUT_CLASSIFICATION	2.3291540185406074E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999997670845981	WITHOUT_CLASSIFICATION	2.3291540185406074E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999999891444016	WITHOUT_CLASSIFICATION	1.0855598394087157E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.999999891444016	WITHOUT_CLASSIFICATION	1.0855598394087157E-7	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999961886056	WITHOUT_CLASSIFICATION	3.811394360313939E-9	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999828353902099	WITHOUT_CLASSIFICATION	1.7164609790040894E-5	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999973191823	WITHOUT_CLASSIFICATION	2.680817769019672E-9	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999999634524369	WITHOUT_CLASSIFICATION	3.654756309579518E-7	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999504419264	WITHOUT_CLASSIFICATION	4.9558073717131153E-8	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.99999979019245	WITHOUT_CLASSIFICATION	2.098075499185507E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999979247222	WITHOUT_CLASSIFICATION	2.0752777714136344E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999982253998	WITHOUT_CLASSIFICATION	1.774600165284878E-9	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999970201042	WITHOUT_CLASSIFICATION	2.9798958671068E-9	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999623296819	WITHOUT_CLASSIFICATION	3.7670318003046706E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999623296819	WITHOUT_CLASSIFICATION	3.7670318003046706E-8	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999796354588	WITHOUT_CLASSIFICATION	2.0364541195095947E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.999999796354588	WITHOUT_CLASSIFICATION	2.0364541195095947E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999987030967218	WITHOUT_CLASSIFICATION	1.2969032781930226E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999997797322839	WITHOUT_CLASSIFICATION	2.2026771602143856E-7	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999979546534091	WITHOUT_CLASSIFICATION	2.0453465909485735E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995508526089	WITHOUT_CLASSIFICATION	4.4914739096672625E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995508526089	WITHOUT_CLASSIFICATION	4.4914739096672625E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995508526089	WITHOUT_CLASSIFICATION	4.4914739096672625E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999994639086518	WITHOUT_CLASSIFICATION	5.360913481185873E-7	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999997043327234	WITHOUT_CLASSIFICATION	2.9566727657474676E-7	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999995845605869	WITHOUT_CLASSIFICATION	4.154394131817199E-7	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.999999910581204	WITHOUT_CLASSIFICATION	8.941879597994786E-8	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999997438694032	WITHOUT_CLASSIFICATION	2.5613059678427077E-7	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999997957926028	WITHOUT_CLASSIFICATION	2.0420739723729952E-7	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999991185377524	WITHOUT_CLASSIFICATION	8.814622475529049E-7	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999987827737364	WITHOUT_CLASSIFICATION	1.2172262634730775E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999720944485047	WITHOUT_CLASSIFICATION	2.7905551495384094E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999955911699978	WITHOUT_CLASSIFICATION	4.408830002177896E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999993393623354	WITHOUT_CLASSIFICATION	6.606376645999186E-6	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.999999783022455	WITHOUT_CLASSIFICATION	2.1697754506615808E-7	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999994687915	WITHOUT_CLASSIFICATION	5.312084905619893E-10	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.5006415300594159	WITHOUT_CLASSIFICATION	0.4993584699405842	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999993316611075	WITHOUT_CLASSIFICATION	6.683388923619674E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999989605164503	WITHOUT_CLASSIFICATION	1.0394835497583862E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999927130391	WITHOUT_CLASSIFICATION	7.286960989732298E-9	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99999760456	WITHOUT_CLASSIFICATION	2.3954400000531083E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99999760456	WITHOUT_CLASSIFICATION	2.3954400000531083E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99999760456	WITHOUT_CLASSIFICATION	2.3954400000531083E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99999760456	WITHOUT_CLASSIFICATION	2.3954400000531083E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99999760456	WITHOUT_CLASSIFICATION	2.3954400000531083E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999992639086718	WITHOUT_CLASSIFICATION	7.360913281676347E-7	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99999760456	WITHOUT_CLASSIFICATION	2.3954400000531083E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99999760456	WITHOUT_CLASSIFICATION	2.3954400000531083E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.99999760456	WITHOUT_CLASSIFICATION	2.3954400000531083E-6	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999983778126044	WITHOUT_CLASSIFICATION	1.6221873957097838E-6	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999709133883055	WITHOUT_CLASSIFICATION	2.9086611694634106E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999995320278936	WITHOUT_CLASSIFICATION	4.679721064676652E-7	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999935011918	WITHOUT_CLASSIFICATION	6.498808179637944E-9	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999563885463	WITHOUT_CLASSIFICATION	4.3611453688178285E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999998043324649	WITHOUT_CLASSIFICATION	1.9566753516119176E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999965133005	WITHOUT_CLASSIFICATION	3.486699445793167E-9	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999998893815185	WITHOUT_CLASSIFICATION	1.1061848146606253E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.999999367782722	WITHOUT_CLASSIFICATION	6.322172778746561E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.999999367782722	WITHOUT_CLASSIFICATION	6.322172778746561E-7	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999997369320008	WITHOUT_CLASSIFICATION	2.6306799913147596E-7	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999995904888008	WITHOUT_CLASSIFICATION	4.0951119910775125E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999988135599305	WITHOUT_CLASSIFICATION	1.1864400695162015E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999998164684788	WITHOUT_CLASSIFICATION	1.835315211809104E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998911876609	WITHOUT_CLASSIFICATION	1.0881233907759266E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999997313259501	WITHOUT_CLASSIFICATION	2.686740499492881E-7	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999996552737455	WITHOUT_CLASSIFICATION	3.447262545861975E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999996337608839	WITHOUT_CLASSIFICATION	3.662391161226613E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.999999690457031	WITHOUT_CLASSIFICATION	3.095429690594868E-7	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999997724360842	WITHOUT_CLASSIFICATION	2.2756391583011867E-7	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999996871572223	WITHOUT_CLASSIFICATION	3.1284277767338325E-7	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.999999692833454	WITHOUT_CLASSIFICATION	3.0716654588801963E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999995548815417	WITHOUT_CLASSIFICATION	4.4511845828775437E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999995576662053	WITHOUT_CLASSIFICATION	4.423337946590469E-7	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999994938194472	WITHOUT_CLASSIFICATION	5.061805527639046E-7	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999994471263239	WITHOUT_CLASSIFICATION	5.528736761411731E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999994533157823	WITHOUT_CLASSIFICATION	5.466842177181463E-7	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999990354976274	WITHOUT_CLASSIFICATION	9.645023726892656E-7	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999996913028275	WITHOUT_CLASSIFICATION	3.086971725069812E-7	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.999999852164448	WITHOUT_CLASSIFICATION	1.4783555192323755E-7	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999998589235195	WITHOUT_CLASSIFICATION	1.4107648043678732E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.999999855673468	WITHOUT_CLASSIFICATION	1.4432653198541294E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999987854216685	WITHOUT_CLASSIFICATION	1.2145783315122773E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999995587207706	WITHOUT_CLASSIFICATION	4.4127922928308884E-7	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999996480479079	WITHOUT_CLASSIFICATION	3.519520921027977E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999995225989999	WITHOUT_CLASSIFICATION	4.774010000555779E-7	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999995801005569	WITHOUT_CLASSIFICATION	4.1989944301398524E-7	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999994749907074	WITHOUT_CLASSIFICATION	5.250092925749535E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999996042335076	WITHOUT_CLASSIFICATION	3.9576649240854414E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999997253510611	WITHOUT_CLASSIFICATION	2.746489389278232E-7	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999997120053336	WITHOUT_CLASSIFICATION	2.87994666541716E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999993130865619	WITHOUT_CLASSIFICATION	6.869134380711423E-7	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999993256670524	WITHOUT_CLASSIFICATION	6.743329475188154E-7	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999991390549879	WITHOUT_CLASSIFICATION	8.609450121235298E-7	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999996040251853	WITHOUT_CLASSIFICATION	3.9597481473525007E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999998110700165	WITHOUT_CLASSIFICATION	1.8892998361683494E-7	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999993816791766	WITHOUT_CLASSIFICATION	6.183208234751843E-7	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999989112254203	WITHOUT_CLASSIFICATION	1.0887745796470991E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999993657860531	WITHOUT_CLASSIFICATION	6.342139468836524E-7	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999995040134544	WITHOUT_CLASSIFICATION	4.959865455992663E-7	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999996540057641	WITHOUT_CLASSIFICATION	3.4599423590854046E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999997632255301	WITHOUT_CLASSIFICATION	2.3677446985990764E-7	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999994716755186	WITHOUT_CLASSIFICATION	5.28324481408588E-7	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999991277852012	WITHOUT_CLASSIFICATION	8.722147989579838E-7	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999989602787173	WITHOUT_CLASSIFICATION	1.0397212827505905E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999987717095239	WITHOUT_CLASSIFICATION	1.228290476090612E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999991688551089	WITHOUT_CLASSIFICATION	8.311448911594231E-7	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999993891112499	WITHOUT_CLASSIFICATION	6.108887500353771E-7	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999995898703931	WITHOUT_CLASSIFICATION	4.1012960689940106E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999993019554828	WITHOUT_CLASSIFICATION	6.98044517200334E-7	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999995328504134	WITHOUT_CLASSIFICATION	4.671495866453961E-7	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999996308143688	WITHOUT_CLASSIFICATION	3.691856311859769E-7	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999995371339108	WITHOUT_CLASSIFICATION	4.6286608930478036E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999999411318426	WITHOUT_CLASSIFICATION	5.886815740043644E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.999999411318426	WITHOUT_CLASSIFICATION	5.886815740043644E-7	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999990631937434	WITHOUT_CLASSIFICATION	9.368062566044569E-7	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999997043596123	WITHOUT_CLASSIFICATION	2.9564038768264333E-7	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999992681371921	WITHOUT_CLASSIFICATION	7.318628078677689E-7	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999996375092965	WITHOUT_CLASSIFICATION	3.6249070350627257E-7	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999976300309793	WITHOUT_CLASSIFICATION	2.3699690207780413E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999994799219016	WITHOUT_CLASSIFICATION	5.200780983965888E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999992523954423	WITHOUT_CLASSIFICATION	7.476045577487908E-7	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999993366701956	WITHOUT_CLASSIFICATION	6.633298044580496E-7	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999996787956159	WITHOUT_CLASSIFICATION	3.212043841336002E-7	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999990684810022	WITHOUT_CLASSIFICATION	9.3151899773673E-7	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999922806687533	WITHOUT_CLASSIFICATION	7.71933124665686E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999922806687533	WITHOUT_CLASSIFICATION	7.71933124665686E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999995400183954	WITHOUT_CLASSIFICATION	4.599816044992006E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999948020208549	WITHOUT_CLASSIFICATION	5.197979145056392E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999383188657256	WITHOUT_CLASSIFICATION	6.168113427438868E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999997495842	WITHOUT_CLASSIFICATION	2.504158179287058E-10	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998274082548	WITHOUT_CLASSIFICATION	1.7259174510468574E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998274082548	WITHOUT_CLASSIFICATION	1.7259174510468574E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998274082548	WITHOUT_CLASSIFICATION	1.7259174510468574E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999998274082548	WITHOUT_CLASSIFICATION	1.7259174510468574E-7	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9964159975072385	WITHOUT_CLASSIFICATION	0.0035840024927615375	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999999665782981	WITHOUT_CLASSIFICATION	3.3421701837408834E-8	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999994594099423	WITHOUT_CLASSIFICATION	5.405900576959713E-7	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999996492992366	WITHOUT_CLASSIFICATION	3.507007634099339E-7	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.999999067263009	WITHOUT_CLASSIFICATION	9.327369909940028E-7	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999995350740809	WITHOUT_CLASSIFICATION	4.649259190423076E-7	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999992026846697	WITHOUT_CLASSIFICATION	7.973153304033149E-7	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999998801262355	WITHOUT_CLASSIFICATION	1.1987376442949324E-7	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999998583034153	WITHOUT_CLASSIFICATION	1.4169658476429882E-7	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999994630348764	WITHOUT_CLASSIFICATION	5.369651235488628E-7	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999996468669474	WITHOUT_CLASSIFICATION	3.531330526382547E-7	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.999999822308654	WITHOUT_CLASSIFICATION	1.7769134604135E-7	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999993225167481	WITHOUT_CLASSIFICATION	6.774832520490696E-7	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999996557360612	WITHOUT_CLASSIFICATION	3.442639388069718E-7	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999995665885636	WITHOUT_CLASSIFICATION	4.3341143631719074E-7	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999998527660373	WITHOUT_CLASSIFICATION	1.47233962625427E-7	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999996551595726	WITHOUT_CLASSIFICATION	3.448404274029186E-7	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999992314842755	WITHOUT_CLASSIFICATION	7.685157246005683E-7	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999997085995211	WITHOUT_CLASSIFICATION	2.914004787833798E-7	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999995832155119	WITHOUT_CLASSIFICATION	4.167844881616902E-7	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999998216579505	WITHOUT_CLASSIFICATION	1.7834204951143954E-7	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999997735823882	WITHOUT_CLASSIFICATION	2.2641761190839347E-7	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999997268392832	WITHOUT_CLASSIFICATION	2.731607168220492E-7	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999995339170525	WITHOUT_CLASSIFICATION	4.6608294739136744E-7	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999998197549345	WITHOUT_CLASSIFICATION	1.8024506564922318E-7	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999996453549832	WITHOUT_CLASSIFICATION	3.546450168153669E-7	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999998705613653	WITHOUT_CLASSIFICATION	1.2943863465218185E-7	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999989618168191	WITHOUT_CLASSIFICATION	1.0381831808787019E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.999999577584287	WITHOUT_CLASSIFICATION	4.224157129484129E-7	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999993072387551	WITHOUT_CLASSIFICATION	6.927612448938808E-7	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999989324821648	WITHOUT_CLASSIFICATION	1.067517835210573E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999996529133218	WITHOUT_CLASSIFICATION	3.470866782131418E-7	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999989794933363	WITHOUT_CLASSIFICATION	1.020506663641004E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999994917615596	WITHOUT_CLASSIFICATION	5.08238440427948E-7	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999991986605474	WITHOUT_CLASSIFICATION	8.013394527032925E-7	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.999999278106414	WITHOUT_CLASSIFICATION	7.218935859883892E-7	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999992157836405	WITHOUT_CLASSIFICATION	7.842163596173845E-7	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999991334022377	WITHOUT_CLASSIFICATION	8.665977624491514E-7	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999996455315826	WITHOUT_CLASSIFICATION	3.5446841733904114E-7	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999992515894636	WITHOUT_CLASSIFICATION	7.484105363510732E-7	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999997254620163	WITHOUT_CLASSIFICATION	2.7453798372916557E-7	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999991974147653	WITHOUT_CLASSIFICATION	8.025852347569721E-7	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999992121396344	WITHOUT_CLASSIFICATION	7.878603656575021E-7	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999993264155644	WITHOUT_CLASSIFICATION	6.73584435468675E-7	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999988898206706	WITHOUT_CLASSIFICATION	1.1101793293134948E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999981879669848	WITHOUT_CLASSIFICATION	1.8120330151498551E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999991939425678	WITHOUT_CLASSIFICATION	8.060574322258559E-7	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999989115119803	WITHOUT_CLASSIFICATION	1.0884880197246495E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999993069034797	WITHOUT_CLASSIFICATION	6.930965203567383E-7	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999995244884452	WITHOUT_CLASSIFICATION	4.755115548634657E-7	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999992221667159	WITHOUT_CLASSIFICATION	7.778332841733079E-7	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.999999289842339	WITHOUT_CLASSIFICATION	7.101576610680701E-7	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.99999929738967	WITHOUT_CLASSIFICATION	7.026103300877883E-7	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999987683795986	WITHOUT_CLASSIFICATION	1.2316204014926426E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.999998390832011	WITHOUT_CLASSIFICATION	1.6091679890727396E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999993258180376	WITHOUT_CLASSIFICATION	6.741819623493678E-7	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999995656292078	WITHOUT_CLASSIFICATION	4.3437079220431674E-7	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999995550572607	WITHOUT_CLASSIFICATION	4.4494273941803204E-7	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999997852146295	WITHOUT_CLASSIFICATION	2.1478537038188435E-7	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999815854302	WITHOUT_CLASSIFICATION	1.8414569711279756E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999995895806199	WITHOUT_CLASSIFICATION	4.1041938021792296E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999828874484	WITHOUT_CLASSIFICATION	1.711255156113706E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999828874484	WITHOUT_CLASSIFICATION	1.711255156113706E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999828874484	WITHOUT_CLASSIFICATION	1.711255156113706E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999828874484	WITHOUT_CLASSIFICATION	1.711255156113706E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999828874484	WITHOUT_CLASSIFICATION	1.711255156113706E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999828874484	WITHOUT_CLASSIFICATION	1.711255156113706E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999828874484	WITHOUT_CLASSIFICATION	1.711255156113706E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999996466901536	WITHOUT_CLASSIFICATION	3.533098464056559E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999996466901536	WITHOUT_CLASSIFICATION	3.533098464056559E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999996466901536	WITHOUT_CLASSIFICATION	3.533098464056559E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999996466901536	WITHOUT_CLASSIFICATION	3.533098464056559E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999874670523561	WITHOUT_CLASSIFICATION	1.253294764392133E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999874670523561	WITHOUT_CLASSIFICATION	1.253294764392133E-5	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999998647385	WITHOUT_CLASSIFICATION	1.3526149554864018E-10	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999998009746	WITHOUT_CLASSIFICATION	1.990253969096391E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999998009746	WITHOUT_CLASSIFICATION	1.990253969096391E-9	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999258633089	WITHOUT_CLASSIFICATION	7.413669115630073E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999962502720462	WITHOUT_CLASSIFICATION	3.749727953942016E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999566179647	WITHOUT_CLASSIFICATION	4.338203520000547E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999566179647	WITHOUT_CLASSIFICATION	4.338203520000547E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999566179647	WITHOUT_CLASSIFICATION	4.338203520000547E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999566179647	WITHOUT_CLASSIFICATION	4.338203520000547E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999566179647	WITHOUT_CLASSIFICATION	4.338203520000547E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999566179647	WITHOUT_CLASSIFICATION	4.338203520000547E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999566179647	WITHOUT_CLASSIFICATION	4.338203520000547E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999718115709	WITHOUT_CLASSIFICATION	2.818842918577112E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998440881774	WITHOUT_CLASSIFICATION	1.5591182266019674E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998873933936616	WITHOUT_CLASSIFICATION	1.1260660633838713E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9998873933936616	WITHOUT_CLASSIFICATION	1.1260660633838713E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999872846908	WITHOUT_CLASSIFICATION	1.271530933656992E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999994792961389	WITHOUT_CLASSIFICATION	5.207038611234884E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999994792961389	WITHOUT_CLASSIFICATION	5.207038611234884E-7	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999995196106005	WITHOUT_CLASSIFICATION	4.803893995655552E-7	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.8890263473242912	IMPLEMENTATION	0.1109736526757088	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999994752314183	WITHOUT_CLASSIFICATION	5.247685816700429E-7	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999876844808029	WITHOUT_CLASSIFICATION	1.2315519197066828E-5	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999953988165	WITHOUT_CLASSIFICATION	4.6011835811341914E-9	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999995040760986	WITHOUT_CLASSIFICATION	4.959239013695977E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999809803019505	WITHOUT_CLASSIFICATION	1.9019698049520438E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999839479576	WITHOUT_CLASSIFICATION	1.605204229428119E-8	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999999965066496	WITHOUT_CLASSIFICATION	3.4933503023788327E-9	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999988822217458	WITHOUT_CLASSIFICATION	1.1177782541899296E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999999996787785	WITHOUT_CLASSIFICATION	3.212215070305648E-9	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999982985043804	WITHOUT_CLASSIFICATION	1.7014956195989917E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.999999999995767	WITHOUT_CLASSIFICATION	4.233002303240273E-12	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999483148802247	WITHOUT_CLASSIFICATION	5.168511977517183E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999376139117466	WITHOUT_CLASSIFICATION	6.238608825340516E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998994122205065	WITHOUT_CLASSIFICATION	1.0058777949348487E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999985375969	WITHOUT_CLASSIFICATION	1.462403116494936E-9	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998810559128045	WITHOUT_CLASSIFICATION	1.189440871955027E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999948288111851	WITHOUT_CLASSIFICATION	5.171188814924318E-6	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999948288111851	WITHOUT_CLASSIFICATION	5.171188814924318E-6	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999981978967989	WITHOUT_CLASSIFICATION	1.8021032011440428E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999527060628	WITHOUT_CLASSIFICATION	4.7293937156032035E-8	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999997784278085	WITHOUT_CLASSIFICATION	2.2157219147196917E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.999997970133442	WITHOUT_CLASSIFICATION	2.0298665579592982E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999906264578616	WITHOUT_CLASSIFICATION	9.373542138415159E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999906264578616	WITHOUT_CLASSIFICATION	9.373542138415159E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999906264578616	WITHOUT_CLASSIFICATION	9.373542138415159E-6	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999394774834395	WITHOUT_CLASSIFICATION	6.052251656050322E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999963696259809	WITHOUT_CLASSIFICATION	3.630374019046441E-6	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9991146372536791	WITHOUT_CLASSIFICATION	8.853627463207731E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999655073729908	WITHOUT_CLASSIFICATION	3.449262700909072E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999999857093	WITHOUT_CLASSIFICATION	1.429061630692748E-11	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999995031823055	WITHOUT_CLASSIFICATION	4.968176945062241E-7	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999992491774343	WITHOUT_CLASSIFICATION	7.5082256569736E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999995773732	WITHOUT_CLASSIFICATION	4.2262677558245165E-10	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998275696226033	WITHOUT_CLASSIFICATION	1.7243037739672317E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999998437590175	WITHOUT_CLASSIFICATION	1.562409825600303E-7	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999996484716933	WITHOUT_CLASSIFICATION	3.5152830660975336E-7	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999992459884568	WITHOUT_CLASSIFICATION	7.54011543112681E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.8212848296902345	WITHOUT_CLASSIFICATION	0.17871517030976547	IMPLEMENTATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999992219422378	WITHOUT_CLASSIFICATION	7.78057762329671E-7	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999999304928	WITHOUT_CLASSIFICATION	6.950723826198796E-11	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999999994362	WITHOUT_CLASSIFICATION	5.63810293814515E-12	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999998498334605	WITHOUT_CLASSIFICATION	1.5016653957742794E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999997002550004	WITHOUT_CLASSIFICATION	2.997449995928693E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999488034391557	WITHOUT_CLASSIFICATION	5.119656084418439E-5	IMPLEMENTATION
