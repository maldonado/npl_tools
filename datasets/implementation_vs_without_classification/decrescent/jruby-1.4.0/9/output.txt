// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.9936597809494518	WITHOUT_CLASSIFICATION	0.006340219050548194	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.6948441869522973	IMPLEMENTATION	0.30515581304770273	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.6814408082842567	IMPLEMENTATION	0.31855919171574326	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.603617069343149	IMPLEMENTATION	0.39638293065685104	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.7735694079894547	WITHOUT_CLASSIFICATION	0.22643059201054525	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.837573078805475	IMPLEMENTATION	0.16242692119452506	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.7358785385369342	WITHOUT_CLASSIFICATION	0.26412146146306575	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.813842958625935	WITHOUT_CLASSIFICATION	0.18615704137406497	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.813842958625935	WITHOUT_CLASSIFICATION	0.18615704137406497	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.9355012133909812	IMPLEMENTATION	0.06449878660901884	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9818402265216839	WITHOUT_CLASSIFICATION	0.018159773478316127	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9982834958982132	IMPLEMENTATION	0.0017165041017868858	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.9946267279597263	IMPLEMENTATION	0.005373272040273642	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9988127760824157	WITHOUT_CLASSIFICATION	0.0011872239175842543	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9328865128236817	IMPLEMENTATION	0.06711348717631821	WITHOUT_CLASSIFICATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.8058712699102322	IMPLEMENTATION	0.19412873008976783	WITHOUT_CLASSIFICATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.594828554842453	WITHOUT_CLASSIFICATION	0.4051714451575471	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.8448079011628918	IMPLEMENTATION	0.1551920988371082	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9039559707205675	WITHOUT_CLASSIFICATION	0.09604402927943248	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9888439706249151	WITHOUT_CLASSIFICATION	0.011156029375084862	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.5261664390727123	WITHOUT_CLASSIFICATION	0.47383356092728773	IMPLEMENTATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.6050145545286608	WITHOUT_CLASSIFICATION	0.3949854454713392	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.739383889201062	IMPLEMENTATION	0.260616110798938	WITHOUT_CLASSIFICATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9383869300066752	WITHOUT_CLASSIFICATION	0.06161306999332478	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9929040789201478	IMPLEMENTATION	0.0070959210798522505	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.7981575931407274	IMPLEMENTATION	0.2018424068592727	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9952599124863383	IMPLEMENTATION	0.004740087513661776	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9997143008445323	IMPLEMENTATION	2.8569915546767014E-4	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.9952599124863383	IMPLEMENTATION	0.004740087513661776	WITHOUT_CLASSIFICATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9997143008445323	IMPLEMENTATION	2.8569915546767014E-4	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.9702228111829476	IMPLEMENTATION	0.029777188817052335	WITHOUT_CLASSIFICATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.7506365011917316	WITHOUT_CLASSIFICATION	0.24936349880826847	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9997211868521279	IMPLEMENTATION	2.788131478722251E-4	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9935820885074247	IMPLEMENTATION	0.00641791149257534	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9610094683525513	WITHOUT_CLASSIFICATION	0.038990531647448645	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9610094683525513	WITHOUT_CLASSIFICATION	0.038990531647448645	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.6294902112072263	WITHOUT_CLASSIFICATION	0.3705097887927737	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.8884092307430933	IMPLEMENTATION	0.11159076925690667	WITHOUT_CLASSIFICATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.8260023415405965	IMPLEMENTATION	0.17399765845940354	WITHOUT_CLASSIFICATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9111232946045653	WITHOUT_CLASSIFICATION	0.08887670539543478	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9866565457250029	IMPLEMENTATION	0.013343454274997087	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9887649522848577	IMPLEMENTATION	0.011235047715142358	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9705008394873307	IMPLEMENTATION	0.029499160512669303	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9861504450684931	WITHOUT_CLASSIFICATION	0.013849554931506906	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9669897907154411	WITHOUT_CLASSIFICATION	0.03301020928455896	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.9307118440246129	IMPLEMENTATION	0.06928815597538705	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9924880510297392	WITHOUT_CLASSIFICATION	0.007511948970260794	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.6512060516606883	WITHOUT_CLASSIFICATION	0.3487939483393117	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.5070668663129521	IMPLEMENTATION	0.4929331336870479	WITHOUT_CLASSIFICATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.949012640355503	IMPLEMENTATION	0.05098735964449681	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9924880510297392	WITHOUT_CLASSIFICATION	0.007511948970260794	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9996301769459444	WITHOUT_CLASSIFICATION	3.698230540557183E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.601715670859719	WITHOUT_CLASSIFICATION	0.3982843291402811	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.9870070587909765	IMPLEMENTATION	0.012992941209023619	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9833652924357392	IMPLEMENTATION	0.01663470756426078	WITHOUT_CLASSIFICATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9722520298901467	WITHOUT_CLASSIFICATION	0.027747970109853297	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.5806095306660877	IMPLEMENTATION	0.4193904693339123	WITHOUT_CLASSIFICATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.7072935572288321	WITHOUT_CLASSIFICATION	0.2927064427711679	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9119721709247719	WITHOUT_CLASSIFICATION	0.08802782907522812	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9988328751734781	WITHOUT_CLASSIFICATION	0.00116712482652196	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9952831867582367	WITHOUT_CLASSIFICATION	0.004716813241763251	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9724701840840728	IMPLEMENTATION	0.027529815915927194	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.9724701840840728	IMPLEMENTATION	0.027529815915927194	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.7732483190135092	WITHOUT_CLASSIFICATION	0.2267516809864907	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999996511202691	IMPLEMENTATION	3.4887973091082354E-7	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.5855011607324523	WITHOUT_CLASSIFICATION	0.4144988392675477	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8080816274680264	WITHOUT_CLASSIFICATION	0.19191837253197372	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.8080816274680264	WITHOUT_CLASSIFICATION	0.19191837253197372	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.9949888676103119	IMPLEMENTATION	0.005011132389688164	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9689976297397056	IMPLEMENTATION	0.031002370260294367	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9752683442023288	IMPLEMENTATION	0.02473165579767127	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.7464229284589217	IMPLEMENTATION	0.2535770715410785	WITHOUT_CLASSIFICATION
// TODO: call ruby method	IMPLEMENTATION	0.7559985549606973	WITHOUT_CLASSIFICATION	0.24400144503930257	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.7559985549606973	WITHOUT_CLASSIFICATION	0.24400144503930257	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9958270006113968	IMPLEMENTATION	0.004172999388603203	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9054837067191747	IMPLEMENTATION	0.09451629328082527	WITHOUT_CLASSIFICATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.9999871591132454	WITHOUT_CLASSIFICATION	1.2840886754541116E-5	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.9992752189522037	IMPLEMENTATION	7.247810477962498E-4	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9867219202514479	IMPLEMENTATION	0.01327807974855216	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.987678001066993	IMPLEMENTATION	0.01232199893300699	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.9675037587367633	IMPLEMENTATION	0.03249624126323671	WITHOUT_CLASSIFICATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.5565022572385265	IMPLEMENTATION	0.4434977427614734	WITHOUT_CLASSIFICATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.7635238591221983	WITHOUT_CLASSIFICATION	0.23647614087780172	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.7635238591221983	WITHOUT_CLASSIFICATION	0.23647614087780172	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9864804273398498	WITHOUT_CLASSIFICATION	0.013519572660150256	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.962216047048865	WITHOUT_CLASSIFICATION	0.03778395295113504	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9923751608173952	WITHOUT_CLASSIFICATION	0.007624839182604769	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9923751608173952	WITHOUT_CLASSIFICATION	0.007624839182604769	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9498729692245691	WITHOUT_CLASSIFICATION	0.05012703077543096	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5767944633411922	WITHOUT_CLASSIFICATION	0.4232055366588078	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5767944633411922	WITHOUT_CLASSIFICATION	0.4232055366588078	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.5767944633411922	WITHOUT_CLASSIFICATION	0.4232055366588078	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.5691887850308303	WITHOUT_CLASSIFICATION	0.43081121496916974	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.5691887850308303	WITHOUT_CLASSIFICATION	0.43081121496916974	IMPLEMENTATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.9054438840913233	IMPLEMENTATION	0.09455611590867671	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9998086629438174	WITHOUT_CLASSIFICATION	1.9133705618257175E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.5301032900657692	WITHOUT_CLASSIFICATION	0.4698967099342308	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999801549786131	IMPLEMENTATION	1.984502138683815E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998308420681106	IMPLEMENTATION	1.6915793188948227E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998308420681106	IMPLEMENTATION	1.6915793188948227E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9998308420681106	IMPLEMENTATION	1.6915793188948227E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9866565457250029	IMPLEMENTATION	0.013343454274997087	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9866565457250029	IMPLEMENTATION	0.013343454274997087	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.8501034127365722	WITHOUT_CLASSIFICATION	0.1498965872634279	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.922368376078058	IMPLEMENTATION	0.07763162392194202	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9610094683525513	WITHOUT_CLASSIFICATION	0.038990531647448645	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9610094683525513	WITHOUT_CLASSIFICATION	0.038990531647448645	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.7208471428630224	IMPLEMENTATION	0.2791528571369777	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.8244325139584507	WITHOUT_CLASSIFICATION	0.17556748604154915	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.8058712699102322	IMPLEMENTATION	0.19412873008976783	WITHOUT_CLASSIFICATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9786638251891011	WITHOUT_CLASSIFICATION	0.021336174810898913	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9837408624312958	IMPLEMENTATION	0.016259137568704153	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9995229297588365	IMPLEMENTATION	4.7707024116361123E-4	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.9543561328314024	WITHOUT_CLASSIFICATION	0.0456438671685976	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999670599668765	WITHOUT_CLASSIFICATION	3.2940033123546284E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999995297728621	WITHOUT_CLASSIFICATION	4.702271378754172E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147547458	WITHOUT_CLASSIFICATION	9.852452541206312E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147547458	WITHOUT_CLASSIFICATION	9.852452541206312E-7	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270858294	WITHOUT_CLASSIFICATION	1.6672914170586102E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270858294	WITHOUT_CLASSIFICATION	1.6672914170586102E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807011486	WITHOUT_CLASSIFICATION	3.4319298851494774E-5	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999997225095522	WITHOUT_CLASSIFICATION	2.774904478308921E-7	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999997769679364	WITHOUT_CLASSIFICATION	2.2303206368167073E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999998214061836	WITHOUT_CLASSIFICATION	1.7859381633899125E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403428126	WITHOUT_CLASSIFICATION	2.225965718738633E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403428126	WITHOUT_CLASSIFICATION	2.225965718738633E-5	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999985350354319	WITHOUT_CLASSIFICATION	1.4649645681535607E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129458029	WITHOUT_CLASSIFICATION	5.568705419722616E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129458029	WITHOUT_CLASSIFICATION	5.568705419722616E-5	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999992981437834	WITHOUT_CLASSIFICATION	7.01856216551419E-7	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999998295254208	WITHOUT_CLASSIFICATION	1.704745791442017E-7	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117087	WITHOUT_CLASSIFICATION	3.4413882913106203E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117087	WITHOUT_CLASSIFICATION	3.4413882913106203E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117087	WITHOUT_CLASSIFICATION	3.4413882913106203E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117087	WITHOUT_CLASSIFICATION	3.4413882913106203E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117087	WITHOUT_CLASSIFICATION	3.4413882913106203E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117087	WITHOUT_CLASSIFICATION	3.4413882913106203E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999965586117087	WITHOUT_CLASSIFICATION	3.4413882913106203E-6	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765637029936	WITHOUT_CLASSIFICATION	2.3436297006315284E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765637029936	WITHOUT_CLASSIFICATION	2.3436297006315284E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765637029936	WITHOUT_CLASSIFICATION	2.3436297006315284E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765637029936	WITHOUT_CLASSIFICATION	2.3436297006315284E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765637029936	WITHOUT_CLASSIFICATION	2.3436297006315284E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765637029936	WITHOUT_CLASSIFICATION	2.3436297006315284E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999765637029936	WITHOUT_CLASSIFICATION	2.3436297006315284E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667472532	WITHOUT_CLASSIFICATION	9.64332527466822E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667472532	WITHOUT_CLASSIFICATION	9.64332527466822E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667472532	WITHOUT_CLASSIFICATION	9.64332527466822E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667472532	WITHOUT_CLASSIFICATION	9.64332527466822E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667472532	WITHOUT_CLASSIFICATION	9.64332527466822E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667472532	WITHOUT_CLASSIFICATION	9.64332527466822E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027112422	WITHOUT_CLASSIFICATION	3.129728875781885E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027112422	WITHOUT_CLASSIFICATION	3.129728875781885E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027112422	WITHOUT_CLASSIFICATION	3.129728875781885E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027112422	WITHOUT_CLASSIFICATION	3.129728875781885E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027112422	WITHOUT_CLASSIFICATION	3.129728875781885E-5	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027112422	WITHOUT_CLASSIFICATION	3.129728875781885E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999921704537196	WITHOUT_CLASSIFICATION	7.829546280400199E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999921704537196	WITHOUT_CLASSIFICATION	7.829546280400199E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999921704537196	WITHOUT_CLASSIFICATION	7.829546280400199E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999921704537196	WITHOUT_CLASSIFICATION	7.829546280400199E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999921704537196	WITHOUT_CLASSIFICATION	7.829546280400199E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999921704537196	WITHOUT_CLASSIFICATION	7.829546280400199E-5	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.999921704537196	WITHOUT_CLASSIFICATION	7.829546280400199E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231108166	WITHOUT_CLASSIFICATION	8.417688918332452E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231108166	WITHOUT_CLASSIFICATION	8.417688918332452E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231108166	WITHOUT_CLASSIFICATION	8.417688918332452E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231108166	WITHOUT_CLASSIFICATION	8.417688918332452E-5	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.999996138491184	WITHOUT_CLASSIFICATION	3.861508816019056E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.999996138491184	WITHOUT_CLASSIFICATION	3.861508816019056E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999999480653207	WITHOUT_CLASSIFICATION	5.1934679407589013E-8	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999999128473581	WITHOUT_CLASSIFICATION	8.71526419668355E-8	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999981039825795	WITHOUT_CLASSIFICATION	1.8960174205235884E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999999460157543	WITHOUT_CLASSIFICATION	5.3984245821452146E-8	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999985839407682	WITHOUT_CLASSIFICATION	1.4160592318432633E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999998602257093	WITHOUT_CLASSIFICATION	1.3977429070587217E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999998602257093	WITHOUT_CLASSIFICATION	1.3977429070587217E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999998602257093	WITHOUT_CLASSIFICATION	1.3977429070587217E-6	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999998602257093	WITHOUT_CLASSIFICATION	1.3977429070587217E-6	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999989894393703	WITHOUT_CLASSIFICATION	1.0105606296992545E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999980997241444	WITHOUT_CLASSIFICATION	1.9002758555551448E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999973907057058	WITHOUT_CLASSIFICATION	2.6092942941504746E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999975902843361	WITHOUT_CLASSIFICATION	2.4097156638472135E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999987474681661	WITHOUT_CLASSIFICATION	1.2525318338395425E-6	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999757231814	WITHOUT_CLASSIFICATION	2.427681853355912E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999996367252798	WITHOUT_CLASSIFICATION	3.6327472027537985E-7	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999974271624	WITHOUT_CLASSIFICATION	2.5728377146790103E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999998054205	WITHOUT_CLASSIFICATION	1.9457954303708787E-10	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999997982430837	WITHOUT_CLASSIFICATION	2.0175691639616484E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999988035868443	WITHOUT_CLASSIFICATION	1.1964131557185864E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999992808881513	WITHOUT_CLASSIFICATION	7.191118486393546E-7	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9998637410286415	WITHOUT_CLASSIFICATION	1.362589713584202E-4	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999999400723747	WITHOUT_CLASSIFICATION	5.992762525575402E-8	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999152457755	WITHOUT_CLASSIFICATION	8.475422453508923E-8	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999997330758357	WITHOUT_CLASSIFICATION	2.66924164361144E-7	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.999886116346465	WITHOUT_CLASSIFICATION	1.1388365353499756E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.999998602257093	WITHOUT_CLASSIFICATION	1.3977429070587217E-6	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999990347212105	WITHOUT_CLASSIFICATION	9.65278789467076E-7	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999836579664	WITHOUT_CLASSIFICATION	1.6342033564279955E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998792146985	WITHOUT_CLASSIFICATION	1.207853015690637E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9998592423311057	WITHOUT_CLASSIFICATION	1.4075766889433254E-4	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9999422432521476	WITHOUT_CLASSIFICATION	5.775674785238594E-5	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999226094698	WITHOUT_CLASSIFICATION	7.739053021546693E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999461957393	WITHOUT_CLASSIFICATION	5.380426072678208E-8	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999986504878711	WITHOUT_CLASSIFICATION	1.3495121289889742E-6	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999702117893488	WITHOUT_CLASSIFICATION	2.9788210651259362E-5	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999997132589715	WITHOUT_CLASSIFICATION	2.867410284694333E-7	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999999744184015	WITHOUT_CLASSIFICATION	2.5581598503774835E-8	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999997653383771	WITHOUT_CLASSIFICATION	2.3466162295687495E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.9999988816811848	WITHOUT_CLASSIFICATION	1.1183188151572302E-6	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999843381433975	WITHOUT_CLASSIFICATION	1.5661856602537266E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999964438268556	WITHOUT_CLASSIFICATION	3.5561731444338235E-6	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999999794980327	WITHOUT_CLASSIFICATION	2.0501967304970918E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999999594705367	WITHOUT_CLASSIFICATION	4.052946328322434E-8	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999804557093	WITHOUT_CLASSIFICATION	1.9544290754831528E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999993805443191	WITHOUT_CLASSIFICATION	6.194556808159894E-7	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999967897795	WITHOUT_CLASSIFICATION	3.210220536353437E-9	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999904014813896	WITHOUT_CLASSIFICATION	9.598518610358158E-6	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999996052801318	WITHOUT_CLASSIFICATION	3.947198681983145E-7	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999999912274306	WITHOUT_CLASSIFICATION	8.77256940353985E-9	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9997158173260099	WITHOUT_CLASSIFICATION	2.84182673990107E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999995182353	WITHOUT_CLASSIFICATION	4.817647001174975E-7	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.999999681818508	WITHOUT_CLASSIFICATION	3.1818149210616845E-7	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999894031373527	WITHOUT_CLASSIFICATION	1.0596862647347559E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999969552456343	WITHOUT_CLASSIFICATION	3.044754365856772E-6	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999992890602	WITHOUT_CLASSIFICATION	7.109397086538221E-10	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999998478597208	WITHOUT_CLASSIFICATION	1.521402792192376E-7	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999682567207	WITHOUT_CLASSIFICATION	3.1743279358975734E-8	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999998862028275	WITHOUT_CLASSIFICATION	1.1379717254380587E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999999996390604	WITHOUT_CLASSIFICATION	3.6093959611294557E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999005325054	WITHOUT_CLASSIFICATION	9.94674944614642E-8	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999897446580165	WITHOUT_CLASSIFICATION	1.0255341983479393E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999997612614442	WITHOUT_CLASSIFICATION	2.3873855583879606E-7	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999998856480272	WITHOUT_CLASSIFICATION	1.1435197283101793E-7	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.999999999938592	WITHOUT_CLASSIFICATION	6.140794165582622E-11	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999983636944229	WITHOUT_CLASSIFICATION	1.6363055771097976E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995677200396	WITHOUT_CLASSIFICATION	4.322799603928613E-7	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999999367021492	WITHOUT_CLASSIFICATION	6.329785087083708E-8	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881584203	WITHOUT_CLASSIFICATION	7.118415796091065E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999987099353786	WITHOUT_CLASSIFICATION	1.2900646213017464E-6	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9680019791742196	WITHOUT_CLASSIFICATION	0.03199802082578038	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.9680019791742196	WITHOUT_CLASSIFICATION	0.03199802082578038	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.9761448764676651	WITHOUT_CLASSIFICATION	0.023855123532334797	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999998736816301	WITHOUT_CLASSIFICATION	1.263183699113119E-7	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999972753036411	WITHOUT_CLASSIFICATION	2.7246963589215245E-6	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999987562005247	WITHOUT_CLASSIFICATION	1.2437994753818164E-6	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999994543129193	WITHOUT_CLASSIFICATION	5.456870806238269E-7	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999997119635081	WITHOUT_CLASSIFICATION	2.8803649182782145E-7	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999999271425369	WITHOUT_CLASSIFICATION	7.285746314044158E-8	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999975831139537	WITHOUT_CLASSIFICATION	2.4168860463296094E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881584203	WITHOUT_CLASSIFICATION	7.118415796091065E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999982828476	WITHOUT_CLASSIFICATION	1.717152397919395E-9	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999950788036233	WITHOUT_CLASSIFICATION	4.921196376697308E-6	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9999015334452082	WITHOUT_CLASSIFICATION	9.846655479175666E-5	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999997907893265	WITHOUT_CLASSIFICATION	2.092106734745376E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999999792869625	WITHOUT_CLASSIFICATION	2.0713037408985015E-8	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999945706873	WITHOUT_CLASSIFICATION	5.429312706439347E-9	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999945706873	WITHOUT_CLASSIFICATION	5.429312706439347E-9	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999999945706873	WITHOUT_CLASSIFICATION	5.429312706439347E-9	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999995698516725	WITHOUT_CLASSIFICATION	4.301483274844447E-7	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999999976270182	WITHOUT_CLASSIFICATION	2.3729819182525132E-9	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999976046494	WITHOUT_CLASSIFICATION	2.3953505017185494E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9999988308058659	WITHOUT_CLASSIFICATION	1.1691941340540687E-6	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999999562046904	WITHOUT_CLASSIFICATION	4.3795309570026094E-8	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999956061413	WITHOUT_CLASSIFICATION	4.393858726480828E-9	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9999935299530531	WITHOUT_CLASSIFICATION	6.470046946956416E-6	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999832049793	WITHOUT_CLASSIFICATION	1.6795020678075165E-8	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997820039808	WITHOUT_CLASSIFICATION	2.1799601914766665E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999997820039808	WITHOUT_CLASSIFICATION	2.1799601914766665E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999999465999672	WITHOUT_CLASSIFICATION	5.3400032947819206E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999986956160489	WITHOUT_CLASSIFICATION	1.3043839510943576E-6	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999462939669	WITHOUT_CLASSIFICATION	5.370603299745748E-8	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999999462939669	WITHOUT_CLASSIFICATION	5.370603299745748E-8	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999998875113634	WITHOUT_CLASSIFICATION	1.1248863665988548E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999997512059449	WITHOUT_CLASSIFICATION	2.487940550657411E-7	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999965346620007	WITHOUT_CLASSIFICATION	3.465337999257645E-6	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999992722824	WITHOUT_CLASSIFICATION	7.277175364815338E-10	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999990774801035	WITHOUT_CLASSIFICATION	9.225198965607948E-7	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999998947639374	WITHOUT_CLASSIFICATION	1.0523606269276182E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999997088673216	WITHOUT_CLASSIFICATION	2.911326784183179E-7	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999978838391018	WITHOUT_CLASSIFICATION	2.1161608981280066E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999963158206054	WITHOUT_CLASSIFICATION	3.6841793945661833E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999998837257353	WITHOUT_CLASSIFICATION	1.1627426461691782E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881584203	WITHOUT_CLASSIFICATION	7.118415796091065E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999998955942608	WITHOUT_CLASSIFICATION	1.0440573921700229E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999958204421	WITHOUT_CLASSIFICATION	4.179558010896523E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999979400266491	WITHOUT_CLASSIFICATION	2.059973350852613E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9988743566885017	WITHOUT_CLASSIFICATION	0.001125643311498308	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999995637629663	WITHOUT_CLASSIFICATION	4.3623703377842384E-7	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999941706980087	WITHOUT_CLASSIFICATION	5.829301991319502E-6	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999998167261082	WITHOUT_CLASSIFICATION	1.83273891799848E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.999999726518817	WITHOUT_CLASSIFICATION	2.7348118303688795E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999106990308	WITHOUT_CLASSIFICATION	8.930096917291348E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9999924571061017	WITHOUT_CLASSIFICATION	7.542893898248942E-6	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.999999773658329	WITHOUT_CLASSIFICATION	2.263416709825714E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999995847338	WITHOUT_CLASSIFICATION	4.1526607233819813E-10	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999996357922201	WITHOUT_CLASSIFICATION	3.642077799101926E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994082318331	WITHOUT_CLASSIFICATION	5.917681669242645E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999979480946	WITHOUT_CLASSIFICATION	2.0519054076953303E-9	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999899474579522	WITHOUT_CLASSIFICATION	1.0052542047853356E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999976601468057	WITHOUT_CLASSIFICATION	2.339853194228392E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999999847032353	WITHOUT_CLASSIFICATION	1.529676468708044E-8	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.999999711038279	WITHOUT_CLASSIFICATION	2.889617209122316E-7	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999989789699463	WITHOUT_CLASSIFICATION	1.0210300537154279E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999986083616921	WITHOUT_CLASSIFICATION	1.3916383078381923E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999708123815	WITHOUT_CLASSIFICATION	2.9187618635672657E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999999802831989	WITHOUT_CLASSIFICATION	1.971680109054543E-8	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.999999983469257	WITHOUT_CLASSIFICATION	1.6530742986323828E-8	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999936356698	WITHOUT_CLASSIFICATION	6.364330238154213E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9999853856633906	WITHOUT_CLASSIFICATION	1.4614336609440638E-5	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.999999477386357	WITHOUT_CLASSIFICATION	5.226136429791479E-7	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.999999920024654	WITHOUT_CLASSIFICATION	7.997534594891691E-8	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.9999999746809188	WITHOUT_CLASSIFICATION	2.5319081185087852E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.999999881323762	WITHOUT_CLASSIFICATION	1.1867623790519831E-7	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999943072686	WITHOUT_CLASSIFICATION	5.692731444300802E-9	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999999330279495	WITHOUT_CLASSIFICATION	6.697205046869682E-8	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999971362380985	WITHOUT_CLASSIFICATION	2.8637619015404974E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999996413702764	WITHOUT_CLASSIFICATION	3.5862972360216523E-7	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999986382014219	WITHOUT_CLASSIFICATION	1.361798578057924E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999950153638213	WITHOUT_CLASSIFICATION	4.984636178652012E-6	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998287148181	WITHOUT_CLASSIFICATION	1.7128518198033278E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999975746828532	WITHOUT_CLASSIFICATION	2.4253171467242717E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.9999991101678198	WITHOUT_CLASSIFICATION	8.898321800716148E-7	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999303095319	WITHOUT_CLASSIFICATION	6.969046815073305E-8	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999999914847555	WITHOUT_CLASSIFICATION	8.515244555334153E-9	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999999795226172	WITHOUT_CLASSIFICATION	2.0477382850259016E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999998977447211	WITHOUT_CLASSIFICATION	1.0225527888630755E-7	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998981529297	WITHOUT_CLASSIFICATION	1.0184707038992091E-7	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999984271868011	WITHOUT_CLASSIFICATION	1.5728131987906305E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999999376798535	WITHOUT_CLASSIFICATION	6.232014657037397E-8	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.999999843859909	WITHOUT_CLASSIFICATION	1.561400908987753E-7	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999844597790927	WITHOUT_CLASSIFICATION	1.5540220907347343E-5	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999998060986711	WITHOUT_CLASSIFICATION	1.9390132900409862E-7	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9999967549122647	WITHOUT_CLASSIFICATION	3.2450877354419836E-6	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9998622394729101	WITHOUT_CLASSIFICATION	1.3776052708992591E-4	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999703395924922	WITHOUT_CLASSIFICATION	2.9660407507856405E-5	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999918624240594	WITHOUT_CLASSIFICATION	8.137575940762225E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999999424229231	WITHOUT_CLASSIFICATION	5.757707691854219E-8	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999983897871015	WITHOUT_CLASSIFICATION	1.6102128985106186E-6	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999993755962561	WITHOUT_CLASSIFICATION	6.244037438616139E-7	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999995264186247	WITHOUT_CLASSIFICATION	4.735813753350341E-7	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999994307078165	WITHOUT_CLASSIFICATION	5.692921835211807E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999985983327032	WITHOUT_CLASSIFICATION	1.4016672967681522E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999904213560662	WITHOUT_CLASSIFICATION	9.578643933877109E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999991203004946	WITHOUT_CLASSIFICATION	8.796995052892416E-7	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999991203004946	WITHOUT_CLASSIFICATION	8.796995052892416E-7	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999986116105307	WITHOUT_CLASSIFICATION	1.388389469303928E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999986116105307	WITHOUT_CLASSIFICATION	1.388389469303928E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999999018754522	WITHOUT_CLASSIFICATION	9.812454787139609E-8	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999999018754522	WITHOUT_CLASSIFICATION	9.812454787139609E-8	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999993962181671	WITHOUT_CLASSIFICATION	6.03781832762111E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999993962181671	WITHOUT_CLASSIFICATION	6.03781832762111E-7	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999997667072353	WITHOUT_CLASSIFICATION	2.3329276458042834E-7	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.99994949770242	WITHOUT_CLASSIFICATION	5.0502297580025534E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998648731606	WITHOUT_CLASSIFICATION	1.3512683941160466E-7	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999986681745	WITHOUT_CLASSIFICATION	1.3318255290502445E-9	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999998000615233	WITHOUT_CLASSIFICATION	1.9993847674883232E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999999197877404	WITHOUT_CLASSIFICATION	8.021225953476117E-8	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999983162810383	WITHOUT_CLASSIFICATION	1.6837189617279743E-6	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999999798118789	WITHOUT_CLASSIFICATION	2.0188121044148033E-8	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999998462678447	WITHOUT_CLASSIFICATION	1.537321552696112E-7	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.999999992634258	WITHOUT_CLASSIFICATION	7.365742027745128E-9	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999984274246018	WITHOUT_CLASSIFICATION	1.5725753983056693E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999999693746875	WITHOUT_CLASSIFICATION	3.062531251917313E-8	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999999132052255	WITHOUT_CLASSIFICATION	8.679477444290447E-8	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999995257301064	WITHOUT_CLASSIFICATION	4.742698936274681E-7	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999999841206707	WITHOUT_CLASSIFICATION	1.587932931415382E-8	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999999793037697	WITHOUT_CLASSIFICATION	2.0696230231840878E-8	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999971939487021	WITHOUT_CLASSIFICATION	2.8060512977460945E-6	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999999885242943	WITHOUT_CLASSIFICATION	1.147570564776476E-8	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999999832248692	WITHOUT_CLASSIFICATION	1.677513086199318E-8	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998298200936792	WITHOUT_CLASSIFICATION	1.701799063208005E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999998243165903	WITHOUT_CLASSIFICATION	1.7568340971255215E-7	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999995900087898	WITHOUT_CLASSIFICATION	4.099912101998231E-7	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999847188971122	WITHOUT_CLASSIFICATION	1.528110288773551E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999999852916852	WITHOUT_CLASSIFICATION	1.4708314701919287E-8	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999999186298699	WITHOUT_CLASSIFICATION	8.137013005044285E-8	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999631472083	WITHOUT_CLASSIFICATION	3.6852791726714745E-8	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999994247953969	WITHOUT_CLASSIFICATION	5.752046030977972E-7	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999595598649453	WITHOUT_CLASSIFICATION	4.0440135054584214E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999595598649453	WITHOUT_CLASSIFICATION	4.0440135054584214E-5	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999999891678102	WITHOUT_CLASSIFICATION	1.0832189800856028E-8	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999985324100799	WITHOUT_CLASSIFICATION	1.4675899202153717E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999963442522851	WITHOUT_CLASSIFICATION	3.6557477148789996E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999987041028	WITHOUT_CLASSIFICATION	1.2958971760894365E-9	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.999999980960645	WITHOUT_CLASSIFICATION	1.9039354979839663E-8	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999999496010569	WITHOUT_CLASSIFICATION	5.039894306716898E-8	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999946463439479	WITHOUT_CLASSIFICATION	5.3536560521068E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999946463439479	WITHOUT_CLASSIFICATION	5.3536560521068E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999999634683728	WITHOUT_CLASSIFICATION	3.6531627117202377E-8	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.9929921347237654	WITHOUT_CLASSIFICATION	0.007007865276234616	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999769840805	WITHOUT_CLASSIFICATION	2.301591955210075E-8	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999999769840805	WITHOUT_CLASSIFICATION	2.301591955210075E-8	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.999999979139811	WITHOUT_CLASSIFICATION	2.0860189112064984E-8	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999995385920859	WITHOUT_CLASSIFICATION	4.6140791412481804E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999995385920859	WITHOUT_CLASSIFICATION	4.6140791412481804E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999479707571125	WITHOUT_CLASSIFICATION	5.202924288756665E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999479707571125	WITHOUT_CLASSIFICATION	5.202924288756665E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996108417448	WITHOUT_CLASSIFICATION	3.891582551629089E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996108417448	WITHOUT_CLASSIFICATION	3.891582551629089E-7	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999998830435525	WITHOUT_CLASSIFICATION	1.1695644758587808E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999998462834238	WITHOUT_CLASSIFICATION	1.5371657621438951E-7	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999933022955	WITHOUT_CLASSIFICATION	6.69770453546145E-9	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999978963737	WITHOUT_CLASSIFICATION	2.1036263113503314E-9	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999995679788	WITHOUT_CLASSIFICATION	4.3202112546017853E-10	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999656560595	WITHOUT_CLASSIFICATION	3.434394047722026E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999712850849	WITHOUT_CLASSIFICATION	2.8714915186270055E-8	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999579367662	WITHOUT_CLASSIFICATION	4.20632338730843E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999999712850849	WITHOUT_CLASSIFICATION	2.8714915186270055E-8	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9999199494064729	WITHOUT_CLASSIFICATION	8.0050593527105E-5	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.999999393336222	WITHOUT_CLASSIFICATION	6.066637780004149E-7	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999998416968447	WITHOUT_CLASSIFICATION	1.583031552516048E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999965621765278	WITHOUT_CLASSIFICATION	3.4378234722365415E-6	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999999606970476	WITHOUT_CLASSIFICATION	3.930295235440508E-8	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.9999486572620688	WITHOUT_CLASSIFICATION	5.134273793118232E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999919996226607	WITHOUT_CLASSIFICATION	8.0003773393429E-6	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999961376524891	WITHOUT_CLASSIFICATION	3.8623475108406E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999622686415	WITHOUT_CLASSIFICATION	3.773135853545109E-8	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999999166028761	WITHOUT_CLASSIFICATION	8.339712378814917E-8	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999970405143	WITHOUT_CLASSIFICATION	2.9594856644227145E-9	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999999819753742	WITHOUT_CLASSIFICATION	1.80246257901003E-8	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9998898964855791	WITHOUT_CLASSIFICATION	1.1010351442088024E-4	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999996685532465	WITHOUT_CLASSIFICATION	3.314467534743581E-7	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999998302516668	WITHOUT_CLASSIFICATION	1.697483331750621E-7	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999978084821	WITHOUT_CLASSIFICATION	2.1915177393221906E-9	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999963404235193	WITHOUT_CLASSIFICATION	3.659576480650812E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999887136640078	WITHOUT_CLASSIFICATION	1.128633599231047E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9980015461451411	WITHOUT_CLASSIFICATION	0.001998453854858892	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999769343166807	WITHOUT_CLASSIFICATION	2.3065683319371464E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999999980156821	WITHOUT_CLASSIFICATION	1.984317861153284E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999980656448738	WITHOUT_CLASSIFICATION	1.9343551261560935E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999884641805	WITHOUT_CLASSIFICATION	1.1535819527491555E-8	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999963440107958	WITHOUT_CLASSIFICATION	3.6559892040080604E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.999999319957398	WITHOUT_CLASSIFICATION	6.800426020638034E-7	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999998436208325	WITHOUT_CLASSIFICATION	1.563791675549249E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999979234265	WITHOUT_CLASSIFICATION	2.0765734814792096E-9	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999993377030387	WITHOUT_CLASSIFICATION	6.622969612077672E-7	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999994146221	WITHOUT_CLASSIFICATION	5.853778199247114E-10	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999999634312565	WITHOUT_CLASSIFICATION	3.6568743424091386E-8	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999999846289322	WITHOUT_CLASSIFICATION	1.537106782255536E-8	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999999381616897	WITHOUT_CLASSIFICATION	6.183831030864999E-8	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999977655437	WITHOUT_CLASSIFICATION	2.234456318278115E-9	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999994573163177	WITHOUT_CLASSIFICATION	5.426836823479793E-7	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999996600516678	WITHOUT_CLASSIFICATION	3.3994833213300906E-7	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999999938315671	WITHOUT_CLASSIFICATION	6.168432850203672E-9	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999999959393422	WITHOUT_CLASSIFICATION	4.060657794613832E-9	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999995280597892	WITHOUT_CLASSIFICATION	4.7194021069821196E-7	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999997568656649	WITHOUT_CLASSIFICATION	2.431343350475696E-7	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999986155885	WITHOUT_CLASSIFICATION	1.3844114099739275E-9	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999973800857	WITHOUT_CLASSIFICATION	2.619914332604005E-9	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.99999993950385	WITHOUT_CLASSIFICATION	6.049614996680016E-8	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999999705429689	WITHOUT_CLASSIFICATION	2.9457031172225376E-8	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999999881519357	WITHOUT_CLASSIFICATION	1.1848064212501078E-8	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999999975248036	WITHOUT_CLASSIFICATION	2.4751964231902417E-9	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999999950918647	WITHOUT_CLASSIFICATION	4.908135360528511E-9	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999999989479257	WITHOUT_CLASSIFICATION	1.0520743147341766E-9	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999999521687432	WITHOUT_CLASSIFICATION	4.783125677831468E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999451567853	WITHOUT_CLASSIFICATION	5.484321483108377E-8	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999989186680834	WITHOUT_CLASSIFICATION	1.0813319164821177E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.99999804820844	WITHOUT_CLASSIFICATION	1.9517915601273535E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999584674228	WITHOUT_CLASSIFICATION	4.1532577231556526E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999978734341236	WITHOUT_CLASSIFICATION	2.126565876412138E-6	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999993012318199	WITHOUT_CLASSIFICATION	6.987681800446428E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999881393556	WITHOUT_CLASSIFICATION	1.1860644396264837E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.999999881393556	WITHOUT_CLASSIFICATION	1.1860644396264837E-7	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999874168495	WITHOUT_CLASSIFICATION	1.2583150486524016E-8	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999343672623	WITHOUT_CLASSIFICATION	6.563273771513829E-8	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999972948141	WITHOUT_CLASSIFICATION	2.7051858015811588E-9	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999951475362996	WITHOUT_CLASSIFICATION	4.852463700456657E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999997357032054	WITHOUT_CLASSIFICATION	2.6429679458657965E-7	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999997101175689	WITHOUT_CLASSIFICATION	2.8988243106423737E-7	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999999709506013	WITHOUT_CLASSIFICATION	2.9049398704510375E-8	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.9999863952726572	WITHOUT_CLASSIFICATION	1.3604727342755944E-5	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999511403286839	WITHOUT_CLASSIFICATION	4.885967131613216E-5	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999999893068481	WITHOUT_CLASSIFICATION	1.0693151837804403E-8	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999995159018661	WITHOUT_CLASSIFICATION	4.840981339856513E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999995159018661	WITHOUT_CLASSIFICATION	4.840981339856513E-7	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9746787991641873	WITHOUT_CLASSIFICATION	0.025321200835812654	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999972144456969	WITHOUT_CLASSIFICATION	2.7855543031380833E-6	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999988376390168	WITHOUT_CLASSIFICATION	1.1623609833110755E-6	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999991705921	WITHOUT_CLASSIFICATION	8.294080020392174E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999996734895	WITHOUT_CLASSIFICATION	3.2651039928287356E-10	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999997526970207	WITHOUT_CLASSIFICATION	2.473029792573837E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999999994499433	WITHOUT_CLASSIFICATION	5.500566890410931E-9	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999934108078	WITHOUT_CLASSIFICATION	6.5891922988749785E-9	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999994651146928	WITHOUT_CLASSIFICATION	5.348853071631605E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999509170835327	WITHOUT_CLASSIFICATION	4.908291646734867E-5	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999996784686	WITHOUT_CLASSIFICATION	3.215313699858154E-10	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999999414663114	WITHOUT_CLASSIFICATION	5.85336884365578E-8	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999989689853269	WITHOUT_CLASSIFICATION	1.0310146731860738E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999989689853269	WITHOUT_CLASSIFICATION	1.0310146731860738E-6	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999990978074248	WITHOUT_CLASSIFICATION	9.021925751974349E-7	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999964095119585	WITHOUT_CLASSIFICATION	3.590488041531316E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999999359573449	WITHOUT_CLASSIFICATION	6.404265510656027E-8	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999958713290451	WITHOUT_CLASSIFICATION	4.12867095482942E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999978374210113	WITHOUT_CLASSIFICATION	2.162578988718029E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.999999988879553	WITHOUT_CLASSIFICATION	1.1120447038007263E-8	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999998976445813	WITHOUT_CLASSIFICATION	1.0235541880329986E-7	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999870179878	WITHOUT_CLASSIFICATION	1.2982012348768005E-8	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9998575710865969	WITHOUT_CLASSIFICATION	1.4242891340322434E-4	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.999999968588251	WITHOUT_CLASSIFICATION	3.14117489860796E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999988376390168	WITHOUT_CLASSIFICATION	1.1623609833110755E-6	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999967248625176	WITHOUT_CLASSIFICATION	3.275137482425955E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999998925704521	WITHOUT_CLASSIFICATION	1.0742954782008907E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.999999980142108	WITHOUT_CLASSIFICATION	1.985789199546602E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999994450037981	WITHOUT_CLASSIFICATION	5.549962018663447E-7	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999998902977122	WITHOUT_CLASSIFICATION	1.0970228776276665E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.9999999958773652	WITHOUT_CLASSIFICATION	4.122634787197172E-9	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.999969168511806	WITHOUT_CLASSIFICATION	3.083148819407501E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999970379864382	WITHOUT_CLASSIFICATION	2.9620135618395496E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999911543515	WITHOUT_CLASSIFICATION	8.845648508115931E-9	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999688640803343	WITHOUT_CLASSIFICATION	3.113591966567838E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999522698322041	WITHOUT_CLASSIFICATION	4.773016779590807E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999999909914119	WITHOUT_CLASSIFICATION	9.008588115342848E-9	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.99999787353174	WITHOUT_CLASSIFICATION	2.1264682600565534E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9999935250343515	WITHOUT_CLASSIFICATION	6.474965648442954E-6	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.99999915322958	WITHOUT_CLASSIFICATION	8.467704200203019E-7	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999998859017553	WITHOUT_CLASSIFICATION	1.1409824467261104E-7	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999999010550351	WITHOUT_CLASSIFICATION	9.894496480782678E-8	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999998739539525	WITHOUT_CLASSIFICATION	1.260460474226424E-7	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999972170372241	WITHOUT_CLASSIFICATION	2.782962775872423E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999999985615898	WITHOUT_CLASSIFICATION	1.4384101753777393E-9	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999999755617	WITHOUT_CLASSIFICATION	2.4438383134297705E-11	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999945251050955	WITHOUT_CLASSIFICATION	5.474894904529719E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999999933527712	WITHOUT_CLASSIFICATION	6.647228803810787E-8	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999740868236237	WITHOUT_CLASSIFICATION	2.5913176376299024E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999996847528057	WITHOUT_CLASSIFICATION	3.152471943692286E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999996485364	WITHOUT_CLASSIFICATION	3.514635529399745E-10	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999996190633738	WITHOUT_CLASSIFICATION	3.8093662623084587E-7	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.999999715746316	WITHOUT_CLASSIFICATION	2.8425368412940487E-7	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999986321036073	WITHOUT_CLASSIFICATION	1.367896392699332E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999998456110368	WITHOUT_CLASSIFICATION	1.5438896303694688E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999995664952583	WITHOUT_CLASSIFICATION	4.335047416838373E-7	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999995664952583	WITHOUT_CLASSIFICATION	4.335047416838373E-7	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9993573836690008	WITHOUT_CLASSIFICATION	6.426163309991726E-4	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9997679148812674	WITHOUT_CLASSIFICATION	2.3208511873270166E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999992231757	WITHOUT_CLASSIFICATION	7.768243219449841E-10	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9995912753005012	WITHOUT_CLASSIFICATION	4.0872469949876914E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999972492373058	WITHOUT_CLASSIFICATION	2.7507626942430688E-6	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998953230541	WITHOUT_CLASSIFICATION	1.0467694591094483E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999992881584203	WITHOUT_CLASSIFICATION	7.118415796091065E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999615472865	WITHOUT_CLASSIFICATION	3.845271348019664E-8	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.999999822067207	WITHOUT_CLASSIFICATION	1.7793279297367395E-7	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999998498449848	WITHOUT_CLASSIFICATION	1.501550152675029E-7	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999999379199717	WITHOUT_CLASSIFICATION	6.20800283162901E-8	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999999001968006	WITHOUT_CLASSIFICATION	9.980319929015752E-8	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999817396248	WITHOUT_CLASSIFICATION	1.8260375241992287E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999999303095319	WITHOUT_CLASSIFICATION	6.969046815073305E-8	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9999493003600285	WITHOUT_CLASSIFICATION	5.069963997141177E-5	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999964445095789	WITHOUT_CLASSIFICATION	3.555490421100288E-6	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999999483912569	WITHOUT_CLASSIFICATION	5.16087430411972E-8	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999885041869	WITHOUT_CLASSIFICATION	1.1495813095248998E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999998014215311	WITHOUT_CLASSIFICATION	1.9857846878523472E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999987922035152	WITHOUT_CLASSIFICATION	1.2077964848235808E-6	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.999985317499451	WITHOUT_CLASSIFICATION	1.4682500549016652E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.999985317499451	WITHOUT_CLASSIFICATION	1.4682500549016652E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.9999987394614663	WITHOUT_CLASSIFICATION	1.2605385337141061E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999954495039793	WITHOUT_CLASSIFICATION	4.550496020573222E-6	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999997473404354	WITHOUT_CLASSIFICATION	2.5265956451527496E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999999987292716	WITHOUT_CLASSIFICATION	1.2707284553854826E-9	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999807116287	WITHOUT_CLASSIFICATION	1.9288371430792953E-8	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9980431247346819	WITHOUT_CLASSIFICATION	0.001956875265318142	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999750544476	WITHOUT_CLASSIFICATION	2.4945552393178622E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998866573	WITHOUT_CLASSIFICATION	1.1334261799161463E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999993485049875	WITHOUT_CLASSIFICATION	6.514950124917792E-7	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999458105261638	WITHOUT_CLASSIFICATION	5.418947383609684E-5	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999991954252414	WITHOUT_CLASSIFICATION	8.045747584764041E-7	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999999403561552	WITHOUT_CLASSIFICATION	5.964384469328052E-8	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999966119700423	WITHOUT_CLASSIFICATION	3.3880299577003E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.999999998962836	WITHOUT_CLASSIFICATION	1.0371640194809765E-9	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999989474127989	WITHOUT_CLASSIFICATION	1.0525872011391274E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999995654892588	WITHOUT_CLASSIFICATION	4.345107411712872E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999983987488857	WITHOUT_CLASSIFICATION	1.601251114211876E-6	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999998176832209	WITHOUT_CLASSIFICATION	1.823167790832131E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999925292051	WITHOUT_CLASSIFICATION	7.470794894687663E-9	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999992329204	WITHOUT_CLASSIFICATION	7.670795007843337E-10	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999887587275661	WITHOUT_CLASSIFICATION	1.1241272433889051E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999995425212405	WITHOUT_CLASSIFICATION	4.5747875952779564E-7	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999999428653428	WITHOUT_CLASSIFICATION	5.713465721733496E-8	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999995959446296	WITHOUT_CLASSIFICATION	4.040553703779297E-7	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.999999738101613	WITHOUT_CLASSIFICATION	2.6189838699013043E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999992934333006	WITHOUT_CLASSIFICATION	7.065666994042409E-7	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999979958401519	WITHOUT_CLASSIFICATION	2.004159848098835E-6	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999999843657101	WITHOUT_CLASSIFICATION	1.5634289857499398E-8	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999997635987685	WITHOUT_CLASSIFICATION	2.364012315359998E-7	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999996940674745	WITHOUT_CLASSIFICATION	3.059325254680364E-7	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999995529922671	WITHOUT_CLASSIFICATION	4.470077329597164E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999961959227619	WITHOUT_CLASSIFICATION	3.804077238107848E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999996216651261	WITHOUT_CLASSIFICATION	3.783348738279121E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999996398931116	WITHOUT_CLASSIFICATION	3.601068884845107E-7	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999957564865	WITHOUT_CLASSIFICATION	4.24351351773193E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999999905591	WITHOUT_CLASSIFICATION	9.440791970250015E-12	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999982120332	WITHOUT_CLASSIFICATION	1.787966783596739E-9	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999554680534714	WITHOUT_CLASSIFICATION	4.4531946528673336E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.999989071372214	WITHOUT_CLASSIFICATION	1.0928627786027584E-5	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999934595415266	WITHOUT_CLASSIFICATION	6.540458473373226E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999994294148	WITHOUT_CLASSIFICATION	5.705853705951407E-10	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.99999983491054	WITHOUT_CLASSIFICATION	1.650894599206189E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.999999936431384	WITHOUT_CLASSIFICATION	6.35686159744901E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999998302877614	WITHOUT_CLASSIFICATION	1.697122385786917E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999999541628815	WITHOUT_CLASSIFICATION	4.583711843728983E-8	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999998302877614	WITHOUT_CLASSIFICATION	1.697122385786917E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998127189175	WITHOUT_CLASSIFICATION	1.8728108247547075E-7	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9946673357304847	WITHOUT_CLASSIFICATION	0.005332664269515289	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999969115749548	WITHOUT_CLASSIFICATION	3.088425045120884E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6233623343700716	IMPLEMENTATION	0.3766376656299284	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999997044376832	WITHOUT_CLASSIFICATION	2.9556231685903595E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999995389291978	WITHOUT_CLASSIFICATION	4.6107080224877065E-7	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999999938555878	WITHOUT_CLASSIFICATION	6.144412145643417E-9	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999949174431	WITHOUT_CLASSIFICATION	5.082556952145854E-9	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999817204004826	WITHOUT_CLASSIFICATION	1.827959951732593E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.7635629884530375	IMPLEMENTATION	0.23643701154696264	WITHOUT_CLASSIFICATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9991274882976533	WITHOUT_CLASSIFICATION	8.725117023468177E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999973321533646	WITHOUT_CLASSIFICATION	2.667846635449314E-6	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999531709604911	WITHOUT_CLASSIFICATION	4.68290395088711E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999978263553283	WITHOUT_CLASSIFICATION	2.1736446717211895E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9793050745064453	WITHOUT_CLASSIFICATION	0.02069492549355463	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9905861111201534	WITHOUT_CLASSIFICATION	0.009413888879846583	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9997351897893332	WITHOUT_CLASSIFICATION	2.6481021066674927E-4	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999908246479	WITHOUT_CLASSIFICATION	9.175352202480004E-9	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999981259215116	WITHOUT_CLASSIFICATION	1.8740784882959763E-6	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999968043445535	WITHOUT_CLASSIFICATION	3.195655446363876E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999972858623312	WITHOUT_CLASSIFICATION	2.7141376688124455E-6	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999875945262	WITHOUT_CLASSIFICATION	1.2405473790874719E-8	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999996865378433	WITHOUT_CLASSIFICATION	3.1346215669479973E-7	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999998500251016	WITHOUT_CLASSIFICATION	1.4997489838192948E-7	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999991255297382	WITHOUT_CLASSIFICATION	8.744702618089033E-7	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999985546658774	WITHOUT_CLASSIFICATION	1.4453341226264233E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999951884572	WITHOUT_CLASSIFICATION	4.8115428647285185E-9	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.9999999292748696	WITHOUT_CLASSIFICATION	7.072513040788893E-8	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999988035868443	WITHOUT_CLASSIFICATION	1.1964131557185864E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999999581410558	WITHOUT_CLASSIFICATION	4.1858944160616915E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997409365066	WITHOUT_CLASSIFICATION	2.590634933991478E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999994652347848	WITHOUT_CLASSIFICATION	5.347652152892287E-7	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999993723878039	WITHOUT_CLASSIFICATION	6.276121961675348E-7	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999993320938959	WITHOUT_CLASSIFICATION	6.679061041631584E-7	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999997857291562	WITHOUT_CLASSIFICATION	2.1427084380433437E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999999055754083	WITHOUT_CLASSIFICATION	9.44245917915955E-8	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999999470583	WITHOUT_CLASSIFICATION	5.294162850989222E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999792706165	WITHOUT_CLASSIFICATION	2.072938354781244E-8	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999920063975517	WITHOUT_CLASSIFICATION	7.993602448240193E-6	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999999494083293	WITHOUT_CLASSIFICATION	5.05916707310713E-8	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.999916034306547	WITHOUT_CLASSIFICATION	8.396569345304394E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999989981742348	WITHOUT_CLASSIFICATION	1.0018257653105996E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.999999993626962	WITHOUT_CLASSIFICATION	6.3730379049342605E-9	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999964032575996	WITHOUT_CLASSIFICATION	3.5967424004841097E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999964032575996	WITHOUT_CLASSIFICATION	3.5967424004841097E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.999998602465561	WITHOUT_CLASSIFICATION	1.3975344388753814E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999999768569925	WITHOUT_CLASSIFICATION	2.3143007525218396E-8	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999999741633873	WITHOUT_CLASSIFICATION	2.5836612716053705E-8	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999991288	WITHOUT_CLASSIFICATION	8.712062558838108E-13	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999994	WITHOUT_CLASSIFICATION	5.760877440832283E-16	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999878069092	WITHOUT_CLASSIFICATION	1.2193090817630446E-8	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999930228529019	WITHOUT_CLASSIFICATION	6.977147097987052E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999997268869226	WITHOUT_CLASSIFICATION	2.731130774575927E-7	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999994544215871	WITHOUT_CLASSIFICATION	5.455784129961697E-7	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999993185289	WITHOUT_CLASSIFICATION	6.814710174476143E-10	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.999999998585109	WITHOUT_CLASSIFICATION	1.4148910338661062E-9	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999967752061	WITHOUT_CLASSIFICATION	3.2247938489248538E-9	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999999608163439	WITHOUT_CLASSIFICATION	3.918365611681305E-8	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999231525956941	WITHOUT_CLASSIFICATION	7.684740430599819E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999488495924	WITHOUT_CLASSIFICATION	5.115040756950481E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9996496709529686	WITHOUT_CLASSIFICATION	3.5032904703136743E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999998756222392	WITHOUT_CLASSIFICATION	1.2437776064665106E-7	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999971018335	WITHOUT_CLASSIFICATION	2.8981663969236274E-9	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999999879533947	WITHOUT_CLASSIFICATION	1.2046605390999493E-8	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999892784152	WITHOUT_CLASSIFICATION	1.0721584765428923E-8	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999479334363004	WITHOUT_CLASSIFICATION	5.2066563699598846E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9996827712251611	WITHOUT_CLASSIFICATION	3.172287748388508E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999646262590848	WITHOUT_CLASSIFICATION	3.537374091511872E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999998414847886	WITHOUT_CLASSIFICATION	1.5851521136643258E-7	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999895417846	WITHOUT_CLASSIFICATION	1.0458215420972525E-8	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999801996374	WITHOUT_CLASSIFICATION	1.9800362577944356E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999210013	WITHOUT_CLASSIFICATION	7.899880121307166E-11	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999999751166395	WITHOUT_CLASSIFICATION	2.488336047350541E-8	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999857102884	WITHOUT_CLASSIFICATION	1.4289711630994057E-8	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.999999998430087	WITHOUT_CLASSIFICATION	1.569912966778289E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999993590502593	WITHOUT_CLASSIFICATION	6.409497407287571E-7	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999999439512096	WITHOUT_CLASSIFICATION	5.6048790433292465E-8	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999962060391	WITHOUT_CLASSIFICATION	3.793960870925199E-9	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999972541820636	WITHOUT_CLASSIFICATION	2.745817936392142E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999987967433	WITHOUT_CLASSIFICATION	1.2032567372821413E-9	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999904580218375	WITHOUT_CLASSIFICATION	9.541978162561915E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998242227562	WITHOUT_CLASSIFICATION	1.7577724374525125E-7	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998753286582	WITHOUT_CLASSIFICATION	1.246713417978557E-7	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999381741054317	WITHOUT_CLASSIFICATION	6.182589456823753E-5	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999445546479	WITHOUT_CLASSIFICATION	5.544535216469104E-8	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.99999946474059	WITHOUT_CLASSIFICATION	5.352594099703667E-7	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9988256159263872	WITHOUT_CLASSIFICATION	0.0011743840736127091	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9999870185929194	WITHOUT_CLASSIFICATION	1.2981407080669463E-5	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999009412979	WITHOUT_CLASSIFICATION	9.905870205698375E-8	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999815551396497	WITHOUT_CLASSIFICATION	1.8444860350279848E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992959705974	WITHOUT_CLASSIFICATION	7.040294025926512E-7	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999994221217259	WITHOUT_CLASSIFICATION	5.778782740622481E-7	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.999999964419443	WITHOUT_CLASSIFICATION	3.5580556847932374E-8	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999986664479111	WITHOUT_CLASSIFICATION	1.333552088859672E-6	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999659216516634	WITHOUT_CLASSIFICATION	3.407834833669168E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999996105003962	WITHOUT_CLASSIFICATION	3.8949960381186687E-7	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.999999274160197	WITHOUT_CLASSIFICATION	7.258398030689942E-7	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999999645244221	WITHOUT_CLASSIFICATION	3.547557794606306E-8	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999877287978	WITHOUT_CLASSIFICATION	1.2271202086615972E-8	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999997930001563	WITHOUT_CLASSIFICATION	2.0699984371320232E-7	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999982949006503	WITHOUT_CLASSIFICATION	1.705099349642272E-6	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.999999987415822	WITHOUT_CLASSIFICATION	1.2584177997754536E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999990653722	WITHOUT_CLASSIFICATION	9.346278049571512E-9	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999833739124031	WITHOUT_CLASSIFICATION	1.6626087596916313E-5	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998706645231	WITHOUT_CLASSIFICATION	1.293354768942311E-7	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999999928693368	WITHOUT_CLASSIFICATION	7.130663197293685E-9	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999999551876884	WITHOUT_CLASSIFICATION	4.481231162701327E-8	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999999249609	WITHOUT_CLASSIFICATION	7.50390582417534E-11	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999935547371	WITHOUT_CLASSIFICATION	6.445262815569613E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999263743744992	WITHOUT_CLASSIFICATION	7.362562550080764E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999999244029805	WITHOUT_CLASSIFICATION	7.559701943595657E-8	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999998793991793	WITHOUT_CLASSIFICATION	1.2060082063966424E-7	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999929813286	WITHOUT_CLASSIFICATION	7.018671360362639E-9	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999981633685046	WITHOUT_CLASSIFICATION	1.836631495434605E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999997604442855	WITHOUT_CLASSIFICATION	2.395557144813004E-7	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999974554801274	WITHOUT_CLASSIFICATION	2.5445198726755156E-6	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999975670677992	WITHOUT_CLASSIFICATION	2.432932200860171E-6	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999994741637173	WITHOUT_CLASSIFICATION	5.258362827101681E-7	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.9999998402870321	WITHOUT_CLASSIFICATION	1.5971296780449414E-7	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999997836952609	WITHOUT_CLASSIFICATION	2.1630473911787833E-7	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999993413828983	WITHOUT_CLASSIFICATION	6.5861710182702E-7	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999996925600605	WITHOUT_CLASSIFICATION	3.0743993953357554E-7	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999996115375996	WITHOUT_CLASSIFICATION	3.884624004703161E-7	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999995887476247	WITHOUT_CLASSIFICATION	4.112523752660393E-7	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999996516711636	WITHOUT_CLASSIFICATION	3.4832883640619434E-7	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999995416329691	WITHOUT_CLASSIFICATION	4.583670308522867E-7	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999996372571134	WITHOUT_CLASSIFICATION	3.627428866196942E-7	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999994202284926	WITHOUT_CLASSIFICATION	5.797715073203076E-7	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999995202801676	WITHOUT_CLASSIFICATION	4.797198323417276E-7	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999996165709174	WITHOUT_CLASSIFICATION	3.834290825388556E-7	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999997449902063	WITHOUT_CLASSIFICATION	2.5500979378455706E-7	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.999999592096051	WITHOUT_CLASSIFICATION	4.079039489365396E-7	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999995997604245	WITHOUT_CLASSIFICATION	4.0023957556391196E-7	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999994933018231	WITHOUT_CLASSIFICATION	5.066981768368187E-7	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999996303684615	WITHOUT_CLASSIFICATION	3.696315385701728E-7	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999994760917685	WITHOUT_CLASSIFICATION	5.239082314432301E-7	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999999095236876	WITHOUT_CLASSIFICATION	9.047631243041561E-8	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999996751904823	WITHOUT_CLASSIFICATION	3.248095177546869E-7	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999986444881365	WITHOUT_CLASSIFICATION	1.3555118635801804E-6	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9968016311208221	WITHOUT_CLASSIFICATION	0.0031983688791779544	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9996450484420099	WITHOUT_CLASSIFICATION	3.5495155799006317E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999969985907683	WITHOUT_CLASSIFICATION	3.001409231661923E-6	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999998813832105	WITHOUT_CLASSIFICATION	1.1861678950268237E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999998811117813	WITHOUT_CLASSIFICATION	1.1888821878134748E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999986864464154	WITHOUT_CLASSIFICATION	1.3135535845978888E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9358874177202917	WITHOUT_CLASSIFICATION	0.06411258227970813	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999996983777778	WITHOUT_CLASSIFICATION	3.0162222210857346E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999887752401978	WITHOUT_CLASSIFICATION	1.122475980220056E-5	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.6982304814545781	IMPLEMENTATION	0.30176951854542194	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999987138632929	WITHOUT_CLASSIFICATION	1.2861367071226812E-6	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.999999999955371	WITHOUT_CLASSIFICATION	4.462891008385246E-11	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999741005928	WITHOUT_CLASSIFICATION	2.5899407143442763E-8	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999999741005928	WITHOUT_CLASSIFICATION	2.5899407143442763E-8	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999998840963749	WITHOUT_CLASSIFICATION	1.1590362524893259E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999843928466894	WITHOUT_CLASSIFICATION	1.5607153310715053E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999967123	WITHOUT_CLASSIFICATION	3.287778524645297E-12	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999992921209092	WITHOUT_CLASSIFICATION	7.078790908419891E-7	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999992582310314	WITHOUT_CLASSIFICATION	7.417689685621579E-7	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999988228082434	WITHOUT_CLASSIFICATION	1.1771917565677809E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999998892695386	WITHOUT_CLASSIFICATION	1.1073046133141258E-7	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999975517372139	WITHOUT_CLASSIFICATION	2.448262786111197E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999975836555638	WITHOUT_CLASSIFICATION	2.416344436321298E-6	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999998519515454	WITHOUT_CLASSIFICATION	1.480484546041238E-7	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9999941320904255	WITHOUT_CLASSIFICATION	5.867909574564668E-6	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999092172687	WITHOUT_CLASSIFICATION	9.078273129699432E-8	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999998769719093	WITHOUT_CLASSIFICATION	1.230280906319924E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999999028195238	WITHOUT_CLASSIFICATION	9.718047619855792E-8	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999990984050745	WITHOUT_CLASSIFICATION	9.015949255806163E-7	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.999997624063411	WITHOUT_CLASSIFICATION	2.3759365889427262E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999226094698	WITHOUT_CLASSIFICATION	7.739053021546693E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999831232426	WITHOUT_CLASSIFICATION	1.6876757470556622E-8	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999997606769628	WITHOUT_CLASSIFICATION	2.393230372098777E-7	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999933649362814	WITHOUT_CLASSIFICATION	6.635063718605727E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999956964993	WITHOUT_CLASSIFICATION	4.303500622004006E-9	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.999999994897183	WITHOUT_CLASSIFICATION	5.102816905724243E-9	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.999996726807192	WITHOUT_CLASSIFICATION	3.273192808037179E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999999999328608	WITHOUT_CLASSIFICATION	6.713911682446593E-11	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999991301050862	WITHOUT_CLASSIFICATION	8.698949137437262E-7	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999980297756177	WITHOUT_CLASSIFICATION	1.970224382193479E-6	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.999999993437838	WITHOUT_CLASSIFICATION	6.5621620424841086E-9	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999998105794748	WITHOUT_CLASSIFICATION	1.89420525172195E-7	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999977336186858	WITHOUT_CLASSIFICATION	2.2663813141189334E-6	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999981531141733	WITHOUT_CLASSIFICATION	1.8468858266911845E-6	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999981441140087	WITHOUT_CLASSIFICATION	1.8558859912771693E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999965048948125	WITHOUT_CLASSIFICATION	3.4951051873499907E-6	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999968611482687	WITHOUT_CLASSIFICATION	3.1388517313232833E-6	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999980207995356	WITHOUT_CLASSIFICATION	1.9792004644001676E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999993813387218	WITHOUT_CLASSIFICATION	6.186612782600993E-7	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999987882362734	WITHOUT_CLASSIFICATION	1.2117637266146062E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999691223799	WITHOUT_CLASSIFICATION	3.087762009711697E-8	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.999999998708724	WITHOUT_CLASSIFICATION	1.2912759478460612E-9	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9999465743370448	WITHOUT_CLASSIFICATION	5.3425662955214696E-5	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999018138352	WITHOUT_CLASSIFICATION	9.818616477989479E-8	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9971201939723953	WITHOUT_CLASSIFICATION	0.002879806027604756	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999937441361209	WITHOUT_CLASSIFICATION	6.255863879137118E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999815723866874	WITHOUT_CLASSIFICATION	1.8427613312598887E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999409032357236	WITHOUT_CLASSIFICATION	5.909676427646352E-5	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9999409032357236	WITHOUT_CLASSIFICATION	5.909676427646352E-5	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999657492953	WITHOUT_CLASSIFICATION	3.4250704767158864E-8	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9999988437567501	WITHOUT_CLASSIFICATION	1.1562432499188892E-6	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999999100760925	WITHOUT_CLASSIFICATION	8.992390754269274E-8	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999980992859077	WITHOUT_CLASSIFICATION	1.9007140923244671E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999995629542449	WITHOUT_CLASSIFICATION	4.3704575508631516E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999997278667342	WITHOUT_CLASSIFICATION	2.7213326581623464E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999972409289792	WITHOUT_CLASSIFICATION	2.759071020777514E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9999785767854577	WITHOUT_CLASSIFICATION	2.1423214542375976E-5	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999980360613442	WITHOUT_CLASSIFICATION	1.9639386557491397E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999995618496635	WITHOUT_CLASSIFICATION	4.3815033640663E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999997959928393	WITHOUT_CLASSIFICATION	2.040071606714191E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999997739335408	WITHOUT_CLASSIFICATION	2.2606645929121684E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999997037354943	WITHOUT_CLASSIFICATION	2.9626450570502567E-7	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999982563489	WITHOUT_CLASSIFICATION	1.743651074454348E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.9491780230840831	WITHOUT_CLASSIFICATION	0.05082197691591684	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9998445556831741	WITHOUT_CLASSIFICATION	1.554443168258769E-4	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999952293949376	WITHOUT_CLASSIFICATION	4.77060506253645E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999784037064	WITHOUT_CLASSIFICATION	2.159629361464563E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9999974418906401	WITHOUT_CLASSIFICATION	2.558109359934818E-6	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999975746828532	WITHOUT_CLASSIFICATION	2.4253171467242717E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999993780765318	WITHOUT_CLASSIFICATION	6.219234682280235E-7	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999993780765318	WITHOUT_CLASSIFICATION	6.219234682280235E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999999593092874	WITHOUT_CLASSIFICATION	4.06907125299271E-8	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999989911779363	WITHOUT_CLASSIFICATION	1.0088220636214218E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999964980591204	WITHOUT_CLASSIFICATION	3.501940879598533E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999867335704	WITHOUT_CLASSIFICATION	1.3266429519931262E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999999933022955	WITHOUT_CLASSIFICATION	6.69770453546145E-9	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999987749089	WITHOUT_CLASSIFICATION	1.2250911556664119E-9	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9951257473588092	WITHOUT_CLASSIFICATION	0.004874252641190819	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999997418202925	WITHOUT_CLASSIFICATION	2.5817970750195426E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999997107086401	WITHOUT_CLASSIFICATION	2.89291359925073E-7	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999997537276156	WITHOUT_CLASSIFICATION	2.4627238438704087E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999999994630321	WITHOUT_CLASSIFICATION	5.3696789880032644E-9	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999255583143	WITHOUT_CLASSIFICATION	7.444168572538077E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999996925932	WITHOUT_CLASSIFICATION	3.0740674407058804E-10	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999989528791565	WITHOUT_CLASSIFICATION	1.047120843500402E-6	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999999429916402	WITHOUT_CLASSIFICATION	5.7008359848992864E-8	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999991866767031	WITHOUT_CLASSIFICATION	8.133232968881285E-7	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9996648457526466	WITHOUT_CLASSIFICATION	3.3515424735342946E-4	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999921781577	WITHOUT_CLASSIFICATION	7.82184233235368E-9	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999980955863366	WITHOUT_CLASSIFICATION	1.9044136634155368E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999803249697702	WITHOUT_CLASSIFICATION	1.967503022985458E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999994263077607	WITHOUT_CLASSIFICATION	5.736922393562981E-7	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999991284962367	WITHOUT_CLASSIFICATION	8.715037631950296E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999999965282007	WITHOUT_CLASSIFICATION	3.471799385853104E-9	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999951884572	WITHOUT_CLASSIFICATION	4.8115428647285185E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999878069092	WITHOUT_CLASSIFICATION	1.2193090817630446E-8	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.999998315139143	WITHOUT_CLASSIFICATION	1.6848608571034515E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999921589884	WITHOUT_CLASSIFICATION	7.84101158748921E-9	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999937320408	WITHOUT_CLASSIFICATION	6.267959119669145E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999997687545062	WITHOUT_CLASSIFICATION	2.3124549379920546E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997607720413	WITHOUT_CLASSIFICATION	2.3922795865221056E-7	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999997607720413	WITHOUT_CLASSIFICATION	2.3922795865221056E-7	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999468065658	WITHOUT_CLASSIFICATION	5.3193434292954006E-8	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999962911955006	WITHOUT_CLASSIFICATION	3.708804499365369E-6	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999932157136432	WITHOUT_CLASSIFICATION	6.7842863568811765E-6	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999885592891	WITHOUT_CLASSIFICATION	1.1440710899574437E-8	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999998271958449	WITHOUT_CLASSIFICATION	1.728041551750795E-7	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999982387503304	WITHOUT_CLASSIFICATION	1.7612496695303233E-6	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999967803626245	WITHOUT_CLASSIFICATION	3.2196373755671786E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999943971854558	WITHOUT_CLASSIFICATION	5.602814544172607E-6	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999995375691456	WITHOUT_CLASSIFICATION	4.624308542658484E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999927484508	WITHOUT_CLASSIFICATION	7.251549153948777E-9	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999999675194715	WITHOUT_CLASSIFICATION	3.248052843475332E-8	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999997654992424	WITHOUT_CLASSIFICATION	2.3450075765087617E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999932657853509	WITHOUT_CLASSIFICATION	6.734214649153292E-6	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999996416419	WITHOUT_CLASSIFICATION	3.583581205695332E-10	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999985187836	WITHOUT_CLASSIFICATION	1.4812163546335408E-9	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998648731606	WITHOUT_CLASSIFICATION	1.3512683941160466E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999994704622831	WITHOUT_CLASSIFICATION	5.295377169473159E-7	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999272090492	WITHOUT_CLASSIFICATION	7.279095083288147E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999988074317055	WITHOUT_CLASSIFICATION	1.192568294481248E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999995151488144	WITHOUT_CLASSIFICATION	4.848511857506485E-7	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999999997963388	WITHOUT_CLASSIFICATION	2.0366119714103975E-9	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999961537961	WITHOUT_CLASSIFICATION	3.846203967625631E-9	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999999914258298	WITHOUT_CLASSIFICATION	8.57417007061213E-9	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999987881124394	WITHOUT_CLASSIFICATION	1.2118875606015285E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999999941223869	WITHOUT_CLASSIFICATION	5.877612990508767E-9	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999389706042	WITHOUT_CLASSIFICATION	6.102939583754136E-8	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999994827323196	WITHOUT_CLASSIFICATION	5.17267680384868E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999989665764	WITHOUT_CLASSIFICATION	1.0334235744802717E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999997911568	WITHOUT_CLASSIFICATION	2.0884313807451402E-10	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999996574953014	WITHOUT_CLASSIFICATION	3.425046986386681E-7	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9999546908733329	WITHOUT_CLASSIFICATION	4.530912666710246E-5	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999985910415093	WITHOUT_CLASSIFICATION	1.4089584906032992E-6	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999999836683907	WITHOUT_CLASSIFICATION	1.6331609329638374E-8	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999864687359814	WITHOUT_CLASSIFICATION	1.3531264018570669E-5	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999983526880662	WITHOUT_CLASSIFICATION	1.647311933867177E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9999850123109729	WITHOUT_CLASSIFICATION	1.4987689027161713E-5	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999995410872633	WITHOUT_CLASSIFICATION	4.589127367328139E-7	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999959711633303	WITHOUT_CLASSIFICATION	4.02883666972106E-6	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999996467001362	WITHOUT_CLASSIFICATION	3.5329986383189827E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.999983790535489	WITHOUT_CLASSIFICATION	1.620946451098288E-5	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999531575103	WITHOUT_CLASSIFICATION	4.684248957561933E-8	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999991542734256	WITHOUT_CLASSIFICATION	8.457265744650462E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999997780906561	WITHOUT_CLASSIFICATION	2.2190934392243972E-7	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999999713230133	WITHOUT_CLASSIFICATION	2.8676986694427625E-8	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999992527251944	WITHOUT_CLASSIFICATION	7.472748055561683E-7	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.999999979001003	WITHOUT_CLASSIFICATION	2.099899700158542E-8	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999514640007	WITHOUT_CLASSIFICATION	4.853599931581428E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843167691	WITHOUT_CLASSIFICATION	1.5683230940336534E-8	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.9999979284530645	WITHOUT_CLASSIFICATION	2.0715469355983365E-6	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999992883369022	WITHOUT_CLASSIFICATION	7.116630978159007E-7	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.999999866577427	WITHOUT_CLASSIFICATION	1.3342257298619408E-7	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.999999832233994	WITHOUT_CLASSIFICATION	1.677660059866355E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999982284721471	WITHOUT_CLASSIFICATION	1.7715278529086005E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999990304779305	WITHOUT_CLASSIFICATION	9.69522069548506E-7	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999995955964525	WITHOUT_CLASSIFICATION	4.0440354742201897E-7	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999993295266143	WITHOUT_CLASSIFICATION	6.704733857508781E-7	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999981971974286	WITHOUT_CLASSIFICATION	1.802802571378894E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999999739275	WITHOUT_CLASSIFICATION	2.6072413874154872E-11	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999996653748111	WITHOUT_CLASSIFICATION	3.3462518894066406E-7	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999571160838	WITHOUT_CLASSIFICATION	4.288391614719682E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999990164151469	WITHOUT_CLASSIFICATION	9.835848531527569E-7	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.999999866577427	WITHOUT_CLASSIFICATION	1.3342257298619408E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999982284721471	WITHOUT_CLASSIFICATION	1.7715278529086005E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.999999832233994	WITHOUT_CLASSIFICATION	1.677660059866355E-7	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999998158032772	WITHOUT_CLASSIFICATION	1.8419672268600745E-7	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999996925707446	WITHOUT_CLASSIFICATION	3.0742925539917364E-7	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999998173111654	WITHOUT_CLASSIFICATION	1.8268883459344953E-7	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999997586383002	WITHOUT_CLASSIFICATION	2.413616998100282E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9996693849645374	WITHOUT_CLASSIFICATION	3.3061503546266577E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999996494305621	WITHOUT_CLASSIFICATION	3.5056943793612394E-7	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999996777502153	WITHOUT_CLASSIFICATION	3.2224978483068577E-7	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999998129232518	WITHOUT_CLASSIFICATION	1.8707674822534357E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999978435799036	WITHOUT_CLASSIFICATION	2.156420096371393E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999999782766847	WITHOUT_CLASSIFICATION	2.1723315286703272E-8	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999999151558975	WITHOUT_CLASSIFICATION	8.484410240630343E-8	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999864659707102	WITHOUT_CLASSIFICATION	1.3534029289784102E-5	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999994742373728	WITHOUT_CLASSIFICATION	5.25762627190049E-7	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999977744952588	WITHOUT_CLASSIFICATION	2.225504741132577E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999999801167608	WITHOUT_CLASSIFICATION	1.9883239109597874E-8	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.999998617790879	WITHOUT_CLASSIFICATION	1.3822091211207941E-6	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.999992392465806	WITHOUT_CLASSIFICATION	7.607534193987239E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999984278106574	WITHOUT_CLASSIFICATION	1.572189342540893E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999984278106574	WITHOUT_CLASSIFICATION	1.572189342540893E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.999997561347211	WITHOUT_CLASSIFICATION	2.4386527890647804E-6	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999861839577	WITHOUT_CLASSIFICATION	1.3816042245823683E-8	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999994775618299	WITHOUT_CLASSIFICATION	5.224381700886928E-7	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999585394550813	WITHOUT_CLASSIFICATION	4.1460544918719745E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999987967541848	WITHOUT_CLASSIFICATION	1.2032458151471125E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999134968471	WITHOUT_CLASSIFICATION	8.650315284381168E-8	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999999545221907	WITHOUT_CLASSIFICATION	4.547780935753587E-8	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999999597802298	WITHOUT_CLASSIFICATION	4.0219770170134513E-8	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999884926059178	WITHOUT_CLASSIFICATION	1.150739408212863E-5	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999998852604757	WITHOUT_CLASSIFICATION	1.1473952426956462E-7	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999261792519	WITHOUT_CLASSIFICATION	7.382074804863668E-8	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999980200627604	WITHOUT_CLASSIFICATION	1.97993723970493E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999998957402941	WITHOUT_CLASSIFICATION	1.0425970591783516E-7	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999986981755199	WITHOUT_CLASSIFICATION	1.3018244801232232E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997837866770913	WITHOUT_CLASSIFICATION	2.1621332290868326E-4	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999764994423	WITHOUT_CLASSIFICATION	2.3500557614559574E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997344999028	WITHOUT_CLASSIFICATION	2.655000972845902E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937123395	WITHOUT_CLASSIFICATION	2.0628766049246743E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937123395	WITHOUT_CLASSIFICATION	2.0628766049246743E-7	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999994010089256	WITHOUT_CLASSIFICATION	5.989910744254231E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999999543196404	WITHOUT_CLASSIFICATION	4.5680359585477426E-8	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999999889756102	WITHOUT_CLASSIFICATION	1.102438977080636E-8	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999969946628294	WITHOUT_CLASSIFICATION	3.0053371705200145E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999992922367147	WITHOUT_CLASSIFICATION	7.077632852479041E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937123395	WITHOUT_CLASSIFICATION	2.0628766049246743E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937123395	WITHOUT_CLASSIFICATION	2.0628766049246743E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999956009419418	WITHOUT_CLASSIFICATION	4.3990580581024224E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999956009419418	WITHOUT_CLASSIFICATION	4.3990580581024224E-6	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999933819452087	WITHOUT_CLASSIFICATION	6.618054791342507E-6	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999965876375663	WITHOUT_CLASSIFICATION	3.4123624338473033E-6	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999662163894	WITHOUT_CLASSIFICATION	3.378361058288307E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.999999920016717	WITHOUT_CLASSIFICATION	7.998328301307124E-8	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999805146652	WITHOUT_CLASSIFICATION	1.948533480454567E-7	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.999999805146652	WITHOUT_CLASSIFICATION	1.948533480454567E-7	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999999902678437	WITHOUT_CLASSIFICATION	9.732156356920335E-9	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999973707688542	WITHOUT_CLASSIFICATION	2.6292311456934595E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742885083	WITHOUT_CLASSIFICATION	2.5711491764334168E-8	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9999922702581835	WITHOUT_CLASSIFICATION	7.729741816575764E-6	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999957003302613	WITHOUT_CLASSIFICATION	4.2996697386357285E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998620678226	WITHOUT_CLASSIFICATION	1.3793217740304242E-6	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9996320717783055	WITHOUT_CLASSIFICATION	3.679282216945176E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999787498425	WITHOUT_CLASSIFICATION	2.1250157541368057E-8	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999978945469	WITHOUT_CLASSIFICATION	2.1054530753461595E-9	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999989009604	WITHOUT_CLASSIFICATION	1.0990397198764585E-9	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9999711460415096	WITHOUT_CLASSIFICATION	2.885395849033415E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999456077315	WITHOUT_CLASSIFICATION	5.439226847733565E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999994702370372	WITHOUT_CLASSIFICATION	5.297629627296698E-7	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999864699298	WITHOUT_CLASSIFICATION	1.3530070063342342E-8	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999764994423	WITHOUT_CLASSIFICATION	2.3500557614559574E-8	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937123395	WITHOUT_CLASSIFICATION	2.0628766049246743E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999956009419418	WITHOUT_CLASSIFICATION	4.3990580581024224E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998620678226	WITHOUT_CLASSIFICATION	1.3793217740304242E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028536	WITHOUT_CLASSIFICATION	4.971463793482054E-10	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028536	WITHOUT_CLASSIFICATION	4.971463793482054E-10	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999927340009709	WITHOUT_CLASSIFICATION	7.265999029128015E-6	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999992500388	WITHOUT_CLASSIFICATION	7.499612194680484E-10	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999944004854	WITHOUT_CLASSIFICATION	5.599514694495224E-9	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999768874408	WITHOUT_CLASSIFICATION	2.311255922860782E-8	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999991640570197	WITHOUT_CLASSIFICATION	8.359429803927857E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999999998220345	WITHOUT_CLASSIFICATION	1.7796549562187177E-9	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999999497469285	WITHOUT_CLASSIFICATION	5.025307152842477E-8	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999997208146931	WITHOUT_CLASSIFICATION	2.7918530688737365E-7	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999992926286	WITHOUT_CLASSIFICATION	7.073713686827185E-10	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999998251604533	WITHOUT_CLASSIFICATION	1.7483954674786753E-7	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999958435508737	WITHOUT_CLASSIFICATION	4.156449126291292E-6	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999999588608252	WITHOUT_CLASSIFICATION	4.11391748717342E-8	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999895889291	WITHOUT_CLASSIFICATION	1.0411070820438762E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997344999028	WITHOUT_CLASSIFICATION	2.655000972845902E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999956009419418	WITHOUT_CLASSIFICATION	4.3990580581024224E-6	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999973707688542	WITHOUT_CLASSIFICATION	2.6292311456934595E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742885083	WITHOUT_CLASSIFICATION	2.5711491764334168E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742885083	WITHOUT_CLASSIFICATION	2.5711491764334168E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999957003302613	WITHOUT_CLASSIFICATION	4.2996697386357285E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998620678226	WITHOUT_CLASSIFICATION	1.3793217740304242E-6	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.999998620678226	WITHOUT_CLASSIFICATION	1.3793217740304242E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028536	WITHOUT_CLASSIFICATION	4.971463793482054E-10	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999107100382054	WITHOUT_CLASSIFICATION	8.928996179458993E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999996436962474	WITHOUT_CLASSIFICATION	3.563037526004085E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999998633	WITHOUT_CLASSIFICATION	1.3658137969785606E-13	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999957057446142	WITHOUT_CLASSIFICATION	4.2942553857527725E-6	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999915113143056	WITHOUT_CLASSIFICATION	8.48868569433455E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999743547338154	WITHOUT_CLASSIFICATION	2.5645266184660853E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999987587084197	WITHOUT_CLASSIFICATION	1.2412915803348449E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999999988425926	WITHOUT_CLASSIFICATION	1.1574074523711129E-9	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999998494119788	WITHOUT_CLASSIFICATION	1.5058802114917295E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999973707688542	WITHOUT_CLASSIFICATION	2.6292311456934595E-6	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742885083	WITHOUT_CLASSIFICATION	2.5711491764334168E-8	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999999742885083	WITHOUT_CLASSIFICATION	2.5711491764334168E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999957003302613	WITHOUT_CLASSIFICATION	4.2996697386357285E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999997208146931	WITHOUT_CLASSIFICATION	2.7918530688737365E-7	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999998251604533	WITHOUT_CLASSIFICATION	1.7483954674786753E-7	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9999414551779073	WITHOUT_CLASSIFICATION	5.854482209259729E-5	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.999994514353692	WITHOUT_CLASSIFICATION	5.4856463080541655E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999934219433315	WITHOUT_CLASSIFICATION	6.578056668480126E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999934219433315	WITHOUT_CLASSIFICATION	6.578056668480126E-6	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999998826740341	WITHOUT_CLASSIFICATION	1.173259660552027E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999971339876	WITHOUT_CLASSIFICATION	2.866012347102084E-9	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999784038468	WITHOUT_CLASSIFICATION	2.1596153242148852E-8	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999922133654826	WITHOUT_CLASSIFICATION	7.786634517402331E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998671128163	WITHOUT_CLASSIFICATION	1.3288718361386767E-7	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999998671128163	WITHOUT_CLASSIFICATION	1.3288718361386767E-7	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997851844637268	WITHOUT_CLASSIFICATION	2.148155362732245E-4	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9997851844637268	WITHOUT_CLASSIFICATION	2.148155362732245E-4	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999666311182	WITHOUT_CLASSIFICATION	3.336888188979712E-8	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999999666311182	WITHOUT_CLASSIFICATION	3.336888188979712E-8	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999998907784192	WITHOUT_CLASSIFICATION	1.0922158074589162E-7	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999997860413519	WITHOUT_CLASSIFICATION	2.13958648137938E-7	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999694577207641	WITHOUT_CLASSIFICATION	3.054227923593249E-5	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999997442984391	WITHOUT_CLASSIFICATION	2.557015608341856E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999995036905474	WITHOUT_CLASSIFICATION	4.963094526334587E-7	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.999999893536566	WITHOUT_CLASSIFICATION	1.0646343403734869E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999997967691626	WITHOUT_CLASSIFICATION	2.0323083731592976E-7	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999990772376816	WITHOUT_CLASSIFICATION	9.22762318402034E-7	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999996808554873	WITHOUT_CLASSIFICATION	3.1914451271464513E-7	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999888167836	WITHOUT_CLASSIFICATION	1.1183216327443602E-8	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9998895950251993	WITHOUT_CLASSIFICATION	1.1040497480074556E-4	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999999646936984	WITHOUT_CLASSIFICATION	3.5306301599409903E-7	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999998767001209	WITHOUT_CLASSIFICATION	1.2329987903532938E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999990517090532	WITHOUT_CLASSIFICATION	9.482909466872933E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999990517090532	WITHOUT_CLASSIFICATION	9.482909466872933E-7	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.9999998828638456	WITHOUT_CLASSIFICATION	1.1713615442411342E-7	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999987749089	WITHOUT_CLASSIFICATION	1.2250911556664119E-9	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999360068627037	WITHOUT_CLASSIFICATION	6.399313729635405E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999999528784	WITHOUT_CLASSIFICATION	4.7121630483502143E-11	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999985462424	WITHOUT_CLASSIFICATION	1.4537575301912178E-9	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9999867517390315	WITHOUT_CLASSIFICATION	1.3248260968613895E-5	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999620848232	WITHOUT_CLASSIFICATION	3.791517673887428E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985972022729	WITHOUT_CLASSIFICATION	1.402797727071446E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.999999889709261	WITHOUT_CLASSIFICATION	1.1029073891906065E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999939759349	WITHOUT_CLASSIFICATION	6.024065119116997E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.999999783144516	WITHOUT_CLASSIFICATION	2.1685548409338988E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999848386183611	WITHOUT_CLASSIFICATION	1.5161381638982599E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999999325814242	WITHOUT_CLASSIFICATION	6.741857580273679E-8	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9979180078949624	WITHOUT_CLASSIFICATION	0.0020819921050376296	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999991947106219	WITHOUT_CLASSIFICATION	8.052893781027389E-7	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999999016395031	WITHOUT_CLASSIFICATION	9.836049686609265E-8	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999897976671748	WITHOUT_CLASSIFICATION	1.0202332825334572E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999988581470518	WITHOUT_CLASSIFICATION	1.1418529482628951E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999976327535	WITHOUT_CLASSIFICATION	2.367246476260056E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999976327535	WITHOUT_CLASSIFICATION	2.367246476260056E-9	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999995981110308	WITHOUT_CLASSIFICATION	4.0188896918399596E-7	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999986877369	WITHOUT_CLASSIFICATION	1.3122630707640624E-9	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999968027528536	WITHOUT_CLASSIFICATION	3.1972471462428488E-6	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999968027528536	WITHOUT_CLASSIFICATION	3.1972471462428488E-6	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999918294424662	WITHOUT_CLASSIFICATION	8.170557533707044E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999932398	WITHOUT_CLASSIFICATION	6.760199935404347E-9	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.999999254852906	WITHOUT_CLASSIFICATION	7.451470940483132E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999772794096	WITHOUT_CLASSIFICATION	2.2720590386593408E-8	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999984824232	WITHOUT_CLASSIFICATION	1.517576814337848E-9	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999854365872	WITHOUT_CLASSIFICATION	1.4563412655566445E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999999854365872	WITHOUT_CLASSIFICATION	1.4563412655566445E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.99999976649411	WITHOUT_CLASSIFICATION	2.3350588990930005E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999988599875	WITHOUT_CLASSIFICATION	1.140012459831802E-9	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999988741878421	WITHOUT_CLASSIFICATION	1.1258121578354036E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999981266184	WITHOUT_CLASSIFICATION	1.8733816264741927E-9	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999986877369	WITHOUT_CLASSIFICATION	1.3122630707640624E-9	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999423583585	WITHOUT_CLASSIFICATION	5.764164158679702E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999979448296	WITHOUT_CLASSIFICATION	2.055170461248216E-9	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999979448296	WITHOUT_CLASSIFICATION	2.055170461248216E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999691231124639	WITHOUT_CLASSIFICATION	3.0876887536152726E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238383	WITHOUT_CLASSIFICATION	2.5761617886900783E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238383	WITHOUT_CLASSIFICATION	2.5761617886900783E-9	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999920343863381	WITHOUT_CLASSIFICATION	7.96561366192915E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999920343863381	WITHOUT_CLASSIFICATION	7.96561366192915E-6	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999920343863381	WITHOUT_CLASSIFICATION	7.96561366192915E-6	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238383	WITHOUT_CLASSIFICATION	2.5761617886900783E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238383	WITHOUT_CLASSIFICATION	2.5761617886900783E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999691231124639	WITHOUT_CLASSIFICATION	3.0876887536152726E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999999686688383	WITHOUT_CLASSIFICATION	3.1331161590911406E-8	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999999393138154	WITHOUT_CLASSIFICATION	6.06861846365207E-8	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999983404041761	WITHOUT_CLASSIFICATION	1.65959582388938E-6	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999960316688027	WITHOUT_CLASSIFICATION	3.968331197268044E-6	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999993102752	WITHOUT_CLASSIFICATION	6.897248219857456E-10	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999073426781299	WITHOUT_CLASSIFICATION	9.265732187014969E-5	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999999173475664	WITHOUT_CLASSIFICATION	8.265243359607461E-8	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.99999999891551	WITHOUT_CLASSIFICATION	1.084490067028847E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.999999783144516	WITHOUT_CLASSIFICATION	2.1685548409338988E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238383	WITHOUT_CLASSIFICATION	2.5761617886900783E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238383	WITHOUT_CLASSIFICATION	2.5761617886900783E-9	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999998581633	WITHOUT_CLASSIFICATION	1.4183668405441892E-10	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999849009707535	WITHOUT_CLASSIFICATION	1.509902924654221E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999703176572	WITHOUT_CLASSIFICATION	2.9682342798431107E-8	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999992810207	WITHOUT_CLASSIFICATION	7.189793051066003E-10	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999688354875655	WITHOUT_CLASSIFICATION	3.116451243447358E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999949914702145	WITHOUT_CLASSIFICATION	5.0085297854677E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999992301631	WITHOUT_CLASSIFICATION	7.698367688218823E-10	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999998759059863	WITHOUT_CLASSIFICATION	1.2409401364405052E-7	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.99999956751403	WITHOUT_CLASSIFICATION	4.324859700946097E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999815454478	WITHOUT_CLASSIFICATION	1.8454552268204385E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999950054889098	WITHOUT_CLASSIFICATION	4.994511090131157E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999997308647052	WITHOUT_CLASSIFICATION	2.691352947526376E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999979508493755	WITHOUT_CLASSIFICATION	2.049150624560759E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999878721421083	WITHOUT_CLASSIFICATION	1.2127857891689026E-5	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.999999692616868	WITHOUT_CLASSIFICATION	3.073831320103794E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999498063288	WITHOUT_CLASSIFICATION	5.0193671235194696E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999498063288	WITHOUT_CLASSIFICATION	5.0193671235194696E-8	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999999498063288	WITHOUT_CLASSIFICATION	5.0193671235194696E-8	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999997095004912	WITHOUT_CLASSIFICATION	2.904995088727197E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999473663068	WITHOUT_CLASSIFICATION	5.2633693098791615E-8	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999991397408974	WITHOUT_CLASSIFICATION	8.602591025841585E-7	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.999999874964021	WITHOUT_CLASSIFICATION	1.2503597898471893E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999953061590446	WITHOUT_CLASSIFICATION	4.69384095536766E-6	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999996498798774	WITHOUT_CLASSIFICATION	3.5012012263108267E-7	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999999679917	WITHOUT_CLASSIFICATION	3.2008345470839996E-11	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999999932953083	WITHOUT_CLASSIFICATION	6.704691694454557E-9	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999939681903	WITHOUT_CLASSIFICATION	6.031809703754703E-9	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999960101419	WITHOUT_CLASSIFICATION	3.989858064904435E-9	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999403199984411	WITHOUT_CLASSIFICATION	5.968000155900088E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.999977108159782	WITHOUT_CLASSIFICATION	2.2891840218013717E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.99999976649411	WITHOUT_CLASSIFICATION	2.3350588990930005E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238383	WITHOUT_CLASSIFICATION	2.5761617886900783E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999974238383	WITHOUT_CLASSIFICATION	2.5761617886900783E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999691231124639	WITHOUT_CLASSIFICATION	3.0876887536152726E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9999073426781299	WITHOUT_CLASSIFICATION	9.265732187014969E-5	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999849009707535	WITHOUT_CLASSIFICATION	1.509902924654221E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999992810207	WITHOUT_CLASSIFICATION	7.189793051066003E-10	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999949914702145	WITHOUT_CLASSIFICATION	5.0085297854677E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999703176572	WITHOUT_CLASSIFICATION	2.9682342798431107E-8	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999992301631	WITHOUT_CLASSIFICATION	7.698367688218823E-10	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999815454478	WITHOUT_CLASSIFICATION	1.8454552268204385E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.99999956751403	WITHOUT_CLASSIFICATION	4.324859700946097E-7	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999997308647052	WITHOUT_CLASSIFICATION	2.691352947526376E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999795262461344	WITHOUT_CLASSIFICATION	2.047375386554393E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.999974657509684	WITHOUT_CLASSIFICATION	2.5342490316065634E-5	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.999995995867611	WITHOUT_CLASSIFICATION	4.004132388891908E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999973264323	WITHOUT_CLASSIFICATION	2.6735677616726273E-9	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999992760200319	WITHOUT_CLASSIFICATION	7.23979968084202E-7	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999991023841034	WITHOUT_CLASSIFICATION	8.976158966846973E-7	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999999041021684	WITHOUT_CLASSIFICATION	9.589783159502407E-8	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999981760891814	WITHOUT_CLASSIFICATION	1.8239108186157825E-6	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999973816182136	WITHOUT_CLASSIFICATION	2.6183817863562853E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999996877082522	WITHOUT_CLASSIFICATION	3.1229174788489763E-7	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999851958946155	WITHOUT_CLASSIFICATION	1.4804105384346385E-5	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622236612	WITHOUT_CLASSIFICATION	1.3777633882677977E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109169	WITHOUT_CLASSIFICATION	1.689083105006195E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999975131147	WITHOUT_CLASSIFICATION	2.4868852981344273E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999878560035	WITHOUT_CLASSIFICATION	1.2143996379312949E-8	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999787663367	WITHOUT_CLASSIFICATION	2.1233663343363157E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999982929804	WITHOUT_CLASSIFICATION	1.707019603927267E-8	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999968678777346	WITHOUT_CLASSIFICATION	3.1321222654700984E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999872736907788	WITHOUT_CLASSIFICATION	1.2726309221270417E-5	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999995766424611	WITHOUT_CLASSIFICATION	4.2335753898765293E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999309520673	WITHOUT_CLASSIFICATION	6.904793270083377E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706151204514456E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706151204514456E-11	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999999824378442	WITHOUT_CLASSIFICATION	1.756215582178734E-8	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999803230544595	WITHOUT_CLASSIFICATION	1.9676945540541967E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999995934958215	WITHOUT_CLASSIFICATION	4.065041784975062E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999995934958215	WITHOUT_CLASSIFICATION	4.065041784975062E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999995934958215	WITHOUT_CLASSIFICATION	4.065041784975062E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999894273553716	WITHOUT_CLASSIFICATION	1.0572644628407502E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999894273553716	WITHOUT_CLASSIFICATION	1.0572644628407502E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999950435172139	WITHOUT_CLASSIFICATION	4.956482786110995E-6	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999959765761322	WITHOUT_CLASSIFICATION	4.0234238679263785E-6	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9999803230544595	WITHOUT_CLASSIFICATION	1.9676945540541967E-5	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999999391263746	WITHOUT_CLASSIFICATION	6.08736254053655E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999995934958215	WITHOUT_CLASSIFICATION	4.065041784975062E-6	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.999995934958215	WITHOUT_CLASSIFICATION	4.065041784975062E-6	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999894273553716	WITHOUT_CLASSIFICATION	1.0572644628407502E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999959765761322	WITHOUT_CLASSIFICATION	4.0234238679263785E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999962881426216	WITHOUT_CLASSIFICATION	3.711857378313694E-6	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999962881426216	WITHOUT_CLASSIFICATION	3.711857378313694E-6	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999960063577	WITHOUT_CLASSIFICATION	3.993642283503657E-9	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999960063577	WITHOUT_CLASSIFICATION	3.993642283503657E-9	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999995374366024	WITHOUT_CLASSIFICATION	4.62563397647785E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999995374366024	WITHOUT_CLASSIFICATION	4.62563397647785E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999889770575748	WITHOUT_CLASSIFICATION	1.1022942425097231E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999637333938	WITHOUT_CLASSIFICATION	3.626660615016306E-8	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999999637333938	WITHOUT_CLASSIFICATION	3.626660615016306E-8	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999720253317378	WITHOUT_CLASSIFICATION	2.7974668262235113E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999720253317378	WITHOUT_CLASSIFICATION	2.7974668262235113E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999998122382	WITHOUT_CLASSIFICATION	1.8776166186964484E-10	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999996282445033	WITHOUT_CLASSIFICATION	3.7175549666770904E-7	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999996282445033	WITHOUT_CLASSIFICATION	3.7175549666770904E-7	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999981609212449	WITHOUT_CLASSIFICATION	1.8390787550718972E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999945012057136	WITHOUT_CLASSIFICATION	5.498794286366925E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999978203269	WITHOUT_CLASSIFICATION	2.1796731278861307E-9	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999981609212449	WITHOUT_CLASSIFICATION	1.8390787550718972E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999988098508	WITHOUT_CLASSIFICATION	1.1901491049841249E-9	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992817895155	WITHOUT_CLASSIFICATION	7.182104844986575E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992817895155	WITHOUT_CLASSIFICATION	7.182104844986575E-7	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992817895155	WITHOUT_CLASSIFICATION	7.182104844986575E-7	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999646243161564	WITHOUT_CLASSIFICATION	3.5375683843575E-5	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999645386675	WITHOUT_CLASSIFICATION	3.546133249472087E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075264275	WITHOUT_CLASSIFICATION	5.924735725666123E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075264275	WITHOUT_CLASSIFICATION	5.924735725666123E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997017516736	WITHOUT_CLASSIFICATION	2.9824832642452606E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998024290823	WITHOUT_CLASSIFICATION	1.9757091765391826E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999986466749	WITHOUT_CLASSIFICATION	1.3533251035698152E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999868767594	WITHOUT_CLASSIFICATION	1.312324054739912E-8	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999994588342961	WITHOUT_CLASSIFICATION	5.411657038694956E-7	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999893506746	WITHOUT_CLASSIFICATION	1.0649325387053255E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999999893506746	WITHOUT_CLASSIFICATION	1.0649325387053255E-8	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9999602120303868	WITHOUT_CLASSIFICATION	3.9787969613151485E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999927765023799	WITHOUT_CLASSIFICATION	7.223497620092483E-6	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999927765023799	WITHOUT_CLASSIFICATION	7.223497620092483E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999992817895155	WITHOUT_CLASSIFICATION	7.182104844986575E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999645386675	WITHOUT_CLASSIFICATION	3.546133249472087E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075264275	WITHOUT_CLASSIFICATION	5.924735725666123E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997017516736	WITHOUT_CLASSIFICATION	2.9824832642452606E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999998024290823	WITHOUT_CLASSIFICATION	1.9757091765391826E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999986466749	WITHOUT_CLASSIFICATION	1.3533251035698152E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999868767594	WITHOUT_CLASSIFICATION	1.312324054739912E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999927765023799	WITHOUT_CLASSIFICATION	7.223497620092483E-6	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999955863685	WITHOUT_CLASSIFICATION	4.4136314593210275E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999997666222159	WITHOUT_CLASSIFICATION	2.3337778418705703E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999999791572173	WITHOUT_CLASSIFICATION	2.084278279647074E-8	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999972692014869	WITHOUT_CLASSIFICATION	2.7307985130024193E-6	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999910942966	WITHOUT_CLASSIFICATION	8.905703326747742E-9	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999903762294	WITHOUT_CLASSIFICATION	9.623770499042853E-9	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998518158318	WITHOUT_CLASSIFICATION	1.4818416812597937E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999998518158318	WITHOUT_CLASSIFICATION	1.4818416812597937E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999997205732413	WITHOUT_CLASSIFICATION	2.7942675869746556E-7	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999998720690335	WITHOUT_CLASSIFICATION	1.279309665992626E-7	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999996869585401	WITHOUT_CLASSIFICATION	3.130414598712026E-7	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999470736748	WITHOUT_CLASSIFICATION	5.2926325256632786E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999994506224205	WITHOUT_CLASSIFICATION	5.493775795897611E-7	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999994506224205	WITHOUT_CLASSIFICATION	5.493775795897611E-7	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999975583187475	WITHOUT_CLASSIFICATION	2.4416812524911627E-6	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999009071977	WITHOUT_CLASSIFICATION	9.909280221744178E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999993183060645	WITHOUT_CLASSIFICATION	6.816939355731102E-7	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999993183060645	WITHOUT_CLASSIFICATION	6.816939355731102E-7	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999997619871347	WITHOUT_CLASSIFICATION	2.3801286520301825E-7	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999581202223343	WITHOUT_CLASSIFICATION	4.18797776656867E-5	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999994588342961	WITHOUT_CLASSIFICATION	5.411657038694956E-7	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999057857528	WITHOUT_CLASSIFICATION	9.421424715773758E-8	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996981896	WITHOUT_CLASSIFICATION	3.01810321704573E-10	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999467259026	WITHOUT_CLASSIFICATION	5.327409733404805E-8	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999718215976	WITHOUT_CLASSIFICATION	2.8178402430575023E-8	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.999999998973654	WITHOUT_CLASSIFICATION	1.0263459692522586E-9	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999988160699338	WITHOUT_CLASSIFICATION	1.183930066161255E-6	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999975435336	WITHOUT_CLASSIFICATION	2.4564664959287606E-9	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999997909613404	WITHOUT_CLASSIFICATION	2.0903865954571318E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999395209354	WITHOUT_CLASSIFICATION	6.047906471090973E-8	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999999395209354	WITHOUT_CLASSIFICATION	6.047906471090973E-8	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999978127611752	WITHOUT_CLASSIFICATION	2.1872388247937116E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999978127611752	WITHOUT_CLASSIFICATION	2.1872388247937116E-6	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999909684969	WITHOUT_CLASSIFICATION	9.031503079092884E-9	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997722503726	WITHOUT_CLASSIFICATION	2.277496273754862E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997722503726	WITHOUT_CLASSIFICATION	2.277496273754862E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999997722503726	WITHOUT_CLASSIFICATION	2.277496273754862E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999938497711447	WITHOUT_CLASSIFICATION	6.150228855258505E-6	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999938497711447	WITHOUT_CLASSIFICATION	6.150228855258505E-6	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999779123336	WITHOUT_CLASSIFICATION	2.2087666283256607E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.999994560465329	WITHOUT_CLASSIFICATION	5.439534671018491E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999991592115394	WITHOUT_CLASSIFICATION	8.407884607627914E-7	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999965900037554	WITHOUT_CLASSIFICATION	3.40999624465125E-6	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999982086612096	WITHOUT_CLASSIFICATION	1.791338790479303E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.99997322514626	WITHOUT_CLASSIFICATION	2.6774853739965033E-5	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999998924030143	WITHOUT_CLASSIFICATION	1.0759698573947429E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109169	WITHOUT_CLASSIFICATION	1.689083105006195E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109169	WITHOUT_CLASSIFICATION	1.689083105006195E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999779123336	WITHOUT_CLASSIFICATION	2.2087666283256607E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999922563478	WITHOUT_CLASSIFICATION	7.743652100687374E-9	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.999994560465329	WITHOUT_CLASSIFICATION	5.439534671018491E-6	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999991592115394	WITHOUT_CLASSIFICATION	8.407884607627914E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999832008955569	WITHOUT_CLASSIFICATION	1.679910444313391E-5	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.999999847915764	WITHOUT_CLASSIFICATION	1.520842359378299E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356164153	WITHOUT_CLASSIFICATION	1.6438358466003647E-7	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999980398749793	WITHOUT_CLASSIFICATION	1.9601250207895162E-6	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999851185472742	WITHOUT_CLASSIFICATION	1.488145272571174E-5	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999989992906	WITHOUT_CLASSIFICATION	1.0007094453163007E-9	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999998824158609	WITHOUT_CLASSIFICATION	1.1758413903462293E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999832008955569	WITHOUT_CLASSIFICATION	1.679910444313391E-5	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999258652742	WITHOUT_CLASSIFICATION	7.41347258031062E-8	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999258652742	WITHOUT_CLASSIFICATION	7.41347258031062E-8	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999999604167057	WITHOUT_CLASSIFICATION	3.958329434873525E-8	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999919819754357	WITHOUT_CLASSIFICATION	8.018024564387684E-6	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999994387045865	WITHOUT_CLASSIFICATION	5.61295413534407E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999987396291348	WITHOUT_CLASSIFICATION	1.2603708652062834E-6	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999991114241259	WITHOUT_CLASSIFICATION	8.885758740679E-7	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999088483474272	WITHOUT_CLASSIFICATION	9.115165257267723E-5	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999989292509401	WITHOUT_CLASSIFICATION	1.0707490597902688E-6	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999912343537797	WITHOUT_CLASSIFICATION	8.765646220236078E-6	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999973044705	WITHOUT_CLASSIFICATION	2.695529442379143E-9	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.999999960924409	WITHOUT_CLASSIFICATION	3.9075590978307967E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999919962022	WITHOUT_CLASSIFICATION	8.003797796347204E-8	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999987396291348	WITHOUT_CLASSIFICATION	1.2603708652062834E-6	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999991114241259	WITHOUT_CLASSIFICATION	8.885758740679E-7	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999906215087423	WITHOUT_CLASSIFICATION	9.378491257786451E-6	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.999999960343697	WITHOUT_CLASSIFICATION	3.965630301363404E-8	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999999999614721	WITHOUT_CLASSIFICATION	3.8527906070990335E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999991260318875	WITHOUT_CLASSIFICATION	8.739681124215379E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999997644671	WITHOUT_CLASSIFICATION	2.355329038778302E-10	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999999950529493	WITHOUT_CLASSIFICATION	4.947050687776799E-9	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999980551537129	WITHOUT_CLASSIFICATION	1.9448462871542425E-6	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.999999622206046	WITHOUT_CLASSIFICATION	3.7779395396861557E-7	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999999732600116	WITHOUT_CLASSIFICATION	2.6739988511941855E-8	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999999921705016	WITHOUT_CLASSIFICATION	7.82949834730235E-9	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999999746019071	WITHOUT_CLASSIFICATION	2.5398092836656588E-8	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999960766598558	WITHOUT_CLASSIFICATION	3.92334014429869E-6	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999995851660551	WITHOUT_CLASSIFICATION	4.1483394488191284E-7	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999858444587	WITHOUT_CLASSIFICATION	1.4155541318075578E-8	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999999649114	WITHOUT_CLASSIFICATION	3.508865870796443E-11	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999876364853	WITHOUT_CLASSIFICATION	1.2363514650064873E-8	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999979715911582	WITHOUT_CLASSIFICATION	2.0284088417601813E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999998969497262	WITHOUT_CLASSIFICATION	1.0305027380655581E-6	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999980138028	WITHOUT_CLASSIFICATION	1.9861972198867892E-9	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999989990178506	WITHOUT_CLASSIFICATION	1.0009821493578043E-6	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999979715911582	WITHOUT_CLASSIFICATION	2.0284088417601813E-6	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.999998969497262	WITHOUT_CLASSIFICATION	1.0305027380655581E-6	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999980138028	WITHOUT_CLASSIFICATION	1.9861972198867892E-9	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999999415118973	WITHOUT_CLASSIFICATION	5.848810278186599E-8	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999908339201605	WITHOUT_CLASSIFICATION	9.166079839517572E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999956533818337	WITHOUT_CLASSIFICATION	4.346618166335946E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999989998624069	WITHOUT_CLASSIFICATION	1.0001375931012404E-6	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999719038929	WITHOUT_CLASSIFICATION	2.8096107141723366E-8	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999987289509417	WITHOUT_CLASSIFICATION	1.2710490583647352E-6	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999988980163398	WITHOUT_CLASSIFICATION	1.101983660222192E-6	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999611539125927	WITHOUT_CLASSIFICATION	3.8846087407456504E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999999261483038	WITHOUT_CLASSIFICATION	7.385169616482602E-8	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999997360634124	WITHOUT_CLASSIFICATION	2.6393658764073487E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9728812171957074	WITHOUT_CLASSIFICATION	0.027118782804292647	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999682958328	WITHOUT_CLASSIFICATION	3.1704167081522356E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999987173387501	WITHOUT_CLASSIFICATION	1.2826612497921848E-6	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999577226592172	WITHOUT_CLASSIFICATION	4.2277340782710775E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999998705591968	WITHOUT_CLASSIFICATION	1.2944080317626885E-7	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999998358109944	WITHOUT_CLASSIFICATION	1.6418900568885508E-7	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999986422238565	WITHOUT_CLASSIFICATION	1.3577761435099296E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999994229370025	WITHOUT_CLASSIFICATION	5.770629974879699E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999940426748535	WITHOUT_CLASSIFICATION	5.9573251465066496E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999996272937635	WITHOUT_CLASSIFICATION	3.727062365011137E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999213129025	WITHOUT_CLASSIFICATION	7.868709746725039E-8	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985591629901	WITHOUT_CLASSIFICATION	1.4408370099218322E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985591629901	WITHOUT_CLASSIFICATION	1.4408370099218322E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999983915374406	WITHOUT_CLASSIFICATION	1.608462559348828E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999983915374406	WITHOUT_CLASSIFICATION	1.608462559348828E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999627454645	WITHOUT_CLASSIFICATION	3.725453556598248E-8	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999999627454645	WITHOUT_CLASSIFICATION	3.725453556598248E-8	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998917289288	WITHOUT_CLASSIFICATION	1.0827107129450946E-7	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999997354536	WITHOUT_CLASSIFICATION	2.645463976820538E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999962875836	WITHOUT_CLASSIFICATION	3.7124162550149114E-9	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999996694594715	WITHOUT_CLASSIFICATION	3.3054052855252187E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995481396	WITHOUT_CLASSIFICATION	4.518604827965075E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999985411410207	WITHOUT_CLASSIFICATION	1.4588589793402797E-6	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999395561168	WITHOUT_CLASSIFICATION	6.044388332433946E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999984003172417	WITHOUT_CLASSIFICATION	1.599682758341056E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109169	WITHOUT_CLASSIFICATION	1.689083105006195E-9	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999998917289288	WITHOUT_CLASSIFICATION	1.0827107129450946E-7	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.999999997354536	WITHOUT_CLASSIFICATION	2.645463976820538E-9	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999962875836	WITHOUT_CLASSIFICATION	3.7124162550149114E-9	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995481396	WITHOUT_CLASSIFICATION	4.518604827965075E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999985411410207	WITHOUT_CLASSIFICATION	1.4588589793402797E-6	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999998685783268	WITHOUT_CLASSIFICATION	1.3142167324860346E-7	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999999326694222	WITHOUT_CLASSIFICATION	6.733057777436334E-8	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999999440349592	WITHOUT_CLASSIFICATION	5.596504080009059E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999999440349592	WITHOUT_CLASSIFICATION	5.596504080009059E-7	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999977704067633	WITHOUT_CLASSIFICATION	2.229593236621837E-6	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999697904881	WITHOUT_CLASSIFICATION	3.020951182339157E-8	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996935817937	WITHOUT_CLASSIFICATION	3.0641820621831503E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999972635898	WITHOUT_CLASSIFICATION	2.736410179683355E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999972635898	WITHOUT_CLASSIFICATION	2.736410179683355E-9	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999967743983	WITHOUT_CLASSIFICATION	3.2256017551995575E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999998800498	WITHOUT_CLASSIFICATION	1.1995020371452149E-10	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.999999767632653	WITHOUT_CLASSIFICATION	2.323673471637191E-7	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999946265879601	WITHOUT_CLASSIFICATION	5.3734120398986395E-6	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999726175159	WITHOUT_CLASSIFICATION	2.7382484055778323E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999975131147	WITHOUT_CLASSIFICATION	2.4868852981344273E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999878560035	WITHOUT_CLASSIFICATION	1.2143996379312949E-8	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999787663367	WITHOUT_CLASSIFICATION	2.1233663343363157E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999982929804	WITHOUT_CLASSIFICATION	1.707019603927267E-8	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999995766424611	WITHOUT_CLASSIFICATION	4.2335753898765293E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.999999309520673	WITHOUT_CLASSIFICATION	6.904793270083377E-7	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999967743983	WITHOUT_CLASSIFICATION	3.2256017551995575E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999998800498	WITHOUT_CLASSIFICATION	1.1995020371452149E-10	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999946265879601	WITHOUT_CLASSIFICATION	5.3734120398986395E-6	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999839786367632	WITHOUT_CLASSIFICATION	1.602136323665682E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996935817937	WITHOUT_CLASSIFICATION	3.0641820621831503E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996935817937	WITHOUT_CLASSIFICATION	3.0641820621831503E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999919962022	WITHOUT_CLASSIFICATION	8.003797796347204E-8	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999919962022	WITHOUT_CLASSIFICATION	8.003797796347204E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999502386332598	WITHOUT_CLASSIFICATION	4.9761366740271866E-5	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999502386332598	WITHOUT_CLASSIFICATION	4.9761366740271866E-5	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999938973466	WITHOUT_CLASSIFICATION	6.10265344077372E-9	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999782099626	WITHOUT_CLASSIFICATION	2.17900374165967E-8	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999994194246764	WITHOUT_CLASSIFICATION	5.805753235876636E-7	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999999076655026	WITHOUT_CLASSIFICATION	9.23344973443526E-8	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999974521917	WITHOUT_CLASSIFICATION	2.5478084324691618E-9	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999998850638632	WITHOUT_CLASSIFICATION	1.1493613676989433E-7	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999946640196	WITHOUT_CLASSIFICATION	5.335980419581216E-9	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999660809609	WITHOUT_CLASSIFICATION	3.391903922446767E-8	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999998873374808	WITHOUT_CLASSIFICATION	1.1266251921471066E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999999212104801	WITHOUT_CLASSIFICATION	7.878951990594918E-8	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999999434940425	WITHOUT_CLASSIFICATION	5.6505957456769504E-8	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999997187098458	WITHOUT_CLASSIFICATION	2.8129015409928965E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999853060325	WITHOUT_CLASSIFICATION	1.4693967455154862E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999979099309049	WITHOUT_CLASSIFICATION	2.090069095210491E-6	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999990674905835	WITHOUT_CLASSIFICATION	9.325094163392655E-7	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9998324122277934	WITHOUT_CLASSIFICATION	1.675877722066264E-4	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999998520826243	WITHOUT_CLASSIFICATION	1.4791737571453407E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999995859029565	WITHOUT_CLASSIFICATION	4.1409704352483305E-7	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999955935644396	WITHOUT_CLASSIFICATION	4.406435560422441E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999878560035	WITHOUT_CLASSIFICATION	1.2143996379312949E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999982929804	WITHOUT_CLASSIFICATION	1.707019603927267E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706151204514456E-11	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075264275	WITHOUT_CLASSIFICATION	5.924735725666123E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075264275	WITHOUT_CLASSIFICATION	5.924735725666123E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999839786367632	WITHOUT_CLASSIFICATION	1.602136323665682E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999996935817937	WITHOUT_CLASSIFICATION	3.0641820621831503E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999999919962022	WITHOUT_CLASSIFICATION	8.003797796347204E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999502386332598	WITHOUT_CLASSIFICATION	4.9761366740271866E-5	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999992439383028	WITHOUT_CLASSIFICATION	7.560616972166965E-7	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999967816346832	WITHOUT_CLASSIFICATION	3.218365316738582E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999878457563018	WITHOUT_CLASSIFICATION	1.2154243698086737E-5	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999999377856167	WITHOUT_CLASSIFICATION	6.221438324136306E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999931455713	WITHOUT_CLASSIFICATION	6.854428615729604E-9	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999931455713	WITHOUT_CLASSIFICATION	6.854428615729604E-9	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999963048801	WITHOUT_CLASSIFICATION	3.6951197914504158E-9	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999985465911982	WITHOUT_CLASSIFICATION	1.4534088016733874E-6	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999197196926	WITHOUT_CLASSIFICATION	8.028030731299803E-8	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999994742700129	WITHOUT_CLASSIFICATION	5.257299870235281E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999993543877159	WITHOUT_CLASSIFICATION	6.456122840733095E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999993543877159	WITHOUT_CLASSIFICATION	6.456122840733095E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999995030475801	WITHOUT_CLASSIFICATION	4.969524199343004E-7	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999977645061939	WITHOUT_CLASSIFICATION	2.235493806001067E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999864004692	WITHOUT_CLASSIFICATION	1.3599530751042518E-8	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999753470046545	WITHOUT_CLASSIFICATION	2.4652995345527513E-5	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999954588801163	WITHOUT_CLASSIFICATION	4.5411198837403905E-6	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.999999988234703	WITHOUT_CLASSIFICATION	1.176529686480137E-8	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.999999892842483	WITHOUT_CLASSIFICATION	1.0715751701807664E-7	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999694784835	WITHOUT_CLASSIFICATION	3.05215165539244E-8	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9998884697301812	WITHOUT_CLASSIFICATION	1.115302698187492E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9999097106295214	WITHOUT_CLASSIFICATION	9.028937047868202E-5	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999996930005	WITHOUT_CLASSIFICATION	3.0699953735708494E-10	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999999085285165	WITHOUT_CLASSIFICATION	9.147148351562775E-8	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.999999972712193	WITHOUT_CLASSIFICATION	2.7287806981261782E-8	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999986511012674	WITHOUT_CLASSIFICATION	1.348898732529744E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999998776632153	WITHOUT_CLASSIFICATION	1.2233678470528635E-7	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999781537187848	WITHOUT_CLASSIFICATION	2.184628121524345E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999995928269	WITHOUT_CLASSIFICATION	4.0717300153505275E-10	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999951299845019	WITHOUT_CLASSIFICATION	4.87001549812428E-6	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999933667596559	WITHOUT_CLASSIFICATION	6.6332403441694905E-6	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.999999937227009	WITHOUT_CLASSIFICATION	6.277299103100003E-8	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999980203174567	WITHOUT_CLASSIFICATION	1.9796825434026466E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999746824326	WITHOUT_CLASSIFICATION	2.5317567319149597E-8	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999999746824326	WITHOUT_CLASSIFICATION	2.5317567319149597E-8	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.999999929294998	WITHOUT_CLASSIFICATION	7.070500197491193E-8	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999897712762	WITHOUT_CLASSIFICATION	1.0228723760769626E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985972022729	WITHOUT_CLASSIFICATION	1.402797727071446E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999985972022729	WITHOUT_CLASSIFICATION	1.402797727071446E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9762994282912814	WITHOUT_CLASSIFICATION	0.02370057170871859	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.999999913858259	WITHOUT_CLASSIFICATION	8.614174099723704E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999987168038333	WITHOUT_CLASSIFICATION	1.2831961666215927E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999463515963	WITHOUT_CLASSIFICATION	5.364840375197473E-8	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999463515963	WITHOUT_CLASSIFICATION	5.364840375197473E-8	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999992909463619	WITHOUT_CLASSIFICATION	7.09053638112171E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999985181846	WITHOUT_CLASSIFICATION	1.4818154331765012E-9	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999999308514755	WITHOUT_CLASSIFICATION	6.914852445714227E-8	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999981125156368	WITHOUT_CLASSIFICATION	1.8874843631819006E-6	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999996844316481	WITHOUT_CLASSIFICATION	3.155683519001955E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999830006293	WITHOUT_CLASSIFICATION	1.699937074418206E-8	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999998007629755	WITHOUT_CLASSIFICATION	1.9923702453538462E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999983853646944	WITHOUT_CLASSIFICATION	1.614635305490061E-6	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999996627018349	WITHOUT_CLASSIFICATION	3.372981650082179E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999972263620402	WITHOUT_CLASSIFICATION	2.7736379598333785E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999993433729832	WITHOUT_CLASSIFICATION	6.566270166419556E-7	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999862125386342	WITHOUT_CLASSIFICATION	1.3787461365733688E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999998358425057	WITHOUT_CLASSIFICATION	1.6415749413556386E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998688726793	WITHOUT_CLASSIFICATION	1.3112732062912393E-7	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9998216148573298	WITHOUT_CLASSIFICATION	1.7838514267030266E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999999436594297	WITHOUT_CLASSIFICATION	5.6340570308234346E-8	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999998850412	WITHOUT_CLASSIFICATION	1.1495883773462028E-10	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999879365952451	WITHOUT_CLASSIFICATION	1.2063404754851412E-5	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999975357470514	WITHOUT_CLASSIFICATION	2.4642529485973385E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.999999999049684	WITHOUT_CLASSIFICATION	9.50316090429901E-10	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999917902791664	WITHOUT_CLASSIFICATION	8.209720833572E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999996990553317	WITHOUT_CLASSIFICATION	3.0094466825316485E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999959876181181	WITHOUT_CLASSIFICATION	4.012381881802305E-6	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999993796403382	WITHOUT_CLASSIFICATION	6.203596617976882E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999890097963912	WITHOUT_CLASSIFICATION	1.0990203608910832E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.99999995161313	WITHOUT_CLASSIFICATION	4.838686985149659E-8	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.9992809614784253	WITHOUT_CLASSIFICATION	7.190385215747443E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999952471739	WITHOUT_CLASSIFICATION	4.7528261425696306E-9	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999991120145556	WITHOUT_CLASSIFICATION	8.879854444230892E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999952642218	WITHOUT_CLASSIFICATION	4.735778169435484E-9	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999671420071	WITHOUT_CLASSIFICATION	3.28579928850917E-8	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999998688726793	WITHOUT_CLASSIFICATION	1.3112732062912393E-7	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999952471739	WITHOUT_CLASSIFICATION	4.7528261425696306E-9	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999991120145556	WITHOUT_CLASSIFICATION	8.879854444230892E-7	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999671420071	WITHOUT_CLASSIFICATION	3.28579928850917E-8	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.999999083313197	WITHOUT_CLASSIFICATION	9.166868029823232E-7	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.9999978918857765	WITHOUT_CLASSIFICATION	2.1081142234275164E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999998224150146	WITHOUT_CLASSIFICATION	1.7758498534707385E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999253321691	WITHOUT_CLASSIFICATION	7.466783087618132E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999495808407	WITHOUT_CLASSIFICATION	5.041915930362294E-8	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999999998571251	WITHOUT_CLASSIFICATION	1.4287495788749338E-10	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999993474059591	WITHOUT_CLASSIFICATION	6.525940409726084E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999995594228464	WITHOUT_CLASSIFICATION	4.4057715361821895E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999996791537532	WITHOUT_CLASSIFICATION	3.208462468256833E-7	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999996346324277	WITHOUT_CLASSIFICATION	3.6536757234796307E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999999867954378	WITHOUT_CLASSIFICATION	1.320456221077983E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.999999867954378	WITHOUT_CLASSIFICATION	1.320456221077983E-7	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.999999999543159	WITHOUT_CLASSIFICATION	4.568410163968822E-10	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999998645365918	WITHOUT_CLASSIFICATION	1.3546340809514774E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999959207648	WITHOUT_CLASSIFICATION	4.0792351999637416E-9	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999997496047467	WITHOUT_CLASSIFICATION	2.503952533134724E-7	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999999879837564	WITHOUT_CLASSIFICATION	1.201624350072277E-8	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999809166649	WITHOUT_CLASSIFICATION	1.9083335204274483E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999506618076	WITHOUT_CLASSIFICATION	4.933819253909875E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999976244643	WITHOUT_CLASSIFICATION	2.3755356862199586E-9	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999661233737	WITHOUT_CLASSIFICATION	3.3876626319913637E-8	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999995055754871	WITHOUT_CLASSIFICATION	4.944245129434049E-7	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999999460805913	WITHOUT_CLASSIFICATION	5.3919408708241436E-8	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999956195479069	WITHOUT_CLASSIFICATION	4.380452093088536E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999726774951	WITHOUT_CLASSIFICATION	2.7322504816275163E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999991369966831	WITHOUT_CLASSIFICATION	8.630033168507155E-7	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999989806355861	WITHOUT_CLASSIFICATION	1.0193644139901177E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999790427263702	WITHOUT_CLASSIFICATION	2.0957273629793733E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999995694058924	WITHOUT_CLASSIFICATION	4.305941076321383E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999991707121348	WITHOUT_CLASSIFICATION	8.292878651452978E-7	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999699303218366	WITHOUT_CLASSIFICATION	3.0069678163404352E-5	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999977044240649	WITHOUT_CLASSIFICATION	2.2955759350883605E-6	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999995267275384	WITHOUT_CLASSIFICATION	4.732724614792174E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999987399795955	WITHOUT_CLASSIFICATION	1.2600204043764836E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999365602679	WITHOUT_CLASSIFICATION	6.343973212119626E-8	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999920765466461	WITHOUT_CLASSIFICATION	7.923453353806957E-6	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999979191212	WITHOUT_CLASSIFICATION	2.0808788683655847E-9	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.99999668187338	WITHOUT_CLASSIFICATION	3.318126620105375E-6	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999999978865359	WITHOUT_CLASSIFICATION	2.1134641191809316E-9	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999999185936371	WITHOUT_CLASSIFICATION	8.140636278624654E-8	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999999811025626	WITHOUT_CLASSIFICATION	1.8897437457021882E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999985580144	WITHOUT_CLASSIFICATION	1.4419856419838057E-9	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999972961119	WITHOUT_CLASSIFICATION	2.7038880938806325E-9	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999934704257	WITHOUT_CLASSIFICATION	6.529574264438422E-9	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999357422658	WITHOUT_CLASSIFICATION	6.425773426754209E-8	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999996555954721	WITHOUT_CLASSIFICATION	3.4440452778932263E-7	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999955762238	WITHOUT_CLASSIFICATION	4.4237762977633006E-9	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999843338316	WITHOUT_CLASSIFICATION	1.5666168431051404E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999940648877	WITHOUT_CLASSIFICATION	5.935112246749019E-9	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999999383322814	WITHOUT_CLASSIFICATION	6.166771860276873E-8	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999988968885334	WITHOUT_CLASSIFICATION	1.1031114665771538E-6	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999973341981271	WITHOUT_CLASSIFICATION	2.665801872848804E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999767104052	WITHOUT_CLASSIFICATION	2.328959478344752E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996604763149648	WITHOUT_CLASSIFICATION	3.395236850352245E-4	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999986638330878	WITHOUT_CLASSIFICATION	1.3361669122469404E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.999999929478823	WITHOUT_CLASSIFICATION	7.05211769850738E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999981092346152	WITHOUT_CLASSIFICATION	1.8907653848561218E-6	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999962959303	WITHOUT_CLASSIFICATION	3.7040696276209366E-9	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9998467888285268	WITHOUT_CLASSIFICATION	1.5321117147319761E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999999098123139	WITHOUT_CLASSIFICATION	9.018768602661143E-8	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999989923204663	WITHOUT_CLASSIFICATION	1.0076795337562874E-6	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.999999991141815	WITHOUT_CLASSIFICATION	8.85818503038028E-9	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.99999332149765	WITHOUT_CLASSIFICATION	6.678502350023031E-6	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.999999970751537	WITHOUT_CLASSIFICATION	2.9248462926672616E-8	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9999480250921696	WITHOUT_CLASSIFICATION	5.1974907830416514E-5	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999999980479732	WITHOUT_CLASSIFICATION	1.9520268404107745E-9	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999997676503497	WITHOUT_CLASSIFICATION	2.323496503244819E-7	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999902808053	WITHOUT_CLASSIFICATION	9.719194602827365E-9	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999962671011772	WITHOUT_CLASSIFICATION	3.7328988227162566E-6	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9999081469181303	WITHOUT_CLASSIFICATION	9.185308186974433E-5	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.7396911095913151	WITHOUT_CLASSIFICATION	0.26030889040868493	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999136303479946	WITHOUT_CLASSIFICATION	8.636965200542948E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999136303479946	WITHOUT_CLASSIFICATION	8.636965200542948E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999829370015	WITHOUT_CLASSIFICATION	1.7062998518011206E-8	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999996204829816	WITHOUT_CLASSIFICATION	3.795170183887863E-7	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999973188605	WITHOUT_CLASSIFICATION	2.6811395070899995E-9	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999858831117	WITHOUT_CLASSIFICATION	1.4116888383755045E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999998628855981	WITHOUT_CLASSIFICATION	1.3711440198436133E-7	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999999113215844	WITHOUT_CLASSIFICATION	8.867841561917447E-8	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.999996747876283	WITHOUT_CLASSIFICATION	3.2521237170557772E-6	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999485293341661	WITHOUT_CLASSIFICATION	5.147066583386024E-5	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.999999975733573	WITHOUT_CLASSIFICATION	2.426642696538093E-8	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999984338354441	WITHOUT_CLASSIFICATION	1.5661645559268686E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999939960896	WITHOUT_CLASSIFICATION	6.00391032916042E-9	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999869361639	WITHOUT_CLASSIFICATION	1.3063836165108611E-8	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999997048810093	WITHOUT_CLASSIFICATION	2.9511899060050644E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9978930545918326	WITHOUT_CLASSIFICATION	0.002106945408167347	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999999544908718	WITHOUT_CLASSIFICATION	4.550912834568476E-8	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.999998603459268	WITHOUT_CLASSIFICATION	1.3965407319525577E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999993601852786	WITHOUT_CLASSIFICATION	6.398147214682532E-7	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999986512205	WITHOUT_CLASSIFICATION	1.3487795037998992E-9	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999967170674106	WITHOUT_CLASSIFICATION	3.2829325893132644E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999902942341883	WITHOUT_CLASSIFICATION	9.705765811658392E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999954227489	WITHOUT_CLASSIFICATION	4.577251060582857E-9	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999098652443	WITHOUT_CLASSIFICATION	9.013475562749623E-8	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9982794790398187	WITHOUT_CLASSIFICATION	0.0017205209601811797	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999923072038	WITHOUT_CLASSIFICATION	7.692796223633886E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999930624962	WITHOUT_CLASSIFICATION	6.9375038312770775E-9	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999737171417945	WITHOUT_CLASSIFICATION	2.628285820547296E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999999414952868	WITHOUT_CLASSIFICATION	5.850471325898362E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999999993503232	WITHOUT_CLASSIFICATION	6.496767918212406E-10	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999999168684456	WITHOUT_CLASSIFICATION	8.313155450534801E-8	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999998859811	WITHOUT_CLASSIFICATION	1.1401897352236268E-10	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999980117202057	WITHOUT_CLASSIFICATION	1.9882797941469003E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999984971728617	WITHOUT_CLASSIFICATION	1.50282713831877E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999195277097	WITHOUT_CLASSIFICATION	8.047229032681386E-8	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999947439726664	WITHOUT_CLASSIFICATION	5.256027333600359E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999195277097	WITHOUT_CLASSIFICATION	8.047229032681386E-8	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999999478641749	WITHOUT_CLASSIFICATION	5.2135824966006925E-8	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991291887746	WITHOUT_CLASSIFICATION	8.708112252388377E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991291887746	WITHOUT_CLASSIFICATION	8.708112252388377E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999991291887746	WITHOUT_CLASSIFICATION	8.708112252388377E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997706009385	WITHOUT_CLASSIFICATION	2.293990614824687E-7	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999997706009385	WITHOUT_CLASSIFICATION	2.293990614824687E-7	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999997991717848	WITHOUT_CLASSIFICATION	2.0082821515734618E-7	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999998179322	WITHOUT_CLASSIFICATION	1.820677585631258E-10	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999761886256	WITHOUT_CLASSIFICATION	2.3811374358898988E-8	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.999880527953074	WITHOUT_CLASSIFICATION	1.1947204692602005E-4	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999998689117854	WITHOUT_CLASSIFICATION	1.3108821459619414E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999959025014045	WITHOUT_CLASSIFICATION	4.09749859553156E-6	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999952622142931	WITHOUT_CLASSIFICATION	4.737785706914434E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999987292365218	WITHOUT_CLASSIFICATION	1.2707634782535109E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999815959970556	WITHOUT_CLASSIFICATION	1.8404002944486806E-5	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999996480641601	WITHOUT_CLASSIFICATION	3.5193583984499203E-7	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999993643466222	WITHOUT_CLASSIFICATION	6.356533778161936E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999998382917809	WITHOUT_CLASSIFICATION	1.6170821910468195E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999985245136193	WITHOUT_CLASSIFICATION	1.4754863807277585E-6	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999998534780152	WITHOUT_CLASSIFICATION	1.4652198469708365E-7	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999998688227145	WITHOUT_CLASSIFICATION	1.3117728559191886E-7	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999916655555	WITHOUT_CLASSIFICATION	8.334444428159789E-9	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999994276235	WITHOUT_CLASSIFICATION	5.723765318855739E-10	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.999998702909054	WITHOUT_CLASSIFICATION	1.297090945904131E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.999998702909054	WITHOUT_CLASSIFICATION	1.297090945904131E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999993909690201	WITHOUT_CLASSIFICATION	6.090309798246556E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998133543448	WITHOUT_CLASSIFICATION	1.8664565509092029E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998133543448	WITHOUT_CLASSIFICATION	1.8664565509092029E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999997948693399	WITHOUT_CLASSIFICATION	2.051306600557179E-7	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999999727950197	WITHOUT_CLASSIFICATION	2.7204980237113263E-8	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999585456905944	WITHOUT_CLASSIFICATION	4.1454309405595654E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999999314941146	WITHOUT_CLASSIFICATION	6.850588542149782E-8	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999993480325511	WITHOUT_CLASSIFICATION	6.51967448846544E-7	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999999421483766	WITHOUT_CLASSIFICATION	5.785162349013376E-8	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999999742450284	WITHOUT_CLASSIFICATION	2.575497165914407E-8	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999810943713664	WITHOUT_CLASSIFICATION	1.890562863354709E-5	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999335090102	WITHOUT_CLASSIFICATION	6.649098985383873E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.999998599200598	WITHOUT_CLASSIFICATION	1.4007994020360547E-6	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9999632072797754	WITHOUT_CLASSIFICATION	3.6792720224630575E-5	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999966888616216	WITHOUT_CLASSIFICATION	3.311138378398509E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.999998315139143	WITHOUT_CLASSIFICATION	1.6848608571034515E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999999380833451	WITHOUT_CLASSIFICATION	6.191665485827249E-8	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999987292365218	WITHOUT_CLASSIFICATION	1.2707634782535109E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999980182413009	WITHOUT_CLASSIFICATION	1.981758699099577E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999886294911	WITHOUT_CLASSIFICATION	1.1370508901763247E-8	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999943379360052	WITHOUT_CLASSIFICATION	5.662063994790903E-6	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999943379360052	WITHOUT_CLASSIFICATION	5.662063994790903E-6	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999999860251964	WITHOUT_CLASSIFICATION	1.397480365704934E-8	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999888588197511	WITHOUT_CLASSIFICATION	1.1141180248886764E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999999916101893	WITHOUT_CLASSIFICATION	8.389810775771564E-9	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999993723575521	WITHOUT_CLASSIFICATION	6.276424478222906E-7	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.999999999966231	WITHOUT_CLASSIFICATION	3.376902879570851E-11	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999990409645678	WITHOUT_CLASSIFICATION	9.590354321563113E-7	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999419378282	WITHOUT_CLASSIFICATION	5.806217190933328E-8	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999991180467837	WITHOUT_CLASSIFICATION	8.819532163625497E-7	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999994992646429	WITHOUT_CLASSIFICATION	5.007353570730161E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999989110694868	WITHOUT_CLASSIFICATION	1.0889305132511306E-6	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9999617915729003	WITHOUT_CLASSIFICATION	3.8208427099737905E-5	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999996848528367	WITHOUT_CLASSIFICATION	3.1514716323196716E-7	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9345178242249984	WITHOUT_CLASSIFICATION	0.0654821757750016	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999847572977	WITHOUT_CLASSIFICATION	1.52427023190049E-8	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999988858275	WITHOUT_CLASSIFICATION	1.1141725256060983E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999967198235	WITHOUT_CLASSIFICATION	3.280176451546317E-9	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999996649483668	WITHOUT_CLASSIFICATION	3.3505163316168294E-7	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999847156733348	WITHOUT_CLASSIFICATION	1.5284326665193323E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999988384164193	WITHOUT_CLASSIFICATION	1.161583580712461E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999921954927	WITHOUT_CLASSIFICATION	7.804507240486669E-9	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999985060706207	WITHOUT_CLASSIFICATION	1.4939293793456629E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999780307478333	WITHOUT_CLASSIFICATION	2.1969252166609346E-5	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9999984394613334	WITHOUT_CLASSIFICATION	1.5605386665915223E-6	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999979191754	WITHOUT_CLASSIFICATION	2.080824605957009E-9	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999989877308622	WITHOUT_CLASSIFICATION	1.0122691378458983E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999985099815931	WITHOUT_CLASSIFICATION	1.4900184068943766E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999992493154495	WITHOUT_CLASSIFICATION	7.506845505571398E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999640416254446	WITHOUT_CLASSIFICATION	3.595837455547441E-5	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999956442065	WITHOUT_CLASSIFICATION	4.355793522406155E-9	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999989051905	WITHOUT_CLASSIFICATION	1.0948094885696216E-9	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999996475723978	WITHOUT_CLASSIFICATION	3.524276021846506E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999992909166511	WITHOUT_CLASSIFICATION	7.090833489304708E-7	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.999999437817112	WITHOUT_CLASSIFICATION	5.621828880357762E-7	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999999921719152	WITHOUT_CLASSIFICATION	7.828084829323622E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998515504723	WITHOUT_CLASSIFICATION	1.4844952767529153E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999999217836651	WITHOUT_CLASSIFICATION	7.821633480966484E-8	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9999640416254446	WITHOUT_CLASSIFICATION	3.595837455547441E-5	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999973215035	WITHOUT_CLASSIFICATION	2.6784965455751912E-9	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998515504723	WITHOUT_CLASSIFICATION	1.4844952767529153E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999997248316351	WITHOUT_CLASSIFICATION	2.7516836493108963E-7	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999999413534104	WITHOUT_CLASSIFICATION	5.864658958710416E-8	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999996964094056	WITHOUT_CLASSIFICATION	3.0359059437422156E-7	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999998241583808	WITHOUT_CLASSIFICATION	1.7584161924112565E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999998808573045	WITHOUT_CLASSIFICATION	1.1914269553952279E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999979594315124	WITHOUT_CLASSIFICATION	2.040568487731598E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999979594315124	WITHOUT_CLASSIFICATION	2.040568487731598E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9113991139608836	WITHOUT_CLASSIFICATION	0.08860088603911632	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999567589578313	WITHOUT_CLASSIFICATION	4.32410421687147E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999989651683913	WITHOUT_CLASSIFICATION	1.0348316087002617E-5	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.999989651683913	WITHOUT_CLASSIFICATION	1.0348316087002617E-5	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999994682224037	WITHOUT_CLASSIFICATION	5.317775962467444E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9999119223749973	WITHOUT_CLASSIFICATION	8.807762500277728E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999884568058802	WITHOUT_CLASSIFICATION	1.1543194119808228E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999884568058802	WITHOUT_CLASSIFICATION	1.1543194119808228E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999907048162786	WITHOUT_CLASSIFICATION	9.295183721291974E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999990702005425	WITHOUT_CLASSIFICATION	9.297994575435954E-7	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999999999654451	WITHOUT_CLASSIFICATION	3.455490198295162E-10	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999999222370305	WITHOUT_CLASSIFICATION	7.77629694518245E-8	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999999208128701	WITHOUT_CLASSIFICATION	7.91871298214286E-8	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999943713166048	WITHOUT_CLASSIFICATION	5.628683395168383E-6	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999998740903053	WITHOUT_CLASSIFICATION	1.2590969471149886E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999998925820104	WITHOUT_CLASSIFICATION	1.0741798965280898E-7	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999990792399736	WITHOUT_CLASSIFICATION	9.207600263558478E-7	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999998660875761	WITHOUT_CLASSIFICATION	1.3391242385467172E-7	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999438317233099	WITHOUT_CLASSIFICATION	5.616827669001557E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999991949787588	WITHOUT_CLASSIFICATION	8.050212411430424E-7	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999994027845397	WITHOUT_CLASSIFICATION	5.972154604008211E-7	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999956903661827	WITHOUT_CLASSIFICATION	4.30963381729174E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.99999902668544	WITHOUT_CLASSIFICATION	9.73314559940137E-7	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.9999999330560214	WITHOUT_CLASSIFICATION	6.694397853425575E-8	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999998781103308	WITHOUT_CLASSIFICATION	1.2188966919447846E-6	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999997899882183	WITHOUT_CLASSIFICATION	2.1001178171010958E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999995780195222	WITHOUT_CLASSIFICATION	4.219804779082905E-7	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9859930232787303	WITHOUT_CLASSIFICATION	0.014006976721269764	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.999999996344906	WITHOUT_CLASSIFICATION	3.6550939862941223E-9	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999992724003478	WITHOUT_CLASSIFICATION	7.275996523167987E-7	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9999524337566453	WITHOUT_CLASSIFICATION	4.756624335469893E-5	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.999998839507271	WITHOUT_CLASSIFICATION	1.160492728978322E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.999999150201187	WITHOUT_CLASSIFICATION	8.497988129684175E-7	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.9999999172458897	WITHOUT_CLASSIFICATION	8.275411029530999E-8	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999999808887902	WITHOUT_CLASSIFICATION	1.911120975317552E-8	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999996517093875	WITHOUT_CLASSIFICATION	3.482906124466677E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998706645231	WITHOUT_CLASSIFICATION	1.293354768942311E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999998706645231	WITHOUT_CLASSIFICATION	1.293354768942311E-7	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.99999999972255	WITHOUT_CLASSIFICATION	2.774498995731881E-10	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999999968333191	WITHOUT_CLASSIFICATION	3.1666809269102387E-9	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999960596201	WITHOUT_CLASSIFICATION	3.9403799576514426E-9	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999996831750755	WITHOUT_CLASSIFICATION	3.1682492446264545E-7	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999139262328	WITHOUT_CLASSIFICATION	8.607376724052632E-8	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999993580515887	WITHOUT_CLASSIFICATION	6.419484111821539E-7	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999970962044136	WITHOUT_CLASSIFICATION	2.903795586506601E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998837530447	WITHOUT_CLASSIFICATION	1.1624695530187662E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.99999999926484	WITHOUT_CLASSIFICATION	7.351599830968643E-10	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997825050562	WITHOUT_CLASSIFICATION	2.174949438924718E-7	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9999018518621955	WITHOUT_CLASSIFICATION	9.81481378045318E-5	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999908058356	WITHOUT_CLASSIFICATION	9.194164488809317E-9	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9998775363250636	WITHOUT_CLASSIFICATION	1.2246367493632385E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999826349747941	WITHOUT_CLASSIFICATION	1.7365025205935592E-5	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999993530874921	WITHOUT_CLASSIFICATION	6.469125078704291E-7	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.999998390467605	WITHOUT_CLASSIFICATION	1.6095323949312513E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9997940923901596	WITHOUT_CLASSIFICATION	2.0590760984042137E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.999999405310875	WITHOUT_CLASSIFICATION	5.946891251346537E-7	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999996728892896	WITHOUT_CLASSIFICATION	3.271107103224056E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999987629728055	WITHOUT_CLASSIFICATION	1.2370271944833635E-6	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999981238252624	WITHOUT_CLASSIFICATION	1.876174737608069E-6	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9999569418450366	WITHOUT_CLASSIFICATION	4.305815496332598E-5	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999995948311049	WITHOUT_CLASSIFICATION	4.051688950865584E-7	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999991161161492	WITHOUT_CLASSIFICATION	8.838838507088869E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999987576469314	WITHOUT_CLASSIFICATION	1.2423530686639613E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996790647728517	WITHOUT_CLASSIFICATION	3.2093522714830776E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999969149453456	WITHOUT_CLASSIFICATION	3.085054654391143E-6	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999977666253205	WITHOUT_CLASSIFICATION	2.2333746796006186E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999998399627289	WITHOUT_CLASSIFICATION	1.600372709891667E-7	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999997112354577	WITHOUT_CLASSIFICATION	2.8876454226887993E-7	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999950948684	WITHOUT_CLASSIFICATION	4.905131607861987E-9	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999995059111331	WITHOUT_CLASSIFICATION	4.940888669267527E-7	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999992287776761	WITHOUT_CLASSIFICATION	7.712223239574872E-7	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999988556542374	WITHOUT_CLASSIFICATION	1.144345762571989E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999991231345176	WITHOUT_CLASSIFICATION	8.768654823956894E-7	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.999947041300828	WITHOUT_CLASSIFICATION	5.295869917185706E-5	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999961919354836	WITHOUT_CLASSIFICATION	3.808064516419004E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999650939809339	WITHOUT_CLASSIFICATION	3.490601906598909E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999942369746845	WITHOUT_CLASSIFICATION	5.763025315554909E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.999999932262308	WITHOUT_CLASSIFICATION	6.773769199543027E-8	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9999973658785172	WITHOUT_CLASSIFICATION	2.634121482829584E-6	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999999723027909	WITHOUT_CLASSIFICATION	2.7697209084295902E-8	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999979058532749	WITHOUT_CLASSIFICATION	2.0941467251607723E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999979058532749	WITHOUT_CLASSIFICATION	2.0941467251607723E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9999882484838766	WITHOUT_CLASSIFICATION	1.1751516123464383E-5	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.999999975573962	WITHOUT_CLASSIFICATION	2.4426037962480502E-8	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9958480326410134	WITHOUT_CLASSIFICATION	0.004151967358986603	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999998460889966	WITHOUT_CLASSIFICATION	1.5391100341745174E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.999940426748535	WITHOUT_CLASSIFICATION	5.9573251465066496E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.999996272937635	WITHOUT_CLASSIFICATION	3.727062365011137E-6	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9998951806151601	WITHOUT_CLASSIFICATION	1.0481938483978764E-4	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999785869590917	WITHOUT_CLASSIFICATION	2.1413040908308513E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.999999863430522	WITHOUT_CLASSIFICATION	1.3656947785313865E-7	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999995134634864	WITHOUT_CLASSIFICATION	4.86536513566624E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.999999942165346	WITHOUT_CLASSIFICATION	5.7834653874933895E-8	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.999999312580057	WITHOUT_CLASSIFICATION	6.874199429701221E-7	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999999279578432	WITHOUT_CLASSIFICATION	7.204215681468812E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999932935195	WITHOUT_CLASSIFICATION	6.706480454087348E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999702917953	WITHOUT_CLASSIFICATION	2.9708204551414438E-8	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999997309470602	WITHOUT_CLASSIFICATION	2.6905293979512424E-7	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999943280927	WITHOUT_CLASSIFICATION	5.671907237364183E-9	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.999999736230392	WITHOUT_CLASSIFICATION	2.6376960805828094E-7	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999474652782	WITHOUT_CLASSIFICATION	5.2534721720318804E-8	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999997068769084	WITHOUT_CLASSIFICATION	2.9312309159121127E-7	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999998696298198	WITHOUT_CLASSIFICATION	1.3037018021017507E-7	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999670069324045	WITHOUT_CLASSIFICATION	3.2993067595560084E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999990707003131	WITHOUT_CLASSIFICATION	9.292996868104966E-7	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.999999807387445	WITHOUT_CLASSIFICATION	1.9261255509901922E-7	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999995995636	WITHOUT_CLASSIFICATION	4.0043638003148784E-10	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999997578786	WITHOUT_CLASSIFICATION	2.4212140410196866E-9	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999955392287	WITHOUT_CLASSIFICATION	4.460771343301792E-9	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999550060419	WITHOUT_CLASSIFICATION	4.499395803979939E-8	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999671762595	WITHOUT_CLASSIFICATION	3.2823740528124645E-8	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999995157196601	WITHOUT_CLASSIFICATION	4.842803400167825E-7	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999768221766	WITHOUT_CLASSIFICATION	2.3177823474887775E-8	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999999444316312	WITHOUT_CLASSIFICATION	5.556836875426834E-8	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999809853726973	WITHOUT_CLASSIFICATION	1.901462730270618E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.995477122393932	WITHOUT_CLASSIFICATION	0.004522877606067978	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999650939809339	WITHOUT_CLASSIFICATION	3.490601906598909E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9999564821471554	WITHOUT_CLASSIFICATION	4.351785284473807E-5	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999841318619	WITHOUT_CLASSIFICATION	1.5868138166245566E-8	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999999841318619	WITHOUT_CLASSIFICATION	1.5868138166245566E-8	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999956220406	WITHOUT_CLASSIFICATION	4.377959431056912E-9	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999977684872	WITHOUT_CLASSIFICATION	2.231512638776131E-9	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.99999027022229	WITHOUT_CLASSIFICATION	9.729777709971905E-6	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.999794428727323	WITHOUT_CLASSIFICATION	2.055712726769248E-4	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9974127154726259	WITHOUT_CLASSIFICATION	0.002587284527374114	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9979736503351008	WITHOUT_CLASSIFICATION	0.0020263496648992396	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9977922082139077	WITHOUT_CLASSIFICATION	0.0022077917860923754	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9980658734492986	WITHOUT_CLASSIFICATION	0.0019341265507012973	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9916865614658411	WITHOUT_CLASSIFICATION	0.008313438534158802	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9947473346717843	WITHOUT_CLASSIFICATION	0.0052526653282156475	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9920626464347583	WITHOUT_CLASSIFICATION	0.007937353565241759	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9835225901299803	WITHOUT_CLASSIFICATION	0.016477409870019746	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9982757417625161	WITHOUT_CLASSIFICATION	0.001724258237483867	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999980822931057	WITHOUT_CLASSIFICATION	1.917706894228116E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.999999732783669	WITHOUT_CLASSIFICATION	2.6721633100928476E-7	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999985962215715	WITHOUT_CLASSIFICATION	1.40377842846054E-6	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9974936790472306	WITHOUT_CLASSIFICATION	0.002506320952769353	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.9717004900081232	WITHOUT_CLASSIFICATION	0.028299509991876682	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9860386382531408	WITHOUT_CLASSIFICATION	0.01396136174685922	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9911602817725119	WITHOUT_CLASSIFICATION	0.008839718227488207	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9915392390629423	WITHOUT_CLASSIFICATION	0.008460760937057802	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9909075217845044	WITHOUT_CLASSIFICATION	0.009092478215495598	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999991876381153	WITHOUT_CLASSIFICATION	8.123618846111249E-7	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999999316521472	WITHOUT_CLASSIFICATION	6.834785287790299E-8	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999993029294	WITHOUT_CLASSIFICATION	6.970707214658819E-10	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9886648793881886	WITHOUT_CLASSIFICATION	0.011335120611811389	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999994690731975	WITHOUT_CLASSIFICATION	5.309268024714317E-7	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998487577796	WITHOUT_CLASSIFICATION	1.512422203536893E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999990907630953	WITHOUT_CLASSIFICATION	9.092369047117669E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999960682298829	WITHOUT_CLASSIFICATION	3.931770117201516E-6	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999999835190138	WITHOUT_CLASSIFICATION	1.648098631315909E-8	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999213444491	WITHOUT_CLASSIFICATION	7.865555076978489E-8	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999998488618207	WITHOUT_CLASSIFICATION	1.5113817932660426E-7	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999999918239638	WITHOUT_CLASSIFICATION	8.176036269286023E-9	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999979079849947	WITHOUT_CLASSIFICATION	2.0920150052898447E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999980480279606	WITHOUT_CLASSIFICATION	1.9519720394647623E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999968674161	WITHOUT_CLASSIFICATION	3.132583878495489E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9886648793881886	WITHOUT_CLASSIFICATION	0.011335120611811389	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999994690731975	WITHOUT_CLASSIFICATION	5.309268024714317E-7	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998487577796	WITHOUT_CLASSIFICATION	1.512422203536893E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999960682298829	WITHOUT_CLASSIFICATION	3.931770117201516E-6	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9955372835646462	WITHOUT_CLASSIFICATION	0.004462716435353743	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999961373343	WITHOUT_CLASSIFICATION	3.862665721772704E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999596493017241	WITHOUT_CLASSIFICATION	4.0350698275971595E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.999999664429151	WITHOUT_CLASSIFICATION	3.355708489540743E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999955164093217	WITHOUT_CLASSIFICATION	4.483590678260681E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999964333596	WITHOUT_CLASSIFICATION	3.566640362120208E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999987775789051	WITHOUT_CLASSIFICATION	1.2224210949033981E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997951379044	WITHOUT_CLASSIFICATION	2.0486209563881626E-7	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999998922343282	WITHOUT_CLASSIFICATION	1.0776567192076552E-7	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999949410991351	WITHOUT_CLASSIFICATION	5.0589008649262785E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999999634947582	WITHOUT_CLASSIFICATION	3.6505241823992906E-8	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999999799032654	WITHOUT_CLASSIFICATION	2.0096734678264312E-8	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999949148332	WITHOUT_CLASSIFICATION	5.085166848589371E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999983888927471	WITHOUT_CLASSIFICATION	1.6111072530017545E-6	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999974609824097	WITHOUT_CLASSIFICATION	2.539017590254582E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999976734948488	WITHOUT_CLASSIFICATION	2.3265051512706383E-6	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999999333425005	WITHOUT_CLASSIFICATION	6.665749958408832E-8	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999994019165729	WITHOUT_CLASSIFICATION	5.980834270500723E-7	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.999999830219248	WITHOUT_CLASSIFICATION	1.6978075203376035E-7	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999968674161	WITHOUT_CLASSIFICATION	3.132583878495489E-9	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999961373343	WITHOUT_CLASSIFICATION	3.862665721772704E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9999596493017241	WITHOUT_CLASSIFICATION	4.0350698275971595E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999955164093217	WITHOUT_CLASSIFICATION	4.483590678260681E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999999964333596	WITHOUT_CLASSIFICATION	3.566640362120208E-9	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999987775789051	WITHOUT_CLASSIFICATION	1.2224210949033981E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997951379044	WITHOUT_CLASSIFICATION	2.0486209563881626E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999998728068088	WITHOUT_CLASSIFICATION	1.271931912085377E-7	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999873234610743	WITHOUT_CLASSIFICATION	1.2676538925683645E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999672312894	WITHOUT_CLASSIFICATION	3.2768710750296544E-8	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999995025927	WITHOUT_CLASSIFICATION	4.974074034665459E-10	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998189261157	WITHOUT_CLASSIFICATION	1.8107388443928997E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999998189261157	WITHOUT_CLASSIFICATION	1.8107388443928997E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999923069495	WITHOUT_CLASSIFICATION	7.693050498323217E-9	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999985109119367	WITHOUT_CLASSIFICATION	1.4890880632385038E-6	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999999851410795	WITHOUT_CLASSIFICATION	1.485892047882109E-8	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999992467541804	WITHOUT_CLASSIFICATION	7.532458195137513E-7	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999939317742	WITHOUT_CLASSIFICATION	6.068225818387564E-9	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999977211428314	WITHOUT_CLASSIFICATION	2.2788571685574264E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999993806755721	WITHOUT_CLASSIFICATION	6.193244277920664E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999997202336995	WITHOUT_CLASSIFICATION	2.797663004474977E-7	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999997629339062	WITHOUT_CLASSIFICATION	2.3706609381943493E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999404684699637	WITHOUT_CLASSIFICATION	5.9531530036214365E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999786822966092	WITHOUT_CLASSIFICATION	2.1317703390710087E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9992390581329263	WITHOUT_CLASSIFICATION	7.609418670737473E-4	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999934077766557	WITHOUT_CLASSIFICATION	6.59222334437266E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999992757330023	WITHOUT_CLASSIFICATION	7.242669978215743E-7	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999991890614571	WITHOUT_CLASSIFICATION	8.109385428421987E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999720990048901	WITHOUT_CLASSIFICATION	2.7900995109801907E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999993939502861	WITHOUT_CLASSIFICATION	6.060497138361991E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.999999936163846	WITHOUT_CLASSIFICATION	6.383615394590877E-8	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999999514623064	WITHOUT_CLASSIFICATION	4.8537693713768346E-8	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.999999832121294	WITHOUT_CLASSIFICATION	1.6787870601465156E-7	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9650351230930938	IMPLEMENTATION	0.034964876906906105	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.999999962691497	WITHOUT_CLASSIFICATION	3.730850307234492E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999948080431	WITHOUT_CLASSIFICATION	5.191956858791231E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6160863360744732	WITHOUT_CLASSIFICATION	0.3839136639255269	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243687835	WITHOUT_CLASSIFICATION	1.9775631216487095E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999973025581556	WITHOUT_CLASSIFICATION	2.6974418445025213E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999983665352	WITHOUT_CLASSIFICATION	1.6334649063652168E-9	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999997676637815	WITHOUT_CLASSIFICATION	2.3233621844352376E-7	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999995967454868	WITHOUT_CLASSIFICATION	4.032545131424736E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243687835	WITHOUT_CLASSIFICATION	1.9775631216487095E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.9999973025581556	WITHOUT_CLASSIFICATION	2.6974418445025213E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999992757330023	WITHOUT_CLASSIFICATION	7.242669978215743E-7	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999762368692651	WITHOUT_CLASSIFICATION	2.376313073500867E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999990377138396	WITHOUT_CLASSIFICATION	9.622861604300402E-7	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999884661856472	WITHOUT_CLASSIFICATION	1.153381435279572E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999999999788535	WITHOUT_CLASSIFICATION	2.1146505504947002E-10	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999983640269805	WITHOUT_CLASSIFICATION	1.6359730195723424E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999988167784626	WITHOUT_CLASSIFICATION	1.183221537407325E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999975670161882	WITHOUT_CLASSIFICATION	2.432983811810377E-6	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999981011737639	WITHOUT_CLASSIFICATION	1.8988262361617712E-6	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999979020284243	WITHOUT_CLASSIFICATION	2.0979715756193865E-6	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999999582266	WITHOUT_CLASSIFICATION	4.177332543885381E-11	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999925791216028	WITHOUT_CLASSIFICATION	7.420878397163534E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999833969072497	WITHOUT_CLASSIFICATION	1.6603092750271066E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.9999301715288152	WITHOUT_CLASSIFICATION	6.9828471184745E-5	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999999928149085	WITHOUT_CLASSIFICATION	7.18509141464638E-9	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999999992402596	WITHOUT_CLASSIFICATION	7.597403421961433E-10	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999995535205679	WITHOUT_CLASSIFICATION	4.464794320261604E-7	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.99998364000624	WITHOUT_CLASSIFICATION	1.6359993760067546E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999863310587274	WITHOUT_CLASSIFICATION	1.3668941272648328E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999300855193914	WITHOUT_CLASSIFICATION	6.991448060859944E-5	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999846237242	WITHOUT_CLASSIFICATION	1.5376275877777116E-8	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999999587298707	WITHOUT_CLASSIFICATION	4.1270129222233126E-8	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999133221861	WITHOUT_CLASSIFICATION	8.667781391671407E-8	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999996000689274	WITHOUT_CLASSIFICATION	3.999310725248232E-7	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999964864802	WITHOUT_CLASSIFICATION	3.513519715144251E-9	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999999964593149	WITHOUT_CLASSIFICATION	3.5406850996351455E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999999378619376	WITHOUT_CLASSIFICATION	6.213806227284186E-8	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999854406970726	WITHOUT_CLASSIFICATION	1.4559302927319816E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999923230917812	WITHOUT_CLASSIFICATION	7.67690821870939E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999992395163066	WITHOUT_CLASSIFICATION	7.604836933345983E-7	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999975966735	WITHOUT_CLASSIFICATION	2.403326602129672E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999991824270351	WITHOUT_CLASSIFICATION	8.175729647616133E-7	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999934077766557	WITHOUT_CLASSIFICATION	6.59222334437266E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999998823372	WITHOUT_CLASSIFICATION	1.176628734830877E-10	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999928085409141	WITHOUT_CLASSIFICATION	7.191459085904187E-5	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999998999712811	WITHOUT_CLASSIFICATION	1.0002871896250053E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999968390818004	WITHOUT_CLASSIFICATION	3.160918199560438E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999968390818004	WITHOUT_CLASSIFICATION	3.160918199560438E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999998880125778	WITHOUT_CLASSIFICATION	1.1198742219073015E-7	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9999675780039148	WITHOUT_CLASSIFICATION	3.242199608523815E-5	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999944724947053	WITHOUT_CLASSIFICATION	5.527505294715959E-6	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999997466142067	WITHOUT_CLASSIFICATION	2.5338579332889575E-7	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.999999958341801	WITHOUT_CLASSIFICATION	4.165819897683265E-8	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999998069646	WITHOUT_CLASSIFICATION	1.9303524872413623E-10	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999997305734897	WITHOUT_CLASSIFICATION	2.694265103955807E-7	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999443147214963	WITHOUT_CLASSIFICATION	5.568527850379007E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999368828868	WITHOUT_CLASSIFICATION	6.311711325062966E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999976170823862	WITHOUT_CLASSIFICATION	2.3829176138483386E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999998846747726	WITHOUT_CLASSIFICATION	1.1532522743384269E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999606619938	WITHOUT_CLASSIFICATION	3.933800606403606E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998990493831	WITHOUT_CLASSIFICATION	1.00950616900052E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.999999833473919	WITHOUT_CLASSIFICATION	1.6652608115395453E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999995501638312	WITHOUT_CLASSIFICATION	4.4983616882593646E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.999997886548414	WITHOUT_CLASSIFICATION	2.1134515859912426E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999978824479	WITHOUT_CLASSIFICATION	2.117552242487743E-9	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999978824479	WITHOUT_CLASSIFICATION	2.117552242487743E-9	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.99999887027031	WITHOUT_CLASSIFICATION	1.1297296900481E-6	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.99999887027031	WITHOUT_CLASSIFICATION	1.1297296900481E-6	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999990340285	WITHOUT_CLASSIFICATION	9.659715304459669E-10	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999932285368	WITHOUT_CLASSIFICATION	6.771463187903938E-9	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998574018107	WITHOUT_CLASSIFICATION	1.4259818920149494E-7	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9945646976944286	WITHOUT_CLASSIFICATION	0.005435302305571376	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999894388178	WITHOUT_CLASSIFICATION	1.056118223654937E-8	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999982042538608	WITHOUT_CLASSIFICATION	1.795746139203118E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999998156148433	WITHOUT_CLASSIFICATION	1.8438515670602078E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999999606619938	WITHOUT_CLASSIFICATION	3.933800606403606E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999998990493831	WITHOUT_CLASSIFICATION	1.00950616900052E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999995501638312	WITHOUT_CLASSIFICATION	4.4983616882593646E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999944963424	WITHOUT_CLASSIFICATION	5.5036576898935115E-9	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999965739090309	WITHOUT_CLASSIFICATION	3.4260909691548794E-6	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999880606668	WITHOUT_CLASSIFICATION	1.1939333165756483E-8	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999990821843462	WITHOUT_CLASSIFICATION	9.178156538258753E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.9999999998815204	WITHOUT_CLASSIFICATION	1.1847957151230873E-10	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999995874057718	WITHOUT_CLASSIFICATION	4.1259422815370366E-7	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999996488875459	WITHOUT_CLASSIFICATION	3.51112454117313E-7	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999978599351326	WITHOUT_CLASSIFICATION	2.1400648675115395E-6	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999934769331315	WITHOUT_CLASSIFICATION	6.523066868628353E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999999981746	WITHOUT_CLASSIFICATION	1.82540901730845E-12	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9999793269783205	WITHOUT_CLASSIFICATION	2.0673021679536537E-5	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.999998444203211	WITHOUT_CLASSIFICATION	1.5557967889182104E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999999287290926	WITHOUT_CLASSIFICATION	7.127090737565442E-8	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999999229140006	WITHOUT_CLASSIFICATION	7.708599943399618E-8	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9997729626884486	WITHOUT_CLASSIFICATION	2.2703731155141965E-4	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999999907356122	WITHOUT_CLASSIFICATION	9.264387827777731E-9	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999998002528034	WITHOUT_CLASSIFICATION	1.9974719662627604E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9997987270012564	WITHOUT_CLASSIFICATION	2.012729987435645E-4	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999904312181728	WITHOUT_CLASSIFICATION	9.568781827207364E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999999994552634	WITHOUT_CLASSIFICATION	5.447366313392934E-10	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.999999999353837	WITHOUT_CLASSIFICATION	6.46162927772029E-10	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999753068746575	WITHOUT_CLASSIFICATION	2.4693125342452006E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999974885431429	WITHOUT_CLASSIFICATION	2.5114568571341663E-6	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999818649463	WITHOUT_CLASSIFICATION	1.8135053718593606E-8	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999994008467663	WITHOUT_CLASSIFICATION	5.991532337350326E-7	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.999999412224909	WITHOUT_CLASSIFICATION	5.87775090987783E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999804416301722	WITHOUT_CLASSIFICATION	1.955836982772977E-5	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999884941563361	WITHOUT_CLASSIFICATION	1.150584366390459E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999999968247134	WITHOUT_CLASSIFICATION	3.175286585598477E-9	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999993814298342	WITHOUT_CLASSIFICATION	6.185701657619201E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999995875904045	WITHOUT_CLASSIFICATION	4.124095954762271E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999998214586204	WITHOUT_CLASSIFICATION	1.7854137950425696E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999997912694797	WITHOUT_CLASSIFICATION	2.0873052023973732E-7	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999998529601999	WITHOUT_CLASSIFICATION	1.4703980004316235E-7	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999861442686847	WITHOUT_CLASSIFICATION	1.3855731315193304E-5	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.999998343806238	WITHOUT_CLASSIFICATION	1.6561937620054976E-6	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999935187629237	WITHOUT_CLASSIFICATION	6.481237076246878E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999998060551921	WITHOUT_CLASSIFICATION	1.9394480774355617E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999997409406222	WITHOUT_CLASSIFICATION	2.5905937784952355E-7	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999989395573	WITHOUT_CLASSIFICATION	1.060442766188227E-9	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999997067805343	WITHOUT_CLASSIFICATION	2.932194657736254E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999928085409141	WITHOUT_CLASSIFICATION	7.191459085904187E-5	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999935187629237	WITHOUT_CLASSIFICATION	6.481237076246878E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999864172778	WITHOUT_CLASSIFICATION	1.3582722099216014E-8	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999993047809784	WITHOUT_CLASSIFICATION	6.952190214597214E-7	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999989743539102	WITHOUT_CLASSIFICATION	1.0256460898539667E-6	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999995953140097	WITHOUT_CLASSIFICATION	4.046859902825825E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999995953140097	WITHOUT_CLASSIFICATION	4.046859902825825E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9988352895757296	WITHOUT_CLASSIFICATION	0.0011647104242703584	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999641765042874	WITHOUT_CLASSIFICATION	3.5823495712541686E-5	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999992806353107	WITHOUT_CLASSIFICATION	7.193646892933365E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999969240686	WITHOUT_CLASSIFICATION	3.0759315163650192E-9	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9983354427247623	WITHOUT_CLASSIFICATION	0.001664557275237721	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999998802400651	WITHOUT_CLASSIFICATION	1.1975993490161986E-7	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999995715817	WITHOUT_CLASSIFICATION	4.284183602137821E-10	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999976629157021	WITHOUT_CLASSIFICATION	2.3370842978826627E-6	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999989953348	WITHOUT_CLASSIFICATION	1.0046651951293343E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999989953348	WITHOUT_CLASSIFICATION	1.0046651951293343E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999999165890562	WITHOUT_CLASSIFICATION	8.341094388708292E-8	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999947142203414	WITHOUT_CLASSIFICATION	5.28577965868871E-6	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999931216619	WITHOUT_CLASSIFICATION	6.87833814834933E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999964429923	WITHOUT_CLASSIFICATION	3.5570077124899876E-9	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999994244992	WITHOUT_CLASSIFICATION	5.755006510974172E-10	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999998244965652	WITHOUT_CLASSIFICATION	1.7550343483375893E-7	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999999974923642	WITHOUT_CLASSIFICATION	2.507635723565467E-9	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999985267792	WITHOUT_CLASSIFICATION	1.4732207343506703E-9	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999999021208493	WITHOUT_CLASSIFICATION	9.787915064403368E-8	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999930660763	WITHOUT_CLASSIFICATION	6.933923712369211E-9	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999891890096892	WITHOUT_CLASSIFICATION	1.0810990310686321E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999999798616902	WITHOUT_CLASSIFICATION	2.0138309765432183E-8	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999994543452195	WITHOUT_CLASSIFICATION	5.456547805846475E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996540483606	WITHOUT_CLASSIFICATION	3.459516394963311E-7	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999996540483606	WITHOUT_CLASSIFICATION	3.459516394963311E-7	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999999971339876	WITHOUT_CLASSIFICATION	2.866012347102084E-9	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997951379044	WITHOUT_CLASSIFICATION	2.0486209563881626E-7	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999993926136	WITHOUT_CLASSIFICATION	6.073863748813399E-10	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999997523081171	WITHOUT_CLASSIFICATION	2.476918828711007E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999999875814	WITHOUT_CLASSIFICATION	1.2418574803165932E-11	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999908534368	WITHOUT_CLASSIFICATION	9.146563196014125E-9	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999982412088	WITHOUT_CLASSIFICATION	1.758791240508546E-9	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.999998029618221	WITHOUT_CLASSIFICATION	1.9703817789554663E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999958490528835	WITHOUT_CLASSIFICATION	4.150947116534322E-6	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999997926508315	WITHOUT_CLASSIFICATION	2.073491684192465E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999822726596613	WITHOUT_CLASSIFICATION	1.772734033866631E-5	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999999820781192	WITHOUT_CLASSIFICATION	1.792188074540784E-8	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999135065416895	WITHOUT_CLASSIFICATION	8.649345831053388E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999999512625	WITHOUT_CLASSIFICATION	4.8737366842097674E-11	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999999884385502	WITHOUT_CLASSIFICATION	1.1561449763014326E-8	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999920451627	WITHOUT_CLASSIFICATION	7.954837451448487E-9	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999405656298	WITHOUT_CLASSIFICATION	5.9434370091851505E-8	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999997202050939	WITHOUT_CLASSIFICATION	2.7979490608318827E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999684035809	WITHOUT_CLASSIFICATION	3.159641907859551E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999991015960918	WITHOUT_CLASSIFICATION	8.984039081418831E-7	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999969083778292	WITHOUT_CLASSIFICATION	3.0916221709007343E-6	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999912493835	WITHOUT_CLASSIFICATION	8.750616400652991E-9	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999388066909006	WITHOUT_CLASSIFICATION	6.119330909936302E-5	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999981824649202	WITHOUT_CLASSIFICATION	1.8175350798520525E-6	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.7758047115962347	WITHOUT_CLASSIFICATION	0.22419528840376532	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999990004015928	WITHOUT_CLASSIFICATION	9.995984072350078E-7	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999992082485293	WITHOUT_CLASSIFICATION	7.917514706985022E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999985850972264	WITHOUT_CLASSIFICATION	1.414902773575099E-6	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999999202336843	WITHOUT_CLASSIFICATION	7.976631567738451E-8	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9985502268882137	WITHOUT_CLASSIFICATION	0.0014497731117863117	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999989021832705	WITHOUT_CLASSIFICATION	1.0978167294842063E-6	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999984742214415	WITHOUT_CLASSIFICATION	1.525778558556458E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999486071631	WITHOUT_CLASSIFICATION	5.139283690980371E-8	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9994125550641835	WITHOUT_CLASSIFICATION	5.874449358165031E-4	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999978826582022	WITHOUT_CLASSIFICATION	2.1173417977233724E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999891984368	WITHOUT_CLASSIFICATION	1.080156322650964E-8	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999996499918851	WITHOUT_CLASSIFICATION	3.5000811492811156E-7	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999998730167692	WITHOUT_CLASSIFICATION	1.2698323077624795E-7	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999999967539042	WITHOUT_CLASSIFICATION	3.2460959531009936E-9	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999997272458625	WITHOUT_CLASSIFICATION	2.7275413741170627E-7	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999998283179841	WITHOUT_CLASSIFICATION	1.716820160084242E-7	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9943996542548892	WITHOUT_CLASSIFICATION	0.005600345745110798	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.999963058098769	WITHOUT_CLASSIFICATION	3.6941901231089117E-5	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.999996051971785	WITHOUT_CLASSIFICATION	3.94802821497972E-6	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.999999870104533	WITHOUT_CLASSIFICATION	1.2989546710535424E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999964980591204	WITHOUT_CLASSIFICATION	3.501940879598533E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999867335704	WITHOUT_CLASSIFICATION	1.3266429519931262E-8	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999992926286	WITHOUT_CLASSIFICATION	7.073713686827185E-10	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999957057446142	WITHOUT_CLASSIFICATION	4.2942553857527725E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243687835	WITHOUT_CLASSIFICATION	1.9775631216487095E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243687835	WITHOUT_CLASSIFICATION	1.9775631216487095E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999997351571132	WITHOUT_CLASSIFICATION	2.6484288684647006E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999999551608367	WITHOUT_CLASSIFICATION	4.4839163254303846E-8	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999764656434	WITHOUT_CLASSIFICATION	2.353435660286521E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999999998151975	WITHOUT_CLASSIFICATION	1.8480248272104064E-10	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999995727468437	WITHOUT_CLASSIFICATION	4.272531562188025E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999991256601133	WITHOUT_CLASSIFICATION	8.74339886638384E-7	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999959709153	WITHOUT_CLASSIFICATION	4.029084698350254E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999999993026593	WITHOUT_CLASSIFICATION	6.973407912355842E-10	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999999985518049	WITHOUT_CLASSIFICATION	1.4481951250938797E-9	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999999244012971	WITHOUT_CLASSIFICATION	7.559870284011695E-8	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997778159362	WITHOUT_CLASSIFICATION	2.2218406380764628E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997778159362	WITHOUT_CLASSIFICATION	2.2218406380764628E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997778159362	WITHOUT_CLASSIFICATION	2.2218406380764628E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9992038471533631	WITHOUT_CLASSIFICATION	7.961528466369226E-4	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999999482917824	WITHOUT_CLASSIFICATION	5.170821749045672E-8	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999996050583517	WITHOUT_CLASSIFICATION	3.949416482351294E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999996112092815	WITHOUT_CLASSIFICATION	3.887907184738032E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999996112092815	WITHOUT_CLASSIFICATION	3.887907184738032E-7	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.999992397421933	WITHOUT_CLASSIFICATION	7.602578067001207E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999438245526573	WITHOUT_CLASSIFICATION	5.617544734274026E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.999999999500018	WITHOUT_CLASSIFICATION	4.999818917701387E-10	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999008343401	WITHOUT_CLASSIFICATION	9.916565999475523E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999997958215745	WITHOUT_CLASSIFICATION	2.0417842552809433E-7	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9994016488685459	WITHOUT_CLASSIFICATION	5.983511314541803E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999998819614038	WITHOUT_CLASSIFICATION	1.1803859612463643E-7	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999697770693956	WITHOUT_CLASSIFICATION	3.0222930604429955E-5	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999968591415	WITHOUT_CLASSIFICATION	3.140858416911882E-9	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999977707823839	WITHOUT_CLASSIFICATION	2.2292176160034967E-6	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999977707823839	WITHOUT_CLASSIFICATION	2.2292176160034967E-6	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999996387154333	WITHOUT_CLASSIFICATION	3.6128456667366183E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999999365466756	WITHOUT_CLASSIFICATION	6.345332434300054E-8	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999998335497008	WITHOUT_CLASSIFICATION	1.664502991094346E-7	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999996081928015	WITHOUT_CLASSIFICATION	3.9180719845712644E-7	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999999574938538	WITHOUT_CLASSIFICATION	4.250614608907047E-8	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999956000399601	WITHOUT_CLASSIFICATION	4.399960039838304E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999987775335715	WITHOUT_CLASSIFICATION	1.2224664285332919E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999816626630195	WITHOUT_CLASSIFICATION	1.833733698044223E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999993303493948	WITHOUT_CLASSIFICATION	6.696506050524791E-7	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999996601943277	WITHOUT_CLASSIFICATION	3.3980567216986086E-7	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999998731847463	WITHOUT_CLASSIFICATION	1.2681525364606517E-7	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999999174287015	WITHOUT_CLASSIFICATION	8.257129849374489E-8	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999999548181606	WITHOUT_CLASSIFICATION	4.518183933117722E-8	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999968001383298	WITHOUT_CLASSIFICATION	3.1998616702760118E-6	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9971851587384544	WITHOUT_CLASSIFICATION	0.0028148412615455923	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999996654616605	WITHOUT_CLASSIFICATION	3.345383394911793E-7	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999960861337032	WITHOUT_CLASSIFICATION	3.9138662968988295E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999999625052811	WITHOUT_CLASSIFICATION	3.749471894746897E-8	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999993082817465	WITHOUT_CLASSIFICATION	6.917182535590176E-7	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.999999956608633	WITHOUT_CLASSIFICATION	4.339136702652306E-8	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9999189394684285	WITHOUT_CLASSIFICATION	8.106053157156221E-5	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999776347169766	WITHOUT_CLASSIFICATION	2.236528302336887E-5	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999983774645025	WITHOUT_CLASSIFICATION	1.622535497552415E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999994374383712	WITHOUT_CLASSIFICATION	5.62561628842154E-7	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999988732482837	WITHOUT_CLASSIFICATION	1.126751716267146E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999944988361743	WITHOUT_CLASSIFICATION	5.501163825701175E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.99999972935342	WITHOUT_CLASSIFICATION	2.7064658007173044E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999999305662706	WITHOUT_CLASSIFICATION	6.943372947324097E-8	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999957293308	WITHOUT_CLASSIFICATION	4.270669228753183E-9	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999991925048212	WITHOUT_CLASSIFICATION	8.074951787885223E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999997740765283	WITHOUT_CLASSIFICATION	2.2592347175739449E-7	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999360347819198	WITHOUT_CLASSIFICATION	6.396521808013152E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999999585555517	WITHOUT_CLASSIFICATION	4.1444448282810955E-8	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999997740765283	WITHOUT_CLASSIFICATION	2.2592347175739449E-7	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999924883690122	WITHOUT_CLASSIFICATION	7.511630987722259E-6	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999997679113407	WITHOUT_CLASSIFICATION	2.320886592825198E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.999998762354679	WITHOUT_CLASSIFICATION	1.237645320923163E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999997393838264	WITHOUT_CLASSIFICATION	2.606161736058936E-7	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999999388527245	WITHOUT_CLASSIFICATION	6.11472754592081E-8	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999999560795643	WITHOUT_CLASSIFICATION	4.392043577586727E-8	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999999531269878	WITHOUT_CLASSIFICATION	4.6873012152918355E-8	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999998839415253	WITHOUT_CLASSIFICATION	1.1605847474279746E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999994105895307	WITHOUT_CLASSIFICATION	5.894104693243814E-7	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999965637063546	WITHOUT_CLASSIFICATION	3.436293645366078E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999907122042263	WITHOUT_CLASSIFICATION	9.287795773783943E-6	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999993644264206	WITHOUT_CLASSIFICATION	6.355735794059569E-7	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999956566263152	WITHOUT_CLASSIFICATION	4.343373684830965E-6	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9999834039134919	WITHOUT_CLASSIFICATION	1.6596086508025615E-5	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999979575158046	WITHOUT_CLASSIFICATION	2.042484195363144E-6	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.9999979533212797	WITHOUT_CLASSIFICATION	2.0466787201953035E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999985497047024	WITHOUT_CLASSIFICATION	1.4502952976206023E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999996649607595	WITHOUT_CLASSIFICATION	3.3503924042266405E-7	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999987888927386	WITHOUT_CLASSIFICATION	1.2111072612852234E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999598437281294	WITHOUT_CLASSIFICATION	4.015627187060114E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999500781497	WITHOUT_CLASSIFICATION	4.992185035594905E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999999540463093	WITHOUT_CLASSIFICATION	4.595369068633423E-8	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999995202612564	WITHOUT_CLASSIFICATION	4.797387435570898E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999998012626163	WITHOUT_CLASSIFICATION	1.9873738369123124E-7	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999999474526375	WITHOUT_CLASSIFICATION	5.2547362504063626E-8	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999999999283273	WITHOUT_CLASSIFICATION	7.167262277473097E-11	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999998388385817	WITHOUT_CLASSIFICATION	1.6116141833490754E-7	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999998054190552	WITHOUT_CLASSIFICATION	1.94580944784747E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999939546696325	WITHOUT_CLASSIFICATION	6.04533036759091E-6	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999844870057512	WITHOUT_CLASSIFICATION	1.5512994248863005E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999999015086173	WITHOUT_CLASSIFICATION	9.849138279647048E-8	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9987908695515765	WITHOUT_CLASSIFICATION	0.0012091304484235245	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.8596038228746519	WITHOUT_CLASSIFICATION	0.1403961771253482	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999992530283	WITHOUT_CLASSIFICATION	7.469717025114603E-10	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999787897963395	WITHOUT_CLASSIFICATION	2.121020366060718E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999999852594156	WITHOUT_CLASSIFICATION	1.4740584417057552E-8	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999998762742703	WITHOUT_CLASSIFICATION	1.2372572967753467E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999996828610342	WITHOUT_CLASSIFICATION	3.1713896574030764E-7	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999926411182087	WITHOUT_CLASSIFICATION	7.358881791243442E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999997003622093	WITHOUT_CLASSIFICATION	2.996377906991968E-7	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999992472569353	WITHOUT_CLASSIFICATION	7.527430646807233E-7	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.999987753458321	WITHOUT_CLASSIFICATION	1.2246541678865441E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999449078391685	WITHOUT_CLASSIFICATION	5.509216083167397E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999969048168338	WITHOUT_CLASSIFICATION	3.0951831661433253E-6	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999985337985143	WITHOUT_CLASSIFICATION	1.4662014855989508E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999999925884513	WITHOUT_CLASSIFICATION	7.411548632526296E-9	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999911252086288	WITHOUT_CLASSIFICATION	8.874791371192113E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999999844999886	WITHOUT_CLASSIFICATION	1.550001133906017E-8	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995713008645	WITHOUT_CLASSIFICATION	4.2869913554183465E-7	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999998785906226	WITHOUT_CLASSIFICATION	1.2140937746265672E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999999460041309	WITHOUT_CLASSIFICATION	5.399586901476504E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999999538036144	WITHOUT_CLASSIFICATION	4.6196385602327424E-7	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999972097961431	WITHOUT_CLASSIFICATION	2.790203856843785E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999995713008645	WITHOUT_CLASSIFICATION	4.2869913554183465E-7	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9769994901144432	IMPLEMENTATION	0.023000509885556727	WITHOUT_CLASSIFICATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9769994901144432	IMPLEMENTATION	0.023000509885556727	WITHOUT_CLASSIFICATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999989820002086	WITHOUT_CLASSIFICATION	1.0179997914140265E-6	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999999592177458	WITHOUT_CLASSIFICATION	4.078225419119926E-8	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999999385931284	WITHOUT_CLASSIFICATION	6.140687159332312E-8	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999999743046274	WITHOUT_CLASSIFICATION	2.56953726240087E-8	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999992406171343	WITHOUT_CLASSIFICATION	7.593828657231977E-7	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.9999984152248214	WITHOUT_CLASSIFICATION	1.5847751786617411E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999998074684535	WITHOUT_CLASSIFICATION	1.9253154643266704E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.9972875883289053	IMPLEMENTATION	0.002712411671094729	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.999999673862359	WITHOUT_CLASSIFICATION	3.2613764102130246E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999975321099646	WITHOUT_CLASSIFICATION	2.467890035531021E-6	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999999936218	WITHOUT_CLASSIFICATION	6.378252844002613E-12	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999957441937	WITHOUT_CLASSIFICATION	4.255806233003554E-9	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999983242923416	WITHOUT_CLASSIFICATION	1.6757076584117943E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999997987182466	WITHOUT_CLASSIFICATION	2.012817532999086E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9998391621931113	WITHOUT_CLASSIFICATION	1.6083780688863717E-4	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9999582863360853	WITHOUT_CLASSIFICATION	4.171366391466135E-5	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999997978329	WITHOUT_CLASSIFICATION	2.0216713815359914E-10	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999978501996962	WITHOUT_CLASSIFICATION	2.1498003037393197E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999978501996962	WITHOUT_CLASSIFICATION	2.1498003037393197E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999978501996962	WITHOUT_CLASSIFICATION	2.1498003037393197E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999978501996962	WITHOUT_CLASSIFICATION	2.1498003037393197E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999978501996962	WITHOUT_CLASSIFICATION	2.1498003037393197E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999996170481805	WITHOUT_CLASSIFICATION	3.8295181947301576E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998347959764	WITHOUT_CLASSIFICATION	1.6520402355156833E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405232308	WITHOUT_CLASSIFICATION	2.9959476769186433E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.999999995906469	WITHOUT_CLASSIFICATION	4.093530931799184E-9	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999703856337	WITHOUT_CLASSIFICATION	2.961436619115204E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.99999999453514	WITHOUT_CLASSIFICATION	5.4648599721301325E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999787005404618	WITHOUT_CLASSIFICATION	2.129945953829497E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999997591090926	WITHOUT_CLASSIFICATION	2.4089090750708945E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989165554996	WITHOUT_CLASSIFICATION	1.0834445004693612E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999987912177212	WITHOUT_CLASSIFICATION	1.2087822787916343E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999995183089345	WITHOUT_CLASSIFICATION	4.816910654175936E-7	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999997118226062	WITHOUT_CLASSIFICATION	2.881773937972817E-7	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999989217983666	WITHOUT_CLASSIFICATION	1.078201633453954E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999992408703477	WITHOUT_CLASSIFICATION	7.591296523378459E-7	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999993657960612	WITHOUT_CLASSIFICATION	6.342039387821271E-7	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999997831711495	WITHOUT_CLASSIFICATION	2.1682885058099605E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999992820912116	WITHOUT_CLASSIFICATION	7.179087883992553E-7	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999987466883755	WITHOUT_CLASSIFICATION	1.2533116244974383E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999994992600486	WITHOUT_CLASSIFICATION	5.007399513333285E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999989461514439	WITHOUT_CLASSIFICATION	1.0538485560896522E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.999999422740833	WITHOUT_CLASSIFICATION	5.772591670725299E-7	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999995137824704	WITHOUT_CLASSIFICATION	4.862175296450656E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999998214061836	WITHOUT_CLASSIFICATION	1.7859381633899125E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999994189619644	WITHOUT_CLASSIFICATION	5.810380356063386E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999997228141819	WITHOUT_CLASSIFICATION	2.771858180907431E-7	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999997577310701	WITHOUT_CLASSIFICATION	2.4226893000557845E-7	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999988648845273	WITHOUT_CLASSIFICATION	1.1351154726741876E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999991880130612	WITHOUT_CLASSIFICATION	8.119869388009825E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999999332312844	WITHOUT_CLASSIFICATION	6.67687156102966E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999998612777546	WITHOUT_CLASSIFICATION	1.3872224536353506E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999995572456427	WITHOUT_CLASSIFICATION	4.4275435735293607E-7	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999995579202694	WITHOUT_CLASSIFICATION	4.420797305392316E-7	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999995076204999	WITHOUT_CLASSIFICATION	4.923795001079889E-7	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999993679331028	WITHOUT_CLASSIFICATION	6.320668971214858E-7	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999998151099799	WITHOUT_CLASSIFICATION	1.8489001993004204E-7	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999995811355392	WITHOUT_CLASSIFICATION	4.1886446082791696E-7	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999994022707519	WITHOUT_CLASSIFICATION	5.977292481036604E-7	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999994763077967	WITHOUT_CLASSIFICATION	5.236922032865452E-7	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999998264997968	WITHOUT_CLASSIFICATION	1.7350020306567415E-7	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999994944605991	WITHOUT_CLASSIFICATION	5.055394008557214E-7	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999992487546705	WITHOUT_CLASSIFICATION	7.512453294978063E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999991860847259	WITHOUT_CLASSIFICATION	8.13915274091066E-7	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999997571663867	WITHOUT_CLASSIFICATION	2.4283361334434615E-7	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999991998330073	WITHOUT_CLASSIFICATION	8.001669927325932E-7	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999994248532416	WITHOUT_CLASSIFICATION	5.751467584889831E-7	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999997332969031	WITHOUT_CLASSIFICATION	2.667030969927247E-7	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.999999793048167	WITHOUT_CLASSIFICATION	2.0695183300231014E-7	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999998148245102	WITHOUT_CLASSIFICATION	1.8517548977721688E-7	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999992488310755	WITHOUT_CLASSIFICATION	7.511689246507238E-7	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999996495323918	WITHOUT_CLASSIFICATION	3.504676081163743E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405232308	WITHOUT_CLASSIFICATION	2.9959476769186433E-5	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999996729080425	WITHOUT_CLASSIFICATION	3.270919574356835E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999997960111179	WITHOUT_CLASSIFICATION	2.0398888218032634E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999995920843532	WITHOUT_CLASSIFICATION	4.0791564676657445E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999994763657684	WITHOUT_CLASSIFICATION	5.236342317471101E-7	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999994805955998	WITHOUT_CLASSIFICATION	5.194044001349991E-7	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999994878541179	WITHOUT_CLASSIFICATION	5.121458821219415E-7	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999995665299998	WITHOUT_CLASSIFICATION	4.334700002236726E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999994869670411	WITHOUT_CLASSIFICATION	5.130329589127123E-7	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999994572952144	WITHOUT_CLASSIFICATION	5.427047854795718E-7	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999995810578941	WITHOUT_CLASSIFICATION	4.189421059079046E-7	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999994706819885	WITHOUT_CLASSIFICATION	5.293180114628196E-7	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.999999450007939	WITHOUT_CLASSIFICATION	5.499920610068905E-7	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.9999994685222962	WITHOUT_CLASSIFICATION	5.314777039137375E-7	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999996284736533	WITHOUT_CLASSIFICATION	3.7152634669314355E-7	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999996969762371	WITHOUT_CLASSIFICATION	3.0302376276862254E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999999750209894	WITHOUT_CLASSIFICATION	2.4979010607505244E-7	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.999999204506365	WITHOUT_CLASSIFICATION	7.954936348432025E-7	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999990644336326	WITHOUT_CLASSIFICATION	9.355663674477398E-7	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999995121308901	WITHOUT_CLASSIFICATION	4.878691098906863E-7	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999993018599398	WITHOUT_CLASSIFICATION	6.98140060151761E-7	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999994703904741	WITHOUT_CLASSIFICATION	5.296095260068653E-7	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999993575157616	WITHOUT_CLASSIFICATION	6.424842384366148E-7	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.999999441096657	WITHOUT_CLASSIFICATION	5.589033431085009E-7	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999997156160824	WITHOUT_CLASSIFICATION	2.8438391758196476E-7	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.999999457742908	WITHOUT_CLASSIFICATION	5.422570919673206E-7	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999998107138948	WITHOUT_CLASSIFICATION	1.8928610524307133E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999997895050458	WITHOUT_CLASSIFICATION	2.104949541630636E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999993246193573	WITHOUT_CLASSIFICATION	6.753806426826722E-7	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999995689584953	WITHOUT_CLASSIFICATION	4.310415046972968E-7	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999993059423619	WITHOUT_CLASSIFICATION	6.940576381770308E-7	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.999999877324981	WITHOUT_CLASSIFICATION	1.2267501902449365E-7	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999996082094261	WITHOUT_CLASSIFICATION	3.9179057394392097E-7	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999996281790602	WITHOUT_CLASSIFICATION	3.718209398785725E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998334595365	WITHOUT_CLASSIFICATION	1.665404636423559E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999996384997323	WITHOUT_CLASSIFICATION	3.615002677246895E-7	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999994480912889	WITHOUT_CLASSIFICATION	5.519087110885309E-7	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999989670951324	WITHOUT_CLASSIFICATION	1.0329048676989734E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999995915173376	WITHOUT_CLASSIFICATION	4.084826623063382E-7	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999995555268069	WITHOUT_CLASSIFICATION	4.4447319304459157E-7	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999997586409441	WITHOUT_CLASSIFICATION	2.4135905591458377E-7	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999995474803748	WITHOUT_CLASSIFICATION	4.525196252388142E-7	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999994334647905	WITHOUT_CLASSIFICATION	5.665352095519869E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999997956470331	WITHOUT_CLASSIFICATION	2.0435296684813654E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999995626722928	WITHOUT_CLASSIFICATION	4.3732770721466034E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999997328969116	WITHOUT_CLASSIFICATION	2.67103088483567E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999993457886471	WITHOUT_CLASSIFICATION	6.542113529893901E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999986206615948	WITHOUT_CLASSIFICATION	1.3793384050538592E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999994803959295	WITHOUT_CLASSIFICATION	5.19604070587649E-7	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999994388581319	WITHOUT_CLASSIFICATION	5.611418680292784E-7	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999995992280809	WITHOUT_CLASSIFICATION	4.007719190918175E-7	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999994738853109	WITHOUT_CLASSIFICATION	5.261146891206918E-7	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999994928533873	WITHOUT_CLASSIFICATION	5.071466127553845E-7	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999989705975952	WITHOUT_CLASSIFICATION	1.0294024047741755E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999984429299493	WITHOUT_CLASSIFICATION	1.5570700506367827E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999985764917534	WITHOUT_CLASSIFICATION	1.4235082465117765E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999994389916719	WITHOUT_CLASSIFICATION	5.61008328143545E-7	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999997494096129	WITHOUT_CLASSIFICATION	2.505903870916574E-7	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999992960990456	WITHOUT_CLASSIFICATION	7.039009543092345E-7	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999992742235915	WITHOUT_CLASSIFICATION	7.257764085002755E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999992777682726	WITHOUT_CLASSIFICATION	7.222317274286144E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999996748130694	WITHOUT_CLASSIFICATION	3.2518693063329096E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999991829440683	WITHOUT_CLASSIFICATION	8.17055931560216E-7	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999997418121865	WITHOUT_CLASSIFICATION	2.581878135196656E-7	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999993280251651	WITHOUT_CLASSIFICATION	6.719748349493995E-7	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999978415972987	WITHOUT_CLASSIFICATION	2.1584027013502307E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999991453733821	WITHOUT_CLASSIFICATION	8.546266179147031E-7	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999984047300577	WITHOUT_CLASSIFICATION	1.5952699422559245E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999992933668269	WITHOUT_CLASSIFICATION	7.066331730569042E-7	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999992988893127	WITHOUT_CLASSIFICATION	7.011106873044949E-7	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999993236185684	WITHOUT_CLASSIFICATION	6.76381431560081E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999992913153323	WITHOUT_CLASSIFICATION	7.086846676109157E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999991121770091	WITHOUT_CLASSIFICATION	8.878229910058568E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999991636948972	WITHOUT_CLASSIFICATION	8.363051027462813E-7	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999996690089565	WITHOUT_CLASSIFICATION	3.309910435108133E-7	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999996906873212	WITHOUT_CLASSIFICATION	3.0931267884261E-7	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999991266632833	WITHOUT_CLASSIFICATION	8.733367167351248E-7	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999998429673841	WITHOUT_CLASSIFICATION	1.5703261579872926E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999996334105188	WITHOUT_CLASSIFICATION	3.6658948119752636E-7	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999994988337054	WITHOUT_CLASSIFICATION	5.011662945106113E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999997782449004	WITHOUT_CLASSIFICATION	2.2175509957221663E-7	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999993992637825	WITHOUT_CLASSIFICATION	6.007362174962268E-7	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999997185729796	WITHOUT_CLASSIFICATION	2.81427020298763E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999999332651602	WITHOUT_CLASSIFICATION	6.673483979723155E-7	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999991024046648	WITHOUT_CLASSIFICATION	8.975953351533645E-7	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999994110754263	WITHOUT_CLASSIFICATION	5.88924573637309E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999996832598318	WITHOUT_CLASSIFICATION	3.167401682307388E-7	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999993210578976	WITHOUT_CLASSIFICATION	6.789421023293015E-7	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999993960467282	WITHOUT_CLASSIFICATION	6.039532718838278E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999997776603902	WITHOUT_CLASSIFICATION	2.2233960979066238E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999992763219493	WITHOUT_CLASSIFICATION	7.236780506844873E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999996269305537	WITHOUT_CLASSIFICATION	3.730694462803243E-7	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999991610028202	WITHOUT_CLASSIFICATION	8.389971797611491E-7	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999990764892809	WITHOUT_CLASSIFICATION	9.235107190768793E-7	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999992919739187	WITHOUT_CLASSIFICATION	7.080260814242155E-7	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999993615968455	WITHOUT_CLASSIFICATION	6.384031544873512E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999995632002301	WITHOUT_CLASSIFICATION	4.3679976998876554E-7	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999994005042038	WITHOUT_CLASSIFICATION	5.994957962486703E-7	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999995687577624	WITHOUT_CLASSIFICATION	4.31242237575192E-7	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.999999590999611	WITHOUT_CLASSIFICATION	4.0900038893274723E-7	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999998184474643	WITHOUT_CLASSIFICATION	1.815525356415488E-7	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999995798935263	WITHOUT_CLASSIFICATION	4.201064736794834E-7	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999995273425165	WITHOUT_CLASSIFICATION	4.7265748355017895E-7	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999992792314883	WITHOUT_CLASSIFICATION	7.207685116475094E-7	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999992855844173	WITHOUT_CLASSIFICATION	7.144155826550457E-7	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999994398054824	WITHOUT_CLASSIFICATION	5.601945176049065E-7	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999998014714954	WITHOUT_CLASSIFICATION	1.985285046218511E-7	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999996887855629	WITHOUT_CLASSIFICATION	3.1121443705455643E-7	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999996061592451	WITHOUT_CLASSIFICATION	3.938407548392993E-7	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999996088340696	WITHOUT_CLASSIFICATION	3.9116593048099426E-7	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999997123636521	WITHOUT_CLASSIFICATION	2.8763634789721423E-7	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.999999254248048	WITHOUT_CLASSIFICATION	7.457519520316682E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999994947390002	WITHOUT_CLASSIFICATION	5.052609998836074E-7	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.99999975020731	WITHOUT_CLASSIFICATION	2.4979269001728236E-7	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999996557307412	WITHOUT_CLASSIFICATION	3.442692587665663E-7	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999996988945723	WITHOUT_CLASSIFICATION	3.011054277141977E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999980829192077	WITHOUT_CLASSIFICATION	1.917080792311263E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999990510097141	WITHOUT_CLASSIFICATION	9.48990285921891E-7	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.999999027673157	WITHOUT_CLASSIFICATION	9.723268430863563E-7	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999987911027314	WITHOUT_CLASSIFICATION	1.208897268615668E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999996498723237	WITHOUT_CLASSIFICATION	3.501276762700924E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999990209828135	WITHOUT_CLASSIFICATION	9.790171865343064E-7	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999991912474167	WITHOUT_CLASSIFICATION	8.087525833282617E-7	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999991822625416	WITHOUT_CLASSIFICATION	8.177374582964553E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999995329039131	WITHOUT_CLASSIFICATION	4.6709608703899336E-7	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999984314994008	WITHOUT_CLASSIFICATION	1.5685005991742352E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999990895012932	WITHOUT_CLASSIFICATION	9.104987067601932E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999987697090551	WITHOUT_CLASSIFICATION	1.2302909448878289E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999988676809504	WITHOUT_CLASSIFICATION	1.1323190496957072E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999992538901016	WITHOUT_CLASSIFICATION	7.461098983841666E-7	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999988660490564	WITHOUT_CLASSIFICATION	1.1339509436594947E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999983215886161	WITHOUT_CLASSIFICATION	1.6784113838660147E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.9999979785334289	WITHOUT_CLASSIFICATION	2.021466571034741E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999989728886164	WITHOUT_CLASSIFICATION	1.0271113836629578E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999997317433857	WITHOUT_CLASSIFICATION	2.682566142269115E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.999999791703347	WITHOUT_CLASSIFICATION	2.0829665302369401E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999998016784862	WITHOUT_CLASSIFICATION	1.9832151367477726E-7	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999992830463005	WITHOUT_CLASSIFICATION	7.169536995844763E-7	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999995459993548	WITHOUT_CLASSIFICATION	4.540006452192622E-7	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999994119620904	WITHOUT_CLASSIFICATION	5.880379096440093E-7	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.999999362323394	WITHOUT_CLASSIFICATION	6.376766059601923E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999993332697491	WITHOUT_CLASSIFICATION	6.667302510206685E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999989292651504	WITHOUT_CLASSIFICATION	1.0707348495251728E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.999999315982492	WITHOUT_CLASSIFICATION	6.840175080050455E-7	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.999999143639396	WITHOUT_CLASSIFICATION	8.563606040892706E-7	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999995793650985	WITHOUT_CLASSIFICATION	4.2063490140723445E-7	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999991705627668	WITHOUT_CLASSIFICATION	8.294372330952796E-7	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999996690406151	WITHOUT_CLASSIFICATION	3.3095938494377754E-7	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999991806665285	WITHOUT_CLASSIFICATION	8.193334715007398E-7	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999992282101644	WITHOUT_CLASSIFICATION	7.717898356826385E-7	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999997368121911	WITHOUT_CLASSIFICATION	2.631878088544757E-7	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999993134164807	WITHOUT_CLASSIFICATION	6.865835193442437E-7	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999988111528183	WITHOUT_CLASSIFICATION	1.1888471817137857E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999989665633291	WITHOUT_CLASSIFICATION	1.0334366709212019E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999997203451249	WITHOUT_CLASSIFICATION	2.796548751154543E-7	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999989275147707	WITHOUT_CLASSIFICATION	1.0724852292899288E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999989574322804	WITHOUT_CLASSIFICATION	1.0425677196163241E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999985091718282	WITHOUT_CLASSIFICATION	1.4908281717768793E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.999999627078387	WITHOUT_CLASSIFICATION	3.7292161300829876E-7	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999987222198452	WITHOUT_CLASSIFICATION	1.2777801548175362E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999990642791712	WITHOUT_CLASSIFICATION	9.357208287946011E-7	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999973388523827	WITHOUT_CLASSIFICATION	2.6611476172207047E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999986651344798	WITHOUT_CLASSIFICATION	1.3348655202308298E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999995075449396	WITHOUT_CLASSIFICATION	4.924550604574264E-7	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999987969255381	WITHOUT_CLASSIFICATION	1.2030744618947454E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999979880160097	WITHOUT_CLASSIFICATION	2.0119839903128954E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999989177982145	WITHOUT_CLASSIFICATION	1.0822017855467358E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999993975012182	WITHOUT_CLASSIFICATION	6.024987816539227E-7	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999987946125763	WITHOUT_CLASSIFICATION	1.2053874235587842E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999990742622349	WITHOUT_CLASSIFICATION	9.257377652242119E-7	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999987615534823	WITHOUT_CLASSIFICATION	1.2384465177168105E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999994108667202	WITHOUT_CLASSIFICATION	5.891332798267088E-7	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999986978057476	WITHOUT_CLASSIFICATION	1.3021942524388392E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999995753630161	WITHOUT_CLASSIFICATION	4.2463698394434346E-7	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999987726548378	WITHOUT_CLASSIFICATION	1.2273451621698022E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999991928744338	WITHOUT_CLASSIFICATION	8.071255661985731E-7	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999983688706816	WITHOUT_CLASSIFICATION	1.6311293183106275E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999981477270193	WITHOUT_CLASSIFICATION	1.8522729807256267E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999983894589887	WITHOUT_CLASSIFICATION	1.610541011363633E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997220185606	WITHOUT_CLASSIFICATION	2.779814394111011E-7	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999996946390074	WITHOUT_CLASSIFICATION	3.053609925425108E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999990275762759	WITHOUT_CLASSIFICATION	9.724237241435415E-7	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999987896004511	WITHOUT_CLASSIFICATION	1.2103995489124283E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999990502403276	WITHOUT_CLASSIFICATION	9.497596723408242E-7	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.999999497050266	WITHOUT_CLASSIFICATION	5.029497340447679E-7	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999990662529151	WITHOUT_CLASSIFICATION	9.337470848050477E-7	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999987413431817	WITHOUT_CLASSIFICATION	1.2586568182640754E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.999998689658971	WITHOUT_CLASSIFICATION	1.3103410290410009E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.999998362329268	WITHOUT_CLASSIFICATION	1.637670732119778E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999984046577673	WITHOUT_CLASSIFICATION	1.5953422326339168E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999990674019693	WITHOUT_CLASSIFICATION	9.325980306087636E-7	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999989797026232	WITHOUT_CLASSIFICATION	1.0202973768208637E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999986672792898	WITHOUT_CLASSIFICATION	1.3327207102531232E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999987210714983	WITHOUT_CLASSIFICATION	1.278928501728266E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999984256023785	WITHOUT_CLASSIFICATION	1.5743976215713448E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999994359401255	WITHOUT_CLASSIFICATION	5.640598745036282E-7	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999990284260284	WITHOUT_CLASSIFICATION	9.715739716136521E-7	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999991879268992	WITHOUT_CLASSIFICATION	8.120731006589755E-7	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999989509230548	WITHOUT_CLASSIFICATION	1.0490769452040557E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999989466883867	WITHOUT_CLASSIFICATION	1.0533116132659478E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999995108309794	WITHOUT_CLASSIFICATION	4.891690205979633E-7	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999983792960924	WITHOUT_CLASSIFICATION	1.620703907742264E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999975127224635	WITHOUT_CLASSIFICATION	2.487277536443671E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999985423567826	WITHOUT_CLASSIFICATION	1.4576432173577276E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.999998411121526	WITHOUT_CLASSIFICATION	1.5888784739979743E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999987026842309	WITHOUT_CLASSIFICATION	1.2973157691423176E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999983816296434	WITHOUT_CLASSIFICATION	1.6183703565274583E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999974631795011	WITHOUT_CLASSIFICATION	2.536820498920106E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999995118175472	WITHOUT_CLASSIFICATION	4.88182452840068E-7	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999987362566639	WITHOUT_CLASSIFICATION	1.2637433360628932E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999983216050223	WITHOUT_CLASSIFICATION	1.6783949777136443E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999984824971552	WITHOUT_CLASSIFICATION	1.5175028448656889E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996031007917	WITHOUT_CLASSIFICATION	3.96899208239592E-7	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999992996635302	WITHOUT_CLASSIFICATION	7.003364698489003E-7	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999993144054962	WITHOUT_CLASSIFICATION	6.855945038364196E-7	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999990632356232	WITHOUT_CLASSIFICATION	9.367643768354856E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999995675580807	WITHOUT_CLASSIFICATION	4.3244191925286877E-7	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999990615949913	WITHOUT_CLASSIFICATION	9.384050087333753E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999988408321427	WITHOUT_CLASSIFICATION	1.159167857262678E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999990479418045	WITHOUT_CLASSIFICATION	9.520581955164596E-7	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999987872626981	WITHOUT_CLASSIFICATION	1.2127373019123633E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999995642133911	WITHOUT_CLASSIFICATION	4.3578660891326356E-7	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999990656203963	WITHOUT_CLASSIFICATION	9.343796036820154E-7	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999986213481241	WITHOUT_CLASSIFICATION	1.378651875802317E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999985182827421	WITHOUT_CLASSIFICATION	1.4817172578439681E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999975402508308	WITHOUT_CLASSIFICATION	2.4597491692979403E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999974518716594	WITHOUT_CLASSIFICATION	2.548128340647024E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999989817254653	WITHOUT_CLASSIFICATION	1.0182745346030934E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999994242614644	WITHOUT_CLASSIFICATION	5.75738535675513E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999334795911826	WITHOUT_CLASSIFICATION	6.652040881738895E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999986210986328	WITHOUT_CLASSIFICATION	1.3789013671657102E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.99999911203737	WITHOUT_CLASSIFICATION	8.879626300375118E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999964247089052	WITHOUT_CLASSIFICATION	3.5752910949509186E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999760640607243	WITHOUT_CLASSIFICATION	2.3935939275666638E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9994182604347075	WITHOUT_CLASSIFICATION	5.817395652924057E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996630308391681	WITHOUT_CLASSIFICATION	3.369691608319592E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9999961027727986	WITHOUT_CLASSIFICATION	3.897227201448222E-6	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9999242255071256	WITHOUT_CLASSIFICATION	7.577449287446277E-5	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9998998124329652	WITHOUT_CLASSIFICATION	1.001875670347481E-4	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999996687378389	WITHOUT_CLASSIFICATION	3.312621612118586E-7	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999999061351856	WITHOUT_CLASSIFICATION	9.386481432154542E-8	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999645224263963	WITHOUT_CLASSIFICATION	3.547757360377604E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999991738849138	WITHOUT_CLASSIFICATION	8.261150863366395E-7	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9984279100159068	WITHOUT_CLASSIFICATION	0.0015720899840931302	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999596539144625	WITHOUT_CLASSIFICATION	4.0346085537534334E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997785099033653	WITHOUT_CLASSIFICATION	2.2149009663475366E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.999999997154662	WITHOUT_CLASSIFICATION	2.8453379449690397E-9	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671009	WITHOUT_CLASSIFICATION	7.873289903810794E-8	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999993853162422	WITHOUT_CLASSIFICATION	6.146837578449106E-7	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999997579629598	WITHOUT_CLASSIFICATION	2.420370401249147E-7	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999992788046	WITHOUT_CLASSIFICATION	7.211955166281749E-10	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871340505	WITHOUT_CLASSIFICATION	1.286594959279901E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871340505	WITHOUT_CLASSIFICATION	1.286594959279901E-8	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.999999990095038	WITHOUT_CLASSIFICATION	9.904962007971984E-9	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999787603861076	WITHOUT_CLASSIFICATION	2.123961389249656E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999999844492938	WITHOUT_CLASSIFICATION	1.5550706184304735E-8	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999992488045176	WITHOUT_CLASSIFICATION	7.511954824736372E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999979329952025	WITHOUT_CLASSIFICATION	2.0670047976196527E-6	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999993203667	WITHOUT_CLASSIFICATION	6.796333980289075E-10	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999995723130136	WITHOUT_CLASSIFICATION	4.276869864539487E-7	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.999999986106373	WITHOUT_CLASSIFICATION	1.3893627067774735E-8	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9997390134380206	WITHOUT_CLASSIFICATION	2.6098656197945066E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999805631157987	WITHOUT_CLASSIFICATION	1.943688420130793E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999998969478906	WITHOUT_CLASSIFICATION	1.0305210939011512E-7	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9999998824882605	WITHOUT_CLASSIFICATION	1.1751173954600018E-7	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.9999993288519312	WITHOUT_CLASSIFICATION	6.711480687761189E-7	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999994368321248	WITHOUT_CLASSIFICATION	5.63167875243926E-7	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999997540744798	WITHOUT_CLASSIFICATION	2.4592552010741445E-7	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999976453695595	WITHOUT_CLASSIFICATION	2.354630440497316E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999999651427655	WITHOUT_CLASSIFICATION	3.4857234532141164E-8	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.999996084789513	WITHOUT_CLASSIFICATION	3.915210487061155E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999999104532334	WITHOUT_CLASSIFICATION	8.954676653440408E-8	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9998220762187626	WITHOUT_CLASSIFICATION	1.7792378123725853E-4	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999965547806	WITHOUT_CLASSIFICATION	3.445219488235475E-9	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999954488174831	WITHOUT_CLASSIFICATION	4.5511825168844695E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9916095262801106	WITHOUT_CLASSIFICATION	0.008390473719889368	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999984048514591	WITHOUT_CLASSIFICATION	1.5951485408963788E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9916095262801106	WITHOUT_CLASSIFICATION	0.008390473719889368	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999985428169855	WITHOUT_CLASSIFICATION	1.4571830145547683E-6	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999991434939351	WITHOUT_CLASSIFICATION	8.565060648002223E-7	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9658930200239872	WITHOUT_CLASSIFICATION	0.03410697997601278	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999911959354135	WITHOUT_CLASSIFICATION	8.804064586516396E-6	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999997588864235	WITHOUT_CLASSIFICATION	2.411135765056304E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999985815147371	WITHOUT_CLASSIFICATION	1.41848526288364E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999985815147371	WITHOUT_CLASSIFICATION	1.41848526288364E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999985815147371	WITHOUT_CLASSIFICATION	1.41848526288364E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999996088069814	WITHOUT_CLASSIFICATION	3.91193018635721E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999713798248655	WITHOUT_CLASSIFICATION	2.8620175134519002E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998538216079	WITHOUT_CLASSIFICATION	1.4617839206049847E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627164881	WITHOUT_CLASSIFICATION	6.372835118989649E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627164881	WITHOUT_CLASSIFICATION	6.372835118989649E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627164881	WITHOUT_CLASSIFICATION	6.372835118989649E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627164881	WITHOUT_CLASSIFICATION	6.372835118989649E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627164881	WITHOUT_CLASSIFICATION	6.372835118989649E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627164881	WITHOUT_CLASSIFICATION	6.372835118989649E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147547458	WITHOUT_CLASSIFICATION	9.852452541206312E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147547458	WITHOUT_CLASSIFICATION	9.852452541206312E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147547458	WITHOUT_CLASSIFICATION	9.852452541206312E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147547458	WITHOUT_CLASSIFICATION	9.852452541206312E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999990147547458	WITHOUT_CLASSIFICATION	9.852452541206312E-7	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270858294	WITHOUT_CLASSIFICATION	1.6672914170586102E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270858294	WITHOUT_CLASSIFICATION	1.6672914170586102E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270858294	WITHOUT_CLASSIFICATION	1.6672914170586102E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270858294	WITHOUT_CLASSIFICATION	1.6672914170586102E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999833270858294	WITHOUT_CLASSIFICATION	1.6672914170586102E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807011486	WITHOUT_CLASSIFICATION	3.4319298851494774E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807011486	WITHOUT_CLASSIFICATION	3.4319298851494774E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807011486	WITHOUT_CLASSIFICATION	3.4319298851494774E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807011486	WITHOUT_CLASSIFICATION	3.4319298851494774E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807011486	WITHOUT_CLASSIFICATION	3.4319298851494774E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9999656807011486	WITHOUT_CLASSIFICATION	3.4319298851494774E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403428126	WITHOUT_CLASSIFICATION	2.225965718738633E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403428126	WITHOUT_CLASSIFICATION	2.225965718738633E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403428126	WITHOUT_CLASSIFICATION	2.225965718738633E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403428126	WITHOUT_CLASSIFICATION	2.225965718738633E-5	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9999777403428126	WITHOUT_CLASSIFICATION	2.225965718738633E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129458029	WITHOUT_CLASSIFICATION	5.568705419722616E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129458029	WITHOUT_CLASSIFICATION	5.568705419722616E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129458029	WITHOUT_CLASSIFICATION	5.568705419722616E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129458029	WITHOUT_CLASSIFICATION	5.568705419722616E-5	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.9999443129458029	WITHOUT_CLASSIFICATION	5.568705419722616E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405232308	WITHOUT_CLASSIFICATION	2.9959476769186433E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405232308	WITHOUT_CLASSIFICATION	2.9959476769186433E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405232308	WITHOUT_CLASSIFICATION	2.9959476769186433E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405232308	WITHOUT_CLASSIFICATION	2.9959476769186433E-5	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9999700405232308	WITHOUT_CLASSIFICATION	2.9959476769186433E-5	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.999999995906469	WITHOUT_CLASSIFICATION	4.093530931799184E-9	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.99999999453514	WITHOUT_CLASSIFICATION	5.4648599721301325E-9	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999787005404618	WITHOUT_CLASSIFICATION	2.129945953829497E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999997591090926	WITHOUT_CLASSIFICATION	2.4089090750708945E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989165554996	WITHOUT_CLASSIFICATION	1.0834445004693612E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999990702005425	WITHOUT_CLASSIFICATION	9.297994575435954E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999989461514439	WITHOUT_CLASSIFICATION	1.0538485560896522E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999997228141819	WITHOUT_CLASSIFICATION	2.771858180907431E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.999999332312844	WITHOUT_CLASSIFICATION	6.67687156102966E-7	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999998612777546	WITHOUT_CLASSIFICATION	1.3872224536353506E-7	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999996761532912	WITHOUT_CLASSIFICATION	3.2384670878223837E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999995572456427	WITHOUT_CLASSIFICATION	4.4275435735293607E-7	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.999999651587065	WITHOUT_CLASSIFICATION	3.484129349239572E-7	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999993134148891	WITHOUT_CLASSIFICATION	6.865851109531309E-7	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999993210091053	WITHOUT_CLASSIFICATION	6.789908947709353E-7	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999996337992696	WITHOUT_CLASSIFICATION	3.662007304107131E-7	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999996840281394	WITHOUT_CLASSIFICATION	3.1597186063136434E-7	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999986098608256	WITHOUT_CLASSIFICATION	1.3901391745372834E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999994465953566	WITHOUT_CLASSIFICATION	5.534046435487107E-7	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999994129900929	WITHOUT_CLASSIFICATION	5.870099072034246E-7	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999997963991316	WITHOUT_CLASSIFICATION	2.036008683295646E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999995640712785	WITHOUT_CLASSIFICATION	4.3592872154193176E-7	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999993264926474	WITHOUT_CLASSIFICATION	6.735073525449637E-7	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999995728100166	WITHOUT_CLASSIFICATION	4.271899833502331E-7	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.999999251616856	WITHOUT_CLASSIFICATION	7.483831439566445E-7	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.999999537679294	WITHOUT_CLASSIFICATION	4.623207060247862E-7	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999993162549466	WITHOUT_CLASSIFICATION	6.837450532529358E-7	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999997775783219	WITHOUT_CLASSIFICATION	2.2242167812677796E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999995110398551	WITHOUT_CLASSIFICATION	4.889601448691312E-7	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999995795370379	WITHOUT_CLASSIFICATION	4.204629620727871E-7	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999998120661479	WITHOUT_CLASSIFICATION	1.8793385209915364E-7	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999994908752551	WITHOUT_CLASSIFICATION	5.091247449596728E-7	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999994848124534	WITHOUT_CLASSIFICATION	5.151875466577858E-7	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999992146586236	WITHOUT_CLASSIFICATION	7.853413764946143E-7	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999995236273854	WITHOUT_CLASSIFICATION	4.7637261453453325E-7	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.999999496474521	WITHOUT_CLASSIFICATION	5.0352547894409E-7	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999993877449221	WITHOUT_CLASSIFICATION	6.122550779108159E-7	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999993527362931	WITHOUT_CLASSIFICATION	6.47263706817951E-7	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999993736734427	WITHOUT_CLASSIFICATION	6.26326557145014E-7	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.999998075036105	WITHOUT_CLASSIFICATION	1.9249638950300584E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999992448979022	WITHOUT_CLASSIFICATION	7.551020977666396E-7	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999993875515512	WITHOUT_CLASSIFICATION	6.124484489139769E-7	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999994664376838	WITHOUT_CLASSIFICATION	5.335623161727669E-7	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999997630183421	WITHOUT_CLASSIFICATION	2.3698165792186367E-7	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999996889201908	WITHOUT_CLASSIFICATION	3.110798093001115E-7	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999997009101115	WITHOUT_CLASSIFICATION	2.9908988858245763E-7	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999997634138975	WITHOUT_CLASSIFICATION	2.365861024171427E-7	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999991807334904	WITHOUT_CLASSIFICATION	8.192665095976222E-7	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999996444392636	WITHOUT_CLASSIFICATION	3.5556073642338467E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999997960111179	WITHOUT_CLASSIFICATION	2.0398888218032634E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999995920843532	WITHOUT_CLASSIFICATION	4.0791564676657445E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999994763657684	WITHOUT_CLASSIFICATION	5.236342317471101E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999994869670411	WITHOUT_CLASSIFICATION	5.130329589127123E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999999750209894	WITHOUT_CLASSIFICATION	2.4979010607505244E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999997895050458	WITHOUT_CLASSIFICATION	2.104949541630636E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999982615428613	WITHOUT_CLASSIFICATION	1.7384571386690812E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999993246193573	WITHOUT_CLASSIFICATION	6.753806426826722E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999997956470331	WITHOUT_CLASSIFICATION	2.0435296684813654E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999997328969116	WITHOUT_CLASSIFICATION	2.67103088483567E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.99999942020269	WITHOUT_CLASSIFICATION	5.797973101327857E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999993457886471	WITHOUT_CLASSIFICATION	6.542113529893901E-7	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999986206615948	WITHOUT_CLASSIFICATION	1.3793384050538592E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999996547454569	WITHOUT_CLASSIFICATION	3.4525454297771595E-7	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999994727891218	WITHOUT_CLASSIFICATION	5.272108781522075E-7	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999998119320253	WITHOUT_CLASSIFICATION	1.8806797487212108E-7	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999993557030388	WITHOUT_CLASSIFICATION	6.442969611508622E-7	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999987030072166	WITHOUT_CLASSIFICATION	1.2969927833322813E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.999999034116087	WITHOUT_CLASSIFICATION	9.658839128801196E-7	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.999999615102247	WITHOUT_CLASSIFICATION	3.8489775309532547E-7	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999995754907361	WITHOUT_CLASSIFICATION	4.245092638524125E-7	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999993212045105	WITHOUT_CLASSIFICATION	6.787954895932734E-7	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999993375656119	WITHOUT_CLASSIFICATION	6.624343881616214E-7	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.999999803725305	WITHOUT_CLASSIFICATION	1.962746950495976E-7	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999994770593515	WITHOUT_CLASSIFICATION	5.229406484656796E-7	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999993597666044	WITHOUT_CLASSIFICATION	6.402333955456238E-7	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.999999650093901	WITHOUT_CLASSIFICATION	3.49906099028255E-7	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999996252068871	WITHOUT_CLASSIFICATION	3.7479311286620125E-7	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999998029312185	WITHOUT_CLASSIFICATION	1.9706878164439752E-7	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999994464436698	WITHOUT_CLASSIFICATION	5.535563303028349E-7	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.999999432028123	WITHOUT_CLASSIFICATION	5.679718769827376E-7	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999991551173644	WITHOUT_CLASSIFICATION	8.448826356820924E-7	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999995389998267	WITHOUT_CLASSIFICATION	4.6100017319054594E-7	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999983981765104	WITHOUT_CLASSIFICATION	1.6018234896079457E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999993627727404	WITHOUT_CLASSIFICATION	6.372272595572522E-7	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.999999324130332	WITHOUT_CLASSIFICATION	6.758696680774442E-7	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.999999663167379	WITHOUT_CLASSIFICATION	3.368326210227538E-7	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999991694175626	WITHOUT_CLASSIFICATION	8.3058243733824E-7	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999993266834717	WITHOUT_CLASSIFICATION	6.733165283034668E-7	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999997076629332	WITHOUT_CLASSIFICATION	2.9233706667440015E-7	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999996728672229	WITHOUT_CLASSIFICATION	3.271327770777435E-7	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999996262957203	WITHOUT_CLASSIFICATION	3.7370427969933743E-7	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.9999995549230764	WITHOUT_CLASSIFICATION	4.4507692367938556E-7	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999996699332232	WITHOUT_CLASSIFICATION	3.30066776783269E-7	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999994660435311	WITHOUT_CLASSIFICATION	5.33956469018138E-7	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.999999027647392	WITHOUT_CLASSIFICATION	9.723526080323802E-7	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999995302918765	WITHOUT_CLASSIFICATION	4.697081234660955E-7	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999983795689242	WITHOUT_CLASSIFICATION	1.6204310758811942E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999990462152346	WITHOUT_CLASSIFICATION	9.537847653734066E-7	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999996748130694	WITHOUT_CLASSIFICATION	3.2518693063329096E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999992943624292	WITHOUT_CLASSIFICATION	7.056375708242807E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999991829440683	WITHOUT_CLASSIFICATION	8.17055931560216E-7	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999992913153323	WITHOUT_CLASSIFICATION	7.086846676109157E-7	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999991636948972	WITHOUT_CLASSIFICATION	8.363051027462813E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999997782449004	WITHOUT_CLASSIFICATION	2.2175509957221663E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999999332651602	WITHOUT_CLASSIFICATION	6.673483979723155E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999996832598318	WITHOUT_CLASSIFICATION	3.167401682307388E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999996269305537	WITHOUT_CLASSIFICATION	3.730694462803243E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999995632002301	WITHOUT_CLASSIFICATION	4.3679976998876554E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999993978601347	WITHOUT_CLASSIFICATION	6.021398652833595E-7	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999998064395657	WITHOUT_CLASSIFICATION	1.9356043425931078E-7	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999993822264213	WITHOUT_CLASSIFICATION	6.177735787729257E-7	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999994134957236	WITHOUT_CLASSIFICATION	5.865042763750622E-7	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.999999732055949	WITHOUT_CLASSIFICATION	2.679440508823062E-7	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999983455359774	WITHOUT_CLASSIFICATION	1.654464022606635E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999994151202285	WITHOUT_CLASSIFICATION	5.848797714706627E-7	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999996165516936	WITHOUT_CLASSIFICATION	3.834483064370108E-7	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999992786639741	WITHOUT_CLASSIFICATION	7.213360259005447E-7	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999991462932711	WITHOUT_CLASSIFICATION	8.537067288895983E-7	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999990972125735	WITHOUT_CLASSIFICATION	9.027874265434372E-7	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999994257675363	WITHOUT_CLASSIFICATION	5.742324635964044E-7	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999992293326726	WITHOUT_CLASSIFICATION	7.706673274179177E-7	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999993126690873	WITHOUT_CLASSIFICATION	6.873309126312807E-7	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999996457770706	WITHOUT_CLASSIFICATION	3.542229293315852E-7	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.999999839556399	WITHOUT_CLASSIFICATION	1.6044360089643044E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999996029024543	WITHOUT_CLASSIFICATION	3.970975457541713E-7	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999996413757397	WITHOUT_CLASSIFICATION	3.5862426022549755E-7	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999989390267614	WITHOUT_CLASSIFICATION	1.0609732386396274E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999997390880991	WITHOUT_CLASSIFICATION	2.6091190088249073E-7	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999993982171065	WITHOUT_CLASSIFICATION	6.01782893481139E-7	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999983296813184	WITHOUT_CLASSIFICATION	1.6703186816004778E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999994114294268	WITHOUT_CLASSIFICATION	5.885705731187885E-7	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.999998633639243	WITHOUT_CLASSIFICATION	1.366360756953068E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999994142486924	WITHOUT_CLASSIFICATION	5.857513075891354E-7	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999993876699597	WITHOUT_CLASSIFICATION	6.123300403679399E-7	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999992918474196	WITHOUT_CLASSIFICATION	7.081525802981322E-7	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999994242864914	WITHOUT_CLASSIFICATION	5.757135085164171E-7	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999992636484017	WITHOUT_CLASSIFICATION	7.363515982531848E-7	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999996200054231	WITHOUT_CLASSIFICATION	3.799945769685759E-7	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999996847689946	WITHOUT_CLASSIFICATION	3.1523100532259895E-7	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999996055983139	WITHOUT_CLASSIFICATION	3.944016861965381E-7	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999990857248259	WITHOUT_CLASSIFICATION	9.142751742726418E-7	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999995480996207	WITHOUT_CLASSIFICATION	4.519003793739647E-7	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999995852011582	WITHOUT_CLASSIFICATION	4.1479884179062057E-7	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999996294487425	WITHOUT_CLASSIFICATION	3.705512574512122E-7	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999995017157132	WITHOUT_CLASSIFICATION	4.98284286825435E-7	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.999999355229519	WITHOUT_CLASSIFICATION	6.44770481029737E-7	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999996799457049	WITHOUT_CLASSIFICATION	3.2005429503958733E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999996705129551	WITHOUT_CLASSIFICATION	3.294870448567565E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999980829192077	WITHOUT_CLASSIFICATION	1.917080792311263E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999996451136718	WITHOUT_CLASSIFICATION	3.5488632821404834E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999996498723237	WITHOUT_CLASSIFICATION	3.501276762700924E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999995329039131	WITHOUT_CLASSIFICATION	4.6709608703899336E-7	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999987697090551	WITHOUT_CLASSIFICATION	1.2302909448878289E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999997317433857	WITHOUT_CLASSIFICATION	2.682566142269115E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.999999791703347	WITHOUT_CLASSIFICATION	2.0829665302369401E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999993332697491	WITHOUT_CLASSIFICATION	6.667302510206685E-7	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999989292651504	WITHOUT_CLASSIFICATION	1.0707348495251728E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.99999860479121	WITHOUT_CLASSIFICATION	1.3952087899405676E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999995163072664	WITHOUT_CLASSIFICATION	4.836927336202485E-7	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999993056939742	WITHOUT_CLASSIFICATION	6.94306025723309E-7	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999993807779599	WITHOUT_CLASSIFICATION	6.192220401453317E-7	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999995645780926	WITHOUT_CLASSIFICATION	4.3542190742809527E-7	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.999999502918004	WITHOUT_CLASSIFICATION	4.970819960327382E-7	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999989223334348	WITHOUT_CLASSIFICATION	1.0776665651153689E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999988190066293	WITHOUT_CLASSIFICATION	1.1809933706923652E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999980625625905	WITHOUT_CLASSIFICATION	1.937437409543986E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999993823163793	WITHOUT_CLASSIFICATION	6.176836206596964E-7	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999993183000639	WITHOUT_CLASSIFICATION	6.816999360931255E-7	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999987652637341	WITHOUT_CLASSIFICATION	1.2347362659305582E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999988914276609	WITHOUT_CLASSIFICATION	1.1085723392287643E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999987919776578	WITHOUT_CLASSIFICATION	1.2080223421535229E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.999999013658264	WITHOUT_CLASSIFICATION	9.863417359564405E-7	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999995374920078	WITHOUT_CLASSIFICATION	4.62507992250917E-7	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999992749281029	WITHOUT_CLASSIFICATION	7.250718970687247E-7	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999990896294031	WITHOUT_CLASSIFICATION	9.10370596867787E-7	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999992198349295	WITHOUT_CLASSIFICATION	7.801650706264686E-7	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999994696558523	WITHOUT_CLASSIFICATION	5.303441476815906E-7	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999987133259578	WITHOUT_CLASSIFICATION	1.2866740421680039E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999993682245205	WITHOUT_CLASSIFICATION	6.317754794417884E-7	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999994006036825	WITHOUT_CLASSIFICATION	5.993963174982126E-7	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999990454861162	WITHOUT_CLASSIFICATION	9.545138837550526E-7	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999994083771266	WITHOUT_CLASSIFICATION	5.916228734278373E-7	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999992438783143	WITHOUT_CLASSIFICATION	7.561216856368536E-7	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.999999378614496	WITHOUT_CLASSIFICATION	6.213855039635544E-7	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999991608611647	WITHOUT_CLASSIFICATION	8.391388352779516E-7	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999992216124018	WITHOUT_CLASSIFICATION	7.783875982797621E-7	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999997794420897	WITHOUT_CLASSIFICATION	2.205579101944875E-7	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999994913289845	WITHOUT_CLASSIFICATION	5.086710155134439E-7	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999993520721191	WITHOUT_CLASSIFICATION	6.479278809252595E-7	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999993570419172	WITHOUT_CLASSIFICATION	6.429580827891241E-7	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.999999430254018	WITHOUT_CLASSIFICATION	5.69745981990118E-7	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999989844113485	WITHOUT_CLASSIFICATION	1.0155886514773237E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999995597091791	WITHOUT_CLASSIFICATION	4.402908208887974E-7	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999993307030148	WITHOUT_CLASSIFICATION	6.692969852453428E-7	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999990029395108	WITHOUT_CLASSIFICATION	9.970604892058894E-7	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999994808533187	WITHOUT_CLASSIFICATION	5.191466813217364E-7	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999985091718282	WITHOUT_CLASSIFICATION	1.4908281717768793E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999986651344798	WITHOUT_CLASSIFICATION	1.3348655202308298E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999995075449396	WITHOUT_CLASSIFICATION	4.924550604574264E-7	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999980774174867	WITHOUT_CLASSIFICATION	1.9225825133299494E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999994108667202	WITHOUT_CLASSIFICATION	5.891332798267088E-7	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999995753630161	WITHOUT_CLASSIFICATION	4.2463698394434346E-7	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999983894589887	WITHOUT_CLASSIFICATION	1.610541011363633E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999997220185606	WITHOUT_CLASSIFICATION	2.779814394111011E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999987210714983	WITHOUT_CLASSIFICATION	1.278928501728266E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999984256023785	WITHOUT_CLASSIFICATION	1.5743976215713448E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999991618437102	WITHOUT_CLASSIFICATION	8.381562899292683E-7	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999983732119796	WITHOUT_CLASSIFICATION	1.626788020435917E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999990431099853	WITHOUT_CLASSIFICATION	9.568900146255422E-7	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.999999228801273	WITHOUT_CLASSIFICATION	7.711987270305898E-7	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999991071109049	WITHOUT_CLASSIFICATION	8.928890951166548E-7	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999991520652569	WITHOUT_CLASSIFICATION	8.479347430662668E-7	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999989461264156	WITHOUT_CLASSIFICATION	1.0538735843390712E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999995493232817	WITHOUT_CLASSIFICATION	4.506767182956103E-7	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999990350587801	WITHOUT_CLASSIFICATION	9.649412198338967E-7	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999990544022276	WITHOUT_CLASSIFICATION	9.455977723792937E-7	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999989844502457	WITHOUT_CLASSIFICATION	1.015549754322501E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999987423310324	WITHOUT_CLASSIFICATION	1.2576689676558945E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999986687189506	WITHOUT_CLASSIFICATION	1.331281049323309E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999990294564136	WITHOUT_CLASSIFICATION	9.705435863380009E-7	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999989762861645	WITHOUT_CLASSIFICATION	1.0237138353725837E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999984502779355	WITHOUT_CLASSIFICATION	1.5497220645224833E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999987438435849	WITHOUT_CLASSIFICATION	1.25615641500449E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999988781584755	WITHOUT_CLASSIFICATION	1.1218415244876687E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999991068117946	WITHOUT_CLASSIFICATION	8.931882054071021E-7	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.999998885985966	WITHOUT_CLASSIFICATION	1.11401403404762E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999989999573675	WITHOUT_CLASSIFICATION	1.0000426325123211E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.999999150676405	WITHOUT_CLASSIFICATION	8.493235949562912E-7	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999995697321682	WITHOUT_CLASSIFICATION	4.3026783181727734E-7	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.9999987914538003	WITHOUT_CLASSIFICATION	1.2085461997053685E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999987536735649	WITHOUT_CLASSIFICATION	1.2463264350544144E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999994187759829	WITHOUT_CLASSIFICATION	5.812240171040142E-7	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999987387765558	WITHOUT_CLASSIFICATION	1.2612234442513867E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999984490854723	WITHOUT_CLASSIFICATION	1.5509145276822905E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999985341048451	WITHOUT_CLASSIFICATION	1.4658951548951324E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999980515475604	WITHOUT_CLASSIFICATION	1.9484524395524053E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999987160822539	WITHOUT_CLASSIFICATION	1.2839177460229392E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999994988675286	WITHOUT_CLASSIFICATION	5.011324713849151E-7	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999987612737489	WITHOUT_CLASSIFICATION	1.2387262511584722E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999996384656595	WITHOUT_CLASSIFICATION	3.6153434049124534E-7	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999988044325588	WITHOUT_CLASSIFICATION	1.1955674412237848E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999995234777822	WITHOUT_CLASSIFICATION	4.765222178223699E-7	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.999998967601145	WITHOUT_CLASSIFICATION	1.0323988549002863E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999991808309648	WITHOUT_CLASSIFICATION	8.191690351397401E-7	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999978441406333	WITHOUT_CLASSIFICATION	2.1558593667182867E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999987101892779	WITHOUT_CLASSIFICATION	1.2898107221347922E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999989466883867	WITHOUT_CLASSIFICATION	1.0533116132659478E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999995108309794	WITHOUT_CLASSIFICATION	4.891690205979633E-7	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999996031007917	WITHOUT_CLASSIFICATION	3.96899208239592E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999989090097333	WITHOUT_CLASSIFICATION	1.0909902666365165E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999993144054962	WITHOUT_CLASSIFICATION	6.855945038364196E-7	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999995675580807	WITHOUT_CLASSIFICATION	4.3244191925286877E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999988408321427	WITHOUT_CLASSIFICATION	1.159167857262678E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999974518716594	WITHOUT_CLASSIFICATION	2.548128340647024E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999989817254653	WITHOUT_CLASSIFICATION	1.0182745346030934E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999992942238587	WITHOUT_CLASSIFICATION	7.057761414205159E-7	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.999999604711537	WITHOUT_CLASSIFICATION	3.952884630028009E-7	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999994219673831	WITHOUT_CLASSIFICATION	5.780326168516754E-7	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999990917444089	WITHOUT_CLASSIFICATION	9.082555909489689E-7	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.999998747897598	WITHOUT_CLASSIFICATION	1.2521024020193901E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.999998681476037	WITHOUT_CLASSIFICATION	1.3185239630184665E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999987156801693	WITHOUT_CLASSIFICATION	1.2843198306407525E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999979367363357	WITHOUT_CLASSIFICATION	2.063263664289055E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999989299991474	WITHOUT_CLASSIFICATION	1.070000852582592E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999993393057778	WITHOUT_CLASSIFICATION	6.606942222321408E-7	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999987563074251	WITHOUT_CLASSIFICATION	1.2436925750140784E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999984325158239	WITHOUT_CLASSIFICATION	1.5674841760938409E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999997801418851	WITHOUT_CLASSIFICATION	2.1985811490475276E-7	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999986501224893	WITHOUT_CLASSIFICATION	1.3498775106873365E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999988835609982	WITHOUT_CLASSIFICATION	1.1164390017932607E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999995636002702	WITHOUT_CLASSIFICATION	4.3639972984379674E-7	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999984405470316	WITHOUT_CLASSIFICATION	1.5594529683126868E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999991796707207	WITHOUT_CLASSIFICATION	8.203292792433521E-7	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999988185529556	WITHOUT_CLASSIFICATION	1.181447044428829E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999988479455554	WITHOUT_CLASSIFICATION	1.1520544446493891E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999990470469614	WITHOUT_CLASSIFICATION	9.529530386014579E-7	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999988177603732	WITHOUT_CLASSIFICATION	1.1822396267281445E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999980241580962	WITHOUT_CLASSIFICATION	1.9758419038336747E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999988048234153	WITHOUT_CLASSIFICATION	1.1951765847164285E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999988501807	WITHOUT_CLASSIFICATION	1.1498193000558454E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999994288635405	WITHOUT_CLASSIFICATION	5.71136459549374E-7	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999987602417217	WITHOUT_CLASSIFICATION	1.239758278282348E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999986011251557	WITHOUT_CLASSIFICATION	1.3988748442621273E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999979893156813	WITHOUT_CLASSIFICATION	2.010684318678817E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999988008297461	WITHOUT_CLASSIFICATION	1.199170253895025E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999990754534421	WITHOUT_CLASSIFICATION	9.245465579711254E-7	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.999998735745184	WITHOUT_CLASSIFICATION	1.2642548159379609E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999983403456726	WITHOUT_CLASSIFICATION	1.6596543274217593E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999984001813249	WITHOUT_CLASSIFICATION	1.5998186750902528E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999977806860256	WITHOUT_CLASSIFICATION	2.219313974372007E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999983979414337	WITHOUT_CLASSIFICATION	1.6020585662780332E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999982131461209	WITHOUT_CLASSIFICATION	1.7868538790439257E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999962873775888	WITHOUT_CLASSIFICATION	3.7126224111377215E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999977704964422	WITHOUT_CLASSIFICATION	2.2295035577252102E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9994182604347075	WITHOUT_CLASSIFICATION	5.817395652924057E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9996630308391681	WITHOUT_CLASSIFICATION	3.369691608319592E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999999061351856	WITHOUT_CLASSIFICATION	9.386481432154542E-8	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999991738849138	WITHOUT_CLASSIFICATION	8.261150863366395E-7	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9984279100159068	WITHOUT_CLASSIFICATION	0.0015720899840931302	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999596539144625	WITHOUT_CLASSIFICATION	4.0346085537534334E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9997785099033653	WITHOUT_CLASSIFICATION	2.2149009663475366E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999984186245243	WITHOUT_CLASSIFICATION	1.5813754756877246E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.999997929416198	WITHOUT_CLASSIFICATION	2.0705838019372078E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999971426713649	WITHOUT_CLASSIFICATION	2.857328635104547E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999991503548813	WITHOUT_CLASSIFICATION	8.496451186398274E-7	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999978005503191	WITHOUT_CLASSIFICATION	2.1994496808866553E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999973174340517	WITHOUT_CLASSIFICATION	2.6825659481997775E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999974311199831	WITHOUT_CLASSIFICATION	2.5688800170123408E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999996215959492	WITHOUT_CLASSIFICATION	3.78404050871699E-7	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999992539492079	WITHOUT_CLASSIFICATION	7.460507920793016E-7	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999978302955183	WITHOUT_CLASSIFICATION	2.169704481644019E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999972569181609	WITHOUT_CLASSIFICATION	2.7430818391384043E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999988877308152	WITHOUT_CLASSIFICATION	1.1122691847845117E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999983018849301	WITHOUT_CLASSIFICATION	1.6981150698857394E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999993539880329	WITHOUT_CLASSIFICATION	6.460119670814932E-7	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999978955688775	WITHOUT_CLASSIFICATION	2.104431122467604E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999992681710111	WITHOUT_CLASSIFICATION	7.318289887788049E-7	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999986223930886	WITHOUT_CLASSIFICATION	1.3776069114005982E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999978521556178	WITHOUT_CLASSIFICATION	2.1478443821333E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999994865451468	WITHOUT_CLASSIFICATION	5.134548531499022E-7	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999991961063641	WITHOUT_CLASSIFICATION	8.038936359349274E-7	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999986681087939	WITHOUT_CLASSIFICATION	1.3318912061169566E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999998774057332	WITHOUT_CLASSIFICATION	1.2259426682713684E-7	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999998131083494	WITHOUT_CLASSIFICATION	1.8689165049934213E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999998597880926	WITHOUT_CLASSIFICATION	1.402119073340026E-7	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999909943952245	WITHOUT_CLASSIFICATION	9.005604775488602E-6	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999984201740261	WITHOUT_CLASSIFICATION	1.5798259738855954E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999999404419859	WITHOUT_CLASSIFICATION	5.955801399908454E-8	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999981439448907	WITHOUT_CLASSIFICATION	1.856055109282636E-6	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999999621203037	WITHOUT_CLASSIFICATION	3.7879696217329174E-8	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.999997516552906	WITHOUT_CLASSIFICATION	2.4834470939383603E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671009	WITHOUT_CLASSIFICATION	7.873289903810794E-8	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999993853162422	WITHOUT_CLASSIFICATION	6.146837578449106E-7	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871340505	WITHOUT_CLASSIFICATION	1.286594959279901E-8	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999871340505	WITHOUT_CLASSIFICATION	1.286594959279901E-8	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.99991977656336	WITHOUT_CLASSIFICATION	8.022343664008877E-5	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999670182314	WITHOUT_CLASSIFICATION	3.298176860487121E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999997037576	WITHOUT_CLASSIFICATION	2.9624239806392013E-10	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.99999960208461	WITHOUT_CLASSIFICATION	3.979153900217745E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999999996276234	WITHOUT_CLASSIFICATION	3.7237661841865897E-10	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999820550201742	WITHOUT_CLASSIFICATION	1.7944979825720403E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999346826604	WITHOUT_CLASSIFICATION	6.531733965106916E-8	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999997872144231	WITHOUT_CLASSIFICATION	2.127855769215379E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999909617582696	WITHOUT_CLASSIFICATION	9.03824173034558E-6	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999984373134	WITHOUT_CLASSIFICATION	1.562686606725818E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999986097976407	WITHOUT_CLASSIFICATION	1.390202359282511E-6	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999991455349213	WITHOUT_CLASSIFICATION	8.544650786033376E-7	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999993881144965	WITHOUT_CLASSIFICATION	6.118855034274912E-7	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9999993550293649	WITHOUT_CLASSIFICATION	6.44970635237743E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999972597009646	WITHOUT_CLASSIFICATION	2.740299035442668E-6	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999972597009646	WITHOUT_CLASSIFICATION	2.740299035442668E-6	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999989109536469	WITHOUT_CLASSIFICATION	1.0890463531214999E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996300816262	WITHOUT_CLASSIFICATION	3.699183737833603E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999978203983	WITHOUT_CLASSIFICATION	2.17960166187929E-9	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999993936687566	WITHOUT_CLASSIFICATION	6.063312434205528E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482750213	WITHOUT_CLASSIFICATION	5.1724978752532646E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999888810341	WITHOUT_CLASSIFICATION	1.1118965932937042E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999812570320504	WITHOUT_CLASSIFICATION	1.874296794952888E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999888810341	WITHOUT_CLASSIFICATION	1.1118965932937042E-8	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9999928634069029	WITHOUT_CLASSIFICATION	7.136593097112549E-6	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895733391	WITHOUT_CLASSIFICATION	1.111042666101997E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9991698166160312	WITHOUT_CLASSIFICATION	8.301833839688154E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999120461585338	WITHOUT_CLASSIFICATION	8.795384146625785E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999876687005409	WITHOUT_CLASSIFICATION	1.233129945914869E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999991007671919	WITHOUT_CLASSIFICATION	8.992328081172578E-7	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9996755945659483	WITHOUT_CLASSIFICATION	3.244054340517505E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999943593302308	WITHOUT_CLASSIFICATION	5.640669769170024E-6	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999998852071265	WITHOUT_CLASSIFICATION	1.1479287341343697E-7	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999989271736482	WITHOUT_CLASSIFICATION	1.0728263516912504E-6	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999993528563282	WITHOUT_CLASSIFICATION	6.471436717303528E-7	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999999937944167	WITHOUT_CLASSIFICATION	6.205583332472699E-9	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999998504373745	WITHOUT_CLASSIFICATION	1.495626254401812E-7	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999919813933126	WITHOUT_CLASSIFICATION	8.01860668746553E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999988040957	WITHOUT_CLASSIFICATION	1.1959043759597577E-9	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999988040957	WITHOUT_CLASSIFICATION	1.1959043759597577E-9	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999994968063205	WITHOUT_CLASSIFICATION	5.03193679553962E-7	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999955951606083	WITHOUT_CLASSIFICATION	4.404839391689136E-6	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999993633182551	WITHOUT_CLASSIFICATION	6.366817448333104E-7	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999945835967123	WITHOUT_CLASSIFICATION	5.4164032876581125E-6	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999995245820359	WITHOUT_CLASSIFICATION	4.754179640946727E-7	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999999888810341	WITHOUT_CLASSIFICATION	1.1118965932937042E-8	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999953273235	WITHOUT_CLASSIFICATION	4.672676503647517E-9	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.999999680313751	WITHOUT_CLASSIFICATION	3.19686248959249E-7	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999988506592	WITHOUT_CLASSIFICATION	1.149340804128558E-9	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999937497467	WITHOUT_CLASSIFICATION	6.250253367718565E-9	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999999993655	WITHOUT_CLASSIFICATION	6.345811830518024E-13	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999942423647403	WITHOUT_CLASSIFICATION	5.757635259664533E-6	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999982781272847	WITHOUT_CLASSIFICATION	1.7218727152837133E-6	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999528608815	WITHOUT_CLASSIFICATION	4.713911856630655E-8	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999998132134507	WITHOUT_CLASSIFICATION	1.8678654935640332E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999951693342941	WITHOUT_CLASSIFICATION	4.830665705860401E-6	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999994900874472	WITHOUT_CLASSIFICATION	5.099125529140796E-7	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999986653699	WITHOUT_CLASSIFICATION	1.3346300857246289E-9	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999998404116296	WITHOUT_CLASSIFICATION	1.595883705032871E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999999736321459	WITHOUT_CLASSIFICATION	2.636785410089199E-7	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9934384922725631	WITHOUT_CLASSIFICATION	0.006561507727436858	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999981171186233	WITHOUT_CLASSIFICATION	1.8828813768169796E-6	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999994382427766	WITHOUT_CLASSIFICATION	5.617572234124855E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999988736840895	WITHOUT_CLASSIFICATION	1.1263159104970758E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999991562373085	WITHOUT_CLASSIFICATION	8.437626914219801E-7	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999962127915961	WITHOUT_CLASSIFICATION	3.787208403865961E-6	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999992711945292	WITHOUT_CLASSIFICATION	7.288054706471133E-7	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999998595874358	WITHOUT_CLASSIFICATION	1.4041256429090535E-7	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.99999436554491	WITHOUT_CLASSIFICATION	5.634455090009823E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999751851324	WITHOUT_CLASSIFICATION	2.4814867648841397E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999999825971951	WITHOUT_CLASSIFICATION	1.740280480981728E-8	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999999294730003	WITHOUT_CLASSIFICATION	7.052699976676587E-8	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999997139330348	WITHOUT_CLASSIFICATION	2.860669652743285E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999994733228563	WITHOUT_CLASSIFICATION	5.266771437020442E-7	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999955926751019	WITHOUT_CLASSIFICATION	4.407324898069007E-6	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999897479808	WITHOUT_CLASSIFICATION	1.0252019197271436E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999996560136959	WITHOUT_CLASSIFICATION	3.439863041106684E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999997736997733	WITHOUT_CLASSIFICATION	2.2630022664696748E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999998552747091	WITHOUT_CLASSIFICATION	1.447252908014234E-7	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999995256224171	WITHOUT_CLASSIFICATION	4.743775829193082E-7	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999827528652399	WITHOUT_CLASSIFICATION	1.724713476012079E-5	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999782496331822	WITHOUT_CLASSIFICATION	2.1750366817889316E-5	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999998899216389	WITHOUT_CLASSIFICATION	1.1007836105719062E-7	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999937726763899	WITHOUT_CLASSIFICATION	6.227323610062094E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999997626156252	WITHOUT_CLASSIFICATION	2.3738437478411246E-7	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999815666856	WITHOUT_CLASSIFICATION	1.8433314394535712E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999984186245243	WITHOUT_CLASSIFICATION	1.5813754756877246E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.8385088165259421	WITHOUT_CLASSIFICATION	0.16149118347405794	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999989911779363	WITHOUT_CLASSIFICATION	1.0088220636214218E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999964980591204	WITHOUT_CLASSIFICATION	3.501940879598533E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999867335704	WITHOUT_CLASSIFICATION	1.3266429519931262E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895733391	WITHOUT_CLASSIFICATION	1.111042666101997E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.9996809019110031	WITHOUT_CLASSIFICATION	3.190980889968699E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999966548183	WITHOUT_CLASSIFICATION	3.3451816877017123E-9	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999976300737	WITHOUT_CLASSIFICATION	2.3699262574480756E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998939538782	WITHOUT_CLASSIFICATION	1.06046121758174E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998939538782	WITHOUT_CLASSIFICATION	1.06046121758174E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999865336795	WITHOUT_CLASSIFICATION	1.3466320616355517E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999865336795	WITHOUT_CLASSIFICATION	1.3466320616355517E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999999865336795	WITHOUT_CLASSIFICATION	1.3466320616355517E-8	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999976019916748	WITHOUT_CLASSIFICATION	2.398008325150076E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999976019916748	WITHOUT_CLASSIFICATION	2.398008325150076E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999997954199418	WITHOUT_CLASSIFICATION	2.045800581641498E-7	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999997954199418	WITHOUT_CLASSIFICATION	2.045800581641498E-7	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999995408597	WITHOUT_CLASSIFICATION	4.591403411189669E-10	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999999487419706	WITHOUT_CLASSIFICATION	5.125802937001217E-8	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999995963849657	WITHOUT_CLASSIFICATION	4.0361503437302436E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999995963849657	WITHOUT_CLASSIFICATION	4.0361503437302436E-7	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999625228929	WITHOUT_CLASSIFICATION	3.7477107008060845E-8	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999996566440383	WITHOUT_CLASSIFICATION	3.433559617229372E-7	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999493136442	WITHOUT_CLASSIFICATION	5.0686355855300616E-8	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999873175723	WITHOUT_CLASSIFICATION	1.2682427722444057E-8	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999302342643	WITHOUT_CLASSIFICATION	6.976573564337885E-8	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999997540787233	WITHOUT_CLASSIFICATION	2.4592127665573716E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.9999999494347264	WITHOUT_CLASSIFICATION	5.056527369391345E-8	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999998468990333	WITHOUT_CLASSIFICATION	1.5310096677740022E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.999999817699051	WITHOUT_CLASSIFICATION	1.8230094908008597E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999921469573289	WITHOUT_CLASSIFICATION	7.853042671254604E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999995760732118	WITHOUT_CLASSIFICATION	4.239267881760376E-7	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999995960412966	WITHOUT_CLASSIFICATION	4.039587032915481E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999989476090878	WITHOUT_CLASSIFICATION	1.0523909121667943E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999935516676627	WITHOUT_CLASSIFICATION	6.44833233732792E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999999467740005	WITHOUT_CLASSIFICATION	5.322599943438475E-8	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999971008503066	WITHOUT_CLASSIFICATION	2.8991496934203037E-6	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9997368461192145	WITHOUT_CLASSIFICATION	2.631538807854685E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999964620486907	WITHOUT_CLASSIFICATION	3.5379513093481527E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999994525299583	WITHOUT_CLASSIFICATION	5.474700417778106E-7	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999952059451199	WITHOUT_CLASSIFICATION	4.794054880040409E-6	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999731652247	WITHOUT_CLASSIFICATION	2.683477529496676E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.999999990719619	WITHOUT_CLASSIFICATION	9.280380978607473E-9	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999997637917907	WITHOUT_CLASSIFICATION	2.3620820939715354E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999529567233	WITHOUT_CLASSIFICATION	4.704327676531037E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999540875277	WITHOUT_CLASSIFICATION	4.591247224476747E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999999919729	WITHOUT_CLASSIFICATION	8.02709998656968E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999991276417	WITHOUT_CLASSIFICATION	8.723583324869638E-10	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999958653037	WITHOUT_CLASSIFICATION	4.134696244721787E-9	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999901391524	WITHOUT_CLASSIFICATION	9.860847620245668E-9	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999903761829	WITHOUT_CLASSIFICATION	9.623817119040811E-9	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999831742138	WITHOUT_CLASSIFICATION	1.6825786238005646E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331794	WITHOUT_CLASSIFICATION	1.2866820634760448E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999987442466	WITHOUT_CLASSIFICATION	1.2557533943344396E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879926	WITHOUT_CLASSIFICATION	1.9212007437252862E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999987442466	WITHOUT_CLASSIFICATION	1.2557533943344396E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999987442466	WITHOUT_CLASSIFICATION	1.2557533943344396E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999987442466	WITHOUT_CLASSIFICATION	1.2557533943344396E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999987442466	WITHOUT_CLASSIFICATION	1.2557533943344396E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999987442466	WITHOUT_CLASSIFICATION	1.2557533943344396E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999987442466	WITHOUT_CLASSIFICATION	1.2557533943344396E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879926	WITHOUT_CLASSIFICATION	1.9212007437252862E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879926	WITHOUT_CLASSIFICATION	1.9212007437252862E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879926	WITHOUT_CLASSIFICATION	1.9212007437252862E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879926	WITHOUT_CLASSIFICATION	1.9212007437252862E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879926	WITHOUT_CLASSIFICATION	1.9212007437252862E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879926	WITHOUT_CLASSIFICATION	1.9212007437252862E-8	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999608115619452	WITHOUT_CLASSIFICATION	3.918843805486277E-5	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999997356610029	WITHOUT_CLASSIFICATION	2.643389971172287E-7	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999853021525528	WITHOUT_CLASSIFICATION	1.4697847447332887E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999998222614209	WITHOUT_CLASSIFICATION	1.7773857904538483E-7	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999996103247	WITHOUT_CLASSIFICATION	3.8967529715843834E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999039347758	WITHOUT_CLASSIFICATION	9.606522420176866E-8	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.999998570835864	WITHOUT_CLASSIFICATION	1.4291641360619934E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999954975983	WITHOUT_CLASSIFICATION	4.502401680299359E-9	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999995756069922	WITHOUT_CLASSIFICATION	4.243930078582483E-7	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999853094098502	WITHOUT_CLASSIFICATION	1.469059014977848E-5	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.8880674496997976	IMPLEMENTATION	0.11193255030020242	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999988798907	WITHOUT_CLASSIFICATION	1.1201093419792229E-9	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999955169673277	WITHOUT_CLASSIFICATION	4.483032672308742E-6	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999999566331	WITHOUT_CLASSIFICATION	4.3366773266682473E-11	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999967666083	WITHOUT_CLASSIFICATION	3.2333917083009856E-9	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999989507083534	WITHOUT_CLASSIFICATION	1.0492916465644569E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999929437834749	WITHOUT_CLASSIFICATION	7.056216525029836E-6	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999999081337	WITHOUT_CLASSIFICATION	9.186629995526538E-8	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999998490354843	WITHOUT_CLASSIFICATION	1.5096451559353E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.999999947231118	WITHOUT_CLASSIFICATION	5.276888205848653E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999999146705677	WITHOUT_CLASSIFICATION	8.532943234444358E-8	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999999670158188	WITHOUT_CLASSIFICATION	3.298418109643252E-8	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999812570320504	WITHOUT_CLASSIFICATION	1.874296794952888E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9999972135588681	WITHOUT_CLASSIFICATION	2.786441131976245E-6	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999996175933051	WITHOUT_CLASSIFICATION	3.8240669490758396E-7	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.999999986476352	WITHOUT_CLASSIFICATION	1.3523648108977239E-8	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999999936125634	WITHOUT_CLASSIFICATION	6.387436651338603E-9	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999210655824741	WITHOUT_CLASSIFICATION	7.893441752588953E-5	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999813397924909	WITHOUT_CLASSIFICATION	1.8660207509082706E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999999581197009	WITHOUT_CLASSIFICATION	4.188029908938121E-8	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.99990196643362	WITHOUT_CLASSIFICATION	9.803356638012364E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.99999593313696	WITHOUT_CLASSIFICATION	4.066863039937582E-6	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.999999958878601	WITHOUT_CLASSIFICATION	4.1121398964738726E-8	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999999713438217	WITHOUT_CLASSIFICATION	2.865617834890379E-8	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999996123668219	WITHOUT_CLASSIFICATION	3.8763317809258544E-7	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9999353865307402	WITHOUT_CLASSIFICATION	6.461346925982472E-5	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999918210299753	WITHOUT_CLASSIFICATION	8.178970024792685E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.999999956387084	WITHOUT_CLASSIFICATION	4.361291584396181E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999978263719816	WITHOUT_CLASSIFICATION	2.1736280183855656E-6	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999999502817958	WITHOUT_CLASSIFICATION	4.9718204150713215E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996237567061	WITHOUT_CLASSIFICATION	3.7624329386480584E-7	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999998438366667	WITHOUT_CLASSIFICATION	1.5616333329089466E-7	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999999987191147	WITHOUT_CLASSIFICATION	1.280885388232468E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999975044607	WITHOUT_CLASSIFICATION	2.495539387555059E-9	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999999975044607	WITHOUT_CLASSIFICATION	2.495539387555059E-9	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999999944177937	WITHOUT_CLASSIFICATION	5.5822063030560385E-8	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.999999944177937	WITHOUT_CLASSIFICATION	5.5822063030560385E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999999386009913	WITHOUT_CLASSIFICATION	6.139900860765136E-8	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999999386009913	WITHOUT_CLASSIFICATION	6.139900860765136E-8	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999858553494818	WITHOUT_CLASSIFICATION	1.4144650518156319E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999937840675186	WITHOUT_CLASSIFICATION	6.215932481414071E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.999999998712397	WITHOUT_CLASSIFICATION	1.2876030427293133E-9	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.999999995136963	WITHOUT_CLASSIFICATION	4.863036994201636E-9	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999986264681016	WITHOUT_CLASSIFICATION	1.373531898452931E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999994413053194	WITHOUT_CLASSIFICATION	5.586946806392492E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999996656403563	WITHOUT_CLASSIFICATION	3.343596437080574E-7	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999908664902	WITHOUT_CLASSIFICATION	9.133509803520044E-9	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999777089	WITHOUT_CLASSIFICATION	2.2291085321199884E-11	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999999103222	WITHOUT_CLASSIFICATION	8.967783786695135E-11	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999994467428	WITHOUT_CLASSIFICATION	5.532572753208835E-10	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999999888024226	WITHOUT_CLASSIFICATION	1.119757747093077E-8	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.999999998330709	WITHOUT_CLASSIFICATION	1.6692910821996616E-9	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999992305167612	WITHOUT_CLASSIFICATION	7.694832386964528E-7	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999987112067406	WITHOUT_CLASSIFICATION	1.2887932594590995E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999999706925882	WITHOUT_CLASSIFICATION	2.930741176581096E-8	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999948023612875	WITHOUT_CLASSIFICATION	5.197638712568688E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999999910909672	WITHOUT_CLASSIFICATION	8.909032872904567E-9	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999950352166794	WITHOUT_CLASSIFICATION	4.964783320499425E-6	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.9999998990887713	WITHOUT_CLASSIFICATION	1.0091122862993327E-7	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999996959024642	WITHOUT_CLASSIFICATION	3.040975358730283E-7	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999971428856996	WITHOUT_CLASSIFICATION	2.857114300396988E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999985834163673	WITHOUT_CLASSIFICATION	1.4165836327033595E-6	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999788302341	WITHOUT_CLASSIFICATION	2.116976592752884E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999973986349	WITHOUT_CLASSIFICATION	2.6013651114382905E-9	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.999999997859001	WITHOUT_CLASSIFICATION	2.140999065393735E-9	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.999999962698267	WITHOUT_CLASSIFICATION	3.730173296229009E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993674397	WITHOUT_CLASSIFICATION	9.006325603142036E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993674397	WITHOUT_CLASSIFICATION	9.006325603142036E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993674397	WITHOUT_CLASSIFICATION	9.006325603142036E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618204151614	WITHOUT_CLASSIFICATION	1.3817958483868938E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618204151614	WITHOUT_CLASSIFICATION	1.3817958483868938E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999999736321459	WITHOUT_CLASSIFICATION	2.636785410089199E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999999736321459	WITHOUT_CLASSIFICATION	2.636785410089199E-7	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999999511746	WITHOUT_CLASSIFICATION	4.882544209052176E-11	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9974256830795776	WITHOUT_CLASSIFICATION	0.0025743169204225417	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999997936401229	WITHOUT_CLASSIFICATION	2.0635987693620532E-7	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999964100338	WITHOUT_CLASSIFICATION	3.5899663105578536E-9	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993674397	WITHOUT_CLASSIFICATION	9.006325603142036E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993674397	WITHOUT_CLASSIFICATION	9.006325603142036E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999990993674397	WITHOUT_CLASSIFICATION	9.006325603142036E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618204151614	WITHOUT_CLASSIFICATION	1.3817958483868938E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618204151614	WITHOUT_CLASSIFICATION	1.3817958483868938E-4	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9998618204151614	WITHOUT_CLASSIFICATION	1.3817958483868938E-4	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999999736321459	WITHOUT_CLASSIFICATION	2.636785410089199E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.999999736321459	WITHOUT_CLASSIFICATION	2.636785410089199E-7	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999998782879	WITHOUT_CLASSIFICATION	1.217120906442336E-10	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999995967795	WITHOUT_CLASSIFICATION	4.0322051306039304E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950171	WITHOUT_CLASSIFICATION	2.0498304332608355E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950171	WITHOUT_CLASSIFICATION	2.0498304332608355E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950171	WITHOUT_CLASSIFICATION	2.0498304332608355E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950171	WITHOUT_CLASSIFICATION	2.0498304332608355E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950171	WITHOUT_CLASSIFICATION	2.0498304332608355E-10	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999993660495278	WITHOUT_CLASSIFICATION	6.339504723274565E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999999584489269	WITHOUT_CLASSIFICATION	4.155107307974447E-8	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998318988755721	WITHOUT_CLASSIFICATION	1.6810112442780666E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999996382004519	WITHOUT_CLASSIFICATION	3.617995481823556E-7	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999983520803776	WITHOUT_CLASSIFICATION	1.6479196224074076E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999993911625736	WITHOUT_CLASSIFICATION	6.088374262843854E-7	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9987690595772968	WITHOUT_CLASSIFICATION	0.0012309404227031856	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999995325841954	WITHOUT_CLASSIFICATION	4.6741580451082245E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999969251127191	WITHOUT_CLASSIFICATION	3.074887280920711E-6	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999999839700692	WITHOUT_CLASSIFICATION	1.6029930814092457E-8	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999978825307195	WITHOUT_CLASSIFICATION	2.1174692803459693E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999994324511	WITHOUT_CLASSIFICATION	5.675489331528875E-10	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999981544798197	WITHOUT_CLASSIFICATION	1.8455201802790153E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997854474102	WITHOUT_CLASSIFICATION	2.1455258976327396E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999999969130775	WITHOUT_CLASSIFICATION	3.0869224774367755E-9	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999966178144433	WITHOUT_CLASSIFICATION	3.382185556855187E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999966178144433	WITHOUT_CLASSIFICATION	3.382185556855187E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999966178144433	WITHOUT_CLASSIFICATION	3.382185556855187E-6	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999944182256	WITHOUT_CLASSIFICATION	5.581774420240567E-9	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999944183028	WITHOUT_CLASSIFICATION	5.581697297201969E-9	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999986292280291	WITHOUT_CLASSIFICATION	1.3707719709120277E-6	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999998542	WITHOUT_CLASSIFICATION	1.4577271007576222E-13	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999217098916	WITHOUT_CLASSIFICATION	7.829010833504479E-8	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999992031267063	WITHOUT_CLASSIFICATION	7.968732936102336E-7	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999138295027	WITHOUT_CLASSIFICATION	8.617049722946985E-8	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999997923399915	WITHOUT_CLASSIFICATION	2.076600084669461E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999997018918139	WITHOUT_CLASSIFICATION	2.9810818611391857E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999961989866	WITHOUT_CLASSIFICATION	3.801013448176187E-9	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999992988541	WITHOUT_CLASSIFICATION	7.01145849215105E-10	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999979662739	WITHOUT_CLASSIFICATION	2.03372617314202E-9	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999998266795692	WITHOUT_CLASSIFICATION	1.7332043081350232E-7	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.999999950986331	WITHOUT_CLASSIFICATION	4.90136690248239E-8	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999594375055	WITHOUT_CLASSIFICATION	4.056249444019197E-8	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999998854345269	WITHOUT_CLASSIFICATION	1.1456547311164931E-7	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.99999997599963	WITHOUT_CLASSIFICATION	2.400036993860051E-8	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999927910067	WITHOUT_CLASSIFICATION	7.2089932872396486E-9	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999997185003433	WITHOUT_CLASSIFICATION	2.814996567729714E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999986633378192	WITHOUT_CLASSIFICATION	1.3366621808422274E-6	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999994496076064	WITHOUT_CLASSIFICATION	5.503923935273737E-7	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999979540297325	WITHOUT_CLASSIFICATION	2.0459702675000804E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9991469121458538	WITHOUT_CLASSIFICATION	8.530878541461983E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999999462692988	WITHOUT_CLASSIFICATION	5.373070130388208E-8	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999997481768033	WITHOUT_CLASSIFICATION	2.5182319668844613E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999997461120543	WITHOUT_CLASSIFICATION	2.5388794575892576E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999999297964706	WITHOUT_CLASSIFICATION	7.020352946982332E-8	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999989572136727	WITHOUT_CLASSIFICATION	1.0427863272940179E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999946966308085	WITHOUT_CLASSIFICATION	5.303369191453747E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.999999712974034	WITHOUT_CLASSIFICATION	2.8702596604123857E-7	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999996256552379	WITHOUT_CLASSIFICATION	3.743447620437932E-7	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999998122662748	WITHOUT_CLASSIFICATION	1.8773372529481309E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999997977520186	WITHOUT_CLASSIFICATION	2.022479812674766E-7	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.999999842450905	WITHOUT_CLASSIFICATION	1.5754909492666908E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999997709654729	WITHOUT_CLASSIFICATION	2.2903452703152174E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999998069632098	WITHOUT_CLASSIFICATION	1.930367902620166E-7	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999976509537694	WITHOUT_CLASSIFICATION	2.3490462306144433E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999997216226864	WITHOUT_CLASSIFICATION	2.783773136546632E-7	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9999994013347614	WITHOUT_CLASSIFICATION	5.986652385699821E-7	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999346745877133	WITHOUT_CLASSIFICATION	6.532541228668777E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999999999850775	WITHOUT_CLASSIFICATION	1.4922489645827978E-10	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999985783773435	WITHOUT_CLASSIFICATION	1.4216226563725152E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999689348213034	WITHOUT_CLASSIFICATION	3.106517869657709E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999947546452732	WITHOUT_CLASSIFICATION	5.24535472684208E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999999845916505	WITHOUT_CLASSIFICATION	1.540834948192413E-8	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999909350640217	WITHOUT_CLASSIFICATION	9.064935978317085E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999653685322927	WITHOUT_CLASSIFICATION	3.463146770731867E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999653685322927	WITHOUT_CLASSIFICATION	3.463146770731867E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999997687477603	WITHOUT_CLASSIFICATION	2.3125223964578856E-7	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999989592925392	WITHOUT_CLASSIFICATION	1.0407074608110427E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999914628783718	WITHOUT_CLASSIFICATION	8.537121628109892E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999999997123868	WITHOUT_CLASSIFICATION	2.8761319949096342E-9	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999997697529583	WITHOUT_CLASSIFICATION	2.302470415792691E-7	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999997744527634	WITHOUT_CLASSIFICATION	2.2554723656086102E-7	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999998224475358	WITHOUT_CLASSIFICATION	1.775524641820447E-7	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999736504	WITHOUT_CLASSIFICATION	2.634952313014614E-11	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999999229039114	WITHOUT_CLASSIFICATION	7.70960885868858E-8	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.9999978971048143	WITHOUT_CLASSIFICATION	2.102895185642315E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999583304241	WITHOUT_CLASSIFICATION	4.166957598376119E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999583304241	WITHOUT_CLASSIFICATION	4.166957598376119E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999583304241	WITHOUT_CLASSIFICATION	4.166957598376119E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999583304241	WITHOUT_CLASSIFICATION	4.166957598376119E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999982591412259	WITHOUT_CLASSIFICATION	1.7408587741387494E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999997512182309	WITHOUT_CLASSIFICATION	2.4878176912133863E-7	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999955398842815	WITHOUT_CLASSIFICATION	4.460115718521241E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999956046663853	WITHOUT_CLASSIFICATION	4.395333614827484E-6	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.999986177297659	WITHOUT_CLASSIFICATION	1.3822702340979687E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997221860728	WITHOUT_CLASSIFICATION	2.778139271768096E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999994993335252	WITHOUT_CLASSIFICATION	5.006664747701816E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997337799235	WITHOUT_CLASSIFICATION	2.6622007650668973E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997337799235	WITHOUT_CLASSIFICATION	2.6622007650668973E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999792723334	WITHOUT_CLASSIFICATION	2.072766662665399E-8	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999972753139151	WITHOUT_CLASSIFICATION	2.7246860849712633E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998673841871	WITHOUT_CLASSIFICATION	1.3261581286610589E-7	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999997359129	WITHOUT_CLASSIFICATION	2.640870342942583E-10	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999997359129	WITHOUT_CLASSIFICATION	2.640870342942583E-10	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999999255625	WITHOUT_CLASSIFICATION	7.443744168578797E-11	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999961699320749	WITHOUT_CLASSIFICATION	3.830067925166039E-6	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9999961699320749	WITHOUT_CLASSIFICATION	3.830067925166039E-6	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999853079099	WITHOUT_CLASSIFICATION	1.4692090186961322E-8	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999996786574	WITHOUT_CLASSIFICATION	3.213427189919592E-10	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999471404838	WITHOUT_CLASSIFICATION	5.2859516109857244E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999988646547465	WITHOUT_CLASSIFICATION	1.1353452533793144E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9971652861830792	WITHOUT_CLASSIFICATION	0.0028347138169208656	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999955813038	WITHOUT_CLASSIFICATION	4.418696179971179E-9	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9999747592556636	WITHOUT_CLASSIFICATION	2.524074433645842E-5	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999894940215888	WITHOUT_CLASSIFICATION	1.0505978411192058E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999997239317778	WITHOUT_CLASSIFICATION	2.7606822215455177E-7	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999950441826	WITHOUT_CLASSIFICATION	4.955817448928076E-9	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999999663298518	WITHOUT_CLASSIFICATION	3.367014820123235E-8	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999992707025912	WITHOUT_CLASSIFICATION	7.292974087877086E-7	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.99999838811213	WITHOUT_CLASSIFICATION	1.611887870049677E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.999996893848756	WITHOUT_CLASSIFICATION	3.1061512438957914E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999977317820227	WITHOUT_CLASSIFICATION	2.268217977347582E-6	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999997258055522	WITHOUT_CLASSIFICATION	2.741944478209209E-7	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999997728215122	WITHOUT_CLASSIFICATION	2.2717848779890596E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999998222379786	WITHOUT_CLASSIFICATION	1.7776202138298237E-7	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999698430946	WITHOUT_CLASSIFICATION	3.015690535379375E-8	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999995211061383	WITHOUT_CLASSIFICATION	4.788938617026026E-7	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999968023675189	WITHOUT_CLASSIFICATION	3.1976324812298806E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999988047351819	WITHOUT_CLASSIFICATION	1.195264818109662E-6	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999992033434664	WITHOUT_CLASSIFICATION	7.966565336646729E-7	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999999817431645	WITHOUT_CLASSIFICATION	1.825683546707492E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999973874268	WITHOUT_CLASSIFICATION	2.612573201944015E-8	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999866569146	WITHOUT_CLASSIFICATION	1.3343085342644026E-8	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999999604768789	WITHOUT_CLASSIFICATION	3.9523121093918174E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999999972833957	WITHOUT_CLASSIFICATION	2.716604308359122E-9	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.999999999604345	WITHOUT_CLASSIFICATION	3.956549248423271E-10	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999667082496467	WITHOUT_CLASSIFICATION	3.329175035331642E-5	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999997967171613	WITHOUT_CLASSIFICATION	2.0328283866303635E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999232945743	WITHOUT_CLASSIFICATION	7.670542571655654E-8	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.5417258118978682	WITHOUT_CLASSIFICATION	0.4582741881021318	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999990275595831	WITHOUT_CLASSIFICATION	9.724404169036339E-7	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999998389155763	WITHOUT_CLASSIFICATION	1.610844237798599E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999981099752	WITHOUT_CLASSIFICATION	1.890024819705186E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995142130945	WITHOUT_CLASSIFICATION	4.857869054401515E-7	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999882840096	WITHOUT_CLASSIFICATION	1.171599028413209E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999997801734127	WITHOUT_CLASSIFICATION	2.198265873099778E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999981099752	WITHOUT_CLASSIFICATION	1.890024819705186E-9	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999995142130945	WITHOUT_CLASSIFICATION	4.857869054401515E-7	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999953785765647	WITHOUT_CLASSIFICATION	4.621423435227739E-6	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999998618769678	WITHOUT_CLASSIFICATION	1.381230322109644E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999998618769678	WITHOUT_CLASSIFICATION	1.381230322109644E-7	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999751755405233	WITHOUT_CLASSIFICATION	2.482445947672819E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999996576828	WITHOUT_CLASSIFICATION	3.423171963675442E-10	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999916571382	WITHOUT_CLASSIFICATION	8.342861791667712E-9	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999582196459	WITHOUT_CLASSIFICATION	4.178035398370307E-8	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998932129160327	WITHOUT_CLASSIFICATION	1.0678708396735883E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999997224272753	WITHOUT_CLASSIFICATION	2.7757272468855E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9999719729062928	WITHOUT_CLASSIFICATION	2.8027093707137107E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.999989887708168	WITHOUT_CLASSIFICATION	1.0112291832095977E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999847865505346	WITHOUT_CLASSIFICATION	1.5213449465431863E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.999999737862663	WITHOUT_CLASSIFICATION	2.621373370067779E-7	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999992348847218	WITHOUT_CLASSIFICATION	7.651152782148077E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999999746553796	WITHOUT_CLASSIFICATION	2.5344620485842426E-8	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999987471809	WITHOUT_CLASSIFICATION	1.2528189916499092E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999987869627	WITHOUT_CLASSIFICATION	1.2130372247289256E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999987869627	WITHOUT_CLASSIFICATION	1.2130372247289256E-9	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999860258091742	WITHOUT_CLASSIFICATION	1.3974190825924444E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999860258091742	WITHOUT_CLASSIFICATION	1.3974190825924444E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999999934925584	WITHOUT_CLASSIFICATION	6.5074415721932626E-9	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999996925759473	WITHOUT_CLASSIFICATION	3.0742405265523347E-7	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999922365943615	WITHOUT_CLASSIFICATION	7.763405638564388E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999977827273	WITHOUT_CLASSIFICATION	2.2172727277828475E-9	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999992812598696	WITHOUT_CLASSIFICATION	7.187401304587807E-7	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999999460464065	WITHOUT_CLASSIFICATION	5.395359348510696E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999916571382	WITHOUT_CLASSIFICATION	8.342861791667712E-9	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999999582196459	WITHOUT_CLASSIFICATION	4.178035398370307E-8	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999847865505346	WITHOUT_CLASSIFICATION	1.5213449465431863E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.999999737862663	WITHOUT_CLASSIFICATION	2.621373370067779E-7	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999995108148952	WITHOUT_CLASSIFICATION	4.891851048031853E-6	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999936537649415	WITHOUT_CLASSIFICATION	6.346235058525256E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997177921002	WITHOUT_CLASSIFICATION	2.8220789985291187E-7	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999820805764	WITHOUT_CLASSIFICATION	1.7919423577518815E-8	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.999999733596352	WITHOUT_CLASSIFICATION	2.664036480861271E-7	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999990781919	WITHOUT_CLASSIFICATION	9.218081146125783E-10	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999999661969687	WITHOUT_CLASSIFICATION	3.3803031287758853E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999998382424401	WITHOUT_CLASSIFICATION	1.617575598724498E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999985567900697	WITHOUT_CLASSIFICATION	1.443209930458771E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999985977653082	WITHOUT_CLASSIFICATION	1.4022346918845235E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999982351366	WITHOUT_CLASSIFICATION	1.764863322919059E-9	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999894641388	WITHOUT_CLASSIFICATION	1.0535861252889524E-8	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999995274139621	WITHOUT_CLASSIFICATION	4.725860379584385E-7	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999993690575684	WITHOUT_CLASSIFICATION	6.309424315978802E-7	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999992022000282	WITHOUT_CLASSIFICATION	7.977999716776562E-7	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999987778808009	WITHOUT_CLASSIFICATION	1.2221191990483427E-6	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999989654306544	WITHOUT_CLASSIFICATION	1.0345693456745147E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999999864393561	WITHOUT_CLASSIFICATION	1.3560643821448728E-8	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999999993950957	WITHOUT_CLASSIFICATION	6.049043951524292E-10	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999914120431	WITHOUT_CLASSIFICATION	8.587956845523612E-9	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999758510895	WITHOUT_CLASSIFICATION	2.414891047994478E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999758510895	WITHOUT_CLASSIFICATION	2.414891047994478E-8	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.999999786029523	WITHOUT_CLASSIFICATION	2.1397047689480329E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999998321580555	WITHOUT_CLASSIFICATION	1.678419444810901E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999998810783	WITHOUT_CLASSIFICATION	1.1892176324002877E-10	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999499336057	WITHOUT_CLASSIFICATION	5.006639432490515E-8	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999999499336057	WITHOUT_CLASSIFICATION	5.006639432490515E-8	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999997177921002	WITHOUT_CLASSIFICATION	2.8220789985291187E-7	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999998769930452	WITHOUT_CLASSIFICATION	1.2300695471985998E-7	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999999816393569	WITHOUT_CLASSIFICATION	1.836064308916059E-8	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999739124938	WITHOUT_CLASSIFICATION	2.6087506104410856E-8	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999999640316758	WITHOUT_CLASSIFICATION	3.5968324156906354E-8	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999844569452	WITHOUT_CLASSIFICATION	1.554305486547862E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999851103721	WITHOUT_CLASSIFICATION	1.4889627952760523E-8	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999970257026414	WITHOUT_CLASSIFICATION	2.9742973586302615E-6	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999974358443234	WITHOUT_CLASSIFICATION	2.564155676473546E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999999776365486	WITHOUT_CLASSIFICATION	2.2363451325329E-8	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999995587627117	WITHOUT_CLASSIFICATION	4.412372882582249E-7	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.999999877635487	WITHOUT_CLASSIFICATION	1.223645129334139E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999989816304936	WITHOUT_CLASSIFICATION	1.0183695063182697E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999998265522907	WITHOUT_CLASSIFICATION	1.7344770924887933E-7	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999997862950444	WITHOUT_CLASSIFICATION	2.1370495556868608E-7	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999760262615	WITHOUT_CLASSIFICATION	2.39737385196822E-8	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999997294062205	WITHOUT_CLASSIFICATION	2.7059377944351756E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999878500613	WITHOUT_CLASSIFICATION	1.2149938803168145E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999772140157	WITHOUT_CLASSIFICATION	2.2785984231144394E-8	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999997579532	WITHOUT_CLASSIFICATION	2.4204676772830095E-10	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999999092921903	WITHOUT_CLASSIFICATION	9.07078096045373E-8	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.999995915185862	WITHOUT_CLASSIFICATION	4.084814138032953E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999998265764473	WITHOUT_CLASSIFICATION	1.7342355272812855E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999975009177	WITHOUT_CLASSIFICATION	2.499082348049054E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999934395957	WITHOUT_CLASSIFICATION	6.560404295639864E-8	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999997730635896	WITHOUT_CLASSIFICATION	2.2693641051861222E-7	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.999999409652352	WITHOUT_CLASSIFICATION	5.90347648041517E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999994450008627	WITHOUT_CLASSIFICATION	5.549991374062764E-7	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999997007628798	WITHOUT_CLASSIFICATION	2.992371202217173E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264362	WITHOUT_CLASSIFICATION	4.773563762470405E-9	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264362	WITHOUT_CLASSIFICATION	4.773563762470405E-9	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999995835335	WITHOUT_CLASSIFICATION	4.164665437079028E-10	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.999999666375913	WITHOUT_CLASSIFICATION	3.3362408691454554E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.999999666375913	WITHOUT_CLASSIFICATION	3.3362408691454554E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999974987166	WITHOUT_CLASSIFICATION	2.5012833928530652E-8	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999999974987166	WITHOUT_CLASSIFICATION	2.5012833928530652E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832405644	WITHOUT_CLASSIFICATION	3.1675943559545294E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.9999999831472235	WITHOUT_CLASSIFICATION	1.6852776615941117E-8	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999998299867616	WITHOUT_CLASSIFICATION	1.7001323829823055E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999104009893	WITHOUT_CLASSIFICATION	8.959901056898998E-8	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999981941645	WITHOUT_CLASSIFICATION	1.805835571835811E-9	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075264275	WITHOUT_CLASSIFICATION	5.924735725666123E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075264275	WITHOUT_CLASSIFICATION	5.924735725666123E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999975009177	WITHOUT_CLASSIFICATION	2.499082348049054E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999975009177	WITHOUT_CLASSIFICATION	2.499082348049054E-9	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999975009177	WITHOUT_CLASSIFICATION	2.499082348049054E-9	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999934395957	WITHOUT_CLASSIFICATION	6.560404295639864E-8	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264362	WITHOUT_CLASSIFICATION	4.773563762470405E-9	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264362	WITHOUT_CLASSIFICATION	4.773563762470405E-9	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264362	WITHOUT_CLASSIFICATION	4.773563762470405E-9	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832405644	WITHOUT_CLASSIFICATION	3.1675943559545294E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832405644	WITHOUT_CLASSIFICATION	3.1675943559545294E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832405644	WITHOUT_CLASSIFICATION	3.1675943559545294E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999104009893	WITHOUT_CLASSIFICATION	8.959901056898998E-8	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999999104009893	WITHOUT_CLASSIFICATION	8.959901056898998E-8	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999995831205171	WITHOUT_CLASSIFICATION	4.1687948303514524E-7	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.999999919527372	WITHOUT_CLASSIFICATION	8.047262804930189E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999480466989	WITHOUT_CLASSIFICATION	5.195330104667688E-8	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9997570138873914	WITHOUT_CLASSIFICATION	2.4298611260877102E-4	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999628807776441	WITHOUT_CLASSIFICATION	3.7119222355890206E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999987351543047	WITHOUT_CLASSIFICATION	1.2648456952572992E-6	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999987351543047	WITHOUT_CLASSIFICATION	1.2648456952572992E-6	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999901144627	WITHOUT_CLASSIFICATION	9.88553730213404E-9	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999929803002	WITHOUT_CLASSIFICATION	7.0196997384863295E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999929803002	WITHOUT_CLASSIFICATION	7.0196997384863295E-9	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999929803002	WITHOUT_CLASSIFICATION	7.0196997384863295E-9	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999994545367	WITHOUT_CLASSIFICATION	5.454633598771061E-10	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999997782940255	WITHOUT_CLASSIFICATION	2.217059744332599E-7	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.999999934395957	WITHOUT_CLASSIFICATION	6.560404295639864E-8	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832405644	WITHOUT_CLASSIFICATION	3.1675943559545294E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999996832405644	WITHOUT_CLASSIFICATION	3.1675943559545294E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999999929803002	WITHOUT_CLASSIFICATION	7.0196997384863295E-9	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999901144627	WITHOUT_CLASSIFICATION	9.88553730213404E-9	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999757481703	WITHOUT_CLASSIFICATION	2.425182971321637E-8	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999999328438686	WITHOUT_CLASSIFICATION	6.715613142282422E-8	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999673268697	WITHOUT_CLASSIFICATION	3.267313028549034E-8	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999998748394698	WITHOUT_CLASSIFICATION	1.25160530097348E-7	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999999009091772	WITHOUT_CLASSIFICATION	9.90908226888792E-8	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999999763671659	WITHOUT_CLASSIFICATION	2.3632834159660328E-8	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999846802214482	WITHOUT_CLASSIFICATION	1.5319778551907436E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999995173614067	WITHOUT_CLASSIFICATION	4.826385933524574E-7	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999978373876883	WITHOUT_CLASSIFICATION	2.1626123117757E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999999925400379	WITHOUT_CLASSIFICATION	7.459961990809669E-9	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999622380381188	WITHOUT_CLASSIFICATION	3.776196188118583E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999999907787033	WITHOUT_CLASSIFICATION	9.221296685469291E-9	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.999998390820396	WITHOUT_CLASSIFICATION	1.6091796039931571E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9972615748063672	WITHOUT_CLASSIFICATION	0.0027384251936327054	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999999288679721	WITHOUT_CLASSIFICATION	7.113202789593585E-8	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.9999299777054885	WITHOUT_CLASSIFICATION	7.00222945115246E-5	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999957422086959	WITHOUT_CLASSIFICATION	4.2577913041012915E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999699531132	WITHOUT_CLASSIFICATION	3.004688674316561E-8	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9999626141282539	WITHOUT_CLASSIFICATION	3.738587174611825E-5	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999912659765	WITHOUT_CLASSIFICATION	8.734023484459333E-9	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999972560650188	WITHOUT_CLASSIFICATION	2.7439349811967063E-6	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999997453936	WITHOUT_CLASSIFICATION	2.546064640179307E-10	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999999342645	WITHOUT_CLASSIFICATION	6.573550591367965E-11	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999999353427441	WITHOUT_CLASSIFICATION	6.465725590343309E-8	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998123993542	WITHOUT_CLASSIFICATION	1.8760064576628913E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999998446364379	WITHOUT_CLASSIFICATION	1.553635620498613E-7	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999995877588079	WITHOUT_CLASSIFICATION	4.122411921510755E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999958899448	WITHOUT_CLASSIFICATION	4.110055158473539E-9	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999996960770611	WITHOUT_CLASSIFICATION	3.039229389093052E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9999990819056749	WITHOUT_CLASSIFICATION	9.180943251603419E-7	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999998317348	WITHOUT_CLASSIFICATION	1.6826513038358347E-10	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999999768076808	WITHOUT_CLASSIFICATION	2.319231917666824E-8	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999997999359	WITHOUT_CLASSIFICATION	2.0006399980067526E-10	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.99999999512697	WITHOUT_CLASSIFICATION	4.873030008344559E-9	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999757481703	WITHOUT_CLASSIFICATION	2.425182971321637E-8	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999997694968625	WITHOUT_CLASSIFICATION	2.305031375275689E-7	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999835849128	WITHOUT_CLASSIFICATION	1.641508722203601E-8	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.999999911630316	WITHOUT_CLASSIFICATION	8.836968399117895E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999999149663823	WITHOUT_CLASSIFICATION	8.503361770008846E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999999149663823	WITHOUT_CLASSIFICATION	8.503361770008846E-8	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999964297378293	WITHOUT_CLASSIFICATION	3.5702621707091155E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.999964297378293	WITHOUT_CLASSIFICATION	3.5702621707091155E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999999300967	WITHOUT_CLASSIFICATION	6.990329295474652E-11	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999902725306	WITHOUT_CLASSIFICATION	9.727469413344772E-9	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999999385362351	WITHOUT_CLASSIFICATION	6.146376482037799E-8	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999993648023626	WITHOUT_CLASSIFICATION	6.35197637437196E-7	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999999046440383	WITHOUT_CLASSIFICATION	9.535596163579918E-8	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999973932691713	WITHOUT_CLASSIFICATION	2.606730828787088E-6	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999948519296	WITHOUT_CLASSIFICATION	5.148070332840743E-9	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999994593718098	WITHOUT_CLASSIFICATION	5.406281901737939E-7	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999659153515712	WITHOUT_CLASSIFICATION	3.40846484288084E-5	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.99999999961892	WITHOUT_CLASSIFICATION	3.8107992387207173E-10	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999999718246	WITHOUT_CLASSIFICATION	2.8175360836240434E-11	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999997927540901	WITHOUT_CLASSIFICATION	2.0724591002818856E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999997927540901	WITHOUT_CLASSIFICATION	2.0724591002818856E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999999871134	WITHOUT_CLASSIFICATION	1.2886653142802124E-11	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999969937446	WITHOUT_CLASSIFICATION	3.006255276906899E-9	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999990228759581	WITHOUT_CLASSIFICATION	9.771240419423184E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999990228759581	WITHOUT_CLASSIFICATION	9.771240419423184E-7	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999996756347	WITHOUT_CLASSIFICATION	3.243653252816719E-10	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.999999998787856	WITHOUT_CLASSIFICATION	1.2121441141315986E-9	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999976803957374	WITHOUT_CLASSIFICATION	2.3196042626930807E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999999387510303	WITHOUT_CLASSIFICATION	6.124896968956821E-8	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999933271744	WITHOUT_CLASSIFICATION	6.6728255666605295E-9	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999993790096493	WITHOUT_CLASSIFICATION	6.209903506646394E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999784194730836	WITHOUT_CLASSIFICATION	2.1580526916398053E-5	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999935890270406	WITHOUT_CLASSIFICATION	6.410972959446551E-6	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9999974694671266	WITHOUT_CLASSIFICATION	2.530532873335287E-6	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999999571528854	WITHOUT_CLASSIFICATION	4.284711461243627E-8	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999958890146774	WITHOUT_CLASSIFICATION	4.110985322562287E-6	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999986146687547	WITHOUT_CLASSIFICATION	1.3853312452408653E-6	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.999997514463574	WITHOUT_CLASSIFICATION	2.4855364259423564E-6	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999994398689114	WITHOUT_CLASSIFICATION	5.601310885845966E-7	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999999969496416	WITHOUT_CLASSIFICATION	3.0503584677314706E-9	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999996175920302	WITHOUT_CLASSIFICATION	3.8240796989890883E-7	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999992710253276	WITHOUT_CLASSIFICATION	7.289746724149622E-7	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999992901572369	WITHOUT_CLASSIFICATION	7.098427631226642E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999999929734	WITHOUT_CLASSIFICATION	7.026648080807559E-12	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999999916816549	WITHOUT_CLASSIFICATION	8.318345095589114E-8	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.674570379755139	IMPLEMENTATION	0.32542962024486094	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999998415232247	WITHOUT_CLASSIFICATION	1.5847677534114583E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.999999793567439	WITHOUT_CLASSIFICATION	2.0643256117302737E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999967269151385	WITHOUT_CLASSIFICATION	3.2730848613796813E-6	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999998274265003	WITHOUT_CLASSIFICATION	1.725734997288536E-7	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999940727662037	WITHOUT_CLASSIFICATION	5.92723379639454E-6	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999999457434119	WITHOUT_CLASSIFICATION	5.425658807031658E-8	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999981864742666	WITHOUT_CLASSIFICATION	1.8135257333435008E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999999987991852	WITHOUT_CLASSIFICATION	1.2008148532062104E-9	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999992594361	WITHOUT_CLASSIFICATION	7.405638516926216E-10	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999944565405	WITHOUT_CLASSIFICATION	5.543459504507764E-9	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999999988428938	WITHOUT_CLASSIFICATION	1.1571061970252216E-8	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999991065437	WITHOUT_CLASSIFICATION	8.934563486167208E-10	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999948018967	WITHOUT_CLASSIFICATION	5.1981032260699174E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999948018967	WITHOUT_CLASSIFICATION	5.1981032260699174E-9	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999999963790795	WITHOUT_CLASSIFICATION	3.620920492022939E-8	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999968755114856	WITHOUT_CLASSIFICATION	3.124488514403163E-6	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999997715002	WITHOUT_CLASSIFICATION	2.2849977239508383E-10	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999993289605721	WITHOUT_CLASSIFICATION	6.710394278695711E-7	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999994726730295	WITHOUT_CLASSIFICATION	5.273269705365625E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999998433892253	WITHOUT_CLASSIFICATION	1.5661077467919819E-7	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999966798177885	WITHOUT_CLASSIFICATION	3.320182211590173E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999984563641778	WITHOUT_CLASSIFICATION	1.5436358221764366E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999999835536231	WITHOUT_CLASSIFICATION	1.6446376844607748E-8	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999994748730102	WITHOUT_CLASSIFICATION	5.251269898854378E-7	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999957068044	WITHOUT_CLASSIFICATION	4.293195527162682E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9999870952358525	WITHOUT_CLASSIFICATION	1.2904764147474117E-5	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999824487413326	WITHOUT_CLASSIFICATION	1.7551258667344077E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999998138322905	WITHOUT_CLASSIFICATION	1.861677094568928E-7	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999993973911248	WITHOUT_CLASSIFICATION	6.026088751813378E-7	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999999899928167	WITHOUT_CLASSIFICATION	1.0007183257528476E-8	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999995594667372	WITHOUT_CLASSIFICATION	4.405332627394442E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.999999805896411	WITHOUT_CLASSIFICATION	1.9410358899845813E-7	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.995178086970632	WITHOUT_CLASSIFICATION	0.004821913029367957	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.999996182792912	WITHOUT_CLASSIFICATION	3.8172070879592416E-6	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.999999995525627	WITHOUT_CLASSIFICATION	4.474372898131375E-9	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999631472083	WITHOUT_CLASSIFICATION	3.6852791726714745E-8	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999876356776365	WITHOUT_CLASSIFICATION	1.236432236358013E-5	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999983132571028	WITHOUT_CLASSIFICATION	1.686742897311231E-6	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999909290881913	WITHOUT_CLASSIFICATION	9.070911808716561E-6	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999548753380986	WITHOUT_CLASSIFICATION	4.512466190133634E-5	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999998417646	WITHOUT_CLASSIFICATION	1.5823540350890269E-10	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999990592494	WITHOUT_CLASSIFICATION	9.407506406856428E-10	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999994049373736	WITHOUT_CLASSIFICATION	5.950626264013274E-7	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999982829690939	WITHOUT_CLASSIFICATION	1.7170309061430365E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999418195399	WITHOUT_CLASSIFICATION	5.818046009541874E-8	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999800994669067	WITHOUT_CLASSIFICATION	1.9900533093330187E-5	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999999766203641	WITHOUT_CLASSIFICATION	2.3379635859798463E-8	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999686955897	WITHOUT_CLASSIFICATION	3.130441041164548E-8	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999998101085433	WITHOUT_CLASSIFICATION	1.8989145666013794E-7	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999931146331	WITHOUT_CLASSIFICATION	6.8853669920334596E-9	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999998809529428	WITHOUT_CLASSIFICATION	1.190470573336277E-7	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999999632306753	WITHOUT_CLASSIFICATION	3.676932466868298E-8	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999914169720454	WITHOUT_CLASSIFICATION	8.583027954658271E-6	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.9999999613768294	WITHOUT_CLASSIFICATION	3.8623170505232464E-8	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999981561390484	WITHOUT_CLASSIFICATION	1.8438609516545868E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998791645869	WITHOUT_CLASSIFICATION	1.2083541307699884E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.9999998791645869	WITHOUT_CLASSIFICATION	1.2083541307699884E-7	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999996541200785	WITHOUT_CLASSIFICATION	3.458799214843379E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999901977686	WITHOUT_CLASSIFICATION	9.80223133438487E-9	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999996499927061	WITHOUT_CLASSIFICATION	3.5000729392348023E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999859328374342	WITHOUT_CLASSIFICATION	1.4067162565900644E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.999999871146134	WITHOUT_CLASSIFICATION	1.2885386606318422E-7	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999999899567	WITHOUT_CLASSIFICATION	1.0043388165576363E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706151204514456E-11	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999998661026844	WITHOUT_CLASSIFICATION	1.3389731565583162E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999999944213447	WITHOUT_CLASSIFICATION	5.578655308112625E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999994680241359	WITHOUT_CLASSIFICATION	5.319758640950176E-7	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999981266184	WITHOUT_CLASSIFICATION	1.8733816264741927E-9	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.999999391263746	WITHOUT_CLASSIFICATION	6.08736254053655E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999977268870066	WITHOUT_CLASSIFICATION	2.2731129933630577E-6	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999759177474271	WITHOUT_CLASSIFICATION	2.4082252572854474E-5	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999999839065757	WITHOUT_CLASSIFICATION	1.6093424331694023E-8	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9929431708412697	WITHOUT_CLASSIFICATION	0.007056829158730222	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999993047809784	WITHOUT_CLASSIFICATION	6.952190214597214E-7	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999999957089606	WITHOUT_CLASSIFICATION	4.291039386537378E-9	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999999964186567	WITHOUT_CLASSIFICATION	3.581343296003129E-8	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9949728988961931	WITHOUT_CLASSIFICATION	0.005027101103806802	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.999999843264493	WITHOUT_CLASSIFICATION	1.5673550689588082E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999985275237817	WITHOUT_CLASSIFICATION	1.472476218293749E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999972793557	WITHOUT_CLASSIFICATION	2.720644257714554E-9	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999985055036931	WITHOUT_CLASSIFICATION	1.4944963069491847E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999999368828868	WITHOUT_CLASSIFICATION	6.311711325062966E-8	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999854354463545	WITHOUT_CLASSIFICATION	1.4564553645393458E-5	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.999999999998874	WITHOUT_CLASSIFICATION	1.1260837185467625E-12	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999947235262469	WITHOUT_CLASSIFICATION	5.276473753227911E-6	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999948970498	WITHOUT_CLASSIFICATION	5.102950172668268E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998955501661	WITHOUT_CLASSIFICATION	1.0444983389983791E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999947617657	WITHOUT_CLASSIFICATION	5.238234242723762E-9	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999929166524	WITHOUT_CLASSIFICATION	7.083347576507214E-9	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999998955501661	WITHOUT_CLASSIFICATION	1.0444983389983791E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999689651875	WITHOUT_CLASSIFICATION	3.1034812426265796E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.999999973874268	WITHOUT_CLASSIFICATION	2.612573201944015E-8	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9509785111498689	WITHOUT_CLASSIFICATION	0.04902148885013118	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8588531130495409	IMPLEMENTATION	0.14114688695045904	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999998814441109	WITHOUT_CLASSIFICATION	1.185558891018435E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999997950171	WITHOUT_CLASSIFICATION	2.0498304332608355E-10	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.999999999597066	WITHOUT_CLASSIFICATION	4.0293396891920036E-10	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999999279568366	WITHOUT_CLASSIFICATION	7.20431633767981E-8	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999996576828	WITHOUT_CLASSIFICATION	3.423171963675442E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.999999916816549	WITHOUT_CLASSIFICATION	8.318345095589114E-8	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999999480466989	WITHOUT_CLASSIFICATION	5.195330104667688E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028536	WITHOUT_CLASSIFICATION	4.971463793482054E-10	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999942644260013	WITHOUT_CLASSIFICATION	5.73557399876658E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999998523477558	WITHOUT_CLASSIFICATION	1.476522442631742E-7	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.999998010296613	WITHOUT_CLASSIFICATION	1.9897033869425804E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.99999997345922	WITHOUT_CLASSIFICATION	2.6540779979040668E-8	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9998289624453468	WITHOUT_CLASSIFICATION	1.7103755465318294E-4	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999974101978877	WITHOUT_CLASSIFICATION	2.589802112272905E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999986945523	WITHOUT_CLASSIFICATION	1.3054476990409742E-9	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999998332578615	WITHOUT_CLASSIFICATION	1.6674213853836895E-7	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999985315213619	WITHOUT_CLASSIFICATION	1.4684786382214718E-6	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.999997025971133	WITHOUT_CLASSIFICATION	2.9740288669865335E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999955793087197	WITHOUT_CLASSIFICATION	4.420691280198727E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999989101634206	WITHOUT_CLASSIFICATION	1.0898365794129143E-6	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9998495375389569	WITHOUT_CLASSIFICATION	1.5046246104320516E-4	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999996761532912	WITHOUT_CLASSIFICATION	3.2384670878223837E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999991860847259	WITHOUT_CLASSIFICATION	8.13915274091066E-7	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999988467007	WITHOUT_CLASSIFICATION	1.1532993396584376E-9	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998866573	WITHOUT_CLASSIFICATION	1.1334261799161463E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999990653722	WITHOUT_CLASSIFICATION	9.346278049571512E-9	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999990653722	WITHOUT_CLASSIFICATION	9.346278049571512E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999976327535	WITHOUT_CLASSIFICATION	2.367246476260056E-9	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999992220892	WITHOUT_CLASSIFICATION	7.779109130198643E-10	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999567589578313	WITHOUT_CLASSIFICATION	4.32410421687147E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6160863360744732	WITHOUT_CLASSIFICATION	0.3839136639255269	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6160863360744732	WITHOUT_CLASSIFICATION	0.3839136639255269	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6160863360744732	WITHOUT_CLASSIFICATION	0.3839136639255269	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6160863360744732	WITHOUT_CLASSIFICATION	0.3839136639255269	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999423121589	WITHOUT_CLASSIFICATION	5.7687841081511396E-8	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999878721421083	WITHOUT_CLASSIFICATION	1.2127857891689026E-5	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999999665989721	WITHOUT_CLASSIFICATION	3.340102795805538E-8	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.980247898926239	WITHOUT_CLASSIFICATION	0.019752101073760988	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999802243687835	WITHOUT_CLASSIFICATION	1.9775631216487095E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999997341289157	WITHOUT_CLASSIFICATION	2.65871084215325E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999971362380985	WITHOUT_CLASSIFICATION	2.8637619015404974E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999971362380985	WITHOUT_CLASSIFICATION	2.8637619015404974E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999928478567	WITHOUT_CLASSIFICATION	7.152143252036538E-9	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999998130000436	WITHOUT_CLASSIFICATION	1.8699995644150133E-7	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999995595631223	WITHOUT_CLASSIFICATION	4.404368778405622E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999115191647325	WITHOUT_CLASSIFICATION	8.848083526754822E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999979508493755	WITHOUT_CLASSIFICATION	2.049150624560759E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999998235906273	WITHOUT_CLASSIFICATION	1.7640937270830322E-7	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999994032133	WITHOUT_CLASSIFICATION	5.967867993556979E-10	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999995989171325	WITHOUT_CLASSIFICATION	4.0108286750375936E-7	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999978501996962	WITHOUT_CLASSIFICATION	2.1498003037393197E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999978501996962	WITHOUT_CLASSIFICATION	2.1498003037393197E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999999929166524	WITHOUT_CLASSIFICATION	7.083347576507214E-9	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999993638120912	WITHOUT_CLASSIFICATION	6.361879087548602E-7	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999994624918681	WITHOUT_CLASSIFICATION	5.375081318411927E-7	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999992774432827	WITHOUT_CLASSIFICATION	7.225567173648604E-7	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999885559	WITHOUT_CLASSIFICATION	1.1443929025661015E-11	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.9999995260990558	WITHOUT_CLASSIFICATION	4.7390094417258006E-7	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999986774523161	WITHOUT_CLASSIFICATION	1.3225476838829462E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999979476382787	WITHOUT_CLASSIFICATION	2.052361721301517E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999213129025	WITHOUT_CLASSIFICATION	7.868709746725039E-8	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999999213129025	WITHOUT_CLASSIFICATION	7.868709746725039E-8	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999971720081876	WITHOUT_CLASSIFICATION	2.827991812519809E-6	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.999999930818969	WITHOUT_CLASSIFICATION	6.918103098522554E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999997922603925	WITHOUT_CLASSIFICATION	2.0773960754502757E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999985591629901	WITHOUT_CLASSIFICATION	1.4408370099218322E-6	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999932594894971	WITHOUT_CLASSIFICATION	6.740510502878122E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.999999127043877	WITHOUT_CLASSIFICATION	8.729561230466158E-7	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9997837866770913	WITHOUT_CLASSIFICATION	2.1621332290868326E-4	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622236612	WITHOUT_CLASSIFICATION	1.3777633882677977E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622236612	WITHOUT_CLASSIFICATION	1.3777633882677977E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622236612	WITHOUT_CLASSIFICATION	1.3777633882677977E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999998622236612	WITHOUT_CLASSIFICATION	1.3777633882677977E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999463515963	WITHOUT_CLASSIFICATION	5.364840375197473E-8	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999999749304	WITHOUT_CLASSIFICATION	2.5069606286679933E-11	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.999998781103308	WITHOUT_CLASSIFICATION	1.2188966919447846E-6	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999998539124068	WITHOUT_CLASSIFICATION	1.4608759324836132E-7	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999999626171081	WITHOUT_CLASSIFICATION	3.738289193754995E-8	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999997791656793	WITHOUT_CLASSIFICATION	2.2083432075563102E-7	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999999764994423	WITHOUT_CLASSIFICATION	2.3500557614559574E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109169	WITHOUT_CLASSIFICATION	1.689083105006195E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109169	WITHOUT_CLASSIFICATION	1.689083105006195E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999983109169	WITHOUT_CLASSIFICATION	1.689083105006195E-9	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999999697904881	WITHOUT_CLASSIFICATION	3.020951182339157E-8	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999998997952974	WITHOUT_CLASSIFICATION	1.00204702703529E-7	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999195277097	WITHOUT_CLASSIFICATION	8.047229032681386E-8	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999195277097	WITHOUT_CLASSIFICATION	8.047229032681386E-8	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.999998839507271	WITHOUT_CLASSIFICATION	1.160492728978322E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.999876134479504	WITHOUT_CLASSIFICATION	1.2386552049607416E-4	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999951672932276	WITHOUT_CLASSIFICATION	4.832706772508087E-6	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999997682877059	WITHOUT_CLASSIFICATION	2.3171229405193367E-7	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999999339013	WITHOUT_CLASSIFICATION	6.609860145514439E-11	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999997344999028	WITHOUT_CLASSIFICATION	2.655000972845902E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999975131147	WITHOUT_CLASSIFICATION	2.4868852981344273E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999975131147	WITHOUT_CLASSIFICATION	2.4868852981344273E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999972635898	WITHOUT_CLASSIFICATION	2.736410179683355E-9	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999968178065	WITHOUT_CLASSIFICATION	3.1821934875051536E-9	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999996836702348	WITHOUT_CLASSIFICATION	3.1632976512561977E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999990334192214	WITHOUT_CLASSIFICATION	9.665807786477032E-7	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9895797850430668	WITHOUT_CLASSIFICATION	0.010420214956933252	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999999536951382	WITHOUT_CLASSIFICATION	4.630486184805487E-8	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999997350991604	WITHOUT_CLASSIFICATION	2.649008395762657E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9999035667472532	WITHOUT_CLASSIFICATION	9.64332527466822E-5	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999703856337	WITHOUT_CLASSIFICATION	2.961436619115204E-8	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999998660964404	WITHOUT_CLASSIFICATION	1.339035595772916E-7	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.999999968071167	WITHOUT_CLASSIFICATION	3.192883298975028E-8	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999878560035	WITHOUT_CLASSIFICATION	1.2143996379312949E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9999502386332598	WITHOUT_CLASSIFICATION	4.9761366740271866E-5	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999917577783869	WITHOUT_CLASSIFICATION	8.242221613165136E-6	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999997825050562	WITHOUT_CLASSIFICATION	2.174949438924718E-7	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999823472793967	WITHOUT_CLASSIFICATION	1.7652720603308405E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999681823153853	WITHOUT_CLASSIFICATION	3.181768461470664E-5	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999999878466065	WITHOUT_CLASSIFICATION	1.215339347112832E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999872736907788	WITHOUT_CLASSIFICATION	1.2726309221270417E-5	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.999999946223993	WITHOUT_CLASSIFICATION	5.377600688458204E-8	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999952642218	WITHOUT_CLASSIFICATION	4.735778169435484E-9	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9955372835646462	WITHOUT_CLASSIFICATION	0.004462716435353743	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.999960505048803	WITHOUT_CLASSIFICATION	3.9494951197008296E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999998574018107	WITHOUT_CLASSIFICATION	1.4259818920149494E-7	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999996602446792	WITHOUT_CLASSIFICATION	3.3975532083931514E-7	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999998608501267	WITHOUT_CLASSIFICATION	1.3914987326255516E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999998127189175	WITHOUT_CLASSIFICATION	1.8728108247547075E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706151204514456E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999999422939	WITHOUT_CLASSIFICATION	5.7706151204514456E-11	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999349500561	WITHOUT_CLASSIFICATION	6.504994385375333E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999366301305	WITHOUT_CLASSIFICATION	6.336986941777413E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999981690192	WITHOUT_CLASSIFICATION	1.8309808347165437E-9	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999999947307402	WITHOUT_CLASSIFICATION	5.269259829131235E-9	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999980480279606	WITHOUT_CLASSIFICATION	1.9519720394647623E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.999999555957892	WITHOUT_CLASSIFICATION	4.4404210793121904E-7	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999996543601248	WITHOUT_CLASSIFICATION	3.456398751482685E-7	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9998298200936792	WITHOUT_CLASSIFICATION	1.701799063208005E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999887752401978	WITHOUT_CLASSIFICATION	1.122475980220056E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937123395	WITHOUT_CLASSIFICATION	2.0628766049246743E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937123395	WITHOUT_CLASSIFICATION	2.0628766049246743E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999997937123395	WITHOUT_CLASSIFICATION	2.0628766049246743E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999931455713	WITHOUT_CLASSIFICATION	6.854428615729604E-9	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.999966888616216	WITHOUT_CLASSIFICATION	3.311138378398509E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999999186298699	WITHOUT_CLASSIFICATION	8.137013005044285E-8	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999995389291978	WITHOUT_CLASSIFICATION	4.6107080224877065E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9998891489306624	WITHOUT_CLASSIFICATION	1.1085106933751708E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999197196926	WITHOUT_CLASSIFICATION	8.028030731299803E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999495808407	WITHOUT_CLASSIFICATION	5.041915930362294E-8	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999940951316275	WITHOUT_CLASSIFICATION	5.9048683724670015E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996790647728517	WITHOUT_CLASSIFICATION	3.2093522714830776E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9996790647728517	WITHOUT_CLASSIFICATION	3.2093522714830776E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.999999664429151	WITHOUT_CLASSIFICATION	3.355708489540743E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.999928085409141	WITHOUT_CLASSIFICATION	7.191459085904187E-5	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999890450364	WITHOUT_CLASSIFICATION	1.095496354150472E-8	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999999931377608	WITHOUT_CLASSIFICATION	6.862239225783407E-9	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999595598649453	WITHOUT_CLASSIFICATION	4.0440135054584214E-5	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999595598649453	WITHOUT_CLASSIFICATION	4.0440135054584214E-5	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999940450057545	WITHOUT_CLASSIFICATION	5.95499424545675E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999999971995766	WITHOUT_CLASSIFICATION	2.8004235073880666E-9	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999973707688542	WITHOUT_CLASSIFICATION	2.6292311456934595E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999954470156988	WITHOUT_CLASSIFICATION	4.552984301155746E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999993543877159	WITHOUT_CLASSIFICATION	6.456122840733095E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999886294911	WITHOUT_CLASSIFICATION	1.1370508901763247E-8	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999999886294911	WITHOUT_CLASSIFICATION	1.1370508901763247E-8	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996093726383	WITHOUT_CLASSIFICATION	3.9062736173166664E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999996093726383	WITHOUT_CLASSIFICATION	3.9062736173166664E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999998728068088	WITHOUT_CLASSIFICATION	1.271931912085377E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999968390818004	WITHOUT_CLASSIFICATION	3.160918199560438E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999998264281161	WITHOUT_CLASSIFICATION	1.7357188387960757E-7	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999996108417448	WITHOUT_CLASSIFICATION	3.891582551629089E-7	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999996865378433	WITHOUT_CLASSIFICATION	3.1346215669479973E-7	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999396590338	WITHOUT_CLASSIFICATION	6.034096627103323E-8	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999957003302613	WITHOUT_CLASSIFICATION	4.2996697386357285E-6	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999994075264275	WITHOUT_CLASSIFICATION	5.924735725666123E-7	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.99999998866206	WITHOUT_CLASSIFICATION	1.1337939970646614E-8	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999999923503	WITHOUT_CLASSIFICATION	7.64964013904145E-12	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9345178242249984	WITHOUT_CLASSIFICATION	0.0654821757750016	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999977666253205	WITHOUT_CLASSIFICATION	2.2333746796006186E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999996507844111	WITHOUT_CLASSIFICATION	3.492155888866161E-7	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999997305734897	WITHOUT_CLASSIFICATION	2.694265103955807E-7	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999940219357716	WITHOUT_CLASSIFICATION	5.9780642284112775E-6	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.999999999473932	WITHOUT_CLASSIFICATION	5.260680110896945E-10	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999991511545713	WITHOUT_CLASSIFICATION	8.488454287230908E-7	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999999622686415	WITHOUT_CLASSIFICATION	3.773135853545109E-8	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999999988784113	WITHOUT_CLASSIFICATION	1.1215886585037007E-9	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999995122185337	WITHOUT_CLASSIFICATION	4.877814662900236E-7	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999995028536	WITHOUT_CLASSIFICATION	4.971463793482054E-10	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999927765023799	WITHOUT_CLASSIFICATION	7.223497620092483E-6	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.999999981093852	WITHOUT_CLASSIFICATION	1.8906148039832765E-8	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999973278893579	WITHOUT_CLASSIFICATION	2.672110642068084E-6	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999995519596594	WITHOUT_CLASSIFICATION	4.4804034063601745E-7	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999998705215006	WITHOUT_CLASSIFICATION	1.2947849944390757E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999997409406222	WITHOUT_CLASSIFICATION	2.5905937784952355E-7	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999993420936	WITHOUT_CLASSIFICATION	6.579062803617077E-10	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999343371259	WITHOUT_CLASSIFICATION	6.566287424073447E-8	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999989187568431	WITHOUT_CLASSIFICATION	1.0812431568798914E-6	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999992126287279	WITHOUT_CLASSIFICATION	7.873712721289188E-7	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999827959444	WITHOUT_CLASSIFICATION	1.7204055646074087E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999997666222159	WITHOUT_CLASSIFICATION	2.3337778418705703E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999999973712781	WITHOUT_CLASSIFICATION	2.628721885541182E-9	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999980656448738	WITHOUT_CLASSIFICATION	1.9343551261560935E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999999999579022	WITHOUT_CLASSIFICATION	4.2097803930882027E-10	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999833333666	WITHOUT_CLASSIFICATION	1.6666633386683473E-8	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999671158358	WITHOUT_CLASSIFICATION	3.288416413137599E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999903762294	WITHOUT_CLASSIFICATION	9.623770499042853E-9	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999976244643	WITHOUT_CLASSIFICATION	2.3755356862199586E-9	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999773242507	WITHOUT_CLASSIFICATION	2.2675749370681976E-8	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999999950948684	WITHOUT_CLASSIFICATION	4.905131607861987E-9	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999999954845367	WITHOUT_CLASSIFICATION	4.515463351771317E-9	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999983174638	WITHOUT_CLASSIFICATION	1.6825362435915664E-9	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999999317754058	WITHOUT_CLASSIFICATION	6.822459417145078E-8	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999957057446142	WITHOUT_CLASSIFICATION	4.2942553857527725E-6	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999999603105449	WITHOUT_CLASSIFICATION	3.968945502644449E-8	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999994819732	WITHOUT_CLASSIFICATION	5.180268744192323E-10	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999926979027	WITHOUT_CLASSIFICATION	7.302097311228839E-9	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999997409365066	WITHOUT_CLASSIFICATION	2.590634933991478E-7	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999998311325767	WITHOUT_CLASSIFICATION	1.68867423234864E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999922133654826	WITHOUT_CLASSIFICATION	7.786634517402331E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999922133654826	WITHOUT_CLASSIFICATION	7.786634517402331E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996981896	WITHOUT_CLASSIFICATION	3.01810321704573E-10	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999996981896	WITHOUT_CLASSIFICATION	3.01810321704573E-10	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996604763149648	WITHOUT_CLASSIFICATION	3.395236850352245E-4	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9996604763149648	WITHOUT_CLASSIFICATION	3.395236850352245E-4	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995677200396	WITHOUT_CLASSIFICATION	4.322799603928613E-7	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999995677200396	WITHOUT_CLASSIFICATION	4.322799603928613E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999999299205056	WITHOUT_CLASSIFICATION	7.007949440414836E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999467259026	WITHOUT_CLASSIFICATION	5.327409733404805E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999467259026	WITHOUT_CLASSIFICATION	5.327409733404805E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999467259026	WITHOUT_CLASSIFICATION	5.327409733404805E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999976170823862	WITHOUT_CLASSIFICATION	2.3829176138483386E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881584203	WITHOUT_CLASSIFICATION	7.118415796091065E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881584203	WITHOUT_CLASSIFICATION	7.118415796091065E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999992881584203	WITHOUT_CLASSIFICATION	7.118415796091065E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999451567853	WITHOUT_CLASSIFICATION	5.484321483108377E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999451567853	WITHOUT_CLASSIFICATION	5.484321483108377E-8	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.9999999451567853	WITHOUT_CLASSIFICATION	5.484321483108377E-8	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999994652347848	WITHOUT_CLASSIFICATION	5.347652152892287E-7	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999986842802646	WITHOUT_CLASSIFICATION	1.3157197354567315E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9999687027112422	WITHOUT_CLASSIFICATION	3.129728875781885E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231108166	WITHOUT_CLASSIFICATION	8.417688918332452E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231108166	WITHOUT_CLASSIFICATION	8.417688918332452E-5	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9999158231108166	WITHOUT_CLASSIFICATION	8.417688918332452E-5	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999865478969	WITHOUT_CLASSIFICATION	1.3452103077202026E-8	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999997698312454	WITHOUT_CLASSIFICATION	2.3016875466289697E-7	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999997698312454	WITHOUT_CLASSIFICATION	2.3016875466289697E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999987099353786	WITHOUT_CLASSIFICATION	1.2900646213017464E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999996548418938	WITHOUT_CLASSIFICATION	3.451581062101966E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999996548418938	WITHOUT_CLASSIFICATION	3.451581062101966E-7	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9833445494520864	IMPLEMENTATION	0.016655450547913685	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.8385088165259421	WITHOUT_CLASSIFICATION	0.16149118347405794	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999992937516103	WITHOUT_CLASSIFICATION	7.062483896682575E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9999994543129193	WITHOUT_CLASSIFICATION	5.456870806238269E-7	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.999999999948116	WITHOUT_CLASSIFICATION	5.188409860737298E-11	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999994788965683	WITHOUT_CLASSIFICATION	5.211034317091872E-7	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999974519268201	WITHOUT_CLASSIFICATION	2.548073179988492E-6	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999980847738519	WITHOUT_CLASSIFICATION	1.9152261480592176E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999999917457411	WITHOUT_CLASSIFICATION	8.254258826572304E-9	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999988384164193	WITHOUT_CLASSIFICATION	1.161583580712461E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999961919354836	WITHOUT_CLASSIFICATION	3.808064516419004E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999981331776	WITHOUT_CLASSIFICATION	1.8668222910696116E-9	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999998846747726	WITHOUT_CLASSIFICATION	1.1532522743384269E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999999998421947	WITHOUT_CLASSIFICATION	1.5780525477976927E-10	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9980297355283491	WITHOUT_CLASSIFICATION	0.0019702644716509156	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999999997398147	WITHOUT_CLASSIFICATION	2.601852808603009E-10	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999997687545062	WITHOUT_CLASSIFICATION	2.3124549379920546E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999999922563478	WITHOUT_CLASSIFICATION	7.743652100687374E-9	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.999999937227009	WITHOUT_CLASSIFICATION	6.277299103100003E-8	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999999921954927	WITHOUT_CLASSIFICATION	7.804507240486669E-9	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999985275237817	WITHOUT_CLASSIFICATION	1.472476218293749E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999999843582233	WITHOUT_CLASSIFICATION	1.5641776599891828E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999986956160489	WITHOUT_CLASSIFICATION	1.3043839510943576E-6	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999998077723622	WITHOUT_CLASSIFICATION	1.9222763788770003E-7	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9930331616361656	WITHOUT_CLASSIFICATION	0.0069668383638343935	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.99999836602876	WITHOUT_CLASSIFICATION	1.6339712400249816E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999921434142246	WITHOUT_CLASSIFICATION	7.856585775337554E-6	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999262308359	WITHOUT_CLASSIFICATION	7.376916412143204E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.999999994499433	WITHOUT_CLASSIFICATION	5.500566890410931E-9	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999999921110503	WITHOUT_CLASSIFICATION	7.888949700379025E-9	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999927484508	WITHOUT_CLASSIFICATION	7.251549153948777E-9	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999994680241359	WITHOUT_CLASSIFICATION	5.319758640950176E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356164153	WITHOUT_CLASSIFICATION	1.6438358466003647E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356164153	WITHOUT_CLASSIFICATION	1.6438358466003647E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356164153	WITHOUT_CLASSIFICATION	1.6438358466003647E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999998356164153	WITHOUT_CLASSIFICATION	1.6438358466003647E-7	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998937635951	WITHOUT_CLASSIFICATION	1.0623640489779903E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999939088767276	WITHOUT_CLASSIFICATION	6.091123272486586E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999884325204	WITHOUT_CLASSIFICATION	1.15674795393006E-8	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999999884325204	WITHOUT_CLASSIFICATION	1.15674795393006E-8	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999876364853	WITHOUT_CLASSIFICATION	1.2363514650064873E-8	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999968668286	WITHOUT_CLASSIFICATION	3.1331713635458463E-9	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.9999999973215035	WITHOUT_CLASSIFICATION	2.6784965455751912E-9	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999979026022	WITHOUT_CLASSIFICATION	2.0973978691312247E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999932285368	WITHOUT_CLASSIFICATION	6.771463187903938E-9	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999886616889722	WITHOUT_CLASSIFICATION	1.1338311027788196E-5	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999992407896175	WITHOUT_CLASSIFICATION	7.5921038249761276E-6	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997380706769	WITHOUT_CLASSIFICATION	2.6192932304148005E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997380706769	WITHOUT_CLASSIFICATION	2.6192932304148005E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997380706769	WITHOUT_CLASSIFICATION	2.6192932304148005E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999997380706769	WITHOUT_CLASSIFICATION	2.6192932304148005E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999998977305191	WITHOUT_CLASSIFICATION	1.0226948099192199E-7	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999210013	WITHOUT_CLASSIFICATION	7.899880121307166E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999210013	WITHOUT_CLASSIFICATION	7.899880121307166E-11	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999999210013	WITHOUT_CLASSIFICATION	7.899880121307166E-11	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999999620848232	WITHOUT_CLASSIFICATION	3.791517673887428E-8	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999849178755	WITHOUT_CLASSIFICATION	1.5082124562712236E-8	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.999979078264791	WITHOUT_CLASSIFICATION	2.0921735208978175E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6160863360744732	WITHOUT_CLASSIFICATION	0.3839136639255269	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6160863360744732	WITHOUT_CLASSIFICATION	0.3839136639255269	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999597665762	WITHOUT_CLASSIFICATION	4.0233423748013796E-8	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999999693039897	WITHOUT_CLASSIFICATION	3.069601020103067E-8	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999994783827579	WITHOUT_CLASSIFICATION	5.216172420082872E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999994783827579	WITHOUT_CLASSIFICATION	5.216172420082872E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999994704622831	WITHOUT_CLASSIFICATION	5.295377169473159E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999994704622831	WITHOUT_CLASSIFICATION	5.295377169473159E-7	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999999993158295	WITHOUT_CLASSIFICATION	6.841704799243239E-10	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9975380913997434	WITHOUT_CLASSIFICATION	0.002461908600256554	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999987135367	WITHOUT_CLASSIFICATION	1.2864633063283396E-9	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999999608467973	WITHOUT_CLASSIFICATION	3.9153202700674403E-7	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.999999948463016	WITHOUT_CLASSIFICATION	5.153698411897209E-8	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999996889206779	WITHOUT_CLASSIFICATION	3.110793221646156E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999958204421	WITHOUT_CLASSIFICATION	4.179558010896523E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999981213209	WITHOUT_CLASSIFICATION	1.878679223614785E-9	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999987414765	WITHOUT_CLASSIFICATION	1.2585235096503409E-9	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843167691	WITHOUT_CLASSIFICATION	1.5683230940336534E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999999843167691	WITHOUT_CLASSIFICATION	1.5683230940336534E-8	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994082318331	WITHOUT_CLASSIFICATION	5.917681669242645E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999994082318331	WITHOUT_CLASSIFICATION	5.917681669242645E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999996280991661	WITHOUT_CLASSIFICATION	3.719008338797464E-7	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999992959705974	WITHOUT_CLASSIFICATION	7.040294025926512E-7	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999990304779305	WITHOUT_CLASSIFICATION	9.69522069548506E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998347959764	WITHOUT_CLASSIFICATION	1.6520402355156833E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998347959764	WITHOUT_CLASSIFICATION	1.6520402355156833E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999998347959764	WITHOUT_CLASSIFICATION	1.6520402355156833E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999991388952124	WITHOUT_CLASSIFICATION	8.611047875496079E-7	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.999999490478582	WITHOUT_CLASSIFICATION	5.095214178743808E-7	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999994103075015	WITHOUT_CLASSIFICATION	5.896924985944573E-7	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999998787584243	WITHOUT_CLASSIFICATION	1.2124157556098673E-7	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999996082600074	WITHOUT_CLASSIFICATION	3.917399926052987E-7	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999996729080425	WITHOUT_CLASSIFICATION	3.270919574356835E-7	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999987948624997	WITHOUT_CLASSIFICATION	1.205137500410081E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999994789550347	WITHOUT_CLASSIFICATION	5.21044965282616E-7	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999965130167452	WITHOUT_CLASSIFICATION	3.486983254772779E-6	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999908339201605	WITHOUT_CLASSIFICATION	9.166079839517572E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.999881389375976	WITHOUT_CLASSIFICATION	1.1861062402403712E-4	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999999783372022	WITHOUT_CLASSIFICATION	2.1662797689662823E-8	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999994624869	WITHOUT_CLASSIFICATION	5.375131373600486E-10	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6160863360744732	WITHOUT_CLASSIFICATION	0.3839136639255269	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999995230084237	WITHOUT_CLASSIFICATION	4.76991576374987E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999987922035152	WITHOUT_CLASSIFICATION	1.2077964848235808E-6	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.999999990653722	WITHOUT_CLASSIFICATION	9.346278049571512E-9	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250686434	WITHOUT_CLASSIFICATION	1.5749313565405648E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250686434	WITHOUT_CLASSIFICATION	1.5749313565405648E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250686434	WITHOUT_CLASSIFICATION	1.5749313565405648E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250686434	WITHOUT_CLASSIFICATION	1.5749313565405648E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250686434	WITHOUT_CLASSIFICATION	1.5749313565405648E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999993627164881	WITHOUT_CLASSIFICATION	6.372835118989649E-7	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250686434	WITHOUT_CLASSIFICATION	1.5749313565405648E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250686434	WITHOUT_CLASSIFICATION	1.5749313565405648E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999984250686434	WITHOUT_CLASSIFICATION	1.5749313565405648E-6	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999992803682811	WITHOUT_CLASSIFICATION	7.196317189102652E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9999888562866764	WITHOUT_CLASSIFICATION	1.114371332350534E-5	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999999233054296	WITHOUT_CLASSIFICATION	7.669457036617035E-8	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999910966394	WITHOUT_CLASSIFICATION	8.903360591056546E-9	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999458645651	WITHOUT_CLASSIFICATION	5.413543485218026E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.999999538036144	WITHOUT_CLASSIFICATION	4.6196385602327424E-7	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999999889770916	WITHOUT_CLASSIFICATION	1.102290840922309E-8	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.999999837332521	WITHOUT_CLASSIFICATION	1.6266747909686918E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999991990826114	WITHOUT_CLASSIFICATION	8.009173885167335E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999991990826114	WITHOUT_CLASSIFICATION	8.009173885167335E-7	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999996086507632	WITHOUT_CLASSIFICATION	3.91349236772015E-7	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999993153646449	WITHOUT_CLASSIFICATION	6.84635355060825E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999982615428613	WITHOUT_CLASSIFICATION	1.7384571386690812E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999997136180897	WITHOUT_CLASSIFICATION	2.863819103031131E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999998334595365	WITHOUT_CLASSIFICATION	1.665404636423559E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999995615995453	WITHOUT_CLASSIFICATION	4.38400454732933E-7	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999994644434653	WITHOUT_CLASSIFICATION	5.355565347220652E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.99999942020269	WITHOUT_CLASSIFICATION	5.797973101327857E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999994803959295	WITHOUT_CLASSIFICATION	5.19604070587649E-7	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999997064041584	WITHOUT_CLASSIFICATION	2.935958415961812E-7	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999995969045233	WITHOUT_CLASSIFICATION	4.0309547668395947E-7	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999995190119356	WITHOUT_CLASSIFICATION	4.809880643821663E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.9999992777682726	WITHOUT_CLASSIFICATION	7.222317274286144E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999992943624292	WITHOUT_CLASSIFICATION	7.056375708242807E-7	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999991791452597	WITHOUT_CLASSIFICATION	8.208547402538167E-7	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999991517141472	WITHOUT_CLASSIFICATION	8.482858528453693E-7	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999991121770091	WITHOUT_CLASSIFICATION	8.878229910058568E-7	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999986243311755	WITHOUT_CLASSIFICATION	1.375668824534622E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999995484394172	WITHOUT_CLASSIFICATION	4.515605827919656E-7	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999997866198784	WITHOUT_CLASSIFICATION	2.133801216256094E-7	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999998008171688	WITHOUT_CLASSIFICATION	1.991828312164843E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999997776603902	WITHOUT_CLASSIFICATION	2.2233960979066238E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999982774523046	WITHOUT_CLASSIFICATION	1.7225476954488584E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999994882897855	WITHOUT_CLASSIFICATION	5.117102144879123E-7	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999995693075631	WITHOUT_CLASSIFICATION	4.3069243688923017E-7	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999993978601347	WITHOUT_CLASSIFICATION	6.021398652833595E-7	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999994783250318	WITHOUT_CLASSIFICATION	5.216749681885606E-7	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999993756297524	WITHOUT_CLASSIFICATION	6.243702476018996E-7	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.9999994947390002	WITHOUT_CLASSIFICATION	5.052609998836074E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999996705129551	WITHOUT_CLASSIFICATION	3.294870448567565E-7	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999996451136718	WITHOUT_CLASSIFICATION	3.5488632821404834E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999990209828135	WITHOUT_CLASSIFICATION	9.790171865343064E-7	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999990218760658	WITHOUT_CLASSIFICATION	9.781239341962152E-7	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999987558682552	WITHOUT_CLASSIFICATION	1.2441317448418828E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.999999605060885	WITHOUT_CLASSIFICATION	3.949391150158844E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999998016784862	WITHOUT_CLASSIFICATION	1.9832151367477726E-7	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999992298102571	WITHOUT_CLASSIFICATION	7.70189742978762E-7	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.99999860479121	WITHOUT_CLASSIFICATION	1.3952087899405676E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999991571260415	WITHOUT_CLASSIFICATION	8.428739585854912E-7	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999993459855548	WITHOUT_CLASSIFICATION	6.540144451891017E-7	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.999999528547218	WITHOUT_CLASSIFICATION	4.714527819287457E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999997203451249	WITHOUT_CLASSIFICATION	2.796548751154543E-7	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999992695913013	WITHOUT_CLASSIFICATION	7.304086987063855E-7	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999987451449264	WITHOUT_CLASSIFICATION	1.2548550736864247E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999983771958444	WITHOUT_CLASSIFICATION	1.6228041555971047E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999980774174867	WITHOUT_CLASSIFICATION	1.9225825133299494E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999987615534823	WITHOUT_CLASSIFICATION	1.2384465177168105E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999990146051433	WITHOUT_CLASSIFICATION	9.853948566628008E-7	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999994056038268	WITHOUT_CLASSIFICATION	5.943961731635948E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999990275762759	WITHOUT_CLASSIFICATION	9.724237241435415E-7	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999993694714877	WITHOUT_CLASSIFICATION	6.30528512420908E-7	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.99999951192471	WITHOUT_CLASSIFICATION	4.880752900748963E-7	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.999999380926644	WITHOUT_CLASSIFICATION	6.190733559129416E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999992305452071	WITHOUT_CLASSIFICATION	7.694547929577028E-7	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999992305452071	WITHOUT_CLASSIFICATION	7.694547929577028E-7	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999987101892779	WITHOUT_CLASSIFICATION	1.2898107221347922E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999996521219321	WITHOUT_CLASSIFICATION	3.478780679198992E-7	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999989384305473	WITHOUT_CLASSIFICATION	1.0615694526134872E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999995276614633	WITHOUT_CLASSIFICATION	4.7233853678426504E-7	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999966539789185	WITHOUT_CLASSIFICATION	3.3460210816381863E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999992996635302	WITHOUT_CLASSIFICATION	7.003364698489003E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999989090097333	WITHOUT_CLASSIFICATION	1.0909902666365165E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999990521816978	WITHOUT_CLASSIFICATION	9.478183022304789E-7	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.9999995642133911	WITHOUT_CLASSIFICATION	4.3578660891326356E-7	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999985386519253	WITHOUT_CLASSIFICATION	1.4613480746799623E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999993508404687	WITHOUT_CLASSIFICATION	6.4915953130071465E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.999993508404687	WITHOUT_CLASSIFICATION	6.4915953130071465E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999994242614644	WITHOUT_CLASSIFICATION	5.75738535675513E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999964247089052	WITHOUT_CLASSIFICATION	3.5752910949509186E-6	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999760640607243	WITHOUT_CLASSIFICATION	2.3935939275666638E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999998861439	WITHOUT_CLASSIFICATION	1.1385624244837025E-10	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671009	WITHOUT_CLASSIFICATION	7.873289903810794E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671009	WITHOUT_CLASSIFICATION	7.873289903810794E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671009	WITHOUT_CLASSIFICATION	7.873289903810794E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999999212671009	WITHOUT_CLASSIFICATION	7.873289903810794E-8	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9916095262801106	WITHOUT_CLASSIFICATION	0.008390473719889368	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.999999978755825	WITHOUT_CLASSIFICATION	2.1244174983890113E-8	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.999999211466234	WITHOUT_CLASSIFICATION	7.88533765933927E-7	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.9999994159348266	WITHOUT_CLASSIFICATION	5.840651735491822E-7	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.999998563712629	WITHOUT_CLASSIFICATION	1.4362873710277523E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999992962111907	WITHOUT_CLASSIFICATION	7.037888093233714E-7	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999988151472747	WITHOUT_CLASSIFICATION	1.1848527252653848E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999998062826162	WITHOUT_CLASSIFICATION	1.937173838921222E-7	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999998259160826	WITHOUT_CLASSIFICATION	1.740839174658682E-7	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999992720763883	WITHOUT_CLASSIFICATION	7.279236116784844E-7	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999994888113136	WITHOUT_CLASSIFICATION	5.111886864390848E-7	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999997445186485	WITHOUT_CLASSIFICATION	2.554813514965591E-7	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999989868748778	WITHOUT_CLASSIFICATION	1.0131251222582611E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999994606401215	WITHOUT_CLASSIFICATION	5.393598785515039E-7	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.999999329350777	WITHOUT_CLASSIFICATION	6.706492230358666E-7	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999997879807766	WITHOUT_CLASSIFICATION	2.120192233071445E-7	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999994618376795	WITHOUT_CLASSIFICATION	5.381623205944106E-7	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999988590744411	WITHOUT_CLASSIFICATION	1.1409255588311919E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999995478411522	WITHOUT_CLASSIFICATION	4.5215884790506994E-7	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999993452796592	WITHOUT_CLASSIFICATION	6.547203408577849E-7	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999997313417227	WITHOUT_CLASSIFICATION	2.686582773118181E-7	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999996836738386	WITHOUT_CLASSIFICATION	3.1632616142743614E-7	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.999999590011443	WITHOUT_CLASSIFICATION	4.099885570618403E-7	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999992693763482	WITHOUT_CLASSIFICATION	7.306236518356891E-7	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.999999738436468	WITHOUT_CLASSIFICATION	2.6156353186400015E-7	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999995276999855	WITHOUT_CLASSIFICATION	4.7230001448537927E-7	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999998450200913	WITHOUT_CLASSIFICATION	1.5497990861001152E-7	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999987656260115	WITHOUT_CLASSIFICATION	1.2343739884195008E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999994680086859	WITHOUT_CLASSIFICATION	5.31991314031484E-7	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999989904543004	WITHOUT_CLASSIFICATION	1.0095456995908416E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999984506321639	WITHOUT_CLASSIFICATION	1.5493678360717824E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999995250249557	WITHOUT_CLASSIFICATION	4.7497504434239994E-7	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999987150916677	WITHOUT_CLASSIFICATION	1.284908332335717E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999993071997572	WITHOUT_CLASSIFICATION	6.928002428532674E-7	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999989597322531	WITHOUT_CLASSIFICATION	1.0402677469430038E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999990984970243	WITHOUT_CLASSIFICATION	9.015029757642545E-7	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999988546268281	WITHOUT_CLASSIFICATION	1.1453731719080147E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.999998772968107	WITHOUT_CLASSIFICATION	1.2270318930036677E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.999999506254681	WITHOUT_CLASSIFICATION	4.937453189373178E-7	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999989106044527	WITHOUT_CLASSIFICATION	1.089395547330754E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999996603970694	WITHOUT_CLASSIFICATION	3.396029304797233E-7	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999987599257542	WITHOUT_CLASSIFICATION	1.2400742458752898E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999987529506436	WITHOUT_CLASSIFICATION	1.2470493563744476E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999990546482724	WITHOUT_CLASSIFICATION	9.45351727527558E-7	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.9999984740226109	WITHOUT_CLASSIFICATION	1.5259773890154098E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999974316381337	WITHOUT_CLASSIFICATION	2.568361866326518E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999987711476096	WITHOUT_CLASSIFICATION	1.2288523903797934E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999984408937268	WITHOUT_CLASSIFICATION	1.5591062731848446E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999989931190715	WITHOUT_CLASSIFICATION	1.0068809285407275E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999992929842278	WITHOUT_CLASSIFICATION	7.070157721386638E-7	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999988591667738	WITHOUT_CLASSIFICATION	1.1408332261601718E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999988888676867	WITHOUT_CLASSIFICATION	1.1111323132523922E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.999999130955914	WITHOUT_CLASSIFICATION	8.690440860809528E-7	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999981416756543	WITHOUT_CLASSIFICATION	1.8583243458145162E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999977063786476	WITHOUT_CLASSIFICATION	2.293621352362021E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999990530650796	WITHOUT_CLASSIFICATION	9.46934920360339E-7	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999994557780589	WITHOUT_CLASSIFICATION	5.442219411172923E-7	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999993978873619	WITHOUT_CLASSIFICATION	6.021126380540042E-7	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999997067816305	WITHOUT_CLASSIFICATION	2.9321836940350705E-7	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999606475417	WITHOUT_CLASSIFICATION	3.9352458320017334E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996300816262	WITHOUT_CLASSIFICATION	3.699183737833603E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482750213	WITHOUT_CLASSIFICATION	5.1724978752532646E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482750213	WITHOUT_CLASSIFICATION	5.1724978752532646E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482750213	WITHOUT_CLASSIFICATION	5.1724978752532646E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482750213	WITHOUT_CLASSIFICATION	5.1724978752532646E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482750213	WITHOUT_CLASSIFICATION	5.1724978752532646E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482750213	WITHOUT_CLASSIFICATION	5.1724978752532646E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999482750213	WITHOUT_CLASSIFICATION	5.1724978752532646E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895733391	WITHOUT_CLASSIFICATION	1.111042666101997E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895733391	WITHOUT_CLASSIFICATION	1.111042666101997E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895733391	WITHOUT_CLASSIFICATION	1.111042666101997E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999888895733391	WITHOUT_CLASSIFICATION	1.111042666101997E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999919813933126	WITHOUT_CLASSIFICATION	8.01860668746553E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999919813933126	WITHOUT_CLASSIFICATION	8.01860668746553E-6	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999995193981	WITHOUT_CLASSIFICATION	4.806018186687704E-10	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998939538782	WITHOUT_CLASSIFICATION	1.06046121758174E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999998939538782	WITHOUT_CLASSIFICATION	1.06046121758174E-7	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999550244278	WITHOUT_CLASSIFICATION	4.497557204348869E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999980868084194	WITHOUT_CLASSIFICATION	1.9131915805459806E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331794	WITHOUT_CLASSIFICATION	1.2866820634760448E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331794	WITHOUT_CLASSIFICATION	1.2866820634760448E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331794	WITHOUT_CLASSIFICATION	1.2866820634760448E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331794	WITHOUT_CLASSIFICATION	1.2866820634760448E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331794	WITHOUT_CLASSIFICATION	1.2866820634760448E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331794	WITHOUT_CLASSIFICATION	1.2866820634760448E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999871331794	WITHOUT_CLASSIFICATION	1.2866820634760448E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999987442466	WITHOUT_CLASSIFICATION	1.2557533943344396E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999807879926	WITHOUT_CLASSIFICATION	1.9212007437252862E-8	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999210655824741	WITHOUT_CLASSIFICATION	7.893441752588953E-5	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9999210655824741	WITHOUT_CLASSIFICATION	7.893441752588953E-5	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999839458907	WITHOUT_CLASSIFICATION	1.6054109321769514E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996237567061	WITHOUT_CLASSIFICATION	3.7624329386480584E-7	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999996237567061	WITHOUT_CLASSIFICATION	3.7624329386480584E-7	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9999998650998342	WITHOUT_CLASSIFICATION	1.3490016575636372E-7	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.8855476523981928	IMPLEMENTATION	0.11445234760180724	WITHOUT_CLASSIFICATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999996991616829	WITHOUT_CLASSIFICATION	3.008383170611184E-7	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999939963357801	WITHOUT_CLASSIFICATION	6.003664219863362E-6	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999970804658	WITHOUT_CLASSIFICATION	2.919534094708966E-9	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999994995267858	WITHOUT_CLASSIFICATION	5.004732141693425E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.99990054345345	WITHOUT_CLASSIFICATION	9.945654654999191E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.999999388633229	WITHOUT_CLASSIFICATION	6.113667710516055E-7	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999998673841871	WITHOUT_CLASSIFICATION	1.3261581286610589E-7	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999940914901587	WITHOUT_CLASSIFICATION	5.9085098412970365E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.999999997123868	WITHOUT_CLASSIFICATION	2.8761319949096342E-9	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999976033260278	WITHOUT_CLASSIFICATION	2.3966739721641024E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999999736504	WITHOUT_CLASSIFICATION	2.634952313014614E-11	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9988719424028026	WITHOUT_CLASSIFICATION	0.0011280575971973612	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9999751755405233	WITHOUT_CLASSIFICATION	2.482445947672819E-5	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.999985063511443	WITHOUT_CLASSIFICATION	1.4936488557135015E-5	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999996876686	WITHOUT_CLASSIFICATION	3.12331329572124E-10	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998932129160327	WITHOUT_CLASSIFICATION	1.0678708396735883E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999847865505346	WITHOUT_CLASSIFICATION	1.5213449465431863E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999847865505346	WITHOUT_CLASSIFICATION	1.5213449465431863E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999916702313895	WITHOUT_CLASSIFICATION	8.329768610618928E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999999952264362	WITHOUT_CLASSIFICATION	4.773563762470405E-9	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.999998477896248	WITHOUT_CLASSIFICATION	1.5221037520672026E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999988264679126	WITHOUT_CLASSIFICATION	1.1735320874103378E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999846802214482	WITHOUT_CLASSIFICATION	1.5319778551907436E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999846802214482	WITHOUT_CLASSIFICATION	1.5319778551907436E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999846802214482	WITHOUT_CLASSIFICATION	1.5319778551907436E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999622380381188	WITHOUT_CLASSIFICATION	3.776196188118583E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999972560650188	WITHOUT_CLASSIFICATION	2.7439349811967063E-6	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9997522166351769	WITHOUT_CLASSIFICATION	2.47783364823169E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999833910197972	WITHOUT_CLASSIFICATION	1.6608980202759405E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999999372169	WITHOUT_CLASSIFICATION	6.278313064266597E-11	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999989322616947	WITHOUT_CLASSIFICATION	1.0677383053261717E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.999999970032686	WITHOUT_CLASSIFICATION	2.99673139878428E-8	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.99999999961892	WITHOUT_CLASSIFICATION	3.8107992387207173E-10	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9999659153515712	WITHOUT_CLASSIFICATION	3.40846484288084E-5	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999985311145145	WITHOUT_CLASSIFICATION	1.4688854854323894E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999998763276732	WITHOUT_CLASSIFICATION	1.2367232673197886E-7	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999992112103542	WITHOUT_CLASSIFICATION	7.887896458749583E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.674570379755139	IMPLEMENTATION	0.32542962024486094	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999991335651666	WITHOUT_CLASSIFICATION	8.664348334871545E-7	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999969193355	WITHOUT_CLASSIFICATION	3.080664440245052E-9	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999999993167	WITHOUT_CLASSIFICATION	6.8330637325557425E-12	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999996399480722	WITHOUT_CLASSIFICATION	3.600519278014552E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999418195399	WITHOUT_CLASSIFICATION	5.818046009541874E-8	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9997128666374192	WITHOUT_CLASSIFICATION	2.8713336258088466E-4	IMPLEMENTATION
