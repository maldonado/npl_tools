// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.6510571715658781	WITHOUT_CLASSIFICATION	0.34894282843412205	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8808031058680291	IMPLEMENTATION	0.11919689413197092	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5469224049441063	IMPLEMENTATION	0.4530775950558937	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.7427698012031441	IMPLEMENTATION	0.2572301987968559	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.9380238000554384	WITHOUT_CLASSIFICATION	0.061976199944561626	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.5653385516383601	IMPLEMENTATION	0.43466144836164	WITHOUT_CLASSIFICATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9999120072394092	WITHOUT_CLASSIFICATION	8.799276059081852E-5	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9028654412620232	WITHOUT_CLASSIFICATION	0.09713455873797679	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9028654412620232	WITHOUT_CLASSIFICATION	0.09713455873797679	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.5948700379446672	IMPLEMENTATION	0.4051299620553328	WITHOUT_CLASSIFICATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9999954919952482	WITHOUT_CLASSIFICATION	4.508004751853202E-6	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9689698933624247	IMPLEMENTATION	0.031030106637575307	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.8215372638412701	IMPLEMENTATION	0.17846273615872993	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9929723356163414	WITHOUT_CLASSIFICATION	0.007027664383658644	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.997012805366577	WITHOUT_CLASSIFICATION	0.0029871946334228843	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.99568797138249	WITHOUT_CLASSIFICATION	0.004312028617509977	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9950104306196487	WITHOUT_CLASSIFICATION	0.004989569380351315	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.6288753876919685	IMPLEMENTATION	0.37112461230803157	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9242775194164761	WITHOUT_CLASSIFICATION	0.07572248058352396	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9804317277323359	WITHOUT_CLASSIFICATION	0.019568272267664145	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.9548733499779565	IMPLEMENTATION	0.045126650022043434	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9997197300592614	WITHOUT_CLASSIFICATION	2.8026994073856364E-4	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.5581481750188777	WITHOUT_CLASSIFICATION	0.44185182498112235	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9739432358771276	WITHOUT_CLASSIFICATION	0.026056764122872375	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9888873405339907	IMPLEMENTATION	0.011112659466009246	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.6710418119791047	IMPLEMENTATION	0.3289581880208953	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.5685637310954019	WITHOUT_CLASSIFICATION	0.4314362689045982	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9453944810591284	IMPLEMENTATION	0.054605518940871685	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.5685637310954019	WITHOUT_CLASSIFICATION	0.4314362689045982	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9453944810591284	IMPLEMENTATION	0.054605518940871685	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.8742912862481595	WITHOUT_CLASSIFICATION	0.12570871375184048	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.9900797384769205	WITHOUT_CLASSIFICATION	0.009920261523079517	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9962458975360727	IMPLEMENTATION	0.0037541024639271953	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9047957744508123	IMPLEMENTATION	0.09520422554918763	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9928740986302035	WITHOUT_CLASSIFICATION	0.007125901369796496	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9928740986302035	WITHOUT_CLASSIFICATION	0.007125901369796496	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9998867768910823	WITHOUT_CLASSIFICATION	1.1322310891762905E-4	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.9961720408769921	WITHOUT_CLASSIFICATION	0.0038279591230078692	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.9719333455349018	WITHOUT_CLASSIFICATION	0.028066654465098158	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9893813033652207	WITHOUT_CLASSIFICATION	0.010618696634779393	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9565635739986492	IMPLEMENTATION	0.04343642600135066	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.9054191120156426	IMPLEMENTATION	0.09458088798435728	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9988523886225972	IMPLEMENTATION	0.001147611377402905	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9999717591020756	WITHOUT_CLASSIFICATION	2.824089792448674E-5	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9580698816288791	WITHOUT_CLASSIFICATION	0.04193011837112099	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.5773576038931298	IMPLEMENTATION	0.4226423961068701	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999881609325937	WITHOUT_CLASSIFICATION	1.1839067406231819E-5	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9999936748903959	WITHOUT_CLASSIFICATION	6.3251096041288756E-6	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9997128126702858	WITHOUT_CLASSIFICATION	2.871873297142415E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.7778384740344463	WITHOUT_CLASSIFICATION	0.2221615259655537	IMPLEMENTATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999881609325937	WITHOUT_CLASSIFICATION	1.1839067406231819E-5	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9999331629364666	WITHOUT_CLASSIFICATION	6.683706353344554E-5	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9994642955162762	WITHOUT_CLASSIFICATION	5.357044837237194E-4	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.8748970107136538	IMPLEMENTATION	0.12510298928634625	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9912829064921949	WITHOUT_CLASSIFICATION	0.008717093507805054	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999985003513991	WITHOUT_CLASSIFICATION	1.4996486008565366E-6	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9999833419687182	WITHOUT_CLASSIFICATION	1.665803128184287E-5	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9985847117312026	WITHOUT_CLASSIFICATION	0.0014152882687974908	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9995751899021208	WITHOUT_CLASSIFICATION	4.248100978790957E-4	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9999841171526348	WITHOUT_CLASSIFICATION	1.5882847365212758E-5	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.999910709817812	WITHOUT_CLASSIFICATION	8.929018218799232E-5	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.8496418509877071	IMPLEMENTATION	0.15035814901229286	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.8496418509877071	IMPLEMENTATION	0.15035814901229286	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.9944670951689143	WITHOUT_CLASSIFICATION	0.005532904831085615	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999955486110828	IMPLEMENTATION	4.4513889172897215E-6	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.9471082246395676	WITHOUT_CLASSIFICATION	0.05289177536043241	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.7103621081881224	WITHOUT_CLASSIFICATION	0.2896378918118775	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.7103621081881224	WITHOUT_CLASSIFICATION	0.2896378918118775	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.992583191285633	IMPLEMENTATION	0.007416808714367081	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9562890309855998	IMPLEMENTATION	0.04371096901440024	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9269444269498514	IMPLEMENTATION	0.07305557305014862	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9977513137627769	WITHOUT_CLASSIFICATION	0.002248686237223033	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.5524154386097637	WITHOUT_CLASSIFICATION	0.44758456139023617	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.5524154386097637	WITHOUT_CLASSIFICATION	0.44758456139023617	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9783115407511712	IMPLEMENTATION	0.02168845924882883	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9998953351532571	WITHOUT_CLASSIFICATION	1.0466484674291703E-4	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.999999185279282	WITHOUT_CLASSIFICATION	8.147207181373309E-7	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7825534036491231	IMPLEMENTATION	0.2174465963508769	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9769020827738831	IMPLEMENTATION	0.023097917226116888	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.5686728931271922	WITHOUT_CLASSIFICATION	0.43132710687280773	IMPLEMENTATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.7561961814750315	WITHOUT_CLASSIFICATION	0.24380381852496846	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9843637178866278	WITHOUT_CLASSIFICATION	0.015636282113372046	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.99869902869308	WITHOUT_CLASSIFICATION	0.0013009713069199983	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.99869902869308	WITHOUT_CLASSIFICATION	0.0013009713069199983	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9999885374885726	WITHOUT_CLASSIFICATION	1.1462511427437209E-5	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9999796719858849	WITHOUT_CLASSIFICATION	2.032801411512463E-5	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9999085954863779	WITHOUT_CLASSIFICATION	9.14045136221358E-5	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9999085954863779	WITHOUT_CLASSIFICATION	9.14045136221358E-5	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.8129155992691087	WITHOUT_CLASSIFICATION	0.18708440073089128	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9993705713390878	WITHOUT_CLASSIFICATION	6.294286609122252E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9993705713390878	WITHOUT_CLASSIFICATION	6.294286609122252E-4	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9993705713390878	WITHOUT_CLASSIFICATION	6.294286609122252E-4	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.9224183658204459	IMPLEMENTATION	0.07758163417955413	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.9224183658204459	IMPLEMENTATION	0.07758163417955413	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.5026121581268275	IMPLEMENTATION	0.4973878418731726	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9998369457242214	WITHOUT_CLASSIFICATION	1.6305427577853037E-4	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9999870548779839	WITHOUT_CLASSIFICATION	1.2945122016083151E-5	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999562702601026	IMPLEMENTATION	4.372973989749885E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9989541070819835	IMPLEMENTATION	0.0010458929180165238	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9989541070819835	IMPLEMENTATION	0.0010458929180165238	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9989541070819835	IMPLEMENTATION	0.0010458929180165238	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9565635739986492	IMPLEMENTATION	0.04343642600135066	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9565635739986492	IMPLEMENTATION	0.04343642600135066	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.8742548627130466	WITHOUT_CLASSIFICATION	0.12574513728695344	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.7438390428657287	WITHOUT_CLASSIFICATION	0.2561609571342712	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9928740986302035	WITHOUT_CLASSIFICATION	0.007125901369796496	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9928740986302035	WITHOUT_CLASSIFICATION	0.007125901369796496	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9402259619677984	IMPLEMENTATION	0.05977403803220158	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.8529904633407255	WITHOUT_CLASSIFICATION	0.1470095366592745	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.99568797138249	WITHOUT_CLASSIFICATION	0.004312028617509977	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.9997230632984799	WITHOUT_CLASSIFICATION	2.7693670152009E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9982105821349014	IMPLEMENTATION	0.0017894178650986288	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9891395573308716	IMPLEMENTATION	0.010860442669128466	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.8831780829058634	WITHOUT_CLASSIFICATION	0.11682191709413663	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999656451025041	WITHOUT_CLASSIFICATION	3.435489749588405E-5	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999982225128239	WITHOUT_CLASSIFICATION	1.7774871761344012E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999625962717832	WITHOUT_CLASSIFICATION	3.7403728216787016E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999625962717832	WITHOUT_CLASSIFICATION	3.7403728216787016E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999244181809581	WITHOUT_CLASSIFICATION	7.558181904190852E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999244181809581	WITHOUT_CLASSIFICATION	7.558181904190852E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997067904989705	WITHOUT_CLASSIFICATION	2.932095010294794E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999105061679038	WITHOUT_CLASSIFICATION	8.94938320962642E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999990482730318	WITHOUT_CLASSIFICATION	9.517269681780772E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999992324515177	WITHOUT_CLASSIFICATION	7.675484823851297E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996719195940755	WITHOUT_CLASSIFICATION	3.2808040592443E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996719195940755	WITHOUT_CLASSIFICATION	3.2808040592443E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999943876362805	WITHOUT_CLASSIFICATION	5.612363719450725E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999343175154584	WITHOUT_CLASSIFICATION	6.568248454159431E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999343175154584	WITHOUT_CLASSIFICATION	6.568248454159431E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999974030732195	WITHOUT_CLASSIFICATION	2.5969267803854913E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999986348295782	WITHOUT_CLASSIFICATION	1.3651704218649916E-6	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999083791267254	WITHOUT_CLASSIFICATION	9.162087327462717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999083791267254	WITHOUT_CLASSIFICATION	9.162087327462717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999083791267254	WITHOUT_CLASSIFICATION	9.162087327462717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999083791267254	WITHOUT_CLASSIFICATION	9.162087327462717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999083791267254	WITHOUT_CLASSIFICATION	9.162087327462717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999083791267254	WITHOUT_CLASSIFICATION	9.162087327462717E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999083791267254	WITHOUT_CLASSIFICATION	9.162087327462717E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998989154909083	WITHOUT_CLASSIFICATION	1.0108450909177244E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998989154909083	WITHOUT_CLASSIFICATION	1.0108450909177244E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998989154909083	WITHOUT_CLASSIFICATION	1.0108450909177244E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998989154909083	WITHOUT_CLASSIFICATION	1.0108450909177244E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998989154909083	WITHOUT_CLASSIFICATION	1.0108450909177244E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998989154909083	WITHOUT_CLASSIFICATION	1.0108450909177244E-4	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9998989154909083	WITHOUT_CLASSIFICATION	1.0108450909177244E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994425588842681	WITHOUT_CLASSIFICATION	5.574411157318652E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994425588842681	WITHOUT_CLASSIFICATION	5.574411157318652E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994425588842681	WITHOUT_CLASSIFICATION	5.574411157318652E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994425588842681	WITHOUT_CLASSIFICATION	5.574411157318652E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994425588842681	WITHOUT_CLASSIFICATION	5.574411157318652E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994425588842681	WITHOUT_CLASSIFICATION	5.574411157318652E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995612154128198	WITHOUT_CLASSIFICATION	4.387845871801516E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995612154128198	WITHOUT_CLASSIFICATION	4.387845871801516E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995612154128198	WITHOUT_CLASSIFICATION	4.387845871801516E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995612154128198	WITHOUT_CLASSIFICATION	4.387845871801516E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995612154128198	WITHOUT_CLASSIFICATION	4.387845871801516E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995612154128198	WITHOUT_CLASSIFICATION	4.387845871801516E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9991216401940957	WITHOUT_CLASSIFICATION	8.783598059042233E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9991216401940957	WITHOUT_CLASSIFICATION	8.783598059042233E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9991216401940957	WITHOUT_CLASSIFICATION	8.783598059042233E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9991216401940957	WITHOUT_CLASSIFICATION	8.783598059042233E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9991216401940957	WITHOUT_CLASSIFICATION	8.783598059042233E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9991216401940957	WITHOUT_CLASSIFICATION	8.783598059042233E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9991216401940957	WITHOUT_CLASSIFICATION	8.783598059042233E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9990890240184036	WITHOUT_CLASSIFICATION	9.109759815962777E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9990890240184036	WITHOUT_CLASSIFICATION	9.109759815962777E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9990890240184036	WITHOUT_CLASSIFICATION	9.109759815962777E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9990890240184036	WITHOUT_CLASSIFICATION	9.109759815962777E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999949996365524	WITHOUT_CLASSIFICATION	5.000363447652942E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999949996365524	WITHOUT_CLASSIFICATION	5.000363447652942E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999995570913801	WITHOUT_CLASSIFICATION	4.429086199031979E-7	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.9999962584094098	WITHOUT_CLASSIFICATION	3.7415905902681E-6	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999936481599908	WITHOUT_CLASSIFICATION	6.351840009250875E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999999311091698	WITHOUT_CLASSIFICATION	6.889083012404396E-8	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999562685607788	WITHOUT_CLASSIFICATION	4.3731439221237226E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999875824846692	WITHOUT_CLASSIFICATION	1.2417515330738665E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999875824846692	WITHOUT_CLASSIFICATION	1.2417515330738665E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999875824846692	WITHOUT_CLASSIFICATION	1.2417515330738665E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999875824846692	WITHOUT_CLASSIFICATION	1.2417515330738665E-5	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.999668149895236	WITHOUT_CLASSIFICATION	3.3185010476399665E-4	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999724626050426	WITHOUT_CLASSIFICATION	2.753739495746265E-5	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999961845641606	WITHOUT_CLASSIFICATION	3.815435839386653E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999986585569831	WITHOUT_CLASSIFICATION	1.3414430169302168E-6	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.999998168013587	WITHOUT_CLASSIFICATION	1.8319864129999987E-6	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999893724947	WITHOUT_CLASSIFICATION	1.0627505231790838E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999943476167569	WITHOUT_CLASSIFICATION	5.652383243082606E-6	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999968153536	WITHOUT_CLASSIFICATION	3.184646402620592E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999991919514	WITHOUT_CLASSIFICATION	8.080485710150401E-10	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999958395215367	WITHOUT_CLASSIFICATION	4.160478463337548E-6	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999974330265607	WITHOUT_CLASSIFICATION	2.5669734393191705E-6	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9998924638815287	WITHOUT_CLASSIFICATION	1.075361184713222E-4	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.9999629116686426	WITHOUT_CLASSIFICATION	3.708833135734022E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999991356337564	WITHOUT_CLASSIFICATION	8.64366243613788E-7	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999219260973	WITHOUT_CLASSIFICATION	7.807390263547584E-8	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999998191288055	WITHOUT_CLASSIFICATION	1.8087119439862508E-7	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9967236003111307	WITHOUT_CLASSIFICATION	0.0032763996888693124	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999875824846692	WITHOUT_CLASSIFICATION	1.2417515330738665E-5	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.999998509019254	WITHOUT_CLASSIFICATION	1.4909807458981725E-6	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999419427259	WITHOUT_CLASSIFICATION	5.805727416399944E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999984897503311	WITHOUT_CLASSIFICATION	1.5102496689431245E-6	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999427507319203	WITHOUT_CLASSIFICATION	5.724926807966092E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9992358365190216	WITHOUT_CLASSIFICATION	7.641634809784533E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999474695335	WITHOUT_CLASSIFICATION	5.253046653042083E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.9999999747031917	WITHOUT_CLASSIFICATION	2.5296808243499774E-8	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999995582341921	WITHOUT_CLASSIFICATION	4.4176580782806566E-7	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.9999951860552866	WITHOUT_CLASSIFICATION	4.8139447133979755E-6	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999674582155	WITHOUT_CLASSIFICATION	3.254178450064522E-8	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.9999993170492221	WITHOUT_CLASSIFICATION	6.829507778080092E-7	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999980282172707	WITHOUT_CLASSIFICATION	1.9717827293535044E-6	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.999992654165169	WITHOUT_CLASSIFICATION	7.3458348309679016E-6	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999447164738428	WITHOUT_CLASSIFICATION	5.528352615717979E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.9999707339776504	WITHOUT_CLASSIFICATION	2.9266022349588398E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.9999982299697603	WITHOUT_CLASSIFICATION	1.7700302395907033E-6	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999995208350531	WITHOUT_CLASSIFICATION	4.79164946944149E-7	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999099393789	WITHOUT_CLASSIFICATION	9.006062108203758E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999962793112686	WITHOUT_CLASSIFICATION	3.7206887314143504E-6	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999099678869	WITHOUT_CLASSIFICATION	9.003211310893392E-8	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999512990786028	WITHOUT_CLASSIFICATION	4.870092139721965E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999981406572274	WITHOUT_CLASSIFICATION	1.8593427725561808E-6	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999998927993043	WITHOUT_CLASSIFICATION	1.0720069565191739E-7	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.9996483811050975	WITHOUT_CLASSIFICATION	3.516188949025575E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999950010781635	WITHOUT_CLASSIFICATION	4.99892183646842E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.9999979461581664	WITHOUT_CLASSIFICATION	2.053841833498791E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999734850773063	WITHOUT_CLASSIFICATION	2.651492269371442E-5	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999683808024357	WITHOUT_CLASSIFICATION	3.161919756427495E-5	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.999999980726269	WITHOUT_CLASSIFICATION	1.9273730980095025E-8	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999999088129807	WITHOUT_CLASSIFICATION	9.118701937820554E-8	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999998886430403	WITHOUT_CLASSIFICATION	1.1135695971031933E-7	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.9999995211035083	WITHOUT_CLASSIFICATION	4.788964916512923E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.9999999926084144	WITHOUT_CLASSIFICATION	7.39158558681322E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999502252899	WITHOUT_CLASSIFICATION	4.9774710097779803E-8	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999471199075564	WITHOUT_CLASSIFICATION	5.288009244367974E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999991444458302	WITHOUT_CLASSIFICATION	8.555541699126695E-7	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999932613456052	WITHOUT_CLASSIFICATION	6.738654394849971E-6	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999999996042	WITHOUT_CLASSIFICATION	3.957260881961648E-13	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999859073121793	WITHOUT_CLASSIFICATION	1.4092687820784122E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999996761403835	WITHOUT_CLASSIFICATION	3.2385961649888164E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999996131099554	WITHOUT_CLASSIFICATION	3.868900445026198E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999637020182	WITHOUT_CLASSIFICATION	3.6297981808840437E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999993869003805	WITHOUT_CLASSIFICATION	6.130996194196871E-7	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.7468357177899774	WITHOUT_CLASSIFICATION	0.2531642822100227	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.7468357177899774	WITHOUT_CLASSIFICATION	0.2531642822100227	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.5672643054969652	WITHOUT_CLASSIFICATION	0.4327356945030349	IMPLEMENTATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999514216445282	WITHOUT_CLASSIFICATION	4.8578355471753834E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999799951572801	WITHOUT_CLASSIFICATION	2.0004842719909067E-5	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.999999724275205	WITHOUT_CLASSIFICATION	2.7572479496434887E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9982642467229256	WITHOUT_CLASSIFICATION	0.001735753277074415	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999994385328073	WITHOUT_CLASSIFICATION	5.614671927896312E-7	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.9999988937596659	WITHOUT_CLASSIFICATION	1.1062403340551476E-6	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999902979094457	WITHOUT_CLASSIFICATION	9.702090554345702E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999637020182	WITHOUT_CLASSIFICATION	3.6297981808840437E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.999999997676801	WITHOUT_CLASSIFICATION	2.3231990876608402E-9	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999801154349641	WITHOUT_CLASSIFICATION	1.9884565035804808E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9976497531905274	WITHOUT_CLASSIFICATION	0.002350246809472587	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999997565088237	WITHOUT_CLASSIFICATION	2.434911763297115E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999996197119502	WITHOUT_CLASSIFICATION	3.802880498799613E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999996753583498	WITHOUT_CLASSIFICATION	3.2464165018414213E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999996753583498	WITHOUT_CLASSIFICATION	3.2464165018414213E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999996753583498	WITHOUT_CLASSIFICATION	3.2464165018414213E-7	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.999999933422252	WITHOUT_CLASSIFICATION	6.657774804334723E-8	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999991219421484	WITHOUT_CLASSIFICATION	8.780578515921834E-7	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999976274954	WITHOUT_CLASSIFICATION	2.3725047112417407E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.999334084747441	WITHOUT_CLASSIFICATION	6.659152525589468E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999755221189066	WITHOUT_CLASSIFICATION	2.4477881093468988E-5	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999997932263759	WITHOUT_CLASSIFICATION	2.0677362412973713E-7	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.9996979348937466	WITHOUT_CLASSIFICATION	3.020651062533714E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999651888677	WITHOUT_CLASSIFICATION	3.481113234236601E-8	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999996877257189	WITHOUT_CLASSIFICATION	3.1227428109258975E-6	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.999996877257189	WITHOUT_CLASSIFICATION	3.1227428109258975E-6	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999995981777658	WITHOUT_CLASSIFICATION	4.018222342252381E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999444317558518	WITHOUT_CLASSIFICATION	5.556824414808392E-5	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999996807272388	WITHOUT_CLASSIFICATION	3.192727613014058E-7	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999996807272388	WITHOUT_CLASSIFICATION	3.192727613014058E-7	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999994042901368	WITHOUT_CLASSIFICATION	5.957098632557402E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999998460177215	WITHOUT_CLASSIFICATION	1.5398227838146154E-7	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999799445447075	WITHOUT_CLASSIFICATION	2.0055455292456704E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.9999999980826791	WITHOUT_CLASSIFICATION	1.9173209526638616E-9	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999945176791298	WITHOUT_CLASSIFICATION	5.482320870235284E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.999999409181094	WITHOUT_CLASSIFICATION	5.908189059654423E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999967563690221	WITHOUT_CLASSIFICATION	3.24363097780974E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999982640210736	WITHOUT_CLASSIFICATION	1.7359789263551005E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.9999798906654692	WITHOUT_CLASSIFICATION	2.0109334530834417E-5	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.999999239484394	WITHOUT_CLASSIFICATION	7.605156060843853E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999637020182	WITHOUT_CLASSIFICATION	3.6297981808840437E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.999999742293782	WITHOUT_CLASSIFICATION	2.5770621803745854E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999932977828	WITHOUT_CLASSIFICATION	6.7022172686385E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999938645557458	WITHOUT_CLASSIFICATION	6.135444254125877E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9973596913324051	WITHOUT_CLASSIFICATION	0.002640308667594815	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.999997588058098	WITHOUT_CLASSIFICATION	2.4119419020198446E-6	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999860553549869	WITHOUT_CLASSIFICATION	1.3944645013038078E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999995073042487	WITHOUT_CLASSIFICATION	4.92695751364374E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999993518937904	WITHOUT_CLASSIFICATION	6.481062096264762E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999556702812	WITHOUT_CLASSIFICATION	4.43297187522957E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9988509818451708	WITHOUT_CLASSIFICATION	0.0011490181548290807	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999978903886141	WITHOUT_CLASSIFICATION	2.109611385947842E-6	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999992274075	WITHOUT_CLASSIFICATION	7.725925196837823E-10	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999621610483689	WITHOUT_CLASSIFICATION	3.783895163120375E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999991572102972	WITHOUT_CLASSIFICATION	8.427897027173411E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999750865572	WITHOUT_CLASSIFICATION	2.4913442723982504E-8	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999858064165804	WITHOUT_CLASSIFICATION	1.4193583419560348E-5	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999995793952726	WITHOUT_CLASSIFICATION	4.206047272660005E-7	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999996493177985	WITHOUT_CLASSIFICATION	3.5068220146275147E-7	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999680249576	WITHOUT_CLASSIFICATION	3.1975042480455716E-8	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999971637078747	WITHOUT_CLASSIFICATION	2.8362921252675713E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999972130570086	WITHOUT_CLASSIFICATION	2.7869429912761587E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.9999999691602779	WITHOUT_CLASSIFICATION	3.083972207972033E-8	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999986477075326	WITHOUT_CLASSIFICATION	1.3522924674860083E-6	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999989447058397	WITHOUT_CLASSIFICATION	1.0552941602353308E-6	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999905954849	WITHOUT_CLASSIFICATION	9.404515114035769E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9993565009965918	WITHOUT_CLASSIFICATION	6.434990034082583E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999628911320495	WITHOUT_CLASSIFICATION	3.7108867950550615E-5	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999998037419037	WITHOUT_CLASSIFICATION	1.9625809625618412E-7	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.999999815225428	WITHOUT_CLASSIFICATION	1.8477457205659985E-7	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999996083943467	WITHOUT_CLASSIFICATION	3.9160565339037716E-7	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999741644612	WITHOUT_CLASSIFICATION	2.5835538783834173E-8	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999998339847158	WITHOUT_CLASSIFICATION	1.660152842531405E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999976225375546	WITHOUT_CLASSIFICATION	2.3774624453711886E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999958964768948	WITHOUT_CLASSIFICATION	4.103523105141639E-6	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.999996857128517	WITHOUT_CLASSIFICATION	3.1428714830102656E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999645291564387	WITHOUT_CLASSIFICATION	3.547084356128675E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999994366627076	WITHOUT_CLASSIFICATION	5.633372922602682E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999979786508623	WITHOUT_CLASSIFICATION	2.0213491378539772E-6	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999992683135944	WITHOUT_CLASSIFICATION	7.316864055927384E-6	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999997402653211	WITHOUT_CLASSIFICATION	2.597346789285037E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999992265900064	WITHOUT_CLASSIFICATION	7.734099934874263E-7	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999999678668838	WITHOUT_CLASSIFICATION	3.2133116195334716E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999998840599427	WITHOUT_CLASSIFICATION	1.1594005742028875E-7	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999998077249594	WITHOUT_CLASSIFICATION	1.922750404974907E-7	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999830994575372	WITHOUT_CLASSIFICATION	1.69005424628329E-5	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999970186625528	WITHOUT_CLASSIFICATION	2.981337447332156E-6	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.9999995205126958	WITHOUT_CLASSIFICATION	4.794873042949988E-7	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999980505889866	WITHOUT_CLASSIFICATION	1.949411013398572E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999264921969	WITHOUT_CLASSIFICATION	7.35078031404959E-8	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998400951568716	WITHOUT_CLASSIFICATION	1.5990484312847033E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9913703706578479	WITHOUT_CLASSIFICATION	0.008629629342151935	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999933240563088	WITHOUT_CLASSIFICATION	6.675943691205228E-6	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999958595576958	WITHOUT_CLASSIFICATION	4.1404423043178715E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.9999991124818643	WITHOUT_CLASSIFICATION	8.87518135604193E-7	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999820187366523	WITHOUT_CLASSIFICATION	1.7981263347823664E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999911311776702	WITHOUT_CLASSIFICATION	8.868822329667269E-6	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999995100301432	WITHOUT_CLASSIFICATION	4.899698567710035E-7	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.999998487078752	WITHOUT_CLASSIFICATION	1.5129212480454841E-6	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.9999983310549507	WITHOUT_CLASSIFICATION	1.6689450492175401E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999987618974643	WITHOUT_CLASSIFICATION	1.2381025357621198E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999987782559149	WITHOUT_CLASSIFICATION	1.221744085093274E-5	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.999987782559149	WITHOUT_CLASSIFICATION	1.221744085093274E-5	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999994690334293	WITHOUT_CLASSIFICATION	5.30966570699666E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.999994690334293	WITHOUT_CLASSIFICATION	5.30966570699666E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999984986547271	WITHOUT_CLASSIFICATION	1.5013452728247575E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999984986547271	WITHOUT_CLASSIFICATION	1.5013452728247575E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999970566161406	WITHOUT_CLASSIFICATION	2.943383859548849E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999970566161406	WITHOUT_CLASSIFICATION	2.943383859548849E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999999734612578	WITHOUT_CLASSIFICATION	2.6538742211861155E-8	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999892001948653	WITHOUT_CLASSIFICATION	1.079980513476073E-5	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999994554714307	WITHOUT_CLASSIFICATION	5.445285693737205E-7	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999848923208	WITHOUT_CLASSIFICATION	1.510767912093815E-8	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999994377128866	WITHOUT_CLASSIFICATION	5.622871134454904E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999998201712161	WITHOUT_CLASSIFICATION	1.798287839244229E-7	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.999977112941629	WITHOUT_CLASSIFICATION	2.2887058370913876E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999994751061868	WITHOUT_CLASSIFICATION	5.248938131191404E-7	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999993794810711	WITHOUT_CLASSIFICATION	6.205189289226046E-7	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999998459658845	WITHOUT_CLASSIFICATION	1.5403411544140124E-7	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999948571814319	WITHOUT_CLASSIFICATION	5.1428185681509274E-6	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999997034672901	WITHOUT_CLASSIFICATION	2.965327099948543E-7	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999981855743495	WITHOUT_CLASSIFICATION	1.8144256505354445E-6	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999572573193046	WITHOUT_CLASSIFICATION	4.27426806954557E-5	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999980656662223	WITHOUT_CLASSIFICATION	1.9343337777714677E-6	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.9999995369992325	WITHOUT_CLASSIFICATION	4.630007674518843E-7	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999550186326296	WITHOUT_CLASSIFICATION	4.498136737039405E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.999999605651201	WITHOUT_CLASSIFICATION	3.943487989816227E-7	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.9999999775075283	WITHOUT_CLASSIFICATION	2.249247160463147E-8	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9996954045789768	WITHOUT_CLASSIFICATION	3.0459542102331154E-4	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999983614411377	WITHOUT_CLASSIFICATION	1.6385588623197138E-6	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.999998704972705	WITHOUT_CLASSIFICATION	1.295027294873589E-6	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9998764048228483	WITHOUT_CLASSIFICATION	1.2359517715156498E-4	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999997214971394	WITHOUT_CLASSIFICATION	2.7850286045352607E-7	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999980556982007	WITHOUT_CLASSIFICATION	1.9443017994362097E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999997455963159	WITHOUT_CLASSIFICATION	2.544036841451994E-7	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999984237032538	WITHOUT_CLASSIFICATION	1.5762967461987661E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999918558794375	WITHOUT_CLASSIFICATION	8.144120562572584E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999918558794375	WITHOUT_CLASSIFICATION	8.144120562572584E-6	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999995780367953	WITHOUT_CLASSIFICATION	4.219632047543769E-7	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999959119190449	WITHOUT_CLASSIFICATION	4.08808095507837E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999870615170909	WITHOUT_CLASSIFICATION	1.2938482909018838E-5	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999877061636	WITHOUT_CLASSIFICATION	1.229383636558166E-8	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999995382733003	WITHOUT_CLASSIFICATION	4.6172669962447534E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999990479073895	WITHOUT_CLASSIFICATION	9.520926104930535E-7	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999934165367684	WITHOUT_CLASSIFICATION	6.583463231607819E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.9999934165367684	WITHOUT_CLASSIFICATION	6.583463231607819E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999990548925449	WITHOUT_CLASSIFICATION	9.451074549493635E-7	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.780857095889901	WITHOUT_CLASSIFICATION	0.21914290411009898	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999971584218078	WITHOUT_CLASSIFICATION	2.841578192190071E-6	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999971584218078	WITHOUT_CLASSIFICATION	2.841578192190071E-6	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999992159919296	WITHOUT_CLASSIFICATION	7.84008070340918E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999965041067692	WITHOUT_CLASSIFICATION	3.4958932308842034E-6	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.9999965041067692	WITHOUT_CLASSIFICATION	3.4958932308842034E-6	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9997957390585442	WITHOUT_CLASSIFICATION	2.0426094145580646E-4	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9997957390585442	WITHOUT_CLASSIFICATION	2.0426094145580646E-4	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999997271284657	WITHOUT_CLASSIFICATION	2.7287153430699354E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999997271284657	WITHOUT_CLASSIFICATION	2.7287153430699354E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999991812238288	WITHOUT_CLASSIFICATION	8.187761712557421E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999951639299334	WITHOUT_CLASSIFICATION	4.836070066697252E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999890910921977	WITHOUT_CLASSIFICATION	1.0908907802409731E-5	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.9999999951922538	WITHOUT_CLASSIFICATION	4.807746090407612E-9	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999852013391	WITHOUT_CLASSIFICATION	1.479866085731823E-8	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999998960000178	WITHOUT_CLASSIFICATION	1.039999821747413E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999999549900451	WITHOUT_CLASSIFICATION	4.5009954897652347E-7	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999997535937475	WITHOUT_CLASSIFICATION	2.4640625255624474E-7	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.999999549900451	WITHOUT_CLASSIFICATION	4.5009954897652347E-7	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9946434244244959	WITHOUT_CLASSIFICATION	0.005356575575504035	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999947680192895	WITHOUT_CLASSIFICATION	5.231980710381225E-6	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.9999979945966336	WITHOUT_CLASSIFICATION	2.0054033664007936E-6	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999787509525777	WITHOUT_CLASSIFICATION	2.124904742229619E-5	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999995963543066	WITHOUT_CLASSIFICATION	4.03645693479556E-7	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.999858604512549	WITHOUT_CLASSIFICATION	1.413954874508612E-4	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999893556773423	WITHOUT_CLASSIFICATION	1.0644322657695218E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999901512294987	WITHOUT_CLASSIFICATION	9.848770501252325E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999997313907737	WITHOUT_CLASSIFICATION	2.6860922625974325E-7	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999956451945068	WITHOUT_CLASSIFICATION	4.354805493166689E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999718495165	WITHOUT_CLASSIFICATION	2.8150483385888467E-8	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.999993469142077	WITHOUT_CLASSIFICATION	6.530857922994658E-6	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999391188747699	WITHOUT_CLASSIFICATION	6.0881125229997706E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.999998023228823	WITHOUT_CLASSIFICATION	1.9767711768920836E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999998302920099	WITHOUT_CLASSIFICATION	1.697079900954323E-7	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999772626993	WITHOUT_CLASSIFICATION	2.273730063654861E-8	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999978075542787	WITHOUT_CLASSIFICATION	2.1924457212895634E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9999041746472745	WITHOUT_CLASSIFICATION	9.582535272542199E-5	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.999001216098438	WITHOUT_CLASSIFICATION	9.987839015621251E-4	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.9999365786312503	WITHOUT_CLASSIFICATION	6.342136874970959E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999998667551412	WITHOUT_CLASSIFICATION	1.3324485887973852E-7	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999981569565358	WITHOUT_CLASSIFICATION	1.843043464216769E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999826019377	WITHOUT_CLASSIFICATION	1.7398062268225577E-8	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999971317150737	WITHOUT_CLASSIFICATION	2.868284926368995E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999987141475736	WITHOUT_CLASSIFICATION	1.2858524263780923E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999991896241955	WITHOUT_CLASSIFICATION	8.103758044215207E-7	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999245417934	WITHOUT_CLASSIFICATION	7.545820655555986E-8	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999998154990145	WITHOUT_CLASSIFICATION	1.8450098543689763E-7	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.9999999429519482	WITHOUT_CLASSIFICATION	5.7048051685304747E-8	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.999999495696567	WITHOUT_CLASSIFICATION	5.043034329694437E-7	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.999999529525412	WITHOUT_CLASSIFICATION	4.704745879349582E-7	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999858855010707	WITHOUT_CLASSIFICATION	1.4114498929359918E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999998697500613	WITHOUT_CLASSIFICATION	1.3024993868476923E-7	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999961059958468	WITHOUT_CLASSIFICATION	3.894004153184453E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9997534190926574	WITHOUT_CLASSIFICATION	2.465809073426887E-4	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.9999974531737436	WITHOUT_CLASSIFICATION	2.5468262563900594E-6	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999992051657827	WITHOUT_CLASSIFICATION	7.948342173205166E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999972300136423	WITHOUT_CLASSIFICATION	2.769986357766827E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999942125070116	WITHOUT_CLASSIFICATION	5.787492988387252E-6	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999998545758434	WITHOUT_CLASSIFICATION	1.4542415670263458E-7	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999998846950234	WITHOUT_CLASSIFICATION	1.1530497661431695E-7	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999934866816674	WITHOUT_CLASSIFICATION	6.5133183324950696E-6	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999991880350783	WITHOUT_CLASSIFICATION	8.119649217884066E-7	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.9999995764052273	WITHOUT_CLASSIFICATION	4.235947726765082E-7	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999997621621332	WITHOUT_CLASSIFICATION	2.378378667899101E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999992391317454	WITHOUT_CLASSIFICATION	7.608682547385306E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.999999908774878	WITHOUT_CLASSIFICATION	9.12251220328991E-8	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999997087961118	WITHOUT_CLASSIFICATION	2.9120388828396153E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999330422091	WITHOUT_CLASSIFICATION	6.695779089323788E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999979122713422	WITHOUT_CLASSIFICATION	2.087728657919069E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999787335401608	WITHOUT_CLASSIFICATION	2.1266459839155194E-5	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999669141195	WITHOUT_CLASSIFICATION	3.3085880400353693E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999884026573946	WITHOUT_CLASSIFICATION	1.1597342605300815E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.999999903750085	WITHOUT_CLASSIFICATION	9.624991505770531E-8	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999956440262179	WITHOUT_CLASSIFICATION	4.355973782152031E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999956440262179	WITHOUT_CLASSIFICATION	4.355973782152031E-6	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999996565072	WITHOUT_CLASSIFICATION	3.434927192022815E-10	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999985921142	WITHOUT_CLASSIFICATION	1.4078858771031964E-9	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999913675031	WITHOUT_CLASSIFICATION	8.632496915206952E-9	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.9999910681210087	WITHOUT_CLASSIFICATION	8.931878991411138E-6	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999946586586396	WITHOUT_CLASSIFICATION	5.34134136046917E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999959611802494	WITHOUT_CLASSIFICATION	4.03881975066704E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999998173147882	WITHOUT_CLASSIFICATION	1.8268521177571004E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999646837717875	WITHOUT_CLASSIFICATION	3.531622821250144E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.9999584321918595	WITHOUT_CLASSIFICATION	4.156780814044393E-5	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999998464918125	WITHOUT_CLASSIFICATION	1.5350818755522996E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999988164952548	WITHOUT_CLASSIFICATION	1.1835047451868745E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999988164952548	WITHOUT_CLASSIFICATION	1.1835047451868745E-6	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9989573239017325	WITHOUT_CLASSIFICATION	0.0010426760982675054	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.999999886558209	WITHOUT_CLASSIFICATION	1.1344179092163983E-7	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999995323412628	WITHOUT_CLASSIFICATION	4.676587372060429E-7	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999993421712	WITHOUT_CLASSIFICATION	6.578287625170876E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.9999999911721629	WITHOUT_CLASSIFICATION	8.827837236725978E-9	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.9999997822999406	WITHOUT_CLASSIFICATION	2.1770005951029233E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999836369612	WITHOUT_CLASSIFICATION	1.6363038870434437E-8	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999895696944	WITHOUT_CLASSIFICATION	1.0430305710672575E-8	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999993980754308	WITHOUT_CLASSIFICATION	6.01924569186713E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999945623079405	WITHOUT_CLASSIFICATION	5.43769205957159E-6	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999215775482	WITHOUT_CLASSIFICATION	7.842245178892345E-8	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999995481036874	WITHOUT_CLASSIFICATION	4.518963124661651E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999940969995021	WITHOUT_CLASSIFICATION	5.9030004978570115E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999940969995021	WITHOUT_CLASSIFICATION	5.9030004978570115E-6	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999939576078976	WITHOUT_CLASSIFICATION	6.042392102471163E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999851930147737	WITHOUT_CLASSIFICATION	1.4806985226191778E-5	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999998475039638	WITHOUT_CLASSIFICATION	1.5249603628501556E-7	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999971136067585	WITHOUT_CLASSIFICATION	2.886393241606889E-6	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999981850278656	WITHOUT_CLASSIFICATION	1.8149721343446184E-6	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999996885416371	WITHOUT_CLASSIFICATION	3.114583628507946E-7	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999975189670011	WITHOUT_CLASSIFICATION	2.4810329988685617E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.9999999882871228	WITHOUT_CLASSIFICATION	1.171287713373653E-8	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999953561669813	WITHOUT_CLASSIFICATION	4.6438330186636914E-6	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999997982169075	WITHOUT_CLASSIFICATION	2.0178309253506504E-7	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999995323412628	WITHOUT_CLASSIFICATION	4.676587372060429E-7	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.9999907190684365	WITHOUT_CLASSIFICATION	9.28093156346351E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999999510059883	WITHOUT_CLASSIFICATION	4.8994011719647995E-8	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999999038489229	WITHOUT_CLASSIFICATION	9.615107715198851E-8	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999797599309729	WITHOUT_CLASSIFICATION	2.0240069027052225E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999989077004593	WITHOUT_CLASSIFICATION	1.0922995406871317E-6	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.999999984253876	WITHOUT_CLASSIFICATION	1.574612402012048E-8	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9998905323536311	WITHOUT_CLASSIFICATION	1.0946764636886962E-4	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999887265180886	WITHOUT_CLASSIFICATION	1.1273481911425772E-5	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999983878881	WITHOUT_CLASSIFICATION	1.6121118682372756E-9	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999394394170742	WITHOUT_CLASSIFICATION	6.056058292589437E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999363362725809	WITHOUT_CLASSIFICATION	6.366372741907395E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.999999465296999	WITHOUT_CLASSIFICATION	5.34703001085297E-7	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999953227390252	WITHOUT_CLASSIFICATION	4.677260974697625E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.9935160601582954	WITHOUT_CLASSIFICATION	0.006483939841704487	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999956789261278	WITHOUT_CLASSIFICATION	4.321073872228799E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999844409444019	WITHOUT_CLASSIFICATION	1.555905559814106E-5	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999976561055552	WITHOUT_CLASSIFICATION	2.343894444670239E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999997681086633	WITHOUT_CLASSIFICATION	2.3189133669857115E-7	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999984121754565	WITHOUT_CLASSIFICATION	1.587824543494152E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.9999999603118582	WITHOUT_CLASSIFICATION	3.968814182878952E-8	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999920000049	WITHOUT_CLASSIFICATION	7.999995186963383E-9	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999881982980493	WITHOUT_CLASSIFICATION	1.1801701950738352E-5	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.9999977404039838	WITHOUT_CLASSIFICATION	2.2595960160978504E-6	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999833051967633	WITHOUT_CLASSIFICATION	1.669480323671641E-5	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999995475402158	WITHOUT_CLASSIFICATION	4.524597842198E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.9999999880523616	WITHOUT_CLASSIFICATION	1.1947638323823833E-8	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999973310153087	WITHOUT_CLASSIFICATION	2.6689846912458647E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999983121423305	WITHOUT_CLASSIFICATION	1.6878576694302117E-6	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.9999885097745386	WITHOUT_CLASSIFICATION	1.149022546135424E-5	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.999994866337637	WITHOUT_CLASSIFICATION	5.133662363008081E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999954921586034	WITHOUT_CLASSIFICATION	4.507841396657681E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999954921586034	WITHOUT_CLASSIFICATION	4.507841396657681E-6	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9936888025404271	WITHOUT_CLASSIFICATION	0.006311197459572798	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.999124134036389	WITHOUT_CLASSIFICATION	8.758659636109242E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.9999999899822637	WITHOUT_CLASSIFICATION	1.0017736322861314E-8	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9998207142717287	WITHOUT_CLASSIFICATION	1.7928572827133931E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9998898390138814	WITHOUT_CLASSIFICATION	1.1016098611869696E-4	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.9999998480362438	WITHOUT_CLASSIFICATION	1.519637561905311E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.999999637020182	WITHOUT_CLASSIFICATION	3.6297981808840437E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.999999937690016	WITHOUT_CLASSIFICATION	6.230998391091014E-8	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999937968379385	WITHOUT_CLASSIFICATION	6.203162061496065E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999927360746187	WITHOUT_CLASSIFICATION	7.263925381380849E-6	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999996050965099	WITHOUT_CLASSIFICATION	3.9490349011413444E-7	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999992427116341	WITHOUT_CLASSIFICATION	7.572883659997573E-7	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999475974043	WITHOUT_CLASSIFICATION	5.2402595603048465E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999997402653211	WITHOUT_CLASSIFICATION	2.597346789285037E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9989957379525523	WITHOUT_CLASSIFICATION	0.0010042620474477223	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999481826012534	WITHOUT_CLASSIFICATION	5.181739874671218E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999983444811118	WITHOUT_CLASSIFICATION	1.6555188882036775E-6	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999161079179	WITHOUT_CLASSIFICATION	8.389208204043802E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999983738451572	WITHOUT_CLASSIFICATION	1.6261548428311785E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999968248206104	WITHOUT_CLASSIFICATION	3.175179389597924E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.999919708416934	WITHOUT_CLASSIFICATION	8.0291583065981E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.999919708416934	WITHOUT_CLASSIFICATION	8.0291583065981E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.999987860282926	WITHOUT_CLASSIFICATION	1.213971707405469E-5	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.999934541757515	WITHOUT_CLASSIFICATION	6.54582424850054E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999997757926783	WITHOUT_CLASSIFICATION	2.242073217290276E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999999462164102	WITHOUT_CLASSIFICATION	5.378358982265229E-8	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999877884229	WITHOUT_CLASSIFICATION	1.2211577011488077E-8	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9980478784616847	WITHOUT_CLASSIFICATION	0.0019521215383153123	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.999999945142133	WITHOUT_CLASSIFICATION	5.4857867072056915E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999997397166	WITHOUT_CLASSIFICATION	2.602833260091622E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999934214111615	WITHOUT_CLASSIFICATION	6.5785888384865725E-6	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999972926690492	WITHOUT_CLASSIFICATION	2.707330950655266E-6	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999932655793193	WITHOUT_CLASSIFICATION	6.734420680709862E-6	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.999999012068135	WITHOUT_CLASSIFICATION	9.879318650330484E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999911272720782	WITHOUT_CLASSIFICATION	8.872727921905357E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999427142008	WITHOUT_CLASSIFICATION	5.728579930931142E-8	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.9999942976312494	WITHOUT_CLASSIFICATION	5.702368750580503E-6	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999974143377824	WITHOUT_CLASSIFICATION	2.5856622176122364E-6	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999990978994064	WITHOUT_CLASSIFICATION	9.021005935065967E-7	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.9999993304807883	WITHOUT_CLASSIFICATION	6.69519211676217E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999397750534	WITHOUT_CLASSIFICATION	6.022494665475225E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999991374129	WITHOUT_CLASSIFICATION	8.625871454831025E-10	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999141413445148	WITHOUT_CLASSIFICATION	8.585865548518384E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999967627265474	WITHOUT_CLASSIFICATION	3.237273452670711E-6	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999989071092378	WITHOUT_CLASSIFICATION	1.0928907622148748E-6	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999824235449514	WITHOUT_CLASSIFICATION	1.7576455048714685E-5	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999968265777693	WITHOUT_CLASSIFICATION	3.173422230791253E-6	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999971397226942	WITHOUT_CLASSIFICATION	2.8602773058240336E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.999948538714424	WITHOUT_CLASSIFICATION	5.146128557595364E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999986821134499	WITHOUT_CLASSIFICATION	1.317886550075589E-6	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999999835701928	WITHOUT_CLASSIFICATION	1.642980718786271E-8	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999993868576484	WITHOUT_CLASSIFICATION	6.131423515465678E-7	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.9999996708670036	WITHOUT_CLASSIFICATION	3.29132996418393E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999918990391631	WITHOUT_CLASSIFICATION	8.100960836896677E-6	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999984806050085	WITHOUT_CLASSIFICATION	1.5193949914948218E-6	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.99999755252961	WITHOUT_CLASSIFICATION	2.447470390100073E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.999999979917547	WITHOUT_CLASSIFICATION	2.008245298432227E-8	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999993564936	WITHOUT_CLASSIFICATION	6.435063266306231E-10	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999672562541	WITHOUT_CLASSIFICATION	3.274374589393949E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999403251360911	WITHOUT_CLASSIFICATION	5.967486390895275E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998743526930554	WITHOUT_CLASSIFICATION	1.2564730694472007E-4	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999969811800369	WITHOUT_CLASSIFICATION	3.018819963086322E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999473621781	WITHOUT_CLASSIFICATION	5.263782199531956E-8	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999974592076323	WITHOUT_CLASSIFICATION	2.5407923678199125E-6	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999987192253689	WITHOUT_CLASSIFICATION	1.2807746311729138E-6	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999992238925766	WITHOUT_CLASSIFICATION	7.761074233640598E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999998289214959	WITHOUT_CLASSIFICATION	1.7107850413996658E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999992238925766	WITHOUT_CLASSIFICATION	7.761074233640598E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999935180584537	WITHOUT_CLASSIFICATION	6.481941546235328E-6	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9933788400756348	WITHOUT_CLASSIFICATION	0.006621159924365212	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999978296963928	WITHOUT_CLASSIFICATION	2.1703036071494126E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.6558546733584268	IMPLEMENTATION	0.34414532664157316	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999998049423312	WITHOUT_CLASSIFICATION	1.950576687176528E-7	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999748029409	WITHOUT_CLASSIFICATION	2.519705908702803E-8	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999997887808563	WITHOUT_CLASSIFICATION	2.11219143735717E-7	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.9999999625115914	WITHOUT_CLASSIFICATION	3.7488408625670504E-8	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999576234464801	WITHOUT_CLASSIFICATION	4.237655351983749E-5	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9995988382741227	WITHOUT_CLASSIFICATION	4.011617258774056E-4	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.9998014951490636	WITHOUT_CLASSIFICATION	1.9850485093635364E-4	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999685194713318	WITHOUT_CLASSIFICATION	3.148052866828448E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999608773623859	WITHOUT_CLASSIFICATION	3.912263761407029E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999940481690247	WITHOUT_CLASSIFICATION	5.9518309753423535E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9931494744342698	WITHOUT_CLASSIFICATION	0.006850525565730159	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9894945249528148	WITHOUT_CLASSIFICATION	0.010505475047185256	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9968268998217595	WITHOUT_CLASSIFICATION	0.003173100178240609	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999967192691	WITHOUT_CLASSIFICATION	3.28073084567007E-9	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999610194735539	WITHOUT_CLASSIFICATION	3.898052644614153E-5	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999979909646223	WITHOUT_CLASSIFICATION	2.0090353777594587E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999037100206076	WITHOUT_CLASSIFICATION	9.628997939242354E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999750915652	WITHOUT_CLASSIFICATION	2.4908434847382927E-8	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999989714874665	WITHOUT_CLASSIFICATION	1.0285125334917594E-6	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999994906082216	WITHOUT_CLASSIFICATION	5.093917784612696E-7	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999993530755107	WITHOUT_CLASSIFICATION	6.469244892987818E-7	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999797616392246	WITHOUT_CLASSIFICATION	2.0238360775417277E-5	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999908452998	WITHOUT_CLASSIFICATION	9.1547003262483E-9	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999999849886653	WITHOUT_CLASSIFICATION	1.5011334698701562E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999974330265607	WITHOUT_CLASSIFICATION	2.5669734393191705E-6	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9999692095437349	WITHOUT_CLASSIFICATION	3.0790456265073366E-5	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999966997679504	WITHOUT_CLASSIFICATION	3.3002320495488298E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999895029831607	WITHOUT_CLASSIFICATION	1.0497016839298522E-5	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999833092309304	WITHOUT_CLASSIFICATION	1.6690769069672903E-5	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.999996858387148	WITHOUT_CLASSIFICATION	3.14161285205284E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999998262076315	WITHOUT_CLASSIFICATION	1.7379236845760358E-7	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999998569744705	WITHOUT_CLASSIFICATION	1.430255295616136E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.99999999992059	WITHOUT_CLASSIFICATION	7.941005868899095E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999998649899892	WITHOUT_CLASSIFICATION	1.3501001084982313E-7	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999752459068945	WITHOUT_CLASSIFICATION	2.4754093105487445E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.999999677957126	WITHOUT_CLASSIFICATION	3.2204287399707317E-7	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999869594964902	WITHOUT_CLASSIFICATION	1.3040503509770553E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999936069612793	WITHOUT_CLASSIFICATION	6.393038720785245E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999817760374	WITHOUT_CLASSIFICATION	1.8223962559541064E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999880550425123	WITHOUT_CLASSIFICATION	1.1944957487575636E-5	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999880550425123	WITHOUT_CLASSIFICATION	1.1944957487575636E-5	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999979115457878	WITHOUT_CLASSIFICATION	2.088454212246644E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999999974702993	WITHOUT_CLASSIFICATION	2.5297007290208136E-9	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999992275682422	WITHOUT_CLASSIFICATION	7.724317578705287E-7	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999828877	WITHOUT_CLASSIFICATION	1.7112314717291262E-11	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999671	WITHOUT_CLASSIFICATION	3.2839831104649285E-14	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999994422524	WITHOUT_CLASSIFICATION	5.577475259353412E-10	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999922269898815	WITHOUT_CLASSIFICATION	7.773010118419886E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999908773841589	WITHOUT_CLASSIFICATION	9.12261584116675E-6	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999978595612915	WITHOUT_CLASSIFICATION	2.1404387083823487E-6	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999872215186	WITHOUT_CLASSIFICATION	1.2778481325673377E-8	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999997997272	WITHOUT_CLASSIFICATION	2.0027273888600601E-10	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999983236855	WITHOUT_CLASSIFICATION	1.6763145002393972E-9	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999972353849907	WITHOUT_CLASSIFICATION	2.7646150092538535E-6	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999710647993558	WITHOUT_CLASSIFICATION	2.893520064416836E-5	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999716520699	WITHOUT_CLASSIFICATION	2.8347930133082314E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9978232386481867	WITHOUT_CLASSIFICATION	0.0021767613518133386	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999239347349	WITHOUT_CLASSIFICATION	7.606526504138081E-8	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999823320731	WITHOUT_CLASSIFICATION	1.76679267973992E-8	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999998876489606	WITHOUT_CLASSIFICATION	1.1235103935438565E-7	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999997404489638	WITHOUT_CLASSIFICATION	2.5955103617298516E-7	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9999819110189938	WITHOUT_CLASSIFICATION	1.8088981006111763E-5	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9999843779466877	WITHOUT_CLASSIFICATION	1.5622053312334772E-5	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.9999843139026033	WITHOUT_CLASSIFICATION	1.568609739669895E-5	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999348892491	WITHOUT_CLASSIFICATION	6.511075090351664E-8	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999868547111	WITHOUT_CLASSIFICATION	1.3145288775335232E-8	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999976188974	WITHOUT_CLASSIFICATION	2.381102577018538E-9	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999993236692	WITHOUT_CLASSIFICATION	6.763308279241892E-10	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999993907201077	WITHOUT_CLASSIFICATION	6.092798922864574E-7	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.9999999929667138	WITHOUT_CLASSIFICATION	7.033286092753455E-9	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999999977569931	WITHOUT_CLASSIFICATION	2.2430069019149524E-9	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999669446342448	WITHOUT_CLASSIFICATION	3.3055365755207054E-5	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999978933498658	WITHOUT_CLASSIFICATION	2.1066501341735094E-6	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999996126322	WITHOUT_CLASSIFICATION	3.873678067746359E-10	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999978295388028	WITHOUT_CLASSIFICATION	2.170461197192653E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999999315097	WITHOUT_CLASSIFICATION	6.849029855819193E-11	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999948906646	WITHOUT_CLASSIFICATION	5.109335450067413E-9	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999977153980127	WITHOUT_CLASSIFICATION	2.284601987324357E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999974423277693	WITHOUT_CLASSIFICATION	2.5576722306545256E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999952037591436	WITHOUT_CLASSIFICATION	4.7962408563000876E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999974279563821	WITHOUT_CLASSIFICATION	2.572043617782707E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999993912812493	WITHOUT_CLASSIFICATION	6.087187506955337E-7	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9952743261563649	WITHOUT_CLASSIFICATION	0.004725673843635093	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9945860824426805	WITHOUT_CLASSIFICATION	0.005413917557319398	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999998442029577	WITHOUT_CLASSIFICATION	1.5579704228533387E-7	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999793873668843	WITHOUT_CLASSIFICATION	2.0612633115644954E-5	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999952080378368	WITHOUT_CLASSIFICATION	4.791962163190587E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.999987994792796	WITHOUT_CLASSIFICATION	1.200520720410942E-5	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999980907114893	WITHOUT_CLASSIFICATION	1.9092885106768527E-6	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999726656221601	WITHOUT_CLASSIFICATION	2.7334377839797986E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999320541795287	WITHOUT_CLASSIFICATION	6.794582047125589E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999899772362779	WITHOUT_CLASSIFICATION	1.0022763722000458E-5	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999994803228592	WITHOUT_CLASSIFICATION	5.196771407805081E-7	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.9999990776337171	WITHOUT_CLASSIFICATION	9.223662829276701E-7	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999988850664	WITHOUT_CLASSIFICATION	1.1149336828866075E-9	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.999998560883132	WITHOUT_CLASSIFICATION	1.4391168680057837E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9993725623966558	WITHOUT_CLASSIFICATION	6.27437603344187E-4	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999009506092	WITHOUT_CLASSIFICATION	9.904939077767737E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998958174884	WITHOUT_CLASSIFICATION	1.0418251162956194E-7	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999982031098685	WITHOUT_CLASSIFICATION	1.7968901313679748E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999386919708	WITHOUT_CLASSIFICATION	6.130802926043291E-8	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999902662719612	WITHOUT_CLASSIFICATION	9.73372803877275E-6	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999982496183499	WITHOUT_CLASSIFICATION	1.7503816501304364E-6	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999987380161	WITHOUT_CLASSIFICATION	1.2619837953967122E-9	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999949208015	WITHOUT_CLASSIFICATION	5.0791984109898496E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999267799912325	WITHOUT_CLASSIFICATION	7.32200087674216E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999985464061345	WITHOUT_CLASSIFICATION	1.4535938655048662E-6	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999919025150773	WITHOUT_CLASSIFICATION	8.097484922769722E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999642401404	WITHOUT_CLASSIFICATION	3.575985952233016E-8	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999966501390181	WITHOUT_CLASSIFICATION	3.3498609818675385E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999968105801347	WITHOUT_CLASSIFICATION	3.1894198653391735E-6	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.9999996409972963	WITHOUT_CLASSIFICATION	3.590027036996335E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9998586706678769	WITHOUT_CLASSIFICATION	1.413293321230382E-4	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999989106114134	WITHOUT_CLASSIFICATION	1.0893885865176244E-6	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.999996965641257	WITHOUT_CLASSIFICATION	3.0343587430207054E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999979010884392	WITHOUT_CLASSIFICATION	2.0989115607372E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999948914324691	WITHOUT_CLASSIFICATION	5.108567530923318E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999971908808432	WITHOUT_CLASSIFICATION	2.8091191567377013E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999976323066223	WITHOUT_CLASSIFICATION	2.3676933777039257E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999968990119072	WITHOUT_CLASSIFICATION	3.1009880927131798E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999974178884843	WITHOUT_CLASSIFICATION	2.5821115157574056E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999970568733949	WITHOUT_CLASSIFICATION	2.9431266050710153E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999976162883107	WITHOUT_CLASSIFICATION	2.383711689249522E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999960730690898	WITHOUT_CLASSIFICATION	3.9269309102911355E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999969946779312	WITHOUT_CLASSIFICATION	3.0053220688566144E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999952989355496	WITHOUT_CLASSIFICATION	4.701064450460357E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.9999959854946385	WITHOUT_CLASSIFICATION	4.014505361421271E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999952578910137	WITHOUT_CLASSIFICATION	4.742108986237473E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999948966414903	WITHOUT_CLASSIFICATION	5.1033585097814636E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.9999942507514293	WITHOUT_CLASSIFICATION	5.749248570593832E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.9999955709593623	WITHOUT_CLASSIFICATION	4.429040637751249E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999941943366727	WITHOUT_CLASSIFICATION	5.805663327264395E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999983991689531	WITHOUT_CLASSIFICATION	1.6008310470460223E-6	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999950604926013	WITHOUT_CLASSIFICATION	4.939507398641518E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999985685600367	WITHOUT_CLASSIFICATION	1.4314399633017644E-6	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9962112438070065	WITHOUT_CLASSIFICATION	0.0037887561929934588	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9994203226324753	WITHOUT_CLASSIFICATION	5.796773675247618E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999992720849004	WITHOUT_CLASSIFICATION	7.279150995859114E-7	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.9999914537549961	WITHOUT_CLASSIFICATION	8.546245003969994E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999991994271441	WITHOUT_CLASSIFICATION	8.005728559810366E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999989696336806	WITHOUT_CLASSIFICATION	1.0303663192817249E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9946105415586471	WITHOUT_CLASSIFICATION	0.0053894584413528394	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999994727651821	WITHOUT_CLASSIFICATION	5.272348178559003E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999983216807179	WITHOUT_CLASSIFICATION	1.6783192821260639E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9842867434317855	IMPLEMENTATION	0.0157132565682146	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999995003318436	WITHOUT_CLASSIFICATION	4.996681564218916E-7	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999981861892	WITHOUT_CLASSIFICATION	1.8138106498734595E-9	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999997836847263	WITHOUT_CLASSIFICATION	2.1631527376415085E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999997836847263	WITHOUT_CLASSIFICATION	2.1631527376415085E-7	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999995502285042	WITHOUT_CLASSIFICATION	4.497714958611572E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999632706168178	WITHOUT_CLASSIFICATION	3.672938318209465E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999259441	WITHOUT_CLASSIFICATION	7.405588207395092E-11	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999971516587649	WITHOUT_CLASSIFICATION	2.848341235166003E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999391279790298	WITHOUT_CLASSIFICATION	6.087202097015225E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999981850722476	WITHOUT_CLASSIFICATION	1.8149277524417673E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999992985624805	WITHOUT_CLASSIFICATION	7.014375195333145E-7	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.999993574661401	WITHOUT_CLASSIFICATION	6.425338598989275E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999880824148543	WITHOUT_CLASSIFICATION	1.1917585145647618E-5	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.9999994285090221	WITHOUT_CLASSIFICATION	5.714909778259059E-7	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9993817776419263	WITHOUT_CLASSIFICATION	6.18222358073712E-4	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.999999987265733	WITHOUT_CLASSIFICATION	1.2734267025613735E-8	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999986414191867	WITHOUT_CLASSIFICATION	1.3585808133088256E-6	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999999735620004	WITHOUT_CLASSIFICATION	2.6437999560963442E-8	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.999994297015119	WITHOUT_CLASSIFICATION	5.702984880999879E-6	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.9999937868473288	WITHOUT_CLASSIFICATION	6.21315267123516E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999474695335	WITHOUT_CLASSIFICATION	5.253046653042083E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999997285345299	WITHOUT_CLASSIFICATION	2.714654701109333E-7	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.9999539522069646	WITHOUT_CLASSIFICATION	4.604779303549053E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999915762305273	WITHOUT_CLASSIFICATION	8.42376947272008E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.9999999494199991	WITHOUT_CLASSIFICATION	5.0580000822917086E-8	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999976755896949	WITHOUT_CLASSIFICATION	2.3244103051538866E-6	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999779059112285	WITHOUT_CLASSIFICATION	2.209408877156926E-5	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999987850065263	WITHOUT_CLASSIFICATION	1.21499347367123E-6	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999906599856008	WITHOUT_CLASSIFICATION	9.340014399190899E-6	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999179595643497	WITHOUT_CLASSIFICATION	8.20404356503046E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999467792163	WITHOUT_CLASSIFICATION	5.3220783668336164E-8	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999934462244109	WITHOUT_CLASSIFICATION	6.553775589234751E-6	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999821624924032	WITHOUT_CLASSIFICATION	1.7837507596754538E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999866968141122	WITHOUT_CLASSIFICATION	1.3303185887836332E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999892862857771	WITHOUT_CLASSIFICATION	1.0713714222779588E-5	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999402420287695	WITHOUT_CLASSIFICATION	5.975797123059198E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999772070559284	WITHOUT_CLASSIFICATION	2.2792944071638086E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999925944705846	WITHOUT_CLASSIFICATION	7.405529415331228E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999981390692382	WITHOUT_CLASSIFICATION	1.8609307618256199E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999987884914748	WITHOUT_CLASSIFICATION	1.2115085252721096E-6	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999329236798	WITHOUT_CLASSIFICATION	6.707632016798448E-8	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999470150874	WITHOUT_CLASSIFICATION	5.2984912645606924E-8	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9993608833935116	WITHOUT_CLASSIFICATION	6.391166064884644E-4	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999996786592	WITHOUT_CLASSIFICATION	3.2134088795145044E-10	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9903907998757551	WITHOUT_CLASSIFICATION	0.009609200124244816	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999907461373094	WITHOUT_CLASSIFICATION	9.253862690544734E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999929806803157	WITHOUT_CLASSIFICATION	7.019319684284953E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9970354298113657	WITHOUT_CLASSIFICATION	0.0029645701886342494	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9970354298113657	WITHOUT_CLASSIFICATION	0.0029645701886342494	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999966487074	WITHOUT_CLASSIFICATION	3.3512926948224817E-9	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.9998479450483339	WITHOUT_CLASSIFICATION	1.5205495166612556E-4	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.999999546236975	WITHOUT_CLASSIFICATION	4.5376302509898387E-7	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999988725309644	WITHOUT_CLASSIFICATION	1.1274690356367013E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.9999973437932241	WITHOUT_CLASSIFICATION	2.656206775875926E-6	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999989905501431	WITHOUT_CLASSIFICATION	1.009449856970939E-6	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999984041731254	WITHOUT_CLASSIFICATION	1.5958268745924291E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9950295013415993	WITHOUT_CLASSIFICATION	0.004970498658400733	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999941344613225	WITHOUT_CLASSIFICATION	5.865538677594702E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999993068140893	WITHOUT_CLASSIFICATION	6.931859106758661E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999995037957822	WITHOUT_CLASSIFICATION	4.962042178031325E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999992182597867	WITHOUT_CLASSIFICATION	7.817402132284451E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999984647108674	WITHOUT_CLASSIFICATION	1.53528913257207E-6	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999958374896	WITHOUT_CLASSIFICATION	4.162510501319952E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.766636767524439	WITHOUT_CLASSIFICATION	0.23336323247556096	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9976869026121798	WITHOUT_CLASSIFICATION	0.002313097387820074	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999972899983114	WITHOUT_CLASSIFICATION	2.7100016886304437E-6	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999550427923	WITHOUT_CLASSIFICATION	4.4957207697842764E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9987483285909874	WITHOUT_CLASSIFICATION	0.0012516714090125543	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999979786508623	WITHOUT_CLASSIFICATION	2.0213491378539772E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999991036053565	WITHOUT_CLASSIFICATION	8.963946434169666E-7	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999991036053565	WITHOUT_CLASSIFICATION	8.963946434169666E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999987957358683	WITHOUT_CLASSIFICATION	1.2042641318013322E-6	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999979483570411	WITHOUT_CLASSIFICATION	2.051642958783387E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999966881948659	WITHOUT_CLASSIFICATION	3.311805134136868E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999455331616	WITHOUT_CLASSIFICATION	5.446683838168744E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999890910921977	WITHOUT_CLASSIFICATION	1.0908907802409731E-5	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999899841734	WITHOUT_CLASSIFICATION	1.0015826665404694E-8	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.9944929694266881	WITHOUT_CLASSIFICATION	0.005507030573311927	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999981017247724	WITHOUT_CLASSIFICATION	1.898275227630339E-6	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999980736118199	WITHOUT_CLASSIFICATION	1.9263881800935224E-6	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999993728512481	WITHOUT_CLASSIFICATION	6.27148751867141E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.999999991744674	WITHOUT_CLASSIFICATION	8.255325967121779E-9	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999823714744	WITHOUT_CLASSIFICATION	1.7628525606030212E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999986942368	WITHOUT_CLASSIFICATION	1.3057632087735872E-9	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9997682250969436	WITHOUT_CLASSIFICATION	2.3177490305636015E-4	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9998027273451827	WITHOUT_CLASSIFICATION	1.9727265481730744E-4	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.9999596232644896	WITHOUT_CLASSIFICATION	4.0376735510492905E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999767140475863	WITHOUT_CLASSIFICATION	2.3285952413740455E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999998876809368	WITHOUT_CLASSIFICATION	1.1231906316158297E-7	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999800482501485	WITHOUT_CLASSIFICATION	1.9951749851547472E-5	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999804903942322	WITHOUT_CLASSIFICATION	1.9509605767777942E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999943805191379	WITHOUT_CLASSIFICATION	5.619480862144464E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999998244745882	WITHOUT_CLASSIFICATION	1.7552541168902166E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.99999997826281	WITHOUT_CLASSIFICATION	2.173719006072821E-8	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999908452998	WITHOUT_CLASSIFICATION	9.1547003262483E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999994422524	WITHOUT_CLASSIFICATION	5.577475259353412E-10	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999968622188168	WITHOUT_CLASSIFICATION	3.137781183126433E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999480620246	WITHOUT_CLASSIFICATION	5.19379753790492E-8	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999951084607	WITHOUT_CLASSIFICATION	4.891539264829913E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999031062742	WITHOUT_CLASSIFICATION	9.689372586286298E-8	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999953964909426	WITHOUT_CLASSIFICATION	4.603509057351162E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999953964909426	WITHOUT_CLASSIFICATION	4.603509057351162E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999837340281	WITHOUT_CLASSIFICATION	1.6265971882113732E-8	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.999999987842504	WITHOUT_CLASSIFICATION	1.2157496017876005E-8	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999585488072	WITHOUT_CLASSIFICATION	4.145119285070376E-8	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.9999999949782208	WITHOUT_CLASSIFICATION	5.021779213029051E-9	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999998095628888	WITHOUT_CLASSIFICATION	1.9043711107453321E-7	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999996006383837	WITHOUT_CLASSIFICATION	3.993616163909217E-7	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999988131776982	WITHOUT_CLASSIFICATION	1.186822301705834E-6	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999991722929402	WITHOUT_CLASSIFICATION	8.277070598566188E-7	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999714855868879	WITHOUT_CLASSIFICATION	2.8514413112202217E-5	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999526471544	WITHOUT_CLASSIFICATION	4.735284568166051E-8	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999997959567754	WITHOUT_CLASSIFICATION	2.0404322456580913E-7	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999995766447893	WITHOUT_CLASSIFICATION	4.233552106889759E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.9999930123890513	WITHOUT_CLASSIFICATION	6.9876109487801564E-6	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999830934054	WITHOUT_CLASSIFICATION	1.6906594552015226E-8	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999795736126	WITHOUT_CLASSIFICATION	2.0426387446225332E-8	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999994554714307	WITHOUT_CLASSIFICATION	5.445285693737205E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995518598216	WITHOUT_CLASSIFICATION	4.48140178387264E-7	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999624843964	WITHOUT_CLASSIFICATION	3.7515603700670676E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.9999927586127026	WITHOUT_CLASSIFICATION	7.241387297341379E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.999999996200699	WITHOUT_CLASSIFICATION	3.799301002301454E-9	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999267083373	WITHOUT_CLASSIFICATION	7.32916627658563E-8	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999998137352286	WITHOUT_CLASSIFICATION	1.8626477143257657E-7	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999997314370295	WITHOUT_CLASSIFICATION	2.685629705737657E-7	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999969767972265	WITHOUT_CLASSIFICATION	3.0232027735325266E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.9999997297568676	WITHOUT_CLASSIFICATION	2.702431324330984E-7	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999998673534415	WITHOUT_CLASSIFICATION	1.326465585085161E-7	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.9999997159446429	WITHOUT_CLASSIFICATION	2.840553571680988E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999969514742	WITHOUT_CLASSIFICATION	3.04852579294013E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999977285522	WITHOUT_CLASSIFICATION	2.271447691606311E-9	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999990912964885	WITHOUT_CLASSIFICATION	9.087035115027879E-7	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.998793360060229	WITHOUT_CLASSIFICATION	0.0012066399397709442	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999874250751896	WITHOUT_CLASSIFICATION	1.2574924810384277E-5	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999994394361887	WITHOUT_CLASSIFICATION	5.605638113482634E-7	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999914157431418	WITHOUT_CLASSIFICATION	8.584256858304755E-6	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.9999938663847966	WITHOUT_CLASSIFICATION	6.133615203312627E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9988466747846954	WITHOUT_CLASSIFICATION	0.0011533252153045782	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.999996821075332	WITHOUT_CLASSIFICATION	3.1789246679754105E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999834733816642	WITHOUT_CLASSIFICATION	1.6526618335878374E-5	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.9999998816448274	WITHOUT_CLASSIFICATION	1.1835517260079899E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999934654930407	WITHOUT_CLASSIFICATION	6.5345069592467E-6	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999929775384	WITHOUT_CLASSIFICATION	7.022461642467823E-9	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999998057642487	WITHOUT_CLASSIFICATION	1.942357513258339E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999966492355503	WITHOUT_CLASSIFICATION	3.350764449628085E-6	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999987754598768	WITHOUT_CLASSIFICATION	1.224540123171061E-6	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999948415133667	WITHOUT_CLASSIFICATION	5.1584866333742945E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999925866999461	WITHOUT_CLASSIFICATION	7.413300053884965E-6	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999996506408052	WITHOUT_CLASSIFICATION	3.493591947766692E-7	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999966453433461	WITHOUT_CLASSIFICATION	3.3546566538621906E-6	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.999976830172406	WITHOUT_CLASSIFICATION	2.3169827593950507E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999790992641681	WITHOUT_CLASSIFICATION	2.0900735831923144E-5	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999987117168341	WITHOUT_CLASSIFICATION	1.2882831658393227E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.999998743574731	WITHOUT_CLASSIFICATION	1.256425269091133E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999992010360476	WITHOUT_CLASSIFICATION	7.989639523919208E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999956326957389	WITHOUT_CLASSIFICATION	4.367304261074138E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999983868288835	WITHOUT_CLASSIFICATION	1.613171116542327E-6	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999898622625529	WITHOUT_CLASSIFICATION	1.0137737447031691E-5	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999833212638262	WITHOUT_CLASSIFICATION	1.667873617387504E-5	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.9999999805963006	WITHOUT_CLASSIFICATION	1.9403699427815503E-8	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999975582268938	WITHOUT_CLASSIFICATION	2.441773106230924E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999534337964	WITHOUT_CLASSIFICATION	4.6566203477939184E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999901012481058	WITHOUT_CLASSIFICATION	9.898751894204266E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999987117168341	WITHOUT_CLASSIFICATION	1.2882831658393227E-6	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.999992010360476	WITHOUT_CLASSIFICATION	7.989639523919208E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.999998743574731	WITHOUT_CLASSIFICATION	1.256425269091133E-6	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999962395302839	WITHOUT_CLASSIFICATION	3.7604697161005476E-6	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999962257186126	WITHOUT_CLASSIFICATION	3.774281387503477E-6	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999958339291568	WITHOUT_CLASSIFICATION	4.166070843221841E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999965637928547	WITHOUT_CLASSIFICATION	3.436207145384741E-6	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9998987858150463	WITHOUT_CLASSIFICATION	1.0121418495365211E-4	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999957335098639	WITHOUT_CLASSIFICATION	4.266490136137005E-6	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999960316079429	WITHOUT_CLASSIFICATION	3.96839205708264E-6	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999975263553357	WITHOUT_CLASSIFICATION	2.4736446643894926E-6	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999874598126867	WITHOUT_CLASSIFICATION	1.2540187313250011E-5	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999997527934977	WITHOUT_CLASSIFICATION	2.4720650228741376E-7	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.999999312713535	WITHOUT_CLASSIFICATION	6.872864648879417E-7	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999909996648372	WITHOUT_CLASSIFICATION	9.000335162781765E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999937161874268	WITHOUT_CLASSIFICATION	6.2838125732376025E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999957185926497	WITHOUT_CLASSIFICATION	4.281407350423059E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999991888098299	WITHOUT_CLASSIFICATION	8.111901701001307E-7	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999998615067544	WITHOUT_CLASSIFICATION	1.3849324562011458E-7	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.999987267838633	WITHOUT_CLASSIFICATION	1.2732161366977217E-5	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999954391496803	WITHOUT_CLASSIFICATION	4.5608503197826615E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999954391496803	WITHOUT_CLASSIFICATION	4.5608503197826615E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999694592558994	WITHOUT_CLASSIFICATION	3.0540744100677974E-5	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999136243939	WITHOUT_CLASSIFICATION	8.637560610890651E-8	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.9999999624775874	WITHOUT_CLASSIFICATION	3.7522412641394665E-8	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999742409046668	WITHOUT_CLASSIFICATION	2.5759095333172344E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.999936445573049	WITHOUT_CLASSIFICATION	6.355442695107598E-5	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999925020822	WITHOUT_CLASSIFICATION	7.497917832261434E-9	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999994179207253	WITHOUT_CLASSIFICATION	5.820792746796979E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999998082633206	WITHOUT_CLASSIFICATION	1.9173667945030214E-7	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.999991043245043	WITHOUT_CLASSIFICATION	8.956754957038898E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999603688973	WITHOUT_CLASSIFICATION	3.963110272778595E-8	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999956749093	WITHOUT_CLASSIFICATION	4.32509075489118E-9	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999837350072823	WITHOUT_CLASSIFICATION	1.6264992717618987E-5	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999983721042673	WITHOUT_CLASSIFICATION	1.6278957327621635E-6	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999824598648839	WITHOUT_CLASSIFICATION	1.7540135116038897E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9851585884607721	WITHOUT_CLASSIFICATION	0.014841411539227977	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999992611878098	WITHOUT_CLASSIFICATION	7.388121902562483E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999963135443711	WITHOUT_CLASSIFICATION	3.686455628749476E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999839211322266	WITHOUT_CLASSIFICATION	1.6078867773452834E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999839211322266	WITHOUT_CLASSIFICATION	1.6078867773452834E-5	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999995610287404	WITHOUT_CLASSIFICATION	4.3897125965606453E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999997050908801	WITHOUT_CLASSIFICATION	2.9490911991920367E-7	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999997860289623	WITHOUT_CLASSIFICATION	2.1397103755511986E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999885383062352	WITHOUT_CLASSIFICATION	1.1461693764655886E-5	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999997678229081	WITHOUT_CLASSIFICATION	2.321770919678444E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999839211322266	WITHOUT_CLASSIFICATION	1.6078867773452834E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999839211322266	WITHOUT_CLASSIFICATION	1.6078867773452834E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996083055864	WITHOUT_CLASSIFICATION	3.916944136105512E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996083055864	WITHOUT_CLASSIFICATION	3.916944136105512E-7	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.999999884496235	WITHOUT_CLASSIFICATION	1.1550376497679013E-7	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999865371187894	WITHOUT_CLASSIFICATION	1.3462881210644159E-5	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999719288607	WITHOUT_CLASSIFICATION	2.807113927696053E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999599731237	WITHOUT_CLASSIFICATION	4.002687623999236E-8	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999972307636109	WITHOUT_CLASSIFICATION	2.7692363890503373E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999972307636109	WITHOUT_CLASSIFICATION	2.7692363890503373E-6	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999994704047602	WITHOUT_CLASSIFICATION	5.295952398077417E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992579281746	WITHOUT_CLASSIFICATION	7.420718253735556E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996824196233	WITHOUT_CLASSIFICATION	3.1758037668077923E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998278788987386	WITHOUT_CLASSIFICATION	1.7212110126146266E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995823560495	WITHOUT_CLASSIFICATION	4.176439504962826E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999833743198	WITHOUT_CLASSIFICATION	1.6625680156645863E-8	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9990917430346552	WITHOUT_CLASSIFICATION	9.082569653446946E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999997511177893	WITHOUT_CLASSIFICATION	2.488822108071085E-7	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999905000974	WITHOUT_CLASSIFICATION	9.499902623245345E-9	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999901646358	WITHOUT_CLASSIFICATION	9.835364218652415E-9	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.9990710906834183	WITHOUT_CLASSIFICATION	9.289093165818394E-4	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999998222566265	WITHOUT_CLASSIFICATION	1.7774337349319736E-7	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999963811899942	WITHOUT_CLASSIFICATION	3.6188100058901797E-6	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999868062223	WITHOUT_CLASSIFICATION	1.3193777743944676E-8	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999992611878098	WITHOUT_CLASSIFICATION	7.388121902562483E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999839211322266	WITHOUT_CLASSIFICATION	1.6078867773452834E-5	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996083055864	WITHOUT_CLASSIFICATION	3.916944136105512E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999833743198	WITHOUT_CLASSIFICATION	1.6625680156645863E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999907611928	WITHOUT_CLASSIFICATION	9.238807126672484E-9	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999907611928	WITHOUT_CLASSIFICATION	9.238807126672484E-9	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999992388419738	WITHOUT_CLASSIFICATION	7.611580261223562E-7	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999990127425	WITHOUT_CLASSIFICATION	9.872574774262018E-10	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.9999999532959263	WITHOUT_CLASSIFICATION	4.6704073684468954E-8	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999822721372	WITHOUT_CLASSIFICATION	1.772786283392359E-8	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.9999997877667737	WITHOUT_CLASSIFICATION	2.122332263436457E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.999999929052715	WITHOUT_CLASSIFICATION	7.094728496651359E-8	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999921776980579	WITHOUT_CLASSIFICATION	7.822301942176947E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999936263326418	WITHOUT_CLASSIFICATION	6.37366735816654E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999976278092	WITHOUT_CLASSIFICATION	2.3721908444543187E-9	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999952177412088	WITHOUT_CLASSIFICATION	4.782258791227906E-6	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9998389222643187	WITHOUT_CLASSIFICATION	1.6107773568133842E-4	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999998378350354	WITHOUT_CLASSIFICATION	1.621649645313198E-7	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999998653739253	WITHOUT_CLASSIFICATION	1.3462607471450022E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999963135443711	WITHOUT_CLASSIFICATION	3.686455628749476E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996083055864	WITHOUT_CLASSIFICATION	3.916944136105512E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992579281746	WITHOUT_CLASSIFICATION	7.420718253735556E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996824196233	WITHOUT_CLASSIFICATION	3.1758037668077923E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996824196233	WITHOUT_CLASSIFICATION	3.1758037668077923E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995823560495	WITHOUT_CLASSIFICATION	4.176439504962826E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999833743198	WITHOUT_CLASSIFICATION	1.6625680156645863E-8	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999833743198	WITHOUT_CLASSIFICATION	1.6625680156645863E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999907611928	WITHOUT_CLASSIFICATION	9.238807126672484E-9	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999713894690743	WITHOUT_CLASSIFICATION	2.8610530925762676E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.9999994469519777	WITHOUT_CLASSIFICATION	5.530480222443627E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999914689	WITHOUT_CLASSIFICATION	8.531080033563236E-12	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999073841525705	WITHOUT_CLASSIFICATION	9.261584742948908E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999904642245835	WITHOUT_CLASSIFICATION	9.535775416546955E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999324583853344	WITHOUT_CLASSIFICATION	6.754161466565524E-5	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999982635998315	WITHOUT_CLASSIFICATION	1.7364001685454746E-6	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999997159046128	WITHOUT_CLASSIFICATION	2.840953872077951E-7	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999994891223787	WITHOUT_CLASSIFICATION	5.108776212992437E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992579281746	WITHOUT_CLASSIFICATION	7.420718253735556E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996824196233	WITHOUT_CLASSIFICATION	3.1758037668077923E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999996824196233	WITHOUT_CLASSIFICATION	3.1758037668077923E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995823560495	WITHOUT_CLASSIFICATION	4.176439504962826E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.9999936263326418	WITHOUT_CLASSIFICATION	6.37366735816654E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999952177412088	WITHOUT_CLASSIFICATION	4.782258791227906E-6	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9994604951016428	WITHOUT_CLASSIFICATION	5.395048983572046E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999918802527729	WITHOUT_CLASSIFICATION	8.119747227273173E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.999977240666691	WITHOUT_CLASSIFICATION	2.275933330888843E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.999977240666691	WITHOUT_CLASSIFICATION	2.275933330888843E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999959638948941	WITHOUT_CLASSIFICATION	4.036105105874064E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999997620685681	WITHOUT_CLASSIFICATION	2.3793143190864834E-7	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999997780221929	WITHOUT_CLASSIFICATION	2.2197780718918769E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999828746460783	WITHOUT_CLASSIFICATION	1.7125353921780893E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999886353835016	WITHOUT_CLASSIFICATION	1.136461649853419E-5	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999886353835016	WITHOUT_CLASSIFICATION	1.136461649853419E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999871699993558	WITHOUT_CLASSIFICATION	1.2830000644228288E-5	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999871699993558	WITHOUT_CLASSIFICATION	1.2830000644228288E-5	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999962874800474	WITHOUT_CLASSIFICATION	3.712519952608327E-6	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999962874800474	WITHOUT_CLASSIFICATION	3.712519952608327E-6	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999998260383873	WITHOUT_CLASSIFICATION	1.7396161260772767E-7	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999962026473094	WITHOUT_CLASSIFICATION	3.7973526906219957E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999997766677607	WITHOUT_CLASSIFICATION	2.2333223937584363E-7	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999997823570521	WITHOUT_CLASSIFICATION	2.1764294794935064E-7	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999754276575912	WITHOUT_CLASSIFICATION	2.457234240888967E-5	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999995970866353	WITHOUT_CLASSIFICATION	4.029133645630903E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999923752611175	WITHOUT_CLASSIFICATION	7.624738882499906E-6	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999830266937495	WITHOUT_CLASSIFICATION	1.697330625057323E-5	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999965307133779	WITHOUT_CLASSIFICATION	3.469286622070881E-6	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999858272426	WITHOUT_CLASSIFICATION	1.4172757494241618E-8	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.998554944282505	WITHOUT_CLASSIFICATION	0.0014450557174949298	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.9999975710245304	WITHOUT_CLASSIFICATION	2.428975469683164E-6	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999998648933425	WITHOUT_CLASSIFICATION	1.3510665744413314E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999970712867847	WITHOUT_CLASSIFICATION	2.9287132152302233E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999970712867847	WITHOUT_CLASSIFICATION	2.9287132152302233E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.999999937809541	WITHOUT_CLASSIFICATION	6.219045904951849E-8	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.9999999899841734	WITHOUT_CLASSIFICATION	1.0015826665404694E-8	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.9999767712768428	WITHOUT_CLASSIFICATION	2.3228723157254245E-5	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999964177493	WITHOUT_CLASSIFICATION	3.5822506435401627E-9	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999792649665	WITHOUT_CLASSIFICATION	2.073503350189361E-8	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9984834390057314	WITHOUT_CLASSIFICATION	0.001516560994268541	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999986821990928	WITHOUT_CLASSIFICATION	1.3178009071026993E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998951426711	WITHOUT_CLASSIFICATION	1.0485732889529158E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999993147758243	WITHOUT_CLASSIFICATION	6.852241758089087E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999998850430185	WITHOUT_CLASSIFICATION	1.1495698161208133E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.99999938425183	WITHOUT_CLASSIFICATION	6.157481700542043E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.999699986015371	WITHOUT_CLASSIFICATION	3.000139846290255E-4	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999981903772026	WITHOUT_CLASSIFICATION	1.8096227973835988E-6	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.9999812748529984	WITHOUT_CLASSIFICATION	1.8725147001598717E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.9999974265900667	WITHOUT_CLASSIFICATION	2.5734099332687273E-6	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999995499596941	WITHOUT_CLASSIFICATION	4.5004030588963883E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999868274568087	WITHOUT_CLASSIFICATION	1.31725431913893E-5	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999969717332426	WITHOUT_CLASSIFICATION	3.02826675728889E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999980628911	WITHOUT_CLASSIFICATION	1.9371089569484518E-9	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999980628911	WITHOUT_CLASSIFICATION	1.9371089569484518E-9	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999952164690942	WITHOUT_CLASSIFICATION	4.783530905866646E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999879496878	WITHOUT_CLASSIFICATION	1.2050312129589786E-8	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999687593978912	WITHOUT_CLASSIFICATION	3.124060210885768E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999687593978912	WITHOUT_CLASSIFICATION	3.124060210885768E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9998922925240505	WITHOUT_CLASSIFICATION	1.0770747594949709E-4	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999775291012	WITHOUT_CLASSIFICATION	2.2470898833809003E-8	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999988003852669	WITHOUT_CLASSIFICATION	1.1996147331268064E-6	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999434311312	WITHOUT_CLASSIFICATION	5.656886875248104E-8	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999219955035	WITHOUT_CLASSIFICATION	7.800449650797896E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999998357731885	WITHOUT_CLASSIFICATION	1.642268114968698E-7	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.9999998357731885	WITHOUT_CLASSIFICATION	1.642268114968698E-7	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999990715166984	WITHOUT_CLASSIFICATION	9.284833017058763E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999414976078	WITHOUT_CLASSIFICATION	5.850239223627576E-8	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999985833084286	WITHOUT_CLASSIFICATION	1.4166915714946528E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999724920392	WITHOUT_CLASSIFICATION	2.7507960737234962E-8	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999879496878	WITHOUT_CLASSIFICATION	1.2050312129589786E-8	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999998479209709	WITHOUT_CLASSIFICATION	1.520790291610017E-7	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999834130019	WITHOUT_CLASSIFICATION	1.6586998109994373E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999834130019	WITHOUT_CLASSIFICATION	1.6586998109994373E-8	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999970007813399	WITHOUT_CLASSIFICATION	2.9992186601073223E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999952813453	WITHOUT_CLASSIFICATION	4.718654657543491E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999952813453	WITHOUT_CLASSIFICATION	4.718654657543491E-9	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999479190918265	WITHOUT_CLASSIFICATION	5.208090817355145E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999479190918265	WITHOUT_CLASSIFICATION	5.208090817355145E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999479190918265	WITHOUT_CLASSIFICATION	5.208090817355145E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999952813453	WITHOUT_CLASSIFICATION	4.718654657543491E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999952813453	WITHOUT_CLASSIFICATION	4.718654657543491E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999970007813399	WITHOUT_CLASSIFICATION	2.9992186601073223E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.9999997653461922	WITHOUT_CLASSIFICATION	2.3465380778892526E-7	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999991767629317	WITHOUT_CLASSIFICATION	8.232370684072846E-7	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999529485640146	WITHOUT_CLASSIFICATION	4.705143598532038E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999778213860946	WITHOUT_CLASSIFICATION	2.217861390545484E-5	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.9999999351252833	WITHOUT_CLASSIFICATION	6.487471667845037E-8	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9992462939321269	WITHOUT_CLASSIFICATION	7.537060678730834E-4	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999998325669475	WITHOUT_CLASSIFICATION	1.674330525015884E-7	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999998979254842	WITHOUT_CLASSIFICATION	1.0207451581559031E-7	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.99999938425183	WITHOUT_CLASSIFICATION	6.157481700542043E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999952813453	WITHOUT_CLASSIFICATION	4.718654657543491E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999952813453	WITHOUT_CLASSIFICATION	4.718654657543491E-9	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999919822049	WITHOUT_CLASSIFICATION	8.017794989215486E-9	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999677562079713	WITHOUT_CLASSIFICATION	3.224379202875789E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999997181247888	WITHOUT_CLASSIFICATION	2.8187521121358907E-7	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999897510259	WITHOUT_CLASSIFICATION	1.0248974059214844E-8	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999654241900494	WITHOUT_CLASSIFICATION	3.4575809950586E-5	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999840993224473	WITHOUT_CLASSIFICATION	1.5900677552749746E-5	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999913907994	WITHOUT_CLASSIFICATION	8.609200510741622E-9	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999939879883203	WITHOUT_CLASSIFICATION	6.012011679734117E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999981358917788	WITHOUT_CLASSIFICATION	1.864108221183868E-6	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999791825203	WITHOUT_CLASSIFICATION	2.0817479822623272E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999676411091577	WITHOUT_CLASSIFICATION	3.235889084226011E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999998661139131	WITHOUT_CLASSIFICATION	1.3388608694592826E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999962143487127	WITHOUT_CLASSIFICATION	3.785651287368964E-6	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997587312202	WITHOUT_CLASSIFICATION	2.412687798200196E-7	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999992106760646	WITHOUT_CLASSIFICATION	7.893239353710825E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999994933461609	WITHOUT_CLASSIFICATION	5.066538390252359E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999994933461609	WITHOUT_CLASSIFICATION	5.066538390252359E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999994933461609	WITHOUT_CLASSIFICATION	5.066538390252359E-7	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999988803110058	WITHOUT_CLASSIFICATION	1.119688994136171E-6	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999998642354949	WITHOUT_CLASSIFICATION	1.3576450497994292E-7	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999997409539503	WITHOUT_CLASSIFICATION	2.590460496738381E-7	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999983677093872	WITHOUT_CLASSIFICATION	1.6322906127163521E-6	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999880211813653	WITHOUT_CLASSIFICATION	1.1978818634649878E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.9999981651137378	WITHOUT_CLASSIFICATION	1.8348862621797543E-6	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999995775567	WITHOUT_CLASSIFICATION	4.2244328386013177E-10	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999964813732313	WITHOUT_CLASSIFICATION	3.5186267687792807E-6	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999102614294	WITHOUT_CLASSIFICATION	8.97385705247149E-8	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999995855117243	WITHOUT_CLASSIFICATION	4.1448827568290516E-7	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9995454088214767	WITHOUT_CLASSIFICATION	4.5459117852332423E-4	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999812613229755	WITHOUT_CLASSIFICATION	1.8738677024489485E-5	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.9999990715166984	WITHOUT_CLASSIFICATION	9.284833017058763E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999952813453	WITHOUT_CLASSIFICATION	4.718654657543491E-9	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999952813453	WITHOUT_CLASSIFICATION	4.718654657543491E-9	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.999970007813399	WITHOUT_CLASSIFICATION	2.9992186601073223E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9992462939321269	WITHOUT_CLASSIFICATION	7.537060678730834E-4	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999677562079713	WITHOUT_CLASSIFICATION	3.224379202875789E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999897510259	WITHOUT_CLASSIFICATION	1.0248974059214844E-8	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999840993224473	WITHOUT_CLASSIFICATION	1.5900677552749746E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999997181247888	WITHOUT_CLASSIFICATION	2.8187521121358907E-7	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999913907994	WITHOUT_CLASSIFICATION	8.609200510741622E-9	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999791825203	WITHOUT_CLASSIFICATION	2.0817479822623272E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999981358917788	WITHOUT_CLASSIFICATION	1.864108221183868E-6	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999998661139131	WITHOUT_CLASSIFICATION	1.3388608694592826E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.9999798992901582	WITHOUT_CLASSIFICATION	2.01007098417777E-5	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.9999997188292915	WITHOUT_CLASSIFICATION	2.8117070849841896E-7	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999607446515558	WITHOUT_CLASSIFICATION	3.925534844414153E-5	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999998066135481	WITHOUT_CLASSIFICATION	1.9338645174256827E-7	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999995739804337	WITHOUT_CLASSIFICATION	4.2601956621709615E-7	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999987123889276	WITHOUT_CLASSIFICATION	1.2876110725080702E-6	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.999999101095223	WITHOUT_CLASSIFICATION	8.989047770340069E-7	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999997509017522	WITHOUT_CLASSIFICATION	2.49098247788329E-7	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.9999989902682275	WITHOUT_CLASSIFICATION	1.0097317725054084E-6	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999914173653766	WITHOUT_CLASSIFICATION	8.582634623536832E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999906737834973	WITHOUT_CLASSIFICATION	9.326216502631293E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995963978553	WITHOUT_CLASSIFICATION	4.0360214471855444E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999958889283	WITHOUT_CLASSIFICATION	4.111071657771583E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999883079738	WITHOUT_CLASSIFICATION	1.1692026132030675E-8	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999797826546	WITHOUT_CLASSIFICATION	2.0217345382038007E-8	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999934622247	WITHOUT_CLASSIFICATION	6.537775372808622E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999121110533	WITHOUT_CLASSIFICATION	8.78889465890569E-8	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.9999977792017278	WITHOUT_CLASSIFICATION	2.220798272162912E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999989839877171	WITHOUT_CLASSIFICATION	1.0160122828789743E-6	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999983481542553	WITHOUT_CLASSIFICATION	1.6518457448121743E-6	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9996700569722224	WITHOUT_CLASSIFICATION	3.299430277776596E-4	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999885490894	WITHOUT_CLASSIFICATION	1.1450910603545613E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999885490894	WITHOUT_CLASSIFICATION	1.1450910603545613E-8	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999998863093597	WITHOUT_CLASSIFICATION	1.1369064027560812E-7	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999448057868893	WITHOUT_CLASSIFICATION	5.519421311069228E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999729769744271	WITHOUT_CLASSIFICATION	2.7023025572905422E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999729769744271	WITHOUT_CLASSIFICATION	2.7023025572905422E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999729769744271	WITHOUT_CLASSIFICATION	2.7023025572905422E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999420865588038	WITHOUT_CLASSIFICATION	5.791344119630642E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999420865588038	WITHOUT_CLASSIFICATION	5.791344119630642E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999697943911128	WITHOUT_CLASSIFICATION	3.0205608887257427E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999792907472476	WITHOUT_CLASSIFICATION	2.0709252752477172E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.999448057868893	WITHOUT_CLASSIFICATION	5.519421311069228E-4	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994332866161	WITHOUT_CLASSIFICATION	5.667133838788443E-7	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999729769744271	WITHOUT_CLASSIFICATION	2.7023025572905422E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999729769744271	WITHOUT_CLASSIFICATION	2.7023025572905422E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999420865588038	WITHOUT_CLASSIFICATION	5.791344119630642E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999792907472476	WITHOUT_CLASSIFICATION	2.0709252752477172E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999772087424461	WITHOUT_CLASSIFICATION	2.2791257553926295E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999772087424461	WITHOUT_CLASSIFICATION	2.2791257553926295E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999891757364	WITHOUT_CLASSIFICATION	1.0824263486237344E-8	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999891757364	WITHOUT_CLASSIFICATION	1.0824263486237344E-8	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999990928468658	WITHOUT_CLASSIFICATION	9.071531340712264E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999990928468658	WITHOUT_CLASSIFICATION	9.071531340712264E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999742093643076	WITHOUT_CLASSIFICATION	2.5790635692402213E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999913431351316	WITHOUT_CLASSIFICATION	8.656864868399526E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999913431351316	WITHOUT_CLASSIFICATION	8.656864868399526E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999916967294359	WITHOUT_CLASSIFICATION	8.303270564052794E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999916967294359	WITHOUT_CLASSIFICATION	8.303270564052794E-6	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999980110427	WITHOUT_CLASSIFICATION	1.9889572607932024E-9	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999946575180746	WITHOUT_CLASSIFICATION	5.342481925370897E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999946575180746	WITHOUT_CLASSIFICATION	5.342481925370897E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999986638214305	WITHOUT_CLASSIFICATION	1.3361785693798037E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999895776184373	WITHOUT_CLASSIFICATION	1.0422381562680175E-5	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999997027648614	WITHOUT_CLASSIFICATION	2.9723513863599005E-7	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999986638214305	WITHOUT_CLASSIFICATION	1.3361785693798037E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999957846711	WITHOUT_CLASSIFICATION	4.2153288928367985E-9	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999997414463932	WITHOUT_CLASSIFICATION	2.5855360681478187E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999997414463932	WITHOUT_CLASSIFICATION	2.5855360681478187E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999997414463932	WITHOUT_CLASSIFICATION	2.5855360681478187E-6	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999996991237979	WITHOUT_CLASSIFICATION	3.008762019662409E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.999999914470842	WITHOUT_CLASSIFICATION	8.552915793631474E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999997268651447	WITHOUT_CLASSIFICATION	2.731348552561768E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999997268651447	WITHOUT_CLASSIFICATION	2.731348552561768E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997667638302	WITHOUT_CLASSIFICATION	2.3323616978588288E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999991920503862	WITHOUT_CLASSIFICATION	8.079496138215523E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999950881144	WITHOUT_CLASSIFICATION	4.9118855769916374E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999748545989	WITHOUT_CLASSIFICATION	2.514540097852585E-8	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999234902864	WITHOUT_CLASSIFICATION	7.65097136242862E-8	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999987709818176	WITHOUT_CLASSIFICATION	1.2290181824560344E-6	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999987709818176	WITHOUT_CLASSIFICATION	1.2290181824560344E-6	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998818804151978	WITHOUT_CLASSIFICATION	1.18119584802229E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999633832039175	WITHOUT_CLASSIFICATION	3.6616796082512976E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999633832039175	WITHOUT_CLASSIFICATION	3.6616796082512976E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.999997414463932	WITHOUT_CLASSIFICATION	2.5855360681478187E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.999999914470842	WITHOUT_CLASSIFICATION	8.552915793631474E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999997268651447	WITHOUT_CLASSIFICATION	2.731348552561768E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999997667638302	WITHOUT_CLASSIFICATION	2.3323616978588288E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999991920503862	WITHOUT_CLASSIFICATION	8.079496138215523E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.9999999950881144	WITHOUT_CLASSIFICATION	4.9118855769916374E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999748545989	WITHOUT_CLASSIFICATION	2.514540097852585E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999633832039175	WITHOUT_CLASSIFICATION	3.6616796082512976E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999702722748	WITHOUT_CLASSIFICATION	2.9727725223865142E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999990872487678	WITHOUT_CLASSIFICATION	9.12751232227317E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999996057198822	WITHOUT_CLASSIFICATION	3.9428011776046434E-7	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999993891219057	WITHOUT_CLASSIFICATION	6.108780942543506E-7	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999202356945	WITHOUT_CLASSIFICATION	7.976430553373851E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999950250589	WITHOUT_CLASSIFICATION	4.974941162108178E-9	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999992250283735	WITHOUT_CLASSIFICATION	7.749716265507436E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999992250283735	WITHOUT_CLASSIFICATION	7.749716265507436E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999995629273881	WITHOUT_CLASSIFICATION	4.370726119659929E-7	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999998692767935	WITHOUT_CLASSIFICATION	1.3072320648704464E-7	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999999761242035	WITHOUT_CLASSIFICATION	2.3875796480723818E-8	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.9999999196757996	WITHOUT_CLASSIFICATION	8.03242003760757E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999997999857532	WITHOUT_CLASSIFICATION	2.0001424679826325E-7	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999997999857532	WITHOUT_CLASSIFICATION	2.0001424679826325E-7	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999998824823939	WITHOUT_CLASSIFICATION	1.1751760612272115E-7	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999887848302	WITHOUT_CLASSIFICATION	1.121516967126144E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999960262214	WITHOUT_CLASSIFICATION	3.973778603624813E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.999999960262214	WITHOUT_CLASSIFICATION	3.973778603624813E-8	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999999154245962	WITHOUT_CLASSIFICATION	8.45754037897759E-8	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999925545523697	WITHOUT_CLASSIFICATION	7.44544763034398E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.9999999234902864	WITHOUT_CLASSIFICATION	7.65097136242862E-8	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999983674650921	WITHOUT_CLASSIFICATION	1.6325349079616189E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999801112608	WITHOUT_CLASSIFICATION	1.9888739293195478E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999998591533729	WITHOUT_CLASSIFICATION	1.4084662723301655E-7	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999955156201	WITHOUT_CLASSIFICATION	4.484379870113512E-9	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999998412867253	WITHOUT_CLASSIFICATION	1.5871327473316E-7	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999635283137399	WITHOUT_CLASSIFICATION	3.647168626012753E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.999999975635367	WITHOUT_CLASSIFICATION	2.4364633033608804E-8	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999995851634803	WITHOUT_CLASSIFICATION	4.148365196594131E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999981870277949	WITHOUT_CLASSIFICATION	1.8129722051555808E-6	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999981870277949	WITHOUT_CLASSIFICATION	1.8129722051555808E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999982298485587	WITHOUT_CLASSIFICATION	1.7701514413666921E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999982298485587	WITHOUT_CLASSIFICATION	1.7701514413666921E-6	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999461932584	WITHOUT_CLASSIFICATION	5.380674153502079E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999992580566294	WITHOUT_CLASSIFICATION	7.419433704962785E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999992580566294	WITHOUT_CLASSIFICATION	7.419433704962785E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999992580566294	WITHOUT_CLASSIFICATION	7.419433704962785E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999034852353039	WITHOUT_CLASSIFICATION	9.651476469616632E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999034852353039	WITHOUT_CLASSIFICATION	9.651476469616632E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997899371253	WITHOUT_CLASSIFICATION	2.1006287460843633E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999799186420757	WITHOUT_CLASSIFICATION	2.008135792431054E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999951169972419	WITHOUT_CLASSIFICATION	4.883002758116421E-6	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999954207944908	WITHOUT_CLASSIFICATION	4.579205509315849E-6	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999933009399115	WITHOUT_CLASSIFICATION	6.6990600885397514E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9993208774365993	WITHOUT_CLASSIFICATION	6.791225634007273E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999755546284	WITHOUT_CLASSIFICATION	2.4445371628547843E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999958889283	WITHOUT_CLASSIFICATION	4.111071657771583E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999958889283	WITHOUT_CLASSIFICATION	4.111071657771583E-9	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999997899371253	WITHOUT_CLASSIFICATION	2.1006287460843633E-7	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999995452075184	WITHOUT_CLASSIFICATION	4.547924816006416E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999799186420757	WITHOUT_CLASSIFICATION	2.008135792431054E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.9999951169972419	WITHOUT_CLASSIFICATION	4.883002758116421E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999928398393936	WITHOUT_CLASSIFICATION	7.160160606485311E-6	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999973942174045	WITHOUT_CLASSIFICATION	2.605782595601035E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995888917563	WITHOUT_CLASSIFICATION	4.1110824372136795E-7	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.999967061833921	WITHOUT_CLASSIFICATION	3.293816607899237E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.9999597901656352	WITHOUT_CLASSIFICATION	4.0209834364833356E-5	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999865039934	WITHOUT_CLASSIFICATION	1.3496006584186536E-8	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999987568851875	WITHOUT_CLASSIFICATION	1.2431148125694964E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999928398393936	WITHOUT_CLASSIFICATION	7.160160606485311E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999905060524	WITHOUT_CLASSIFICATION	9.493947608247342E-9	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999905060524	WITHOUT_CLASSIFICATION	9.493947608247342E-9	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999998547111685	WITHOUT_CLASSIFICATION	1.452888314964212E-7	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.999998750815642	WITHOUT_CLASSIFICATION	1.249184358020387E-6	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999977307591481	WITHOUT_CLASSIFICATION	2.2692408518418075E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999970449373516	WITHOUT_CLASSIFICATION	2.9550626482919688E-6	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999994995984931	WITHOUT_CLASSIFICATION	5.004015069364249E-7	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999981103575591	WITHOUT_CLASSIFICATION	1.8896424408730145E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999777905731753	WITHOUT_CLASSIFICATION	2.220942682475472E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999976359902548	WITHOUT_CLASSIFICATION	2.364009745171287E-6	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999998642334045	WITHOUT_CLASSIFICATION	1.357665954663321E-7	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.9999992330985583	WITHOUT_CLASSIFICATION	7.669014416792817E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999968393712686	WITHOUT_CLASSIFICATION	3.1606287315197373E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999970449373516	WITHOUT_CLASSIFICATION	2.9550626482919688E-6	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.9999994995984931	WITHOUT_CLASSIFICATION	5.004015069364249E-7	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.999999222818823	WITHOUT_CLASSIFICATION	7.771811769524559E-7	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999990766134413	WITHOUT_CLASSIFICATION	9.233865587067867E-7	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.9999999994324873	WITHOUT_CLASSIFICATION	5.675126856886329E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999971868337763	WITHOUT_CLASSIFICATION	2.813166223807655E-6	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.9999999671204146	WITHOUT_CLASSIFICATION	3.287958537373224E-8	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999997285584272	WITHOUT_CLASSIFICATION	2.7144157280600483E-7	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999819657037198	WITHOUT_CLASSIFICATION	1.8034296280231947E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999872441496346	WITHOUT_CLASSIFICATION	1.2755850365482962E-5	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999978370762546	WITHOUT_CLASSIFICATION	2.1629237453506442E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.9999989791474477	WITHOUT_CLASSIFICATION	1.0208525522950022E-6	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999995422266497	WITHOUT_CLASSIFICATION	4.5777335039233203E-7	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999097808603294	WITHOUT_CLASSIFICATION	9.02191396705331E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999987064059014	WITHOUT_CLASSIFICATION	1.2935940986070734E-6	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.9999999687951429	WITHOUT_CLASSIFICATION	3.1204857027262236E-8	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999999125394	WITHOUT_CLASSIFICATION	8.746069482065139E-11	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999915882245	WITHOUT_CLASSIFICATION	8.41177543749902E-9	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999763163102212	WITHOUT_CLASSIFICATION	2.3683689778743418E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999990963371936	WITHOUT_CLASSIFICATION	9.036628064824518E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999997316722	WITHOUT_CLASSIFICATION	2.683278242512058E-10	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.9999990867602916	WITHOUT_CLASSIFICATION	9.132397083687246E-7	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999763163102212	WITHOUT_CLASSIFICATION	2.3683689778743418E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999990963371936	WITHOUT_CLASSIFICATION	9.036628064824518E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999997316722	WITHOUT_CLASSIFICATION	2.683278242512058E-10	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999998793119919	WITHOUT_CLASSIFICATION	1.2068800816258406E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999987003231332	WITHOUT_CLASSIFICATION	1.2996768667490054E-6	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999963776644629	WITHOUT_CLASSIFICATION	3.622335537141944E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999970106381386	WITHOUT_CLASSIFICATION	2.989361861487223E-6	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999625400178	WITHOUT_CLASSIFICATION	3.7459982187297785E-8	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999993164766795	WITHOUT_CLASSIFICATION	6.835233205622045E-7	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999997331423189	WITHOUT_CLASSIFICATION	2.668576809935972E-7	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999112477172402	WITHOUT_CLASSIFICATION	8.875228275977438E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999973537209287	WITHOUT_CLASSIFICATION	2.6462790713922952E-6	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999996704106004	WITHOUT_CLASSIFICATION	3.295893996027109E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9975353394384799	WITHOUT_CLASSIFICATION	0.0024646605615201277	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999178284187	WITHOUT_CLASSIFICATION	8.217158128002169E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999999027823615	WITHOUT_CLASSIFICATION	9.721763850049308E-8	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999635632865617	WITHOUT_CLASSIFICATION	3.6436713438290116E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999999085044865	WITHOUT_CLASSIFICATION	9.149551346245891E-8	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999901987155486	WITHOUT_CLASSIFICATION	9.801284451499244E-6	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999959316769403	WITHOUT_CLASSIFICATION	4.06832305968027E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999997755093368	WITHOUT_CLASSIFICATION	2.2449066304486063E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999932509237366	WITHOUT_CLASSIFICATION	6.74907626341246E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999992484125174	WITHOUT_CLASSIFICATION	7.515874826102672E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988206402404	WITHOUT_CLASSIFICATION	1.1793597596269904E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999799241137849	WITHOUT_CLASSIFICATION	2.0075886215140613E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999799241137849	WITHOUT_CLASSIFICATION	2.0075886215140613E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999986479540178	WITHOUT_CLASSIFICATION	1.3520459821930497E-6	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999986479540178	WITHOUT_CLASSIFICATION	1.3520459821930497E-6	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999999452956201	WITHOUT_CLASSIFICATION	5.470437989488167E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.999999452956201	WITHOUT_CLASSIFICATION	5.470437989488167E-7	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999960612693634	WITHOUT_CLASSIFICATION	3.938730636718937E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999724833419	WITHOUT_CLASSIFICATION	2.7516658066953052E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999998387342561	WITHOUT_CLASSIFICATION	1.6126574374565912E-7	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999995818305008	WITHOUT_CLASSIFICATION	4.1816949925998006E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995017801	WITHOUT_CLASSIFICATION	4.982199928371871E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999784278384	WITHOUT_CLASSIFICATION	2.1572161587384332E-8	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999713661489	WITHOUT_CLASSIFICATION	2.8633851063788184E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.9999958545283782	WITHOUT_CLASSIFICATION	4.145471621703847E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999958889283	WITHOUT_CLASSIFICATION	4.111071657771583E-9	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999960612693634	WITHOUT_CLASSIFICATION	3.938730636718937E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999724833419	WITHOUT_CLASSIFICATION	2.7516658066953052E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999998387342561	WITHOUT_CLASSIFICATION	1.6126574374565912E-7	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999995017801	WITHOUT_CLASSIFICATION	4.982199928371871E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999784278384	WITHOUT_CLASSIFICATION	2.1572161587384332E-8	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999957720987	WITHOUT_CLASSIFICATION	4.227901164196873E-9	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999996060012577	WITHOUT_CLASSIFICATION	3.9399874229797285E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999736311091011	WITHOUT_CLASSIFICATION	2.636889089888954E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.9999736311091011	WITHOUT_CLASSIFICATION	2.636889089888954E-5	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.9999992114266587	WITHOUT_CLASSIFICATION	7.885733413315016E-7	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998757945767	WITHOUT_CLASSIFICATION	1.2420542329957866E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999992725773603	WITHOUT_CLASSIFICATION	7.274226396686586E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999486525789	WITHOUT_CLASSIFICATION	5.134742112267765E-8	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999486525789	WITHOUT_CLASSIFICATION	5.134742112267765E-8	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999986092335	WITHOUT_CLASSIFICATION	1.3907664616260817E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999968087435	WITHOUT_CLASSIFICATION	3.191256433128136E-9	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999627562897	WITHOUT_CLASSIFICATION	3.724371024709258E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999978558886358	WITHOUT_CLASSIFICATION	2.1441113641892087E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999721388113	WITHOUT_CLASSIFICATION	2.7861188671313985E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999883079738	WITHOUT_CLASSIFICATION	1.1692026132030675E-8	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999797826546	WITHOUT_CLASSIFICATION	2.0217345382038007E-8	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999934622247	WITHOUT_CLASSIFICATION	6.537775372808622E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999121110533	WITHOUT_CLASSIFICATION	8.78889465890569E-8	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999983481542553	WITHOUT_CLASSIFICATION	1.6518457448121743E-6	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9996700569722224	WITHOUT_CLASSIFICATION	3.299430277776596E-4	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999986092335	WITHOUT_CLASSIFICATION	1.3907664616260817E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999968087435	WITHOUT_CLASSIFICATION	3.191256433128136E-9	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.999978558886358	WITHOUT_CLASSIFICATION	2.1441113641892087E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999608961685982	WITHOUT_CLASSIFICATION	3.910383140180702E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999992725773603	WITHOUT_CLASSIFICATION	7.274226396686586E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999992725773603	WITHOUT_CLASSIFICATION	7.274226396686586E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999968393712686	WITHOUT_CLASSIFICATION	3.1606287315197373E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999968393712686	WITHOUT_CLASSIFICATION	3.1606287315197373E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9759597342829918	WITHOUT_CLASSIFICATION	0.024040265717008263	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9759597342829918	WITHOUT_CLASSIFICATION	0.024040265717008263	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999978480941	WITHOUT_CLASSIFICATION	2.15190593562099E-9	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999852784313	WITHOUT_CLASSIFICATION	1.4721568815698923E-8	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999983645363757	WITHOUT_CLASSIFICATION	1.6354636242351713E-6	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999998503255314	WITHOUT_CLASSIFICATION	1.496744685545284E-7	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999999739959	WITHOUT_CLASSIFICATION	2.6004069117759255E-11	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.999999981627011	WITHOUT_CLASSIFICATION	1.8372989015199674E-8	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999999751622994	WITHOUT_CLASSIFICATION	2.4837700573722958E-8	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999786895598	WITHOUT_CLASSIFICATION	2.131044021271309E-8	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999993150670321	WITHOUT_CLASSIFICATION	6.849329680220621E-7	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999998149671281	WITHOUT_CLASSIFICATION	1.8503287183080128E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.9999994032997291	WITHOUT_CLASSIFICATION	5.967002708687177E-7	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999990047662777	WITHOUT_CLASSIFICATION	9.952337223124278E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999998521424782	WITHOUT_CLASSIFICATION	1.47857521805022E-7	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999679484848	WITHOUT_CLASSIFICATION	3.20515151784442E-8	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999954548480163	WITHOUT_CLASSIFICATION	4.545151983781613E-6	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999260701467333	WITHOUT_CLASSIFICATION	7.392985326665047E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999992848019755	WITHOUT_CLASSIFICATION	7.151980245063238E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999629595172	WITHOUT_CLASSIFICATION	3.70404828001059E-8	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999401187058108	WITHOUT_CLASSIFICATION	5.988129418933115E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999797826546	WITHOUT_CLASSIFICATION	2.0217345382038007E-8	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.9999999121110533	WITHOUT_CLASSIFICATION	8.78889465890569E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999885490894	WITHOUT_CLASSIFICATION	1.1450910603545613E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999997268651447	WITHOUT_CLASSIFICATION	2.731348552561768E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999997268651447	WITHOUT_CLASSIFICATION	2.731348552561768E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999608961685982	WITHOUT_CLASSIFICATION	3.910383140180702E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999992725773603	WITHOUT_CLASSIFICATION	7.274226396686586E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.9999968393712686	WITHOUT_CLASSIFICATION	3.1606287315197373E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9759597342829918	WITHOUT_CLASSIFICATION	0.024040265717008263	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999935928543396	WITHOUT_CLASSIFICATION	6.4071456602385745E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999958167960457	WITHOUT_CLASSIFICATION	4.183203954361759E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999999038861962	WITHOUT_CLASSIFICATION	9.611380379745269E-8	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999997827590897	WITHOUT_CLASSIFICATION	2.172409101423952E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999444277333	WITHOUT_CLASSIFICATION	5.557226674753544E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999444277333	WITHOUT_CLASSIFICATION	5.557226674753544E-8	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999643856116	WITHOUT_CLASSIFICATION	3.561438846013585E-8	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999996016850303	WITHOUT_CLASSIFICATION	3.983149696331314E-7	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999999947013918	WITHOUT_CLASSIFICATION	5.2986081982548847E-8	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999997960285845	WITHOUT_CLASSIFICATION	2.039714155793568E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999994441510172	WITHOUT_CLASSIFICATION	5.558489828671572E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999994441510172	WITHOUT_CLASSIFICATION	5.558489828671572E-7	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999998682000065	WITHOUT_CLASSIFICATION	1.3179999351074925E-7	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999846506325609	WITHOUT_CLASSIFICATION	1.5349367439023047E-5	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.999999991562042	WITHOUT_CLASSIFICATION	8.437957964487671E-9	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999969083153366	WITHOUT_CLASSIFICATION	3.09168466343521E-6	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999988560595334	WITHOUT_CLASSIFICATION	1.1439404665880893E-6	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999931149995	WITHOUT_CLASSIFICATION	6.88500039273651E-9	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999997645731983	WITHOUT_CLASSIFICATION	2.3542680173719466E-7	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.9999999763787336	WITHOUT_CLASSIFICATION	2.362126642803425E-8	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9993227448716473	WITHOUT_CLASSIFICATION	6.772551283526362E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.9973823439318075	WITHOUT_CLASSIFICATION	0.002617656068192581	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999648285175	WITHOUT_CLASSIFICATION	3.517148257390526E-8	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.9999999727714286	WITHOUT_CLASSIFICATION	2.7228571292261685E-8	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999870376742	WITHOUT_CLASSIFICATION	1.2962325676057798E-8	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999989046873232	WITHOUT_CLASSIFICATION	1.095312676780242E-6	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999989608269104	WITHOUT_CLASSIFICATION	1.0391730895151788E-6	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9998743672846575	WITHOUT_CLASSIFICATION	1.2563271534241354E-4	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999999409904	WITHOUT_CLASSIFICATION	5.900960815152354E-11	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999582564665512	WITHOUT_CLASSIFICATION	4.174353344884071E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999998606842717	WITHOUT_CLASSIFICATION	1.3931572830276604E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999992693117226	WITHOUT_CLASSIFICATION	7.30688277443442E-7	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999898549260207	WITHOUT_CLASSIFICATION	1.0145073979292246E-5	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999998015548922	WITHOUT_CLASSIFICATION	1.984451078084302E-7	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.9999998015548922	WITHOUT_CLASSIFICATION	1.984451078084302E-7	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999997081682971	WITHOUT_CLASSIFICATION	2.91831702833046E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999820384833	WITHOUT_CLASSIFICATION	1.7961516684925357E-8	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998951426711	WITHOUT_CLASSIFICATION	1.0485732889529158E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.999998951426711	WITHOUT_CLASSIFICATION	1.0485732889529158E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9995263802691511	WITHOUT_CLASSIFICATION	4.7361973084883175E-4	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999999491857273	WITHOUT_CLASSIFICATION	5.0814272709679066E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999944204841688	WITHOUT_CLASSIFICATION	5.579515831174183E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999983934954	WITHOUT_CLASSIFICATION	1.6065045834227418E-9	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999983934954	WITHOUT_CLASSIFICATION	1.6065045834227418E-9	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.999996765314589	WITHOUT_CLASSIFICATION	3.234685410940639E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999670683616	WITHOUT_CLASSIFICATION	3.2931638416364264E-8	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999980672960489	WITHOUT_CLASSIFICATION	1.9327039510512287E-6	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999356562584	WITHOUT_CLASSIFICATION	6.434374159648625E-8	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999955220889447	WITHOUT_CLASSIFICATION	4.477911055311383E-6	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999809477792	WITHOUT_CLASSIFICATION	1.9052220794909373E-8	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999994312528121	WITHOUT_CLASSIFICATION	5.68747187952721E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999996420900837	WITHOUT_CLASSIFICATION	3.579099161423009E-7	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999982927959602	WITHOUT_CLASSIFICATION	1.7072040398034852E-6	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.9999809874962808	WITHOUT_CLASSIFICATION	1.9012503719149363E-5	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999870353826067	WITHOUT_CLASSIFICATION	1.2964617393386581E-5	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999779949557059	WITHOUT_CLASSIFICATION	2.200504429404556E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999996654509006	WITHOUT_CLASSIFICATION	3.345490994069344E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999582895708	WITHOUT_CLASSIFICATION	4.171042909012503E-8	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9996180145297227	WITHOUT_CLASSIFICATION	3.819854702773133E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.9999985300501342	WITHOUT_CLASSIFICATION	1.4699498658039772E-6	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999979508494	WITHOUT_CLASSIFICATION	2.0491506635002406E-9	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999970457545654	WITHOUT_CLASSIFICATION	2.954245434644265E-6	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999891621666551	WITHOUT_CLASSIFICATION	1.0837833344771883E-5	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999726024175	WITHOUT_CLASSIFICATION	2.7397582551293955E-8	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999937572906693	WITHOUT_CLASSIFICATION	6.242709330644571E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999997718860795	WITHOUT_CLASSIFICATION	2.2811392046552296E-7	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999837564739519	WITHOUT_CLASSIFICATION	1.6243526048127794E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999993980467462	WITHOUT_CLASSIFICATION	6.019532537444483E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999496062535959	WITHOUT_CLASSIFICATION	5.0393746404179956E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.9999997890764956	WITHOUT_CLASSIFICATION	2.1092350438573768E-7	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.999470370523536	WITHOUT_CLASSIFICATION	5.296294764638861E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999999965077682	WITHOUT_CLASSIFICATION	3.492231795461369E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999983925066154	WITHOUT_CLASSIFICATION	1.6074933846222E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999506242613	WITHOUT_CLASSIFICATION	4.937573876939813E-8	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999997946823646	WITHOUT_CLASSIFICATION	2.0531763542385305E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999582895708	WITHOUT_CLASSIFICATION	4.171042909012503E-8	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.999999965077682	WITHOUT_CLASSIFICATION	3.492231795461369E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999983925066154	WITHOUT_CLASSIFICATION	1.6074933846222E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999997946823646	WITHOUT_CLASSIFICATION	2.0531763542385305E-7	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999992554782781	WITHOUT_CLASSIFICATION	7.445217219251214E-7	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.999996340338291	WITHOUT_CLASSIFICATION	3.6596617090770247E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999988030577335	WITHOUT_CLASSIFICATION	1.1969422664704168E-6	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.999999895398936	WITHOUT_CLASSIFICATION	1.0460106398025511E-7	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999998837963587	WITHOUT_CLASSIFICATION	1.1620364122880457E-7	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999995610025197	WITHOUT_CLASSIFICATION	4.3899748026231866E-7	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999979331364184	WITHOUT_CLASSIFICATION	2.066863581649776E-6	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.999999139285801	WITHOUT_CLASSIFICATION	8.607141990071528E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999962407551074	WITHOUT_CLASSIFICATION	3.7592448926265555E-6	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999991972779249	WITHOUT_CLASSIFICATION	8.02722075193084E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999998888177037	WITHOUT_CLASSIFICATION	1.1118229633283119E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999998888177037	WITHOUT_CLASSIFICATION	1.1118229633283119E-7	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999907875107	WITHOUT_CLASSIFICATION	9.212489400818373E-9	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999963116896494	WITHOUT_CLASSIFICATION	3.6883103505209303E-6	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.9999999559095483	WITHOUT_CLASSIFICATION	4.409045176714671E-8	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.99998464667029	WITHOUT_CLASSIFICATION	1.535332971011319E-5	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999990553321584	WITHOUT_CLASSIFICATION	9.446678415640577E-7	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999182074923	WITHOUT_CLASSIFICATION	8.179250767099555E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999549912186	WITHOUT_CLASSIFICATION	4.500878126247794E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999564804773	WITHOUT_CLASSIFICATION	4.351952271034481E-8	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.999999998027037	WITHOUT_CLASSIFICATION	1.972963025701383E-9	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999983400461325	WITHOUT_CLASSIFICATION	1.659953867410644E-6	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.9999998302921776	WITHOUT_CLASSIFICATION	1.6970782238074323E-7	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999972113082465	WITHOUT_CLASSIFICATION	2.788691753499851E-6	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.9999999823068932	WITHOUT_CLASSIFICATION	1.769310668617108E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.999995323633248	WITHOUT_CLASSIFICATION	4.676366752065134E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.9999967325162133	WITHOUT_CLASSIFICATION	3.267483786671105E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999827668492828	WITHOUT_CLASSIFICATION	1.7233150717156504E-5	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999997256616243	WITHOUT_CLASSIFICATION	2.743383757586978E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999984712429919	WITHOUT_CLASSIFICATION	1.528757008033198E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999902996564219	WITHOUT_CLASSIFICATION	9.700343578078357E-6	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999994211206603	WITHOUT_CLASSIFICATION	5.788793397222443E-7	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999997627741415	WITHOUT_CLASSIFICATION	2.3722585846011483E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.9999983160662521	WITHOUT_CLASSIFICATION	1.6839337478179238E-6	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999996689722872	WITHOUT_CLASSIFICATION	3.310277127068386E-7	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999292867618237	WITHOUT_CLASSIFICATION	7.071323817633728E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999998324323335	WITHOUT_CLASSIFICATION	1.6756766656981843E-7	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999994649518513	WITHOUT_CLASSIFICATION	5.350481487918264E-7	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999982371194395	WITHOUT_CLASSIFICATION	1.7628805605682876E-6	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999975674718126	WITHOUT_CLASSIFICATION	2.4325281875129694E-6	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.9999998593799008	WITHOUT_CLASSIFICATION	1.406200992466558E-7	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999922420884	WITHOUT_CLASSIFICATION	7.757911701103015E-9	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999988914717	WITHOUT_CLASSIFICATION	1.1085282402741307E-9	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999749788164	WITHOUT_CLASSIFICATION	2.502118358834517E-8	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999943508155	WITHOUT_CLASSIFICATION	5.6491845421352246E-9	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.9999998102389148	WITHOUT_CLASSIFICATION	1.8976108506925796E-7	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999879018847	WITHOUT_CLASSIFICATION	1.2098115304131177E-8	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999060534598	WITHOUT_CLASSIFICATION	9.394654028199535E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999933243527	WITHOUT_CLASSIFICATION	6.675647180337566E-9	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999996282033903	WITHOUT_CLASSIFICATION	3.71796609669323E-7	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999991083062068	WITHOUT_CLASSIFICATION	8.916937933666034E-7	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.999992063956727	WITHOUT_CLASSIFICATION	7.93604327292717E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999702498505	WITHOUT_CLASSIFICATION	2.9750149455241632E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999503983444906	WITHOUT_CLASSIFICATION	4.9601655509409884E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999925856537075	WITHOUT_CLASSIFICATION	7.414346292491481E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999996362172356	WITHOUT_CLASSIFICATION	3.6378276429943977E-7	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999996547315779	WITHOUT_CLASSIFICATION	3.452684220768745E-7	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999998951700274	WITHOUT_CLASSIFICATION	1.0482997262930809E-7	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9998273066734871	WITHOUT_CLASSIFICATION	1.7269332651292084E-4	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999473144419084	WITHOUT_CLASSIFICATION	5.268555809160743E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999996558425919	WITHOUT_CLASSIFICATION	3.4415740811406543E-7	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999999189076691	WITHOUT_CLASSIFICATION	8.109233093080553E-8	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999495407223477	WITHOUT_CLASSIFICATION	5.0459277652430885E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999952304511466	WITHOUT_CLASSIFICATION	4.769548853366773E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9935491203261204	WITHOUT_CLASSIFICATION	0.0064508796738796045	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999998763736635	WITHOUT_CLASSIFICATION	1.23626336492235E-7	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999992005010524	WITHOUT_CLASSIFICATION	7.994989475414155E-7	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999377583018	WITHOUT_CLASSIFICATION	6.224169821855021E-8	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999152455384958	WITHOUT_CLASSIFICATION	8.475446150418008E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.999862381448149	WITHOUT_CLASSIFICATION	1.3761855185107162E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.860715911157775	WITHOUT_CLASSIFICATION	0.13928408884222504	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997777925002476	WITHOUT_CLASSIFICATION	2.2220749975236244E-4	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9997777925002476	WITHOUT_CLASSIFICATION	2.2220749975236244E-4	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999996657448577	WITHOUT_CLASSIFICATION	3.342551423138894E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999999597423996	WITHOUT_CLASSIFICATION	4.025760030914609E-8	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999998795106347	WITHOUT_CLASSIFICATION	1.2048936527533482E-7	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999560272832	WITHOUT_CLASSIFICATION	4.397271682051158E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999982802586389	WITHOUT_CLASSIFICATION	1.7197413610866373E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999990793047389	WITHOUT_CLASSIFICATION	9.206952610480311E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999480836201983	WITHOUT_CLASSIFICATION	5.191637980163204E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999990440935455	WITHOUT_CLASSIFICATION	9.55906454626228E-7	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999994062867519	WITHOUT_CLASSIFICATION	5.937132481844312E-7	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999883794955926	WITHOUT_CLASSIFICATION	1.1620504407309116E-5	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999557578315	WITHOUT_CLASSIFICATION	4.424216843526996E-8	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999924652857	WITHOUT_CLASSIFICATION	7.534714224078347E-9	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999993741408962	WITHOUT_CLASSIFICATION	6.258591037244498E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.999851421836286	WITHOUT_CLASSIFICATION	1.485781637140213E-4	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999994575286988	WITHOUT_CLASSIFICATION	5.424713011455264E-7	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999848925161142	WITHOUT_CLASSIFICATION	1.510748388580202E-5	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999971136652448	WITHOUT_CLASSIFICATION	2.8863347552423994E-6	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999899712607	WITHOUT_CLASSIFICATION	1.0028739290119881E-8	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999776344745402	WITHOUT_CLASSIFICATION	2.236552545965589E-5	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999956412620515	WITHOUT_CLASSIFICATION	4.358737948493492E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999925253704	WITHOUT_CLASSIFICATION	7.474629539041592E-9	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999387911149	WITHOUT_CLASSIFICATION	6.120888503024852E-8	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999986838135646	WITHOUT_CLASSIFICATION	1.3161864353646458E-6	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999983257247	WITHOUT_CLASSIFICATION	1.6742752930277472E-9	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999994989947527	WITHOUT_CLASSIFICATION	5.010052473401723E-7	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999444558413546	WITHOUT_CLASSIFICATION	5.554415864531927E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.999999806476367	WITHOUT_CLASSIFICATION	1.9352363308747108E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999996970706315	WITHOUT_CLASSIFICATION	3.029293683927379E-7	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999893357370203	WITHOUT_CLASSIFICATION	1.0664262979713504E-5	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999998965827106	WITHOUT_CLASSIFICATION	1.0341728936933869E-7	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999799414120946	WITHOUT_CLASSIFICATION	2.0058587905372805E-5	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.999993021538993	WITHOUT_CLASSIFICATION	6.978461006874301E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999969406268	WITHOUT_CLASSIFICATION	3.059373196774881E-9	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.999985928270199	WITHOUT_CLASSIFICATION	1.4071729801029716E-5	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999969406268	WITHOUT_CLASSIFICATION	3.059373196774881E-9	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999995060468783	WITHOUT_CLASSIFICATION	4.939531217576215E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995747062650312	WITHOUT_CLASSIFICATION	4.2529373496872865E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995747062650312	WITHOUT_CLASSIFICATION	4.2529373496872865E-4	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9995747062650312	WITHOUT_CLASSIFICATION	4.2529373496872865E-4	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999717095180786	WITHOUT_CLASSIFICATION	2.8290481921425108E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.9999717095180786	WITHOUT_CLASSIFICATION	2.8290481921425108E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.9999997453425622	WITHOUT_CLASSIFICATION	2.5465743787859615E-7	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.999999998393709	WITHOUT_CLASSIFICATION	1.606290921985573E-9	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999982189511	WITHOUT_CLASSIFICATION	1.7810487745073904E-9	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9933251094923967	WITHOUT_CLASSIFICATION	0.006674890507603293	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.999999287125005	WITHOUT_CLASSIFICATION	7.128749950751629E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999987791371929	WITHOUT_CLASSIFICATION	1.2208628070825754E-6	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999997690693402	WITHOUT_CLASSIFICATION	2.3093065990846631E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999946585980948	WITHOUT_CLASSIFICATION	5.341401905202071E-6	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999996721077268	WITHOUT_CLASSIFICATION	3.278922732345624E-7	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999381538573	WITHOUT_CLASSIFICATION	6.184614263859823E-8	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999997488798998	WITHOUT_CLASSIFICATION	2.5112010013996053E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999993793145663	WITHOUT_CLASSIFICATION	6.20685433817155E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999995797871568	WITHOUT_CLASSIFICATION	4.2021284319857445E-7	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999939116788754	WITHOUT_CLASSIFICATION	6.0883211245753494E-6	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999937654847662	WITHOUT_CLASSIFICATION	6.2345152338230914E-6	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999549740258	WITHOUT_CLASSIFICATION	4.5025974166559216E-8	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999907552463	WITHOUT_CLASSIFICATION	9.244753814072604E-9	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999967136180958	WITHOUT_CLASSIFICATION	3.286381904173481E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999967136180958	WITHOUT_CLASSIFICATION	3.286381904173481E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.9999942134308536	WITHOUT_CLASSIFICATION	5.7865691464607515E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998205753319	WITHOUT_CLASSIFICATION	1.7942466827056635E-7	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999998205753319	WITHOUT_CLASSIFICATION	1.7942466827056635E-7	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.99999805764746	WITHOUT_CLASSIFICATION	1.9423525400468693E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999998345030199	WITHOUT_CLASSIFICATION	1.6549698020273508E-7	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999816377023676	WITHOUT_CLASSIFICATION	1.8362297632489328E-5	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999995209994191	WITHOUT_CLASSIFICATION	4.790005808307286E-7	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999986626730822	WITHOUT_CLASSIFICATION	1.337326917716047E-6	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.9999996048840661	WITHOUT_CLASSIFICATION	3.9511593394089116E-7	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999995276053	WITHOUT_CLASSIFICATION	4.7239469999342534E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999940378255449	WITHOUT_CLASSIFICATION	5.962174455114495E-6	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.9999999473384891	WITHOUT_CLASSIFICATION	5.266151105336658E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999360470523829	WITHOUT_CLASSIFICATION	6.395294761707417E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9997575900147627	WITHOUT_CLASSIFICATION	2.4240998523728088E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999657904135033	WITHOUT_CLASSIFICATION	3.420958649671791E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999968622188168	WITHOUT_CLASSIFICATION	3.137781183126433E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999982005419179	WITHOUT_CLASSIFICATION	1.7994580820362802E-6	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999946585980948	WITHOUT_CLASSIFICATION	5.341401905202071E-6	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999706475952047	WITHOUT_CLASSIFICATION	2.9352404795338257E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999995210435616	WITHOUT_CLASSIFICATION	4.789564384124349E-7	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998679782626114	WITHOUT_CLASSIFICATION	1.32021737388579E-4	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9998679782626114	WITHOUT_CLASSIFICATION	1.32021737388579E-4	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999999042384918	WITHOUT_CLASSIFICATION	9.576150819526902E-8	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9996742535725264	WITHOUT_CLASSIFICATION	3.2574642747363626E-4	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999993166535679	WITHOUT_CLASSIFICATION	6.833464321068314E-7	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999944737952439	WITHOUT_CLASSIFICATION	5.526204756062857E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999980060811	WITHOUT_CLASSIFICATION	1.9939189236219284E-9	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999548976642463	WITHOUT_CLASSIFICATION	4.510233575379917E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999966634504	WITHOUT_CLASSIFICATION	3.3365496277037175E-9	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999989002105134	WITHOUT_CLASSIFICATION	1.0997894866249663E-6	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999998053526598	WITHOUT_CLASSIFICATION	1.9464734028385358E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999580259212195	WITHOUT_CLASSIFICATION	4.197407878056371E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9996583856673442	WITHOUT_CLASSIFICATION	3.4161433265585264E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999999165930072	WITHOUT_CLASSIFICATION	8.340699278844717E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997080714139065	WITHOUT_CLASSIFICATION	2.9192858609353883E-4	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999744482542	WITHOUT_CLASSIFICATION	2.5551745820498963E-8	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999754255977	WITHOUT_CLASSIFICATION	2.457440232278415E-8	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.999999777519626	WITHOUT_CLASSIFICATION	2.224803740365559E-7	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999980029072314	WITHOUT_CLASSIFICATION	1.9970927686573144E-6	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999690265483469	WITHOUT_CLASSIFICATION	3.097345165323335E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999964519800301	WITHOUT_CLASSIFICATION	3.5480199698805726E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999997859264875	WITHOUT_CLASSIFICATION	2.1407351249875244E-6	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.999998959070235	WITHOUT_CLASSIFICATION	1.0409297650487005E-6	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999971464480938	WITHOUT_CLASSIFICATION	2.8535519061104234E-6	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.9996738312506954	WITHOUT_CLASSIFICATION	3.261687493045298E-4	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999945545405	WITHOUT_CLASSIFICATION	5.4454595613356486E-9	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999967851085477	WITHOUT_CLASSIFICATION	3.214891452238718E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999890293276821	WITHOUT_CLASSIFICATION	1.0970672317966778E-5	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999963811553116	WITHOUT_CLASSIFICATION	3.6188446884521533E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9989806204033671	WITHOUT_CLASSIFICATION	0.001019379596632848	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999995323196278	WITHOUT_CLASSIFICATION	4.6768037231628183E-7	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999989664874749	WITHOUT_CLASSIFICATION	1.0335125251254354E-6	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999997848871802	WITHOUT_CLASSIFICATION	2.1511281987827963E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999992157006322	WITHOUT_CLASSIFICATION	7.842993677020923E-7	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.9999953057736782	WITHOUT_CLASSIFICATION	4.694226321818883E-6	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999960295431654	WITHOUT_CLASSIFICATION	3.970456834560501E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999995417823592	WITHOUT_CLASSIFICATION	4.5821764087648995E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.999999719633965	WITHOUT_CLASSIFICATION	2.8036603506900516E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9989806204033671	WITHOUT_CLASSIFICATION	0.001019379596632848	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999999110659411	WITHOUT_CLASSIFICATION	8.89340589035085E-7	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999995417823592	WITHOUT_CLASSIFICATION	4.5821764087648995E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.9999999298800687	WITHOUT_CLASSIFICATION	7.011993132516717E-8	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999998115188043	WITHOUT_CLASSIFICATION	1.8848119554975517E-7	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999720533136	WITHOUT_CLASSIFICATION	2.7946686503878037E-8	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999989087828812	WITHOUT_CLASSIFICATION	1.091217118808715E-6	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.999999247479271	WITHOUT_CLASSIFICATION	7.525207288767855E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999925018541967	WITHOUT_CLASSIFICATION	7.49814580334858E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999925018541967	WITHOUT_CLASSIFICATION	7.49814580334858E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.5575534554543536	IMPLEMENTATION	0.44244654454564647	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999964008157852	WITHOUT_CLASSIFICATION	3.599184214737737E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999991576914612	WITHOUT_CLASSIFICATION	8.423085387479622E-7	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999991576914612	WITHOUT_CLASSIFICATION	8.423085387479622E-7	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999998383221025	WITHOUT_CLASSIFICATION	1.6167789750317754E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9990550638477113	WITHOUT_CLASSIFICATION	9.449361522887643E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999279751541211	WITHOUT_CLASSIFICATION	7.20248458789172E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999279751541211	WITHOUT_CLASSIFICATION	7.20248458789172E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999856021829718	WITHOUT_CLASSIFICATION	1.4397817028116907E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999954553064231	WITHOUT_CLASSIFICATION	4.544693576964019E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.999999996107276	WITHOUT_CLASSIFICATION	3.8927240250536565E-9	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.999999941698375	WITHOUT_CLASSIFICATION	5.8301624985446655E-8	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.9999998615989198	WITHOUT_CLASSIFICATION	1.3840108013766426E-7	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999674149970108	WITHOUT_CLASSIFICATION	3.258500298911932E-5	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997905181924	WITHOUT_CLASSIFICATION	2.0948180762282506E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999999831773217	WITHOUT_CLASSIFICATION	1.6822678249816116E-8	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999971620501711	WITHOUT_CLASSIFICATION	2.837949828964381E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999764494394636	WITHOUT_CLASSIFICATION	2.3550560536386838E-5	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9997792288325941	WITHOUT_CLASSIFICATION	2.20771167405904E-4	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999976870728987	WITHOUT_CLASSIFICATION	2.3129271012312555E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999892593074369	WITHOUT_CLASSIFICATION	1.0740692563099856E-5	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999734895753151	WITHOUT_CLASSIFICATION	2.6510424685026277E-5	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999986263431903	WITHOUT_CLASSIFICATION	1.3736568097940203E-6	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999996565652073	WITHOUT_CLASSIFICATION	3.4343479270969313E-6	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997990233960015	WITHOUT_CLASSIFICATION	2.009766039985906E-4	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999996060242784	WITHOUT_CLASSIFICATION	3.939757215140361E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999843433979362	WITHOUT_CLASSIFICATION	1.565660206379603E-5	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9304109669769851	WITHOUT_CLASSIFICATION	0.06958903302301485	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999998214936768	WITHOUT_CLASSIFICATION	1.7850632317166333E-7	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9998365092868209	WITHOUT_CLASSIFICATION	1.634907131790532E-4	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9931977459404963	WITHOUT_CLASSIFICATION	0.006802254059503706	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999939275526197	WITHOUT_CLASSIFICATION	6.072447380264067E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999901809306411	WITHOUT_CLASSIFICATION	9.819069358824977E-6	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999999066678079	WITHOUT_CLASSIFICATION	9.333219208176259E-7	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999999391735499	WITHOUT_CLASSIFICATION	6.082645006308431E-8	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999984947961561	WITHOUT_CLASSIFICATION	1.505203843961578E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999386919708	WITHOUT_CLASSIFICATION	6.130802926043291E-8	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999386919708	WITHOUT_CLASSIFICATION	6.130802926043291E-8	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999965110419	WITHOUT_CLASSIFICATION	3.4889582552618177E-9	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999989410790739	WITHOUT_CLASSIFICATION	1.0589209260428315E-6	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999998725799647	WITHOUT_CLASSIFICATION	1.2742003531407948E-7	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999927284446999	WITHOUT_CLASSIFICATION	7.2715553001126656E-6	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999206406246	WITHOUT_CLASSIFICATION	7.935937535343887E-8	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.999998432141041	WITHOUT_CLASSIFICATION	1.567858958989676E-6	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999867684212742	WITHOUT_CLASSIFICATION	1.3231578725759771E-5	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999991973840546	WITHOUT_CLASSIFICATION	8.026159453037168E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999998627386779	WITHOUT_CLASSIFICATION	1.3726132217378652E-7	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999788177671088	WITHOUT_CLASSIFICATION	2.1182232891130793E-5	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.9547703810022724	WITHOUT_CLASSIFICATION	0.04522961899772763	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999563639984	WITHOUT_CLASSIFICATION	4.3636001666576024E-8	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9984264320091866	WITHOUT_CLASSIFICATION	0.0015735679908133622	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.9999952624859453	WITHOUT_CLASSIFICATION	4.737514054743876E-6	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999857119394674	WITHOUT_CLASSIFICATION	1.4288060532557798E-5	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999972515198887	WITHOUT_CLASSIFICATION	2.7484801112288827E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9993171525005118	WITHOUT_CLASSIFICATION	6.828474994882514E-4	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999998162127887	WITHOUT_CLASSIFICATION	1.83787211325553E-7	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999986026297689	WITHOUT_CLASSIFICATION	1.3973702311531415E-6	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.99993925474006	WITHOUT_CLASSIFICATION	6.07452599401378E-5	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999833170368857	WITHOUT_CLASSIFICATION	1.6682963114286823E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9993884483419707	WITHOUT_CLASSIFICATION	6.115516580292427E-4	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999931104309452	WITHOUT_CLASSIFICATION	6.889569054782474E-6	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999995552328349	WITHOUT_CLASSIFICATION	4.447671651645416E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.9999988990702096	WITHOUT_CLASSIFICATION	1.10092979043767E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998987934294028	WITHOUT_CLASSIFICATION	1.0120657059727332E-4	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999822254311859	WITHOUT_CLASSIFICATION	1.7774568814067187E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999910203805725	WITHOUT_CLASSIFICATION	8.979619427459165E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999996557236711	WITHOUT_CLASSIFICATION	3.442763289317897E-7	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999969728728629	WITHOUT_CLASSIFICATION	3.0271271371466852E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.999999723362343	WITHOUT_CLASSIFICATION	2.7663765698242416E-7	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.9999947629754126	WITHOUT_CLASSIFICATION	5.2370245873299095E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.9999977652138734	WITHOUT_CLASSIFICATION	2.2347861265790055E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999976512350139	WITHOUT_CLASSIFICATION	2.348764986118392E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999979940673693	WITHOUT_CLASSIFICATION	2.005932630666884E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9996865137771893	WITHOUT_CLASSIFICATION	3.1348622281070394E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999968460472733	WITHOUT_CLASSIFICATION	3.1539527267170147E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998324428734165	WITHOUT_CLASSIFICATION	1.6755712658357786E-4	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999977988070983	WITHOUT_CLASSIFICATION	2.2011929017147723E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999937953891278	WITHOUT_CLASSIFICATION	6.204610872134692E-6	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9995552904961367	WITHOUT_CLASSIFICATION	4.4470950386339784E-4	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999985583947001	WITHOUT_CLASSIFICATION	1.441605300029315E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.999998502354936	WITHOUT_CLASSIFICATION	1.4976450640167791E-6	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.999998502354936	WITHOUT_CLASSIFICATION	1.4976450640167791E-6	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9992547687992026	WITHOUT_CLASSIFICATION	7.452312007974458E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999997757937562	WITHOUT_CLASSIFICATION	2.2420624390805746E-7	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9347796951310721	WITHOUT_CLASSIFICATION	0.06522030486892788	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999977929412971	WITHOUT_CLASSIFICATION	2.207058702883762E-6	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999932509237366	WITHOUT_CLASSIFICATION	6.74907626341246E-6	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999992484125174	WITHOUT_CLASSIFICATION	7.515874826102672E-7	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999937355352086	WITHOUT_CLASSIFICATION	6.264464791374069E-6	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999923575068168	WITHOUT_CLASSIFICATION	7.642493183273845E-6	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999989660840137	WITHOUT_CLASSIFICATION	1.0339159863329044E-6	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999990801251497	WITHOUT_CLASSIFICATION	9.198748502078388E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999996317065107	WITHOUT_CLASSIFICATION	3.682934892881293E-7	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999982751710473	WITHOUT_CLASSIFICATION	1.7248289526891381E-6	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999999877902765	WITHOUT_CLASSIFICATION	1.2209723450387448E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.9999999971055081	WITHOUT_CLASSIFICATION	2.8944918070054705E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999712297531	WITHOUT_CLASSIFICATION	2.8770246847432715E-8	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999997927375625	WITHOUT_CLASSIFICATION	2.0726243761578704E-7	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999733937299	WITHOUT_CLASSIFICATION	2.660627006645295E-8	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999997903620029	WITHOUT_CLASSIFICATION	2.096379970624317E-7	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999720596111	WITHOUT_CLASSIFICATION	2.7940388872219388E-8	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999999336605976	WITHOUT_CLASSIFICATION	6.63394024414908E-8	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999706576478	WITHOUT_CLASSIFICATION	2.9342352235250416E-8	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.9999841964275403	WITHOUT_CLASSIFICATION	1.5803572459674686E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.9999979859513305	WITHOUT_CLASSIFICATION	2.01404866949349E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999987725787226	WITHOUT_CLASSIFICATION	1.2274212773749799E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.999999999048739	WITHOUT_CLASSIFICATION	9.512608796549049E-10	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999990765613	WITHOUT_CLASSIFICATION	9.234387422962547E-10	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999994164634	WITHOUT_CLASSIFICATION	5.835365415977979E-10	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999998631013214	WITHOUT_CLASSIFICATION	1.3689867866861142E-7	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999844572516	WITHOUT_CLASSIFICATION	1.5542748451698555E-8	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999998694415986	WITHOUT_CLASSIFICATION	1.3055840145666915E-7	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.9999999281174334	WITHOUT_CLASSIFICATION	7.188256653993183E-8	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999925947268821	WITHOUT_CLASSIFICATION	7.4052731178289165E-6	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9998398170585282	WITHOUT_CLASSIFICATION	1.6018294147181032E-4	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9496004364280461	WITHOUT_CLASSIFICATION	0.050399563571953826	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9998324428734165	WITHOUT_CLASSIFICATION	1.6755712658357786E-4	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9997126133527217	WITHOUT_CLASSIFICATION	2.87386647278315E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999992617660809	WITHOUT_CLASSIFICATION	7.38233919163867E-7	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999992617660809	WITHOUT_CLASSIFICATION	7.38233919163867E-7	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.999999986612994	WITHOUT_CLASSIFICATION	1.338700583056075E-8	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999597647347	WITHOUT_CLASSIFICATION	4.023526532918632E-8	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.9999469405299631	WITHOUT_CLASSIFICATION	5.305947003676248E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.997858887290007	WITHOUT_CLASSIFICATION	0.0021411127099930346	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.9683377794790884	WITHOUT_CLASSIFICATION	0.031662220520911624	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9721281633487173	WITHOUT_CLASSIFICATION	0.027871836651282636	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9786555849346089	WITHOUT_CLASSIFICATION	0.021344415065391153	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9448164746025601	WITHOUT_CLASSIFICATION	0.055183525397439724	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9700146099892123	WITHOUT_CLASSIFICATION	0.02998539001078761	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9839956023282603	WITHOUT_CLASSIFICATION	0.016004397671739622	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.940758056920873	WITHOUT_CLASSIFICATION	0.059241943079126946	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9281593368889959	WITHOUT_CLASSIFICATION	0.07184066311100408	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.971325972719776	WITHOUT_CLASSIFICATION	0.02867402728022396	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999909395251193	WITHOUT_CLASSIFICATION	9.060474880665474E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9998985820468784	WITHOUT_CLASSIFICATION	1.0141795312154982E-4	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999998250614656	WITHOUT_CLASSIFICATION	1.749385343962208E-7	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9053230595440701	WITHOUT_CLASSIFICATION	0.09467694045592981	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.80741807289889	WITHOUT_CLASSIFICATION	0.19258192710110994	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9144206893939785	WITHOUT_CLASSIFICATION	0.08557931060602154	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9530687913872884	WITHOUT_CLASSIFICATION	0.046931208612711516	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.8769790598236767	WITHOUT_CLASSIFICATION	0.12302094017632323	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9200144620628906	WITHOUT_CLASSIFICATION	0.07998553793710936	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.999994245633807	WITHOUT_CLASSIFICATION	5.754366193002252E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999995537572682	WITHOUT_CLASSIFICATION	4.462427318026814E-7	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999673654052	WITHOUT_CLASSIFICATION	3.263459482854666E-8	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9995659942338925	WITHOUT_CLASSIFICATION	4.3400576610745894E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999787678776629	WITHOUT_CLASSIFICATION	2.1232122337086302E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999995573593417	WITHOUT_CLASSIFICATION	4.4264065840745043E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999975709193815	WITHOUT_CLASSIFICATION	2.429080618559487E-6	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999709194213773	WITHOUT_CLASSIFICATION	2.9080578622768734E-5	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999988645937379	WITHOUT_CLASSIFICATION	1.135406262193853E-6	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999998940454825	WITHOUT_CLASSIFICATION	1.0595451749176146E-7	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999953550411307	WITHOUT_CLASSIFICATION	4.644958869274237E-6	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999951631504925	WITHOUT_CLASSIFICATION	4.8368495073818E-6	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999977524489589	WITHOUT_CLASSIFICATION	2.2475510410549513E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999881058778388	WITHOUT_CLASSIFICATION	1.1894122161217177E-5	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999972537098	WITHOUT_CLASSIFICATION	2.7462901235927946E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9995659942338925	WITHOUT_CLASSIFICATION	4.3400576610745894E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999787678776629	WITHOUT_CLASSIFICATION	2.1232122337086302E-5	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999995573593417	WITHOUT_CLASSIFICATION	4.4264065840745043E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999709194213773	WITHOUT_CLASSIFICATION	2.9080578622768734E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9990734549847383	WITHOUT_CLASSIFICATION	9.265450152616939E-4	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999581825977	WITHOUT_CLASSIFICATION	4.18174022481165E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998476201892771	WITHOUT_CLASSIFICATION	1.5237981072291384E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999997043969938	WITHOUT_CLASSIFICATION	2.956030062481081E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999940937790581	WITHOUT_CLASSIFICATION	5.906220941863552E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999996453711135	WITHOUT_CLASSIFICATION	3.546288865072971E-7	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999622831421995	WITHOUT_CLASSIFICATION	3.77168578005441E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997439530349	WITHOUT_CLASSIFICATION	2.5604696511785433E-7	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999998913009234	WITHOUT_CLASSIFICATION	1.086990767136839E-7	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999940874219954	WITHOUT_CLASSIFICATION	5.9125780046681965E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.999999842098574	WITHOUT_CLASSIFICATION	1.5790142608772248E-7	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999995385791978	WITHOUT_CLASSIFICATION	4.614208021520463E-7	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999941553981	WITHOUT_CLASSIFICATION	5.844601988948972E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999900626132036	WITHOUT_CLASSIFICATION	9.937386796369888E-6	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999901841985039	WITHOUT_CLASSIFICATION	9.815801496020335E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999982339484397	WITHOUT_CLASSIFICATION	1.7660515603885835E-6	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999990264516689	WITHOUT_CLASSIFICATION	9.735483310627645E-7	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999999683279825	WITHOUT_CLASSIFICATION	3.1672017425183854E-8	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999942185325394	WITHOUT_CLASSIFICATION	5.7814674605276E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999972537098	WITHOUT_CLASSIFICATION	2.7462901235927946E-9	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.9999999581825977	WITHOUT_CLASSIFICATION	4.18174022481165E-8	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.9998476201892771	WITHOUT_CLASSIFICATION	1.5237981072291384E-4	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.9999940937790581	WITHOUT_CLASSIFICATION	5.906220941863552E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999996453711135	WITHOUT_CLASSIFICATION	3.546288865072971E-7	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999622831421995	WITHOUT_CLASSIFICATION	3.77168578005441E-5	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997439530349	WITHOUT_CLASSIFICATION	2.5604696511785433E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999353693905	WITHOUT_CLASSIFICATION	6.463060952660227E-8	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999845884693218	WITHOUT_CLASSIFICATION	1.5411530678203013E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999998786562413	WITHOUT_CLASSIFICATION	1.2134375868690817E-7	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999997271894	WITHOUT_CLASSIFICATION	2.7281060708673315E-10	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999994676731646	WITHOUT_CLASSIFICATION	5.323268354439931E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999994676731646	WITHOUT_CLASSIFICATION	5.323268354439931E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999770841211	WITHOUT_CLASSIFICATION	2.2915878887004712E-8	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999988984249062	WITHOUT_CLASSIFICATION	1.1015750938550962E-6	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999991172066526	WITHOUT_CLASSIFICATION	8.827933474284991E-7	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999951063253053	WITHOUT_CLASSIFICATION	4.893674694656557E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999992249731	WITHOUT_CLASSIFICATION	7.750269219245994E-10	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999983760565901	WITHOUT_CLASSIFICATION	1.623943409839219E-6	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999984204476797	WITHOUT_CLASSIFICATION	1.5795523202183961E-6	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999487539812	WITHOUT_CLASSIFICATION	5.124601873850197E-8	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999961742689462	WITHOUT_CLASSIFICATION	3.825731053834226E-6	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999792295281255	WITHOUT_CLASSIFICATION	2.0770471874577433E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999423052697963	WITHOUT_CLASSIFICATION	5.769473020357207E-5	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999625488017846	WITHOUT_CLASSIFICATION	3.74511982154264E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999566549734275	WITHOUT_CLASSIFICATION	4.3345026572589024E-5	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999949390089617	WITHOUT_CLASSIFICATION	5.060991038273431E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999993095070183	WITHOUT_CLASSIFICATION	6.904929815682528E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999584905679502	WITHOUT_CLASSIFICATION	4.1509432049852605E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999995198719447	WITHOUT_CLASSIFICATION	4.80128055273316E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999655310514	WITHOUT_CLASSIFICATION	3.446894850759493E-8	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999990809368533	WITHOUT_CLASSIFICATION	9.190631466824442E-7	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999998416300128	WITHOUT_CLASSIFICATION	1.5836998721491848E-7	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9553608757501513	IMPLEMENTATION	0.04463912424984864	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999729663972	WITHOUT_CLASSIFICATION	2.7033602766640635E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999943219816	WITHOUT_CLASSIFICATION	5.678018296707403E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7177595443349446	WITHOUT_CLASSIFICATION	0.2822404556650554	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999609374311768	WITHOUT_CLASSIFICATION	3.906256882316582E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999998844069824	WITHOUT_CLASSIFICATION	1.1559301760098654E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999019828069	WITHOUT_CLASSIFICATION	9.801719312735683E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999973168112156	WITHOUT_CLASSIFICATION	2.683188784333016E-6	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999984193923883	WITHOUT_CLASSIFICATION	1.5806076115989528E-6	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999609374311768	WITHOUT_CLASSIFICATION	3.906256882316582E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999998844069824	WITHOUT_CLASSIFICATION	1.1559301760098654E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999949390089617	WITHOUT_CLASSIFICATION	5.060991038273431E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999690301454492	WITHOUT_CLASSIFICATION	3.096985455074906E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999971933750524	WITHOUT_CLASSIFICATION	2.8066249475828886E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9998578557946307	WITHOUT_CLASSIFICATION	1.4214420536927774E-4	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.999999999512817	WITHOUT_CLASSIFICATION	4.871829958996833E-10	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.999954330836274	WITHOUT_CLASSIFICATION	4.566916372596577E-5	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999974164813777	WITHOUT_CLASSIFICATION	2.583518622174062E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999992157400314	WITHOUT_CLASSIFICATION	7.842599686646587E-7	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.999997302644378	WITHOUT_CLASSIFICATION	2.697355622062215E-6	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999993802206835	WITHOUT_CLASSIFICATION	6.197793164681422E-7	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999976941261	WITHOUT_CLASSIFICATION	2.305874002376715E-9	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.999991213905075	WITHOUT_CLASSIFICATION	8.78609492501784E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999714720504069	WITHOUT_CLASSIFICATION	2.852794959306047E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.996710578108554	WITHOUT_CLASSIFICATION	0.0032894218914460817	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999985621181469	WITHOUT_CLASSIFICATION	1.4378818530562823E-6	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999997132358966	WITHOUT_CLASSIFICATION	2.867641033543996E-7	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9986029603116473	WITHOUT_CLASSIFICATION	0.0013970396883527007	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9995385543291421	WITHOUT_CLASSIFICATION	4.6144567085801513E-4	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.9999688684622552	WITHOUT_CLASSIFICATION	3.113153774482317E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.999999831337829	WITHOUT_CLASSIFICATION	1.6866217101302632E-7	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.999999989174897	WITHOUT_CLASSIFICATION	1.0825102987157558E-8	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.999998294546093	WITHOUT_CLASSIFICATION	1.7054539070497014E-6	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.9999999911096055	WITHOUT_CLASSIFICATION	8.890394508091629E-9	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999998593164308	WITHOUT_CLASSIFICATION	1.4068356935858718E-7	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999538682419	WITHOUT_CLASSIFICATION	4.613175813683698E-8	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.9999999448575619	WITHOUT_CLASSIFICATION	5.514243799348937E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999995473829415	WITHOUT_CLASSIFICATION	4.526170585569109E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.999982988363631	WITHOUT_CLASSIFICATION	1.70116363689633E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999736880029279	WITHOUT_CLASSIFICATION	2.631199707216142E-5	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999636779849	WITHOUT_CLASSIFICATION	3.632201512025162E-8	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999798144246	WITHOUT_CLASSIFICATION	2.0185575480944533E-8	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999178589087	WITHOUT_CLASSIFICATION	8.214109124860256E-8	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999566549734275	WITHOUT_CLASSIFICATION	4.3345026572589024E-5	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999998091155	WITHOUT_CLASSIFICATION	1.9088444837816992E-10	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998217063077	WITHOUT_CLASSIFICATION	1.7829369218134924E-7	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999990077423552	WITHOUT_CLASSIFICATION	9.922576447333773E-7	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999857588518546	WITHOUT_CLASSIFICATION	1.4241148145450407E-5	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999857588518546	WITHOUT_CLASSIFICATION	1.4241148145450407E-5	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999880000696685	WITHOUT_CLASSIFICATION	1.1999930331519833E-5	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9998635261884147	WITHOUT_CLASSIFICATION	1.3647381158530901E-4	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999744576278	WITHOUT_CLASSIFICATION	2.554237224521201E-8	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.999999960352584	WITHOUT_CLASSIFICATION	3.964741591905089E-8	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999998547182369	WITHOUT_CLASSIFICATION	1.4528176310606007E-7	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.999999996881246	WITHOUT_CLASSIFICATION	3.1187541200342994E-9	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999053687265788	WITHOUT_CLASSIFICATION	9.463127342123134E-5	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999896113668085	WITHOUT_CLASSIFICATION	1.038863319136857E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999983999716874	WITHOUT_CLASSIFICATION	1.6000283126177379E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999994998225676	WITHOUT_CLASSIFICATION	5.001774324177126E-7	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996320117085	WITHOUT_CLASSIFICATION	3.6798829144570397E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998155441872	WITHOUT_CLASSIFICATION	1.8445581281105234E-7	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999993428182781	WITHOUT_CLASSIFICATION	6.571817220658712E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999921282179948	WITHOUT_CLASSIFICATION	7.871782005282804E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999970174092876	WITHOUT_CLASSIFICATION	2.9825907124464264E-6	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.9999931173619224	WITHOUT_CLASSIFICATION	6.882638077638045E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999989775675	WITHOUT_CLASSIFICATION	1.0224325095388081E-9	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999989775675	WITHOUT_CLASSIFICATION	1.0224325095388081E-9	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999995069015146	WITHOUT_CLASSIFICATION	4.930984853705546E-7	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999995069015146	WITHOUT_CLASSIFICATION	4.930984853705546E-7	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999797637261	WITHOUT_CLASSIFICATION	2.0236273821784987E-8	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999999854249099	WITHOUT_CLASSIFICATION	1.4575090112040023E-7	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999371067750802	WITHOUT_CLASSIFICATION	6.289322491972932E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9996455607619181	WITHOUT_CLASSIFICATION	3.5443923808182846E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999906001489	WITHOUT_CLASSIFICATION	9.399851117753156E-9	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999976134590999	WITHOUT_CLASSIFICATION	2.386540900134426E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999968787222977	WITHOUT_CLASSIFICATION	3.1212777022671503E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.9999998155441872	WITHOUT_CLASSIFICATION	1.8445581281105234E-7	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999993428182781	WITHOUT_CLASSIFICATION	6.571817220658712E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999970174092876	WITHOUT_CLASSIFICATION	2.9825907124464264E-6	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999842028374	WITHOUT_CLASSIFICATION	1.579716250761149E-8	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.999999502874655	WITHOUT_CLASSIFICATION	4.971253450130331E-7	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999932939804	WITHOUT_CLASSIFICATION	6.706019669753405E-9	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999995510327321	WITHOUT_CLASSIFICATION	4.489672679739449E-7	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999999990903042	WITHOUT_CLASSIFICATION	9.096957949814127E-9	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999967966866804	WITHOUT_CLASSIFICATION	3.2033133195736247E-6	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999441412580892	WITHOUT_CLASSIFICATION	5.585874191079694E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9997376919063701	WITHOUT_CLASSIFICATION	2.6230809362992266E-4	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999871326766221	WITHOUT_CLASSIFICATION	1.2867323378017586E-5	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999999594862	WITHOUT_CLASSIFICATION	4.051383850562515E-11	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9997534153749512	WITHOUT_CLASSIFICATION	2.46584625048785E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999732100200084	WITHOUT_CLASSIFICATION	2.6789979991589513E-5	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999998798084568	WITHOUT_CLASSIFICATION	1.201915431524459E-7	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999956823035844	WITHOUT_CLASSIFICATION	4.317696415617051E-6	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999784445382224	WITHOUT_CLASSIFICATION	2.1555461777648996E-5	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999996499428385	WITHOUT_CLASSIFICATION	3.5005716146456255E-7	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999991561786882	WITHOUT_CLASSIFICATION	8.43821311743932E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999983754127313	WITHOUT_CLASSIFICATION	1.6245872687000222E-6	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999984418822888	WITHOUT_CLASSIFICATION	1.5581177111972813E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999996728028326	WITHOUT_CLASSIFICATION	3.271971673945278E-7	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999736481027	WITHOUT_CLASSIFICATION	2.635189730417279E-8	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999674008130093	WITHOUT_CLASSIFICATION	3.259918699073106E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999588467005958	WITHOUT_CLASSIFICATION	4.1153299404205405E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999338014304	WITHOUT_CLASSIFICATION	6.619856962518747E-8	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999999884191321	WITHOUT_CLASSIFICATION	1.1580868000271655E-8	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999995920810555	WITHOUT_CLASSIFICATION	4.079189445218929E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.9999991339413661	WITHOUT_CLASSIFICATION	8.660586339617737E-7	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999528616825314	WITHOUT_CLASSIFICATION	4.713831746862341E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999986853598569	WITHOUT_CLASSIFICATION	1.3146401430805602E-6	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999973692177505	WITHOUT_CLASSIFICATION	2.6307822494626953E-6	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999989493793553	WITHOUT_CLASSIFICATION	1.0506206446154987E-6	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999998273753334	WITHOUT_CLASSIFICATION	1.7262466660439518E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999996904753904	WITHOUT_CLASSIFICATION	3.095246095847152E-7	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999925332311	WITHOUT_CLASSIFICATION	7.466768850962231E-9	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.9999950851355323	WITHOUT_CLASSIFICATION	4.914864467743936E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999994394157306	WITHOUT_CLASSIFICATION	5.605842694471345E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999957655655011	WITHOUT_CLASSIFICATION	4.234434498879518E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.9999996221480418	WITHOUT_CLASSIFICATION	3.778519581352663E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.999997700782056	WITHOUT_CLASSIFICATION	2.2992179440234842E-6	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999828339958	WITHOUT_CLASSIFICATION	1.716600415927362E-8	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999996407055184	WITHOUT_CLASSIFICATION	3.5929448155766864E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998217063077	WITHOUT_CLASSIFICATION	1.7829369218134924E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999957655655011	WITHOUT_CLASSIFICATION	4.234434498879518E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999987603686	WITHOUT_CLASSIFICATION	1.2396313814618227E-9	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999996821167066	WITHOUT_CLASSIFICATION	3.1788329337572636E-7	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.9999999412974806	WITHOUT_CLASSIFICATION	5.8702519375185775E-8	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999993904505947	WITHOUT_CLASSIFICATION	6.09549405346097E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999993904505947	WITHOUT_CLASSIFICATION	6.09549405346097E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999296565868758	WITHOUT_CLASSIFICATION	7.034341312413102E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999993418617225	WITHOUT_CLASSIFICATION	6.581382774422436E-7	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999998793523268	WITHOUT_CLASSIFICATION	1.2064767318484547E-7	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.999999981386353	WITHOUT_CLASSIFICATION	1.8613646947311216E-8	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997730390583257	WITHOUT_CLASSIFICATION	2.2696094167441022E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999997923236733	WITHOUT_CLASSIFICATION	2.0767632665499894E-7	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999990124216	WITHOUT_CLASSIFICATION	9.875782706658196E-10	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.9999825778033764	WITHOUT_CLASSIFICATION	1.742219662369066E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999763813679	WITHOUT_CLASSIFICATION	2.361863209502848E-7	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999763813679	WITHOUT_CLASSIFICATION	2.361863209502848E-7	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999994651961254	WITHOUT_CLASSIFICATION	5.348038746494067E-7	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999990807279592	WITHOUT_CLASSIFICATION	9.192720408554788E-7	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.999999993239795	WITHOUT_CLASSIFICATION	6.760205008820746E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999186608878	WITHOUT_CLASSIFICATION	8.133911231363716E-8	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999976737644	WITHOUT_CLASSIFICATION	2.3262356587969143E-9	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.999999720769969	WITHOUT_CLASSIFICATION	2.792300309786792E-7	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999994083472493	WITHOUT_CLASSIFICATION	5.916527506107843E-7	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999995070783936	WITHOUT_CLASSIFICATION	4.929216064654321E-7	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999994459799989	WITHOUT_CLASSIFICATION	5.540200011129592E-7	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999939260324	WITHOUT_CLASSIFICATION	6.073967601382079E-9	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999240835631289	WITHOUT_CLASSIFICATION	7.591643687110607E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.9999998208193184	WITHOUT_CLASSIFICATION	1.7918068168983965E-7	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999965492367086	WITHOUT_CLASSIFICATION	3.45076329134607E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999955529170035	WITHOUT_CLASSIFICATION	4.447082996564307E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999955529170035	WITHOUT_CLASSIFICATION	4.447082996564307E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999997620685681	WITHOUT_CLASSIFICATION	2.3793143190864834E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.9999997439530349	WITHOUT_CLASSIFICATION	2.5604696511785433E-7	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999990891987	WITHOUT_CLASSIFICATION	9.108012058433708E-10	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999993417112798	WITHOUT_CLASSIFICATION	6.582887202132848E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999997755912	WITHOUT_CLASSIFICATION	2.2440893756870167E-10	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999809450366	WITHOUT_CLASSIFICATION	1.9054963317078336E-8	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.9999999903112172	WITHOUT_CLASSIFICATION	9.688782773082901E-9	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999988988601805	WITHOUT_CLASSIFICATION	1.101139819519032E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999998867683659	WITHOUT_CLASSIFICATION	1.1323163404823213E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999997599857381	WITHOUT_CLASSIFICATION	2.40014261925303E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999999413343922	WITHOUT_CLASSIFICATION	5.866560782349334E-8	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999996988609304	WITHOUT_CLASSIFICATION	3.0113906949797487E-7	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999159337311421	WITHOUT_CLASSIFICATION	8.406626885796179E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999978284833	WITHOUT_CLASSIFICATION	2.171516653495375E-9	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999999983476565	WITHOUT_CLASSIFICATION	1.6523435045900326E-9	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999947182727	WITHOUT_CLASSIFICATION	5.2817272280367505E-9	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999896521963	WITHOUT_CLASSIFICATION	1.0347803722239715E-8	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999980051372884	WITHOUT_CLASSIFICATION	1.9948627114900794E-6	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999659866525	WITHOUT_CLASSIFICATION	3.401334754668548E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.999999962666552	WITHOUT_CLASSIFICATION	3.733344795421066E-8	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999545448598911	WITHOUT_CLASSIFICATION	4.54551401089097E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999800789794	WITHOUT_CLASSIFICATION	1.9921020593654592E-8	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999973356724069	WITHOUT_CLASSIFICATION	2.6643275931842835E-6	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.9999998883610179	WITHOUT_CLASSIFICATION	1.1163898209548933E-7	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9927816707348688	WITHOUT_CLASSIFICATION	0.007218329265131204	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999996408532269	WITHOUT_CLASSIFICATION	3.591467731503144E-7	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999987135008556	WITHOUT_CLASSIFICATION	1.2864991444911895E-6	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999970050651786	WITHOUT_CLASSIFICATION	2.9949348214175617E-6	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.9999999760266363	WITHOUT_CLASSIFICATION	2.3973363704634737E-8	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9991570195181791	WITHOUT_CLASSIFICATION	8.42980481820745E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999993425887124	WITHOUT_CLASSIFICATION	6.574112877042364E-7	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999946251523246	WITHOUT_CLASSIFICATION	5.374847675359475E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999997377486117	WITHOUT_CLASSIFICATION	2.6225138833439576E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.9999700153459906	WITHOUT_CLASSIFICATION	2.9984654009402572E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.9999917244274578	WITHOUT_CLASSIFICATION	8.275572542220354E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999872243371	WITHOUT_CLASSIFICATION	1.2775662865721935E-8	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999931022768751	WITHOUT_CLASSIFICATION	6.897723124959348E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999948695516607	WITHOUT_CLASSIFICATION	5.1304483393067294E-6	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999967605062393	WITHOUT_CLASSIFICATION	3.239493760611931E-6	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999947710404018	WITHOUT_CLASSIFICATION	5.228959598180785E-6	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999997935922098	WITHOUT_CLASSIFICATION	2.064077902477151E-7	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.988722637177837	WITHOUT_CLASSIFICATION	0.011277362822162917	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9998869451597175	WITHOUT_CLASSIFICATION	1.1305484028239432E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999998986310559	WITHOUT_CLASSIFICATION	1.0136894413583858E-7	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.9999994311809999	WITHOUT_CLASSIFICATION	5.688190001173821E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999966881948659	WITHOUT_CLASSIFICATION	3.311805134136868E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999455331616	WITHOUT_CLASSIFICATION	5.446683838168744E-8	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999976278092	WITHOUT_CLASSIFICATION	2.3721908444543187E-9	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999073841525705	WITHOUT_CLASSIFICATION	9.261584742948908E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999609374311768	WITHOUT_CLASSIFICATION	3.906256882316582E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999609374311768	WITHOUT_CLASSIFICATION	3.906256882316582E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999995731998572	WITHOUT_CLASSIFICATION	4.2680014283983933E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999998784252249	WITHOUT_CLASSIFICATION	1.21574775095139E-7	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999271560855	WITHOUT_CLASSIFICATION	7.284391447975157E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999995974996101	WITHOUT_CLASSIFICATION	4.0250038987611523E-7	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999986407336702	WITHOUT_CLASSIFICATION	1.3592663298313865E-6	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999958988264961	WITHOUT_CLASSIFICATION	4.101173503864443E-6	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999735412474	WITHOUT_CLASSIFICATION	2.6458752546715503E-8	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999995334756885	WITHOUT_CLASSIFICATION	4.665243114365983E-7	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999968209881744	WITHOUT_CLASSIFICATION	3.179011825634103E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999983436195024	WITHOUT_CLASSIFICATION	1.6563804976068729E-6	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999995337624088	WITHOUT_CLASSIFICATION	4.662375913008934E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999995337624088	WITHOUT_CLASSIFICATION	4.662375913008934E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999995337624088	WITHOUT_CLASSIFICATION	4.662375913008934E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9820011969800773	WITHOUT_CLASSIFICATION	0.017998803019922786	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999988060281506	WITHOUT_CLASSIFICATION	1.1939718494095338E-6	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.9999997416452057	WITHOUT_CLASSIFICATION	2.583547944095502E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999966672740088	WITHOUT_CLASSIFICATION	3.3327259911078826E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999966672740088	WITHOUT_CLASSIFICATION	3.3327259911078826E-6	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999984759656129	WITHOUT_CLASSIFICATION	1.524034387178911E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.999976737323774	WITHOUT_CLASSIFICATION	2.326267622592315E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.999999995748389	WITHOUT_CLASSIFICATION	4.251610888808096E-9	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999534664683	WITHOUT_CLASSIFICATION	4.6533531740904455E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999997627255934	WITHOUT_CLASSIFICATION	2.3727440667380711E-7	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9994911144721506	WITHOUT_CLASSIFICATION	5.088855278494361E-4	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999999673771378	WITHOUT_CLASSIFICATION	3.2622862174729566E-8	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999955115750123	WITHOUT_CLASSIFICATION	4.488424987723389E-6	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999900032004	WITHOUT_CLASSIFICATION	9.996799604009011E-9	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999895873518789	WITHOUT_CLASSIFICATION	1.0412648121081761E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999895873518789	WITHOUT_CLASSIFICATION	1.0412648121081761E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999993415964655	WITHOUT_CLASSIFICATION	6.584035344565385E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999998227193587	WITHOUT_CLASSIFICATION	1.772806411620934E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.9999997080197898	WITHOUT_CLASSIFICATION	2.9198021025764653E-7	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999966988854846	WITHOUT_CLASSIFICATION	3.3011145154561525E-6	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.9999992028695948	WITHOUT_CLASSIFICATION	7.971304051400284E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999940313418813	WITHOUT_CLASSIFICATION	5.9686581187462225E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999918746620996	WITHOUT_CLASSIFICATION	8.12533790047401E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999682990287946	WITHOUT_CLASSIFICATION	3.1700971205403966E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999939211491267	WITHOUT_CLASSIFICATION	6.0788508733033804E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999956038176243	WITHOUT_CLASSIFICATION	4.396182375732212E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.9999998336497115	WITHOUT_CLASSIFICATION	1.663502885705854E-7	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999992147716501	WITHOUT_CLASSIFICATION	7.852283497769832E-7	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.9999995317312645	WITHOUT_CLASSIFICATION	4.682687354841089E-7	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999999043931306	WITHOUT_CLASSIFICATION	9.560686941439602E-8	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999271680047086	WITHOUT_CLASSIFICATION	7.28319952914413E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.9999999549852017	WITHOUT_CLASSIFICATION	4.5014798348817986E-8	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999863864521003	WITHOUT_CLASSIFICATION	1.3613547899874348E-5	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999992218406724	WITHOUT_CLASSIFICATION	7.781593275956183E-7	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999916881549817	WITHOUT_CLASSIFICATION	8.311845018249434E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999982164341328	WITHOUT_CLASSIFICATION	1.7835658673326442E-6	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.9998681748789422	WITHOUT_CLASSIFICATION	1.3182512105785495E-4	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.9999918285803195	WITHOUT_CLASSIFICATION	8.171419680388913E-6	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999950469006252	WITHOUT_CLASSIFICATION	4.953099374758739E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999459193451009	WITHOUT_CLASSIFICATION	5.408065489905439E-5	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.999989111319094	WITHOUT_CLASSIFICATION	1.0888680906012773E-5	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999946087551179	WITHOUT_CLASSIFICATION	5.391244882119284E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999991939370777	WITHOUT_CLASSIFICATION	8.060629223278628E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.999998615799781	WITHOUT_CLASSIFICATION	1.3842002190377544E-6	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999854822457	WITHOUT_CLASSIFICATION	1.4517754252947658E-8	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999930877102687	WITHOUT_CLASSIFICATION	6.912289731245679E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999982539279969	WITHOUT_CLASSIFICATION	1.7460720029764037E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.9999364162154535	WITHOUT_CLASSIFICATION	6.358378454652362E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999995317635254	WITHOUT_CLASSIFICATION	4.6823647457476245E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999982539279969	WITHOUT_CLASSIFICATION	1.7460720029764037E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999956085595343	WITHOUT_CLASSIFICATION	4.391440465731185E-6	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999997910210783	WITHOUT_CLASSIFICATION	2.0897892167353195E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.9999965462911038	WITHOUT_CLASSIFICATION	3.4537088962756725E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999980012058242	WITHOUT_CLASSIFICATION	1.9987941758371984E-6	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999994746324317	WITHOUT_CLASSIFICATION	5.253675683602016E-7	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999984798269608	WITHOUT_CLASSIFICATION	1.5201730392423626E-6	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999997052171092	WITHOUT_CLASSIFICATION	2.9478289073657995E-7	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999997641601769	WITHOUT_CLASSIFICATION	2.3583982309927993E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999981265550478	WITHOUT_CLASSIFICATION	1.8734449521739053E-6	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.999996174991028	WITHOUT_CLASSIFICATION	3.825008971971738E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999815966239718	WITHOUT_CLASSIFICATION	1.840337602827126E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999987430469669	WITHOUT_CLASSIFICATION	1.2569530330102245E-6	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999844504764055	WITHOUT_CLASSIFICATION	1.554952359446742E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998060242856499	WITHOUT_CLASSIFICATION	1.939757143500147E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999958512561548	WITHOUT_CLASSIFICATION	4.14874384521291E-6	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999996692431282	WITHOUT_CLASSIFICATION	3.307568718074819E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999967355426611	WITHOUT_CLASSIFICATION	3.264457338800571E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.9999991317666455	WITHOUT_CLASSIFICATION	8.682333545052342E-7	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999984931577052	WITHOUT_CLASSIFICATION	1.5068422948466546E-6	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999629937573463	WITHOUT_CLASSIFICATION	3.700624265364838E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999774805999	WITHOUT_CLASSIFICATION	2.251940007909084E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999994546251075	WITHOUT_CLASSIFICATION	5.453748925062561E-7	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999992186206549	WITHOUT_CLASSIFICATION	7.813793451664817E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.9999999680773572	WITHOUT_CLASSIFICATION	3.192264285277144E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999998515844781	WITHOUT_CLASSIFICATION	1.4841552194457748E-7	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999998701902204	WITHOUT_CLASSIFICATION	1.2980977963080808E-7	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999983734749754	WITHOUT_CLASSIFICATION	1.6265250245801762E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999987602767071	WITHOUT_CLASSIFICATION	1.2397232929487338E-6	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999979821052765	WITHOUT_CLASSIFICATION	2.017894723437012E-6	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999861009220504	WITHOUT_CLASSIFICATION	1.3899077949455962E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999994074234636	WITHOUT_CLASSIFICATION	5.925765364294553E-7	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9792730383729902	WITHOUT_CLASSIFICATION	0.02072696162700979	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9996750017833934	WITHOUT_CLASSIFICATION	3.249982166066295E-4	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999837920479	WITHOUT_CLASSIFICATION	1.6207952143687023E-8	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999552502434157	WITHOUT_CLASSIFICATION	4.4749756584363595E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.999999896762401	WITHOUT_CLASSIFICATION	1.0323759904521049E-7	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999994796085823	WITHOUT_CLASSIFICATION	5.203914177660528E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999909967807822	WITHOUT_CLASSIFICATION	9.003219217820266E-6	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999925117399492	WITHOUT_CLASSIFICATION	7.488260050818498E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999992430897812	WITHOUT_CLASSIFICATION	7.569102187944874E-7	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999927058801414	WITHOUT_CLASSIFICATION	7.2941198585998755E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999341575114488	WITHOUT_CLASSIFICATION	6.584248855127875E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999361389728068	WITHOUT_CLASSIFICATION	6.386102719316409E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999713479061735	WITHOUT_CLASSIFICATION	2.865209382652989E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999922006949652	WITHOUT_CLASSIFICATION	7.799305034738361E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999999132011291	WITHOUT_CLASSIFICATION	8.679887088363999E-8	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999753415471818	WITHOUT_CLASSIFICATION	2.46584528181949E-5	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999991427606376	WITHOUT_CLASSIFICATION	8.572393623840536E-7	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999962083861621	WITHOUT_CLASSIFICATION	3.7916138380073097E-6	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.9999991777974547	WITHOUT_CLASSIFICATION	8.222025452888058E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999996549416029	WITHOUT_CLASSIFICATION	3.45058397048166E-7	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999952302542213	WITHOUT_CLASSIFICATION	4.769745778752305E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999987214876853	WITHOUT_CLASSIFICATION	1.2785123146774005E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999962083861621	WITHOUT_CLASSIFICATION	3.7916138380073097E-6	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9953532262765378	WITHOUT_CLASSIFICATION	0.0046467737234622344	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9953532262765378	WITHOUT_CLASSIFICATION	0.0046467737234622344	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999994992157882	WITHOUT_CLASSIFICATION	5.007842117058999E-7	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999989297137908	WITHOUT_CLASSIFICATION	1.0702862093038748E-6	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999995992312248	WITHOUT_CLASSIFICATION	4.007687751916169E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999999000573693	WITHOUT_CLASSIFICATION	9.994263078534479E-8	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999869978846276	WITHOUT_CLASSIFICATION	1.3002115372296815E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.99998979557572	WITHOUT_CLASSIFICATION	1.0204424280047894E-5	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999983237445115	WITHOUT_CLASSIFICATION	1.6762554885856261E-6	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.885228879744498	IMPLEMENTATION	0.11477112025550198	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999997507878595	WITHOUT_CLASSIFICATION	2.492121405235154E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999733796293699	WITHOUT_CLASSIFICATION	2.6620370630069823E-5	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999996369091756	WITHOUT_CLASSIFICATION	3.630908244729446E-7	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.999999892321338	WITHOUT_CLASSIFICATION	1.0767866209459463E-7	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999926961410244	WITHOUT_CLASSIFICATION	7.3038589756189986E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.9999977549983817	WITHOUT_CLASSIFICATION	2.245001618309318E-6	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9953567958036406	WITHOUT_CLASSIFICATION	0.004643204196359414	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9991480262442893	WITHOUT_CLASSIFICATION	8.519737557106989E-4	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.9999999310669839	WITHOUT_CLASSIFICATION	6.893301608829235E-8	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999819093875105	WITHOUT_CLASSIFICATION	1.80906124893857E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999819093875105	WITHOUT_CLASSIFICATION	1.80906124893857E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999819093875105	WITHOUT_CLASSIFICATION	1.80906124893857E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999819093875105	WITHOUT_CLASSIFICATION	1.80906124893857E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999819093875105	WITHOUT_CLASSIFICATION	1.80906124893857E-5	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999984525324197	WITHOUT_CLASSIFICATION	1.547467580387406E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997672142138	WITHOUT_CLASSIFICATION	2.3278578619588738E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9995207536737386	WITHOUT_CLASSIFICATION	4.792463262614098E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999997861107296	WITHOUT_CLASSIFICATION	2.1388927026166583E-7	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999998650453088	WITHOUT_CLASSIFICATION	1.349546911626129E-7	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999828938655	WITHOUT_CLASSIFICATION	1.7106134523925113E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997549028540124	WITHOUT_CLASSIFICATION	2.4509714598755836E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999987598223274	WITHOUT_CLASSIFICATION	1.2401776725823452E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999976385889677	WITHOUT_CLASSIFICATION	2.3614110323128666E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999934959093238	WITHOUT_CLASSIFICATION	6.504090676186647E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.999997779098182	WITHOUT_CLASSIFICATION	2.2209018180671615E-6	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999987054069948	WITHOUT_CLASSIFICATION	1.2945930052102556E-6	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.999995466244445	WITHOUT_CLASSIFICATION	4.533755554909537E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999971225133736	WITHOUT_CLASSIFICATION	2.8774866264079425E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999976787149326	WITHOUT_CLASSIFICATION	2.3212850673121887E-6	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999990561232107	WITHOUT_CLASSIFICATION	9.438767892891884E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999975357337281	WITHOUT_CLASSIFICATION	2.464266271974623E-6	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999946067394626	WITHOUT_CLASSIFICATION	5.393260537361191E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999982608256383	WITHOUT_CLASSIFICATION	1.7391743618112099E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999950685309943	WITHOUT_CLASSIFICATION	4.931469005728372E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999977823670527	WITHOUT_CLASSIFICATION	2.217632947354567E-6	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999984801018142	WITHOUT_CLASSIFICATION	1.5198981858201476E-6	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999992324515177	WITHOUT_CLASSIFICATION	7.675484823851297E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.999998031098925	WITHOUT_CLASSIFICATION	1.968901075034153E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999987821450842	WITHOUT_CLASSIFICATION	1.2178549158757982E-6	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999987697756094	WITHOUT_CLASSIFICATION	1.2302243905998574E-6	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999939593207776	WITHOUT_CLASSIFICATION	6.040679222475252E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999962682000089	WITHOUT_CLASSIFICATION	3.7317999911205346E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999969071670016	WITHOUT_CLASSIFICATION	3.092832998461303E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999989975207488	WITHOUT_CLASSIFICATION	1.0024792511032734E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.999997865135839	WITHOUT_CLASSIFICATION	2.1348641610574784E-6	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999981045098187	WITHOUT_CLASSIFICATION	1.8954901812687932E-6	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999979037564989	WITHOUT_CLASSIFICATION	2.096243501125191E-6	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999974715456994	WITHOUT_CLASSIFICATION	2.528454300580236E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999988846926566	WITHOUT_CLASSIFICATION	1.1153073433871413E-6	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999981920022946	WITHOUT_CLASSIFICATION	1.8079977054107338E-6	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999976130511087	WITHOUT_CLASSIFICATION	2.386948891225989E-6	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999979717291435	WITHOUT_CLASSIFICATION	2.0282708564036E-6	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.999998992915836	WITHOUT_CLASSIFICATION	1.0070841639268225E-6	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999979859127436	WITHOUT_CLASSIFICATION	2.014087256411286E-6	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.9999968947307492	WITHOUT_CLASSIFICATION	3.1052692509002696E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999996667191444	WITHOUT_CLASSIFICATION	3.332808556076118E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999987414908058	WITHOUT_CLASSIFICATION	1.2585091942062601E-6	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.9999966922733969	WITHOUT_CLASSIFICATION	3.307726603148465E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999961561082816	WITHOUT_CLASSIFICATION	3.843891718400515E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999985028367692	WITHOUT_CLASSIFICATION	1.4971632309379624E-6	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999989736487978	WITHOUT_CLASSIFICATION	1.0263512022992902E-6	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999986839550381	WITHOUT_CLASSIFICATION	1.31604496185488E-6	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999966417789161	WITHOUT_CLASSIFICATION	3.3582210838873714E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999981934419594	WITHOUT_CLASSIFICATION	1.806558040639025E-6	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9995207536737386	WITHOUT_CLASSIFICATION	4.792463262614098E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999986975695858	WITHOUT_CLASSIFICATION	1.3024304141275865E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999987379529487	WITHOUT_CLASSIFICATION	1.2620470513003353E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999981995918404	WITHOUT_CLASSIFICATION	1.8004081595329525E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999978283772716	WITHOUT_CLASSIFICATION	2.171622728465763E-6	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999978832760634	WITHOUT_CLASSIFICATION	2.1167239366496357E-6	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999978931864706	WITHOUT_CLASSIFICATION	2.1068135295080217E-6	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999982352109543	WITHOUT_CLASSIFICATION	1.7647890456728641E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999978822424493	WITHOUT_CLASSIFICATION	2.1177575507041536E-6	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999978780814827	WITHOUT_CLASSIFICATION	2.1219185172900856E-6	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999982379026493	WITHOUT_CLASSIFICATION	1.7620973507915338E-6	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999978072136599	WITHOUT_CLASSIFICATION	2.1927863401773056E-6	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999978032580202	WITHOUT_CLASSIFICATION	2.1967419798133693E-6	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.999997878668825	WITHOUT_CLASSIFICATION	2.121331175117178E-6	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.9999981981284104	WITHOUT_CLASSIFICATION	1.8018715895320722E-6	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999986975890571	WITHOUT_CLASSIFICATION	1.302410942959245E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999985023048567	WITHOUT_CLASSIFICATION	1.497695143292069E-6	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999968489832279	WITHOUT_CLASSIFICATION	3.1510167720451505E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999962130731762	WITHOUT_CLASSIFICATION	3.7869268236382403E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999981507952334	WITHOUT_CLASSIFICATION	1.849204766623343E-6	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999973915589517	WITHOUT_CLASSIFICATION	2.608441048278406E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999979468806451	WITHOUT_CLASSIFICATION	2.0531193548238026E-6	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999975455092082	WITHOUT_CLASSIFICATION	2.4544907918261507E-6	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999977438805077	WITHOUT_CLASSIFICATION	2.256119492426962E-6	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999985206421945	WITHOUT_CLASSIFICATION	1.4793578053877381E-6	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999980850485332	WITHOUT_CLASSIFICATION	1.9149514669023334E-6	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.999999040968708	WITHOUT_CLASSIFICATION	9.59031292026533E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999990250945433	WITHOUT_CLASSIFICATION	9.749054566925916E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999975979480795	WITHOUT_CLASSIFICATION	2.4020519204338697E-6	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.999997408194642	WITHOUT_CLASSIFICATION	2.591805358056916E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999971006334504	WITHOUT_CLASSIFICATION	2.8993665496730713E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.999999221556793	WITHOUT_CLASSIFICATION	7.784432070851216E-7	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999983423178069	WITHOUT_CLASSIFICATION	1.657682193119159E-6	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999983770738305	WITHOUT_CLASSIFICATION	1.6229261695050194E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999999193102537	WITHOUT_CLASSIFICATION	8.068974629968216E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999984804689735	WITHOUT_CLASSIFICATION	1.5195310264211286E-6	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999978933578363	WITHOUT_CLASSIFICATION	2.1066421637893636E-6	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999949268248363	WITHOUT_CLASSIFICATION	5.073175163723505E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999983188327602	WITHOUT_CLASSIFICATION	1.6811672397590084E-6	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999982571815994	WITHOUT_CLASSIFICATION	1.7428184006481163E-6	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999987910282452	WITHOUT_CLASSIFICATION	1.2089717548246042E-6	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999983667836707	WITHOUT_CLASSIFICATION	1.6332163293879946E-6	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999980362797056	WITHOUT_CLASSIFICATION	1.9637202944106196E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999990101615892	WITHOUT_CLASSIFICATION	9.89838410741805E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999981714123068	WITHOUT_CLASSIFICATION	1.828587693140954E-6	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999987390784633	WITHOUT_CLASSIFICATION	1.2609215367221875E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999974761102561	WITHOUT_CLASSIFICATION	2.5238897439421986E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999942239887127	WITHOUT_CLASSIFICATION	5.77601128723902E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999981043062255	WITHOUT_CLASSIFICATION	1.8956937745721422E-6	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999980595631908	WITHOUT_CLASSIFICATION	1.9404368092646365E-6	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999980380474132	WITHOUT_CLASSIFICATION	1.961952586807487E-6	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999974967445607	WITHOUT_CLASSIFICATION	2.5032554392256894E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999975965590084	WITHOUT_CLASSIFICATION	2.40344099160047E-6	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999952442760317	WITHOUT_CLASSIFICATION	4.7557239683052814E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999932775961898	WITHOUT_CLASSIFICATION	6.7224038101393745E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999923253225127	WITHOUT_CLASSIFICATION	7.674677487317955E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999974029677818	WITHOUT_CLASSIFICATION	2.5970322183047244E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999986513415785	WITHOUT_CLASSIFICATION	1.3486584215029562E-6	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999973337109519	WITHOUT_CLASSIFICATION	2.6662890480461322E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999973126553611	WITHOUT_CLASSIFICATION	2.6873446389588786E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.999997328432782	WITHOUT_CLASSIFICATION	2.671567218105988E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999983406672341	WITHOUT_CLASSIFICATION	1.6593327658474589E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999996707107738	WITHOUT_CLASSIFICATION	3.2928922619726213E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999985886061757	WITHOUT_CLASSIFICATION	1.4113938242145206E-6	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999971303804425	WITHOUT_CLASSIFICATION	2.8696195576492712E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999906035377217	WITHOUT_CLASSIFICATION	9.396462278332074E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999967662007122	WITHOUT_CLASSIFICATION	3.2337992878626305E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999928035795164	WITHOUT_CLASSIFICATION	7.196420483603995E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.9999974233442039	WITHOUT_CLASSIFICATION	2.5766557961538614E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999974405332009	WITHOUT_CLASSIFICATION	2.5594667990567853E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999973424844004	WITHOUT_CLASSIFICATION	2.6575155994911155E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999973337707049	WITHOUT_CLASSIFICATION	2.6662292950644224E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999967660637276	WITHOUT_CLASSIFICATION	3.2339362724081474E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999967922940931	WITHOUT_CLASSIFICATION	3.207705907032804E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999984934561951	WITHOUT_CLASSIFICATION	1.50654380488605E-6	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.9999988040909698	WITHOUT_CLASSIFICATION	1.1959090302466238E-6	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999962915007629	WITHOUT_CLASSIFICATION	3.7084992371252307E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999990403233363	WITHOUT_CLASSIFICATION	9.596766637074517E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999983784096594	WITHOUT_CLASSIFICATION	1.6215903405427495E-6	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999979563845166	WITHOUT_CLASSIFICATION	2.043615483384358E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999989809785671	WITHOUT_CLASSIFICATION	1.019021432855965E-6	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999979444964175	WITHOUT_CLASSIFICATION	2.055503582516854E-6	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.9999985167289014	WITHOUT_CLASSIFICATION	1.4832710986749496E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999997623923534	WITHOUT_CLASSIFICATION	2.376076466011768E-6	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999966734060662	WITHOUT_CLASSIFICATION	3.326593933740054E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999977908091855	WITHOUT_CLASSIFICATION	2.209190814552137E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999984759130538	WITHOUT_CLASSIFICATION	1.5240869461392637E-6	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999976147476121	WITHOUT_CLASSIFICATION	2.385252387940215E-6	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.999998027149021	WITHOUT_CLASSIFICATION	1.9728509790723535E-6	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999990091092855	WITHOUT_CLASSIFICATION	9.908907144212207E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999974534054059	WITHOUT_CLASSIFICATION	2.546594594081013E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.999998133472431	WITHOUT_CLASSIFICATION	1.8665275689168112E-6	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999969080728728	WITHOUT_CLASSIFICATION	3.091927127250674E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999967698887391	WITHOUT_CLASSIFICATION	3.2301112607864857E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999975291134793	WITHOUT_CLASSIFICATION	2.4708865206462173E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999959554118856	WITHOUT_CLASSIFICATION	4.044588114468931E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999975075996301	WITHOUT_CLASSIFICATION	2.4924003698126464E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999966181255955	WITHOUT_CLASSIFICATION	3.3818744046279187E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999975051023205	WITHOUT_CLASSIFICATION	2.4948976794594237E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999974875064679	WITHOUT_CLASSIFICATION	2.512493532150915E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999987326798488	WITHOUT_CLASSIFICATION	1.2673201512155058E-6	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999976543537975	WITHOUT_CLASSIFICATION	2.345646202580335E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999970563071299	WITHOUT_CLASSIFICATION	2.94369287017529E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999959026854696	WITHOUT_CLASSIFICATION	4.0973145304510685E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999952776865062	WITHOUT_CLASSIFICATION	4.72231349384302E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999966403538931	WITHOUT_CLASSIFICATION	3.3596461068502565E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999988290704745	WITHOUT_CLASSIFICATION	1.170929525499873E-6	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999983271312666	WITHOUT_CLASSIFICATION	1.672868733369664E-6	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999979687291338	WITHOUT_CLASSIFICATION	2.031270866158774E-6	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999979822299367	WITHOUT_CLASSIFICATION	2.0177700631996998E-6	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.999998018939393	WITHOUT_CLASSIFICATION	1.981060607105873E-6	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999960082325594	WITHOUT_CLASSIFICATION	3.9917674405437665E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999997527700944	WITHOUT_CLASSIFICATION	2.47229905599949E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999984625869539	WITHOUT_CLASSIFICATION	1.5374130461379643E-6	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.999998101448335	WITHOUT_CLASSIFICATION	1.8985516650225853E-6	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999984911708579	WITHOUT_CLASSIFICATION	1.5088291421012972E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999915921777668	WITHOUT_CLASSIFICATION	8.40782223321684E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.999996203432334	WITHOUT_CLASSIFICATION	3.7965676659425454E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999957094232578	WITHOUT_CLASSIFICATION	4.2905767421829665E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999953896518652	WITHOUT_CLASSIFICATION	4.610348134761294E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999998078268029	WITHOUT_CLASSIFICATION	1.9217319709453213E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999962007503481	WITHOUT_CLASSIFICATION	3.7992496520260773E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.999996424080832	WITHOUT_CLASSIFICATION	3.5759191679721517E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999969661316224	WITHOUT_CLASSIFICATION	3.0338683777100853E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999972635579228	WITHOUT_CLASSIFICATION	2.7364420770929807E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999924683677085	WITHOUT_CLASSIFICATION	7.531632291551191E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999960513721876	WITHOUT_CLASSIFICATION	3.9486278123973655E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999946416857645	WITHOUT_CLASSIFICATION	5.3583142356279005E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999955540261307	WITHOUT_CLASSIFICATION	4.445973869252527E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999966601976639	WITHOUT_CLASSIFICATION	3.3398023360489477E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999953623529888	WITHOUT_CLASSIFICATION	4.637647011270744E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999936700894376	WITHOUT_CLASSIFICATION	6.329910562370593E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.999992056205865	WITHOUT_CLASSIFICATION	7.943794135047474E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999961659963208	WITHOUT_CLASSIFICATION	3.834003679299535E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.999998038922462	WITHOUT_CLASSIFICATION	1.961077538085044E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999986557339883	WITHOUT_CLASSIFICATION	1.3442660116684664E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999984611448024	WITHOUT_CLASSIFICATION	1.5388551975334988E-6	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999962543478695	WITHOUT_CLASSIFICATION	3.745652130398533E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.999997438961477	WITHOUT_CLASSIFICATION	2.5610385230659477E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999969946987426	WITHOUT_CLASSIFICATION	3.0053012573214245E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.9999966192953098	WITHOUT_CLASSIFICATION	3.3807046902459317E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999967696495954	WITHOUT_CLASSIFICATION	3.230350404592745E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999935595618656	WITHOUT_CLASSIFICATION	6.440438134283627E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999967205734424	WITHOUT_CLASSIFICATION	3.2794265576899985E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999960569373303	WITHOUT_CLASSIFICATION	3.943062669742624E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.9999970273616708	WITHOUT_CLASSIFICATION	2.9726383290857817E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999957518721447	WITHOUT_CLASSIFICATION	4.2481278553377E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999977477128212	WITHOUT_CLASSIFICATION	2.2522871788682095E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999961145848135	WITHOUT_CLASSIFICATION	3.8854151864148165E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999961460992856	WITHOUT_CLASSIFICATION	3.8539007144116406E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.999998410116085	WITHOUT_CLASSIFICATION	1.5898839149156804E-6	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999967730573001	WITHOUT_CLASSIFICATION	3.2269426999212643E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999953899719235	WITHOUT_CLASSIFICATION	4.6100280765052896E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999956693439063	WITHOUT_CLASSIFICATION	4.330656093764667E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999981878639356	WITHOUT_CLASSIFICATION	1.8121360644310925E-6	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.999994990038124	WITHOUT_CLASSIFICATION	5.009961876031577E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999956600211412	WITHOUT_CLASSIFICATION	4.3399788587985235E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999940546546938	WITHOUT_CLASSIFICATION	5.945345306107874E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999979643428647	WITHOUT_CLASSIFICATION	2.035657135281834E-6	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999945853482769	WITHOUT_CLASSIFICATION	5.4146517231090906E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999964602455004	WITHOUT_CLASSIFICATION	3.5397544994973153E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999889385498932	WITHOUT_CLASSIFICATION	1.1061450106813246E-5	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999952031152947	WITHOUT_CLASSIFICATION	4.7968847053184705E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999977004449389	WITHOUT_CLASSIFICATION	2.2995550610898625E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999946797415797	WITHOUT_CLASSIFICATION	5.320258420320566E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999912714130161	WITHOUT_CLASSIFICATION	8.728586983923707E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999957322466961	WITHOUT_CLASSIFICATION	4.267753303892988E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999966915517854	WITHOUT_CLASSIFICATION	3.308448214732606E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.9999952802457283	WITHOUT_CLASSIFICATION	4.719754271670379E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999960475194177	WITHOUT_CLASSIFICATION	3.952480582259264E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999994869140606	WITHOUT_CLASSIFICATION	5.130859394041324E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999971414243722	WITHOUT_CLASSIFICATION	2.858575627847474E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999946225717247	WITHOUT_CLASSIFICATION	5.377428275365711E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999977332534405	WITHOUT_CLASSIFICATION	2.2667465595081125E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999954724209267	WITHOUT_CLASSIFICATION	4.527579073292024E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.999995663685105	WITHOUT_CLASSIFICATION	4.336314895081851E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999930066811069	WITHOUT_CLASSIFICATION	6.993318893032328E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999925730122095	WITHOUT_CLASSIFICATION	7.426987790596376E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999942657552153	WITHOUT_CLASSIFICATION	5.734244784687624E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999981588602188	WITHOUT_CLASSIFICATION	1.8411397811562406E-6	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999980375358481	WITHOUT_CLASSIFICATION	1.9624641517454033E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999958762027199	WITHOUT_CLASSIFICATION	4.123797280156531E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999949997968277	WITHOUT_CLASSIFICATION	5.000203172305916E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999961525763967	WITHOUT_CLASSIFICATION	3.847423603236205E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999970996307229	WITHOUT_CLASSIFICATION	2.900369277178491E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.999996153154698	WITHOUT_CLASSIFICATION	3.846845301934852E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.999995006269464	WITHOUT_CLASSIFICATION	4.993730535973425E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999947564028498	WITHOUT_CLASSIFICATION	5.243597150193297E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999934522338544	WITHOUT_CLASSIFICATION	6.547766145692049E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999929490544598	WITHOUT_CLASSIFICATION	7.05094554019842E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.99999619095917	WITHOUT_CLASSIFICATION	3.8090408299891084E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999960377222614	WITHOUT_CLASSIFICATION	3.9622777385362384E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.99999481686148	WITHOUT_CLASSIFICATION	5.183138520081652E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999947851253186	WITHOUT_CLASSIFICATION	5.2148746814894535E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999935009782384	WITHOUT_CLASSIFICATION	6.4990217616861E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.9999970574513627	WITHOUT_CLASSIFICATION	2.9425486373308595E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999955567545572	WITHOUT_CLASSIFICATION	4.4432454428217E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999962851471432	WITHOUT_CLASSIFICATION	3.714852856777688E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999953597093513	WITHOUT_CLASSIFICATION	4.64029064877553E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999954165031847	WITHOUT_CLASSIFICATION	4.583496815323903E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999976713669334	WITHOUT_CLASSIFICATION	2.328633066652859E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999939204362357	WITHOUT_CLASSIFICATION	6.0795637644002905E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999894680674438	WITHOUT_CLASSIFICATION	1.0531932556077822E-5	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.9999946268818012	WITHOUT_CLASSIFICATION	5.373118198731534E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999942523459222	WITHOUT_CLASSIFICATION	5.747654077788524E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999947429992977	WITHOUT_CLASSIFICATION	5.257000702297928E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999934408227328	WITHOUT_CLASSIFICATION	6.559177267245062E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999897185889589	WITHOUT_CLASSIFICATION	1.0281411041139938E-5	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999977277566704	WITHOUT_CLASSIFICATION	2.272243329497399E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999955355843922	WITHOUT_CLASSIFICATION	4.464415607674528E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.999994158331393	WITHOUT_CLASSIFICATION	5.841668607016319E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.9999945448454126	WITHOUT_CLASSIFICATION	5.45515458736359E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999977901318042	WITHOUT_CLASSIFICATION	2.209868195779046E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999964323451355	WITHOUT_CLASSIFICATION	3.5676548645225964E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999965703451296	WITHOUT_CLASSIFICATION	3.4296548703337635E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.9999964204735999	WITHOUT_CLASSIFICATION	3.579526400183568E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999977743207124	WITHOUT_CLASSIFICATION	2.2256792876099697E-6	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999958482724812	WITHOUT_CLASSIFICATION	4.151727518789505E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999955850163237	WITHOUT_CLASSIFICATION	4.414983676314997E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999961361020934	WITHOUT_CLASSIFICATION	3.863897906647275E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999956460318621	WITHOUT_CLASSIFICATION	4.353968137942361E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.999997805323893	WITHOUT_CLASSIFICATION	2.194676106962448E-6	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.999995945647715	WITHOUT_CLASSIFICATION	4.0543522850940445E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999945730898923	WITHOUT_CLASSIFICATION	5.426910107723933E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999927018107865	WITHOUT_CLASSIFICATION	7.298189213513754E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.9999904373542652	WITHOUT_CLASSIFICATION	9.562645734805754E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999900569867327	WITHOUT_CLASSIFICATION	9.943013267290864E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999950569572681	WITHOUT_CLASSIFICATION	4.943042731812528E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999999110215297	WITHOUT_CLASSIFICATION	8.89784702300327E-8	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999739598323265	WITHOUT_CLASSIFICATION	2.6040167673533645E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999871905934213	WITHOUT_CLASSIFICATION	1.2809406578786655E-5	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.999991780553447	WITHOUT_CLASSIFICATION	8.219446553055417E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999899694427767	WITHOUT_CLASSIFICATION	1.003055722320135E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998792662168895	WITHOUT_CLASSIFICATION	1.2073378311044543E-4	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997530304824902	WITHOUT_CLASSIFICATION	2.469695175097614E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998316812371781	WITHOUT_CLASSIFICATION	1.6831876282182354E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998979792664431	WITHOUT_CLASSIFICATION	1.020207335568263E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.9996828149643934	WITHOUT_CLASSIFICATION	3.171850356066497E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999917359414372	WITHOUT_CLASSIFICATION	8.264058562768502E-6	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999983260677331	WITHOUT_CLASSIFICATION	1.673932266940323E-6	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999911486916775	WITHOUT_CLASSIFICATION	8.851308322498928E-6	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999868384192415	WITHOUT_CLASSIFICATION	1.3161580758488648E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999786364405624	WITHOUT_CLASSIFICATION	2.1363559437509334E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9984562633348393	WITHOUT_CLASSIFICATION	0.001543736665160774	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999279613324819	WITHOUT_CLASSIFICATION	7.203866751816024E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9995761676339462	WITHOUT_CLASSIFICATION	4.2383236605383657E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999998611242585	WITHOUT_CLASSIFICATION	1.3887574142462894E-7	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999915651983974	WITHOUT_CLASSIFICATION	8.434801602687842E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999761347607267	WITHOUT_CLASSIFICATION	2.386523927328096E-5	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999978666261679	WITHOUT_CLASSIFICATION	2.1333738321788986E-6	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.999999995051893	WITHOUT_CLASSIFICATION	4.9481070053520745E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999907719878	WITHOUT_CLASSIFICATION	9.228012318120186E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999907719878	WITHOUT_CLASSIFICATION	9.228012318120186E-9	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999997935183004	WITHOUT_CLASSIFICATION	2.0648169961939727E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999985526123516	WITHOUT_CLASSIFICATION	1.447387648481483E-6	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999997531985667	WITHOUT_CLASSIFICATION	2.468014332834959E-7	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.9999994280057687	WITHOUT_CLASSIFICATION	5.719942313689308E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.9999975952908255	WITHOUT_CLASSIFICATION	2.4047091744665572E-6	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999522668469	WITHOUT_CLASSIFICATION	4.773315302586155E-8	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999895692016885	WITHOUT_CLASSIFICATION	1.0430798311616858E-5	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999956325950365	WITHOUT_CLASSIFICATION	4.367404963443879E-6	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9997675977825125	WITHOUT_CLASSIFICATION	2.3240221748754985E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999123115407166	WITHOUT_CLASSIFICATION	8.7688459283416E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999941512120724	WITHOUT_CLASSIFICATION	5.848787927666997E-6	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.9994560312431443	WITHOUT_CLASSIFICATION	5.439687568556051E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999972711421486	WITHOUT_CLASSIFICATION	2.728857851399843E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999933082131107	WITHOUT_CLASSIFICATION	6.691786889272848E-6	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999949287158144	WITHOUT_CLASSIFICATION	5.071284185614903E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999836741542989	WITHOUT_CLASSIFICATION	1.6325845701149027E-5	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999736848754597	WITHOUT_CLASSIFICATION	2.6315124540309436E-5	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999940550596037	WITHOUT_CLASSIFICATION	5.9449403963327756E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.999998741069663	WITHOUT_CLASSIFICATION	1.258930336998296E-6	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9986101099838857	WITHOUT_CLASSIFICATION	0.0013898900161143654	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999450495797	WITHOUT_CLASSIFICATION	5.495042041382284E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999884464012063	WITHOUT_CLASSIFICATION	1.1553598793792112E-5	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999995854965655	WITHOUT_CLASSIFICATION	4.145034345431482E-7	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999984889893097	WITHOUT_CLASSIFICATION	1.5110106902498991E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999995854965655	WITHOUT_CLASSIFICATION	4.145034345431482E-7	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999993416966916	WITHOUT_CLASSIFICATION	6.583033084440526E-7	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999997085974001	WITHOUT_CLASSIFICATION	2.9140259990320535E-7	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9999638615976544	WITHOUT_CLASSIFICATION	3.613840234571063E-5	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999739846193857	WITHOUT_CLASSIFICATION	2.601538061418697E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999510506873	WITHOUT_CLASSIFICATION	4.8949312729568904E-8	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999988701585137	WITHOUT_CLASSIFICATION	1.1298414863442718E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999988701585137	WITHOUT_CLASSIFICATION	1.1298414863442718E-6	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999988701585137	WITHOUT_CLASSIFICATION	1.1298414863442718E-6	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999998923356869	WITHOUT_CLASSIFICATION	1.0766431317491363E-7	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999775248203036	WITHOUT_CLASSIFICATION	2.2475179696559323E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998262805446	WITHOUT_CLASSIFICATION	1.7371945534542698E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999922444384443	WITHOUT_CLASSIFICATION	7.75556155564482E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999922444384443	WITHOUT_CLASSIFICATION	7.75556155564482E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999922444384443	WITHOUT_CLASSIFICATION	7.75556155564482E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999922444384443	WITHOUT_CLASSIFICATION	7.75556155564482E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999922444384443	WITHOUT_CLASSIFICATION	7.75556155564482E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999922444384443	WITHOUT_CLASSIFICATION	7.75556155564482E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999625962717832	WITHOUT_CLASSIFICATION	3.7403728216787016E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999625962717832	WITHOUT_CLASSIFICATION	3.7403728216787016E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999625962717832	WITHOUT_CLASSIFICATION	3.7403728216787016E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999625962717832	WITHOUT_CLASSIFICATION	3.7403728216787016E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999625962717832	WITHOUT_CLASSIFICATION	3.7403728216787016E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999244181809581	WITHOUT_CLASSIFICATION	7.558181904190852E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999244181809581	WITHOUT_CLASSIFICATION	7.558181904190852E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999244181809581	WITHOUT_CLASSIFICATION	7.558181904190852E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999244181809581	WITHOUT_CLASSIFICATION	7.558181904190852E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999244181809581	WITHOUT_CLASSIFICATION	7.558181904190852E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997067904989705	WITHOUT_CLASSIFICATION	2.932095010294794E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997067904989705	WITHOUT_CLASSIFICATION	2.932095010294794E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997067904989705	WITHOUT_CLASSIFICATION	2.932095010294794E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997067904989705	WITHOUT_CLASSIFICATION	2.932095010294794E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997067904989705	WITHOUT_CLASSIFICATION	2.932095010294794E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997067904989705	WITHOUT_CLASSIFICATION	2.932095010294794E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996719195940755	WITHOUT_CLASSIFICATION	3.2808040592443E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996719195940755	WITHOUT_CLASSIFICATION	3.2808040592443E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996719195940755	WITHOUT_CLASSIFICATION	3.2808040592443E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996719195940755	WITHOUT_CLASSIFICATION	3.2808040592443E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9996719195940755	WITHOUT_CLASSIFICATION	3.2808040592443E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999343175154584	WITHOUT_CLASSIFICATION	6.568248454159431E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999343175154584	WITHOUT_CLASSIFICATION	6.568248454159431E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999343175154584	WITHOUT_CLASSIFICATION	6.568248454159431E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999343175154584	WITHOUT_CLASSIFICATION	6.568248454159431E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999343175154584	WITHOUT_CLASSIFICATION	6.568248454159431E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9995207536737386	WITHOUT_CLASSIFICATION	4.792463262614098E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9995207536737386	WITHOUT_CLASSIFICATION	4.792463262614098E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9995207536737386	WITHOUT_CLASSIFICATION	4.792463262614098E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9995207536737386	WITHOUT_CLASSIFICATION	4.792463262614098E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.9995207536737386	WITHOUT_CLASSIFICATION	4.792463262614098E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999997861107296	WITHOUT_CLASSIFICATION	2.1388927026166583E-7	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999828938655	WITHOUT_CLASSIFICATION	1.7106134523925113E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9997549028540124	WITHOUT_CLASSIFICATION	2.4509714598755836E-4	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999987598223274	WITHOUT_CLASSIFICATION	1.2401776725823452E-6	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999976385889677	WITHOUT_CLASSIFICATION	2.3614110323128666E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999954553064231	WITHOUT_CLASSIFICATION	4.544693576964019E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999950685309943	WITHOUT_CLASSIFICATION	4.931469005728372E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999987821450842	WITHOUT_CLASSIFICATION	1.2178549158757982E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999969071670016	WITHOUT_CLASSIFICATION	3.092832998461303E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999989975207488	WITHOUT_CLASSIFICATION	1.0024792511032734E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999983060046298	WITHOUT_CLASSIFICATION	1.6939953701286452E-6	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.999997865135839	WITHOUT_CLASSIFICATION	2.1348641610574784E-6	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999977931844879	WITHOUT_CLASSIFICATION	2.2068155120866664E-6	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999968461685159	WITHOUT_CLASSIFICATION	3.1538314840937823E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999971122256371	WITHOUT_CLASSIFICATION	2.8877743628209258E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999984621254483	WITHOUT_CLASSIFICATION	1.5378745516868461E-6	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999987518021181	WITHOUT_CLASSIFICATION	1.2481978820376918E-6	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999944977594561	WITHOUT_CLASSIFICATION	5.50224054382861E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999981114552065	WITHOUT_CLASSIFICATION	1.8885447936014876E-6	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999980960731466	WITHOUT_CLASSIFICATION	1.9039268533247992E-6	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999990620889629	WITHOUT_CLASSIFICATION	9.379110370326731E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.9999982505274327	WITHOUT_CLASSIFICATION	1.7494725671625457E-6	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.9999975650146234	WITHOUT_CLASSIFICATION	2.434985376670459E-6	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999983657920172	WITHOUT_CLASSIFICATION	1.6342079828200424E-6	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999975053921332	WITHOUT_CLASSIFICATION	2.494607866792016E-6	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999984919483076	WITHOUT_CLASSIFICATION	1.5080516924922552E-6	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.9999975508220731	WITHOUT_CLASSIFICATION	2.4491779269083526E-6	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999990583149195	WITHOUT_CLASSIFICATION	9.416850803217707E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999984958738827	WITHOUT_CLASSIFICATION	1.5041261172526095E-6	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999979098967435	WITHOUT_CLASSIFICATION	2.0901032564411556E-6	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.999998947872962	WITHOUT_CLASSIFICATION	1.0521270380115907E-6	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999978777180211	WITHOUT_CLASSIFICATION	2.1222819789096965E-6	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999976321715519	WITHOUT_CLASSIFICATION	2.3678284481108875E-6	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999967043631567	WITHOUT_CLASSIFICATION	3.295636843264544E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.9999978720766374	WITHOUT_CLASSIFICATION	2.127923362628188E-6	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999977318361121	WITHOUT_CLASSIFICATION	2.2681638879807326E-6	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.999997459891131	WITHOUT_CLASSIFICATION	2.540108868975223E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999974549003314	WITHOUT_CLASSIFICATION	2.5450996686312963E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999973809096785	WITHOUT_CLASSIFICATION	2.6190903216278547E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999903745624191	WITHOUT_CLASSIFICATION	9.625437580978178E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999967014736539	WITHOUT_CLASSIFICATION	3.2985263460805544E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999976043153489	WITHOUT_CLASSIFICATION	2.3956846510810023E-6	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999979932189721	WITHOUT_CLASSIFICATION	2.0067810280226317E-6	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999987070153263	WITHOUT_CLASSIFICATION	1.292984673567585E-6	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999983502990708	WITHOUT_CLASSIFICATION	1.6497009292303688E-6	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.9999984160611961	WITHOUT_CLASSIFICATION	1.5839388039565897E-6	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999984845713166	WITHOUT_CLASSIFICATION	1.5154286834673075E-6	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999950112819244	WITHOUT_CLASSIFICATION	4.9887180756060485E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999982649637621	WITHOUT_CLASSIFICATION	1.7350362378512187E-6	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999987379529487	WITHOUT_CLASSIFICATION	1.2620470513003353E-6	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999981995918404	WITHOUT_CLASSIFICATION	1.8004081595329525E-6	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999978283772716	WITHOUT_CLASSIFICATION	2.171622728465763E-6	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999978822424493	WITHOUT_CLASSIFICATION	2.1177575507041536E-6	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.9999985023048567	WITHOUT_CLASSIFICATION	1.497695143292069E-6	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999990250945433	WITHOUT_CLASSIFICATION	9.749054566925916E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999928685971661	WITHOUT_CLASSIFICATION	7.131402833967281E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999975979480795	WITHOUT_CLASSIFICATION	2.4020519204338697E-6	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999990101615892	WITHOUT_CLASSIFICATION	9.89838410741805E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.9999987390784633	WITHOUT_CLASSIFICATION	1.2609215367221875E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999976170463519	WITHOUT_CLASSIFICATION	2.382953648099051E-6	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999974761102561	WITHOUT_CLASSIFICATION	2.5238897439421986E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.9999942239887127	WITHOUT_CLASSIFICATION	5.77601128723902E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999984912032617	WITHOUT_CLASSIFICATION	1.508796738320353E-6	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999978374064015	WITHOUT_CLASSIFICATION	2.1625935985165738E-6	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999989640323522	WITHOUT_CLASSIFICATION	1.035967647820564E-6	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999972444213614	WITHOUT_CLASSIFICATION	2.7555786386361803E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999938430167795	WITHOUT_CLASSIFICATION	6.1569832204275765E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999952715687064	WITHOUT_CLASSIFICATION	4.728431293616281E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999983854208221	WITHOUT_CLASSIFICATION	1.61457917788721E-6	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999983182967574	WITHOUT_CLASSIFICATION	1.6817032425684794E-6	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999972250995721	WITHOUT_CLASSIFICATION	2.7749004278657023E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999972428033417	WITHOUT_CLASSIFICATION	2.757196658317285E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999989524768274	WITHOUT_CLASSIFICATION	1.0475231725934066E-6	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999977921112673	WITHOUT_CLASSIFICATION	2.2078887326365125E-6	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999972500408816	WITHOUT_CLASSIFICATION	2.7499591183974855E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999984061419581	WITHOUT_CLASSIFICATION	1.593858041901986E-6	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999984137666069	WITHOUT_CLASSIFICATION	1.5862333931307925E-6	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999989888754193	WITHOUT_CLASSIFICATION	1.0111245807081945E-6	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999980010125308	WITHOUT_CLASSIFICATION	1.9989874691835127E-6	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999979970553443	WITHOUT_CLASSIFICATION	2.0029446556229417E-6	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.999996772161272	WITHOUT_CLASSIFICATION	3.227838728038112E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999982844219454	WITHOUT_CLASSIFICATION	1.7155780545768516E-6	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999930192470216	WITHOUT_CLASSIFICATION	6.9807529784875E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999976011443411	WITHOUT_CLASSIFICATION	2.3988556589179786E-6	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999974991914873	WITHOUT_CLASSIFICATION	2.5008085128381347E-6	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999984387715	WITHOUT_CLASSIFICATION	1.5612285000436038E-6	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.999996866631738	WITHOUT_CLASSIFICATION	3.133368261940355E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999975961923427	WITHOUT_CLASSIFICATION	2.403807657224754E-6	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999986224900913	WITHOUT_CLASSIFICATION	1.3775099087749247E-6	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999983909222542	WITHOUT_CLASSIFICATION	1.6090777457958804E-6	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999983590564041	WITHOUT_CLASSIFICATION	1.640943595908906E-6	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.99999838396232	WITHOUT_CLASSIFICATION	1.616037679951207E-6	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.9999986500306531	WITHOUT_CLASSIFICATION	1.349969346933923E-6	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999980526890329	WITHOUT_CLASSIFICATION	1.947310967193351E-6	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999941673528687	WITHOUT_CLASSIFICATION	5.8326471312580594E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999976436952436	WITHOUT_CLASSIFICATION	2.35630475642618E-6	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999923153944993	WITHOUT_CLASSIFICATION	7.68460550073456E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999960654721656	WITHOUT_CLASSIFICATION	3.934527834453019E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999983406672341	WITHOUT_CLASSIFICATION	1.6593327658474589E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999969048713291	WITHOUT_CLASSIFICATION	3.09512867094145E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.999996707107738	WITHOUT_CLASSIFICATION	3.2928922619726213E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999973337707049	WITHOUT_CLASSIFICATION	2.6662292950644224E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999967922940931	WITHOUT_CLASSIFICATION	3.207705907032804E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999989809785671	WITHOUT_CLASSIFICATION	1.019021432855965E-6	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.999997623923534	WITHOUT_CLASSIFICATION	2.376076466011768E-6	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.9999984759130538	WITHOUT_CLASSIFICATION	1.5240869461392637E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.999998133472431	WITHOUT_CLASSIFICATION	1.8665275689168112E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999975075996301	WITHOUT_CLASSIFICATION	2.4924003698126464E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999966912920067	WITHOUT_CLASSIFICATION	3.3087079932271876E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.99999874655184	WITHOUT_CLASSIFICATION	1.2534481600835206E-6	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999973308038901	WITHOUT_CLASSIFICATION	2.6691961099862385E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999973883334299	WITHOUT_CLASSIFICATION	2.6116665701854307E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999986673808796	WITHOUT_CLASSIFICATION	1.3326191203773829E-6	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999916516550714	WITHOUT_CLASSIFICATION	8.348344928580102E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999977120240967	WITHOUT_CLASSIFICATION	2.2879759032207494E-6	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999980087248581	WITHOUT_CLASSIFICATION	1.9912751419079874E-6	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999973099601605	WITHOUT_CLASSIFICATION	2.6900398394728437E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999967719364864	WITHOUT_CLASSIFICATION	3.228063513579634E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.9999967675439713	WITHOUT_CLASSIFICATION	3.2324560286798864E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999975965781823	WITHOUT_CLASSIFICATION	2.403421817717103E-6	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.9999969194251922	WITHOUT_CLASSIFICATION	3.080574807825885E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999974522801096	WITHOUT_CLASSIFICATION	2.547719890390035E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999981253609049	WITHOUT_CLASSIFICATION	1.8746390950861315E-6	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.999999090713754	WITHOUT_CLASSIFICATION	9.092862459357952E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999981569691594	WITHOUT_CLASSIFICATION	1.843030840497321E-6	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999981328551113	WITHOUT_CLASSIFICATION	1.8671448887506614E-6	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999960210905435	WITHOUT_CLASSIFICATION	3.978909456442343E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.999998779915508	WITHOUT_CLASSIFICATION	1.2200844919158137E-6	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999973472607541	WITHOUT_CLASSIFICATION	2.652739245840553E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999926316862927	WITHOUT_CLASSIFICATION	7.368313707360287E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999979781064209	WITHOUT_CLASSIFICATION	2.0218935791870598E-6	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999936045943258	WITHOUT_CLASSIFICATION	6.3954056742254715E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999976950041152	WITHOUT_CLASSIFICATION	2.3049958849442353E-6	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.999997676098077	WITHOUT_CLASSIFICATION	2.3239019229092076E-6	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999975278263665	WITHOUT_CLASSIFICATION	2.4721736334731808E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999980494719336	WITHOUT_CLASSIFICATION	1.950528066484201E-6	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999973326911052	WITHOUT_CLASSIFICATION	2.6673088947863555E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999978473300984	WITHOUT_CLASSIFICATION	2.152669901625184E-6	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999979636638819	WITHOUT_CLASSIFICATION	2.0363361180984153E-6	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.999997613412366	WITHOUT_CLASSIFICATION	2.3865876340201196E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999942639418958	WITHOUT_CLASSIFICATION	5.73605810410689E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999973938355861	WITHOUT_CLASSIFICATION	2.6061644140139362E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999975242241311	WITHOUT_CLASSIFICATION	2.4757758687593326E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999979524696234	WITHOUT_CLASSIFICATION	2.0475303765375482E-6	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999971469895816	WITHOUT_CLASSIFICATION	2.853010418435916E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999967552683781	WITHOUT_CLASSIFICATION	3.2447316219615207E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999981052489391	WITHOUT_CLASSIFICATION	1.8947510609068273E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999979837456293	WITHOUT_CLASSIFICATION	2.0162543706153893E-6	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.9999915921777668	WITHOUT_CLASSIFICATION	8.40782223321684E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999980181489037	WITHOUT_CLASSIFICATION	1.9818510963055617E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.999998078268029	WITHOUT_CLASSIFICATION	1.9217319709453213E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999972635579228	WITHOUT_CLASSIFICATION	2.7364420770929807E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999946416857645	WITHOUT_CLASSIFICATION	5.3583142356279005E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.999998038922462	WITHOUT_CLASSIFICATION	1.961077538085044E-6	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999986557339883	WITHOUT_CLASSIFICATION	1.3442660116684664E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999967696495954	WITHOUT_CLASSIFICATION	3.230350404592745E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999935595618656	WITHOUT_CLASSIFICATION	6.440438134283627E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999992759328964	WITHOUT_CLASSIFICATION	7.240671035950568E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999973761206119	WITHOUT_CLASSIFICATION	2.6238793881089405E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999961544658639	WITHOUT_CLASSIFICATION	3.845534136102039E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999968196373356	WITHOUT_CLASSIFICATION	3.1803626645231675E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999975382803462	WITHOUT_CLASSIFICATION	2.4617196538538754E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999974154216426	WITHOUT_CLASSIFICATION	2.5845783573612447E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999955997603462	WITHOUT_CLASSIFICATION	4.4002396537154425E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999953965702683	WITHOUT_CLASSIFICATION	4.603429731784453E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999920656103891	WITHOUT_CLASSIFICATION	7.934389610908415E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999967841048251	WITHOUT_CLASSIFICATION	3.215895174819033E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999966804434197	WITHOUT_CLASSIFICATION	3.3195565803191116E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999950424335027	WITHOUT_CLASSIFICATION	4.957566497260272E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999956164515568	WITHOUT_CLASSIFICATION	4.383548443239102E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999953145548636	WITHOUT_CLASSIFICATION	4.685445136401017E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999957054591091	WITHOUT_CLASSIFICATION	4.294540890810389E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999976973010367	WITHOUT_CLASSIFICATION	2.3026989632950865E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999970512273776	WITHOUT_CLASSIFICATION	2.948772622341107E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999964437428862	WITHOUT_CLASSIFICATION	3.5562571137271065E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999960570687441	WITHOUT_CLASSIFICATION	3.9429312559286085E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999973042919853	WITHOUT_CLASSIFICATION	2.6957080147381294E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.999995349642093	WITHOUT_CLASSIFICATION	4.650357906953168E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999967661207253	WITHOUT_CLASSIFICATION	3.2338792747327323E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999969764005022	WITHOUT_CLASSIFICATION	3.023599497750006E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999944750385398	WITHOUT_CLASSIFICATION	5.524961460204553E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999969754176726	WITHOUT_CLASSIFICATION	3.0245823273449793E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999962037774749	WITHOUT_CLASSIFICATION	3.7962225250094966E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999966230454991	WITHOUT_CLASSIFICATION	3.3769545008962724E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999954173976293	WITHOUT_CLASSIFICATION	4.582602370717601E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999962007759093	WITHOUT_CLASSIFICATION	3.7992240907813954E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.999998443763475	WITHOUT_CLASSIFICATION	1.5562365249834846E-6	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999974266928018	WITHOUT_CLASSIFICATION	2.573307198234305E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999968668370199	WITHOUT_CLASSIFICATION	3.1331629799484414E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999968877384922	WITHOUT_CLASSIFICATION	3.112261507708318E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999969454108985	WITHOUT_CLASSIFICATION	3.0545891015163374E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999948883401196	WITHOUT_CLASSIFICATION	5.111659880474475E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.9999976897918399	WITHOUT_CLASSIFICATION	2.3102081600941434E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999963758500975	WITHOUT_CLASSIFICATION	3.6241499025058342E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999949572698059	WITHOUT_CLASSIFICATION	5.042730193974147E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999972059269926	WITHOUT_CLASSIFICATION	2.794073007289171E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999940546546938	WITHOUT_CLASSIFICATION	5.945345306107874E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999952031152947	WITHOUT_CLASSIFICATION	4.7968847053184705E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999977004449389	WITHOUT_CLASSIFICATION	2.2995550610898625E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999925797872662	WITHOUT_CLASSIFICATION	7.420212733813698E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999971414243722	WITHOUT_CLASSIFICATION	2.858575627847474E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999977332534405	WITHOUT_CLASSIFICATION	2.2667465595081125E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999942657552153	WITHOUT_CLASSIFICATION	5.734244784687624E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999981588602188	WITHOUT_CLASSIFICATION	1.8411397811562406E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999947851253186	WITHOUT_CLASSIFICATION	5.2148746814894535E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999935009782384	WITHOUT_CLASSIFICATION	6.4990217616861E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999958608308728	WITHOUT_CLASSIFICATION	4.1391691273284375E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999930022447531	WITHOUT_CLASSIFICATION	6.9977552468953916E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.9999964171415741	WITHOUT_CLASSIFICATION	3.5828584260283313E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999963245495274	WITHOUT_CLASSIFICATION	3.6754504727063345E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999961404268366	WITHOUT_CLASSIFICATION	3.859573163409334E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999962213489382	WITHOUT_CLASSIFICATION	3.7786510618219487E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999963178904425	WITHOUT_CLASSIFICATION	3.6821095573283728E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999977099587251	WITHOUT_CLASSIFICATION	2.2900412749121945E-6	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999957284224809	WITHOUT_CLASSIFICATION	4.2715775191643136E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999960098561292	WITHOUT_CLASSIFICATION	3.990143870817642E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999958601549273	WITHOUT_CLASSIFICATION	4.139845072681313E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.999995352472249	WITHOUT_CLASSIFICATION	4.647527750974342E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999953433408173	WITHOUT_CLASSIFICATION	4.656659182783022E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999963315499848	WITHOUT_CLASSIFICATION	3.668450015171902E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999963178418843	WITHOUT_CLASSIFICATION	3.682158115702111E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.9999939950086796	WITHOUT_CLASSIFICATION	6.004991320405396E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999953806654849	WITHOUT_CLASSIFICATION	4.619334515154744E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999934342459303	WITHOUT_CLASSIFICATION	6.5657540696308575E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999955419032007	WITHOUT_CLASSIFICATION	4.458096799299042E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999955984184488	WITHOUT_CLASSIFICATION	4.40158155126233E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999954477415987	WITHOUT_CLASSIFICATION	4.552258401275501E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.9999962041193318	WITHOUT_CLASSIFICATION	3.7958806682640724E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999976025898982	WITHOUT_CLASSIFICATION	2.3974101016848984E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.999995260340464	WITHOUT_CLASSIFICATION	4.739659535944297E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999952216194807	WITHOUT_CLASSIFICATION	4.778380519175865E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999971418634306	WITHOUT_CLASSIFICATION	2.858136569488251E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999946687659959	WITHOUT_CLASSIFICATION	5.331234004070133E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999933205868572	WITHOUT_CLASSIFICATION	6.67941314282831E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.999994627600649	WITHOUT_CLASSIFICATION	5.3723993510477755E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.999992543698609	WITHOUT_CLASSIFICATION	7.456301391036194E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999952795866157	WITHOUT_CLASSIFICATION	4.7204133843397695E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.9999975785783908	WITHOUT_CLASSIFICATION	2.421421609236029E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999949922821249	WITHOUT_CLASSIFICATION	5.007717875208147E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999980770452136	WITHOUT_CLASSIFICATION	1.922954786447996E-6	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999949795723305	WITHOUT_CLASSIFICATION	5.0204276694099255E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999974278834074	WITHOUT_CLASSIFICATION	2.572116592634671E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999960380346883	WITHOUT_CLASSIFICATION	3.961965311699244E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999967107571671	WITHOUT_CLASSIFICATION	3.289242832937238E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999906806036383	WITHOUT_CLASSIFICATION	9.319396361754196E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999947538403741	WITHOUT_CLASSIFICATION	5.24615962595518E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999954165031847	WITHOUT_CLASSIFICATION	4.583496815323903E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999976713669334	WITHOUT_CLASSIFICATION	2.328633066652859E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.9999977901318042	WITHOUT_CLASSIFICATION	2.209868195779046E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999957950478993	WITHOUT_CLASSIFICATION	4.204952100732359E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999965703451296	WITHOUT_CLASSIFICATION	3.4296548703337635E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999977743207124	WITHOUT_CLASSIFICATION	2.2256792876099697E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999955850163237	WITHOUT_CLASSIFICATION	4.414983676314997E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999900569867327	WITHOUT_CLASSIFICATION	9.943013267290864E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.9999950569572681	WITHOUT_CLASSIFICATION	4.943042731812528E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999969644304816	WITHOUT_CLASSIFICATION	3.0355695183750378E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999977935704489	WITHOUT_CLASSIFICATION	2.2064295511190385E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.9999972049434459	WITHOUT_CLASSIFICATION	2.795056554120592E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999956313946712	WITHOUT_CLASSIFICATION	4.368605328780961E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999953443409315	WITHOUT_CLASSIFICATION	4.6556590684609176E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999953316792151	WITHOUT_CLASSIFICATION	4.668320784991814E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.999995429044284	WITHOUT_CLASSIFICATION	4.570955716078845E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999907804423037	WITHOUT_CLASSIFICATION	9.21955769627301E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999960025160226	WITHOUT_CLASSIFICATION	3.997483977407439E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999965529291815	WITHOUT_CLASSIFICATION	3.4470708183543675E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999953433089689	WITHOUT_CLASSIFICATION	4.656691031106869E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999941712974483	WITHOUT_CLASSIFICATION	5.828702551676047E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999986299641995	WITHOUT_CLASSIFICATION	1.3700358004404655E-6	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999938561746496	WITHOUT_CLASSIFICATION	6.143825350340118E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999957887283579	WITHOUT_CLASSIFICATION	4.211271642125627E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999978056896057	WITHOUT_CLASSIFICATION	2.194310394319721E-6	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999934079151014	WITHOUT_CLASSIFICATION	6.592084898620942E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999966976291887	WITHOUT_CLASSIFICATION	3.3023708111800864E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.99999532914576	WITHOUT_CLASSIFICATION	4.670854240106286E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999955666332002	WITHOUT_CLASSIFICATION	4.433366799758858E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999961146615431	WITHOUT_CLASSIFICATION	3.885338456808216E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.99999494201877	WITHOUT_CLASSIFICATION	5.05798122991681E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999920047833893	WITHOUT_CLASSIFICATION	7.99521661072278E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999956505000929	WITHOUT_CLASSIFICATION	4.349499907180969E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999956534183908	WITHOUT_CLASSIFICATION	4.346581609152009E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.9999972042775607	WITHOUT_CLASSIFICATION	2.795722439392508E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999947165087649	WITHOUT_CLASSIFICATION	5.283491235030368E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999944040258344	WITHOUT_CLASSIFICATION	5.595974165654916E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999919073254224	WITHOUT_CLASSIFICATION	8.092674577669714E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999956988015907	WITHOUT_CLASSIFICATION	4.301198409381394E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999950699537685	WITHOUT_CLASSIFICATION	4.930046231472644E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.999993923233822	WITHOUT_CLASSIFICATION	6.076766178103117E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999922466624215	WITHOUT_CLASSIFICATION	7.753337578601466E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999925558163314	WITHOUT_CLASSIFICATION	7.444183668649763E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999906756736243	WITHOUT_CLASSIFICATION	9.32432637563304E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999922741539259	WITHOUT_CLASSIFICATION	7.725846074070174E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.9999917849993414	WITHOUT_CLASSIFICATION	8.215000658714648E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.9999847691266535	WITHOUT_CLASSIFICATION	1.5230873346630723E-5	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999918785282252	WITHOUT_CLASSIFICATION	8.121471774724967E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997530304824902	WITHOUT_CLASSIFICATION	2.469695175097614E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998316812371781	WITHOUT_CLASSIFICATION	1.6831876282182354E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999911486916775	WITHOUT_CLASSIFICATION	8.851308322498928E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999786364405624	WITHOUT_CLASSIFICATION	2.1363559437509334E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9984562633348393	WITHOUT_CLASSIFICATION	0.001543736665160774	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999279613324819	WITHOUT_CLASSIFICATION	7.203866751816024E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9995761676339462	WITHOUT_CLASSIFICATION	4.2383236605383657E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999888641154168	WITHOUT_CLASSIFICATION	1.1135884583261604E-5	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999914186745058	WITHOUT_CLASSIFICATION	8.581325494059128E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.9999899733886909	WITHOUT_CLASSIFICATION	1.0026611309013432E-5	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999959644573593	WITHOUT_CLASSIFICATION	4.035542640740789E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.9999920711357502	WITHOUT_CLASSIFICATION	7.928864249763168E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.999990017722806	WITHOUT_CLASSIFICATION	9.982277194003191E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.9999900497636215	WITHOUT_CLASSIFICATION	9.950236378583365E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.999997884049019	WITHOUT_CLASSIFICATION	2.1159509809221116E-6	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999962814145678	WITHOUT_CLASSIFICATION	3.718585432186169E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999911855454937	WITHOUT_CLASSIFICATION	8.8144545062839E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999899123940714	WITHOUT_CLASSIFICATION	1.0087605928652071E-5	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999955341787058	WITHOUT_CLASSIFICATION	4.4658212942916835E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999938086971828	WITHOUT_CLASSIFICATION	6.191302817245059E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999969056913928	WITHOUT_CLASSIFICATION	3.094308607201245E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999921143843048	WITHOUT_CLASSIFICATION	7.885615695255418E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.9999964535069924	WITHOUT_CLASSIFICATION	3.546493007597474E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999952089984585	WITHOUT_CLASSIFICATION	4.791001541437419E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999924652243896	WITHOUT_CLASSIFICATION	7.534775610331496E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999977031132323	WITHOUT_CLASSIFICATION	2.2968867676739917E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999962939261392	WITHOUT_CLASSIFICATION	3.7060738608336617E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.99999463907599	WITHOUT_CLASSIFICATION	5.360924009959479E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999992622350202	WITHOUT_CLASSIFICATION	7.377649798222722E-7	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.999999009550317	WITHOUT_CLASSIFICATION	9.904496830481576E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999989313716113	WITHOUT_CLASSIFICATION	1.0686283886855663E-6	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999886419657085	WITHOUT_CLASSIFICATION	1.1358034291592649E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.9999983750420025	WITHOUT_CLASSIFICATION	1.6249579974362828E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.999799713860436	WITHOUT_CLASSIFICATION	2.0028613956397167E-4	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9998691788944238	WITHOUT_CLASSIFICATION	1.308211055761139E-4	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999997240646485	WITHOUT_CLASSIFICATION	2.7593535138432923E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999888818416988	WITHOUT_CLASSIFICATION	1.111815830126031E-5	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999915651983974	WITHOUT_CLASSIFICATION	8.434801602687842E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999761347607267	WITHOUT_CLASSIFICATION	2.386523927328096E-5	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999907719878	WITHOUT_CLASSIFICATION	9.228012318120186E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999907719878	WITHOUT_CLASSIFICATION	9.228012318120186E-9	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9986633773708877	WITHOUT_CLASSIFICATION	0.0013366226291122634	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999263000514	WITHOUT_CLASSIFICATION	7.369994862518036E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999998987118981	WITHOUT_CLASSIFICATION	1.0128810197386783E-7	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.9999962710093534	WITHOUT_CLASSIFICATION	3.728990646559326E-6	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999998281236411	WITHOUT_CLASSIFICATION	1.718763589276335E-7	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.999940211432107	WITHOUT_CLASSIFICATION	5.978856789309502E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999959933672	WITHOUT_CLASSIFICATION	4.006632823603957E-9	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999996588495519	WITHOUT_CLASSIFICATION	3.4115044811782804E-7	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9998426440020761	WITHOUT_CLASSIFICATION	1.5735599792394836E-4	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999977771624	WITHOUT_CLASSIFICATION	2.222837570340759E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999999975774824	WITHOUT_CLASSIFICATION	2.422517614988111E-9	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.999999998048373	WITHOUT_CLASSIFICATION	1.9516269974619643E-9	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999995365033059	WITHOUT_CLASSIFICATION	4.6349669415632375E-7	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9995717631056121	WITHOUT_CLASSIFICATION	4.2823689438778646E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999994183694798	WITHOUT_CLASSIFICATION	5.816305200716406E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999994183694798	WITHOUT_CLASSIFICATION	5.816305200716406E-7	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.999992082951648	WITHOUT_CLASSIFICATION	7.91704835198742E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999987350985438	WITHOUT_CLASSIFICATION	1.2649014563018863E-6	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.9999999130433315	WITHOUT_CLASSIFICATION	8.695666861209411E-8	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999993437096001	WITHOUT_CLASSIFICATION	6.562903999989788E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999177399578	WITHOUT_CLASSIFICATION	8.226004217313085E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996643573583	WITHOUT_CLASSIFICATION	3.3564264168535395E-7	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999424355875647	WITHOUT_CLASSIFICATION	5.756441243526075E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996643573583	WITHOUT_CLASSIFICATION	3.3564264168535395E-7	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9998897771518948	WITHOUT_CLASSIFICATION	1.1022284810527317E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999949197798659	WITHOUT_CLASSIFICATION	5.080220134094032E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9997362855657411	WITHOUT_CLASSIFICATION	2.637144342589211E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999362193373188	WITHOUT_CLASSIFICATION	6.378066268114472E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9998911593638551	WITHOUT_CLASSIFICATION	1.0884063614483635E-4	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999952428543931	WITHOUT_CLASSIFICATION	4.7571456068187965E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9998946715403912	WITHOUT_CLASSIFICATION	1.0532845960882927E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.999881436765843	WITHOUT_CLASSIFICATION	1.1856323415702482E-4	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.99999504181584	WITHOUT_CLASSIFICATION	4.95818415994804E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999998583587562	WITHOUT_CLASSIFICATION	1.4164124382243196E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.999932157957268	WITHOUT_CLASSIFICATION	6.784204273204821E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999994063285289	WITHOUT_CLASSIFICATION	5.936714710596825E-7	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999949605667384	WITHOUT_CLASSIFICATION	5.039433261637428E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999960525229435	WITHOUT_CLASSIFICATION	3.9474770564995145E-6	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999998979258837	WITHOUT_CLASSIFICATION	1.0207411621778549E-7	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999998979258837	WITHOUT_CLASSIFICATION	1.0207411621778549E-7	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999993597853283	WITHOUT_CLASSIFICATION	6.402146717207115E-7	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999144748838437	WITHOUT_CLASSIFICATION	8.55251161562817E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999989859296767	WITHOUT_CLASSIFICATION	1.0140703231802653E-6	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.9999319520685787	WITHOUT_CLASSIFICATION	6.804793142136466E-5	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999647752239328	WITHOUT_CLASSIFICATION	3.5224776067259196E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.9999996643573583	WITHOUT_CLASSIFICATION	3.3564264168535395E-7	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999992825214	WITHOUT_CLASSIFICATION	7.174787126432073E-10	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999983679104207	WITHOUT_CLASSIFICATION	1.6320895792911578E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999699210137	WITHOUT_CLASSIFICATION	3.007898637395095E-8	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999988814455	WITHOUT_CLASSIFICATION	1.1185545202716042E-9	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999999668897	WITHOUT_CLASSIFICATION	3.311037859623079E-11	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999782895856	WITHOUT_CLASSIFICATION	2.171041439783161E-8	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999998585062964	WITHOUT_CLASSIFICATION	1.4149370359710724E-7	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.9999999317613015	WITHOUT_CLASSIFICATION	6.823869852490253E-8	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999997307610452	WITHOUT_CLASSIFICATION	2.6923895481294565E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999991407066082	WITHOUT_CLASSIFICATION	8.592933917294749E-7	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999997797441479	WITHOUT_CLASSIFICATION	2.202558522036916E-7	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999831389391	WITHOUT_CLASSIFICATION	1.6861060879415146E-8	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999951786142303	WITHOUT_CLASSIFICATION	4.821385769714297E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999981827193385	WITHOUT_CLASSIFICATION	1.8172806614784516E-6	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9997076388560723	WITHOUT_CLASSIFICATION	2.923611439276692E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999226451622341	WITHOUT_CLASSIFICATION	7.735483776590891E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999982838146442	WITHOUT_CLASSIFICATION	1.7161853558594143E-6	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999903840333956	WITHOUT_CLASSIFICATION	9.615966604320756E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.9999992826877072	WITHOUT_CLASSIFICATION	7.173122927797014E-7	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999842447955419	WITHOUT_CLASSIFICATION	1.5755204458055515E-5	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999935828306854	WITHOUT_CLASSIFICATION	6.417169314592502E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999981067962208	WITHOUT_CLASSIFICATION	1.8932037792070195E-6	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999922216710383	WITHOUT_CLASSIFICATION	7.778328961723654E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999224843132	WITHOUT_CLASSIFICATION	7.751568674884698E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999989386189996	WITHOUT_CLASSIFICATION	1.0613810004916647E-6	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999930816342404	WITHOUT_CLASSIFICATION	6.918365759600749E-6	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999992007101199	WITHOUT_CLASSIFICATION	7.99289879998955E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999926320011927	WITHOUT_CLASSIFICATION	7.367998807290729E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999994149241598	WITHOUT_CLASSIFICATION	5.850758402904938E-7	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999296266119	WITHOUT_CLASSIFICATION	7.037338821413244E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999991656412086	WITHOUT_CLASSIFICATION	8.343587913025663E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999995603367089	WITHOUT_CLASSIFICATION	4.396632911204825E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999991737851102	WITHOUT_CLASSIFICATION	8.262148898587715E-7	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999532860002462	WITHOUT_CLASSIFICATION	4.671399975372054E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.999997283171693	WITHOUT_CLASSIFICATION	2.716828306889513E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999963661443031	WITHOUT_CLASSIFICATION	3.633855696836781E-6	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999996176683283	WITHOUT_CLASSIFICATION	3.8233167172962866E-7	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999520062540929	WITHOUT_CLASSIFICATION	4.7993745907036386E-5	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999965324456837	WITHOUT_CLASSIFICATION	3.4675543164442903E-6	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.9999999838590766	WITHOUT_CLASSIFICATION	1.614092334963401E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999888641154168	WITHOUT_CLASSIFICATION	1.1135884583261604E-5	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9645489323341776	WITHOUT_CLASSIFICATION	0.03545106766582237	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999979483570411	WITHOUT_CLASSIFICATION	2.051642958783387E-6	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999966881948659	WITHOUT_CLASSIFICATION	3.311805134136868E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999455331616	WITHOUT_CLASSIFICATION	5.446683838168744E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999949197798659	WITHOUT_CLASSIFICATION	5.080220134094032E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.999700079042533	WITHOUT_CLASSIFICATION	2.9992095746699833E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999999538824199	WITHOUT_CLASSIFICATION	4.611758014275894E-8	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999998739568627	WITHOUT_CLASSIFICATION	1.2604313723738422E-7	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999946886834	WITHOUT_CLASSIFICATION	5.3113165777236E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999946886834	WITHOUT_CLASSIFICATION	5.3113165777236E-9	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999991008483817	WITHOUT_CLASSIFICATION	8.991516182061781E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999991008483817	WITHOUT_CLASSIFICATION	8.991516182061781E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999991008483817	WITHOUT_CLASSIFICATION	8.991516182061781E-7	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999939914761748	WITHOUT_CLASSIFICATION	6.008523825105815E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999939914761748	WITHOUT_CLASSIFICATION	6.008523825105815E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999066465504	WITHOUT_CLASSIFICATION	9.335344960225091E-8	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999066465504	WITHOUT_CLASSIFICATION	9.335344960225091E-8	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999969907504	WITHOUT_CLASSIFICATION	3.009249679990529E-9	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999997889952212	WITHOUT_CLASSIFICATION	2.1100477870942513E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999932511487045	WITHOUT_CLASSIFICATION	6.748851295465999E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999932511487045	WITHOUT_CLASSIFICATION	6.748851295465999E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999998091244772	WITHOUT_CLASSIFICATION	1.9087552279325155E-7	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999899131098332	WITHOUT_CLASSIFICATION	1.0086890166836703E-5	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.999999771211435	WITHOUT_CLASSIFICATION	2.2878856512727788E-7	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999626347634	WITHOUT_CLASSIFICATION	3.736523658493075E-8	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999631304688	WITHOUT_CLASSIFICATION	3.6869531187692474E-8	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999994562052822	WITHOUT_CLASSIFICATION	5.437947178707684E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.999999767139302	WITHOUT_CLASSIFICATION	2.328606980391714E-7	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.9999997370837121	WITHOUT_CLASSIFICATION	2.6291628793495444E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.999999125426099	WITHOUT_CLASSIFICATION	8.745739010768744E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999986272032836	WITHOUT_CLASSIFICATION	1.372796716393737E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999919175066417	WITHOUT_CLASSIFICATION	8.082493358178419E-6	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999975418425879	WITHOUT_CLASSIFICATION	2.458157412048533E-6	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999834844437384	WITHOUT_CLASSIFICATION	1.6515556261505886E-5	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999922559764508	WITHOUT_CLASSIFICATION	7.74402354915987E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999995821225528	WITHOUT_CLASSIFICATION	4.178774472807909E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999365004041818	WITHOUT_CLASSIFICATION	6.349959581819061E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9995552187930147	WITHOUT_CLASSIFICATION	4.4478120698526004E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999970732998504	WITHOUT_CLASSIFICATION	2.9267001495211877E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999956084480529	WITHOUT_CLASSIFICATION	4.3915519471958474E-6	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999416517915476	WITHOUT_CLASSIFICATION	5.834820845242155E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999722289012	WITHOUT_CLASSIFICATION	2.777109874911123E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999904415297	WITHOUT_CLASSIFICATION	9.558470363531372E-9	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999994749569321	WITHOUT_CLASSIFICATION	5.250430679193222E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999003697798	WITHOUT_CLASSIFICATION	9.963022017674024E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999387865409	WITHOUT_CLASSIFICATION	6.121345912165014E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999986041971337	WITHOUT_CLASSIFICATION	1.3958028663606684E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999397567685	WITHOUT_CLASSIFICATION	6.024323149379882E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999758988585	WITHOUT_CLASSIFICATION	2.4101141514573886E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999390205869	WITHOUT_CLASSIFICATION	6.097941312508162E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999625338502	WITHOUT_CLASSIFICATION	3.7466149832264244E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999991456881026	WITHOUT_CLASSIFICATION	8.543118973079922E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999985018159	WITHOUT_CLASSIFICATION	1.498184094409158E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907950592	WITHOUT_CLASSIFICATION	9.204940796453423E-9	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998235886128	WITHOUT_CLASSIFICATION	1.764113870765668E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907950592	WITHOUT_CLASSIFICATION	9.204940796453423E-9	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907950592	WITHOUT_CLASSIFICATION	9.204940796453423E-9	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907950592	WITHOUT_CLASSIFICATION	9.204940796453423E-9	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907950592	WITHOUT_CLASSIFICATION	9.204940796453423E-9	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907950592	WITHOUT_CLASSIFICATION	9.204940796453423E-9	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907950592	WITHOUT_CLASSIFICATION	9.204940796453423E-9	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998235886128	WITHOUT_CLASSIFICATION	1.764113870765668E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998235886128	WITHOUT_CLASSIFICATION	1.764113870765668E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998235886128	WITHOUT_CLASSIFICATION	1.764113870765668E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998235886128	WITHOUT_CLASSIFICATION	1.764113870765668E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998235886128	WITHOUT_CLASSIFICATION	1.764113870765668E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998235886128	WITHOUT_CLASSIFICATION	1.764113870765668E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999992628382535	WITHOUT_CLASSIFICATION	7.371617465674234E-7	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.9999986557296473	WITHOUT_CLASSIFICATION	1.344270352707228E-6	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999817637358047	WITHOUT_CLASSIFICATION	1.8236264195309824E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999962498935456	WITHOUT_CLASSIFICATION	3.750106454301964E-6	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999996407696	WITHOUT_CLASSIFICATION	3.592305289660856E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999983898102314	WITHOUT_CLASSIFICATION	1.6101897685973105E-6	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999944465831182	WITHOUT_CLASSIFICATION	5.553416881864575E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.9999999648885278	WITHOUT_CLASSIFICATION	3.511147223446714E-8	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999994165830997	WITHOUT_CLASSIFICATION	5.834169003437501E-7	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.9999904467669355	WITHOUT_CLASSIFICATION	9.553233064529293E-6	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.7892033584422359	IMPLEMENTATION	0.21079664155776412	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999885553985	WITHOUT_CLASSIFICATION	1.1444601480399697E-8	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999804614629975	WITHOUT_CLASSIFICATION	1.953853700252652E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999492126177	WITHOUT_CLASSIFICATION	5.078738237722142E-8	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999987001229	WITHOUT_CLASSIFICATION	1.2998771065439976E-9	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.9999914207490171	WITHOUT_CLASSIFICATION	8.579250982913282E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.999999634926579	WITHOUT_CLASSIFICATION	3.650734211317374E-7	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999998888735482	WITHOUT_CLASSIFICATION	1.111264519341029E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999998323903556	WITHOUT_CLASSIFICATION	1.676096443067286E-7	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999998281648548	WITHOUT_CLASSIFICATION	1.7183514513576146E-7	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999856460410017	WITHOUT_CLASSIFICATION	1.4353958998371796E-5	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999992785153391	WITHOUT_CLASSIFICATION	7.214846609570031E-7	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999424355875647	WITHOUT_CLASSIFICATION	5.756441243526075E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9973149344537926	WITHOUT_CLASSIFICATION	0.002685065546207379	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.999994482664015	WITHOUT_CLASSIFICATION	5.517335985062691E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999929456021918	WITHOUT_CLASSIFICATION	7.054397808301194E-6	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999995770582912	WITHOUT_CLASSIFICATION	4.2294170878295184E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.998902578879915	WITHOUT_CLASSIFICATION	0.0010974211200850308	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999059933938351	WITHOUT_CLASSIFICATION	9.400660616482624E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9998566439999611	WITHOUT_CLASSIFICATION	1.4335600003892893E-4	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9993440839677711	WITHOUT_CLASSIFICATION	6.559160322288863E-4	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9996896471959379	WITHOUT_CLASSIFICATION	3.1035280406211936E-4	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9998243879231498	WITHOUT_CLASSIFICATION	1.7561207685019427E-4	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999976474097862	WITHOUT_CLASSIFICATION	2.352590213808991E-6	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.9999857027318135	WITHOUT_CLASSIFICATION	1.4297268186538704E-5	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998323168176151	WITHOUT_CLASSIFICATION	1.6768318238497278E-4	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999898804202048	WITHOUT_CLASSIFICATION	1.0119579795249517E-5	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999997316880825	WITHOUT_CLASSIFICATION	2.6831191736772735E-7	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999011804653116	WITHOUT_CLASSIFICATION	9.881953468837705E-5	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.999991994114295	WITHOUT_CLASSIFICATION	8.005885705021192E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999980322961144	WITHOUT_CLASSIFICATION	1.967703885579253E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999999253463648	WITHOUT_CLASSIFICATION	7.465363510567404E-8	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999938216492904	WITHOUT_CLASSIFICATION	6.17835070954638E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999983513733809	WITHOUT_CLASSIFICATION	1.648626619143999E-6	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999983513733809	WITHOUT_CLASSIFICATION	1.648626619143999E-6	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999993665759368	WITHOUT_CLASSIFICATION	6.334240632029495E-7	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999993665759368	WITHOUT_CLASSIFICATION	6.334240632029495E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999989417559622	WITHOUT_CLASSIFICATION	1.0582440378130916E-6	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999989417559622	WITHOUT_CLASSIFICATION	1.0582440378130916E-6	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999740389207239	WITHOUT_CLASSIFICATION	2.5961079276134923E-5	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.9999721690372235	WITHOUT_CLASSIFICATION	2.7830962776438048E-5	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999997536829784	WITHOUT_CLASSIFICATION	2.4631702161443573E-7	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999978684704864	WITHOUT_CLASSIFICATION	2.1315295135261316E-6	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999884397606453	WITHOUT_CLASSIFICATION	1.156023935469679E-5	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999998356765348	WITHOUT_CLASSIFICATION	1.6432346513619093E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999973304580224	WITHOUT_CLASSIFICATION	2.669541977656717E-6	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999466304104	WITHOUT_CLASSIFICATION	5.3369589733926407E-8	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999874892	WITHOUT_CLASSIFICATION	1.251080524143012E-11	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.999999998821101	WITHOUT_CLASSIFICATION	1.1788989837191235E-9	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999996603517239	WITHOUT_CLASSIFICATION	3.396482761038853E-7	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.999999874231579	WITHOUT_CLASSIFICATION	1.2576842088900243E-7	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999993737702498	WITHOUT_CLASSIFICATION	6.262297501885958E-7	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999763737898	WITHOUT_CLASSIFICATION	2.3626210220609605E-8	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999957295965809	WITHOUT_CLASSIFICATION	4.270403419039023E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999993431974867	WITHOUT_CLASSIFICATION	6.568025132190312E-7	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999986102040714	WITHOUT_CLASSIFICATION	1.3897959286286825E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999997667327095	WITHOUT_CLASSIFICATION	2.3326729056982274E-7	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999424706996597	WITHOUT_CLASSIFICATION	5.752930034035678E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.999997663486595	WITHOUT_CLASSIFICATION	2.3365134050049317E-6	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999927819065935	WITHOUT_CLASSIFICATION	7.218093406535295E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.9999920735517783	WITHOUT_CLASSIFICATION	7.9264482216465E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999883667808195	WITHOUT_CLASSIFICATION	1.1633219180476037E-5	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999988968917417	WITHOUT_CLASSIFICATION	1.103108258275213E-6	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999741524794	WITHOUT_CLASSIFICATION	2.584752058087716E-8	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999998385323533	WITHOUT_CLASSIFICATION	1.61467646771904E-7	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999994476666827	WITHOUT_CLASSIFICATION	5.523333172600584E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998435964457	WITHOUT_CLASSIFICATION	1.5640355422378994E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998435964457	WITHOUT_CLASSIFICATION	1.5640355422378994E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998435964457	WITHOUT_CLASSIFICATION	1.5640355422378994E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996538585301	WITHOUT_CLASSIFICATION	3.4614147002606324E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996538585301	WITHOUT_CLASSIFICATION	3.4614147002606324E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999981827193385	WITHOUT_CLASSIFICATION	1.8172806614784516E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999981827193385	WITHOUT_CLASSIFICATION	1.8172806614784516E-6	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999995392154	WITHOUT_CLASSIFICATION	4.6078473153101687E-10	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999117660868049	WITHOUT_CLASSIFICATION	8.823391319506115E-5	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.9999988673627368	WITHOUT_CLASSIFICATION	1.1326372631679676E-6	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999525361619	WITHOUT_CLASSIFICATION	4.746383819813391E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998435964457	WITHOUT_CLASSIFICATION	1.5640355422378994E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998435964457	WITHOUT_CLASSIFICATION	1.5640355422378994E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999998435964457	WITHOUT_CLASSIFICATION	1.5640355422378994E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996538585301	WITHOUT_CLASSIFICATION	3.4614147002606324E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996538585301	WITHOUT_CLASSIFICATION	3.4614147002606324E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999996538585301	WITHOUT_CLASSIFICATION	3.4614147002606324E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999981827193385	WITHOUT_CLASSIFICATION	1.8172806614784516E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999981827193385	WITHOUT_CLASSIFICATION	1.8172806614784516E-6	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999966982993	WITHOUT_CLASSIFICATION	3.3017006366327825E-9	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999996987817	WITHOUT_CLASSIFICATION	3.0121836292346365E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999447544	WITHOUT_CLASSIFICATION	5.524546743132941E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999447544	WITHOUT_CLASSIFICATION	5.524546743132941E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999447544	WITHOUT_CLASSIFICATION	5.524546743132941E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999447544	WITHOUT_CLASSIFICATION	5.524546743132941E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999447544	WITHOUT_CLASSIFICATION	5.524546743132941E-11	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999990008674735	WITHOUT_CLASSIFICATION	9.991325264753457E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999985835945945	WITHOUT_CLASSIFICATION	1.4164054056330577E-6	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9998756672645935	WITHOUT_CLASSIFICATION	1.2433273540655987E-4	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999983805970953	WITHOUT_CLASSIFICATION	1.6194029046785147E-6	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999935839940464	WITHOUT_CLASSIFICATION	6.416005953664693E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999970041963154	WITHOUT_CLASSIFICATION	2.995803684498231E-6	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9987830326059409	WITHOUT_CLASSIFICATION	0.001216967394059071	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.9999980965172705	WITHOUT_CLASSIFICATION	1.9034827296441849E-6	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.999994868000564	WITHOUT_CLASSIFICATION	5.131999436000694E-6	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999996099503631	WITHOUT_CLASSIFICATION	3.900496369081672E-7	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999933636090962	WITHOUT_CLASSIFICATION	6.636390903846617E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999912003064	WITHOUT_CLASSIFICATION	8.799693608130894E-9	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999959229167666	WITHOUT_CLASSIFICATION	4.07708323343986E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999995401885216	WITHOUT_CLASSIFICATION	4.598114783791826E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999999580973238	WITHOUT_CLASSIFICATION	4.1902676142109296E-8	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999836867367997	WITHOUT_CLASSIFICATION	1.631326320027849E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999836867367997	WITHOUT_CLASSIFICATION	1.631326320027849E-5	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999836867367997	WITHOUT_CLASSIFICATION	1.631326320027849E-5	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999998942432767	WITHOUT_CLASSIFICATION	1.0575672331553716E-7	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999998942687072	WITHOUT_CLASSIFICATION	1.0573129286107728E-7	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.999976247825982	WITHOUT_CLASSIFICATION	2.375217401794236E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999904885	WITHOUT_CLASSIFICATION	9.511450885562064E-12	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999933316719	WITHOUT_CLASSIFICATION	6.668328128075317E-9	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999950326062585	WITHOUT_CLASSIFICATION	4.967393741443262E-6	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.9999994746112129	WITHOUT_CLASSIFICATION	5.253887871641886E-7	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999993945531062	WITHOUT_CLASSIFICATION	6.054468939222397E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999987294983691	WITHOUT_CLASSIFICATION	1.270501630926281E-6	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999356572989	WITHOUT_CLASSIFICATION	6.434270094978963E-8	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999915578094	WITHOUT_CLASSIFICATION	8.442190526568386E-9	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999904238804	WITHOUT_CLASSIFICATION	9.5761196413391E-9	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999943045294072	WITHOUT_CLASSIFICATION	5.695470592833476E-6	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999993995238654	WITHOUT_CLASSIFICATION	6.004761345784668E-7	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999997408175633	WITHOUT_CLASSIFICATION	2.5918243675138484E-7	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999974352969393	WITHOUT_CLASSIFICATION	2.564703060732222E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999996166349139	WITHOUT_CLASSIFICATION	3.833650861465992E-7	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999320505109	WITHOUT_CLASSIFICATION	6.794948912549867E-8	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999988870665699	WITHOUT_CLASSIFICATION	1.1129334299970884E-6	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999995706053103	WITHOUT_CLASSIFICATION	4.2939468967459644E-7	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999987164024033	WITHOUT_CLASSIFICATION	1.2835975966382633E-6	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999995294603922	WITHOUT_CLASSIFICATION	4.705396077992085E-7	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9997178171088933	WITHOUT_CLASSIFICATION	2.821828911066662E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999988086449438	WITHOUT_CLASSIFICATION	1.1913550562142076E-6	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999991876014138	WITHOUT_CLASSIFICATION	8.123985861572263E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999990299134153	WITHOUT_CLASSIFICATION	9.700865847004061E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999996385721543	WITHOUT_CLASSIFICATION	3.6142784565753695E-7	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999976351607176	WITHOUT_CLASSIFICATION	2.3648392822984785E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999905724608337	WITHOUT_CLASSIFICATION	9.427539166239265E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999976523645455	WITHOUT_CLASSIFICATION	2.3476354545835903E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999971988943319	WITHOUT_CLASSIFICATION	2.8011056680003E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999987089231686	WITHOUT_CLASSIFICATION	1.2910768314113346E-6	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999982760522833	WITHOUT_CLASSIFICATION	1.7239477167882738E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999985812853448	WITHOUT_CLASSIFICATION	1.4187146551739331E-6	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999984291712949	WITHOUT_CLASSIFICATION	1.5708287051494714E-6	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.9999985716292545	WITHOUT_CLASSIFICATION	1.428370745495828E-6	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999957594417819	WITHOUT_CLASSIFICATION	4.240558218151204E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999520177376	WITHOUT_CLASSIFICATION	4.7982262380807904E-8	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.999439801705731	WITHOUT_CLASSIFICATION	5.601982942690086E-4	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.9999005776057998	WITHOUT_CLASSIFICATION	9.942239420029972E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.9999999999394577	WITHOUT_CLASSIFICATION	6.05424038453601E-11	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999994565733554	WITHOUT_CLASSIFICATION	5.434266445737334E-7	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999819351986711	WITHOUT_CLASSIFICATION	1.806480132893893E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999863838209019	WITHOUT_CLASSIFICATION	1.3616179098198457E-5	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.99999927717027	WITHOUT_CLASSIFICATION	7.228297300252112E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.9999874622493468	WITHOUT_CLASSIFICATION	1.2537750653243971E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999067848957274	WITHOUT_CLASSIFICATION	9.321510427265152E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999067848957274	WITHOUT_CLASSIFICATION	9.321510427265152E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.9999790280883695	WITHOUT_CLASSIFICATION	2.0971911630563E-5	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999837693822734	WITHOUT_CLASSIFICATION	1.6230617726553095E-5	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999958373823176	WITHOUT_CLASSIFICATION	4.162617682464683E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999273341542	WITHOUT_CLASSIFICATION	7.266584571597655E-8	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999255112991265	WITHOUT_CLASSIFICATION	7.448870087338954E-5	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.9999998489405328	WITHOUT_CLASSIFICATION	1.5105946723763518E-7	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.999999855472345	WITHOUT_CLASSIFICATION	1.4452765497700097E-7	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999990868802	WITHOUT_CLASSIFICATION	9.131197431989725E-10	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999991058337236	WITHOUT_CLASSIFICATION	8.941662763338202E-7	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999951745113425	WITHOUT_CLASSIFICATION	4.825488657514779E-5	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999997326055585	WITHOUT_CLASSIFICATION	2.673944415047206E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999997326055585	WITHOUT_CLASSIFICATION	2.673944415047206E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999997326055585	WITHOUT_CLASSIFICATION	2.673944415047206E-7	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999997326055585	WITHOUT_CLASSIFICATION	2.673944415047206E-7	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999909348819351	WITHOUT_CLASSIFICATION	9.065118064774929E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999994063959609	WITHOUT_CLASSIFICATION	5.936040391258721E-7	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999856960508692	WITHOUT_CLASSIFICATION	1.4303949130937517E-5	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9998816357973056	WITHOUT_CLASSIFICATION	1.1836420269435942E-4	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999306960413192	WITHOUT_CLASSIFICATION	6.930395868074732E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999995123910407	WITHOUT_CLASSIFICATION	4.876089592970774E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999988419477576	WITHOUT_CLASSIFICATION	1.1580522424224166E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999999640952106	WITHOUT_CLASSIFICATION	3.5904789388267976E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.999999640952106	WITHOUT_CLASSIFICATION	3.5904789388267976E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999412569489	WITHOUT_CLASSIFICATION	5.874305105332696E-8	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.999990088290873	WITHOUT_CLASSIFICATION	9.911709127005175E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999964245242429	WITHOUT_CLASSIFICATION	3.575475757248564E-6	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999990977855	WITHOUT_CLASSIFICATION	9.022144960741592E-10	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.9999999990977855	WITHOUT_CLASSIFICATION	9.022144960741592E-10	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.9999999996672982	WITHOUT_CLASSIFICATION	3.3270173825515684E-10	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9994905297066452	WITHOUT_CLASSIFICATION	5.094702933547121E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9994905297066452	WITHOUT_CLASSIFICATION	5.094702933547121E-4	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.9999999218702638	WITHOUT_CLASSIFICATION	7.81297361801913E-8	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999976288811	WITHOUT_CLASSIFICATION	2.3711188753278775E-9	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999314109432	WITHOUT_CLASSIFICATION	6.858905681030335E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999959457989687	WITHOUT_CLASSIFICATION	4.05420103133671E-6	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9989768877911313	WITHOUT_CLASSIFICATION	0.0010231122088686445	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999998757146167	WITHOUT_CLASSIFICATION	1.2428538325126657E-7	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9985288491888965	WITHOUT_CLASSIFICATION	0.0014711508111035269	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.999852088013694	WITHOUT_CLASSIFICATION	1.4791198630597336E-4	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.999988902248169	WITHOUT_CLASSIFICATION	1.109775183093626E-5	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999688651787	WITHOUT_CLASSIFICATION	3.113482129537417E-8	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999994534987775	WITHOUT_CLASSIFICATION	5.465012226054681E-7	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999987198741577	WITHOUT_CLASSIFICATION	1.2801258423691454E-6	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999994883447346	WITHOUT_CLASSIFICATION	5.1165526540758965E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999977241026891	WITHOUT_CLASSIFICATION	2.2758973110336846E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999995031200664	WITHOUT_CLASSIFICATION	4.968799335808532E-7	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999918630368863	WITHOUT_CLASSIFICATION	8.136963113698748E-6	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999988192413527	WITHOUT_CLASSIFICATION	1.1807586473724779E-6	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999994102058382	WITHOUT_CLASSIFICATION	5.897941618953324E-7	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999996140978152	WITHOUT_CLASSIFICATION	3.859021847640275E-7	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999622076315587	WITHOUT_CLASSIFICATION	3.7792368441247245E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9996125351748807	WITHOUT_CLASSIFICATION	3.8746482511934987E-4	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999998944722736	WITHOUT_CLASSIFICATION	1.0552772645052603E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999998548948419	WITHOUT_CLASSIFICATION	1.4510515816866045E-7	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.999999588680949	WITHOUT_CLASSIFICATION	4.1131905109788403E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999969014996134	WITHOUT_CLASSIFICATION	3.0985003866500067E-6	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999998624299253	WITHOUT_CLASSIFICATION	1.3757007455778238E-7	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999997494689242	WITHOUT_CLASSIFICATION	2.5053107580185177E-6	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999996651528923	WITHOUT_CLASSIFICATION	3.3484710772328657E-7	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999974399368	WITHOUT_CLASSIFICATION	2.5600631912393782E-9	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999974221523431	WITHOUT_CLASSIFICATION	2.5778476568453755E-6	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999988898376833	WITHOUT_CLASSIFICATION	1.1101623167963635E-6	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999996867775138	WITHOUT_CLASSIFICATION	3.132224861746813E-7	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9995977385438712	WITHOUT_CLASSIFICATION	4.022614561287204E-4	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999856379434694	WITHOUT_CLASSIFICATION	1.4362056530676281E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999993743863671	WITHOUT_CLASSIFICATION	6.256136329364041E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999513043366	WITHOUT_CLASSIFICATION	4.8695663372716285E-8	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999989907848662	WITHOUT_CLASSIFICATION	1.0092151337102856E-6	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999364927818	WITHOUT_CLASSIFICATION	6.350721812697243E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999992860305756	WITHOUT_CLASSIFICATION	7.139694243972321E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.9999999513043366	WITHOUT_CLASSIFICATION	4.8695663372716285E-8	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999989907848662	WITHOUT_CLASSIFICATION	1.0092151337102856E-6	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.9999998880531231	WITHOUT_CLASSIFICATION	1.1194687689171951E-7	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999851511768518	WITHOUT_CLASSIFICATION	1.4848823148064741E-5	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999851511768518	WITHOUT_CLASSIFICATION	1.4848823148064741E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9997272158104977	WITHOUT_CLASSIFICATION	2.727841895023526E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999848915917	WITHOUT_CLASSIFICATION	1.510840823587226E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999997128391381	WITHOUT_CLASSIFICATION	2.871608618962653E-7	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999991614448429	WITHOUT_CLASSIFICATION	8.385551570766698E-7	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999355245556784	WITHOUT_CLASSIFICATION	6.447544432159158E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999996779261017	WITHOUT_CLASSIFICATION	3.220738983840753E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.9997414565976124	WITHOUT_CLASSIFICATION	2.585434023876093E-4	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999320069457861	WITHOUT_CLASSIFICATION	6.799305421388345E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999454476402693	WITHOUT_CLASSIFICATION	5.455235973085937E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999980149657972	WITHOUT_CLASSIFICATION	1.9850342028334527E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999987919227589	WITHOUT_CLASSIFICATION	1.2080772412274892E-6	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999996305379331	WITHOUT_CLASSIFICATION	3.694620669145291E-7	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999937394278	WITHOUT_CLASSIFICATION	6.260572122567792E-9	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999212930131	WITHOUT_CLASSIFICATION	7.870698694618675E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.9999999212930131	WITHOUT_CLASSIFICATION	7.870698694618675E-8	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9995115233874804	WITHOUT_CLASSIFICATION	4.884766125196824E-4	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9995115233874804	WITHOUT_CLASSIFICATION	4.884766125196824E-4	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999998767383284	WITHOUT_CLASSIFICATION	1.232616715919438E-7	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999954688012274	WITHOUT_CLASSIFICATION	4.531198772723094E-6	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999701877821185	WITHOUT_CLASSIFICATION	2.9812217881433936E-5	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999999067116128	WITHOUT_CLASSIFICATION	9.328838716400386E-8	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999952770681501	WITHOUT_CLASSIFICATION	4.722931849974853E-6	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999974788713103	WITHOUT_CLASSIFICATION	2.52112868970095E-6	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999997128391381	WITHOUT_CLASSIFICATION	2.871608618962653E-7	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999991614448429	WITHOUT_CLASSIFICATION	8.385551570766698E-7	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999454476402693	WITHOUT_CLASSIFICATION	5.455235973085937E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999980149657972	WITHOUT_CLASSIFICATION	1.9850342028334527E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.999935039869353	WITHOUT_CLASSIFICATION	6.496013064705986E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999621997040072	WITHOUT_CLASSIFICATION	3.7800295992774437E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999982434175535	WITHOUT_CLASSIFICATION	1.7565824464907166E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.9999999235484796	WITHOUT_CLASSIFICATION	7.645152050721216E-8	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999883315432909	WITHOUT_CLASSIFICATION	1.1668456708973153E-5	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999891079865	WITHOUT_CLASSIFICATION	1.0892013487149915E-8	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.9999992395058409	WITHOUT_CLASSIFICATION	7.60494159010417E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999960576941184	WITHOUT_CLASSIFICATION	3.942305881631893E-6	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999890038342949	WITHOUT_CLASSIFICATION	1.0996165705170483E-5	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999960836698084	WITHOUT_CLASSIFICATION	3.9163301916134475E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999582467959	WITHOUT_CLASSIFICATION	4.1753204118726863E-8	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999998303637221	WITHOUT_CLASSIFICATION	1.6963627795162052E-7	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.9999925293708248	WITHOUT_CLASSIFICATION	7.470629175147149E-6	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999969883116471	WITHOUT_CLASSIFICATION	3.011688352876813E-6	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.999983245106352	WITHOUT_CLASSIFICATION	1.675489364799865E-5	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999819690143	WITHOUT_CLASSIFICATION	1.803098571568419E-8	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999908566685942	WITHOUT_CLASSIFICATION	9.14333140578631E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999992781094328	WITHOUT_CLASSIFICATION	7.218905673311749E-7	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999998845233287	WITHOUT_CLASSIFICATION	1.1547667135429745E-7	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.999999806481387	WITHOUT_CLASSIFICATION	1.9351861307913162E-7	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998014161343	WITHOUT_CLASSIFICATION	1.9858386570353367E-7	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999998014161343	WITHOUT_CLASSIFICATION	1.9858386570353367E-7	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999994294473983	WITHOUT_CLASSIFICATION	5.705526017419844E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999993054921227	WITHOUT_CLASSIFICATION	6.945078772712748E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999964412951	WITHOUT_CLASSIFICATION	3.5587048063117636E-9	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999989447151325	WITHOUT_CLASSIFICATION	1.055284867453586E-6	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999989447151325	WITHOUT_CLASSIFICATION	1.055284867453586E-6	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999982434175535	WITHOUT_CLASSIFICATION	1.7565824464907166E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999957508898244	WITHOUT_CLASSIFICATION	4.249110175661745E-6	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999991241219427	WITHOUT_CLASSIFICATION	8.758780572010795E-7	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999993871691222	WITHOUT_CLASSIFICATION	6.128308779417418E-7	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999992315369589	WITHOUT_CLASSIFICATION	7.684630409896122E-7	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999997745217675	WITHOUT_CLASSIFICATION	2.254782325276921E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999282827792	WITHOUT_CLASSIFICATION	7.171722083173513E-8	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999450187525007	WITHOUT_CLASSIFICATION	5.498124749929425E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999985877918502	WITHOUT_CLASSIFICATION	1.4122081496992007E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999956597647038	WITHOUT_CLASSIFICATION	4.3402352962517175E-6	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999995053197213	WITHOUT_CLASSIFICATION	4.946802787885804E-7	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999993764402468	WITHOUT_CLASSIFICATION	6.235597530995886E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999975311655341	WITHOUT_CLASSIFICATION	2.4688344659738215E-6	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.999991198297875	WITHOUT_CLASSIFICATION	8.801702125068595E-6	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.999994331485022	WITHOUT_CLASSIFICATION	5.668514978011793E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999173114203	WITHOUT_CLASSIFICATION	8.268857961374173E-8	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999996328139109	WITHOUT_CLASSIFICATION	3.6718608912341026E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999998453412229	WITHOUT_CLASSIFICATION	1.54658777120468E-7	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999985962043	WITHOUT_CLASSIFICATION	1.4037957319527909E-9	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999326450342	WITHOUT_CLASSIFICATION	6.735496578689264E-8	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999968560300476	WITHOUT_CLASSIFICATION	3.1439699524512053E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.999996850472208	WITHOUT_CLASSIFICATION	3.1495277919750596E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999995068702638	WITHOUT_CLASSIFICATION	4.931297361339221E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999797766502	WITHOUT_CLASSIFICATION	2.022334975181459E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998496951223	WITHOUT_CLASSIFICATION	1.5030487757362733E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999950916993866	WITHOUT_CLASSIFICATION	4.9083006133867295E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999995703401476	WITHOUT_CLASSIFICATION	4.2965985230864E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999997915813433	WITHOUT_CLASSIFICATION	2.0841865678659612E-7	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.999998165013694	WITHOUT_CLASSIFICATION	1.834986306042886E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997008170128	WITHOUT_CLASSIFICATION	2.991829871484182E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997008170128	WITHOUT_CLASSIFICATION	2.991829871484182E-7	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999911916765	WITHOUT_CLASSIFICATION	8.808323478031243E-9	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999980334626043	WITHOUT_CLASSIFICATION	1.966537395595494E-6	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999980334626043	WITHOUT_CLASSIFICATION	1.966537395595494E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999998891239256	WITHOUT_CLASSIFICATION	1.1087607439299552E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.999998891239256	WITHOUT_CLASSIFICATION	1.1087607439299552E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991665222424	WITHOUT_CLASSIFICATION	8.334777575184945E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999999876619375	WITHOUT_CLASSIFICATION	1.2338062507820541E-7	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999791432166822	WITHOUT_CLASSIFICATION	2.0856783317729174E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999991265607845	WITHOUT_CLASSIFICATION	8.734392154819809E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999999726243868	WITHOUT_CLASSIFICATION	2.737561316181665E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999997268651447	WITHOUT_CLASSIFICATION	2.731348552561768E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999997268651447	WITHOUT_CLASSIFICATION	2.731348552561768E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999797766502	WITHOUT_CLASSIFICATION	2.022334975181459E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999797766502	WITHOUT_CLASSIFICATION	2.022334975181459E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999797766502	WITHOUT_CLASSIFICATION	2.022334975181459E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998496951223	WITHOUT_CLASSIFICATION	1.5030487757362733E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997008170128	WITHOUT_CLASSIFICATION	2.991829871484182E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997008170128	WITHOUT_CLASSIFICATION	2.991829871484182E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997008170128	WITHOUT_CLASSIFICATION	2.991829871484182E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991665222424	WITHOUT_CLASSIFICATION	8.334777575184945E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991665222424	WITHOUT_CLASSIFICATION	8.334777575184945E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991665222424	WITHOUT_CLASSIFICATION	8.334777575184945E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999991265607845	WITHOUT_CLASSIFICATION	8.734392154819809E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999991265607845	WITHOUT_CLASSIFICATION	8.734392154819809E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999890335010208	WITHOUT_CLASSIFICATION	1.0966498979270994E-5	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999888621526899	WITHOUT_CLASSIFICATION	1.1137847310134141E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.99997331387396	WITHOUT_CLASSIFICATION	2.6686126039938152E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9961364882400193	WITHOUT_CLASSIFICATION	0.00386351175998072	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9998596240654832	WITHOUT_CLASSIFICATION	1.403759345167338E-4	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999998183939419	WITHOUT_CLASSIFICATION	1.8160605798599472E-7	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999998183939419	WITHOUT_CLASSIFICATION	1.8160605798599472E-7	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999999964503567	WITHOUT_CLASSIFICATION	3.549643297140908E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999992510273372	WITHOUT_CLASSIFICATION	7.489726628701481E-7	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999992510273372	WITHOUT_CLASSIFICATION	7.489726628701481E-7	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999992510273372	WITHOUT_CLASSIFICATION	7.489726628701481E-7	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999915141713	WITHOUT_CLASSIFICATION	8.485828632775216E-9	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999962208691039	WITHOUT_CLASSIFICATION	3.779130896059631E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998496951223	WITHOUT_CLASSIFICATION	1.5030487757362733E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991665222424	WITHOUT_CLASSIFICATION	8.334777575184945E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999991665222424	WITHOUT_CLASSIFICATION	8.334777575184945E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999992510273372	WITHOUT_CLASSIFICATION	7.489726628701481E-7	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.999999964503567	WITHOUT_CLASSIFICATION	3.549643297140908E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999130592958	WITHOUT_CLASSIFICATION	8.694070425069712E-8	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999978808549925	WITHOUT_CLASSIFICATION	2.1191450074143758E-6	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999791353221	WITHOUT_CLASSIFICATION	2.0864677799607955E-8	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999896954731415	WITHOUT_CLASSIFICATION	1.0304526858490188E-5	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999981285098276	WITHOUT_CLASSIFICATION	1.8714901723150155E-6	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999986644344131	WITHOUT_CLASSIFICATION	1.3355655868167274E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999465626777551	WITHOUT_CLASSIFICATION	5.3437322245042035E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999962144660344	WITHOUT_CLASSIFICATION	3.7855339656015817E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999897515466859	WITHOUT_CLASSIFICATION	1.024845331404004E-5	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999994703799145	WITHOUT_CLASSIFICATION	5.296200854605333E-7	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999850187609699	WITHOUT_CLASSIFICATION	1.4981239030157752E-5	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999996936845291	WITHOUT_CLASSIFICATION	3.0631547085783197E-7	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999959330776959	WITHOUT_CLASSIFICATION	4.0669223041587894E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.999617253892807	WITHOUT_CLASSIFICATION	3.827461071929561E-4	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999976965821622	WITHOUT_CLASSIFICATION	2.303417837834996E-6	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.988882445996786	WITHOUT_CLASSIFICATION	0.011117554003213905	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999954679673801	WITHOUT_CLASSIFICATION	4.532032619790937E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999999725694019	WITHOUT_CLASSIFICATION	2.743059811902229E-8	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997106038729546	WITHOUT_CLASSIFICATION	2.8939612704534785E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999830978402	WITHOUT_CLASSIFICATION	1.6902159793293202E-8	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997224925591404	WITHOUT_CLASSIFICATION	2.775074408596235E-4	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999994461153	WITHOUT_CLASSIFICATION	5.538847314588574E-10	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999991218468	WITHOUT_CLASSIFICATION	8.78153245466644E-10	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999705196913866	WITHOUT_CLASSIFICATION	2.9480308613415024E-5	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999999164134727	WITHOUT_CLASSIFICATION	8.358652729499586E-8	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999930381141389	WITHOUT_CLASSIFICATION	6.961885861188501E-6	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999979761205242	WITHOUT_CLASSIFICATION	2.0238794757909822E-6	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999924861929	WITHOUT_CLASSIFICATION	7.513807137523123E-9	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999996931071552	WITHOUT_CLASSIFICATION	3.068928447985844E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9997869260107647	WITHOUT_CLASSIFICATION	2.1307398923540535E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999901173368	WITHOUT_CLASSIFICATION	9.882663294677531E-9	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.999998868283382	WITHOUT_CLASSIFICATION	1.1317166179148148E-6	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999996037903	WITHOUT_CLASSIFICATION	3.9620970680011924E-10	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999895015533	WITHOUT_CLASSIFICATION	1.0498446558014867E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999130592958	WITHOUT_CLASSIFICATION	8.694070425069712E-8	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999267168965	WITHOUT_CLASSIFICATION	7.328310355941973E-8	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999327441805	WITHOUT_CLASSIFICATION	6.725581952325783E-8	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.999999925376799	WITHOUT_CLASSIFICATION	7.462320096950998E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999987725785628	WITHOUT_CLASSIFICATION	1.2274214371474816E-6	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.9999987725785628	WITHOUT_CLASSIFICATION	1.2274214371474816E-6	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999276758205429	WITHOUT_CLASSIFICATION	7.232417945720877E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999276758205429	WITHOUT_CLASSIFICATION	7.232417945720877E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999992246777	WITHOUT_CLASSIFICATION	7.753222453281129E-10	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999718245871	WITHOUT_CLASSIFICATION	2.8175412871272077E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999993737575621	WITHOUT_CLASSIFICATION	6.26242437971848E-7	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999951669949741	WITHOUT_CLASSIFICATION	4.833005025835509E-6	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999997953759021	WITHOUT_CLASSIFICATION	2.0462409789200442E-7	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999220771621251	WITHOUT_CLASSIFICATION	7.792283787485487E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.9999999657412716	WITHOUT_CLASSIFICATION	3.4258728307874555E-8	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999985776389856	WITHOUT_CLASSIFICATION	1.4223610143023816E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9988526196164031	WITHOUT_CLASSIFICATION	0.0011473803835968786	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999951724146	WITHOUT_CLASSIFICATION	4.82758539313184E-9	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999996423011	WITHOUT_CLASSIFICATION	3.5769895883177865E-10	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999995494196398	WITHOUT_CLASSIFICATION	4.505803601804015E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999995494196398	WITHOUT_CLASSIFICATION	4.505803601804015E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999993388087	WITHOUT_CLASSIFICATION	6.611911890340568E-10	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999227182905	WITHOUT_CLASSIFICATION	7.728170953857918E-8	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999988113846522	WITHOUT_CLASSIFICATION	1.188615347809899E-6	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999988113846522	WITHOUT_CLASSIFICATION	1.188615347809899E-6	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999920043424	WITHOUT_CLASSIFICATION	7.995657471734095E-9	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999364072741	WITHOUT_CLASSIFICATION	6.359272588984893E-8	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999970490721678	WITHOUT_CLASSIFICATION	2.950927832313763E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999996807643697	WITHOUT_CLASSIFICATION	3.1923563021675443E-7	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999358997818	WITHOUT_CLASSIFICATION	6.41002182512756E-8	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.999935506541277	WITHOUT_CLASSIFICATION	6.44934587229668E-5	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999934472649067	WITHOUT_CLASSIFICATION	6.5527350933168506E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999951152329907	WITHOUT_CLASSIFICATION	4.884767009288078E-6	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.994988983137523	WITHOUT_CLASSIFICATION	0.0050110168624769085	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999990668384027	WITHOUT_CLASSIFICATION	9.331615973489992E-7	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999995905035511	WITHOUT_CLASSIFICATION	4.0949644888979534E-7	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.999999895591096	WITHOUT_CLASSIFICATION	1.0440890403754712E-7	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999775830459349	WITHOUT_CLASSIFICATION	2.2416954065078222E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999944519888925	WITHOUT_CLASSIFICATION	5.548011107462149E-6	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.999999650089398	WITHOUT_CLASSIFICATION	3.499106021417933E-7	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999975901861012	WITHOUT_CLASSIFICATION	2.409813898848676E-6	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.999996351878086	WITHOUT_CLASSIFICATION	3.6481219139370247E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999997596408161	WITHOUT_CLASSIFICATION	2.4035918389483516E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999994178176	WITHOUT_CLASSIFICATION	5.821823522924075E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999991264634244	WITHOUT_CLASSIFICATION	8.735365757069249E-7	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.88035100673524	IMPLEMENTATION	0.11964899326475989	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999942102378995	WITHOUT_CLASSIFICATION	5.789762100609921E-6	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999971628939127	WITHOUT_CLASSIFICATION	2.8371060873444744E-6	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999723747424021	WITHOUT_CLASSIFICATION	2.762525759793217E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.9999936071195834	WITHOUT_CLASSIFICATION	6.392880416655012E-6	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999998039461565	WITHOUT_CLASSIFICATION	1.9605384351250708E-7	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999991393255536	WITHOUT_CLASSIFICATION	8.606744464713884E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.999987048785896	WITHOUT_CLASSIFICATION	1.2951214104024312E-5	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999996700018781	WITHOUT_CLASSIFICATION	3.2999812201739174E-7	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999950750901	WITHOUT_CLASSIFICATION	4.924909906000651E-9	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999643386631	WITHOUT_CLASSIFICATION	3.5661336901774045E-8	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.999999977945713	WITHOUT_CLASSIFICATION	2.205428696484865E-8	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999997591319907	WITHOUT_CLASSIFICATION	2.4086800932529447E-7	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999590789622	WITHOUT_CLASSIFICATION	4.092103767614336E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.9999999590789622	WITHOUT_CLASSIFICATION	4.092103767614336E-8	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.9999980064631451	WITHOUT_CLASSIFICATION	1.993536854850191E-6	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999851961701	WITHOUT_CLASSIFICATION	1.4803829804362996E-8	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999907900065	WITHOUT_CLASSIFICATION	9.209993600730454E-9	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999938488874659	WITHOUT_CLASSIFICATION	6.151112534085695E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999993290834078	WITHOUT_CLASSIFICATION	6.709165922098677E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999980491507904	WITHOUT_CLASSIFICATION	1.9508492097165887E-6	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999947716387009	WITHOUT_CLASSIFICATION	5.228361299067622E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.999995809930284	WITHOUT_CLASSIFICATION	4.190069716046751E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999986164370056	WITHOUT_CLASSIFICATION	1.3835629943802324E-6	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999979947445337	WITHOUT_CLASSIFICATION	2.0052554664224337E-6	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999982058786	WITHOUT_CLASSIFICATION	1.7941214384093433E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9995130813014639	WITHOUT_CLASSIFICATION	4.869186985360491E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999458354537212	WITHOUT_CLASSIFICATION	5.4164546278804146E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.999991872673295	WITHOUT_CLASSIFICATION	8.127326705077763E-6	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999984569458419	WITHOUT_CLASSIFICATION	1.5430541580643944E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999986720308246	WITHOUT_CLASSIFICATION	1.3279691753442496E-6	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999930728945704	WITHOUT_CLASSIFICATION	6.927105429658899E-6	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999979629112616	WITHOUT_CLASSIFICATION	2.037088738316164E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.984034415091714	WITHOUT_CLASSIFICATION	0.015965584908286	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999874159391707	WITHOUT_CLASSIFICATION	1.258406082931475E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999975741404331	WITHOUT_CLASSIFICATION	2.425859566841938E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999997455963159	WITHOUT_CLASSIFICATION	2.544036841451994E-7	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999997757558468	WITHOUT_CLASSIFICATION	2.242441532098226E-7	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999996085285691	WITHOUT_CLASSIFICATION	3.9147143095008784E-7	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.999987456719854	WITHOUT_CLASSIFICATION	1.2543280145940125E-5	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999970108305589	WITHOUT_CLASSIFICATION	2.9891694411282506E-6	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999997805832	WITHOUT_CLASSIFICATION	2.1941678461400211E-10	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.9999999851912378	WITHOUT_CLASSIFICATION	1.4808762202843373E-8	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999750801949512	WITHOUT_CLASSIFICATION	2.4919805048849358E-5	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.999991491903177	WITHOUT_CLASSIFICATION	8.508096822969576E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998034549289	WITHOUT_CLASSIFICATION	1.9654507114519996E-7	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.999998975017567	WITHOUT_CLASSIFICATION	1.0249824329796994E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.999998566176826	WITHOUT_CLASSIFICATION	1.4338231738794146E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999947663764	WITHOUT_CLASSIFICATION	5.233623622806753E-9	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999965299205401	WITHOUT_CLASSIFICATION	3.470079459989627E-6	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999988995006	WITHOUT_CLASSIFICATION	1.1004994069462563E-9	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999999378872219	WITHOUT_CLASSIFICATION	6.21127781526145E-8	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.999998152558864	WITHOUT_CLASSIFICATION	1.8474411358958376E-6	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999463115938468	WITHOUT_CLASSIFICATION	5.3688406153180585E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999999880996786	WITHOUT_CLASSIFICATION	1.1900321392484306E-7	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999907587269263	WITHOUT_CLASSIFICATION	9.24127307360862E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999999724549668	WITHOUT_CLASSIFICATION	2.754503320101333E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999999724549668	WITHOUT_CLASSIFICATION	2.754503320101333E-7	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999995301337163	WITHOUT_CLASSIFICATION	4.698662836675384E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999722111372	WITHOUT_CLASSIFICATION	2.7788862685953466E-8	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.9999997424237377	WITHOUT_CLASSIFICATION	2.575762622455906E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9998685842272145	WITHOUT_CLASSIFICATION	1.314157727856242E-4	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999843174333631	WITHOUT_CLASSIFICATION	1.568256663685278E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.999999999886819	WITHOUT_CLASSIFICATION	1.1318090536391932E-10	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999885490894	WITHOUT_CLASSIFICATION	1.1450910603545613E-8	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999994060673214	WITHOUT_CLASSIFICATION	5.939326786250765E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999975190138074	WITHOUT_CLASSIFICATION	2.480986192615984E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999988450496248	WITHOUT_CLASSIFICATION	1.1549503752549002E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999724920392	WITHOUT_CLASSIFICATION	2.7507960737234962E-8	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999994332866161	WITHOUT_CLASSIFICATION	5.667133838788443E-7	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999984390158374	WITHOUT_CLASSIFICATION	1.560984162600349E-6	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999981151832825	WITHOUT_CLASSIFICATION	1.8848167175288318E-6	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999978642751862	WITHOUT_CLASSIFICATION	2.1357248136902093E-6	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9687291103589171	WITHOUT_CLASSIFICATION	0.031270889641082836	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999996821167066	WITHOUT_CLASSIFICATION	3.1788329337572636E-7	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999995897429961	WITHOUT_CLASSIFICATION	4.1025700391219816E-7	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.9999986193712423	WITHOUT_CLASSIFICATION	1.3806287577214188E-6	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999935144588545	WITHOUT_CLASSIFICATION	6.4855411454082644E-6	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999986344958599	WITHOUT_CLASSIFICATION	1.365504140038696E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999937808194991	WITHOUT_CLASSIFICATION	6.219180500803804E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999976802886584	WITHOUT_CLASSIFICATION	2.319711341596136E-6	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999975967866731	WITHOUT_CLASSIFICATION	2.4032133268811154E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999983999716874	WITHOUT_CLASSIFICATION	1.6000283126177379E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999995250173818	WITHOUT_CLASSIFICATION	4.749826183185583E-7	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999999818647	WITHOUT_CLASSIFICATION	1.8135233161026083E-11	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999630587780395	WITHOUT_CLASSIFICATION	3.694122196050605E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999997437013941	WITHOUT_CLASSIFICATION	2.5629860586175894E-7	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999985266970012	WITHOUT_CLASSIFICATION	1.4733029989052646E-6	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999997081785591	WITHOUT_CLASSIFICATION	2.9182144092584143E-7	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999975625653842	WITHOUT_CLASSIFICATION	2.437434615765846E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999985266970012	WITHOUT_CLASSIFICATION	1.4733029989052646E-6	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999999539240207	WITHOUT_CLASSIFICATION	4.6075979207234265E-8	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999969014996134	WITHOUT_CLASSIFICATION	3.0985003866500067E-6	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9997056040714789	WITHOUT_CLASSIFICATION	2.9439592852116E-4	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.8980736494825885	IMPLEMENTATION	0.1019263505174115	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999983469473386	WITHOUT_CLASSIFICATION	1.6530526613395766E-6	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999447544	WITHOUT_CLASSIFICATION	5.524546743132941E-11	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.9999999902131189	WITHOUT_CLASSIFICATION	9.78688098222293E-9	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9999078369762113	WITHOUT_CLASSIFICATION	9.216302378863941E-5	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.9999999848915917	WITHOUT_CLASSIFICATION	1.510840823587226E-8	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999991264634244	WITHOUT_CLASSIFICATION	8.735365757069249E-7	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.99997331387396	WITHOUT_CLASSIFICATION	2.6686126039938152E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999907611928	WITHOUT_CLASSIFICATION	9.238807126672484E-9	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999980152851421	WITHOUT_CLASSIFICATION	1.984714857980477E-6	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.999999944807328	WITHOUT_CLASSIFICATION	5.51926719200249E-8	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999851745032279	WITHOUT_CLASSIFICATION	1.4825496772106713E-5	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999987073800185	WITHOUT_CLASSIFICATION	1.292619981567805E-6	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.999953374817418	WITHOUT_CLASSIFICATION	4.6625182582141926E-5	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999886986567313	WITHOUT_CLASSIFICATION	1.1301343268623046E-5	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999998951236648	WITHOUT_CLASSIFICATION	1.0487633519311372E-7	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999967065147829	WITHOUT_CLASSIFICATION	3.2934852170909065E-6	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999874526631017	WITHOUT_CLASSIFICATION	1.254733689820819E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.999996746392793	WITHOUT_CLASSIFICATION	3.2536072069671005E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.9999958990921485	WITHOUT_CLASSIFICATION	4.1009078515256515E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999703355858053	WITHOUT_CLASSIFICATION	2.966441419470645E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999971219421302	WITHOUT_CLASSIFICATION	2.8780578697616694E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999983060046298	WITHOUT_CLASSIFICATION	1.6939953701286452E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.999996667191444	WITHOUT_CLASSIFICATION	3.332808556076118E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999990361277	WITHOUT_CLASSIFICATION	9.638723012039798E-10	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999997397166	WITHOUT_CLASSIFICATION	2.602833260091622E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998958174884	WITHOUT_CLASSIFICATION	1.0418251162956194E-7	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998958174884	WITHOUT_CLASSIFICATION	1.0418251162956194E-7	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999980628911	WITHOUT_CLASSIFICATION	1.9371089569484518E-9	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999998161351	WITHOUT_CLASSIFICATION	1.8386504754498166E-10	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999964008157852	WITHOUT_CLASSIFICATION	3.599184214737737E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7177595443349446	WITHOUT_CLASSIFICATION	0.2822404556650554	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7177595443349446	WITHOUT_CLASSIFICATION	0.2822404556650554	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7177595443349446	WITHOUT_CLASSIFICATION	0.2822404556650554	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7177595443349446	WITHOUT_CLASSIFICATION	0.2822404556650554	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999678706042	WITHOUT_CLASSIFICATION	3.212939580418268E-8	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999997587312202	WITHOUT_CLASSIFICATION	2.412687798200196E-7	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999979670238438	WITHOUT_CLASSIFICATION	2.0329761561077356E-6	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.9988175545891955	WITHOUT_CLASSIFICATION	0.0011824454108044493	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999609374311768	WITHOUT_CLASSIFICATION	3.906256882316582E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999945423059678	WITHOUT_CLASSIFICATION	5.457694032240281E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999976225375546	WITHOUT_CLASSIFICATION	2.3774624453711886E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999976225375546	WITHOUT_CLASSIFICATION	2.3774624453711886E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.999997561853728	WITHOUT_CLASSIFICATION	2.4381462720666464E-6	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999968683836696	WITHOUT_CLASSIFICATION	3.1316163304055585E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999986318623355	WITHOUT_CLASSIFICATION	1.3681376644709458E-6	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9997369421398931	WITHOUT_CLASSIFICATION	2.63057860106963E-4	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999962143487127	WITHOUT_CLASSIFICATION	3.785651287368964E-6	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.9999999340295767	WITHOUT_CLASSIFICATION	6.597042336960508E-8	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999992482606	WITHOUT_CLASSIFICATION	7.517394972779631E-10	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999877600636038	WITHOUT_CLASSIFICATION	1.2239936396125655E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999819093875105	WITHOUT_CLASSIFICATION	1.80906124893857E-5	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999819093875105	WITHOUT_CLASSIFICATION	1.80906124893857E-5	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999975625653842	WITHOUT_CLASSIFICATION	2.437434615765846E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999974839218264	WITHOUT_CLASSIFICATION	2.5160781734979735E-6	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999976227775959	WITHOUT_CLASSIFICATION	2.377222404183425E-6	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999798104406485	WITHOUT_CLASSIFICATION	2.018955935142881E-5	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999991635101	WITHOUT_CLASSIFICATION	8.364898553991846E-10	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.999994151339559	WITHOUT_CLASSIFICATION	5.848660441004192E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999339445973662	WITHOUT_CLASSIFICATION	6.605540263391168E-5	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999902935525988	WITHOUT_CLASSIFICATION	9.706447401161591E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988206402404	WITHOUT_CLASSIFICATION	1.1793597596269904E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999988206402404	WITHOUT_CLASSIFICATION	1.1793597596269904E-6	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999998418307544	WITHOUT_CLASSIFICATION	1.5816924564411417E-7	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999852708108	WITHOUT_CLASSIFICATION	1.4729189288079578E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.9999985669071118	WITHOUT_CLASSIFICATION	1.4330928883034133E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999799241137849	WITHOUT_CLASSIFICATION	2.0075886215140613E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999547139261262	WITHOUT_CLASSIFICATION	4.528607387377572E-5	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999897995817836	WITHOUT_CLASSIFICATION	1.0200418216437246E-5	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9851585884607721	WITHOUT_CLASSIFICATION	0.014841411539227977	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995963978553	WITHOUT_CLASSIFICATION	4.0360214471855444E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995963978553	WITHOUT_CLASSIFICATION	4.0360214471855444E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995963978553	WITHOUT_CLASSIFICATION	4.0360214471855444E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995963978553	WITHOUT_CLASSIFICATION	4.0360214471855444E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999983934954	WITHOUT_CLASSIFICATION	1.6065045834227418E-9	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999995664760674	WITHOUT_CLASSIFICATION	4.3352393260966277E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9997990233960015	WITHOUT_CLASSIFICATION	2.009766039985906E-4	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999987193021915	WITHOUT_CLASSIFICATION	1.280697808480221E-6	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999997584246275	WITHOUT_CLASSIFICATION	2.4157537245081673E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999968679839629	WITHOUT_CLASSIFICATION	3.1320160370246896E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999992611878098	WITHOUT_CLASSIFICATION	7.388121902562483E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999958889283	WITHOUT_CLASSIFICATION	4.111071657771583E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999958889283	WITHOUT_CLASSIFICATION	4.111071657771583E-9	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999958889283	WITHOUT_CLASSIFICATION	4.111071657771583E-9	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998757945767	WITHOUT_CLASSIFICATION	1.2420542329957866E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999989932170904	WITHOUT_CLASSIFICATION	1.0067829096239302E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999969406268	WITHOUT_CLASSIFICATION	3.059373196774881E-9	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999969406268	WITHOUT_CLASSIFICATION	3.059373196774881E-9	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999939275526197	WITHOUT_CLASSIFICATION	6.072447380264067E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9982623669008605	WITHOUT_CLASSIFICATION	0.0017376330991395396	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999296776798261	WITHOUT_CLASSIFICATION	7.032232017388794E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.999997157562825	WITHOUT_CLASSIFICATION	2.8424371750144846E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999384216326	WITHOUT_CLASSIFICATION	6.157836745374988E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999963135443711	WITHOUT_CLASSIFICATION	3.686455628749476E-6	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999883079738	WITHOUT_CLASSIFICATION	1.1692026132030675E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999883079738	WITHOUT_CLASSIFICATION	1.1692026132030675E-8	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999486525789	WITHOUT_CLASSIFICATION	5.134742112267765E-8	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.9999999999955613	WITHOUT_CLASSIFICATION	4.438674253110034E-12	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999997927759341	WITHOUT_CLASSIFICATION	2.0722406583804836E-7	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.9999388015056104	WITHOUT_CLASSIFICATION	6.11984943895968E-5	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9443075264709836	WITHOUT_CLASSIFICATION	0.0556924735290164	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999993177275273	WITHOUT_CLASSIFICATION	6.822724727105497E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.99999938925966	WITHOUT_CLASSIFICATION	6.10740340063225E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9994425588842681	WITHOUT_CLASSIFICATION	5.574411157318652E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999998650453088	WITHOUT_CLASSIFICATION	1.349546911626129E-7	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.999999353127432	WITHOUT_CLASSIFICATION	6.468725679311005E-7	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999994521198361	WITHOUT_CLASSIFICATION	5.478801640133875E-7	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.9999999797826546	WITHOUT_CLASSIFICATION	2.0217345382038007E-8	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9759597342829918	WITHOUT_CLASSIFICATION	0.024040265717008263	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999998556510621	WITHOUT_CLASSIFICATION	1.443489379659864E-7	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999788177671088	WITHOUT_CLASSIFICATION	2.1182232891130793E-5	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999277308941643	WITHOUT_CLASSIFICATION	7.226910583577524E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999941847258239	WITHOUT_CLASSIFICATION	5.81527417609132E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.9999998244292233	WITHOUT_CLASSIFICATION	1.7557077666292627E-7	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999989839877171	WITHOUT_CLASSIFICATION	1.0160122828789743E-6	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999988288046575	WITHOUT_CLASSIFICATION	1.1711953425516075E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999506242613	WITHOUT_CLASSIFICATION	4.937573876939813E-8	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9990734549847383	WITHOUT_CLASSIFICATION	9.265450152616939E-4	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999881060796924	WITHOUT_CLASSIFICATION	1.1893920307639752E-5	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999371067750802	WITHOUT_CLASSIFICATION	6.289322491972932E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.9999949300280333	WITHOUT_CLASSIFICATION	5.069971966753014E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.999962340299938	WITHOUT_CLASSIFICATION	3.7659700061967556E-5	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999935180584537	WITHOUT_CLASSIFICATION	6.481941546235328E-6	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999885490894	WITHOUT_CLASSIFICATION	1.1450910603545613E-8	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999885490894	WITHOUT_CLASSIFICATION	1.1450910603545613E-8	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999544905595	WITHOUT_CLASSIFICATION	4.550944053864287E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999998428007745	WITHOUT_CLASSIFICATION	1.5719922555225587E-7	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999993754375	WITHOUT_CLASSIFICATION	6.245626439779521E-10	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999997990480237	WITHOUT_CLASSIFICATION	2.0095197636868356E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999881058778388	WITHOUT_CLASSIFICATION	1.1894122161217177E-5	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.9999953225637248	WITHOUT_CLASSIFICATION	4.677436275189151E-6	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999971460060775	WITHOUT_CLASSIFICATION	2.8539939224530448E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9996954045789768	WITHOUT_CLASSIFICATION	3.0459542102331154E-4	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999983216807179	WITHOUT_CLASSIFICATION	1.6783192821260639E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999839211322266	WITHOUT_CLASSIFICATION	1.6078867773452834E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999839211322266	WITHOUT_CLASSIFICATION	1.6078867773452834E-5	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999839211322266	WITHOUT_CLASSIFICATION	1.6078867773452834E-5	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999444277333	WITHOUT_CLASSIFICATION	5.557226674753544E-8	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999657904135033	WITHOUT_CLASSIFICATION	3.420958649671791E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999980556982007	WITHOUT_CLASSIFICATION	1.9443017994362097E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999748029409	WITHOUT_CLASSIFICATION	2.519705908702803E-8	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.9989446892326328	WITHOUT_CLASSIFICATION	0.0010553107673672833	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.999999947013918	WITHOUT_CLASSIFICATION	5.2986081982548847E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999998837963587	WITHOUT_CLASSIFICATION	1.1620364122880457E-7	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999924566849155	WITHOUT_CLASSIFICATION	7.543315084499143E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998987934294028	WITHOUT_CLASSIFICATION	1.0120657059727332E-4	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9998987934294028	WITHOUT_CLASSIFICATION	1.0120657059727332E-4	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999997043969938	WITHOUT_CLASSIFICATION	2.956030062481081E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998217063077	WITHOUT_CLASSIFICATION	1.7829369218134924E-7	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.9999999338627921	WITHOUT_CLASSIFICATION	6.613720793916168E-8	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999993676749966	WITHOUT_CLASSIFICATION	6.323250032437787E-7	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999918558794375	WITHOUT_CLASSIFICATION	8.144120562572584E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999918558794375	WITHOUT_CLASSIFICATION	8.144120562572584E-6	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999992808136866	WITHOUT_CLASSIFICATION	7.191863134117564E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999998555619345	WITHOUT_CLASSIFICATION	1.4443806553580007E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999992579281746	WITHOUT_CLASSIFICATION	7.420718253735556E-7	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999585346102134	WITHOUT_CLASSIFICATION	4.146538978653384E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999994441510172	WITHOUT_CLASSIFICATION	5.558489828671572E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999995210435616	WITHOUT_CLASSIFICATION	4.789564384124349E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999995210435616	WITHOUT_CLASSIFICATION	4.789564384124349E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999978525973674	WITHOUT_CLASSIFICATION	2.1474026324880424E-6	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999978525973674	WITHOUT_CLASSIFICATION	2.1474026324880424E-6	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999353693905	WITHOUT_CLASSIFICATION	6.463060952660227E-8	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999857588518546	WITHOUT_CLASSIFICATION	1.4241148145450407E-5	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999967637141546	WITHOUT_CLASSIFICATION	3.2362858454929237E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.999997271284657	WITHOUT_CLASSIFICATION	2.7287153430699354E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999989714874665	WITHOUT_CLASSIFICATION	1.0285125334917594E-6	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999942423499	WITHOUT_CLASSIFICATION	5.757650233380097E-9	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999995823560495	WITHOUT_CLASSIFICATION	4.176439504962826E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999997268651447	WITHOUT_CLASSIFICATION	2.731348552561768E-7	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999997741709707	WITHOUT_CLASSIFICATION	2.2582902922383473E-7	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.9999999999712289	WITHOUT_CLASSIFICATION	2.877105682908216E-11	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9997080714139065	WITHOUT_CLASSIFICATION	2.9192858609353883E-4	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999910203805725	WITHOUT_CLASSIFICATION	8.979619427459165E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999815558143416	WITHOUT_CLASSIFICATION	1.8444185658464674E-5	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9999053687265788	WITHOUT_CLASSIFICATION	9.463127342123134E-5	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999188027282	WITHOUT_CLASSIFICATION	8.119727168473425E-8	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999958723751	WITHOUT_CLASSIFICATION	4.1276248666303655E-9	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999814806183882	WITHOUT_CLASSIFICATION	1.8519381611792727E-5	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999997313907737	WITHOUT_CLASSIFICATION	2.6860922625974325E-7	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999998459137334	WITHOUT_CLASSIFICATION	1.5408626658115818E-7	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.9999951933347007	WITHOUT_CLASSIFICATION	4.806665299342914E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999907611928	WITHOUT_CLASSIFICATION	9.238807126672484E-9	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999633832039175	WITHOUT_CLASSIFICATION	3.6616796082512976E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999786795225	WITHOUT_CLASSIFICATION	2.1320477433786224E-8	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999463272482877	WITHOUT_CLASSIFICATION	5.367275171228903E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999999730684306	WITHOUT_CLASSIFICATION	2.6931569405071928E-8	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.999990487453874	WITHOUT_CLASSIFICATION	9.512546126048565E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.999997700782056	WITHOUT_CLASSIFICATION	2.2992179440234842E-6	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999999578625	WITHOUT_CLASSIFICATION	4.2137543270252016E-11	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999998870057999	WITHOUT_CLASSIFICATION	1.1299420019275841E-7	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999675502678127	WITHOUT_CLASSIFICATION	3.2449732187318066E-5	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999912748903889	WITHOUT_CLASSIFICATION	8.725109611244101E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999968732487	WITHOUT_CLASSIFICATION	3.1267513673134744E-9	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999990872487678	WITHOUT_CLASSIFICATION	9.12751232227317E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.9999987276748538	WITHOUT_CLASSIFICATION	1.2723251462940043E-6	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999981569565358	WITHOUT_CLASSIFICATION	1.843043464216769E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.9999999942683527	WITHOUT_CLASSIFICATION	5.7316472668253555E-9	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999851312948	WITHOUT_CLASSIFICATION	1.4868705259263341E-8	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999762609516	WITHOUT_CLASSIFICATION	2.3739048378731685E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999950250589	WITHOUT_CLASSIFICATION	4.974941162108178E-9	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999564804773	WITHOUT_CLASSIFICATION	4.351952271034481E-8	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.9999999198371775	WITHOUT_CLASSIFICATION	8.016282248742771E-8	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.999999723362343	WITHOUT_CLASSIFICATION	2.7663765698242416E-7	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999979564306887	WITHOUT_CLASSIFICATION	2.0435693112956623E-6	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999998361404292	WITHOUT_CLASSIFICATION	1.6385957080492354E-7	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999896316490844	WITHOUT_CLASSIFICATION	1.0368350915661886E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999073841525705	WITHOUT_CLASSIFICATION	9.261584742948908E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999993724621448	WITHOUT_CLASSIFICATION	6.275378553430548E-7	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999403597212	WITHOUT_CLASSIFICATION	5.964027872457975E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999997693201581	WITHOUT_CLASSIFICATION	2.3067984186515456E-7	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999966997679504	WITHOUT_CLASSIFICATION	3.3002320495488298E-6	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999983139596957	WITHOUT_CLASSIFICATION	1.6860403043361356E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999828746460783	WITHOUT_CLASSIFICATION	1.7125353921780893E-5	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999828746460783	WITHOUT_CLASSIFICATION	1.7125353921780893E-5	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999801112608	WITHOUT_CLASSIFICATION	1.9888739293195478E-8	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999801112608	WITHOUT_CLASSIFICATION	1.9888739293195478E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999503983444906	WITHOUT_CLASSIFICATION	4.9601655509409884E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999503983444906	WITHOUT_CLASSIFICATION	4.9601655509409884E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999996761403835	WITHOUT_CLASSIFICATION	3.2385961649888164E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999996761403835	WITHOUT_CLASSIFICATION	3.2385961649888164E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999989917360033	WITHOUT_CLASSIFICATION	1.008263996717125E-6	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999998591533729	WITHOUT_CLASSIFICATION	1.4084662723301655E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999998591533729	WITHOUT_CLASSIFICATION	1.4084662723301655E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999998591533729	WITHOUT_CLASSIFICATION	1.4084662723301655E-7	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.9999994998225676	WITHOUT_CLASSIFICATION	5.001774324177126E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999637020182	WITHOUT_CLASSIFICATION	3.6297981808840437E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999637020182	WITHOUT_CLASSIFICATION	3.6297981808840437E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999637020182	WITHOUT_CLASSIFICATION	3.6297981808840437E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999330422091	WITHOUT_CLASSIFICATION	6.695779089323788E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999330422091	WITHOUT_CLASSIFICATION	6.695779089323788E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999330422091	WITHOUT_CLASSIFICATION	6.695779089323788E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999895029831607	WITHOUT_CLASSIFICATION	1.0497016839298522E-5	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999912773800279	WITHOUT_CLASSIFICATION	8.722619972151811E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9995612154128198	WITHOUT_CLASSIFICATION	4.387845871801516E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9990890240184036	WITHOUT_CLASSIFICATION	9.109759815962777E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9990890240184036	WITHOUT_CLASSIFICATION	9.109759815962777E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9990890240184036	WITHOUT_CLASSIFICATION	9.109759815962777E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.999999915198805	WITHOUT_CLASSIFICATION	8.480119494250473E-8	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999963579818207	WITHOUT_CLASSIFICATION	3.6420181793418413E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.9999963579818207	WITHOUT_CLASSIFICATION	3.6420181793418413E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999993869003805	WITHOUT_CLASSIFICATION	6.130996194196871E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999867182058072	WITHOUT_CLASSIFICATION	1.3281794192845505E-5	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999867182058072	WITHOUT_CLASSIFICATION	1.3281794192845505E-5	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9637447224319918	IMPLEMENTATION	0.036255277568008226	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9645489323341776	WITHOUT_CLASSIFICATION	0.03545106766582237	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999999643524011	WITHOUT_CLASSIFICATION	3.564759879789488E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.9982642467229256	WITHOUT_CLASSIFICATION	0.001735753277074415	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999999462698	WITHOUT_CLASSIFICATION	5.373024844719993E-11	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999871499806545	WITHOUT_CLASSIFICATION	1.2850019345541225E-5	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999997909823032	WITHOUT_CLASSIFICATION	2.090176968354687E-7	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9998640467874299	WITHOUT_CLASSIFICATION	1.359532125700206E-4	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.999999696717456	WITHOUT_CLASSIFICATION	3.03282543932713E-7	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999964519800301	WITHOUT_CLASSIFICATION	3.5480199698805726E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999968460472733	WITHOUT_CLASSIFICATION	3.1539527267170147E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999764505614	WITHOUT_CLASSIFICATION	2.354943857314582E-8	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999996320117085	WITHOUT_CLASSIFICATION	3.6798829144570397E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999924022437304	WITHOUT_CLASSIFICATION	7.597756269625154E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9961203941337454	WITHOUT_CLASSIFICATION	0.00387960586625468	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999984237072758	WITHOUT_CLASSIFICATION	1.5762927242279627E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999031062742	WITHOUT_CLASSIFICATION	9.689372586286298E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999995452075184	WITHOUT_CLASSIFICATION	4.547924816006416E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.9999992693117226	WITHOUT_CLASSIFICATION	7.30688277443442E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.999997859264875	WITHOUT_CLASSIFICATION	2.1407351249875244E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999937808194991	WITHOUT_CLASSIFICATION	6.219180500803804E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999995820172888	WITHOUT_CLASSIFICATION	4.1798271113678955E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9999444317558518	WITHOUT_CLASSIFICATION	5.556824414808392E-5	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999933810195035	WITHOUT_CLASSIFICATION	6.618980496534962E-6	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9986610893570835	WITHOUT_CLASSIFICATION	0.0013389106429164304	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.9999946756313766	WITHOUT_CLASSIFICATION	5.324368623462976E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.999999997727495	WITHOUT_CLASSIFICATION	2.2725049842595306E-9	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999997336922054	WITHOUT_CLASSIFICATION	2.6630779461380666E-7	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999836369612	WITHOUT_CLASSIFICATION	1.6363038870434437E-8	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999998337648061	WITHOUT_CLASSIFICATION	1.66235193859191E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.9999999526471544	WITHOUT_CLASSIFICATION	4.735284568166051E-8	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999988450496248	WITHOUT_CLASSIFICATION	1.1549503752549002E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995888917563	WITHOUT_CLASSIFICATION	4.1110824372136795E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995888917563	WITHOUT_CLASSIFICATION	4.1110824372136795E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995888917563	WITHOUT_CLASSIFICATION	4.1110824372136795E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999995888917563	WITHOUT_CLASSIFICATION	4.1110824372136795E-7	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999997815187712	WITHOUT_CLASSIFICATION	2.1848122886546662E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9999709474916189	WITHOUT_CLASSIFICATION	2.9052508381221878E-5	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999984536223393	WITHOUT_CLASSIFICATION	1.5463776606573865E-6	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999984536223393	WITHOUT_CLASSIFICATION	1.5463776606573865E-6	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999915882245	WITHOUT_CLASSIFICATION	8.41177543749902E-9	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999832827074	WITHOUT_CLASSIFICATION	1.6717292590876463E-8	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999999110659411	WITHOUT_CLASSIFICATION	8.89340589035085E-7	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999989713698	WITHOUT_CLASSIFICATION	1.0286301053371402E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.999999854249099	WITHOUT_CLASSIFICATION	1.4575090112040023E-7	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999979006365646	WITHOUT_CLASSIFICATION	2.099363435465072E-6	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.999999734981891	WITHOUT_CLASSIFICATION	2.650181090649124E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999995566998763	WITHOUT_CLASSIFICATION	4.433001237147423E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999995566998763	WITHOUT_CLASSIFICATION	4.433001237147423E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999995566998763	WITHOUT_CLASSIFICATION	4.433001237147423E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999995566998763	WITHOUT_CLASSIFICATION	4.433001237147423E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999666239723	WITHOUT_CLASSIFICATION	3.3376027621401574E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999993236692	WITHOUT_CLASSIFICATION	6.763308279241892E-10	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999993236692	WITHOUT_CLASSIFICATION	6.763308279241892E-10	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999993236692	WITHOUT_CLASSIFICATION	6.763308279241892E-10	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.9999986821990928	WITHOUT_CLASSIFICATION	1.3178009071026993E-6	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999068358492	WITHOUT_CLASSIFICATION	9.316415094601973E-8	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999312162280796	WITHOUT_CLASSIFICATION	6.878377192040506E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7177595443349446	WITHOUT_CLASSIFICATION	0.2822404556650554	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7177595443349446	WITHOUT_CLASSIFICATION	0.2822404556650554	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999998935066263	WITHOUT_CLASSIFICATION	1.0649337367835195E-7	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999903057468513	WITHOUT_CLASSIFICATION	9.694253148680196E-6	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999998916800761	WITHOUT_CLASSIFICATION	1.0831992393674424E-7	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999998916800761	WITHOUT_CLASSIFICATION	1.0831992393674424E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995518598216	WITHOUT_CLASSIFICATION	4.48140178387264E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999995518598216	WITHOUT_CLASSIFICATION	4.48140178387264E-7	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999997857415422	WITHOUT_CLASSIFICATION	2.1425845778263706E-7	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999339345916778	WITHOUT_CLASSIFICATION	6.60654083221562E-5	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.9999999736154861	WITHOUT_CLASSIFICATION	2.6384513928138418E-8	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.999982023539122	WITHOUT_CLASSIFICATION	1.797646087804788E-5	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999968605210426	WITHOUT_CLASSIFICATION	3.1394789573856282E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999995554353953	WITHOUT_CLASSIFICATION	4.4456460464625393E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.9999999932977828	WITHOUT_CLASSIFICATION	6.7022172686385E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999982583557	WITHOUT_CLASSIFICATION	1.7416443300645956E-9	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999996958138	WITHOUT_CLASSIFICATION	3.041863157482615E-10	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999966453433461	WITHOUT_CLASSIFICATION	3.3546566538621906E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999966453433461	WITHOUT_CLASSIFICATION	3.3546566538621906E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999991572102972	WITHOUT_CLASSIFICATION	8.427897027173411E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999991572102972	WITHOUT_CLASSIFICATION	8.427897027173411E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.9999982373262781	WITHOUT_CLASSIFICATION	1.7626737218681092E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999952080378368	WITHOUT_CLASSIFICATION	4.791962163190587E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.9999956326957389	WITHOUT_CLASSIFICATION	4.367304261074138E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997672142138	WITHOUT_CLASSIFICATION	2.3278578619588738E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997672142138	WITHOUT_CLASSIFICATION	2.3278578619588738E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997672142138	WITHOUT_CLASSIFICATION	2.3278578619588738E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999961807102411	WITHOUT_CLASSIFICATION	3.819289758873086E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999979723864267	WITHOUT_CLASSIFICATION	2.0276135733083978E-6	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.9999972345448995	WITHOUT_CLASSIFICATION	2.765455100483839E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999992846721213	WITHOUT_CLASSIFICATION	7.153278786968208E-7	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.9999983689930335	WITHOUT_CLASSIFICATION	1.631006966370404E-6	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999986975695858	WITHOUT_CLASSIFICATION	1.3024304141275865E-6	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.9999938722764199	WITHOUT_CLASSIFICATION	6.127723580058854E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999925590356303	WITHOUT_CLASSIFICATION	7.440964369683389E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9999534033608611	WITHOUT_CLASSIFICATION	4.6596639138801636E-5	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999987003231332	WITHOUT_CLASSIFICATION	1.2996768667490054E-6	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999354646366327	WITHOUT_CLASSIFICATION	6.453536336714783E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999717307000292	WITHOUT_CLASSIFICATION	2.8269299970882403E-5	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.999999980093519	WITHOUT_CLASSIFICATION	1.9906480986661263E-8	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.7177595443349446	WITHOUT_CLASSIFICATION	0.2822404556650554	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999994478634093	WITHOUT_CLASSIFICATION	5.521365906211342E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.999968248206104	WITHOUT_CLASSIFICATION	3.175179389597924E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999998958174884	WITHOUT_CLASSIFICATION	1.0418251162956194E-7	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999699109687138	WITHOUT_CLASSIFICATION	3.0089031286156154E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999699109687138	WITHOUT_CLASSIFICATION	3.0089031286156154E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999699109687138	WITHOUT_CLASSIFICATION	3.0089031286156154E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999699109687138	WITHOUT_CLASSIFICATION	3.0089031286156154E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999699109687138	WITHOUT_CLASSIFICATION	3.0089031286156154E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999922444384443	WITHOUT_CLASSIFICATION	7.75556155564482E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999699109687138	WITHOUT_CLASSIFICATION	3.0089031286156154E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999699109687138	WITHOUT_CLASSIFICATION	3.0089031286156154E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999699109687138	WITHOUT_CLASSIFICATION	3.0089031286156154E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999996348366559	WITHOUT_CLASSIFICATION	3.651633441093393E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9990446671796581	WITHOUT_CLASSIFICATION	9.55332820341938E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.999884313811699	WITHOUT_CLASSIFICATION	1.1568618830102263E-4	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999143293782	WITHOUT_CLASSIFICATION	8.567062184555272E-8	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999998969342314	WITHOUT_CLASSIFICATION	1.030657685000129E-7	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999952302542213	WITHOUT_CLASSIFICATION	4.769745778752305E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999938237589484	WITHOUT_CLASSIFICATION	6.176241051628999E-6	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999991451728689	WITHOUT_CLASSIFICATION	8.548271311639634E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999953736226461	WITHOUT_CLASSIFICATION	4.626377353948945E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999953736226461	WITHOUT_CLASSIFICATION	4.626377353948945E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999981256486858	WITHOUT_CLASSIFICATION	1.8743513142022132E-6	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999975338299775	WITHOUT_CLASSIFICATION	2.466170022455974E-6	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999928685971661	WITHOUT_CLASSIFICATION	7.131402833967281E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.9999986846443278	WITHOUT_CLASSIFICATION	1.3153556721751917E-6	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.999999193102537	WITHOUT_CLASSIFICATION	8.068974629968216E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999981274025467	WITHOUT_CLASSIFICATION	1.872597453290436E-6	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999980401304547	WITHOUT_CLASSIFICATION	1.9598695453113084E-6	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999976170463519	WITHOUT_CLASSIFICATION	2.382953648099051E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999981043062255	WITHOUT_CLASSIFICATION	1.8956937745721422E-6	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999984084201065	WITHOUT_CLASSIFICATION	1.5915798935028997E-6	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999976944100072	WITHOUT_CLASSIFICATION	2.3055899927836657E-6	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999978978425714	WITHOUT_CLASSIFICATION	2.102157428607849E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.999997328432782	WITHOUT_CLASSIFICATION	2.671567218105988E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999969048713291	WITHOUT_CLASSIFICATION	3.09512867094145E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999968835816451	WITHOUT_CLASSIFICATION	3.116418354933505E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999967818368407	WITHOUT_CLASSIFICATION	3.218163159206216E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999967660637276	WITHOUT_CLASSIFICATION	3.2339362724081474E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999940075638941	WITHOUT_CLASSIFICATION	5.992436105855069E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999980019676431	WITHOUT_CLASSIFICATION	1.9980323569217673E-6	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999989187771348	WITHOUT_CLASSIFICATION	1.08122286527935E-6	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.999999023459254	WITHOUT_CLASSIFICATION	9.76540746128529E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999990091092855	WITHOUT_CLASSIFICATION	9.908907144212207E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999927291330082	WITHOUT_CLASSIFICATION	7.270866991745628E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999966542086827	WITHOUT_CLASSIFICATION	3.3457913173721663E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999974336998273	WITHOUT_CLASSIFICATION	2.566300172791816E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999966912920067	WITHOUT_CLASSIFICATION	3.3087079932271876E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999974141698255	WITHOUT_CLASSIFICATION	2.5858301746695743E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.999996256093311	WITHOUT_CLASSIFICATION	3.7439066890140737E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999997527700944	WITHOUT_CLASSIFICATION	2.47229905599949E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999979837456293	WITHOUT_CLASSIFICATION	2.0162543706153893E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999980181489037	WITHOUT_CLASSIFICATION	1.9818510963055617E-6	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999962007503481	WITHOUT_CLASSIFICATION	3.7992496520260773E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999955904952392	WITHOUT_CLASSIFICATION	4.409504760757369E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999953855749368	WITHOUT_CLASSIFICATION	4.614425063156615E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999968182410335	WITHOUT_CLASSIFICATION	3.181758966569933E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999984611448024	WITHOUT_CLASSIFICATION	1.5388551975334988E-6	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999961471602847	WITHOUT_CLASSIFICATION	3.852839715181166E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.999992759328964	WITHOUT_CLASSIFICATION	7.240671035950568E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.999995927384002	WITHOUT_CLASSIFICATION	4.072615997922879E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999967966564256	WITHOUT_CLASSIFICATION	3.20334357440845E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999979146059623	WITHOUT_CLASSIFICATION	2.0853940375935874E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999981878639356	WITHOUT_CLASSIFICATION	1.8121360644310925E-6	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999963985063792	WITHOUT_CLASSIFICATION	3.6014936208077813E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999953519816418	WITHOUT_CLASSIFICATION	4.648018358097754E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.9999939557207459	WITHOUT_CLASSIFICATION	6.044279254105897E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999925797872662	WITHOUT_CLASSIFICATION	7.420212733813698E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.999994869140606	WITHOUT_CLASSIFICATION	5.130859394041324E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999962414778998	WITHOUT_CLASSIFICATION	3.7585221001911027E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999971683981524	WITHOUT_CLASSIFICATION	2.8316018475464855E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.9999958762027199	WITHOUT_CLASSIFICATION	4.123797280156531E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999967519653683	WITHOUT_CLASSIFICATION	3.2480346316930237E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999975019315352	WITHOUT_CLASSIFICATION	2.498068464765795E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999967713998743	WITHOUT_CLASSIFICATION	3.2286001256252313E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999963729335619	WITHOUT_CLASSIFICATION	3.62706643815798E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999963729335619	WITHOUT_CLASSIFICATION	3.62706643815798E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999947538403741	WITHOUT_CLASSIFICATION	5.24615962595518E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999978015035286	WITHOUT_CLASSIFICATION	2.198496471504006E-6	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999956147768451	WITHOUT_CLASSIFICATION	4.38522315496298E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.999997534052747	WITHOUT_CLASSIFICATION	2.4659472529658664E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999865293327568	WITHOUT_CLASSIFICATION	1.3470667243239696E-5	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999964323451355	WITHOUT_CLASSIFICATION	3.5676548645225964E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999957950478993	WITHOUT_CLASSIFICATION	4.204952100732359E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999959461679614	WITHOUT_CLASSIFICATION	4.053832038675355E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.999997805323893	WITHOUT_CLASSIFICATION	2.194676106962448E-6	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999943667222806	WITHOUT_CLASSIFICATION	5.633277719393487E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999724669442805	WITHOUT_CLASSIFICATION	2.7533055719455534E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999724669442805	WITHOUT_CLASSIFICATION	2.7533055719455534E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999999110215297	WITHOUT_CLASSIFICATION	8.89784702300327E-8	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999899694427767	WITHOUT_CLASSIFICATION	1.003055722320135E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9998792662168895	WITHOUT_CLASSIFICATION	1.2073378311044543E-4	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.9999999999195636	WITHOUT_CLASSIFICATION	8.04364095513934E-11	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999915651983974	WITHOUT_CLASSIFICATION	8.434801602687842E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999915651983974	WITHOUT_CLASSIFICATION	8.434801602687842E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999915651983974	WITHOUT_CLASSIFICATION	8.434801602687842E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999915651983974	WITHOUT_CLASSIFICATION	8.434801602687842E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999995854965655	WITHOUT_CLASSIFICATION	4.145034345431482E-7	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999978676304109	WITHOUT_CLASSIFICATION	2.132369589121027E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999970204048576	WITHOUT_CLASSIFICATION	2.979595142428702E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.99999810776295	WITHOUT_CLASSIFICATION	1.892237050000987E-6	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.9999944593038328	WITHOUT_CLASSIFICATION	5.540696167169724E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999966920723153	WITHOUT_CLASSIFICATION	3.307927684608367E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.9999934029866121	WITHOUT_CLASSIFICATION	6.597013387831649E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999989762184736	WITHOUT_CLASSIFICATION	1.0237815264358973E-6	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.999998951797972	WITHOUT_CLASSIFICATION	1.0482020280184362E-6	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999965126849603	WITHOUT_CLASSIFICATION	3.4873150397277623E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.999997791281887	WITHOUT_CLASSIFICATION	2.20871811297067E-6	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999986316411539	WITHOUT_CLASSIFICATION	1.3683588461555177E-6	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999961735737156	WITHOUT_CLASSIFICATION	3.826426284480072E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999980024878727	WITHOUT_CLASSIFICATION	1.99751212730335E-6	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.999997597094851	WITHOUT_CLASSIFICATION	2.402905149083753E-6	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.999998975976743	WITHOUT_CLASSIFICATION	1.0240232569597924E-6	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999980396111748	WITHOUT_CLASSIFICATION	1.9603888251294117E-6	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999951227244736	WITHOUT_CLASSIFICATION	4.8772755263729345E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999978820168357	WITHOUT_CLASSIFICATION	2.1179831643139814E-6	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.9999972334890317	WITHOUT_CLASSIFICATION	2.7665109683052754E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999986989960238	WITHOUT_CLASSIFICATION	1.3010039762294976E-6	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999984020132278	WITHOUT_CLASSIFICATION	1.597986772175517E-6	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999980930359599	WITHOUT_CLASSIFICATION	1.9069640401808495E-6	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999971240468621	WITHOUT_CLASSIFICATION	2.875953137750861E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999987798783235	WITHOUT_CLASSIFICATION	1.220121676480522E-6	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.999997509742864	WITHOUT_CLASSIFICATION	2.4902571358954487E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999989528087498	WITHOUT_CLASSIFICATION	1.0471912501897586E-6	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999926680853721	WITHOUT_CLASSIFICATION	7.331914627921449E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999970130984599	WITHOUT_CLASSIFICATION	2.98690154013417E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999961697120803	WITHOUT_CLASSIFICATION	3.830287919738803E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999939643211131	WITHOUT_CLASSIFICATION	6.035678886952538E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.999997703651255	WITHOUT_CLASSIFICATION	2.2963487450093953E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.9999926229300137	WITHOUT_CLASSIFICATION	7.3770699862574745E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999968582932336	WITHOUT_CLASSIFICATION	3.141706766441004E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999948555185818	WITHOUT_CLASSIFICATION	5.144481418185053E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999950500787899	WITHOUT_CLASSIFICATION	4.949921210138317E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999955586566105	WITHOUT_CLASSIFICATION	4.441343389460418E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999953888594664	WITHOUT_CLASSIFICATION	4.611140533620686E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999976762252387	WITHOUT_CLASSIFICATION	2.323774761260845E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.999995656047538	WITHOUT_CLASSIFICATION	4.343952461998479E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.999997742833246	WITHOUT_CLASSIFICATION	2.257166753912557E-6	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999952509578816	WITHOUT_CLASSIFICATION	4.749042118490301E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999954361261392	WITHOUT_CLASSIFICATION	4.563873860760568E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999959592700626	WITHOUT_CLASSIFICATION	4.040729937434001E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.999993520068235	WITHOUT_CLASSIFICATION	6.4799317649787635E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999902984975787	WITHOUT_CLASSIFICATION	9.701502421264014E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.9999952149988808	WITHOUT_CLASSIFICATION	4.78500111921968E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999944009664102	WITHOUT_CLASSIFICATION	5.599033589783894E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999952290790678	WITHOUT_CLASSIFICATION	4.770920932291344E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999970069886477	WITHOUT_CLASSIFICATION	2.993011352254606E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999956824145989	WITHOUT_CLASSIFICATION	4.317585401192016E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999957979793761	WITHOUT_CLASSIFICATION	4.20202062380187E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999954795264979	WITHOUT_CLASSIFICATION	4.520473502119548E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.9999933956726206	WITHOUT_CLASSIFICATION	6.604327379529953E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999906445629748	WITHOUT_CLASSIFICATION	9.355437025232837E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999955623190628	WITHOUT_CLASSIFICATION	4.437680937177549E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999970142371074	WITHOUT_CLASSIFICATION	2.985762892615699E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999971619055846	WITHOUT_CLASSIFICATION	2.8380944153219176E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999980788873484	WITHOUT_CLASSIFICATION	1.921112651561494E-6	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999486610947	WITHOUT_CLASSIFICATION	5.1338905297955334E-8	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999987350985438	WITHOUT_CLASSIFICATION	1.2649014563018863E-6	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999177399578	WITHOUT_CLASSIFICATION	8.226004217313085E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999177399578	WITHOUT_CLASSIFICATION	8.226004217313085E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999177399578	WITHOUT_CLASSIFICATION	8.226004217313085E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999177399578	WITHOUT_CLASSIFICATION	8.226004217313085E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999177399578	WITHOUT_CLASSIFICATION	8.226004217313085E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999177399578	WITHOUT_CLASSIFICATION	8.226004217313085E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999177399578	WITHOUT_CLASSIFICATION	8.226004217313085E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999949197798659	WITHOUT_CLASSIFICATION	5.080220134094032E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999949197798659	WITHOUT_CLASSIFICATION	5.080220134094032E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999949197798659	WITHOUT_CLASSIFICATION	5.080220134094032E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.999949197798659	WITHOUT_CLASSIFICATION	5.080220134094032E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999960525229435	WITHOUT_CLASSIFICATION	3.9474770564995145E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999960525229435	WITHOUT_CLASSIFICATION	3.9474770564995145E-6	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999631115457	WITHOUT_CLASSIFICATION	3.6888454193604996E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999946886834	WITHOUT_CLASSIFICATION	5.3113165777236E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.9999999946886834	WITHOUT_CLASSIFICATION	5.3113165777236E-9	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999880069589	WITHOUT_CLASSIFICATION	1.1993041061154358E-8	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999795713880965	WITHOUT_CLASSIFICATION	2.042861190355425E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999985018159	WITHOUT_CLASSIFICATION	1.498184094409158E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999985018159	WITHOUT_CLASSIFICATION	1.498184094409158E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999985018159	WITHOUT_CLASSIFICATION	1.498184094409158E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999985018159	WITHOUT_CLASSIFICATION	1.498184094409158E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999985018159	WITHOUT_CLASSIFICATION	1.498184094409158E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999985018159	WITHOUT_CLASSIFICATION	1.498184094409158E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.999999985018159	WITHOUT_CLASSIFICATION	1.498184094409158E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999907950592	WITHOUT_CLASSIFICATION	9.204940796453423E-9	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999998235886128	WITHOUT_CLASSIFICATION	1.764113870765668E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.998902578879915	WITHOUT_CLASSIFICATION	0.0010974211200850308	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.998902578879915	WITHOUT_CLASSIFICATION	0.0010974211200850308	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.999999926728832	WITHOUT_CLASSIFICATION	7.327116804014801E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999980322961144	WITHOUT_CLASSIFICATION	1.967703885579253E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999980322961144	WITHOUT_CLASSIFICATION	1.967703885579253E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.9998247138763224	WITHOUT_CLASSIFICATION	1.7528612367755247E-4	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.9926404699500787	WITHOUT_CLASSIFICATION	0.007359530049921234	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999890953638838	WITHOUT_CLASSIFICATION	1.0904636116221468E-5	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9998680346909236	WITHOUT_CLASSIFICATION	1.3196530907644234E-4	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.9999999799049533	WITHOUT_CLASSIFICATION	2.0095046663553154E-8	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999994953726614	WITHOUT_CLASSIFICATION	5.04627338554999E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999002011198828	WITHOUT_CLASSIFICATION	9.979888011718659E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999998397436708	WITHOUT_CLASSIFICATION	1.6025632921091221E-7	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999964245242429	WITHOUT_CLASSIFICATION	3.575475757248564E-6	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999995289856825	WITHOUT_CLASSIFICATION	4.7101431760290923E-7	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999273341542	WITHOUT_CLASSIFICATION	7.266584571597655E-8	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999960663678867	WITHOUT_CLASSIFICATION	3.9336321133454825E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999990868802	WITHOUT_CLASSIFICATION	9.131197431989725E-10	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.9999291898052858	WITHOUT_CLASSIFICATION	7.081019471419031E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9997272158104977	WITHOUT_CLASSIFICATION	2.727841895023526E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998041014631778	WITHOUT_CLASSIFICATION	1.958985368221947E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999986072787	WITHOUT_CLASSIFICATION	1.3927213048382453E-9	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.999355245556784	WITHOUT_CLASSIFICATION	6.447544432159158E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999454476402693	WITHOUT_CLASSIFICATION	5.455235973085937E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999454476402693	WITHOUT_CLASSIFICATION	5.455235973085937E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999997918059159	WITHOUT_CLASSIFICATION	2.0819408407741111E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999997008170128	WITHOUT_CLASSIFICATION	2.991829871484182E-7	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999917039107797	WITHOUT_CLASSIFICATION	8.296089220255117E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999868775132741	WITHOUT_CLASSIFICATION	1.3122486725905843E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999465626777551	WITHOUT_CLASSIFICATION	5.3437322245042035E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999465626777551	WITHOUT_CLASSIFICATION	5.3437322245042035E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999465626777551	WITHOUT_CLASSIFICATION	5.3437322245042035E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999850187609699	WITHOUT_CLASSIFICATION	1.4981239030157752E-5	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9997224925591404	WITHOUT_CLASSIFICATION	2.775074408596235E-4	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.9993770406784283	WITHOUT_CLASSIFICATION	6.229593215717433E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999658967878149	WITHOUT_CLASSIFICATION	3.410321218506967E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999998843280248	WITHOUT_CLASSIFICATION	1.1567197523750664E-7	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999981141462608	WITHOUT_CLASSIFICATION	1.8858537391825812E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999990215953118	WITHOUT_CLASSIFICATION	9.784046881113945E-7	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999951724146	WITHOUT_CLASSIFICATION	4.82758539313184E-9	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9988526196164031	WITHOUT_CLASSIFICATION	0.0011473803835968786	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999840244197628	WITHOUT_CLASSIFICATION	1.5975580237230515E-5	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999912148396514	WITHOUT_CLASSIFICATION	8.785160348671635E-6	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999875139295796	WITHOUT_CLASSIFICATION	1.2486070420409081E-5	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.88035100673524	IMPLEMENTATION	0.11964899326475989	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999313792588993	WITHOUT_CLASSIFICATION	6.862074110059713E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.9999999997603413	WITHOUT_CLASSIFICATION	2.3965873138998143E-10	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.9999999959675224	WITHOUT_CLASSIFICATION	4.032477606624807E-9	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.9999889331257371	WITHOUT_CLASSIFICATION	1.1066874262877366E-5	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999998034549289	WITHOUT_CLASSIFICATION	1.9654507114519996E-7	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.9999957207302703	WITHOUT_CLASSIFICATION	4.279269729638308E-6	IMPLEMENTATION
