// TODO: warn "tried to create Proc object without a block"	IMPLEMENTATION	0.7053237763864695	WITHOUT_CLASSIFICATION	0.2946762236135307	IMPLEMENTATION
// TODO: CLONE_SETUP here	IMPLEMENTATION	0.8255497191458814	IMPLEMENTATION	0.17445028085411857	WITHOUT_CLASSIFICATION
// TODO: Someday, enable.	IMPLEMENTATION	0.5088661925796352	IMPLEMENTATION	0.49113380742036494	WITHOUT_CLASSIFICATION
// Bunch of methods still not implemented	IMPLEMENTATION	0.5440167890790883	IMPLEMENTATION	0.4559832109209116	WITHOUT_CLASSIFICATION
// TODO: non-strict option	IMPLEMENTATION	0.9181689864201579	WITHOUT_CLASSIFICATION	0.08183101357984221	IMPLEMENTATION
// TODO: opt for 2 and 3 ?	IMPLEMENTATION	0.5911436347183265	WITHOUT_CLASSIFICATION	0.40885636528167346	IMPLEMENTATION
// FIXME: Should we make this work with platform's locale, // or continue hardcoding US?	IMPLEMENTATION	0.9993147633689228	WITHOUT_CLASSIFICATION	6.852366310771955E-4	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9248776964673052	WITHOUT_CLASSIFICATION	0.07512230353269475	IMPLEMENTATION
// TODO: rescan code range ?	IMPLEMENTATION	0.9248776964673052	WITHOUT_CLASSIFICATION	0.07512230353269475	IMPLEMENTATION
// TODO: pass this in?	IMPLEMENTATION	0.6619421723943735	WITHOUT_CLASSIFICATION	0.33805782760562664	IMPLEMENTATION
// FIXME: Pass block down?	IMPLEMENTATION	0.9999856242012826	WITHOUT_CLASSIFICATION	1.4375798717350855E-5	IMPLEMENTATION
// TODO: do something here?	IMPLEMENTATION	0.9596861144891038	IMPLEMENTATION	0.040313885510896194	WITHOUT_CLASSIFICATION
// TODO: port exact behavior from MRI, and move most locking logic into ChannelDescriptor // TODO: for all LOCK_NB cases, return false if they would block	IMPLEMENTATION	0.6848290167399239	IMPLEMENTATION	0.3151709832600762	WITHOUT_CLASSIFICATION
// TODO: check if too many open files, GC and try again	IMPLEMENTATION	0.9937271032210393	WITHOUT_CLASSIFICATION	0.006272896778960738	IMPLEMENTATION
//TODO deal with UNC names	IMPLEMENTATION	0.9545555900572434	WITHOUT_CLASSIFICATION	0.045444409942756545	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9786908093317954	WITHOUT_CLASSIFICATION	0.021309190668204626	IMPLEMENTATION
//FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9850997068378775	WITHOUT_CLASSIFICATION	0.01490029316212239	IMPLEMENTATION
// TODO: SafeStringValue here	IMPLEMENTATION	0.651977344777842	IMPLEMENTATION	0.34802265522215803	WITHOUT_CLASSIFICATION
// TODO: turn off readable? am I reading this right? // This only seems to be used while duping below, since modes gets // reset to actual modes afterward //fptr->mode &= (m & FMODE_READABLE) ? ~FMODE_READABLE : ~FMODE_WRITABLE;	IMPLEMENTATION	0.9247342465322806	WITHOUT_CLASSIFICATION	0.07526575346771938	IMPLEMENTATION
// TODO: check safe, taint on incoming string	IMPLEMENTATION	0.9670766134194377	WITHOUT_CLASSIFICATION	0.03292338658056218	IMPLEMENTATION
// TODO: pipe handler to be reopened with path and "w" mode	IMPLEMENTATION	0.6043903205777196	IMPLEMENTATION	0.3956096794222806	WITHOUT_CLASSIFICATION
// FIXME: add text mode to mode flags	IMPLEMENTATION	0.9981117994367837	WITHOUT_CLASSIFICATION	0.001888200563216231	IMPLEMENTATION
// TODO: Something about pipe buffer length here	IMPLEMENTATION	0.5695508125078479	WITHOUT_CLASSIFICATION	0.43044918749215205	IMPLEMENTATION
// TODO: handle errors in buffered write by retrying until finished or file is closed	IMPLEMENTATION	0.9839117113706932	WITHOUT_CLASSIFICATION	0.016088288629306755	IMPLEMENTATION
// TODO: notify threads waiting on descriptors/IO? probably not...	IMPLEMENTATION	0.9799936110537303	IMPLEMENTATION	0.020006388946269715	WITHOUT_CLASSIFICATION
// TODO: Ruby re-checks that the buffer string hasn't been modified	IMPLEMENTATION	0.5710821971502369	WITHOUT_CLASSIFICATION	0.4289178028497631	IMPLEMENTATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.5386210707992326	WITHOUT_CLASSIFICATION	0.4613789292007675	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9372222129075373	IMPLEMENTATION	0.06277778709246268	WITHOUT_CLASSIFICATION
// TODO: Ruby unlocks the string here	IMPLEMENTATION	0.5386210707992326	WITHOUT_CLASSIFICATION	0.4613789292007675	IMPLEMENTATION
// TODO: Ruby truncates string to specific size here, but our bytelist should handle this already?	IMPLEMENTATION	0.9372222129075373	IMPLEMENTATION	0.06277778709246268	WITHOUT_CLASSIFICATION
// TODO: ruby locks the string here	IMPLEMENTATION	0.8692874778018329	WITHOUT_CLASSIFICATION	0.13071252219816698	IMPLEMENTATION
// TODO same zero-length checks as file above	IMPLEMENTATION	0.983897513269254	WITHOUT_CLASSIFICATION	0.016102486730745998	IMPLEMENTATION
// TODO: MRI also can hadle Bignum here	IMPLEMENTATION	0.9979498467368227	IMPLEMENTATION	0.0020501532631771856	WITHOUT_CLASSIFICATION
// TODO: make threadsafe	IMPLEMENTATION	0.9448003595204343	IMPLEMENTATION	0.05519964047956565	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9971675891683499	WITHOUT_CLASSIFICATION	0.0028324108316500826	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9971675891683499	WITHOUT_CLASSIFICATION	0.0028324108316500826	IMPLEMENTATION
// FIXME: create AttrReaderMethod, AttrWriterMethod, for faster attr access	IMPLEMENTATION	0.9970553169118964	WITHOUT_CLASSIFICATION	0.0029446830881034686	IMPLEMENTATION
// Do not clone cached methods // FIXME: MRI copies all methods here	IMPLEMENTATION	0.989522509743231	WITHOUT_CLASSIFICATION	0.010477490256769131	IMPLEMENTATION
// TODO: don't calculate the same value 3 times	IMPLEMENTATION	0.948020084734438	WITHOUT_CLASSIFICATION	0.05197991526556202	IMPLEMENTATION
// TODO: 3 times calculate the same value below	IMPLEMENTATION	0.9918966961181694	WITHOUT_CLASSIFICATION	0.008103303881830663	IMPLEMENTATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9877829334002256	IMPLEMENTATION	0.012217066599774368	WITHOUT_CLASSIFICATION
// TODO: Store BEGIN and END information into this node	IMPLEMENTATION	0.7036684009598169	IMPLEMENTATION	0.29633159904018314	WITHOUT_CLASSIFICATION
// TODO: put these nil guards into tree (bigger than I want to do right now)	IMPLEMENTATION	0.9979646929469767	IMPLEMENTATION	0.0020353070530234056	WITHOUT_CLASSIFICATION
// FIXME: Make bodyNode non-null in parser	IMPLEMENTATION	0.9998976590740026	WITHOUT_CLASSIFICATION	1.0234092599734284E-4	IMPLEMENTATION
// TODO: call config with scope but no frame	IMPLEMENTATION	0.9362458079513389	WITHOUT_CLASSIFICATION	0.06375419204866112	IMPLEMENTATION
// TODO: add trace call?	IMPLEMENTATION	0.8175550903804416	IMPLEMENTATION	0.18244490961955842	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999749502458694	WITHOUT_CLASSIFICATION	2.5049754130636434E-5	IMPLEMENTATION
// FIXME: optimize for cases where we have no false branch	IMPLEMENTATION	0.9999146094195088	WITHOUT_CLASSIFICATION	8.539058049124701E-5	IMPLEMENTATION
// FIXME: after jump is not in here.  Will if ever be? //Label afterJmp = new Label();	IMPLEMENTATION	0.9992332945102923	WITHOUT_CLASSIFICATION	7.667054897077032E-4	IMPLEMENTATION
// TODO: build arg list based on number of args, optionals, etc	IMPLEMENTATION	0.5829900297718806	IMPLEMENTATION	0.4170099702281193	WITHOUT_CLASSIFICATION
// FIXME: missing arity check	IMPLEMENTATION	0.9999749502458694	WITHOUT_CLASSIFICATION	2.5049754130636434E-5	IMPLEMENTATION
// SSS FIXME: Traverse up the scope hierarchy to find the constant as long as the parent is a static scope	IMPLEMENTATION	0.9998923023852356	WITHOUT_CLASSIFICATION	1.0769761476444566E-4	IMPLEMENTATION
// SSS FIXME: Should I be returning the operand constructed here?	IMPLEMENTATION	0.9987372450244082	WITHOUT_CLASSIFICATION	0.0012627549755918367	IMPLEMENTATION
// TODO: Add IR instructions for checking method arity! // s.getVariableCompiler().checkMethodArity(required, opt, rest);	IMPLEMENTATION	0.7978910250335459	IMPLEMENTATION	0.202108974966454	WITHOUT_CLASSIFICATION
// FIXME: Ruby 1.9 post args code needs to come here	IMPLEMENTATION	0.9606743458709304	WITHOUT_CLASSIFICATION	0.03932565412906956	IMPLEMENTATION
// SSS: FIXME: Somewhere here, we need to record information the type of this operand as String	IMPLEMENTATION	0.9999953591052988	WITHOUT_CLASSIFICATION	4.640894701146512E-6	IMPLEMENTATION
// FIXME: Translate this call below! // s.unwrapPassedBlock();	IMPLEMENTATION	0.9999471402997648	WITHOUT_CLASSIFICATION	5.2859700235197974E-5	IMPLEMENTATION
// SSS FIXME: We need to build debug information tracking into the IR in some fashion // So, these methods below would have to have equivalents in IR_Scope implementations.	IMPLEMENTATION	0.9690874537903769	WITHOUT_CLASSIFICATION	0.030912546209623096	IMPLEMENTATION
// SSS FIXME: Incomplete!	IMPLEMENTATION	0.9986858571669815	WITHOUT_CLASSIFICATION	0.0013141428330184141	IMPLEMENTATION
// SSS FIXME: Pick one of bytelist or string, or add internal conversion methods to convert to the default representation	IMPLEMENTATION	0.9998795725264229	WITHOUT_CLASSIFICATION	1.2042747357707064E-4	IMPLEMENTATION
// SSS FIXME: To be done	IMPLEMENTATION	0.9998254722876206	WITHOUT_CLASSIFICATION	1.7452771237934372E-4	IMPLEMENTATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7986314650667292	IMPLEMENTATION	0.20136853493327078	WITHOUT_CLASSIFICATION
//TODO: implement, won't do this now	IMPLEMENTATION	0.7986314650667292	IMPLEMENTATION	0.20136853493327078	WITHOUT_CLASSIFICATION
// TODO: validate port as numeric	IMPLEMENTATION	0.989534873973189	WITHOUT_CLASSIFICATION	0.010465126026811131	IMPLEMENTATION
// TODO: this code should really check if a Ruby equals method is implemented or not.	IMPLEMENTATION	0.9999726229205569	IMPLEMENTATION	2.737707944306393E-5	WITHOUT_CLASSIFICATION
// if not already defined, we add a 'new' that guesses at which signature to use // TODO: just adding first one right now...add in signature-guessing logic	IMPLEMENTATION	0.7231990886497829	WITHOUT_CLASSIFICATION	0.27680091135021717	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.6216632369291969	WITHOUT_CLASSIFICATION	0.378336763070803	IMPLEMENTATION
// TODO: deal with varargs	IMPLEMENTATION	0.6216632369291969	WITHOUT_CLASSIFICATION	0.378336763070803	IMPLEMENTATION
// TODO: other reserved names?	IMPLEMENTATION	0.9969656874924328	IMPLEMENTATION	0.0030343125075672126	WITHOUT_CLASSIFICATION
// TODO: we can probably release our references to the constantFields // array and static/instance callback hashes at this point. 	IMPLEMENTATION	0.9614111023576968	IMPLEMENTATION	0.038588897642303305	WITHOUT_CLASSIFICATION
// TODO: Formalize conversion mechanisms between Java and Ruby	IMPLEMENTATION	0.9539185935179898	IMPLEMENTATION	0.04608140648201022	WITHOUT_CLASSIFICATION
// XXX: Check if it's appropriate type?	IMPLEMENTATION	0.9982434569120557	WITHOUT_CLASSIFICATION	0.001756543087944247	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.6263000280288454	WITHOUT_CLASSIFICATION	0.37369997197115457	IMPLEMENTATION
// TODO: call ruby method	IMPLEMENTATION	0.6263000280288454	WITHOUT_CLASSIFICATION	0.37369997197115457	IMPLEMENTATION
// TODO: Add safety check for taintedness	IMPLEMENTATION	0.9838680807672298	IMPLEMENTATION	0.016131919232770308	WITHOUT_CLASSIFICATION
// FIXME: Need to detect magic_comment in 1.9 here for encoding	IMPLEMENTATION	0.9987916794835201	WITHOUT_CLASSIFICATION	0.0012083205164798848	IMPLEMENTATION
/* xxx shouldn't check if valid option variable */	IMPLEMENTATION	0.999999225822066	WITHOUT_CLASSIFICATION	7.741779339895047E-7	IMPLEMENTATION
// TODO: this isn't handling multibyte yet	IMPLEMENTATION	0.7562416245010641	IMPLEMENTATION	0.24375837549893578	WITHOUT_CLASSIFICATION
// TODO: This should be something else like a tCHAR	IMPLEMENTATION	0.9123676694127505	IMPLEMENTATION	0.08763233058724947	WITHOUT_CLASSIFICATION
// FIXME: \r logic needed	IMPLEMENTATION	0.9224404774872275	IMPLEMENTATION	0.07755952251277257	WITHOUT_CLASSIFICATION
// TODO: note lack of command.com support for Win 9x...	IMPLEMENTATION	0.7846471752967233	WITHOUT_CLASSIFICATION	0.2153528247032767	IMPLEMENTATION
// FIXME: Make thread pool threads daemons if necessary	IMPLEMENTATION	0.9218240852154951	WITHOUT_CLASSIFICATION	0.07817591478450488	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9967097185988963	WITHOUT_CLASSIFICATION	0.0032902814011036533	IMPLEMENTATION
/* FIXME: We may be intern'ing more than once.*/	IMPLEMENTATION	0.9967097185988963	WITHOUT_CLASSIFICATION	0.0032902814011036533	IMPLEMENTATION
/* FIXME: arg_concat missing for opt_call_args*/	IMPLEMENTATION	0.9999360937948542	WITHOUT_CLASSIFICATION	6.390620514592386E-5	IMPLEMENTATION
/* FIXME: arg_concat logic missing for opt_call_args*/	IMPLEMENTATION	0.9998348207524785	WITHOUT_CLASSIFICATION	1.6517924752157504E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9998509433094367	WITHOUT_CLASSIFICATION	1.4905669056332617E-4	IMPLEMENTATION
// FIXME: This needs to happen for lambdas //            args.checkArgCount(runtime, parameters.length);	IMPLEMENTATION	0.9998509433094367	WITHOUT_CLASSIFICATION	1.4905669056332617E-4	IMPLEMENTATION
// TODO: make it cross runtime safe by COW or eager copy	IMPLEMENTATION	0.9086620420854655	WITHOUT_CLASSIFICATION	0.09133795791453446	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9985956144517534	WITHOUT_CLASSIFICATION	0.0014043855482465983	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9985956144517534	WITHOUT_CLASSIFICATION	0.0014043855482465983	IMPLEMENTATION
// FIXME: don't use RubyIO for this	IMPLEMENTATION	0.9985956144517534	WITHOUT_CLASSIFICATION	0.0014043855482465983	IMPLEMENTATION
// TODO: check the return value here	IMPLEMENTATION	0.8303177415405734	IMPLEMENTATION	0.16968225845942664	WITHOUT_CLASSIFICATION
// TODO: check the return value here	IMPLEMENTATION	0.8303177415405734	IMPLEMENTATION	0.16968225845942664	WITHOUT_CLASSIFICATION
// TODO: Make sure all appropriate open flags are added to this check.	IMPLEMENTATION	0.6841987895929048	IMPLEMENTATION	0.3158012104070952	WITHOUT_CLASSIFICATION
//subList.clear(); // Sublist is supposed to share same backing store as list...TODO in RubyArray. //assertTrue(list.size() == 1);	IMPLEMENTATION	0.9999538135433943	WITHOUT_CLASSIFICATION	4.618645660563384E-5	IMPLEMENTATION
// SSS FIXME: Cannot optimize this without assuming that Range.to_ary method has not redefined. // So for now, return null!	IMPLEMENTATION	0.9999923408052763	WITHOUT_CLASSIFICATION	7.659194723575635E-6	IMPLEMENTATION
// TODO Auto-generated method stub	IMPLEMENTATION	0.9999717089184216	IMPLEMENTATION	2.829108157842662E-5	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997315199360508	IMPLEMENTATION	2.6848006394917016E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997315199360508	IMPLEMENTATION	2.6848006394917016E-4	WITHOUT_CLASSIFICATION
// TODO Auto-generated catch block	IMPLEMENTATION	0.9997315199360508	IMPLEMENTATION	2.6848006394917016E-4	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9877829334002256	IMPLEMENTATION	0.012217066599774368	WITHOUT_CLASSIFICATION
// TODO: no need to calculate every time.	IMPLEMENTATION	0.9877829334002256	IMPLEMENTATION	0.012217066599774368	WITHOUT_CLASSIFICATION
// TODO: check for ascii string	IMPLEMENTATION	0.8132569161129051	WITHOUT_CLASSIFICATION	0.1867430838870949	IMPLEMENTATION
// filter out any Java primitive names // TODO: should check against all Java reserved names here, not just primitives	IMPLEMENTATION	0.9057179473070651	IMPLEMENTATION	0.09428205269293496	WITHOUT_CLASSIFICATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9971675891683499	WITHOUT_CLASSIFICATION	0.0028324108316500826	IMPLEMENTATION
// TODO: must override in RubyModule to pick up constants	IMPLEMENTATION	0.9971675891683499	WITHOUT_CLASSIFICATION	0.0028324108316500826	IMPLEMENTATION
// TODO: missing additional logic for dealing with conflicting protected fields.	IMPLEMENTATION	0.9793811224714863	IMPLEMENTATION	0.020618877528513716	WITHOUT_CLASSIFICATION
// TODO: better detection when path is absolute or not. // If the path isn't absolute, then prepend the current working // directory to the path.	IMPLEMENTATION	0.7562743587968024	WITHOUT_CLASSIFICATION	0.24372564120319756	IMPLEMENTATION
// FIXME: When we get JNA3 we need to properly write this to errno.	IMPLEMENTATION	0.9786908093317954	WITHOUT_CLASSIFICATION	0.021309190668204626	IMPLEMENTATION
// FIX replace type() == ... with isInstanceOf(...)	IMPLEMENTATION	0.999602983960483	WITHOUT_CLASSIFICATION	3.9701603951696596E-4	IMPLEMENTATION
/* TODO: MRI is just a when node.  We need this extra logic for IDE consumers (null in casenode statement should be implicit nil)*/	IMPLEMENTATION	0.9986225518041015	IMPLEMENTATION	0.0013774481958984555	WITHOUT_CLASSIFICATION
// TODO: This and recacheRespondsTo needed to be synchronized for JRUBY-3466, // but this degraded performance nearly 2x. It's still faster than MRI, but // a reanalysis of this code may show a faster way to ensure we're caching // safely.	IMPLEMENTATION	0.9918045730598094	IMPLEMENTATION	0.008195426940190608	WITHOUT_CLASSIFICATION
// TODO: adjust length so it won't fall in the middle  // of a multi-byte character. MRI's sprintf.c uses tables // in a modified version of regex.c, which assume some // particular  encoding for a given installation/application. // (See regex.c#re_mbcinit in ruby-1.8.5-p12)  // // This is only an issue if the user specifies a precision // that causes the string to be truncated. The same issue // would arise taking a substring of a ByteList-backed RubyString.	IMPLEMENTATION	0.5670853475217547	WITHOUT_CLASSIFICATION	0.4329146524782453	IMPLEMENTATION
// set constants now that they're initialized	WITHOUT_CLASSIFICATION	0.9999909321399766	WITHOUT_CLASSIFICATION	9.067860023338847E-6	IMPLEMENTATION
// line 335	WITHOUT_CLASSIFICATION	0.9999992954441098	WITHOUT_CLASSIFICATION	7.045558901287854E-7	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999888172560719	WITHOUT_CLASSIFICATION	1.11827439282088E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999888172560719	WITHOUT_CLASSIFICATION	1.11827439282088E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999585260373058	WITHOUT_CLASSIFICATION	4.1473962694108635E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999585260373058	WITHOUT_CLASSIFICATION	4.1473962694108635E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997973958119755	WITHOUT_CLASSIFICATION	2.0260418802456185E-4	IMPLEMENTATION
// Figure end-char.  '\0' is special to indicate begin=end and that no nesting?	WITHOUT_CLASSIFICATION	0.9999602332862247	WITHOUT_CLASSIFICATION	3.97667137752064E-5	IMPLEMENTATION
// line 362	WITHOUT_CLASSIFICATION	0.9999996237089435	WITHOUT_CLASSIFICATION	3.762910564561025E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999996968410774	WITHOUT_CLASSIFICATION	3.031589227107703E-7	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998462324524123	WITHOUT_CLASSIFICATION	1.5376754758763823E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998462324524123	WITHOUT_CLASSIFICATION	1.5376754758763823E-4	IMPLEMENTATION
// line 391	WITHOUT_CLASSIFICATION	0.9999977350709961	WITHOUT_CLASSIFICATION	2.2649290039492368E-6	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999700365879389	WITHOUT_CLASSIFICATION	2.9963412061088853E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999700365879389	WITHOUT_CLASSIFICATION	2.9963412061088853E-4	IMPLEMENTATION
/* ^D */	WITHOUT_CLASSIFICATION	0.9999981807460044	WITHOUT_CLASSIFICATION	1.8192539954597472E-6	IMPLEMENTATION
/* ^Z */	WITHOUT_CLASSIFICATION	0.9999991250418654	WITHOUT_CLASSIFICATION	8.749581346976879E-7	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999721622281771	WITHOUT_CLASSIFICATION	2.7837771822881436E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999721622281771	WITHOUT_CLASSIFICATION	2.7837771822881436E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999721622281771	WITHOUT_CLASSIFICATION	2.7837771822881436E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999721622281771	WITHOUT_CLASSIFICATION	2.7837771822881436E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999721622281771	WITHOUT_CLASSIFICATION	2.7837771822881436E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999721622281771	WITHOUT_CLASSIFICATION	2.7837771822881436E-5	IMPLEMENTATION
//yyLen 496	WITHOUT_CLASSIFICATION	0.9999721622281771	WITHOUT_CLASSIFICATION	2.7837771822881436E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999435834178846	WITHOUT_CLASSIFICATION	5.6416582115551295E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999435834178846	WITHOUT_CLASSIFICATION	5.6416582115551295E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999435834178846	WITHOUT_CLASSIFICATION	5.6416582115551295E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999435834178846	WITHOUT_CLASSIFICATION	5.6416582115551295E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999435834178846	WITHOUT_CLASSIFICATION	5.6416582115551295E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999435834178846	WITHOUT_CLASSIFICATION	5.6416582115551295E-5	IMPLEMENTATION
//yyDefRed 889	WITHOUT_CLASSIFICATION	0.9999435834178846	WITHOUT_CLASSIFICATION	5.6416582115551295E-5	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996133755756963	WITHOUT_CLASSIFICATION	3.8662442430363554E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996133755756963	WITHOUT_CLASSIFICATION	3.8662442430363554E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996133755756963	WITHOUT_CLASSIFICATION	3.8662442430363554E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996133755756963	WITHOUT_CLASSIFICATION	3.8662442430363554E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996133755756963	WITHOUT_CLASSIFICATION	3.8662442430363554E-4	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996133755756963	WITHOUT_CLASSIFICATION	3.8662442430363554E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997908125366942	WITHOUT_CLASSIFICATION	2.0918746330579472E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997908125366942	WITHOUT_CLASSIFICATION	2.0918746330579472E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997908125366942	WITHOUT_CLASSIFICATION	2.0918746330579472E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997908125366942	WITHOUT_CLASSIFICATION	2.0918746330579472E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997908125366942	WITHOUT_CLASSIFICATION	2.0918746330579472E-4	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997908125366942	WITHOUT_CLASSIFICATION	2.0918746330579472E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9995923950986775	WITHOUT_CLASSIFICATION	4.0760490132255435E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9995923950986775	WITHOUT_CLASSIFICATION	4.0760490132255435E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9995923950986775	WITHOUT_CLASSIFICATION	4.0760490132255435E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9995923950986775	WITHOUT_CLASSIFICATION	4.0760490132255435E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9995923950986775	WITHOUT_CLASSIFICATION	4.0760490132255435E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9995923950986775	WITHOUT_CLASSIFICATION	4.0760490132255435E-4	IMPLEMENTATION
//yyRindex 889	WITHOUT_CLASSIFICATION	0.9995923950986775	WITHOUT_CLASSIFICATION	4.0760490132255435E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9995226393162002	WITHOUT_CLASSIFICATION	4.773606837997086E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9995226393162002	WITHOUT_CLASSIFICATION	4.773606837997086E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9995226393162002	WITHOUT_CLASSIFICATION	4.773606837997086E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9995226393162002	WITHOUT_CLASSIFICATION	4.773606837997086E-4	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999952111912065	WITHOUT_CLASSIFICATION	4.788808793548319E-6	IMPLEMENTATION
//Do nothing	WITHOUT_CLASSIFICATION	0.9999952111912065	WITHOUT_CLASSIFICATION	4.788808793548319E-6	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// switch	WITHOUT_CLASSIFICATION	0.9999998551936579	WITHOUT_CLASSIFICATION	1.4480634209215962E-7	IMPLEMENTATION
// return result	WITHOUT_CLASSIFICATION	0.999999267756755	WITHOUT_CLASSIFICATION	7.322432449652346E-7	IMPLEMENTATION
// name	WITHOUT_CLASSIFICATION	0.9999975115038116	WITHOUT_CLASSIFICATION	2.4884961884576266E-6	IMPLEMENTATION
// Define System.getProperties() in ENV_JAVA	WITHOUT_CLASSIFICATION	0.9999999263913015	WITHOUT_CLASSIFICATION	7.360869847200062E-8	IMPLEMENTATION
// Accessor methods.	WITHOUT_CLASSIFICATION	0.9999780449925652	WITHOUT_CLASSIFICATION	2.195500743476365E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999886607162315	WITHOUT_CLASSIFICATION	1.133928376850898E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999886607162315	WITHOUT_CLASSIFICATION	1.133928376850898E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999886607162315	WITHOUT_CLASSIFICATION	1.133928376850898E-5	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999886607162315	WITHOUT_CLASSIFICATION	1.133928376850898E-5	IMPLEMENTATION
// call getpwent to fail early if unsupported	WITHOUT_CLASSIFICATION	0.9999650692112209	WITHOUT_CLASSIFICATION	3.4930788779131434E-5	IMPLEMENTATION
// fall back on env entry for USER	WITHOUT_CLASSIFICATION	0.9999914769835858	WITHOUT_CLASSIFICATION	8.523016414261434E-6	IMPLEMENTATION
// try to read grent to fail fast	WITHOUT_CLASSIFICATION	0.9999978451065733	WITHOUT_CLASSIFICATION	2.1548934267241157E-6	IMPLEMENTATION
// define ARGV and $* for this runtime	WITHOUT_CLASSIFICATION	0.9999997133733483	WITHOUT_CLASSIFICATION	2.866266517114569E-7	IMPLEMENTATION
// Version information:	WITHOUT_CLASSIFICATION	0.9999989833778997	WITHOUT_CLASSIFICATION	1.0166221002325352E-6	IMPLEMENTATION
// after defn of $stderr as the call may produce warnings	WITHOUT_CLASSIFICATION	0.9999999876979125	WITHOUT_CLASSIFICATION	1.2302087482788356E-8	IMPLEMENTATION
// ARGF, $< object	WITHOUT_CLASSIFICATION	0.9999965048870271	WITHOUT_CLASSIFICATION	3.4951129728482347E-6	IMPLEMENTATION
// if the environment variables can't be obtained, define an empty ENV	WITHOUT_CLASSIFICATION	0.9999999975555377	WITHOUT_CLASSIFICATION	2.444462324105024E-9	IMPLEMENTATION
// On platforms without a c-library accessable through JNA, getpid will return hashCode  // as $$ used to. Using $$ to kill processes could take down many runtimes, but by basing // $$ on getpid() where available, we have the same semantics as MRI.	WITHOUT_CLASSIFICATION	0.9999999990292111	WITHOUT_CLASSIFICATION	9.707889070822772E-10	IMPLEMENTATION
//$@ returns nil if $!.backtrace is not an array	WITHOUT_CLASSIFICATION	0.9999995226160852	WITHOUT_CLASSIFICATION	4.773839148329543E-7	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999997371033847	WITHOUT_CLASSIFICATION	2.628966152374924E-7	IMPLEMENTATION
// MRI behavior: just plain '//' or '\\\\' are considered illegal on Windows.	WITHOUT_CLASSIFICATION	0.9999053056410859	WITHOUT_CLASSIFICATION	9.469435891405573E-5	IMPLEMENTATION
// this _is_ legal (when removing an undef)	WITHOUT_CLASSIFICATION	0.999978290969481	WITHOUT_CLASSIFICATION	2.170903051898584E-5	IMPLEMENTATION
// What we passed to the constructor for method 'path'	WITHOUT_CLASSIFICATION	0.9999995821261758	WITHOUT_CLASSIFICATION	4.1787382422329633E-7	IMPLEMENTATION
// ----- Ruby Class Methods ----------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999999744525173	WITHOUT_CLASSIFICATION	2.5547482607561194E-8	IMPLEMENTATION
// // CONSTANT TABLE METHODS - pass to delegate //	WITHOUT_CLASSIFICATION	0.9999999163074874	WITHOUT_CLASSIFICATION	8.369251257829657E-8	IMPLEMENTATION
// We get canonical path to try and flatten the path out. // a dir '/subdir/..' should return as '/' // cnutter: Do we want to flatten path out?	WITHOUT_CLASSIFICATION	0.9996003443537392	WITHOUT_CLASSIFICATION	3.996556462606964E-4	IMPLEMENTATION
// MRI behavior	WITHOUT_CLASSIFICATION	0.9999886607162315	WITHOUT_CLASSIFICATION	1.133928376850898E-5	IMPLEMENTATION
// ----- Ruby Instance Methods -------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999997158698265	WITHOUT_CLASSIFICATION	2.8413017353858684E-7	IMPLEMENTATION
// Make sure any read()s after close fail.	WITHOUT_CLASSIFICATION	0.9999999257736706	WITHOUT_CLASSIFICATION	7.422632942792198E-8	IMPLEMENTATION
// ----- Helper Methods --------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999995719896616	WITHOUT_CLASSIFICATION	4.2801033844701E-7	IMPLEMENTATION
// try to use POSIX for this first	WITHOUT_CLASSIFICATION	0.9999707550585826	WITHOUT_CLASSIFICATION	2.9244941417476872E-5	IMPLEMENTATION
// otherwise fall back on the old way	WITHOUT_CLASSIFICATION	0.9996213728679266	WITHOUT_CLASSIFICATION	3.7862713207331916E-4	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999718476068	WITHOUT_CLASSIFICATION	2.8152393175799338E-8	IMPLEMENTATION
// No passed in block, lets check next outer frame for one ('Proc.new')	WITHOUT_CLASSIFICATION	0.999999986629381	WITHOUT_CLASSIFICATION	1.3370618898102258E-8	IMPLEMENTATION
// modify the block with a new backref/lastline-grabbing scope	WITHOUT_CLASSIFICATION	0.9999999513626074	WITHOUT_CLASSIFICATION	4.8637392597130137E-8	IMPLEMENTATION
// for future compatibility as constructors move toward not accepting metaclass?	WITHOUT_CLASSIFICATION	0.999997586604761	WITHOUT_CLASSIFICATION	2.4133952389431593E-6	IMPLEMENTATION
//        case RUBY_HYBRID: //            backtrace = ThreadContext.createRubyHybridBacktrace(getRuntime(), backtraceFrames, javaStackTrace, getRuntime().getDebug().isTrue()); //            break;	WITHOUT_CLASSIFICATION	0.9999999555068605	WITHOUT_CLASSIFICATION	4.449313952763499E-8	IMPLEMENTATION
// This looks wrong, but it's the way MRI does it.	WITHOUT_CLASSIFICATION	0.999999298711433	WITHOUT_CLASSIFICATION	7.012885670520419E-7	IMPLEMENTATION
// rb_exc_new3	WITHOUT_CLASSIFICATION	0.9999992692288334	WITHOUT_CLASSIFICATION	7.307711666022503E-7	IMPLEMENTATION
// NOTE: The indicies here match exactly the signal values; do not reorder	WITHOUT_CLASSIFICATION	0.999993862069967	WITHOUT_CLASSIFICATION	6.137930033072476E-6	IMPLEMENTATION
//registerThreadDumpSignalHandler(runtime);	WITHOUT_CLASSIFICATION	0.9999719811374813	WITHOUT_CLASSIFICATION	2.801886251861007E-5	IMPLEMENTATION
// IOT is also 6	WITHOUT_CLASSIFICATION	0.999987860014163	WITHOUT_CLASSIFICATION	1.2139985836953555E-5	IMPLEMENTATION
// CLD is also 20	WITHOUT_CLASSIFICATION	0.999999435169302	WITHOUT_CLASSIFICATION	5.648306980625512E-7	IMPLEMENTATION
// RubySignal	WITHOUT_CLASSIFICATION	0.9999998408748513	WITHOUT_CLASSIFICATION	1.5912514865607593E-7	IMPLEMENTATION
// ZStream actually *isn't* allocatable	WITHOUT_CLASSIFICATION	0.9999999456092171	WITHOUT_CLASSIFICATION	5.4390782968203125E-8	IMPLEMENTATION
// MRI behavior, enforced by tests	WITHOUT_CLASSIFICATION	0.9999979805014526	WITHOUT_CLASSIFICATION	2.019498547419418E-6	IMPLEMENTATION
// it's safe since adler.update doesn't modify the array	WITHOUT_CLASSIFICATION	0.9999999912347113	WITHOUT_CLASSIFICATION	8.765288757535478E-9	IMPLEMENTATION
// MRI behavior: in finished mode, we work as pass-through	WITHOUT_CLASSIFICATION	0.9999818059190736	WITHOUT_CLASSIFICATION	1.8194080926357394E-5	IMPLEMENTATION
// SYNC_FLUSH	WITHOUT_CLASSIFICATION	0.9999992144741304	WITHOUT_CLASSIFICATION	7.855258695558099E-7	IMPLEMENTATION
// By default, NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999999254516936	WITHOUT_CLASSIFICATION	7.454830648669102E-8	IMPLEMENTATION
//io.finish();	WITHOUT_CLASSIFICATION	0.999678577509359	WITHOUT_CLASSIFICATION	3.214224906409854E-4	IMPLEMENTATION
// should invoke seek on realIo	WITHOUT_CLASSIFICATION	0.9999985588924191	WITHOUT_CLASSIFICATION	1.441107580923064E-6	IMPLEMENTATION
// hmm...	WITHOUT_CLASSIFICATION	0.99999885088964	WITHOUT_CLASSIFICATION	1.149110359960447E-6	IMPLEMENTATION
// Called before any write to make sure the // header is always written before the first bytes	WITHOUT_CLASSIFICATION	0.9999963986911169	WITHOUT_CLASSIFICATION	3.601308883218493E-6	IMPLEMENTATION
// For JDK 1.4 we can use "cal.getTimeInMillis()"	WITHOUT_CLASSIFICATION	0.9999806344687681	WITHOUT_CLASSIFICATION	1.9365531231882748E-5	IMPLEMENTATION
// We can just use dt, since it is immutable	WITHOUT_CLASSIFICATION	0.9999999947521678	WITHOUT_CLASSIFICATION	5.247832190260126E-9	IMPLEMENTATION
// float number of seconds	WITHOUT_CLASSIFICATION	0.9999999228005846	WITHOUT_CLASSIFICATION	7.719941544567365E-8	IMPLEMENTATION
// modified to match how hash is calculated in 1.8.2	WITHOUT_CLASSIFICATION	0.9999999781213209	WITHOUT_CLASSIFICATION	2.1878679049638957E-8	IMPLEMENTATION
// dump usec, not msec	WITHOUT_CLASSIFICATION	0.999999716040651	WITHOUT_CLASSIFICATION	2.8395934906072493E-7	IMPLEMENTATION
/* Time class methods */	WITHOUT_CLASSIFICATION	0.999999996580569	WITHOUT_CLASSIFICATION	3.4194309537941376E-9	IMPLEMENTATION
// marsaling dumps usec, not msec	WITHOUT_CLASSIFICATION	0.9999999459133068	WITHOUT_CLASSIFICATION	5.4086693300442644E-8	IMPLEMENTATION
// MRI accepts additional wday argument which appears to be ignored.	WITHOUT_CLASSIFICATION	0.9999846017274532	WITHOUT_CLASSIFICATION	1.5398272546742015E-5	IMPLEMENTATION
// set up with min values and then add to allow rolling over	WITHOUT_CLASSIFICATION	0.9999995131492059	WITHOUT_CLASSIFICATION	4.868507941557479E-7	IMPLEMENTATION
// the instant at which we will ask dtz what the difference between DST and // standard time is	WITHOUT_CLASSIFICATION	0.9999984618209881	WITHOUT_CLASSIFICATION	1.5381790118966322E-6	IMPLEMENTATION
// if we might be moving this time from !DST -> DST, the offset is assumed // to be the same as it was just before we last moved from DST -> !DST	WITHOUT_CLASSIFICATION	0.9999999999998813	WITHOUT_CLASSIFICATION	1.1862412632394128E-13	IMPLEMENTATION
// Ignores usec if 8 args (for compatibility with parsedate) or if not supplied.	WITHOUT_CLASSIFICATION	0.9999935310266236	WITHOUT_CLASSIFICATION	6.4689733763744955E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984705855319	WITHOUT_CLASSIFICATION	1.5294144680055757E-6	IMPLEMENTATION
/* If the value will fit in a Fixnum, return one of those. */	WITHOUT_CLASSIFICATION	0.9999997687458523	WITHOUT_CLASSIFICATION	2.3125414774745008E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998205315671	WITHOUT_CLASSIFICATION	1.794684329264983E-7	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999995000911651	WITHOUT_CLASSIFICATION	4.999088347824213E-7	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.8759930704383163	WITHOUT_CLASSIFICATION	0.1240069295616837	IMPLEMENTATION
// num2int is also implemented	WITHOUT_CLASSIFICATION	0.8759930704383163	WITHOUT_CLASSIFICATION	0.1240069295616837	IMPLEMENTATION
// no bignorm here needed	WITHOUT_CLASSIFICATION	0.5881058138457519	IMPLEMENTATION	0.4118941861542482	WITHOUT_CLASSIFICATION
// wow, the only time we can use the java protocol ;)	WITHOUT_CLASSIFICATION	0.9999847486452744	WITHOUT_CLASSIFICATION	1.5251354725520696E-5	IMPLEMENTATION
// Pad with a 0	WITHOUT_CLASSIFICATION	0.9999855270665562	WITHOUT_CLASSIFICATION	1.4472933443846159E-5	IMPLEMENTATION
// BigInteger required a sign byte in incoming array	WITHOUT_CLASSIFICATION	0.9999999276554684	WITHOUT_CLASSIFICATION	7.234453159729391E-8	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999894144836281	WITHOUT_CLASSIFICATION	1.058551637189654E-4	IMPLEMENTATION
// We do this b/c make_tmpname might be overridden	WITHOUT_CLASSIFICATION	0.9999997231398554	WITHOUT_CLASSIFICATION	2.768601446082592E-7	IMPLEMENTATION
// ???	WITHOUT_CLASSIFICATION	0.999999503039976	WITHOUT_CLASSIFICATION	4.96960023994164E-7	IMPLEMENTATION
// PID	WITHOUT_CLASSIFICATION	0.9999948864792304	WITHOUT_CLASSIFICATION	5.113520769630174E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998205315671	WITHOUT_CLASSIFICATION	1.794684329264983E-7	IMPLEMENTATION
// elements and trailing nils	WITHOUT_CLASSIFICATION	0.9999999985735679	WITHOUT_CLASSIFICATION	1.4264320887221075E-9	IMPLEMENTATION
// Dir::tmpdir	WITHOUT_CLASSIFICATION	0.9999856114277521	WITHOUT_CLASSIFICATION	1.4388572248000808E-5	IMPLEMENTATION
// volatile to ensure that initial nil-fill is visible to other threads	WITHOUT_CLASSIFICATION	0.9942500473316119	WITHOUT_CLASSIFICATION	0.0057499526683880845	IMPLEMENTATION
/* Ruby arrays default to holding 16 elements, so we create an         * ArrayList of the same size if we're not told otherwise         */	WITHOUT_CLASSIFICATION	0.9999998966373667	WITHOUT_CLASSIFICATION	1.0336263333995624E-7	IMPLEMENTATION
/* rb_ary_new2     * just allocates the internal array     */	WITHOUT_CLASSIFICATION	0.9999995751171705	WITHOUT_CLASSIFICATION	4.2488282944174983E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998946856106	WITHOUT_CLASSIFICATION	1.0531438951535382E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998946856106	WITHOUT_CLASSIFICATION	1.0531438951535382E-7	IMPLEMENTATION
/*      * plain internal array assignment     */	WITHOUT_CLASSIFICATION	0.9999998946856106	WITHOUT_CLASSIFICATION	1.0531438951535382E-7	IMPLEMENTATION
/* Array constructors taking the MetaClass to fulfil MRI Array subclass behaviour     *      */	WITHOUT_CLASSIFICATION	0.9999999092985424	WITHOUT_CLASSIFICATION	9.070145754776464E-8	IMPLEMENTATION
/* NEWOBJ and OBJSETUP equivalent     * fastest one, for shared arrays, optional objectspace     */	WITHOUT_CLASSIFICATION	0.9999997860269803	WITHOUT_CLASSIFICATION	2.1397301979521636E-7	IMPLEMENTATION
// Create global constants and variables	WITHOUT_CLASSIFICATION	0.9999999979070059	WITHOUT_CLASSIFICATION	2.0929940205242823E-9	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// Windows does not support these functions, so we won't even try // This also matches Ruby behavior for JRUBY-2353.	WITHOUT_CLASSIFICATION	0.9998218041902679	WITHOUT_CLASSIFICATION	1.7819580973206305E-4	IMPLEMENTATION
// There are two different popular TZ formats: legacy (AST+3:00:00, GMT-3), and // newer one (US/Pacific, America/Los_Angeles). This pattern is to detect // the legacy TZ format in order to convert it to the newer format // understood by Java API.	WITHOUT_CLASSIFICATION	0.9999919940597101	WITHOUT_CLASSIFICATION	8.005940289865752E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// 1.9 seems to just do inspect for to_s now	WITHOUT_CLASSIFICATION	0.9999999272948913	WITHOUT_CLASSIFICATION	7.27051087444801E-8	IMPLEMENTATION
// possibly should not in object space	WITHOUT_CLASSIFICATION	0.999896739875745	WITHOUT_CLASSIFICATION	1.0326012425499499E-4	IMPLEMENTATION
// only fill if there actually will remain trailing storage	WITHOUT_CLASSIFICATION	0.9999999492464574	WITHOUT_CLASSIFICATION	5.075354267223315E-8	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999990644359302	WITHOUT_CLASSIFICATION	9.355640697064666E-7	IMPLEMENTATION
// rb_ary_new4	WITHOUT_CLASSIFICATION	0.9999990644359302	WITHOUT_CLASSIFICATION	9.355640697064666E-7	IMPLEMENTATION
// from DUP_SETUP	WITHOUT_CLASSIFICATION	0.9999998069224054	WITHOUT_CLASSIFICATION	1.9307759466801546E-7	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997906589368354	WITHOUT_CLASSIFICATION	2.0934106316459043E-4	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999998226603684	WITHOUT_CLASSIFICATION	1.7733963158957541E-7	IMPLEMENTATION
// See [ruby-core:17483]	WITHOUT_CLASSIFICATION	0.9999998226603684	WITHOUT_CLASSIFICATION	1.7733963158957541E-7	IMPLEMENTATION
// Satisfy java.util.List interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999996507141364	WITHOUT_CLASSIFICATION	3.4928586358090737E-7	IMPLEMENTATION
// pre-set for the sake of terminating recursive calls	WITHOUT_CLASSIFICATION	0.9999998293409063	WITHOUT_CLASSIFICATION	1.7065909370305634E-7	IMPLEMENTATION
/* root fiber */	WITHOUT_CLASSIFICATION	0.9999737181247582	WITHOUT_CLASSIFICATION	2.628187524181418E-5	IMPLEMENTATION
// GMT+00:00 --> Etc/GMT, see "MRI behavior" // comment below.	WITHOUT_CLASSIFICATION	0.999999999361833	WITHOUT_CLASSIFICATION	6.38166976469963E-10	IMPLEMENTATION
//  See http://www.gzip.org/zlib/rfc-gzip.html	WITHOUT_CLASSIFICATION	0.9999944942303522	WITHOUT_CLASSIFICATION	5.505769647675578E-6	IMPLEMENTATION
// extras flag	WITHOUT_CLASSIFICATION	0.9999995220569371	WITHOUT_CLASSIFICATION	4.7794306294752E-7	IMPLEMENTATION
// Zlib::NO_FLUSH	WITHOUT_CLASSIFICATION	0.9999984680700768	WITHOUT_CLASSIFICATION	1.5319299232592894E-6	IMPLEMENTATION
// ...nothing	WITHOUT_CLASSIFICATION	0.9999981642002667	WITHOUT_CLASSIFICATION	1.8357997334617268E-6	IMPLEMENTATION
// utility method	WITHOUT_CLASSIFICATION	0.999990804736568	WITHOUT_CLASSIFICATION	9.19526343209581E-6	IMPLEMENTATION
// Prepare LoadService and load path	WITHOUT_CLASSIFICATION	0.9999995630756117	WITHOUT_CLASSIFICATION	4.369243883049714E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998205315671	WITHOUT_CLASSIFICATION	1.794684329264983E-7	IMPLEMENTATION
// flags // 4 bytes of modified time	WITHOUT_CLASSIFICATION	0.9999999266188973	WITHOUT_CLASSIFICATION	7.338110271162135E-8	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999999998942299	WITHOUT_CLASSIFICATION	1.0577011167186827E-9	IMPLEMENTATION
// 1.8 "include?"	WITHOUT_CLASSIFICATION	0.9999973570303976	WITHOUT_CLASSIFICATION	2.6429696023680197E-6	IMPLEMENTATION
// any BigInteger is bigger than Fixnum and we don't have FIXABLE	WITHOUT_CLASSIFICATION	0.9994087207877834	WITHOUT_CLASSIFICATION	5.912792122165715E-4	IMPLEMENTATION
// beneath are rewritten coercions that reflect MRI logic, the aboves are used only by RubyBigDecimal	WITHOUT_CLASSIFICATION	0.9999987196966924	WITHOUT_CLASSIFICATION	1.280303307530383E-6	IMPLEMENTATION
// MRI does it!	WITHOUT_CLASSIFICATION	0.9999891650393613	WITHOUT_CLASSIFICATION	1.0834960638698798E-5	IMPLEMENTATION
// won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999996352973253	WITHOUT_CLASSIFICATION	3.6470267465012017E-7	IMPLEMENTATION
// it won't hurt fixnums	WITHOUT_CLASSIFICATION	0.9999995505775777	WITHOUT_CLASSIFICATION	4.4942242225201476E-7	IMPLEMENTATION
// RubyClassPathVariable	WITHOUT_CLASSIFICATION	0.9999999899891675	WITHOUT_CLASSIFICATION	1.0010832425380732E-8	IMPLEMENTATION
// not to be confused with RubyObject's flags	WITHOUT_CLASSIFICATION	0.9996570897665422	WITHOUT_CLASSIFICATION	3.4291023345780125E-4	IMPLEMENTATION
// second argument is allowed, but ignored (MRI)	WITHOUT_CLASSIFICATION	0.9999995048409859	WITHOUT_CLASSIFICATION	4.95159014134829E-7	IMPLEMENTATION
// we are presumably running a precompiled class; load directly	WITHOUT_CLASSIFICATION	0.9999999987616595	WITHOUT_CLASSIFICATION	1.2383404667423445E-9	IMPLEMENTATION
// terminate; tryCompile will have printed out an error and we're done	WITHOUT_CLASSIFICATION	0.9999866230806794	WITHOUT_CLASSIFICATION	1.3376919320508425E-5	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997046178547	WITHOUT_CLASSIFICATION	2.9538214527938825E-7	IMPLEMENTATION
// do nothing, this iteration restarts	WITHOUT_CLASSIFICATION	0.9999999727977933	WITHOUT_CLASSIFICATION	2.720220666074007E-8	IMPLEMENTATION
// recheck condition	WITHOUT_CLASSIFICATION	0.9999929044003439	WITHOUT_CLASSIFICATION	7.0955996561082516E-6	IMPLEMENTATION
// Get the main threadcontext (gets constructed for us)	WITHOUT_CLASSIFICATION	0.9999989417942288	WITHOUT_CLASSIFICATION	1.0582057711331216E-6	IMPLEMENTATION
// Construct key services	WITHOUT_CLASSIFICATION	0.9999997433843876	WITHOUT_CLASSIFICATION	2.566156124105438E-7	IMPLEMENTATION
// initialize the root of the class hierarchy completely	WITHOUT_CLASSIFICATION	0.9999999709555921	WITHOUT_CLASSIFICATION	2.9044407809635618E-8	IMPLEMENTATION
// Construct the top-level execution frame and scope for the main thread	WITHOUT_CLASSIFICATION	0.9999970929844734	WITHOUT_CLASSIFICATION	2.9070155265508692E-6	IMPLEMENTATION
// Initialize all the core classes	WITHOUT_CLASSIFICATION	0.9999961692441385	WITHOUT_CLASSIFICATION	3.830755861628824E-6	IMPLEMENTATION
// Initialize the "dummy" class used as a marker	WITHOUT_CLASSIFICATION	0.999999994430158	WITHOUT_CLASSIFICATION	5.56984207264001E-9	IMPLEMENTATION
// Initialize Kernel and include into Object	WITHOUT_CLASSIFICATION	0.9999994671286424	WITHOUT_CLASSIFICATION	5.328713575937626E-7	IMPLEMENTATION
// Object is ready, create top self	WITHOUT_CLASSIFICATION	0.9999995991912805	WITHOUT_CLASSIFICATION	4.0080871955072003E-7	IMPLEMENTATION
// Pre-create all the core classes potentially referenced during startup	WITHOUT_CLASSIFICATION	0.9999999912892233	WITHOUT_CLASSIFICATION	8.710776682761181E-9	IMPLEMENTATION
// Math depends on all numeric types	WITHOUT_CLASSIFICATION	0.9995482653976238	WITHOUT_CLASSIFICATION	4.5173460237623317E-4	IMPLEMENTATION
// depends on IO, FileTest	WITHOUT_CLASSIFICATION	0.9999789787351002	WITHOUT_CLASSIFICATION	2.1021264899819688E-5	IMPLEMENTATION
// initialize builtin libraries	WITHOUT_CLASSIFICATION	0.9999995933349569	WITHOUT_CLASSIFICATION	4.066650431090418E-7	IMPLEMENTATION
// Require in all libraries specified on command line	WITHOUT_CLASSIFICATION	0.999999964019914	WITHOUT_CLASSIFICATION	3.59800859655707E-8	IMPLEMENTATION
// Bootstrap the top of the hierarchy	WITHOUT_CLASSIFICATION	0.9999999008139886	WITHOUT_CLASSIFICATION	9.91860113748969E-8	IMPLEMENTATION
// we try to get the classloader that loaded JRuby, falling back on System	WITHOUT_CLASSIFICATION	0.9999999633337323	WITHOUT_CLASSIFICATION	3.666626766251968E-8	IMPLEMENTATION
// determine spacing	WITHOUT_CLASSIFICATION	0.9999997991626424	WITHOUT_CLASSIFICATION	2.0083735763345768E-7	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999931066463434	WITHOUT_CLASSIFICATION	6.893353656607192E-6	IMPLEMENTATION
// For JSR 223 support: see http://scripting.java.net/	WITHOUT_CLASSIFICATION	0.9999972800985854	WITHOUT_CLASSIFICATION	2.7199014147283093E-6	IMPLEMENTATION
// use this for JRuby-internal finalizers	WITHOUT_CLASSIFICATION	0.9999984049683657	WITHOUT_CLASSIFICATION	1.5950316342205843E-6	IMPLEMENTATION
// this method is for finalizers registered via ObjectSpace	WITHOUT_CLASSIFICATION	0.9999874402574399	WITHOUT_CLASSIFICATION	1.2559742560032722E-5	IMPLEMENTATION
// new factory methods ------------------------------------------------------------------------	WITHOUT_CLASSIFICATION	0.9999998154666634	WITHOUT_CLASSIFICATION	1.8453333649375838E-7	IMPLEMENTATION
//        assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999996948266854	WITHOUT_CLASSIFICATION	3.05173314662147E-7	IMPLEMENTATION
// Equivalent of Data_Wrap_Struct	WITHOUT_CLASSIFICATION	0.999988916505222	WITHOUT_CLASSIFICATION	1.108349477793914E-5	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998215658635	WITHOUT_CLASSIFICATION	1.7843413645992471E-7	IMPLEMENTATION
// ChannelDescriptors opened by sysopen are cached to avoid collection	WITHOUT_CLASSIFICATION	0.9999998842892216	WITHOUT_CLASSIFICATION	1.1571077836871615E-7	IMPLEMENTATION
// Default objects	WITHOUT_CLASSIFICATION	0.9999999725214378	WITHOUT_CLASSIFICATION	2.7478562223723418E-8	IMPLEMENTATION
// record separator var, to speed up io ops that use it	WITHOUT_CLASSIFICATION	0.9999999283515124	WITHOUT_CLASSIFICATION	7.164848766466978E-8	IMPLEMENTATION
// former java.lang.System concepts now internalized for MVM	WITHOUT_CLASSIFICATION	0.9999997888545121	WITHOUT_CLASSIFICATION	2.111454878547254E-7	IMPLEMENTATION
// Java support	WITHOUT_CLASSIFICATION	0.9999933009609591	WITHOUT_CLASSIFICATION	6.699039040842828E-6	IMPLEMENTATION
// Parser stats	WITHOUT_CLASSIFICATION	0.9999980987293885	WITHOUT_CLASSIFICATION	1.9012706114739362E-6	IMPLEMENTATION
// Compilation	WITHOUT_CLASSIFICATION	0.999999680827443	WITHOUT_CLASSIFICATION	3.191725571296782E-7	IMPLEMENTATION
// can't read non-standard properties	WITHOUT_CLASSIFICATION	0.9999946659964103	WITHOUT_CLASSIFICATION	5.334003589645433E-6	IMPLEMENTATION
// can't create custom classloaders	WITHOUT_CLASSIFICATION	0.9999999782613386	WITHOUT_CLASSIFICATION	2.1738661482324755E-8	IMPLEMENTATION
// mutex that controls modifications of user-defined finalizers	WITHOUT_CLASSIFICATION	0.9998889114479804	WITHOUT_CLASSIFICATION	1.1108855201957425E-4	IMPLEMENTATION
// mutex that controls modifications of internal finalizers	WITHOUT_CLASSIFICATION	0.9953263725354093	WITHOUT_CLASSIFICATION	0.004673627464590592	IMPLEMENTATION
// A thread pool to use for executing this runtime's Ruby threads	WITHOUT_CLASSIFICATION	0.9999937567892201	WITHOUT_CLASSIFICATION	6.243210780002697E-6	IMPLEMENTATION
// A global object lock for class hierarchy mutations	WITHOUT_CLASSIFICATION	0.9999974295654019	WITHOUT_CLASSIFICATION	2.570434598048497E-6	IMPLEMENTATION
// initial spaces // spaces before "at"	WITHOUT_CLASSIFICATION	0.999999928511144	WITHOUT_CLASSIFICATION	7.148885596721362E-8	IMPLEMENTATION
// event name // filename // line numbers should be 1-based	WITHOUT_CLASSIFICATION	0.9999863845451792	WITHOUT_CLASSIFICATION	1.3615454820850775E-5	IMPLEMENTATION
// The method is intentionally not public, since it typically should // not be used outside of the core.	WITHOUT_CLASSIFICATION	0.9999984029118033	WITHOUT_CLASSIFICATION	1.5970881966240406E-6	IMPLEMENTATION
// Note: this field and the following static initializer // must be located be in this order!	WITHOUT_CLASSIFICATION	0.9999998442302921	WITHOUT_CLASSIFICATION	1.5576970804161356E-7	IMPLEMENTATION
// Contains a list of all blocks (as Procs) that should be called when // the runtime environment exits.	WITHOUT_CLASSIFICATION	0.9999994865620508	WITHOUT_CLASSIFICATION	5.134379491931155E-7	IMPLEMENTATION
// quoted-printable	WITHOUT_CLASSIFICATION	0.999998938542516	WITHOUT_CLASSIFICATION	1.0614574840213565E-6	IMPLEMENTATION
// default options	WITHOUT_CLASSIFICATION	0.9999991426442021	WITHOUT_CLASSIFICATION	8.573557978266394E-7	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999957577570698	WITHOUT_CLASSIFICATION	4.242242930089601E-6	IMPLEMENTATION
// iso-2022-jp	WITHOUT_CLASSIFICATION	0.9999957577570698	WITHOUT_CLASSIFICATION	4.242242930089601E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999960046287393	WITHOUT_CLASSIFICATION	3.99537126063709E-6	IMPLEMENTATION
// Shift_JIS	WITHOUT_CLASSIFICATION	0.9999960046287393	WITHOUT_CLASSIFICATION	3.99537126063709E-6	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999994118113841	WITHOUT_CLASSIFICATION	5.881886159508407E-7	IMPLEMENTATION
// EUC-JP	WITHOUT_CLASSIFICATION	0.9999994118113841	WITHOUT_CLASSIFICATION	5.881886159508407E-7	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999984714541417	WITHOUT_CLASSIFICATION	1.5285458583597668E-6	IMPLEMENTATION
// UTF-8	WITHOUT_CLASSIFICATION	0.9999984714541417	WITHOUT_CLASSIFICATION	1.5285458583597668E-6	IMPLEMENTATION
// long name option	WITHOUT_CLASSIFICATION	0.9999999743189906	WITHOUT_CLASSIFICATION	2.568100933121755E-8	IMPLEMENTATION
// conversion	WITHOUT_CLASSIFICATION	0.9999920907673102	WITHOUT_CLASSIFICATION	7.90923268974032E-6	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999760322054	WITHOUT_CLASSIFICATION	2.396779459728901E-7	IMPLEMENTATION
// string doesn't share any resources	WITHOUT_CLASSIFICATION	0.9999999875628084	WITHOUT_CLASSIFICATION	1.2437191611913023E-8	IMPLEMENTATION
// string has it's own ByteList, but it's pointing to a shared buffer (byte[])	WITHOUT_CLASSIFICATION	0.9999998613866841	WITHOUT_CLASSIFICATION	1.3861331584100824E-7	IMPLEMENTATION
// string doesn't have it's own ByteList (values)	WITHOUT_CLASSIFICATION	0.9999998677897227	WITHOUT_CLASSIFICATION	1.3221027729608382E-7	IMPLEMENTATION
// ENC_CODERANGE_ASCIIONLY	WITHOUT_CLASSIFICATION	0.9999873234504486	WITHOUT_CLASSIFICATION	1.2676549551405247E-5	IMPLEMENTATION
// rb_enc_str_asciionly_p	WITHOUT_CLASSIFICATION	0.9999998567077384	WITHOUT_CLASSIFICATION	1.4329226164770738E-7	IMPLEMENTATION
// rb_enc_str_coderange	WITHOUT_CLASSIFICATION	0.9999998100595604	WITHOUT_CLASSIFICATION	1.899404395708801E-7	IMPLEMENTATION
// rb_str_hash_cmp	WITHOUT_CLASSIFICATION	0.9999999220431429	WITHOUT_CLASSIFICATION	7.795685709849254E-8	IMPLEMENTATION
// Deprecated String construction routines	WITHOUT_CLASSIFICATION	0.9999845489943419	WITHOUT_CLASSIFICATION	1.5451005658138256E-5	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and NOT making the target String shared 	WITHOUT_CLASSIFICATION	0.9999997105122916	WITHOUT_CLASSIFICATION	2.8948770839363376E-7	IMPLEMENTATION
/* rb_str_subseq */	WITHOUT_CLASSIFICATION	0.9999989198668849	WITHOUT_CLASSIFICATION	1.0801331150215972E-6	IMPLEMENTATION
// no need to assign encoding, same bytelist shared	WITHOUT_CLASSIFICATION	0.9999939833681328	WITHOUT_CLASSIFICATION	6.016631867094297E-6	IMPLEMENTATION
// if len == 0 then shared empty	WITHOUT_CLASSIFICATION	0.9999996346430557	WITHOUT_CLASSIFICATION	3.653569441599609E-7	IMPLEMENTATION
/* rb_str_cmp_m */	WITHOUT_CLASSIFICATION	0.999999725179236	WITHOUT_CLASSIFICATION	2.7482076411363846E-7	IMPLEMENTATION
// we limit to int because ByteBuffer can only allocate int sizes	WITHOUT_CLASSIFICATION	0.9999780039884058	WITHOUT_CLASSIFICATION	2.199601159425709E-5	IMPLEMENTATION
// // rb_str_buf_append	WITHOUT_CLASSIFICATION	0.9999998632283675	WITHOUT_CLASSIFICATION	1.3677163244133092E-7	IMPLEMENTATION
// encoding doesn't have to be copied.	WITHOUT_CLASSIFICATION	0.999999981000982	WITHOUT_CLASSIFICATION	1.8999018011132735E-8	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999357801504489	WITHOUT_CLASSIFICATION	6.421984955105924E-5	IMPLEMENTATION
// must not reallocate	WITHOUT_CLASSIFICATION	0.9999995971201374	WITHOUT_CLASSIFICATION	4.0287986260512494E-7	IMPLEMENTATION
// Illegal combination	WITHOUT_CLASSIFICATION	0.9999990926370445	WITHOUT_CLASSIFICATION	9.073629554469753E-7	IMPLEMENTATION
// use 1.8 impl	WITHOUT_CLASSIFICATION	0.9999267390235037	WITHOUT_CLASSIFICATION	7.326097649628993E-5	IMPLEMENTATION
/* RubyString aka rb_string_value */	WITHOUT_CLASSIFICATION	0.9999998570892831	WITHOUT_CLASSIFICATION	1.4291071692862618E-7	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999988569512634	WITHOUT_CLASSIFICATION	1.1430487365612892E-6	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999478324251	WITHOUT_CLASSIFICATION	5.216757490301204E-8	IMPLEMENTATION
/* len + margin */	WITHOUT_CLASSIFICATION	0.9999988392569086	WITHOUT_CLASSIFICATION	1.1607430914740082E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999925656613554	WITHOUT_CLASSIFICATION	7.434338644566671E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999925656613554	WITHOUT_CLASSIFICATION	7.434338644566671E-6	IMPLEMENTATION
/* copy pre-match substr */	WITHOUT_CLASSIFICATION	0.9999998308270924	WITHOUT_CLASSIFICATION	1.6917290765499778E-7	IMPLEMENTATION
// string given	WITHOUT_CLASSIFICATION	0.9999974687608257	WITHOUT_CLASSIFICATION	2.531239174195829E-6	IMPLEMENTATION
// hash given	WITHOUT_CLASSIFICATION	0.9999911388569447	WITHOUT_CLASSIFICATION	8.861143055288043E-6	IMPLEMENTATION
// This represents left most digit in a set of incremented // values?  Therefore leftmost numeric must be '1' and not '0' // 999 -> 1000, not 999 -> 0000.  whereas chars should be // zzz -> aaaa and non-alnum byte values should be "\377" -> "\001\000"	WITHOUT_CLASSIFICATION	0.9999999994412646	WITHOUT_CLASSIFICATION	5.587354334608341E-10	IMPLEMENTATION
/* substring longer than string */	WITHOUT_CLASSIFICATION	0.9999995754156049	WITHOUT_CLASSIFICATION	4.245843951276199E-7	IMPLEMENTATION
/* rb_str_substr */	WITHOUT_CLASSIFICATION	0.9999994107142665	WITHOUT_CLASSIFICATION	5.892857335397979E-7	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.99999715034922	WITHOUT_CLASSIFICATION	2.849650780033251E-6	IMPLEMENTATION
// nothing	WITHOUT_CLASSIFICATION	0.99999715034922	WITHOUT_CLASSIFICATION	2.849650780033251E-6	IMPLEMENTATION
/* rb_str_splice */	WITHOUT_CLASSIFICATION	0.9999994075254368	WITHOUT_CLASSIFICATION	5.924745631437815E-7	IMPLEMENTATION
// TODO: keep cr // TODO: rb_str_splice_0	WITHOUT_CLASSIFICATION	0.5517402907631318	WITHOUT_CLASSIFICATION	0.4482597092368681	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999977337238789	WITHOUT_CLASSIFICATION	2.2662761209879445E-6	IMPLEMENTATION
// keep cr ?	WITHOUT_CLASSIFICATION	0.9999977337238789	WITHOUT_CLASSIFICATION	2.2662761209879445E-6	IMPLEMENTATION
/* wrapped to \0...\0.  search next valid char. */	WITHOUT_CLASSIFICATION	0.9999998546606793	WITHOUT_CLASSIFICATION	1.4533932079164003E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999999522665	WITHOUT_CLASSIFICATION	4.77334999869899E-7	IMPLEMENTATION
// only this case affects backrefs 	WITHOUT_CLASSIFICATION	0.999999522665	WITHOUT_CLASSIFICATION	4.77334999869899E-7	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999518444266805	WITHOUT_CLASSIFICATION	4.815557331956856E-5	IMPLEMENTATION
// modified	WITHOUT_CLASSIFICATION	0.9999518444266805	WITHOUT_CLASSIFICATION	4.815557331956856E-5	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999981832602363	WITHOUT_CLASSIFICATION	1.8167397636433665E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999981832602363	WITHOUT_CLASSIFICATION	1.8167397636433665E-6	IMPLEMENTATION
// QTRUE	WITHOUT_CLASSIFICATION	0.9999995784180314	WITHOUT_CLASSIFICATION	4.215819686098096E-7	IMPLEMENTATION
/* retrieve last replacer */	WITHOUT_CLASSIFICATION	0.9999947423376766	WITHOUT_CLASSIFICATION	5.257662323385117E-6	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999976740220157	WITHOUT_CLASSIFICATION	2.325977984351123E-6	IMPLEMENTATION
// long size * bits in byte	WITHOUT_CLASSIFICATION	0.999999999513653	WITHOUT_CLASSIFICATION	4.863469038935273E-10	IMPLEMENTATION
// from encoding, special-casing ASCII* to ASCII	WITHOUT_CLASSIFICATION	0.9999999935912911	WITHOUT_CLASSIFICATION	6.408708890330109E-9	IMPLEMENTATION
// to encoding, same special-casing	WITHOUT_CLASSIFICATION	0.9999999329774375	WITHOUT_CLASSIFICATION	6.70225624791418E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999997952823828	WITHOUT_CLASSIFICATION	2.047176171464461E-7	IMPLEMENTATION
// decode from "from" and encode to "to"	WITHOUT_CLASSIFICATION	0.9999999756793613	WITHOUT_CLASSIFICATION	2.43206387892135E-8	IMPLEMENTATION
// create a lightweight thunk	WITHOUT_CLASSIFICATION	0.9999997952823828	WITHOUT_CLASSIFICATION	2.047176171464461E-7	IMPLEMENTATION
//Kernel is the only Module that doesn't need an implementor	WITHOUT_CLASSIFICATION	0.9994588348339865	WITHOUT_CLASSIFICATION	5.411651660135993E-4	IMPLEMENTATION
// no binding given, use (eval)	WITHOUT_CLASSIFICATION	0.9999967585555746	WITHOUT_CLASSIFICATION	3.241444425455977E-6	IMPLEMENTATION
// interned, OK for "fast" methods	WITHOUT_CLASSIFICATION	0.999999768673207	WITHOUT_CLASSIFICATION	2.3132679315061017E-7	IMPLEMENTATION
// File to be loaded by autoload has already been or is being loaded.	WITHOUT_CLASSIFICATION	0.9999730819140825	WITHOUT_CLASSIFICATION	2.69180859174111E-5	IMPLEMENTATION
// rb_cstr_to_dbl case	WITHOUT_CLASSIFICATION	0.9999997809081085	WITHOUT_CLASSIFICATION	2.1909189145237975E-7	IMPLEMENTATION
// We break if we know this sleep was explicitly woken up/interrupted	WITHOUT_CLASSIFICATION	0.99993867195734	WITHOUT_CLASSIFICATION	6.1328042660007E-5	IMPLEMENTATION
// exec process, create IO with process	WITHOUT_CLASSIFICATION	0.9999887265789538	WITHOUT_CLASSIFICATION	1.1273421046352631E-5	IMPLEMENTATION
// Zero sleeps forever	WITHOUT_CLASSIFICATION	0.9999951710860288	WITHOUT_CLASSIFICATION	4.828913971199656E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998658251799	WITHOUT_CLASSIFICATION	1.3417482024759038E-7	IMPLEMENTATION
// Explicit zero in MRI returns immediately	WITHOUT_CLASSIFICATION	0.9999979329024761	WITHOUT_CLASSIFICATION	2.0670975239377503E-6	IMPLEMENTATION
// Spurious wakeup-loop	WITHOUT_CLASSIFICATION	0.9999999837508586	WITHOUT_CLASSIFICATION	1.624914141660377E-8	IMPLEMENTATION
// adjusts paths started with '/' or '\\', on windows.	WITHOUT_CLASSIFICATION	0.9999992602902409	WITHOUT_CLASSIFICATION	7.397097590762919E-7	IMPLEMENTATION
// file not given	WITHOUT_CLASSIFICATION	0.9999274196434513	WITHOUT_CLASSIFICATION	7.258035654859009E-5	IMPLEMENTATION
// string to eval	WITHOUT_CLASSIFICATION	0.9999987694217405	WITHOUT_CLASSIFICATION	1.2305782595755747E-6	IMPLEMENTATION
// binding given, use binding's file	WITHOUT_CLASSIFICATION	0.9999998556067466	WITHOUT_CLASSIFICATION	1.4439325325482487E-7	IMPLEMENTATION
// ?g  | boolean | True if file1 has the \CF{setgid} bit	WITHOUT_CLASSIFICATION	0.9999999779245461	WITHOUT_CLASSIFICATION	2.207545397047744E-8	IMPLEMENTATION
// bomb out, it's not a binding or a proc	WITHOUT_CLASSIFICATION	0.9999985331234518	WITHOUT_CLASSIFICATION	1.466876548252282E-6	IMPLEMENTATION
// Ordering of array traversal not important, just intuitive	WITHOUT_CLASSIFICATION	0.9998881784569872	WITHOUT_CLASSIFICATION	1.1182154301284004E-4	IMPLEMENTATION
//Catch active, throw for catch to handle	WITHOUT_CLASSIFICATION	0.9985538409472744	WITHOUT_CLASSIFICATION	0.0014461590527256496	IMPLEMENTATION
// No catch active for this throw	WITHOUT_CLASSIFICATION	0.999922519051464	WITHOUT_CLASSIFICATION	7.748094853599604E-5	IMPLEMENTATION
// without full tracing, many events will not fire	WITHOUT_CLASSIFICATION	0.9999999521674192	WITHOUT_CLASSIFICATION	4.783258087169176E-8	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999987993794668	WITHOUT_CLASSIFICATION	1.2006205332751265E-6	IMPLEMENTATION
// MRI behavior: use first byte of string value if len > 0	WITHOUT_CLASSIFICATION	0.9999999853850088	WITHOUT_CLASSIFICATION	1.4614991160812444E-8	IMPLEMENTATION
// MRI behavior: now check arg count	WITHOUT_CLASSIFICATION	0.9999974882031333	WITHOUT_CLASSIFICATION	2.51179686679763E-6	IMPLEMENTATION
// ?A  | Time    | Last access time for file1	WITHOUT_CLASSIFICATION	0.9999988220423943	WITHOUT_CLASSIFICATION	1.1779576057153793E-6	IMPLEMENTATION
// ?b  | boolean | True if file1 is a block device	WITHOUT_CLASSIFICATION	0.9999989975617546	WITHOUT_CLASSIFICATION	1.0024382454323627E-6	IMPLEMENTATION
// ?c  | boolean | True if file1 is a character device	WITHOUT_CLASSIFICATION	0.9999999044194209	WITHOUT_CLASSIFICATION	9.55805791419089E-8	IMPLEMENTATION
// ?C  | Time    | Last change time for file1	WITHOUT_CLASSIFICATION	0.9999999379956785	WITHOUT_CLASSIFICATION	6.200432148645545E-8	IMPLEMENTATION
// ?d  | boolean | True if file1 exists and is a directory	WITHOUT_CLASSIFICATION	0.999999989672905	WITHOUT_CLASSIFICATION	1.032709489633926E-8	IMPLEMENTATION
// ?e  | boolean | True if file1 exists	WITHOUT_CLASSIFICATION	0.9999996136452006	WITHOUT_CLASSIFICATION	3.863547993628688E-7	IMPLEMENTATION
// ?f  | boolean | True if file1 exists and is a regular file	WITHOUT_CLASSIFICATION	0.9999997178833789	WITHOUT_CLASSIFICATION	2.821166210682044E-7	IMPLEMENTATION
// ?G  | boolean | True if file1 exists and has a group ownership equal to the caller's group	WITHOUT_CLASSIFICATION	0.9999819079099047	WITHOUT_CLASSIFICATION	1.809209009531055E-5	IMPLEMENTATION
// ?k  | boolean | True if file1 exists and has the sticky bit set	WITHOUT_CLASSIFICATION	0.9999999514955048	WITHOUT_CLASSIFICATION	4.850449513691405E-8	IMPLEMENTATION
// ?M  | Time    | Last modification time for file1	WITHOUT_CLASSIFICATION	0.9999983926172009	WITHOUT_CLASSIFICATION	1.607382799116389E-6	IMPLEMENTATION
// ?o  | boolean | True if file1 exists and is owned by the caller's effective uid	WITHOUT_CLASSIFICATION	0.9999475653499755	WITHOUT_CLASSIFICATION	5.2434650024578746E-5	IMPLEMENTATION
// ?O  | boolean | True if file1 exists and is owned by the caller's real uid 	WITHOUT_CLASSIFICATION	0.999999480149664	WITHOUT_CLASSIFICATION	5.19850336054535E-7	IMPLEMENTATION
// ?p  | boolean | True if file1 exists and is a fifo	WITHOUT_CLASSIFICATION	0.9999997727095553	WITHOUT_CLASSIFICATION	2.272904446244278E-7	IMPLEMENTATION
// ?r  | boolean | True if file1 is readable by the effective uid/gid of the caller	WITHOUT_CLASSIFICATION	0.9999963294306942	WITHOUT_CLASSIFICATION	3.670569305708175E-6	IMPLEMENTATION
// ?s  | int/nil | If file1 has nonzero size, return the size, otherwise nil	WITHOUT_CLASSIFICATION	0.9999984692913851	WITHOUT_CLASSIFICATION	1.5307086148952204E-6	IMPLEMENTATION
// ?S  | boolean | True if file1 exists and is a socket	WITHOUT_CLASSIFICATION	0.9999999547908636	WITHOUT_CLASSIFICATION	4.5209136410857144E-8	IMPLEMENTATION
// ?u  | boolean | True if file1 has the setuid bit set	WITHOUT_CLASSIFICATION	0.9999999401895394	WITHOUT_CLASSIFICATION	5.981046060424632E-8	IMPLEMENTATION
// ?x  | boolean | True if file1 exists and is executable by the effective uid/gid	WITHOUT_CLASSIFICATION	0.9999980851614292	WITHOUT_CLASSIFICATION	1.9148385707378057E-6	IMPLEMENTATION
// ?X  | boolean | True if file1 exists and is executable by the real uid/gid	WITHOUT_CLASSIFICATION	0.9999997737394214	WITHOUT_CLASSIFICATION	2.262605786986308E-7	IMPLEMENTATION
// ?z  | boolean | True if file1 exists and has a zero length	WITHOUT_CLASSIFICATION	0.999999744753384	WITHOUT_CLASSIFICATION	2.552466160244245E-7	IMPLEMENTATION
// ?=  | boolean | True if the modification times of file1 and file2 are equal	WITHOUT_CLASSIFICATION	0.9999998194647735	WITHOUT_CLASSIFICATION	1.8053522654538913E-7	IMPLEMENTATION
// ?<  | boolean | True if the modification time of file1 is prior to that of file2	WITHOUT_CLASSIFICATION	0.9999994948609707	WITHOUT_CLASSIFICATION	5.051390292674471E-7	IMPLEMENTATION
// ?>  | boolean | True if the modification time of file1 is after that of file2	WITHOUT_CLASSIFICATION	0.9999998946225847	WITHOUT_CLASSIFICATION	1.0537741533529903E-7	IMPLEMENTATION
// ?-  | boolean | True if file1 and file2 are identical	WITHOUT_CLASSIFICATION	0.9999996982780973	WITHOUT_CLASSIFICATION	3.017219026797419E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999843118242	WITHOUT_CLASSIFICATION	1.568817580025963E-7	IMPLEMENTATION
// Error info is per-thread	WITHOUT_CLASSIFICATION	0.9999967043299516	WITHOUT_CLASSIFICATION	3.295670048459693E-6	IMPLEMENTATION
// init errorInfo to nil	WITHOUT_CLASSIFICATION	0.9999918059072219	WITHOUT_CLASSIFICATION	8.19409277808446E-6	IMPLEMENTATION
// if we're already aborting, we can receive no further mail	WITHOUT_CLASSIFICATION	0.9999999670000732	WITHOUT_CLASSIFICATION	3.2999926812629236E-8	IMPLEMENTATION
// If this thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999876078069638	WITHOUT_CLASSIFICATION	1.2392193036305722E-5	IMPLEMENTATION
// new interrupt, to hopefully wake it out of any blocking IO	WITHOUT_CLASSIFICATION	0.9999998330754434	WITHOUT_CLASSIFICATION	1.6692455661732275E-7	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999959422230703	WITHOUT_CLASSIFICATION	4.05777692973863E-6	IMPLEMENTATION
// set to default thread group	WITHOUT_CLASSIFICATION	0.9999959422230703	WITHOUT_CLASSIFICATION	4.05777692973863E-6	IMPLEMENTATION
// JRUBY-2380, associate future early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999978340198	WITHOUT_CLASSIFICATION	2.165980120760614E-9	IMPLEMENTATION
// JRUBY-2380, associate thread early so it shows up in Thread.list right away, in case it doesn't run immediately	WITHOUT_CLASSIFICATION	0.9999999955505775	WITHOUT_CLASSIFICATION	4.449422479495321E-9	IMPLEMENTATION
// for Thread::start, which does not call the subclass's initialize	WITHOUT_CLASSIFICATION	0.9999999834675335	WITHOUT_CLASSIFICATION	1.6532466468268482E-8	IMPLEMENTATION
// JRUBY-3568, inherit threadgroup or use default	WITHOUT_CLASSIFICATION	0.999979218742401	WITHOUT_CLASSIFICATION	2.0781257598942092E-5	IMPLEMENTATION
// MRI behavior: value given in seconds; converted to Float; less // than or equal to zero returns immediately; returns nil	WITHOUT_CLASSIFICATION	0.9999968987379726	WITHOUT_CLASSIFICATION	3.101262027504643E-6	IMPLEMENTATION
// If the target thread is sleeping or stopped, wake it	WITHOUT_CLASSIFICATION	0.9999969312975932	WITHOUT_CLASSIFICATION	3.068702406839662E-6	IMPLEMENTATION
// We need this loop in order to be able to "unblock" the // join call without actually calling interrupt.	WITHOUT_CLASSIFICATION	0.9999998359913259	WITHOUT_CLASSIFICATION	1.6400867408975066E-7	IMPLEMENTATION
// attempt to decriticalize all if we're the critical thread	WITHOUT_CLASSIFICATION	0.999437175815515	WITHOUT_CLASSIFICATION	5.628241844848625E-4	IMPLEMENTATION
// not valid for "dead" state	WITHOUT_CLASSIFICATION	0.999992435792791	WITHOUT_CLASSIFICATION	7.564207209029158E-6	IMPLEMENTATION
// If the killee thread is the same as the killer thread, just die	WITHOUT_CLASSIFICATION	0.9999997937358999	WITHOUT_CLASSIFICATION	2.0626410010590545E-7	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999984609623334	WITHOUT_CLASSIFICATION	1.539037666659926E-6	IMPLEMENTATION
// check for thread events, in case we've been woken up to die	WITHOUT_CLASSIFICATION	0.9999984609623334	WITHOUT_CLASSIFICATION	1.539037666659926E-6	IMPLEMENTATION
// ignore; I don't like doing it, but it seems like we // really just need to make all channels non-blocking by // default and use select when implementing blocking ops, // so if this remains set non-blocking, perhaps it's not // such a big deal...	WITHOUT_CLASSIFICATION	0.9991429553657809	WITHOUT_CLASSIFICATION	8.570446342190814E-4	IMPLEMENTATION
// can't select, just have to do a blocking call	WITHOUT_CLASSIFICATION	0.9999999438102152	WITHOUT_CLASSIFICATION	5.6189784780984315E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999998842093532	WITHOUT_CLASSIFICATION	1.1579064687573228E-7	IMPLEMENTATION
// Create Constants class	WITHOUT_CLASSIFICATION	0.9999999998393715	WITHOUT_CLASSIFICATION	1.6062850565927342E-10	IMPLEMENTATION
// Create constants for open flags	WITHOUT_CLASSIFICATION	0.999999997328996	WITHOUT_CLASSIFICATION	2.671004109593664E-9	IMPLEMENTATION
// Strip off the O_ prefix, so they become File::RDONLY, and so on	WITHOUT_CLASSIFICATION	0.999999937078781	WITHOUT_CLASSIFICATION	6.292121893551371E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999935329646	WITHOUT_CLASSIFICATION	6.4670353594707546E-9	IMPLEMENTATION
// File::Constants module is included in IO.	WITHOUT_CLASSIFICATION	0.9999999985882346	WITHOUT_CLASSIFICATION	1.4117654156706858E-9	IMPLEMENTATION
// Make sure any existing lock is released before we try and close the file	WITHOUT_CLASSIFICATION	0.9999998935009504	WITHOUT_CLASSIFICATION	1.064990496487745E-7	IMPLEMENTATION
// null channel always succeeds for all locking operations	WITHOUT_CLASSIFICATION	0.9999966672179657	WITHOUT_CLASSIFICATION	3.3327820342555748E-6	IMPLEMENTATION
// Paths which end in "/" or "\\" must be stripped off.	WITHOUT_CLASSIFICATION	0.9999999965379028	WITHOUT_CLASSIFICATION	3.4620972113533664E-9	IMPLEMENTATION
// Special case for handling ACCMODE, since constantine will generate // an invalid value if it is not defined by the platform.	WITHOUT_CLASSIFICATION	0.9999997948873603	WITHOUT_CLASSIFICATION	2.0511263952473554E-7	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999980039948082	WITHOUT_CLASSIFICATION	1.99600519186748E-6	IMPLEMENTATION
// Return false here	WITHOUT_CLASSIFICATION	0.9999980039948082	WITHOUT_CLASSIFICATION	1.99600519186748E-6	IMPLEMENTATION
// We're not actually a real file, so we can't flock	WITHOUT_CLASSIFICATION	0.9999907733434615	WITHOUT_CLASSIFICATION	9.226656538518253E-6	IMPLEMENTATION
// Should we do anything?	WITHOUT_CLASSIFICATION	0.9999953200114917	WITHOUT_CLASSIFICATION	4.679988508236912E-6	IMPLEMENTATION
/* File class methods */	WITHOUT_CLASSIFICATION	0.9999999319226602	WITHOUT_CLASSIFICATION	6.80773397709243E-8	IMPLEMENTATION
// MRI-compatible basename handling for windows drive letter paths	WITHOUT_CLASSIFICATION	0.9999991345056803	WITHOUT_CLASSIFICATION	8.654943197171222E-7	IMPLEMENTATION
// strip c: away from relative-pathed name	WITHOUT_CLASSIFICATION	0.9999994777221024	WITHOUT_CLASSIFICATION	5.222778975873178E-7	IMPLEMENTATION
// C:\ is returned unchanged	WITHOUT_CLASSIFICATION	0.9999999826371849	WITHOUT_CLASSIFICATION	1.736281508477234E-8	IMPLEMENTATION
// -1 no match; 0 it is dot file not extension	WITHOUT_CLASSIFICATION	0.9999988073082469	WITHOUT_CLASSIFICATION	1.1926917531398575E-6	IMPLEMENTATION
// trim trailing slashes	WITHOUT_CLASSIFICATION	0.999999987338228	WITHOUT_CLASSIFICATION	1.2661772022344729E-8	IMPLEMENTATION
// Dot is not at beginning and not at end of filename. 	WITHOUT_CLASSIFICATION	0.9999973340317586	WITHOUT_CLASSIFICATION	2.6659682413510353E-6	IMPLEMENTATION
// Handle ~user paths 	WITHOUT_CLASSIFICATION	0.9999999217283845	WITHOUT_CLASSIFICATION	7.827161547048521E-8	IMPLEMENTATION
// compensate for missing slash after drive letter on windows	WITHOUT_CLASSIFICATION	0.9999998842093532	WITHOUT_CLASSIFICATION	1.1579064687573228E-7	IMPLEMENTATION
// Include additional path separator // (so that dirname of "C:\file.txt" is  "C:\", not "C:")	WITHOUT_CLASSIFICATION	0.999997837809768	WITHOUT_CLASSIFICATION	2.162190231994097E-6	IMPLEMENTATION
// FNFException can be thrown in both cases, when the file // is not found, or when permission is denied.	WITHOUT_CLASSIFICATION	0.9999998769208235	WITHOUT_CLASSIFICATION	1.230791765393275E-7	IMPLEMENTATION
// No directory delimeter.  Rest of string is username	WITHOUT_CLASSIFICATION	0.9999998869400314	WITHOUT_CLASSIFICATION	1.1305996863393805E-7	IMPLEMENTATION
// If there's a second argument, it's the path to which the first  // argument is relative.	WITHOUT_CLASSIFICATION	0.9999863224897271	WITHOUT_CLASSIFICATION	1.3677510272865457E-5	IMPLEMENTATION
// Handle ~user paths.	WITHOUT_CLASSIFICATION	0.9999994177784007	WITHOUT_CLASSIFICATION	5.822215992070522E-7	IMPLEMENTATION
// If there's no second argument, simply use the working directory  // of the runtime.	WITHOUT_CLASSIFICATION	0.999999992889466	WITHOUT_CLASSIFICATION	7.110534014629604E-9	IMPLEMENTATION
// Find out which string to check.	WITHOUT_CLASSIFICATION	0.9999068531996758	WITHOUT_CLASSIFICATION	9.314680032416606E-5	IMPLEMENTATION
// Single '~' as whole path to expand	WITHOUT_CLASSIFICATION	0.9999957426883463	WITHOUT_CLASSIFICATION	4.257311653662963E-6	IMPLEMENTATION
// Count number of extra slashes in the beginning of the string.	WITHOUT_CLASSIFICATION	0.9999999967999974	WITHOUT_CLASSIFICATION	3.200002520976792E-9	IMPLEMENTATION
// '~user/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999715959592155	WITHOUT_CLASSIFICATION	2.840404078439676E-5	IMPLEMENTATION
// '~/...' as path to expand	WITHOUT_CLASSIFICATION	0.9999826103511202	WITHOUT_CLASSIFICATION	1.738964887979096E-5	IMPLEMENTATION
// Prepare a string with the same number of redundant slashes so that  // we easily can prepend it to the result.	WITHOUT_CLASSIFICATION	0.9999993728701264	WITHOUT_CLASSIFICATION	6.271298735977577E-7	IMPLEMENTATION
// If there are N slashes, then we want N-1.	WITHOUT_CLASSIFICATION	0.9999961059034607	WITHOUT_CLASSIFICATION	3.894096539386503E-6	IMPLEMENTATION
// no canonical path yet or length is zero, and we have a / followed by a dot...	WITHOUT_CLASSIFICATION	0.99893285764684	WITHOUT_CLASSIFICATION	0.0010671423531600128	IMPLEMENTATION
// we don't have another slash after this, so replace /. with /	WITHOUT_CLASSIFICATION	0.9999953242118645	WITHOUT_CLASSIFICATION	4.67578813543259E-6	IMPLEMENTATION
// we do have another slash; omit both / and . (JRUBY-1606)	WITHOUT_CLASSIFICATION	0.9999960066034379	WITHOUT_CLASSIFICATION	3.993396562093134E-6	IMPLEMENTATION
// do nothing, we should not delete the drive letter	WITHOUT_CLASSIFICATION	0.9999978726516485	WITHOUT_CLASSIFICATION	2.127348351396186E-6	IMPLEMENTATION
/* rb: check_modifiable */	WITHOUT_CLASSIFICATION	0.9999998965392219	WITHOUT_CLASSIFICATION	1.0346077796894091E-7	IMPLEMENTATION
/* rb: readable */	WITHOUT_CLASSIFICATION	0.9999984632769751	WITHOUT_CLASSIFICATION	1.5367230249454138E-6	IMPLEMENTATION
// rename is successful	WITHOUT_CLASSIFICATION	0.999999993742881	WITHOUT_CLASSIFICATION	6.257119107493658E-9	IMPLEMENTATION
// rename via Java API call wasn't successful, let's try some tricks, similar to MRI 	WITHOUT_CLASSIFICATION	0.9999999954684977	WITHOUT_CLASSIFICATION	4.53150230334149E-9	IMPLEMENTATION
// try to rename one more time	WITHOUT_CLASSIFICATION	0.9999974823727027	WITHOUT_CLASSIFICATION	2.5176272973141396E-6	IMPLEMENTATION
// Can we produce IOError which bypasses a close?	WITHOUT_CLASSIFICATION	0.999999396513483	WITHOUT_CLASSIFICATION	6.034865169083164E-7	IMPLEMENTATION
// Fast path since JNA stat is about 10x slower than this	WITHOUT_CLASSIFICATION	0.9999927025739637	WITHOUT_CLASSIFICATION	7.297426036331277E-6	IMPLEMENTATION
// RubyContinuation	WITHOUT_CLASSIFICATION	0.9999997937573424	WITHOUT_CLASSIFICATION	2.0624265766941742E-7	IMPLEMENTATION
/*     *  Constructor for internal usage (mainly for Array#|, Array#&, Array#- and Array#uniq)     *  it doesn't initialize ifNone field     */	WITHOUT_CLASSIFICATION	0.999999954168262	WITHOUT_CLASSIFICATION	4.5831737924995026E-8	IMPLEMENTATION
// 16 ?	WITHOUT_CLASSIFICATION	0.9999987399990279	WITHOUT_CLASSIFICATION	1.2600009722158974E-6	IMPLEMENTATION
// generation count for O(1) clears	WITHOUT_CLASSIFICATION	0.9999991735556569	WITHOUT_CLASSIFICATION	8.264443430658268E-7	IMPLEMENTATION
// size + 1;	WITHOUT_CLASSIFICATION	0.999994662638266	WITHOUT_CLASSIFICATION	5.337361734045552E-6	IMPLEMENTATION
// suboptimal for large hashes (> 1073741824 + 85 entries) not very likely to happen	WITHOUT_CLASSIFICATION	0.9999974982587249	WITHOUT_CLASSIFICATION	2.5017412751584663E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999975944259081	WITHOUT_CLASSIFICATION	2.405574091962902E-6	IMPLEMENTATION
// ------------------------------	WITHOUT_CLASSIFICATION	0.9999975944259081	WITHOUT_CLASSIFICATION	2.405574091962902E-6	IMPLEMENTATION
// put implementation	WITHOUT_CLASSIFICATION	0.9956719298689329	WITHOUT_CLASSIFICATION	0.0043280701310670095	IMPLEMENTATION
// get implementation	WITHOUT_CLASSIFICATION	0.9993872656433406	WITHOUT_CLASSIFICATION	6.127343566593538E-4	IMPLEMENTATION
// specialized for value	WITHOUT_CLASSIFICATION	0.99999999332378	WITHOUT_CLASSIFICATION	6.676220009828803E-9	IMPLEMENTATION
// delete implementation	WITHOUT_CLASSIFICATION	0.9998196499732961	WITHOUT_CLASSIFICATION	1.8035002670383898E-4	IMPLEMENTATION
// n.b. we need to recompute the hash in case the key object was modified	WITHOUT_CLASSIFICATION	0.9999786087254844	WITHOUT_CLASSIFICATION	2.1391274515634483E-5	IMPLEMENTATION
/* ============================     * End of hash internals     * ============================     */	WITHOUT_CLASSIFICATION	0.999999894850736	WITHOUT_CLASSIFICATION	1.0514926395769047E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================     */	WITHOUT_CLASSIFICATION	0.9999998205315671	WITHOUT_CLASSIFICATION	1.794684329264983E-7	IMPLEMENTATION
// update the hash value	WITHOUT_CLASSIFICATION	0.9999999617016089	WITHOUT_CLASSIFICATION	3.8298391097049235E-8	IMPLEMENTATION
// other hash does not contain key	WITHOUT_CLASSIFICATION	0.9999961186014168	WITHOUT_CLASSIFICATION	3.8813985832569486E-6	IMPLEMENTATION
// rb_yield_values(2,...) equivalent	WITHOUT_CLASSIFICATION	0.9999974220291495	WITHOUT_CLASSIFICATION	2.5779708504175047E-6	IMPLEMENTATION
// Satisfy java.util.Set interface (for Java integration)	WITHOUT_CLASSIFICATION	0.9999997623778943	WITHOUT_CLASSIFICATION	2.376221056414121E-7	IMPLEMENTATION
// remain where we are	WITHOUT_CLASSIFICATION	0.9999996115030958	WITHOUT_CLASSIFICATION	3.884969042117898E-7	IMPLEMENTATION
// We use file test since it is faster than a stat; also euid == uid in Java always	WITHOUT_CLASSIFICATION	0.9999999222269315	WITHOUT_CLASSIFICATION	7.777306852560215E-8	IMPLEMENTATION
// default: don't retain	WITHOUT_CLASSIFICATION	0.9999998215658635	WITHOUT_CLASSIFICATION	1.7843413645992471E-7	IMPLEMENTATION
// once hasNext has been called, we commit to next() returning // the entry it found, even if it were subsequently deleted	WITHOUT_CLASSIFICATION	0.9989078235080174	WITHOUT_CLASSIFICATION	0.0010921764919825604	IMPLEMENTATION
// Not exposed by filetest, but so similiar in nature that it is stored here	WITHOUT_CLASSIFICATION	0.9999757894829885	WITHOUT_CLASSIFICATION	2.4210517011528218E-5	IMPLEMENTATION
// We do both writable and writable_real through the same method because // in our java process effective and real userid will always be the same.	WITHOUT_CLASSIFICATION	0.9999990041590471	WITHOUT_CLASSIFICATION	9.958409528364772E-7	IMPLEMENTATION
// first try as directory	WITHOUT_CLASSIFICATION	0.9999999763003927	WITHOUT_CLASSIFICATION	2.369960718245765E-8	IMPLEMENTATION
// next as regular file	WITHOUT_CLASSIFICATION	0.9999986649369615	WITHOUT_CLASSIFICATION	1.3350630384401116E-6	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999713160095173	WITHOUT_CLASSIFICATION	2.8683990482802093E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999524059296998	WITHOUT_CLASSIFICATION	4.759407030016211E-5	IMPLEMENTATION
// NIO-based	WITHOUT_CLASSIFICATION	0.9999524059296998	WITHOUT_CLASSIFICATION	4.759407030016211E-5	IMPLEMENTATION
// Stream-based	WITHOUT_CLASSIFICATION	0.999994028577642	WITHOUT_CLASSIFICATION	5.9714223580139135E-6	IMPLEMENTATION
// special constructor that accepts stream, not channel	WITHOUT_CLASSIFICATION	0.9999783408242084	WITHOUT_CLASSIFICATION	2.165917579152211E-5	IMPLEMENTATION
/*     * We use FILE versus IO to match T_FILE in MRI.     */	WITHOUT_CLASSIFICATION	0.9999997901897694	WITHOUT_CLASSIFICATION	2.0981023065990085E-7	IMPLEMENTATION
// Constants for seek	WITHOUT_CLASSIFICATION	0.9999999911754125	WITHOUT_CLASSIFICATION	8.824587597698918E-9	IMPLEMENTATION
// confirm we're not reopening self's channel	WITHOUT_CLASSIFICATION	0.9999999973385753	WITHOUT_CLASSIFICATION	2.6614247901048246E-9	IMPLEMENTATION
// check if we're a stdio IO, and ensure we're not badly mutilated	WITHOUT_CLASSIFICATION	0.9998305563221578	WITHOUT_CLASSIFICATION	1.6944367784220435E-4	IMPLEMENTATION
// dup2 new fd into self to preserve fileno and references to it	WITHOUT_CLASSIFICATION	0.9999999598078886	WITHOUT_CLASSIFICATION	4.019211147689407E-8	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998101567	WITHOUT_CLASSIFICATION	1.898431637950274E-10	IMPLEMENTATION
// re-register the descriptor	WITHOUT_CLASSIFICATION	0.9999924041340318	WITHOUT_CLASSIFICATION	7.595865968235427E-6	IMPLEMENTATION
// since we're not actually duping the incoming channel into our handler, we need to // copy the original sync behavior from the other handler	WITHOUT_CLASSIFICATION	0.9999985494447273	WITHOUT_CLASSIFICATION	1.4505552726402179E-6	IMPLEMENTATION
// re-register	WITHOUT_CLASSIFICATION	0.9999964589572156	WITHOUT_CLASSIFICATION	3.5410427845378475E-6	IMPLEMENTATION
// A potentially previously close IO is being 'reopened'.	WITHOUT_CLASSIFICATION	0.9999994444705061	WITHOUT_CLASSIFICATION	5.555294937448088E-7	IMPLEMENTATION
/*     * Ensure that separator is valid otherwise give it the default paragraph separator.     */	WITHOUT_CLASSIFICATION	0.9999927022788732	WITHOUT_CLASSIFICATION	7.297721126783253E-6	IMPLEMENTATION
// loop until we see the nth separator char	WITHOUT_CLASSIFICATION	0.9999999943328425	WITHOUT_CLASSIFICATION	5.667157483853669E-9	IMPLEMENTATION
// if we hit EOF or reached limit then we're done	WITHOUT_CLASSIFICATION	0.999999049845806	WITHOUT_CLASSIFICATION	9.501541940101954E-7	IMPLEMENTATION
// this is for a range check, near as I can tell	WITHOUT_CLASSIFICATION	0.9999997276643706	WITHOUT_CLASSIFICATION	2.7233562943316284E-7	IMPLEMENTATION
// IO class methods.	WITHOUT_CLASSIFICATION	0.9999994064519224	WITHOUT_CLASSIFICATION	5.935480776512569E-7	IMPLEMENTATION
// use original modes	WITHOUT_CLASSIFICATION	0.999999471327661	WITHOUT_CLASSIFICATION	5.286723391260108E-7	IMPLEMENTATION
// See if we already have this descriptor open. // If so then we can mostly share the handler (keep open // file, but possibly change the mode).	WITHOUT_CLASSIFICATION	0.9999999267924691	WITHOUT_CLASSIFICATION	7.320753102452687E-8	IMPLEMENTATION
// redundant, done above as well	WITHOUT_CLASSIFICATION	0.9999999997908728	WITHOUT_CLASSIFICATION	2.091271218951416E-10	IMPLEMENTATION
// MRI behavior: swallow StandardErorrs	WITHOUT_CLASSIFICATION	0.9999183825552367	WITHOUT_CLASSIFICATION	8.16174447634199E-5	IMPLEMENTATION
// -1 == don't set permissions	WITHOUT_CLASSIFICATION	0.9999989890614774	WITHOUT_CLASSIFICATION	1.0109385225144113E-6	IMPLEMENTATION
// isRetained=true	WITHOUT_CLASSIFICATION	0.9999995931803479	WITHOUT_CLASSIFICATION	4.068196520027951E-7	IMPLEMENTATION
// This appears to be some windows-only mode.  On a java platform this is a no-op	WITHOUT_CLASSIFICATION	0.9999992504726859	WITHOUT_CLASSIFICATION	7.495273140061496E-7	IMPLEMENTATION
// if not sync, we switch to write buffered mode	WITHOUT_CLASSIFICATION	0.9999996235906721	WITHOUT_CLASSIFICATION	3.764093278568436E-7	IMPLEMENTATION
/*     * Throw bad file descriptor is we can not read on supplied descriptor.     */	WITHOUT_CLASSIFICATION	0.9999978572167727	WITHOUT_CLASSIFICATION	2.142783227273107E-6	IMPLEMENTATION
//Everything written	WITHOUT_CLASSIFICATION	0.9999649451871101	WITHOUT_CLASSIFICATION	3.5054812889855235E-5	IMPLEMENTATION
//            return len - n;	WITHOUT_CLASSIFICATION	0.9999997817723029	WITHOUT_CLASSIFICATION	2.1822769715362885E-7	IMPLEMENTATION
// Claims conversion is done via 'to_s' in docs.	WITHOUT_CLASSIFICATION	0.9999999843668106	WITHOUT_CLASSIFICATION	1.5633189358894923E-8	IMPLEMENTATION
// Of course this isn't particularly useful.	WITHOUT_CLASSIFICATION	0.9999995897832943	WITHOUT_CLASSIFICATION	4.1021670562608736E-7	IMPLEMENTATION
// Must be back on first line on rewind.	WITHOUT_CLASSIFICATION	0.999999795793446	WITHOUT_CLASSIFICATION	2.0420655397959227E-7	IMPLEMENTATION
// Register the new descriptor	WITHOUT_CLASSIFICATION	0.9999862627835685	WITHOUT_CLASSIFICATION	1.3737216431640514E-5	IMPLEMENTATION
// cleanup, raising errors if any	WITHOUT_CLASSIFICATION	0.9999995635440294	WITHOUT_CLASSIFICATION	4.3645597060726415E-7	IMPLEMENTATION
// hmmmm	WITHOUT_CLASSIFICATION	0.9999989605620073	WITHOUT_CLASSIFICATION	1.039437992664998E-6	IMPLEMENTATION
// I believe Ruby bails out with a "bug" if closing fails	WITHOUT_CLASSIFICATION	0.9999999964725709	WITHOUT_CLASSIFICATION	3.5274290823446394E-9	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec. // And why the hell does webrick pass this in as a first argument!!!!!	WITHOUT_CLASSIFICATION	0.9999999997796699	WITHOUT_CLASSIFICATION	2.203301015745344E-10	IMPLEMENTATION
// Do nothing.  FD_CLOEXEC has no meaning in JVM since we cannot really exec.	WITHOUT_CLASSIFICATION	0.9999999883578066	WITHOUT_CLASSIFICATION	1.1642193480455433E-8	IMPLEMENTATION
// Length to read	WITHOUT_CLASSIFICATION	0.9999712160646104	WITHOUT_CLASSIFICATION	2.878393538965333E-5	IMPLEMENTATION
// String/Buffer to read it into	WITHOUT_CLASSIFICATION	0.9998949628440054	WITHOUT_CLASSIFICATION	1.050371559947024E-4	IMPLEMENTATION
// cryptic for the uninitiated...	WITHOUT_CLASSIFICATION	0.9999982461118572	WITHOUT_CLASSIFICATION	1.753888142767356E-6	IMPLEMENTATION
// select until read is ready	WITHOUT_CLASSIFICATION	0.9999999958054242	WITHOUT_CLASSIFICATION	4.194575832417274E-9	IMPLEMENTATION
//        ByteList buffer = null;	WITHOUT_CLASSIFICATION	0.9999993942304535	WITHOUT_CLASSIFICATION	6.057695464498522E-7	IMPLEMENTATION
//            buffer = str.getByteList();	WITHOUT_CLASSIFICATION	0.9999995870341286	WITHOUT_CLASSIFICATION	4.1296587138026917E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999995591624694	WITHOUT_CLASSIFICATION	4.4083753059240956E-7	IMPLEMENTATION
/* rb: writable */	WITHOUT_CLASSIFICATION	0.9999998727950097	WITHOUT_CLASSIFICATION	1.2720499023200272E-7	IMPLEMENTATION
// READ_CHECK from MRI io.c	WITHOUT_CLASSIFICATION	0.9999995591624694	WITHOUT_CLASSIFICATION	4.4083753059240956E-7	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999993956411491	WITHOUT_CLASSIFICATION	6.043588508276466E-7	IMPLEMENTATION
// TODO: read into buffer using all the fread logic //        int read = openFile.getMainStream().fread(buffer);	WITHOUT_CLASSIFICATION	0.9930575985028223	WITHOUT_CLASSIFICATION	0.006942401497177736	IMPLEMENTATION
// truncate buffer string to zero, if provided	WITHOUT_CLASSIFICATION	0.9999939755494692	WITHOUT_CLASSIFICATION	6.024450530727852E-6	IMPLEMENTATION
// TODO: READ_CHECK from MRI	WITHOUT_CLASSIFICATION	0.5800489485886087	IMPLEMENTATION	0.4199510514113913	WITHOUT_CLASSIFICATION
/* class methods for IO */	WITHOUT_CLASSIFICATION	0.9999999048015229	WITHOUT_CLASSIFICATION	9.519847698251168E-8	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999845890176	WITHOUT_CLASSIFICATION	1.54109823949442E-8	IMPLEMENTATION
// write	WITHOUT_CLASSIFICATION	0.9999999070864093	WITHOUT_CLASSIFICATION	9.29135906551127E-8	IMPLEMENTATION
// Java's select doesn't do anything about this, so we leave it be.	WITHOUT_CLASSIFICATION	0.999999988278751	WITHOUT_CLASSIFICATION	1.1721248861037991E-8	IMPLEMENTATION
// make all sockets blocking as configured again // close unregisters all channels, so we can safely reset blocking modes	WITHOUT_CLASSIFICATION	0.9999939057821792	WITHOUT_CLASSIFICATION	6.094217820883403E-6	IMPLEMENTATION
// FIXME: process options	WITHOUT_CLASSIFICATION	0.9985363806119493	WITHOUT_CLASSIFICATION	0.0014636193880506363	IMPLEMENTATION
// Enebo: annotation processing forced me to do pangea method here...	WITHOUT_CLASSIFICATION	0.999946140561547	WITHOUT_CLASSIFICATION	5.385943845310177E-5	IMPLEMENTATION
// NIO based pipe	WITHOUT_CLASSIFICATION	0.9999846733888645	WITHOUT_CLASSIFICATION	1.5326611135561487E-5	IMPLEMENTATION
// not using remove(Object) here to avoid the equals() call	WITHOUT_CLASSIFICATION	0.9999537377050521	WITHOUT_CLASSIFICATION	4.626229494788479E-5	IMPLEMENTATION
// raise will also wake the thread from selection	WITHOUT_CLASSIFICATION	0.9999900378919949	WITHOUT_CLASSIFICATION	9.96210800511405E-6	IMPLEMENTATION
/* may need to handle ENC_CODERANGE_BROKEN */	WITHOUT_CLASSIFICATION	0.9957638985759405	WITHOUT_CLASSIFICATION	0.004236101424059497	IMPLEMENTATION
// TODO: rb_usascii_str_new2	WITHOUT_CLASSIFICATION	0.9923050104455502	WITHOUT_CLASSIFICATION	0.007694989554449894	IMPLEMENTATION
// If we know what method was being called, strip everything // before the call. This hides the JRuby and reflection internals.	WITHOUT_CLASSIFICATION	0.9981027588872645	WITHOUT_CLASSIFICATION	0.0018972411127354475	IMPLEMENTATION
// The class of this object	WITHOUT_CLASSIFICATION	0.9999999979231278	WITHOUT_CLASSIFICATION	2.0768723441088776E-9	IMPLEMENTATION
// zeroed by jvm	WITHOUT_CLASSIFICATION	0.9999889456139998	WITHOUT_CLASSIFICATION	1.1054386000300604E-5	IMPLEMENTATION
//objectClass.defineAnnotatedMethods(BasicObjectMethods.class);	WITHOUT_CLASSIFICATION	0.9999988365161089	WITHOUT_CLASSIFICATION	1.1634838911813164E-6	IMPLEMENTATION
// JRUBY-4113: callers should not call setTaint on immediate objects	WITHOUT_CLASSIFICATION	0.9999728221683518	WITHOUT_CLASSIFICATION	2.7177831648294133E-5	IMPLEMENTATION
// rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999889445108	WITHOUT_CLASSIFICATION	1.1055489142777395E-8	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999990833298323	WITHOUT_CLASSIFICATION	9.166701677627535E-7	IMPLEMENTATION
// 1.9 rb_check_to_integer	WITHOUT_CLASSIFICATION	0.9999997698630777	WITHOUT_CLASSIFICATION	2.3013692228868E-7	IMPLEMENTATION
// for interface impls	WITHOUT_CLASSIFICATION	0.9999997227065018	WITHOUT_CLASSIFICATION	2.7729349821413205E-7	IMPLEMENTATION
// We're cloning ourselves, so we know the result should be a RubyObject	WITHOUT_CLASSIFICATION	0.9999905438099137	WITHOUT_CLASSIFICATION	9.456190086173629E-6	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999919705919	WITHOUT_CLASSIFICATION	8.029408060033992E-9	IMPLEMENTATION
// can't use -v and stdin	WITHOUT_CLASSIFICATION	0.999999943092982	WITHOUT_CLASSIFICATION	5.690701797664826E-8	IMPLEMENTATION
// include its parent (and in turn that module's parents)	WITHOUT_CLASSIFICATION	0.9999997371033847	WITHOUT_CLASSIFICATION	2.628966152374924E-7	IMPLEMENTATION
// Equivalent of Data_Get_Struct // This will first check that the object in question is actually a T_DATA equivalent.	WITHOUT_CLASSIFICATION	0.9998381986316178	WITHOUT_CLASSIFICATION	1.6180136838214577E-4	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999974346129349	WITHOUT_CLASSIFICATION	2.5653870650862547E-6	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999938756712368	WITHOUT_CLASSIFICATION	6.124328763283804E-6	IMPLEMENTATION
// // INSTANCE VARIABLE API METHODS //	WITHOUT_CLASSIFICATION	0.9999922475726861	WITHOUT_CLASSIFICATION	7.752427313835515E-6	IMPLEMENTATION
// Struct methods	WITHOUT_CLASSIFICATION	0.9999983259316214	WITHOUT_CLASSIFICATION	1.674068378610364E-6	IMPLEMENTATION
//runtime.getWarnings().warn(ID.STRUCT_CONSTANT_REDEFINED, frame.getFile(), frame.getLine(), "redefining constant Struct::" + name, name);	WITHOUT_CLASSIFICATION	0.9999999410164612	WITHOUT_CLASSIFICATION	5.898353871778992E-8	IMPLEMENTATION
// define access methods.	WITHOUT_CLASSIFICATION	0.9999998882477669	WITHOUT_CLASSIFICATION	1.1175223308491804E-7	IMPLEMENTATION
// if we are storing a name as well, index is one too high for values	WITHOUT_CLASSIFICATION	0.9999999999645897	WITHOUT_CLASSIFICATION	3.541045569559049E-11	IMPLEMENTATION
// Struct bodies should be public by default, so set block visibility to public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999998271313735	WITHOUT_CLASSIFICATION	1.7286862651361524E-7	IMPLEMENTATION
// For binding purposes on the newly created struct types	WITHOUT_CLASSIFICATION	0.9999783332069501	WITHOUT_CLASSIFICATION	2.1666793049875483E-5	IMPLEMENTATION
// OBJ_INFECT        	WITHOUT_CLASSIFICATION	0.9999998248090433	WITHOUT_CLASSIFICATION	1.7519095686571137E-7	IMPLEMENTATION
// These call* assume ThreadContext = receiver.getRuntime().getCurrentContext()	WITHOUT_CLASSIFICATION	0.9999780523464519	WITHOUT_CLASSIFICATION	2.1947653548114463E-5	IMPLEMENTATION
// Execute iterateMethod again.	WITHOUT_CLASSIFICATION	0.9999907717822734	WITHOUT_CLASSIFICATION	9.228217726674953E-6	IMPLEMENTATION
/*     * @param nv number of times to cycle or -1 to cycle indefinitely     */	WITHOUT_CLASSIFICATION	0.9999999778270124	WITHOUT_CLASSIFICATION	2.2172987612830434E-8	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999953919261704	WITHOUT_CLASSIFICATION	4.608073829601242E-6	IMPLEMENTATION
// Atomic ?	WITHOUT_CLASSIFICATION	0.9999953919261704	WITHOUT_CLASSIFICATION	4.608073829601242E-6	IMPLEMENTATION
// MUST NOT be used across threads	WITHOUT_CLASSIFICATION	0.9999979451664337	WITHOUT_CLASSIFICATION	2.0548335662952776E-6	IMPLEMENTATION
// superClass may be null.	WITHOUT_CLASSIFICATION	0.9999999993751687	WITHOUT_CLASSIFICATION	6.248313445770889E-10	IMPLEMENTATION
// Containing class...The parent of Object is null. Object should always be last in chain.	WITHOUT_CLASSIFICATION	0.9999997178500686	WITHOUT_CLASSIFICATION	2.8214993134548344E-7	IMPLEMENTATION
// ClassId is the name of the class/module sans where it is located. // If it is null, then it an anonymous class.	WITHOUT_CLASSIFICATION	0.9999999999980377	WITHOUT_CLASSIFICATION	1.9623181506080018E-12	IMPLEMENTATION
// ClassProviders return Java class/module (in #defineOrGetClassUnder and // #defineOrGetModuleUnder) when class/module is opened using colon syntax. 	WITHOUT_CLASSIFICATION	0.9999999999999962	WITHOUT_CLASSIFICATION	3.870373215919961E-15	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999997552013	WITHOUT_CLASSIFICATION	2.4479865096206746E-10	IMPLEMENTATION
// Make sure the module we include does not already exist	WITHOUT_CLASSIFICATION	0.9999937990654999	WITHOUT_CLASSIFICATION	6.2009345000681374E-6	IMPLEMENTATION
// MRI checks all types first:	WITHOUT_CLASSIFICATION	0.9999965810549997	WITHOUT_CLASSIFICATION	3.418945000381109E-6	IMPLEMENTATION
// we need full traces, use default (slow) populator	WITHOUT_CLASSIFICATION	0.9999976590878229	WITHOUT_CLASSIFICATION	2.3409121771740186E-6	IMPLEMENTATION
// module/singleton methods are all defined public	WITHOUT_CLASSIFICATION	0.9999999989457866	WITHOUT_CLASSIFICATION	1.0542133253393046E-9	IMPLEMENTATION
// See if module is in chain...Cannot match against itself so start at superClass.	WITHOUT_CLASSIFICATION	0.9999999998918626	WITHOUT_CLASSIFICATION	1.081373131645604E-10	IMPLEMENTATION
// We can safely reference methods here instead of doing getMethods() since if we // are adding we are not using a IncludedModuleWrapper.	WITHOUT_CLASSIFICATION	0.9999999996497618	WITHOUT_CLASSIFICATION	3.5023812170790537E-10	IMPLEMENTATION
// we grab serial number first; the worst that will happen is we cache a later // update with an earlier serial number, which would just flush anyway	WITHOUT_CLASSIFICATION	0.9999969797354824	WITHOUT_CLASSIFICATION	3.020264517709313E-6	IMPLEMENTATION
// update all hierarchies into which this module has been included	WITHOUT_CLASSIFICATION	0.9999965269314993	WITHOUT_CLASSIFICATION	3.473068500812499E-6	IMPLEMENTATION
// This method is intended only for defining new classes in Ruby code, // so it uses the allocator of the specified superclass or default to // the Object allocator. It should NOT be used to define classes that require a native allocator.	WITHOUT_CLASSIFICATION	0.9999999864271074	WITHOUT_CLASSIFICATION	1.3572892487075697E-8	IMPLEMENTATION
// need to skip IncludedModuleWrappers	WITHOUT_CLASSIFICATION	0.9993511880896027	WITHOUT_CLASSIFICATION	6.488119103974452E-4	IMPLEMENTATION
// superClazz = null;	WITHOUT_CLASSIFICATION	0.9999999772091879	WITHOUT_CLASSIFICATION	2.2790812115608835E-8	IMPLEMENTATION
// reopen a java class	WITHOUT_CLASSIFICATION	0.9999999943515951	WITHOUT_CLASSIFICATION	5.648404810966342E-9	IMPLEMENTATION
// This method is intended only for defining new modules in Ruby code	WITHOUT_CLASSIFICATION	0.9999999904928744	WITHOUT_CLASSIFICATION	9.507125617576348E-9	IMPLEMENTATION
// reopen a java module	WITHOUT_CLASSIFICATION	0.9999999489261447	WITHOUT_CLASSIFICATION	5.107385529922766E-8	IMPLEMENTATION
//FIXME warning	WITHOUT_CLASSIFICATION	0.9998906375265648	WITHOUT_CLASSIFICATION	1.0936247343513814E-4	IMPLEMENTATION
// FIXME warning	WITHOUT_CLASSIFICATION	0.9998425820425368	WITHOUT_CLASSIFICATION	1.5741795746322543E-4	IMPLEMENTATION
// a normal block passed to define_method changes to do arity checking; make it a lambda	WITHOUT_CLASSIFICATION	0.999997771099458	WITHOUT_CLASSIFICATION	2.228900542024378E-6	IMPLEMENTATION
// for zsupers in define_method (blech!) we tell the proc scope to act as the "argument" scope	WITHOUT_CLASSIFICATION	0.9999999965625515	WITHOUT_CLASSIFICATION	3.4374486031002923E-9	IMPLEMENTATION
// just using required is broken...but no more broken than before zsuper refactoring	WITHOUT_CLASSIFICATION	0.9999999935505217	WITHOUT_CLASSIFICATION	6.449478201411913E-9	IMPLEMENTATION
// class and module bodies default to public, so make the block's visibility public. JRUBY-1185.	WITHOUT_CLASSIFICATION	0.9999999993537464	WITHOUT_CLASSIFICATION	6.462534910552144E-10	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999997121888	WITHOUT_CLASSIFICATION	2.878111526440088E-10	IMPLEMENTATION
// MRI error message says Class, even though Module is ok 	WITHOUT_CLASSIFICATION	0.9999998107761459	WITHOUT_CLASSIFICATION	1.8922385422957092E-7	IMPLEMENTATION
// scan class hierarchy for module	WITHOUT_CLASSIFICATION	0.999999999282248	WITHOUT_CLASSIFICATION	7.177520012623861E-10	IMPLEMENTATION
/* Module class methods */	WITHOUT_CLASSIFICATION	0.9999999991241735	WITHOUT_CLASSIFICATION	8.758264646051136E-10	IMPLEMENTATION
// Note: we change current frames visibility here because the methods which call // this method are all "fast" (e.g. they do not created their own frame).	WITHOUT_CLASSIFICATION	0.9999927039615996	WITHOUT_CLASSIFICATION	7.296038400470668E-6	IMPLEMENTATION
// next in hierarchy is an included version of the module we're attempting, // so we skip including it	WITHOUT_CLASSIFICATION	0.9999995283027446	WITHOUT_CLASSIFICATION	4.7169725538195417E-7	IMPLEMENTATION
// if we haven't encountered a real superclass, use the found module as the new inclusion point	WITHOUT_CLASSIFICATION	0.9999999999384681	WITHOUT_CLASSIFICATION	6.153193225440702E-11	IMPLEMENTATION
// build a list of all modules to consider for inclusion	WITHOUT_CLASSIFICATION	0.9999978014710978	WITHOUT_CLASSIFICATION	2.1985289021729123E-6	IMPLEMENTATION
// if the insertion point is a class, update subclass lists	WITHOUT_CLASSIFICATION	0.9999999999381098	WITHOUT_CLASSIFICATION	6.189014429016639E-11	IMPLEMENTATION
// if there's a non-null superclass, we're including into a normal class hierarchy; // update subclass relationships to avoid stale parent/child relationships	WITHOUT_CLASSIFICATION	0.9999999967866541	WITHOUT_CLASSIFICATION	3.213346025472155E-9	IMPLEMENTATION
// ////////////////// CLASS VARIABLE RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999986009635444	WITHOUT_CLASSIFICATION	1.3990364555335641E-6	IMPLEMENTATION
// ////////////////// CONSTANT RUBY METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999987515653752	WITHOUT_CLASSIFICATION	1.2484346247871088E-6	IMPLEMENTATION
// Note: includes part of fix for JRUBY-1339	WITHOUT_CLASSIFICATION	0.9999942215315433	WITHOUT_CLASSIFICATION	5.778468456785474E-6	IMPLEMENTATION
// ////////////////// CLASS VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999988407236883	WITHOUT_CLASSIFICATION	1.1592763116584237E-6	IMPLEMENTATION
// Wrong Parameter ?	WITHOUT_CLASSIFICATION	0.9999993743535557	WITHOUT_CLASSIFICATION	6.25646444331347E-7	IMPLEMENTATION
// not actually called anywhere (all known uses call the fast version)	WITHOUT_CLASSIFICATION	0.9942471081799906	WITHOUT_CLASSIFICATION	0.005752891820009292	IMPLEMENTATION
// Not that is loaded loop around to resolve it next pass	WITHOUT_CLASSIFICATION	0.9983634458139355	WITHOUT_CLASSIFICATION	0.0016365541860644634	IMPLEMENTATION
// if adding a module under a constant name, set that module's basename to the constant name	WITHOUT_CLASSIFICATION	0.9999999501441086	WITHOUT_CLASSIFICATION	4.985589136540959E-8	IMPLEMENTATION
// Fix for JRUBY-1339 - search hierarchy for constant	WITHOUT_CLASSIFICATION	0.9999971567537994	WITHOUT_CLASSIFICATION	2.843246200459671E-6	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999944651426288	WITHOUT_CLASSIFICATION	5.534857371194414E-6	IMPLEMENTATION
// removes and returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999927654847689	WITHOUT_CLASSIFICATION	7.234515230996816E-6	IMPLEMENTATION
// we can't rename a file while it's open in windows	WITHOUT_CLASSIFICATION	0.9999996950989476	WITHOUT_CLASSIFICATION	3.0490105235466576E-7	IMPLEMENTATION
//reopen	WITHOUT_CLASSIFICATION	0.9999881729445125	WITHOUT_CLASSIFICATION	1.1827055487545977E-5	IMPLEMENTATION
// ARGF methods	WITHOUT_CLASSIFICATION	0.9999783602145518	WITHOUT_CLASSIFICATION	2.1639785448196738E-5	IMPLEMENTATION
//         data.currentFile.callMethod(context, "lineno=", line);	WITHOUT_CLASSIFICATION	0.9999937943268935	WITHOUT_CLASSIFICATION	6.205673106530271E-6	IMPLEMENTATION
// one optional, one required args	WITHOUT_CLASSIFICATION	0.9999997968551693	WITHOUT_CLASSIFICATION	2.0314483063548454E-7	IMPLEMENTATION
// one optional and no required args	WITHOUT_CLASSIFICATION	0.999999733395058	WITHOUT_CLASSIFICATION	2.6660494196115327E-7	IMPLEMENTATION
// try to get errno value out of the class	WITHOUT_CLASSIFICATION	0.9999999993492141	WITHOUT_CLASSIFICATION	6.507859881878752E-10	IMPLEMENTATION
// we got a valid errno value	WITHOUT_CLASSIFICATION	0.9999986955073753	WITHOUT_CLASSIFICATION	1.3044926246585754E-6	IMPLEMENTATION
// Ensure we're not running on GCJ, since it's not supported and leads to weird errors	WITHOUT_CLASSIFICATION	0.9999881602160665	WITHOUT_CLASSIFICATION	1.1839783933534576E-5	IMPLEMENTATION
// print out as a nice Ruby backtrace	WITHOUT_CLASSIFICATION	0.9999999780007323	WITHOUT_CLASSIFICATION	2.1999267741757713E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999720897388	WITHOUT_CLASSIFICATION	2.7910261254923152E-8	IMPLEMENTATION
// set thread context JRuby classloader here, for the main thread	WITHOUT_CLASSIFICATION	0.9999981824600397	WITHOUT_CLASSIFICATION	1.8175399603517447E-6	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999793651133	WITHOUT_CLASSIFICATION	2.0634886635312747E-8	IMPLEMENTATION
// no script to run, return success below	WITHOUT_CLASSIFICATION	0.9999990473216527	WITHOUT_CLASSIFICATION	9.526783474410469E-7	IMPLEMENTATION
// Skip /usr/bin/env if it's first	WITHOUT_CLASSIFICATION	0.9999993319372401	WITHOUT_CLASSIFICATION	6.680627599355461E-7	IMPLEMENTATION
// Skip any assignments if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999998604303	WITHOUT_CLASSIFICATION	1.3956970049370068E-10	IMPLEMENTATION
// Skip any commandline args if /usr/bin/env is in play	WITHOUT_CLASSIFICATION	0.9999999981641722	WITHOUT_CLASSIFICATION	1.8358279069941572E-9	IMPLEMENTATION
// ignore error	WITHOUT_CLASSIFICATION	0.9999576230809699	WITHOUT_CLASSIFICATION	4.2376919029993575E-5	IMPLEMENTATION
// ////////////////// COMMON CONSTANT / CVAR METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999992370552842	WITHOUT_CLASSIFICATION	7.62944715783928E-7	IMPLEMENTATION
// ////////////////// INTERNAL MODULE VARIABLE API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999968045020605	WITHOUT_CLASSIFICATION	3.195497939512519E-6	IMPLEMENTATION
// ////////////////// LOW-LEVEL CONSTANT INTERFACE //////////////// // // fetch/store/list constants for this module //	WITHOUT_CLASSIFICATION	0.9999999980073944	WITHOUT_CLASSIFICATION	1.992605672365693E-9	IMPLEMENTATION
// odd	WITHOUT_CLASSIFICATION	0.9999984449620151	WITHOUT_CLASSIFICATION	1.5550379848821987E-6	IMPLEMENTATION
// JRubyClient	WITHOUT_CLASSIFICATION	0.9999990588376687	WITHOUT_CLASSIFICATION	9.411623312642431E-7	IMPLEMENTATION
/*     * x = mantissa * 2 ** exponent     *     * Where mantissa is in the range of [.5, 1)     *     */	WITHOUT_CLASSIFICATION	0.999999693849402	WITHOUT_CLASSIFICATION	3.0615059803330594E-7	IMPLEMENTATION
// Make mantissa same sign so we only have one code path.	WITHOUT_CLASSIFICATION	0.9999232886136361	WITHOUT_CLASSIFICATION	7.671138636392095E-5	IMPLEMENTATION
// Increase value to hit lower range.	WITHOUT_CLASSIFICATION	0.9999994828031106	WITHOUT_CLASSIFICATION	5.171968895078337E-7	IMPLEMENTATION
/*     * r = x * 2 ** y     */	WITHOUT_CLASSIFICATION	0.99999837155568	WITHOUT_CLASSIFICATION	1.6284443199927178E-6	IMPLEMENTATION
/*  0! */	WITHOUT_CLASSIFICATION	0.9999987247733206	WITHOUT_CLASSIFICATION	1.2752266793463941E-6	IMPLEMENTATION
/*  1! */	WITHOUT_CLASSIFICATION	0.9999965599114675	WITHOUT_CLASSIFICATION	3.4400885325003256E-6	IMPLEMENTATION
/*  2! */	WITHOUT_CLASSIFICATION	0.9999983052024591	WITHOUT_CLASSIFICATION	1.6947975407959522E-6	IMPLEMENTATION
/*  3! */	WITHOUT_CLASSIFICATION	0.9999986191738414	WITHOUT_CLASSIFICATION	1.380826158653243E-6	IMPLEMENTATION
/*  4! */	WITHOUT_CLASSIFICATION	0.9999982004640771	WITHOUT_CLASSIFICATION	1.7995359229301406E-6	IMPLEMENTATION
/*  5! */	WITHOUT_CLASSIFICATION	0.9999984558532864	WITHOUT_CLASSIFICATION	1.5441467135944747E-6	IMPLEMENTATION
/*  6! */	WITHOUT_CLASSIFICATION	0.9999982234310215	WITHOUT_CLASSIFICATION	1.776568978574014E-6	IMPLEMENTATION
/*  7! */	WITHOUT_CLASSIFICATION	0.9999985533939643	WITHOUT_CLASSIFICATION	1.4466060357834951E-6	IMPLEMENTATION
/*  8! */	WITHOUT_CLASSIFICATION	0.9999976914217299	WITHOUT_CLASSIFICATION	2.308578270100591E-6	IMPLEMENTATION
/*  9! */	WITHOUT_CLASSIFICATION	0.9999981763965127	WITHOUT_CLASSIFICATION	1.8236034872667002E-6	IMPLEMENTATION
/* 11! */	WITHOUT_CLASSIFICATION	0.9999970623409972	WITHOUT_CLASSIFICATION	2.9376590028756546E-6	IMPLEMENTATION
/* 12! */	WITHOUT_CLASSIFICATION	0.999997484667282	WITHOUT_CLASSIFICATION	2.5153327179903842E-6	IMPLEMENTATION
/* 13! */	WITHOUT_CLASSIFICATION	0.9999970886677104	WITHOUT_CLASSIFICATION	2.911332289602615E-6	IMPLEMENTATION
/* 15! */	WITHOUT_CLASSIFICATION	0.9999968245973797	WITHOUT_CLASSIFICATION	3.175402620242868E-6	IMPLEMENTATION
/* 16! */	WITHOUT_CLASSIFICATION	0.999996373133996	WITHOUT_CLASSIFICATION	3.6268660039003757E-6	IMPLEMENTATION
/* 17! */	WITHOUT_CLASSIFICATION	0.999997230373746	WITHOUT_CLASSIFICATION	2.7696262539217374E-6	IMPLEMENTATION
/* 19! */	WITHOUT_CLASSIFICATION	0.9999963558701319	WITHOUT_CLASSIFICATION	3.64412986806895E-6	IMPLEMENTATION
/* 20! */	WITHOUT_CLASSIFICATION	0.9999991210503586	WITHOUT_CLASSIFICATION	8.789496412812598E-7	IMPLEMENTATION
/* 21! */	WITHOUT_CLASSIFICATION	0.9999971585151226	WITHOUT_CLASSIFICATION	2.8414848773231066E-6	IMPLEMENTATION
// Static constants	WITHOUT_CLASSIFICATION	0.9999995263858033	WITHOUT_CLASSIFICATION	4.73614196704392E-7	IMPLEMENTATION
// Clean-up string representation so that it could be understood // by Java's BigDecimal. Not terribly efficient for now. // 1. MRI allows d and D as exponent separators	WITHOUT_CLASSIFICATION	0.9988034464508656	WITHOUT_CLASSIFICATION	0.0011965535491344935	IMPLEMENTATION
// 2. MRI allows underscores anywhere	WITHOUT_CLASSIFICATION	0.9998851222117711	WITHOUT_CLASSIFICATION	1.1487778822884102E-4	IMPLEMENTATION
// 3. MRI ignores the trailing junk	WITHOUT_CLASSIFICATION	0.9999992353650846	WITHOUT_CLASSIFICATION	7.646349154539892E-7	IMPLEMENTATION
// MRI behavior: -0 and +0 are two different things	WITHOUT_CLASSIFICATION	0.999995392203308	WITHOUT_CLASSIFICATION	4.607796691907164E-6	IMPLEMENTATION
// Java and MRI definitions of modulo are different.	WITHOUT_CLASSIFICATION	0.9999997039697103	WITHOUT_CLASSIFICATION	2.960302896292086E-7	IMPLEMENTATION
// Java and MRI definitions of remainder are the same.	WITHOUT_CLASSIFICATION	0.9999988272848884	WITHOUT_CLASSIFICATION	1.1727151115324151E-6	IMPLEMENTATION
// Note: MRI has a very non-trivial way of calculating the precision, // so we use very simple approximation here:	WITHOUT_CLASSIFICATION	0.9777355746129595	WITHOUT_CLASSIFICATION	0.022264425387040543	IMPLEMENTATION
// Iteration variables, for the square root x and the reciprocal v // initial x:  x0 ~ sqrt() // initial v:  v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999990355284462	WITHOUT_CLASSIFICATION	9.644715537930146E-7	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999982652481473	WITHOUT_CLASSIFICATION	1.7347518526751773E-6	IMPLEMENTATION
// TODO: why this: .setResult();	WITHOUT_CLASSIFICATION	0.9748137154952655	IMPLEMENTATION	0.02518628450473451	WITHOUT_CLASSIFICATION
// integer division	WITHOUT_CLASSIFICATION	0.9999995333830893	WITHOUT_CLASSIFICATION	4.6661691064809815E-7	IMPLEMENTATION
// MRI behavior: "If digits is 0, the result is the same as the / operator."	WITHOUT_CLASSIFICATION	0.9999999990955805	WITHOUT_CLASSIFICATION	9.044194596573713E-10	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998661428163	WITHOUT_CLASSIFICATION	1.3385718376034766E-7	IMPLEMENTATION
// rounding neccessary	WITHOUT_CLASSIFICATION	0.9999998661428163	WITHOUT_CLASSIFICATION	1.3385718376034766E-7	IMPLEMENTATION
// Java and MRI definitions of divmod are different.        	WITHOUT_CLASSIFICATION	0.9999998696170013	WITHOUT_CLASSIFICATION	1.3038299875231468E-7	IMPLEMENTATION
// JRUBY-914: Java 1.4 BigDecimal does not allow a negative scale, so we have to simulate it	WITHOUT_CLASSIFICATION	0.9999437407659684	WITHOUT_CLASSIFICATION	5.625923403158908E-5	IMPLEMENTATION
// shift the decimal point just to the right of the digit to be rounded to (divide by 10**(abs(scale))) // -1 -> 10's digit, -2 -> 100's digit, etc.	WITHOUT_CLASSIFICATION	0.9999999999468971	WITHOUT_CLASSIFICATION	5.310290854970074E-11	IMPLEMENTATION
// ...round to that digit	WITHOUT_CLASSIFICATION	0.9999958024793872	WITHOUT_CLASSIFICATION	4.197520612793739E-6	IMPLEMENTATION
// ...and shift the result back to the left (multiply by 10**(abs(scale)))	WITHOUT_CLASSIFICATION	0.9999831950686258	WITHOUT_CLASSIFICATION	1.6804931374187813E-5	IMPLEMENTATION
//this relies on the Ruby rounding enumerations == Java ones, which they (currently) all are	WITHOUT_CLASSIFICATION	0.9999987113472694	WITHOUT_CLASSIFICATION	1.2886527305421844E-6	IMPLEMENTATION
// sign	WITHOUT_CLASSIFICATION	0.9999997900223724	WITHOUT_CLASSIFICATION	2.099776276687276E-7	IMPLEMENTATION
// significant digits and exponent	WITHOUT_CLASSIFICATION	0.9999976991412932	WITHOUT_CLASSIFICATION	2.30085870688892E-6	IMPLEMENTATION
// normalize the value	WITHOUT_CLASSIFICATION	0.9999936845730026	WITHOUT_CLASSIFICATION	6.315426997466646E-6	IMPLEMENTATION
// base	WITHOUT_CLASSIFICATION	0.999999811782841	WITHOUT_CLASSIFICATION	1.8821715890677136E-7	IMPLEMENTATION
// NOTE: MRI's sqrt precision is limited by 100, // but we allow values more than 100.	WITHOUT_CLASSIFICATION	0.9998687555435901	WITHOUT_CLASSIFICATION	1.312444564098319E-4	IMPLEMENTATION
// just in case, add a bit of extra precision	WITHOUT_CLASSIFICATION	0.9999999848230852	WITHOUT_CLASSIFICATION	1.5176914745710022E-8	IMPLEMENTATION
// eh?!	WITHOUT_CLASSIFICATION	0.9999993364840353	WITHOUT_CLASSIFICATION	6.635159647455548E-7	IMPLEMENTATION
// Note: #fix has only no-arg form, but truncate allows optional parameter.	WITHOUT_CLASSIFICATION	0.9999999712341394	WITHOUT_CLASSIFICATION	2.876586060248216E-8	IMPLEMENTATION
// General number and precision checking	WITHOUT_CLASSIFICATION	0.9999949874771348	WITHOUT_CLASSIFICATION	5.012522865192135E-6	IMPLEMENTATION
// the requested precision	WITHOUT_CLASSIFICATION	0.999995409314746	WITHOUT_CLASSIFICATION	4.5906852540418096E-6	IMPLEMENTATION
// Proc class	WITHOUT_CLASSIFICATION	0.9999999718476068	WITHOUT_CLASSIFICATION	2.8152393175799338E-8	IMPLEMENTATION
//.append("  -x[directory]   strip off text before #!ruby line and perhaps cd to directory\n")	WITHOUT_CLASSIFICATION	0.9999999410186897	WITHOUT_CLASSIFICATION	5.898131031665093E-8	IMPLEMENTATION
// even shift.. // ..floors to 62 or 63 bit BigInteger	WITHOUT_CLASSIFICATION	0.999977975765679	WITHOUT_CLASSIFICATION	2.202423432102185E-5	IMPLEMENTATION
// 5 -> 2, -5 -> -3 need half a scale more..	WITHOUT_CLASSIFICATION	0.9999951910891433	WITHOUT_CLASSIFICATION	4.808910856659061E-6	IMPLEMENTATION
// ..where 100 -> 10 shifts the scale	WITHOUT_CLASSIFICATION	0.999999955990396	WITHOUT_CLASSIFICATION	4.400960393590395E-8	IMPLEMENTATION
// Initial x - use double root - multiply by halfBack to unshift - set new scale	WITHOUT_CLASSIFICATION	0.9999989952061663	WITHOUT_CLASSIFICATION	1.0047938336938475E-6	IMPLEMENTATION
// x0 ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999905208096034	WITHOUT_CLASSIFICATION	9.47919039673197E-6	IMPLEMENTATION
// for prec 15 root x0 must surely be OK // return small prec roots without iterations	WITHOUT_CLASSIFICATION	0.9999997826366004	WITHOUT_CLASSIFICATION	2.173633996314489E-7	IMPLEMENTATION
// Initial v - the reciprocal // v0 = 1/(2*x)	WITHOUT_CLASSIFICATION	0.9999889758780552	WITHOUT_CLASSIFICATION	1.1024121944759603E-5	IMPLEMENTATION
// Collect iteration precisions beforehand	WITHOUT_CLASSIFICATION	0.9999777346757902	WITHOUT_CLASSIFICATION	2.2265324209764837E-5	IMPLEMENTATION
// assume nInit = 16 <= prec	WITHOUT_CLASSIFICATION	0.9999999873189656	WITHOUT_CLASSIFICATION	1.2681034413004468E-8	IMPLEMENTATION
// The loop of "Square Root by Coupled Newton Iteration"	WITHOUT_CLASSIFICATION	0.9999985941648958	WITHOUT_CLASSIFICATION	1.4058351042693493E-6	IMPLEMENTATION
// Increase precision - next iteration supplies n exact digits	WITHOUT_CLASSIFICATION	0.9999776535406498	WITHOUT_CLASSIFICATION	2.2346459350084783E-5	IMPLEMENTATION
// Next x                                        // e = d - x^2	WITHOUT_CLASSIFICATION	0.9999869080126005	WITHOUT_CLASSIFICATION	1.3091987399466747E-5	IMPLEMENTATION
// x += e*v     ~ sqrt()	WITHOUT_CLASSIFICATION	0.9999949315671813	WITHOUT_CLASSIFICATION	5.068432818599926E-6	IMPLEMENTATION
// root x is ready!	WITHOUT_CLASSIFICATION	0.9999830012652686	WITHOUT_CLASSIFICATION	1.6998734731396612E-5	IMPLEMENTATION
// Next v                                        // g = 1 - 2*x*v	WITHOUT_CLASSIFICATION	0.9999731508081725	WITHOUT_CLASSIFICATION	2.684919182748945E-5	IMPLEMENTATION
// v += g*v     ~ 1/2/sqrt()	WITHOUT_CLASSIFICATION	0.9999937773082933	WITHOUT_CLASSIFICATION	6.222691706646946E-6	IMPLEMENTATION
// RubyBigdecimal	WITHOUT_CLASSIFICATION	0.9999989566085244	WITHOUT_CLASSIFICATION	1.043391475486452E-6	IMPLEMENTATION
// c: bind_eval	WITHOUT_CLASSIFICATION	0.9999995187270994	WITHOUT_CLASSIFICATION	4.812729005813585E-7	IMPLEMENTATION
/*  ================     *  Module Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999999646618487	WITHOUT_CLASSIFICATION	3.5338151303099484E-8	IMPLEMENTATION
// from CommandlineParser	WITHOUT_CLASSIFICATION	0.9999999837785102	WITHOUT_CLASSIFICATION	1.622148987791205E-8	IMPLEMENTATION
// This property is a Boolean, to allow three values, so it can match MRI's nil, false and true	WITHOUT_CLASSIFICATION	0.9987637754065775	WITHOUT_CLASSIFICATION	0.0012362245934225736	IMPLEMENTATION
// default ClassCache using jitMax as a soft upper bound	WITHOUT_CLASSIFICATION	0.9999999998338266	WITHOUT_CLASSIFICATION	1.6617330892061922E-10	IMPLEMENTATION
// Until we get a little more solid on 1.9 support we will only run interpreted mode	WITHOUT_CLASSIFICATION	0.9981423272917737	WITHOUT_CLASSIFICATION	0.00185767270822625	IMPLEMENTATION
// Setting the loader needs to reset the class cache	WITHOUT_CLASSIFICATION	0.9999962996393588	WITHOUT_CLASSIFICATION	3.7003606411361623E-6	IMPLEMENTATION
// try the normal property first	WITHOUT_CLASSIFICATION	0.9999934369781691	WITHOUT_CLASSIFICATION	6.56302183088537E-6	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9992425926174986	WITHOUT_CLASSIFICATION	7.574073825014338E-4	IMPLEMENTATION
// verify it if it's there	WITHOUT_CLASSIFICATION	0.9992425926174986	WITHOUT_CLASSIFICATION	7.574073825014338E-4	IMPLEMENTATION
// try loading from classloader resources	WITHOUT_CLASSIFICATION	0.9999999971746382	WITHOUT_CLASSIFICATION	2.82536185472008E-9	IMPLEMENTATION
// otherwise fall back on system temp location	WITHOUT_CLASSIFICATION	0.999862511711012	WITHOUT_CLASSIFICATION	1.3748828898796936E-4	IMPLEMENTATION
// We require the home directory to be absolute	WITHOUT_CLASSIFICATION	0.9999998674702311	WITHOUT_CLASSIFICATION	1.3252976891540281E-7	IMPLEMENTATION
//consume the file name	WITHOUT_CLASSIFICATION	0.9999986859220835	WITHOUT_CLASSIFICATION	1.3140779164260978E-6	IMPLEMENTATION
// Specify something that can't separate	WITHOUT_CLASSIFICATION	0.999999739547901	WITHOUT_CLASSIFICATION	2.604520990657054E-7	IMPLEMENTATION
// try cwd first	WITHOUT_CLASSIFICATION	0.9999993457337139	WITHOUT_CLASSIFICATION	6.542662861219826E-7	IMPLEMENTATION
// ruby interpreter compatibilty // Usage: ruby [switches] [--] [programfile] [arguments])	WITHOUT_CLASSIFICATION	0.9999985230824125	WITHOUT_CLASSIFICATION	1.4769175874533614E-6	IMPLEMENTATION
// KCode.NONE is used because KCODE does not affect parse in Ruby 1.8 // if Ruby 2.0 encoding pragmas are implemented, this will need to change	WITHOUT_CLASSIFICATION	0.9940004403373391	WITHOUT_CLASSIFICATION	0.005999559662660857	IMPLEMENTATION
// @JRubyMethod(name = "complex?")	WITHOUT_CLASSIFICATION	0.9999983840209701	WITHOUT_CLASSIFICATION	1.6159790298791905E-6	IMPLEMENTATION
// @JRubyMethod(name = "exact?")	WITHOUT_CLASSIFICATION	0.9999998433845093	WITHOUT_CLASSIFICATION	1.5661549065139929E-7	IMPLEMENTATION
// @JRubyMethod(name = "inexact?")	WITHOUT_CLASSIFICATION	0.9999998848142613	WITHOUT_CLASSIFICATION	1.1518573874632561E-7	IMPLEMENTATION
// symbol string *must* be interned	WITHOUT_CLASSIFICATION	0.9999997381103014	WITHOUT_CLASSIFICATION	2.618896986276538E-7	IMPLEMENTATION
//        assert internedSymbol == internedSymbol.intern() : internedSymbol + " is not interned";	WITHOUT_CLASSIFICATION	0.9999998529547177	WITHOUT_CLASSIFICATION	1.4704528225892066E-7	IMPLEMENTATION
/* Symbol class methods.     *      */	WITHOUT_CLASSIFICATION	0.9999999986877618	WITHOUT_CLASSIFICATION	1.3122382316548486E-9	IMPLEMENTATION
// TODO: 1.9 rb_enc_symname_p	WITHOUT_CLASSIFICATION	0.8639898189570406	WITHOUT_CLASSIFICATION	0.13601018104295945	IMPLEMENTATION
// This is needed to unpack stuff	WITHOUT_CLASSIFICATION	0.9987916634413536	WITHOUT_CLASSIFICATION	0.0012083365586463355	IMPLEMENTATION
// we already confirmed above that length > 0	WITHOUT_CLASSIFICATION	0.9999991159731466	WITHOUT_CLASSIFICATION	8.840268534838826E-7	IMPLEMENTATION
// *must* be power of 2!	WITHOUT_CLASSIFICATION	0.9999999801725733	WITHOUT_CLASSIFICATION	1.98274268001061E-8	IMPLEMENTATION
// note all fields are final -- rehash creates new entries when necessary. // as documented in java.util.concurrent.ConcurrentHashMap.java, that will // statistically affect only a small percentage (< 20%) of entries for a given rehash.	WITHOUT_CLASSIFICATION	0.9973857288394067	WITHOUT_CLASSIFICATION	0.0026142711605932857	IMPLEMENTATION
//            assert internedName == internedName.intern() : internedName + " is not interned";	WITHOUT_CLASSIFICATION	0.9999996948266854	WITHOUT_CLASSIFICATION	3.05173314662147E-7	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999988333865569	WITHOUT_CLASSIFICATION	1.166613443160605E-6	IMPLEMENTATION
// try lookup again under lock	WITHOUT_CLASSIFICATION	0.9999988333865569	WITHOUT_CLASSIFICATION	1.166613443160605E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// backwards-compatibility, but threadsafe now	WITHOUT_CLASSIFICATION	0.9999996935530491	WITHOUT_CLASSIFICATION	3.0644695097591626E-7	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999990275510162	WITHOUT_CLASSIFICATION	9.724489838802946E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999973263816446	WITHOUT_CLASSIFICATION	2.673618355408506E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999545294214	WITHOUT_CLASSIFICATION	4.547057869609477E-8	IMPLEMENTATION
// Check the length every iteration, since // the block can modify this string.	WITHOUT_CLASSIFICATION	0.9999976740220157	WITHOUT_CLASSIFICATION	2.325977984351123E-6	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.99999999276546	WITHOUT_CLASSIFICATION	7.234539904874795E-9	IMPLEMENTATION
// not so backwards-compatible here, but no one should have been // calling this anyway.	WITHOUT_CLASSIFICATION	0.995082311234368	WITHOUT_CLASSIFICATION	0.004917688765632102	IMPLEMENTATION
// Profile	WITHOUT_CLASSIFICATION	0.9999990308350266	WITHOUT_CLASSIFICATION	9.691649733675713E-7	IMPLEMENTATION
//static private final String TRANSLIT = "//translit";	WITHOUT_CLASSIFICATION	0.9999984443356982	WITHOUT_CLASSIFICATION	1.5556643018455834E-6	IMPLEMENTATION
// treat start and end as start...end for end >= 0, start..end for end < 0	WITHOUT_CLASSIFICATION	0.9999998175698046	WITHOUT_CLASSIFICATION	1.8243019544764356E-7	IMPLEMENTATION
// invalid ranges result in an empty string	WITHOUT_CLASSIFICATION	0.9999999941632196	WITHOUT_CLASSIFICATION	5.836780380756397E-9	IMPLEMENTATION
// Methods of the Nil Class (nil_*):	WITHOUT_CLASSIFICATION	0.9999999868066022	WITHOUT_CLASSIFICATION	1.3193397823682421E-8	IMPLEMENTATION
// Has read/write been closed or is it still open for business	WITHOUT_CLASSIFICATION	0.9999999996277528	WITHOUT_CLASSIFICATION	3.72247214777104E-10	IMPLEMENTATION
// Support IO modes that this object was opened with	WITHOUT_CLASSIFICATION	0.9999606364536407	WITHOUT_CLASSIFICATION	3.936354635927722E-5	IMPLEMENTATION
// must let original string know we're modifying, so shared buffers aren't damaged	WITHOUT_CLASSIFICATION	0.9999901440624491	WITHOUT_CLASSIFICATION	9.85593755093488E-6	IMPLEMENTATION
// reset the state	WITHOUT_CLASSIFICATION	0.999986663416869	WITHOUT_CLASSIFICATION	1.3336583130884243E-5	IMPLEMENTATION
// Tainting here if we ever want it. (secure 4)	WITHOUT_CLASSIFICATION	0.9999638634751306	WITHOUT_CLASSIFICATION	3.6136524869472376E-5	IMPLEMENTATION
// rb_match_busy	WITHOUT_CLASSIFICATION	0.9999999708817129	WITHOUT_CLASSIFICATION	2.911828717331513E-8	IMPLEMENTATION
//str is frozen	WITHOUT_CLASSIFICATION	0.9999922577239405	WITHOUT_CLASSIFICATION	7.742276059595007E-6	IMPLEMENTATION
// MRI also does a pointer comparison here	WITHOUT_CLASSIFICATION	0.9999674167500846	WITHOUT_CLASSIFICATION	3.258324991533423E-5	IMPLEMENTATION
// JRubyServer	WITHOUT_CLASSIFICATION	0.9999966200113729	WITHOUT_CLASSIFICATION	3.379988627088329E-6	IMPLEMENTATION
// Class.allocate object is not allocatable before it is initialized	WITHOUT_CLASSIFICATION	0.9999997087966708	WITHOUT_CLASSIFICATION	2.912033292840882E-7	IMPLEMENTATION
// boot the Object class 	WITHOUT_CLASSIFICATION	0.9999999908356076	WITHOUT_CLASSIFICATION	9.164392442572507E-9	IMPLEMENTATION
// Methods of the Object class (rb_obj_*):	WITHOUT_CLASSIFICATION	0.9999999919705919	WITHOUT_CLASSIFICATION	8.029408060033992E-9	IMPLEMENTATION
// update superclass reference	WITHOUT_CLASSIFICATION	0.9999999997552013	WITHOUT_CLASSIFICATION	2.4479865096206746E-10	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999980342687663	WITHOUT_CLASSIFICATION	1.9657312336566676E-6	IMPLEMENTATION
// This is a non-standard method; have we decided to start extending Ruby? //classClass.defineFastMethod("subclasses", callbackFactory.getFastOptMethod("subclasses"));	WITHOUT_CLASSIFICATION	0.9999999948193886	WITHOUT_CLASSIFICATION	5.18061135149403E-9	IMPLEMENTATION
// boot the Module and Class classes	WITHOUT_CLASSIFICATION	0.9999999986832203	WITHOUT_CLASSIFICATION	1.3167797338292357E-9	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999182392384	WITHOUT_CLASSIFICATION	8.176076156747894E-8	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999949259007783	WITHOUT_CLASSIFICATION	5.0740992216255235E-6	IMPLEMENTATION
// use parent's marshal	WITHOUT_CLASSIFICATION	0.9999949259007783	WITHOUT_CLASSIFICATION	5.0740992216255235E-6	IMPLEMENTATION
// could be pulled down to RubyClass in future // rb_class_boot	WITHOUT_CLASSIFICATION	0.9999999960862634	WITHOUT_CLASSIFICATION	3.913736635813873E-9	IMPLEMENTATION
// remove us from old superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999834524098	WITHOUT_CLASSIFICATION	1.6547590248188398E-8	IMPLEMENTATION
// add us to new superclass's child classes	WITHOUT_CLASSIFICATION	0.9999999471853857	WITHOUT_CLASSIFICATION	5.2814614452557775E-8	IMPLEMENTATION
// update all subclasses	WITHOUT_CLASSIFICATION	0.999999996387953	WITHOUT_CLASSIFICATION	3.6120469215840956E-9	IMPLEMENTATION
// fields to hold Ruby and RubyClass references	WITHOUT_CLASSIFICATION	0.9999999484886289	WITHOUT_CLASSIFICATION	5.151137109176342E-8	IMPLEMENTATION
// static initializing method	WITHOUT_CLASSIFICATION	0.9999998756530362	WITHOUT_CLASSIFICATION	1.2434696385825795E-7	IMPLEMENTATION
// standard constructor that accepts Ruby, RubyClass	WITHOUT_CLASSIFICATION	0.9999996327885922	WITHOUT_CLASSIFICATION	3.672114077598992E-7	IMPLEMENTATION
// no-arg constructor using static references to Ruby and RubyClass	WITHOUT_CLASSIFICATION	0.9999998843316663	WITHOUT_CLASSIFICATION	1.1566833367923288E-7	IMPLEMENTATION
// non-signature signature with just IRubyObject	WITHOUT_CLASSIFICATION	0.9999909975870188	WITHOUT_CLASSIFICATION	9.002412981066089E-6	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.999999980112057	WITHOUT_CLASSIFICATION	1.9887942895144955E-8	IMPLEMENTATION
// self // method name	WITHOUT_CLASSIFICATION	0.9999999538035093	WITHOUT_CLASSIFICATION	4.619649079314491E-8	IMPLEMENTATION
// the default allocator	WITHOUT_CLASSIFICATION	0.9999992689170828	WITHOUT_CLASSIFICATION	7.310829171631552E-7	IMPLEMENTATION
// Equivalent of T_DATA	WITHOUT_CLASSIFICATION	0.99999438225857	WITHOUT_CLASSIFICATION	5.6177414300690715E-6	IMPLEMENTATION
// do nothing, leave empty	WITHOUT_CLASSIFICATION	0.9999999859040865	WITHOUT_CLASSIFICATION	1.4095913615845412E-8	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6	WITHOUT_CLASSIFICATION	0.9999999930240656	WITHOUT_CLASSIFICATION	6.9759344197796715E-9	IMPLEMENTATION
/*  ================     *  Singleton Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.999999760322054	WITHOUT_CLASSIFICATION	2.396779459728901E-7	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999444499253	WITHOUT_CLASSIFICATION	5.555007472145415E-8	IMPLEMENTATION
// Make sure all arguments are modules before calling the callbacks	WITHOUT_CLASSIFICATION	0.9999999732775956	WITHOUT_CLASSIFICATION	2.6722404427191127E-8	IMPLEMENTATION
// MRI extends in order from last to first	WITHOUT_CLASSIFICATION	0.999997861533387	WITHOUT_CLASSIFICATION	2.138466613052889E-6	IMPLEMENTATION
// NOTE: Serialization is primarily supported for testing purposes, and there is no general // guarantee that serialization will work correctly. Specifically, instance variables pointing // at symbols, threads, modules, classes, and other unserializable types are not detected.	WITHOUT_CLASSIFICATION	0.9999999930543751	WITHOUT_CLASSIFICATION	6.945624811991103E-9	IMPLEMENTATION
// write out ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.9999999742603525	WITHOUT_CLASSIFICATION	2.573964753580508E-8	IMPLEMENTATION
// rest in ivar count followed by name/value pairs	WITHOUT_CLASSIFICATION	0.999999941486405	WITHOUT_CLASSIFICATION	5.851359486749961E-8	IMPLEMENTATION
// 0x3fff_ffff // -0x4000_0000	WITHOUT_CLASSIFICATION	0.9999998530167268	WITHOUT_CLASSIFICATION	1.4698327317139389E-7	IMPLEMENTATION
// a gotcha	WITHOUT_CLASSIFICATION	0.9999984250620731	WITHOUT_CLASSIFICATION	1.5749379268948328E-6	IMPLEMENTATION
// Java / and % are not the same as ruby	WITHOUT_CLASSIFICATION	0.999999962472967	WITHOUT_CLASSIFICATION	3.752703309152396E-8	IMPLEMENTATION
// A gotcha for Long.MIN_VALUE: value = -value	WITHOUT_CLASSIFICATION	0.9999999567425456	WITHOUT_CLASSIFICATION	4.325745441668988E-8	IMPLEMENTATION
// Piece of mri rb_to_id	WITHOUT_CLASSIFICATION	0.999999754130178	WITHOUT_CLASSIFICATION	2.4586982199962006E-7	IMPLEMENTATION
// Java Doubles are 64 bit long:            	WITHOUT_CLASSIFICATION	0.9999999978288131	WITHOUT_CLASSIFICATION	2.171186935633769E-9	IMPLEMENTATION
// Double.MAX_EXPONENT since Java 1.6            	WITHOUT_CLASSIFICATION	0.9999999992051694	WITHOUT_CLASSIFICATION	7.948306747189676E-10	IMPLEMENTATION
// don't override Numeric#div !	WITHOUT_CLASSIFICATION	0.9999993439351017	WITHOUT_CLASSIFICATION	6.560648983901853E-7	IMPLEMENTATION
// Modelled after c ruby implementation (java /,% not same as ruby)	WITHOUT_CLASSIFICATION	0.9996014225310479	WITHOUT_CLASSIFICATION	3.985774689521771E-4	IMPLEMENTATION
// MRI behavior:	WITHOUT_CLASSIFICATION	0.9999878746040713	WITHOUT_CLASSIFICATION	1.2125395928614748E-5	IMPLEMENTATION
// Numeric.equal            	WITHOUT_CLASSIFICATION	0.9999994448303323	WITHOUT_CLASSIFICATION	5.551696677399586E-7	IMPLEMENTATION
// provider is not available	WITHOUT_CLASSIFICATION	0.9999926305745804	WITHOUT_CLASSIFICATION	7.369425419541743E-6	IMPLEMENTATION
// bouncy castle doesn't support algorithm	WITHOUT_CLASSIFICATION	0.999997736873008	WITHOUT_CLASSIFICATION	2.2631269919973273E-6	IMPLEMENTATION
// fall back to system JCA providers	WITHOUT_CLASSIFICATION	0.9996623352940333	WITHOUT_CLASSIFICATION	3.3766470596676915E-4	IMPLEMENTATION
// RubyDigest	WITHOUT_CLASSIFICATION	0.9999985132917557	WITHOUT_CLASSIFICATION	1.4867082442879746E-6	IMPLEMENTATION
// ENEBO: Can these be fast?	WITHOUT_CLASSIFICATION	0.9999943253994241	WITHOUT_CLASSIFICATION	5.674600575930155E-6	IMPLEMENTATION
// synchronize on the RubyThread for threadgroup updates	WITHOUT_CLASSIFICATION	0.999999721382296	WITHOUT_CLASSIFICATION	2.786177040160576E-7	IMPLEMENTATION
// we only add live threads	WITHOUT_CLASSIFICATION	0.9999949228468945	WITHOUT_CLASSIFICATION	5.077153105484013E-6	IMPLEMENTATION
// use same ClassIndex as metaclass, since we're technically still of that type	WITHOUT_CLASSIFICATION	0.9999999967481762	WITHOUT_CLASSIFICATION	3.2518238441764392E-9	IMPLEMENTATION
// handle everything after -- as arguments to the jruby process	WITHOUT_CLASSIFICATION	0.9999998509391301	WITHOUT_CLASSIFICATION	1.4906086982072883E-7	IMPLEMENTATION
// JRubyService	WITHOUT_CLASSIFICATION	0.9999980769255861	WITHOUT_CLASSIFICATION	1.923074414001159E-6	IMPLEMENTATION
// while	WITHOUT_CLASSIFICATION	0.9999994894499726	WITHOUT_CLASSIFICATION	5.105500273522384E-7	IMPLEMENTATION
/* \OOO */	WITHOUT_CLASSIFICATION	0.9999956053283839	WITHOUT_CLASSIFICATION	4.3946716161223564E-6	IMPLEMENTATION
// CRuby uses sprintf(buf, "%.*g", FLOAT_DIG, d); // This pattern adjusts the output of String.pattern("%g") to mimic // the C version.	WITHOUT_CLASSIFICATION	0.9999924550356681	WITHOUT_CLASSIFICATION	7.544964331804096E-6	IMPLEMENTATION
// mask off "once" flag	WITHOUT_CLASSIFICATION	0.9999999570328827	WITHOUT_CLASSIFICATION	4.296711726773116E-8	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999958475625315	WITHOUT_CLASSIFICATION	4.152437468512811E-6	IMPLEMENTATION
// internal usage (Complex/Rational)	WITHOUT_CLASSIFICATION	0.999986722079424	WITHOUT_CLASSIFICATION	1.3277920576104692E-5	IMPLEMENTATION
// silent ?	WITHOUT_CLASSIFICATION	0.9999961094269548	WITHOUT_CLASSIFICATION	3.890573045140913E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999992823276004	WITHOUT_CLASSIFICATION	7.17672399540517E-7	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999991025980004	WITHOUT_CLASSIFICATION	8.974019996569489E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999939504597959	WITHOUT_CLASSIFICATION	6.0495402041676905E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999996342981692	WITHOUT_CLASSIFICATION	3.6570183079844068E-6	IMPLEMENTATION
/* \O, \OO, \OOO or backref */	WITHOUT_CLASSIFICATION	0.9999990028324326	WITHOUT_CLASSIFICATION	9.97167567325204E-7	IMPLEMENTATION
// MBCLEN_NEEDMORE_P	WITHOUT_CLASSIFICATION	0.9999961394557622	WITHOUT_CLASSIFICATION	3.860544237801285E-6	IMPLEMENTATION
// MBCLEN_INVALID_P	WITHOUT_CLASSIFICATION	0.9999949766924384	WITHOUT_CLASSIFICATION	5.023307561625988E-6	IMPLEMENTATION
// Unicode is can be only 21 bits long, int is enough	WITHOUT_CLASSIFICATION	0.999999996002447	WITHOUT_CLASSIFICATION	3.997552943081097E-9	IMPLEMENTATION
/* Surrogates */	WITHOUT_CLASSIFICATION	0.9999977378910153	WITHOUT_CLASSIFICATION	2.262108984698324E-6	IMPLEMENTATION
// do not load the class if not used	WITHOUT_CLASSIFICATION	0.9999999534709881	WITHOUT_CLASSIFICATION	4.652901174693018E-8	IMPLEMENTATION
/* \0, \0O, \0OO */	WITHOUT_CLASSIFICATION	0.9999905714736795	WITHOUT_CLASSIFICATION	9.428526320498896E-6	IMPLEMENTATION
/* \xHH */	WITHOUT_CLASSIFICATION	0.9999992823276004	WITHOUT_CLASSIFICATION	7.17672399540517E-7	IMPLEMENTATION
/* \C-X, \C-\M-X */	WITHOUT_CLASSIFICATION	0.9999939504597959	WITHOUT_CLASSIFICATION	6.0495402041676905E-6	IMPLEMENTATION
/* \M-X, \M-\C-X, \M-\cX */	WITHOUT_CLASSIFICATION	0.9999991025980004	WITHOUT_CLASSIFICATION	8.974019996569489E-7	IMPLEMENTATION
/* \\u{H HH HHH HHHH HHHHH HHHHHH ...} */	WITHOUT_CLASSIFICATION	0.9999968377773608	WITHOUT_CLASSIFICATION	3.162222639223026E-6	IMPLEMENTATION
/* \\uHHHH */	WITHOUT_CLASSIFICATION	0.9999977249908055	WITHOUT_CLASSIFICATION	2.275009194515324E-6	IMPLEMENTATION
/* \p{Hiragana} */	WITHOUT_CLASSIFICATION	0.9999977123450514	WITHOUT_CLASSIFICATION	2.2876549485410573E-6	IMPLEMENTATION
// inner switch	WITHOUT_CLASSIFICATION	0.9999990585670445	WITHOUT_CLASSIFICATION	9.414329555666396E-7	IMPLEMENTATION
// newInstance here	WITHOUT_CLASSIFICATION	0.9999665666471685	WITHOUT_CLASSIFICATION	3.3433352831532366E-5	IMPLEMENTATION
// rb_reg_raise	WITHOUT_CLASSIFICATION	0.9999980110237636	WITHOUT_CLASSIFICATION	1.9889762363664757E-6	IMPLEMENTATION
// rb_reg_desc	WITHOUT_CLASSIFICATION	0.9999977214752563	WITHOUT_CLASSIFICATION	2.278524743692357E-6	IMPLEMENTATION
// rb_enc_reg_raise	WITHOUT_CLASSIFICATION	0.9999991337092194	WITHOUT_CLASSIFICATION	8.662907804781328E-7	IMPLEMENTATION
// rb_enc_reg_error_desc	WITHOUT_CLASSIFICATION	0.9999946037308579	WITHOUT_CLASSIFICATION	5.396269142093647E-6	IMPLEMENTATION
// rb_reg_initialize_str	WITHOUT_CLASSIFICATION	0.9999998710110611	WITHOUT_CLASSIFICATION	1.2898893893641237E-7	IMPLEMENTATION
// rb_reg_initialize	WITHOUT_CLASSIFICATION	0.9999996563836079	WITHOUT_CLASSIFICATION	3.436163920617205E-7	IMPLEMENTATION
// JRUBY-3625: delay setting backref until the MatchData is completely initialized	WITHOUT_CLASSIFICATION	0.9999959567776654	WITHOUT_CLASSIFICATION	4.043222334583934E-6	IMPLEMENTATION
// rb_reg_expr_str	WITHOUT_CLASSIFICATION	0.9999966102840453	WITHOUT_CLASSIFICATION	3.389715954789031E-6	IMPLEMENTATION
// option_to_str	WITHOUT_CLASSIFICATION	0.9999982795138176	WITHOUT_CLASSIFICATION	1.720486182339402E-6	IMPLEMENTATION
// Don't initialize with class // Don't put in object space and don't taint	WITHOUT_CLASSIFICATION	0.9999995610510877	WITHOUT_CLASSIFICATION	4.38948912366561E-7	IMPLEMENTATION
// args should be before block	WITHOUT_CLASSIFICATION	0.9999999380967968	WITHOUT_CLASSIFICATION	6.190320320365563E-8	IMPLEMENTATION
// args should be at end	WITHOUT_CLASSIFICATION	0.9999978821381202	WITHOUT_CLASSIFICATION	2.1178618798293782E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999989158202037	WITHOUT_CLASSIFICATION	1.0841797962457752E-6	IMPLEMENTATION
// minus one more for IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999989158202037	WITHOUT_CLASSIFICATION	1.0841797962457752E-6	IMPLEMENTATION
// skip anything not related to jruby	WITHOUT_CLASSIFICATION	0.9999931869172427	WITHOUT_CLASSIFICATION	6.813082757351376E-6	IMPLEMENTATION
// start a new populator	WITHOUT_CLASSIFICATION	0.9999999673950767	WITHOUT_CLASSIFICATION	3.260492338134991E-8	IMPLEMENTATION
// check for frame field reads or writes	WITHOUT_CLASSIFICATION	0.999999939379411	WITHOUT_CLASSIFICATION	6.062058889780497E-8	IMPLEMENTATION
// add all names for this annotation	WITHOUT_CLASSIFICATION	0.9999820974500829	WITHOUT_CLASSIFICATION	1.7902549917031192E-5	IMPLEMENTATION
// no annotated methods found, skip	WITHOUT_CLASSIFICATION	0.9999916990556977	WITHOUT_CLASSIFICATION	8.300944302206391E-6	IMPLEMENTATION
// write out a static initializer for frame names, so it only fires once	WITHOUT_CLASSIFICATION	0.9999999818600943	WITHOUT_CLASSIFICATION	1.8139905661928854E-8	IMPLEMENTATION
// single method, use normal logic	WITHOUT_CLASSIFICATION	0.9999996498721269	WITHOUT_CLASSIFICATION	3.5012787322495367E-7	IMPLEMENTATION
// multimethod, new logic	WITHOUT_CLASSIFICATION	0.9999998857918133	WITHOUT_CLASSIFICATION	1.1420818661047429E-7	IMPLEMENTATION
// declared type returns the qualified name without $ for inner classes!!!	WITHOUT_CLASSIFICATION	0.9999935648181079	WITHOUT_CLASSIFICATION	6.435181892098128E-6	IMPLEMENTATION
// inner class, use $ to delimit	WITHOUT_CLASSIFICATION	0.9999999766360481	WITHOUT_CLASSIFICATION	2.336395185402688E-8	IMPLEMENTATION
//                        RubyModule singletonClass = module.getSingletonClass();	WITHOUT_CLASSIFICATION	0.9999999994935966	WITHOUT_CLASSIFICATION	5.064033908259927E-10	IMPLEMENTATION
//                }	WITHOUT_CLASSIFICATION	0.9999903009768085	WITHOUT_CLASSIFICATION	9.699023191563883E-6	IMPLEMENTATION
// fallback on non-pregenerated logic	WITHOUT_CLASSIFICATION	0.9999972046456894	WITHOUT_CLASSIFICATION	2.7953543105933953E-6	IMPLEMENTATION
// refresh call adapter, since it matters if this is iter-based or not	WITHOUT_CLASSIFICATION	0.9999949970564457	WITHOUT_CLASSIFICATION	5.002943554306046E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9965269450572614	WITHOUT_CLASSIFICATION	0.003473054942738686	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996651654557	WITHOUT_CLASSIFICATION	3.348345442527089E-7	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999990859236285	WITHOUT_CLASSIFICATION	9.140763714258123E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999940986349986	WITHOUT_CLASSIFICATION	5.90136500149296E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999940986349986	WITHOUT_CLASSIFICATION	5.90136500149296E-6	IMPLEMENTATION
// colon3	WITHOUT_CLASSIFICATION	0.9999997578387	WITHOUT_CLASSIFICATION	2.421612999493461E-7	IMPLEMENTATION
// Colon3	WITHOUT_CLASSIFICATION	0.9999998901237398	WITHOUT_CLASSIFICATION	1.0987626015761463E-7	IMPLEMENTATION
// array created for rescue args doesn't need to be in ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999998642355423	WITHOUT_CLASSIFICATION	1.3576445769260745E-7	IMPLEMENTATION
// For b.foo	WITHOUT_CLASSIFICATION	0.9999905592037853	WITHOUT_CLASSIFICATION	9.44079621470651E-6	IMPLEMENTATION
// instance config for the script run	WITHOUT_CLASSIFICATION	0.9999998782446149	WITHOUT_CLASSIFICATION	1.2175538504448581E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999940986349986	WITHOUT_CLASSIFICATION	5.90136500149296E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999940986349986	WITHOUT_CLASSIFICATION	5.90136500149296E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996976875701	WITHOUT_CLASSIFICATION	3.0231242975474313E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996976875701	WITHOUT_CLASSIFICATION	3.0231242975474313E-7	IMPLEMENTATION
//RubyModule module = context.getRubyClass();	WITHOUT_CLASSIFICATION	0.9999999697384979	WITHOUT_CLASSIFICATION	3.026150202504083E-8	IMPLEMENTATION
// For 'b.foo'	WITHOUT_CLASSIFICATION	0.9999876970639313	WITHOUT_CLASSIFICATION	1.2302936068737964E-5	IMPLEMENTATION
// We define an actual list to get around bug in java integration (1387115)	WITHOUT_CLASSIFICATION	0.9999999879362852	WITHOUT_CLASSIFICATION	1.2063714825614256E-8	IMPLEMENTATION
// something in here is used to build up ruby stack trace...	WITHOUT_CLASSIFICATION	0.9999999666690178	WITHOUT_CLASSIFICATION	3.333098221857648E-8	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999988883387309	WITHOUT_CLASSIFICATION	1.1116612690888812E-6	IMPLEMENTATION
// Ruby Grammar productions return plenty of nulls.	WITHOUT_CLASSIFICATION	0.9999988883387309	WITHOUT_CLASSIFICATION	1.1116612690888812E-6	IMPLEMENTATION
// do nothing, allow loop to retry	WITHOUT_CLASSIFICATION	0.9999997470788434	WITHOUT_CLASSIFICATION	2.5292115663031594E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999995604376822	WITHOUT_CLASSIFICATION	4.395623178531242E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995833850771	WITHOUT_CLASSIFICATION	4.166149227823595E-7	IMPLEMENTATION
// never visited, should be fine	WITHOUT_CLASSIFICATION	0.9998312022820133	WITHOUT_CLASSIFICATION	1.6879771798679563E-4	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996844628887	WITHOUT_CLASSIFICATION	3.155371114170592E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999858611799	WITHOUT_CLASSIFICATION	1.4138820174649932E-8	IMPLEMENTATION
// If we have more than one argument, then make sure the array is not ObjectSpaced.	WITHOUT_CLASSIFICATION	0.9997770389083923	WITHOUT_CLASSIFICATION	2.2296109160773258E-4	IMPLEMENTATION
// Only in ruby 1.9 methods	WITHOUT_CLASSIFICATION	0.9999999381259377	WITHOUT_CLASSIFICATION	6.187406236288081E-8	IMPLEMENTATION
// Bind 'normal' parameter values to the local scope for this method.	WITHOUT_CLASSIFICATION	0.9999999812252814	WITHOUT_CLASSIFICATION	1.877471849221528E-8	IMPLEMENTATION
// no arg grouping, just use bulk assignment methods	WITHOUT_CLASSIFICATION	0.9999999976950044	WITHOUT_CLASSIFICATION	2.3049956719486127E-9	IMPLEMENTATION
// optArgs and restArgs require more work, so isolate them and ArrayList creation here	WITHOUT_CLASSIFICATION	0.999943869325516	WITHOUT_CLASSIFICATION	5.6130674483973955E-5	IMPLEMENTATION
//        arity.checkArity(runtime, argsLength);	WITHOUT_CLASSIFICATION	0.9999999762951819	WITHOUT_CLASSIFICATION	2.370481812422606E-8	IMPLEMENTATION
// no more values to stick in rest arg	WITHOUT_CLASSIFICATION	0.9999992846942637	WITHOUT_CLASSIFICATION	7.153057363349263E-7	IMPLEMENTATION
// set argv from main's args	WITHOUT_CLASSIFICATION	0.9999999928129426	WITHOUT_CLASSIFICATION	7.18705729970018E-9	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996651654557	WITHOUT_CLASSIFICATION	3.348345442527089E-7	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999940986349986	WITHOUT_CLASSIFICATION	5.90136500149296E-6	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996976875701	WITHOUT_CLASSIFICATION	3.0231242975474313E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999858611799	WITHOUT_CLASSIFICATION	1.4138820174649932E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999949722327	WITHOUT_CLASSIFICATION	5.027767308991159E-9	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999949722327	WITHOUT_CLASSIFICATION	5.027767308991159E-9	IMPLEMENTATION
// block.yield depends on null to represent empty and nil to represent nil - [nil] vs [] //assert argsNode != null : "argsNode is not null";	WITHOUT_CLASSIFICATION	0.9999997369452466	WITHOUT_CLASSIFICATION	2.630547534325582E-7	IMPLEMENTATION
// assign given optional arguments to their variables	WITHOUT_CLASSIFICATION	0.9999999993646812	WITHOUT_CLASSIFICATION	6.353187886145167E-10	IMPLEMENTATION
// in-frame EvalState should already have receiver set as self, continue to use it	WITHOUT_CLASSIFICATION	0.99999998271071	WITHOUT_CLASSIFICATION	1.7289290068017828E-8	IMPLEMENTATION
// assign the default values, adding to the end of allArgs	WITHOUT_CLASSIFICATION	0.9999999832603305	WITHOUT_CLASSIFICATION	1.6739669573247563E-8	IMPLEMENTATION
// Make sure the appropriate scope has proper size. See JRUBY-2046.	WITHOUT_CLASSIFICATION	0.999999660974621	WITHOUT_CLASSIFICATION	3.3902537898808204E-7	IMPLEMENTATION
// Experimental class reification support, to create real Java classes // for Ruby classes after the first opening	WITHOUT_CLASSIFICATION	0.9999998764445128	WITHOUT_CLASSIFICATION	1.2355548711729825E-7	IMPLEMENTATION
// This should never happen past parse, but just bulletproof this just in case	WITHOUT_CLASSIFICATION	0.9999938037121952	WITHOUT_CLASSIFICATION	6.196287804866141E-6	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999996817814855	WITHOUT_CLASSIFICATION	3.1821851448736443E-6	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999996777597	WITHOUT_CLASSIFICATION	3.222402971051488E-10	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999977808961091	WITHOUT_CLASSIFICATION	2.2191038909146884E-6	IMPLEMENTATION
// never visited, should be ok	WITHOUT_CLASSIFICATION	0.9999376184695827	WITHOUT_CLASSIFICATION	6.238153041716627E-5	IMPLEMENTATION
// If no explicit block passed to super, then use the one passed in, unless it's explicitly cleared with nil	WITHOUT_CLASSIFICATION	0.9999997669673143	WITHOUT_CLASSIFICATION	2.3303268571213563E-7	IMPLEMENTATION
// JRUBY-530 until case	WITHOUT_CLASSIFICATION	0.9999999577385841	WITHOUT_CLASSIFICATION	4.226141594980452E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999990859236285	WITHOUT_CLASSIFICATION	9.140763714258123E-7	IMPLEMENTATION
// For 'b.foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996976875701	WITHOUT_CLASSIFICATION	3.0231242975474313E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999995604376822	WITHOUT_CLASSIFICATION	4.395623178531242E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995833850771	WITHOUT_CLASSIFICATION	4.166149227823595E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995833850771	WITHOUT_CLASSIFICATION	4.166149227823595E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996844628887	WITHOUT_CLASSIFICATION	3.155371114170592E-7	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999858611799	WITHOUT_CLASSIFICATION	1.4138820174649932E-8	IMPLEMENTATION
// The name of the variable	WITHOUT_CLASSIFICATION	0.9999999858611799	WITHOUT_CLASSIFICATION	1.4138820174649932E-8	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999949722327	WITHOUT_CLASSIFICATION	5.027767308991159E-9	IMPLEMENTATION
// Empirical Observations: // null -> Some arity // argsNode == this.argsNode then check for arity changes // newline(splatnode) -> argspushnode	WITHOUT_CLASSIFICATION	0.9999835700581541	WITHOUT_CLASSIFICATION	1.642994184585245E-5	IMPLEMENTATION
//assert !(value instanceof RubyArray)  : "Not an array";	WITHOUT_CLASSIFICATION	0.999999855285585	WITHOUT_CLASSIFICATION	1.4471441496305822E-7	IMPLEMENTATION
// Serialization killed our dynamic scope.  We can just create an empty one // since serialization cannot serialize an eval (which is the only thing // which is capable of having a non-empty dynamic scope).	WITHOUT_CLASSIFICATION	0.9999999999775167	WITHOUT_CLASSIFICATION	2.248342167691138E-11	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999599568723123	WITHOUT_CLASSIFICATION	4.004312768766816E-5	IMPLEMENTATION
// We could probably also detect if LHS value came out of cache and avoid some of this	WITHOUT_CLASSIFICATION	0.9999986680817918	WITHOUT_CLASSIFICATION	1.3319182082382544E-6	IMPLEMENTATION
//        assert thenBody != null : "thenBody is not null"; //        assert elseBody != null : "elseBody is not null";	WITHOUT_CLASSIFICATION	0.9999954430922149	WITHOUT_CLASSIFICATION	4.55690778519363E-6	IMPLEMENTATION
// add in reverse order	WITHOUT_CLASSIFICATION	0.9999995162168472	WITHOUT_CLASSIFICATION	4.837831527578237E-7	IMPLEMENTATION
// in order to make pragma's noops we set location to a special value	WITHOUT_CLASSIFICATION	0.9999998796138876	WITHOUT_CLASSIFICATION	1.203861123913159E-7	IMPLEMENTATION
// ignore compiler pragmas	WITHOUT_CLASSIFICATION	0.9999996897905894	WITHOUT_CLASSIFICATION	3.10209410648295E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999995604376822	WITHOUT_CLASSIFICATION	4.395623178531242E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995833850771	WITHOUT_CLASSIFICATION	4.166149227823595E-7	IMPLEMENTATION
// Store to temp so it does null out on us mid-stream	WITHOUT_CLASSIFICATION	0.9999995833850771	WITHOUT_CLASSIFICATION	4.166149227823595E-7	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996844628887	WITHOUT_CLASSIFICATION	3.155371114170592E-7	IMPLEMENTATION
// Make a nil node if no body.  Notice this is not part of AST.	WITHOUT_CLASSIFICATION	0.999996817814855	WITHOUT_CLASSIFICATION	3.1821851448736443E-6	IMPLEMENTATION
// now used as an interpreter event	WITHOUT_CLASSIFICATION	0.9999977808961091	WITHOUT_CLASSIFICATION	2.2191038909146884E-6	IMPLEMENTATION
// No actual test, so do 'when' if when expression is not nil	WITHOUT_CLASSIFICATION	0.9995234750187981	WITHOUT_CLASSIFICATION	4.765249812018781E-4	IMPLEMENTATION
// save entering the try if there's nothing to ensure	WITHOUT_CLASSIFICATION	0.9999972203127443	WITHOUT_CLASSIFICATION	2.7796872556303927E-6	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999795962362636	WITHOUT_CLASSIFICATION	2.0403763736378093E-5	IMPLEMENTATION
// For 'foo'	WITHOUT_CLASSIFICATION	0.9999795962362636	WITHOUT_CLASSIFICATION	2.0403763736378093E-5	IMPLEMENTATION
// admittedly inefficient	WITHOUT_CLASSIFICATION	0.9999987218808808	WITHOUT_CLASSIFICATION	1.2781191191719707E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999998674139444	WITHOUT_CLASSIFICATION	1.325860555992775E-7	IMPLEMENTATION
// What static scoping relationship exists when it comes into being.	WITHOUT_CLASSIFICATION	0.9999999737289564	WITHOUT_CLASSIFICATION	2.627104357963724E-8	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999931764045209	WITHOUT_CLASSIFICATION	6.823595479203623E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999968347179605	WITHOUT_CLASSIFICATION	3.1652820395008525E-6	IMPLEMENTATION
// just rethrow	WITHOUT_CLASSIFICATION	0.9999968347179605	WITHOUT_CLASSIFICATION	3.1652820395008525E-6	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999940643943513	WITHOUT_CLASSIFICATION	5.935605648600465E-6	IMPLEMENTATION
// clear exception when handled or retried	WITHOUT_CLASSIFICATION	0.9999940643943513	WITHOUT_CLASSIFICATION	5.935605648600465E-6	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999990203800474	WITHOUT_CLASSIFICATION	9.79619952683669E-7	IMPLEMENTATION
// no takers; bubble up	WITHOUT_CLASSIFICATION	0.9999990203800474	WITHOUT_CLASSIFICATION	9.79619952683669E-7	IMPLEMENTATION
// Execute rescue block	WITHOUT_CLASSIFICATION	0.9999998610828246	WITHOUT_CLASSIFICATION	1.3891717540883376E-7	IMPLEMENTATION
// If no exception is thrown execute else block	WITHOUT_CLASSIFICATION	0.9999975512931589	WITHOUT_CLASSIFICATION	2.448706841109716E-6	IMPLEMENTATION
// index of variable for this arg	WITHOUT_CLASSIFICATION	0.9999997309818149	WITHOUT_CLASSIFICATION	2.690181850671693E-7	IMPLEMENTATION
// only a marker interface	WITHOUT_CLASSIFICATION	0.9999999344715881	WITHOUT_CLASSIFICATION	6.552841192648072E-8	IMPLEMENTATION
// don't attempt to coerce to array, just wrap and return	WITHOUT_CLASSIFICATION	0.9999929033852526	WITHOUT_CLASSIFICATION	7.096614747440733E-6	IMPLEMENTATION
// pragmas	WITHOUT_CLASSIFICATION	0.9999998025423529	WITHOUT_CLASSIFICATION	1.9745764714706603E-7	IMPLEMENTATION
// The method also needs a scope, do both	WITHOUT_CLASSIFICATION	0.9999974819168876	WITHOUT_CLASSIFICATION	2.5180831123019882E-6	IMPLEMENTATION
// We're doing normal framed compilation or the method needs a frame	WITHOUT_CLASSIFICATION	0.9999808877734173	WITHOUT_CLASSIFICATION	1.9112226582715765E-5	IMPLEMENTATION
// The method doesn't need a scope or static scope; frame only	WITHOUT_CLASSIFICATION	0.9999988871940307	WITHOUT_CLASSIFICATION	1.1128059692289345E-6	IMPLEMENTATION
// The method doesn't need a scope, but has static scope needs; use a dummy scope	WITHOUT_CLASSIFICATION	0.9999999974310203	WITHOUT_CLASSIFICATION	2.5689796824780757E-9	IMPLEMENTATION
// Proc.new needs the caller's block to instantiate a proc	WITHOUT_CLASSIFICATION	0.9975628680788377	WITHOUT_CLASSIFICATION	0.002437131921162331	IMPLEMENTATION
// check for Proc.new, an especially magic method	WITHOUT_CLASSIFICATION	0.999998982201963	WITHOUT_CLASSIFICATION	1.0177980369544366E-6	IMPLEMENTATION
// long, slow way causes disabling	WITHOUT_CLASSIFICATION	0.9999997458660097	WITHOUT_CLASSIFICATION	2.5413399026488995E-7	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999985945066836	WITHOUT_CLASSIFICATION	1.4054933163754097E-6	IMPLEMENTATION
// ok, we have fast paths	WITHOUT_CLASSIFICATION	0.9999985945066836	WITHOUT_CLASSIFICATION	1.4054933163754097E-6	IMPLEMENTATION
// long, slow way causes disabling for defined	WITHOUT_CLASSIFICATION	0.999999900846909	WITHOUT_CLASSIFICATION	9.9153090949713E-8	IMPLEMENTATION
// we set scope-aware to true to force heap-based locals	WITHOUT_CLASSIFICATION	0.99999999276546	WITHOUT_CLASSIFICATION	7.234539904874795E-9	IMPLEMENTATION
// Because Regexp#=== sets backref, we have to make this backref-aware	WITHOUT_CLASSIFICATION	0.999994526946627	WITHOUT_CLASSIFICATION	5.473053372885167E-6	IMPLEMENTATION
// encountered a node we don't recognize, set everything to true to disable optz	WITHOUT_CLASSIFICATION	0.9999999977010956	WITHOUT_CLASSIFICATION	2.2989044522599465E-9	IMPLEMENTATION
// only arrays that are "lightweight" are being used as args arrays	WITHOUT_CLASSIFICATION	0.9999999979766524	WITHOUT_CLASSIFICATION	2.0233476839273266E-9	IMPLEMENTATION
// otherwise, it's a literal array	WITHOUT_CLASSIFICATION	0.9992090724793454	WITHOUT_CLASSIFICATION	7.909275206545526E-4	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999999170601102	WITHOUT_CLASSIFICATION	8.293988981052722E-7	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999978297682008	WITHOUT_CLASSIFICATION	2.1702317992040823E-6	IMPLEMENTATION
// compile first node as non-expr and then second node	WITHOUT_CLASSIFICATION	0.9999997031088871	WITHOUT_CLASSIFICATION	2.9689111290296345E-7	IMPLEMENTATION
// last node, either !instanceof WhenNode or null, is the else	WITHOUT_CLASSIFICATION	0.9999999691485972	WITHOUT_CLASSIFICATION	3.0851402787954515E-8	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999995876516631	WITHOUT_CLASSIFICATION	4.1234833700680116E-7	IMPLEMENTATION
// splatted when, can't do it yet	WITHOUT_CLASSIFICATION	0.9999083437427678	WITHOUT_CLASSIFICATION	9.165625723222691E-5	IMPLEMENTATION
// if __send__ with a literal symbol, compile it as a direct fcall	WITHOUT_CLASSIFICATION	0.9999988458127744	WITHOUT_CLASSIFICATION	1.1541872256350306E-6	IMPLEMENTATION
// NOTE: Currently this optimization is limited to the following situations: // * All expressions must be int-ranged literal fixnums // It also still emits the code for the "safe" when logic, which is rather // wasteful (since it essentially doubles each code body). As such it is // normally disabled, but it serves as an example of how this optimization // could be done. Ideally, it should be combined with the when processing // to improve code reuse before it's generally available.	WITHOUT_CLASSIFICATION	0.999945845095805	WITHOUT_CLASSIFICATION	5.415490419505226E-5	IMPLEMENTATION
// aggregate when nodes into a list, unfortunately, this is no	WITHOUT_CLASSIFICATION	0.999999751591573	WITHOUT_CLASSIFICATION	2.4840842699308927E-7	IMPLEMENTATION
// one arg but it's an array, treat it as a proper array	WITHOUT_CLASSIFICATION	0.9999997078646695	WITHOUT_CLASSIFICATION	2.921353304300984E-7	IMPLEMENTATION
// can't do it	WITHOUT_CLASSIFICATION	0.9999917779663612	WITHOUT_CLASSIFICATION	8.222033638818294E-6	IMPLEMENTATION
// otherwise, use normal args compiler	WITHOUT_CLASSIFICATION	0.9999976759804762	WITHOUT_CLASSIFICATION	2.324019523784423E-6	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999990128671	WITHOUT_CLASSIFICATION	9.871329341711638E-10	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999990128671	WITHOUT_CLASSIFICATION	9.871329341711638E-10	IMPLEMENTATION
// these are all simple cases that don't require the heavier defined logic	WITHOUT_CLASSIFICATION	0.9999966740312821	WITHOUT_CLASSIFICATION	3.3259687179475473E-6	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999922019525	WITHOUT_CLASSIFICATION	7.798047505754702E-9	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999751447834323	WITHOUT_CLASSIFICATION	2.4855216567693065E-5	IMPLEMENTATION
//[]	WITHOUT_CLASSIFICATION	0.9999751447834323	WITHOUT_CLASSIFICATION	2.4855216567693065E-5	IMPLEMENTATION
//          context.swapValues(); //context.consumeCurrentValue();	WITHOUT_CLASSIFICATION	0.9999590169742446	WITHOUT_CLASSIFICATION	4.0983025755327176E-5	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[] //[self] //[RubyClass] //[RubyClass, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999876521715	WITHOUT_CLASSIFICATION	1.2347828631289773E-8	IMPLEMENTATION
//[RubyClass]	WITHOUT_CLASSIFICATION	0.9999994448342854	WITHOUT_CLASSIFICATION	5.551657145772572E-7	IMPLEMENTATION
//[RubyClass] //[RubyClass, RubyClass] //[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999683661298	WITHOUT_CLASSIFICATION	3.163387022009348E-8	IMPLEMENTATION
// if root of method is rescue, compile as a light rescue	WITHOUT_CLASSIFICATION	0.9999999841358002	WITHOUT_CLASSIFICATION	1.5864199887986176E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999980266962	WITHOUT_CLASSIFICATION	1.973303794745131E-8	IMPLEMENTATION
// inspect body and args	WITHOUT_CLASSIFICATION	0.999999980266962	WITHOUT_CLASSIFICATION	1.973303794745131E-8	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999999731470054	WITHOUT_CLASSIFICATION	2.6852994594546717E-7	IMPLEMENTATION
// if root of method is rescue, compile as light rescue	WITHOUT_CLASSIFICATION	0.9999999890742968	WITHOUT_CLASSIFICATION	1.092570326322992E-8	IMPLEMENTATION
// invoke run with threadcontext and topself	WITHOUT_CLASSIFICATION	0.9999988988141407	WITHOUT_CLASSIFICATION	1.1011858593388682E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999843897954	WITHOUT_CLASSIFICATION	1.561020453417986E-8	IMPLEMENTATION
//[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass] //[IRubyObject]	WITHOUT_CLASSIFICATION	0.9999999922019525	WITHOUT_CLASSIFICATION	7.798047505754702E-9	IMPLEMENTATION
//[RubyClass] //[]	WITHOUT_CLASSIFICATION	0.9999999235865624	WITHOUT_CLASSIFICATION	7.641343759078673E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999866469222	WITHOUT_CLASSIFICATION	1.3353077825384099E-8	IMPLEMENTATION
//[String] //[String, String] //[String] //[String, RubyClass] //[String, RubyClass, RubyClass] //[String, RubyClass]	WITHOUT_CLASSIFICATION	0.9999999866469222	WITHOUT_CLASSIFICATION	1.3353077825384099E-8	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999792879776751	WITHOUT_CLASSIFICATION	2.0712022324872332E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999992042496	WITHOUT_CLASSIFICATION	7.957503853825844E-10	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999992042496	WITHOUT_CLASSIFICATION	7.957503853825844E-10	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999585941701121	WITHOUT_CLASSIFICATION	4.140582988789354E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999585941701121	WITHOUT_CLASSIFICATION	4.140582988789354E-5	IMPLEMENTATION
// not an expression, only compile the elements	WITHOUT_CLASSIFICATION	0.9999585941701121	WITHOUT_CLASSIFICATION	4.140582988789354E-5	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999992042496	WITHOUT_CLASSIFICATION	7.957503853825844E-10	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999992042496	WITHOUT_CLASSIFICATION	7.957503853825844E-10	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999792879776751	WITHOUT_CLASSIFICATION	2.0712022324872332E-5	IMPLEMENTATION
// force heap-scope behavior, since it uses parent's scope	WITHOUT_CLASSIFICATION	0.999999855515454	WITHOUT_CLASSIFICATION	1.4448454607633912E-7	IMPLEMENTATION
// always false or nil	WITHOUT_CLASSIFICATION	0.9999996969835847	WITHOUT_CLASSIFICATION	3.030164153619775E-7	IMPLEMENTATION
// optimizations if we know ahead of time it will always be true or false	WITHOUT_CLASSIFICATION	0.9999891438873599	WITHOUT_CLASSIFICATION	1.085611263995538E-5	IMPLEMENTATION
// normal	WITHOUT_CLASSIFICATION	0.9999932791026968	WITHOUT_CLASSIFICATION	6.720897303234226E-6	IMPLEMENTATION
// compile condition as non-expr and just compile "then" body	WITHOUT_CLASSIFICATION	0.999999997128076	WITHOUT_CLASSIFICATION	2.871924102145109E-9	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9988343789057909	WITHOUT_CLASSIFICATION	0.001165621094209217	IMPLEMENTATION
// just push nil for pragmas	WITHOUT_CLASSIFICATION	0.9999998652511384	WITHOUT_CLASSIFICATION	1.3474886157095805E-7	IMPLEMENTATION
// "assignment" means the value is already on the stack	WITHOUT_CLASSIFICATION	0.9999999929573893	WITHOUT_CLASSIFICATION	7.042610805985236E-9	IMPLEMENTATION
// compile first node only	WITHOUT_CLASSIFICATION	0.9999995876516631	WITHOUT_CLASSIFICATION	4.1234833700680116E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999992042496	WITHOUT_CLASSIFICATION	7.957503853825844E-10	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999992042496	WITHOUT_CLASSIFICATION	7.957503853825844E-10	IMPLEMENTATION
// eval new value, call operator on old value, and assign	WITHOUT_CLASSIFICATION	0.9999999961135428	WITHOUT_CLASSIFICATION	3.8864571556723515E-9	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999742279696705	WITHOUT_CLASSIFICATION	2.577203032938039E-5	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999244342082	WITHOUT_CLASSIFICATION	7.556579185893396E-8	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999942050917	WITHOUT_CLASSIFICATION	5.794908290822451E-9	IMPLEMENTATION
// normal items at the "head" of the masgn	WITHOUT_CLASSIFICATION	0.9999938829189792	WITHOUT_CLASSIFICATION	6.117081020734126E-6	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999985636117941	WITHOUT_CLASSIFICATION	1.4363882059211918E-6	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999969865496	WITHOUT_CLASSIFICATION	3.013450367906766E-9	IMPLEMENTATION
// only supports simple parallel assignment of up to 10 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999951909262647	WITHOUT_CLASSIFICATION	4.809073735351957E-6	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999992030595044	WITHOUT_CLASSIFICATION	7.969404955444503E-7	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999880841929	WITHOUT_CLASSIFICATION	1.1915807025313626E-8	IMPLEMENTATION
//RedoNode redoNode = (RedoNode)node;	WITHOUT_CLASSIFICATION	0.9999831251452935	WITHOUT_CLASSIFICATION	1.6874854706430283E-5	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999998013363929	WITHOUT_CLASSIFICATION	1.9866360714243972E-7	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999991015598777	WITHOUT_CLASSIFICATION	8.984401223554118E-7	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998898711067	WITHOUT_CLASSIFICATION	1.1012889346496243E-7	IMPLEMENTATION
// if arity 1, just compile the one element to save us the array cost	WITHOUT_CLASSIFICATION	0.9999997378123178	WITHOUT_CLASSIFICATION	2.6218768218028043E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999996755943371	WITHOUT_CLASSIFICATION	3.2440566291524823E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999996755943371	WITHOUT_CLASSIFICATION	3.2440566291524823E-7	IMPLEMENTATION
// [recv]	WITHOUT_CLASSIFICATION	0.9999996755943371	WITHOUT_CLASSIFICATION	3.2440566291524823E-7	IMPLEMENTATION
// compile into array	WITHOUT_CLASSIFICATION	0.9999998183250388	WITHOUT_CLASSIFICATION	1.8167496117661792E-7	IMPLEMENTATION
// compile first node as non-expr and compile second node	WITHOUT_CLASSIFICATION	0.9999999493299632	WITHOUT_CLASSIFICATION	5.0670036971574803E-8	IMPLEMENTATION
// check if it's an immediate, and don't outline	WITHOUT_CLASSIFICATION	0.9999999604400737	WITHOUT_CLASSIFICATION	3.9559926361706495E-8	IMPLEMENTATION
// condition is always true, just compile it and not body	WITHOUT_CLASSIFICATION	0.9999994899490547	WITHOUT_CLASSIFICATION	5.100509452826628E-7	IMPLEMENTATION
// force static scope to claim restarg at 0, so it only implements the [] version of __file__	WITHOUT_CLASSIFICATION	0.9999745850015784	WITHOUT_CLASSIFICATION	2.5414998421614052E-5	IMPLEMENTATION
// create method for toplevel of script	WITHOUT_CLASSIFICATION	0.999999227871083	WITHOUT_CLASSIFICATION	7.721289170164115E-7	IMPLEMENTATION
// it's a multiple-statement body, iterate over all elements in turn and chain if it get too long	WITHOUT_CLASSIFICATION	0.9999999998781827	WITHOUT_CLASSIFICATION	1.218174062389138E-10	IMPLEMENTATION
// send it along as arity-specific, we don't need the array	WITHOUT_CLASSIFICATION	0.9999989299629208	WITHOUT_CLASSIFICATION	1.0700370791131673E-6	IMPLEMENTATION
// single-statement body, just compile it	WITHOUT_CLASSIFICATION	0.9999999607425147	WITHOUT_CLASSIFICATION	3.925748537192312E-8	IMPLEMENTATION
// leave as a normal array	WITHOUT_CLASSIFICATION	0.9999999233542248	WITHOUT_CLASSIFICATION	7.664577516689495E-8	IMPLEMENTATION
// This method has JITed already or has been abandoned. Bail out.	WITHOUT_CLASSIFICATION	0.9999454983804317	WITHOUT_CLASSIFICATION	5.4501619568243036E-5	IMPLEMENTATION
// The cache is full. Abandon JIT for this method and bail out.	WITHOUT_CLASSIFICATION	0.9999989897128745	WITHOUT_CLASSIFICATION	1.0102871255535937E-6	IMPLEMENTATION
// check args first, since body inspection can depend on args	WITHOUT_CLASSIFICATION	0.999999731470054	WITHOUT_CLASSIFICATION	2.6852994594546717E-7	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999992042496	WITHOUT_CLASSIFICATION	7.957503853825844E-10	IMPLEMENTATION
// create the closure class and instantiate it	WITHOUT_CLASSIFICATION	0.9999999992042496	WITHOUT_CLASSIFICATION	7.957503853825844E-10	IMPLEMENTATION
// no args, do not pass args processor	WITHOUT_CLASSIFICATION	0.9999792879776751	WITHOUT_CLASSIFICATION	2.0712022324872332E-5	IMPLEMENTATION
// need the array, use unoptz version	WITHOUT_CLASSIFICATION	0.9988343789057909	WITHOUT_CLASSIFICATION	0.001165621094209217	IMPLEMENTATION
// try optz version	WITHOUT_CLASSIFICATION	0.9999742279696705	WITHOUT_CLASSIFICATION	2.577203032938039E-5	IMPLEMENTATION
// expect value to be an array of nodes	WITHOUT_CLASSIFICATION	0.9999999942050917	WITHOUT_CLASSIFICATION	5.794908290822451E-9	IMPLEMENTATION
// head must not be null and there must be no "args" (like *arg)	WITHOUT_CLASSIFICATION	0.9999985636117941	WITHOUT_CLASSIFICATION	1.4363882059211918E-6	IMPLEMENTATION
// sizes must match	WITHOUT_CLASSIFICATION	0.9999999244342082	WITHOUT_CLASSIFICATION	7.556579185893396E-8	IMPLEMENTATION
// "head" must have no non-trivial assigns (array groupings, basically)	WITHOUT_CLASSIFICATION	0.9999999969865496	WITHOUT_CLASSIFICATION	3.013450367906766E-9	IMPLEMENTATION
// if we get here, no optz cases work; fall back on unoptz.	WITHOUT_CLASSIFICATION	0.9999999880841929	WITHOUT_CLASSIFICATION	1.1915807025313626E-8	IMPLEMENTATION
// perform assignment for the next node	WITHOUT_CLASSIFICATION	0.9999992030595044	WITHOUT_CLASSIFICATION	7.969404955444503E-7	IMPLEMENTATION
// done processing args	WITHOUT_CLASSIFICATION	0.9999998013363929	WITHOUT_CLASSIFICATION	1.9866360714243972E-7	IMPLEMENTATION
// Check if the method has been explicitly excluded	WITHOUT_CLASSIFICATION	0.999992331077421	WITHOUT_CLASSIFICATION	7.668922578962765E-6	IMPLEMENTATION
// class could not be found nor generated; give up on JIT and bail out	WITHOUT_CLASSIFICATION	0.999999905155954	WITHOUT_CLASSIFICATION	9.48440460152284E-8	IMPLEMENTATION
// successfully got back a jitted method	WITHOUT_CLASSIFICATION	0.9999907032200911	WITHOUT_CLASSIFICATION	9.296779908917584E-6	IMPLEMENTATION
// finally, grab the script	WITHOUT_CLASSIFICATION	0.9999999010387068	WITHOUT_CLASSIFICATION	9.896129321057459E-8	IMPLEMENTATION
// logEvery n methods based on configuration	WITHOUT_CLASSIFICATION	0.9999998831565806	WITHOUT_CLASSIFICATION	1.1684341948189815E-7	IMPLEMENTATION
// Time the compilation	WITHOUT_CLASSIFICATION	0.9999989567955674	WITHOUT_CLASSIFICATION	1.0432044326557524E-6	IMPLEMENTATION
// we have a body, do a full-on method	WITHOUT_CLASSIFICATION	0.9999997718048171	WITHOUT_CLASSIFICATION	2.2819518282656716E-7	IMPLEMENTATION
// If we don't have a body, check for required or opt args // if opt args, they could have side effects // if required args, need to raise errors if too few args passed // otherwise, method does nothing, make it a nop	WITHOUT_CLASSIFICATION	0.9999999372077368	WITHOUT_CLASSIFICATION	6.279226312422252E-8	IMPLEMENTATION
// if we haven't already decided on a do-nothing call	WITHOUT_CLASSIFICATION	0.999999395021357	WITHOUT_CLASSIFICATION	6.049786428565378E-7	IMPLEMENTATION
// only supports simple parallel assignment of up to 4 values to the same number of assignees	WITHOUT_CLASSIFICATION	0.9999946110198422	WITHOUT_CLASSIFICATION	5.388980157805937E-6	IMPLEMENTATION
// normal items at the front or back of the masgn	WITHOUT_CLASSIFICATION	0.9999940700962507	WITHOUT_CLASSIFICATION	5.929903749340962E-6	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995712821028	WITHOUT_CLASSIFICATION	4.2871789712763933E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999870709924	WITHOUT_CLASSIFICATION	1.2929007555408968E-8	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999941166108	WITHOUT_CLASSIFICATION	5.883389230983298E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999991006358	WITHOUT_CLASSIFICATION	8.993642024079804E-9	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999950939849	WITHOUT_CLASSIFICATION	4.906015180418233E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999990162494	WITHOUT_CLASSIFICATION	9.837506077620102E-9	IMPLEMENTATION
// Define the annotation for the method	WITHOUT_CLASSIFICATION	0.999998780456547	WITHOUT_CLASSIFICATION	1.2195434530484146E-6	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999993916788462	WITHOUT_CLASSIFICATION	6.083211538244514E-7	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999991639471775	WITHOUT_CLASSIFICATION	8.360528224663511E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999804663028806	WITHOUT_CLASSIFICATION	1.9533697119304686E-5	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999966826253	WITHOUT_CLASSIFICATION	3.3173747119102125E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999966826253	WITHOUT_CLASSIFICATION	3.3173747119102125E-9	IMPLEMENTATION
// value is already on stack, save it for later	WITHOUT_CLASSIFICATION	0.9999999508643133	WITHOUT_CLASSIFICATION	4.91356867346369E-8	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9989566698555206	WITHOUT_CLASSIFICATION	0.0010433301444795072	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999763603346524	WITHOUT_CLASSIFICATION	2.363966534762243E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999763603346524	WITHOUT_CLASSIFICATION	2.363966534762243E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999763603346524	WITHOUT_CLASSIFICATION	2.363966534762243E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999479147871934	WITHOUT_CLASSIFICATION	5.208521280665178E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999479147871934	WITHOUT_CLASSIFICATION	5.208521280665178E-5	IMPLEMENTATION
/*arg2*/	WITHOUT_CLASSIFICATION	0.9999735440111307	WITHOUT_CLASSIFICATION	2.6455988869281056E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999849992275207	WITHOUT_CLASSIFICATION	1.5000772479204687E-5	IMPLEMENTATION
// receiver first, so we know which call site to use	WITHOUT_CLASSIFICATION	0.9989566698555206	WITHOUT_CLASSIFICATION	0.0010433301444795072	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999984704399422	WITHOUT_CLASSIFICATION	1.529560057773462E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999763603346524	WITHOUT_CLASSIFICATION	2.363966534762243E-5	IMPLEMENTATION
/*arg0*/	WITHOUT_CLASSIFICATION	0.9999763603346524	WITHOUT_CLASSIFICATION	2.363966534762243E-5	IMPLEMENTATION
/*arg1*/	WITHOUT_CLASSIFICATION	0.9999479147871934	WITHOUT_CLASSIFICATION	5.208521280665178E-5	IMPLEMENTATION
/*args*/	WITHOUT_CLASSIFICATION	0.9999849992275207	WITHOUT_CLASSIFICATION	1.5000772479204687E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999862305450035	WITHOUT_CLASSIFICATION	1.3769454996557012E-5	IMPLEMENTATION
// get call site and thread context	WITHOUT_CLASSIFICATION	0.9999862305450035	WITHOUT_CLASSIFICATION	1.3769454996557012E-5	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999924810715	WITHOUT_CLASSIFICATION	7.518928436180694E-9	IMPLEMENTATION
// evaluate and save receiver and args	WITHOUT_CLASSIFICATION	0.9999999924810715	WITHOUT_CLASSIFICATION	7.518928436180694E-9	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999996652714382	WITHOUT_CLASSIFICATION	3.347285618084924E-7	IMPLEMENTATION
// invoke	WITHOUT_CLASSIFICATION	0.9999996652714382	WITHOUT_CLASSIFICATION	3.347285618084924E-7	IMPLEMENTATION
// check if it's true, ending if so	WITHOUT_CLASSIFICATION	0.9999855313237174	WITHOUT_CLASSIFICATION	1.4468676282658898E-5	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999974567245627	WITHOUT_CLASSIFICATION	2.5432754371459705E-6	IMPLEMENTATION
// not true, eval value and assign	WITHOUT_CLASSIFICATION	0.9999974567245627	WITHOUT_CLASSIFICATION	2.5432754371459705E-6	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999827611754372	WITHOUT_CLASSIFICATION	1.7238824562783206E-5	IMPLEMENTATION
// thread context, receiver and original args	WITHOUT_CLASSIFICATION	0.9999827611754372	WITHOUT_CLASSIFICATION	1.7238824562783206E-5	IMPLEMENTATION
// eval value for assignment	WITHOUT_CLASSIFICATION	0.9999999987595399	WITHOUT_CLASSIFICATION	1.2404600631507261E-9	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999981321554426	WITHOUT_CLASSIFICATION	1.8678445573982292E-6	IMPLEMENTATION
// call site	WITHOUT_CLASSIFICATION	0.9999981321554426	WITHOUT_CLASSIFICATION	1.8678445573982292E-6	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999980336322356	WITHOUT_CLASSIFICATION	1.9663677644539176E-6	IMPLEMENTATION
// check if it's true, ending if not	WITHOUT_CLASSIFICATION	0.9999956490206141	WITHOUT_CLASSIFICATION	4.350979385939112E-6	IMPLEMENTATION
// eval value and save it	WITHOUT_CLASSIFICATION	0.9999999207066276	WITHOUT_CLASSIFICATION	7.929337246405221E-8	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
// depending on size of original args, call appropriate utility method	WITHOUT_CLASSIFICATION	0.9999980336322356	WITHOUT_CLASSIFICATION	1.9663677644539176E-6	IMPLEMENTATION
// receiver, args, result, value	WITHOUT_CLASSIFICATION	0.9999999973811424	WITHOUT_CLASSIFICATION	2.618857552685893E-9	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999964225496993	WITHOUT_CLASSIFICATION	3.5774503007775514E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999964225496993	WITHOUT_CLASSIFICATION	3.5774503007775514E-6	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999964225496993	WITHOUT_CLASSIFICATION	3.5774503007775514E-6	IMPLEMENTATION
// super uses current block if none given	WITHOUT_CLASSIFICATION	0.9999994904633212	WITHOUT_CLASSIFICATION	5.095366787485887E-7	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999570397594	WITHOUT_CLASSIFICATION	4.296024048663154E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998040478495	WITHOUT_CLASSIFICATION	1.959521506321519E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998040478495	WITHOUT_CLASSIFICATION	1.959521506321519E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999998711763078	WITHOUT_CLASSIFICATION	1.2882369215041215E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999995539809079	WITHOUT_CLASSIFICATION	4.4601909220398746E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.99999999658855	WITHOUT_CLASSIFICATION	3.4114500919872092E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999809038917	WITHOUT_CLASSIFICATION	1.9096108304816925E-8	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999999864578317	WITHOUT_CLASSIFICATION	1.3542168296755604E-7	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999995681368163	WITHOUT_CLASSIFICATION	4.318631836645162E-7	IMPLEMENTATION
// pop extra attr value	WITHOUT_CLASSIFICATION	0.9999995681368163	WITHOUT_CLASSIFICATION	4.318631836645162E-7	IMPLEMENTATION
// arg and receiver already present on the stack	WITHOUT_CLASSIFICATION	0.9998817905180464	WITHOUT_CLASSIFICATION	1.1820948195367728E-4	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999677689825182	WITHOUT_CLASSIFICATION	3.223101748174413E-5	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999677689825182	WITHOUT_CLASSIFICATION	3.223101748174413E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
// [adapter, tc]	WITHOUT_CLASSIFICATION	0.9999964225496993	WITHOUT_CLASSIFICATION	3.5774503007775514E-6	IMPLEMENTATION
// args	WITHOUT_CLASSIFICATION	0.9999999570397594	WITHOUT_CLASSIFICATION	4.296024048663154E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998040478495	WITHOUT_CLASSIFICATION	1.959521506321519E-7	IMPLEMENTATION
// no args, no block	WITHOUT_CLASSIFICATION	0.9999998711763078	WITHOUT_CLASSIFICATION	1.2882369215041215E-7	IMPLEMENTATION
// no args, with block	WITHOUT_CLASSIFICATION	0.9999995539809079	WITHOUT_CLASSIFICATION	4.4601909220398746E-7	IMPLEMENTATION
// with args, no block	WITHOUT_CLASSIFICATION	0.99999999658855	WITHOUT_CLASSIFICATION	3.4114500919872092E-9	IMPLEMENTATION
// with args, with block	WITHOUT_CLASSIFICATION	0.9999999809038917	WITHOUT_CLASSIFICATION	1.9096108304816925E-8	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999677689825182	WITHOUT_CLASSIFICATION	3.223101748174413E-5	IMPLEMENTATION
// retrieve scope from scopes array	WITHOUT_CLASSIFICATION	0.9999999780322759	WITHOUT_CLASSIFICATION	2.196772411854957E-8	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999996174116288	WITHOUT_CLASSIFICATION	3.825883712423931E-7	IMPLEMENTATION
// retrieve call site from sites array	WITHOUT_CLASSIFICATION	0.9999997210972436	WITHOUT_CLASSIFICATION	2.789027564453551E-7	IMPLEMENTATION
// add name to call site list	WITHOUT_CLASSIFICATION	0.9999995793153593	WITHOUT_CLASSIFICATION	4.2068464061093583E-7	IMPLEMENTATION
// module is on top of stack	WITHOUT_CLASSIFICATION	0.9999999955633917	WITHOUT_CLASSIFICATION	4.436608301915172E-9	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999894459036	WITHOUT_CLASSIFICATION	1.0554096277892696E-8	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999994156299167	WITHOUT_CLASSIFICATION	5.843700833216548E-7	IMPLEMENTATION
// build descriptor string	WITHOUT_CLASSIFICATION	0.9999994156299167	WITHOUT_CLASSIFICATION	5.843700833216548E-7	IMPLEMENTATION
// generate call sites initialization code	WITHOUT_CLASSIFICATION	0.9999998107980093	WITHOUT_CLASSIFICATION	1.892019907806463E-7	IMPLEMENTATION
// generate symbols initialization code	WITHOUT_CLASSIFICATION	0.9999999677992961	WITHOUT_CLASSIFICATION	3.2200703914185434E-8	IMPLEMENTATION
// generate fixnums initialization code	WITHOUT_CLASSIFICATION	0.9999999721222175	WITHOUT_CLASSIFICATION	2.7877782543698878E-8	IMPLEMENTATION
// generate constants initialization code	WITHOUT_CLASSIFICATION	0.999999976278513	WITHOUT_CLASSIFICATION	2.3721487066872944E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999039740687	WITHOUT_CLASSIFICATION	9.602593132076495E-8	IMPLEMENTATION
// generate regexps initialization code	WITHOUT_CLASSIFICATION	0.9999999039740687	WITHOUT_CLASSIFICATION	9.602593132076495E-8	IMPLEMENTATION
// generate variable readers initialization code	WITHOUT_CLASSIFICATION	0.9999999662014112	WITHOUT_CLASSIFICATION	3.37985887861158E-8	IMPLEMENTATION
// generate variable writers initialization code	WITHOUT_CLASSIFICATION	0.9999999939470268	WITHOUT_CLASSIFICATION	6.052973277300987E-9	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999605796899	WITHOUT_CLASSIFICATION	3.94203101997106E-8	IMPLEMENTATION
// generate block bodies initialization code	WITHOUT_CLASSIFICATION	0.9999999605796899	WITHOUT_CLASSIFICATION	3.94203101997106E-8	IMPLEMENTATION
// generate bytelists initialization code	WITHOUT_CLASSIFICATION	0.9999999801321705	WITHOUT_CLASSIFICATION	1.9867829425708107E-8	IMPLEMENTATION
// generate method cache initialization code	WITHOUT_CLASSIFICATION	0.9999976047978554	WITHOUT_CLASSIFICATION	2.395202144556048E-6	IMPLEMENTATION
// adapter, tc, recv, args{0,1}, block{0,1}]	WITHOUT_CLASSIFICATION	0.999999864578317	WITHOUT_CLASSIFICATION	1.3542168296755604E-7	IMPLEMENTATION
// use IRubyObject[]	WITHOUT_CLASSIFICATION	0.9999991420625132	WITHOUT_CLASSIFICATION	8.579374868151173E-7	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999775448184	WITHOUT_CLASSIFICATION	2.2455181623562554E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999545579075	WITHOUT_CLASSIFICATION	4.5442092532882834E-8	IMPLEMENTATION
// No point in updating number if last number was same value.	WITHOUT_CLASSIFICATION	0.9999999924373167	WITHOUT_CLASSIFICATION	7.562683137262393E-9	IMPLEMENTATION
// load Object under value	WITHOUT_CLASSIFICATION	0.9999999297558477	WITHOUT_CLASSIFICATION	7.024415225442307E-8	IMPLEMENTATION
// put under object array already present	WITHOUT_CLASSIFICATION	0.9999673815623993	WITHOUT_CLASSIFICATION	3.261843760082325E-5	IMPLEMENTATION
// if element count is less than 6, use helper methods	WITHOUT_CLASSIFICATION	0.9999999946515244	WITHOUT_CLASSIFICATION	5.3484754618259096E-9	IMPLEMENTATION
// This is pretty inefficient for building an array, so just raise an error if someone's using it for a lot of elements	WITHOUT_CLASSIFICATION	0.9999991782204856	WITHOUT_CLASSIFICATION	8.217795145118358E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999995502915827	WITHOUT_CLASSIFICATION	4.4970841723282283E-7	IMPLEMENTATION
// if we have a specific-arity helper to construct an array for us, use that	WITHOUT_CLASSIFICATION	0.9999995502915827	WITHOUT_CLASSIFICATION	4.4970841723282283E-7	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999985947808524	WITHOUT_CLASSIFICATION	1.4052191476362319E-6	IMPLEMENTATION
// brute force construction inline	WITHOUT_CLASSIFICATION	0.9999985947808524	WITHOUT_CLASSIFICATION	1.4052191476362319E-6	IMPLEMENTATION
// use specific-arity for as much as possible	WITHOUT_CLASSIFICATION	0.9999999834706225	WITHOUT_CLASSIFICATION	1.6529377592255875E-8	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999996831585353	WITHOUT_CLASSIFICATION	3.168414646428597E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999996831585353	WITHOUT_CLASSIFICATION	3.168414646428597E-7	IMPLEMENTATION
// call isTrue on the result	WITHOUT_CLASSIFICATION	0.9999996831585353	WITHOUT_CLASSIFICATION	3.168414646428597E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999632731623197	WITHOUT_CLASSIFICATION	3.6726837680265546E-5	IMPLEMENTATION
// dup it since we need to return appropriately if it's false	WITHOUT_CLASSIFICATION	0.9999632731623197	WITHOUT_CLASSIFICATION	3.6726837680265546E-5	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999023769641	WITHOUT_CLASSIFICATION	9.76230358556991E-8	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999883547837781	WITHOUT_CLASSIFICATION	1.1645216221803316E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999996314422339	WITHOUT_CLASSIFICATION	3.685577660846758E-6	IMPLEMENTATION
// skip catch block	WITHOUT_CLASSIFICATION	0.9999972384921932	WITHOUT_CLASSIFICATION	2.7615078068397314E-6	IMPLEMENTATION
// catch logic for flow-control: next, break	WITHOUT_CLASSIFICATION	0.9999937390323331	WITHOUT_CLASSIFICATION	6.260967666978332E-6	IMPLEMENTATION
// next jump	WITHOUT_CLASSIFICATION	0.9997808885045811	WITHOUT_CLASSIFICATION	2.1911149541888365E-4	IMPLEMENTATION
// exceptionNext target is for a next that doesn't push a new value, like this one	WITHOUT_CLASSIFICATION	0.9999999753154856	WITHOUT_CLASSIFICATION	2.4684514509735236E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999870709924	WITHOUT_CLASSIFICATION	1.2929007555408968E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999870709924	WITHOUT_CLASSIFICATION	1.2929007555408968E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// clear body or next result after each successful loop	WITHOUT_CLASSIFICATION	0.9999999023769641	WITHOUT_CLASSIFICATION	9.76230358556991E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999993437185098	WITHOUT_CLASSIFICATION	6.562814901255025E-7	IMPLEMENTATION
// check the condition	WITHOUT_CLASSIFICATION	0.9999883547837781	WITHOUT_CLASSIFICATION	1.1645216221803316E-5	IMPLEMENTATION
// NE == nonzero (i.e. true)	WITHOUT_CLASSIFICATION	0.999996314422339	WITHOUT_CLASSIFICATION	3.685577660846758E-6	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999966125582137	WITHOUT_CLASSIFICATION	3.3874417862070777E-6	IMPLEMENTATION
// break jump	WITHOUT_CLASSIFICATION	0.9999990165859165	WITHOUT_CLASSIFICATION	9.834140834703616E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994517928565	WITHOUT_CLASSIFICATION	5.482071434663199E-7	IMPLEMENTATION
//[reg]	WITHOUT_CLASSIFICATION	0.9999737891384268	WITHOUT_CLASSIFICATION	2.6210861573131942E-5	IMPLEMENTATION
// for regular expressions with the /o flag	WITHOUT_CLASSIFICATION	0.999861300775306	WITHOUT_CLASSIFICATION	1.3869922469400062E-4	IMPLEMENTATION
// inside a loop, jump to body	WITHOUT_CLASSIFICATION	0.9999999971476139	WITHOUT_CLASSIFICATION	2.8523861320104065E-9	IMPLEMENTATION
// inside a loop, jump to conditional	WITHOUT_CLASSIFICATION	0.9999993564420157	WITHOUT_CLASSIFICATION	6.435579842997637E-7	IMPLEMENTATION
// synthetic methods always have zero arg parameters	WITHOUT_CLASSIFICATION	0.9999966125582137	WITHOUT_CLASSIFICATION	3.3874417862070777E-6	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999959730221	WITHOUT_CLASSIFICATION	4.02697789599845E-9	IMPLEMENTATION
// store previous exception for restoration if we rescue something	WITHOUT_CLASSIFICATION	0.9999999959730221	WITHOUT_CLASSIFICATION	4.02697789599845E-9	IMPLEMENTATION
// if more than 4 vars, get values array too	WITHOUT_CLASSIFICATION	0.9999999778603409	WITHOUT_CLASSIFICATION	2.2139659120081722E-8	IMPLEMENTATION
// retry handling in the rescue block	WITHOUT_CLASSIFICATION	0.9999991332909504	WITHOUT_CLASSIFICATION	8.667090496713572E-7	IMPLEMENTATION
// any exceptions raised must continue to be raised, skipping $! restoration	WITHOUT_CLASSIFICATION	0.9999997828752001	WITHOUT_CLASSIFICATION	2.1712479982405524E-7	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999990491704843	WITHOUT_CLASSIFICATION	9.508295155756177E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999999685460753	WITHOUT_CLASSIFICATION	3.145392469580817E-7	IMPLEMENTATION
// Handle Flow exceptions, just propagating them	WITHOUT_CLASSIFICATION	0.9999983895841258	WITHOUT_CLASSIFICATION	1.6104158742817624E-6	IMPLEMENTATION
// rethrow to outer flow catcher	WITHOUT_CLASSIFICATION	0.9999640147792804	WITHOUT_CLASSIFICATION	3.598522071958016E-5	IMPLEMENTATION
// Handle Ruby exceptions (RaiseException)	WITHOUT_CLASSIFICATION	0.9999993879361617	WITHOUT_CLASSIFICATION	6.120638382960319E-7	IMPLEMENTATION
// inside a loop, break out of it // go to end of loop, leaving break value on stack	WITHOUT_CLASSIFICATION	0.9999999341118582	WITHOUT_CLASSIFICATION	6.588814186221593E-8	IMPLEMENTATION
// false // zero	WITHOUT_CLASSIFICATION	0.999999197106623	WITHOUT_CLASSIFICATION	8.028933770470133E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999998924817181	WITHOUT_CLASSIFICATION	1.075182819004E-6	IMPLEMENTATION
// and remaining jump exceptions should restore $!	WITHOUT_CLASSIFICATION	0.9999990491704843	WITHOUT_CLASSIFICATION	9.508295155756177E-7	IMPLEMENTATION
// restore the original exception	WITHOUT_CLASSIFICATION	0.999999685460753	WITHOUT_CLASSIFICATION	3.145392469580817E-7	IMPLEMENTATION
// retry handling in the rescue blocks	WITHOUT_CLASSIFICATION	0.9999994386980103	WITHOUT_CLASSIFICATION	5.613019896782983E-7	IMPLEMENTATION
// push false	WITHOUT_CLASSIFICATION	0.9999992630250109	WITHOUT_CLASSIFICATION	7.369749892255395E-7	IMPLEMENTATION
//method.invokeinterface(p(IRubyObject.class), "getInstanceVariable", sig(IRubyObject.class, params(String.class)));	WITHOUT_CLASSIFICATION	0.999999999793616	WITHOUT_CLASSIFICATION	2.0638393579279833E-10	IMPLEMENTATION
//method.ifnonnull(trueLabel);	WITHOUT_CLASSIFICATION	0.9999994083421149	WITHOUT_CLASSIFICATION	5.916578851583665E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)   //[C]	WITHOUT_CLASSIFICATION	0.999999970755406	WITHOUT_CLASSIFICATION	2.924459406263217E-8	IMPLEMENTATION
//[C, C] //[C, C, String] //[C, null|C]	WITHOUT_CLASSIFICATION	0.9999996166584718	WITHOUT_CLASSIFICATION	3.833415281247532E-7	IMPLEMENTATION
//[C]	WITHOUT_CLASSIFICATION	0.9999865085869388	WITHOUT_CLASSIFICATION	1.3491413061065788E-5	IMPLEMENTATION
// push true	WITHOUT_CLASSIFICATION	0.9999930205983488	WITHOUT_CLASSIFICATION	6.9794016511769196E-6	IMPLEMENTATION
// EQ != 0 (i.e. true)	WITHOUT_CLASSIFICATION	0.9999987161817296	WITHOUT_CLASSIFICATION	1.2838182702999726E-6	IMPLEMENTATION
//[?, ?] //[?, boolean]	WITHOUT_CLASSIFICATION	0.99999940636005	WITHOUT_CLASSIFICATION	5.93639950036154E-7	IMPLEMENTATION
//[RubyModule] //[RubyModule, String]	WITHOUT_CLASSIFICATION	0.9999995860692443	WITHOUT_CLASSIFICATION	4.1393075561789686E-7	IMPLEMENTATION
//[boolean]	WITHOUT_CLASSIFICATION	0.9999455837271323	WITHOUT_CLASSIFICATION	5.441627286769878E-5	IMPLEMENTATION
// no receiver for singleton class	WITHOUT_CLASSIFICATION	0.9999993809250103	WITHOUT_CLASSIFICATION	6.190749897169974E-7	IMPLEMENTATION
// but there's a superclass passed in, use it	WITHOUT_CLASSIFICATION	0.999999993619529	WITHOUT_CLASSIFICATION	6.3804710645846164E-9	IMPLEMENTATION
// we re-set self to the class, but store the old self in a temporary local variable // this is to prevent it GCing in case the singleton is short-lived	WITHOUT_CLASSIFICATION	0.9999999999306614	WITHOUT_CLASSIFICATION	6.933863877312564E-11	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999969603738	WITHOUT_CLASSIFICATION	3.0396261790390772E-9	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999883918671971	WITHOUT_CLASSIFICATION	1.160813280289323E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999996378690865	WITHOUT_CLASSIFICATION	3.62130913539086E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999995493043	WITHOUT_CLASSIFICATION	4.506956918263945E-10	IMPLEMENTATION
// new instance to invoke run against	WITHOUT_CLASSIFICATION	0.999999329555669	WITHOUT_CLASSIFICATION	6.704443309791623E-7	IMPLEMENTATION
// CLASS BODY	WITHOUT_CLASSIFICATION	0.9999883918671971	WITHOUT_CLASSIFICATION	1.160813280289323E-5	IMPLEMENTATION
// static scope	WITHOUT_CLASSIFICATION	0.9999996378690865	WITHOUT_CLASSIFICATION	3.62130913539086E-7	IMPLEMENTATION
// Here starts the logic for the class definition	WITHOUT_CLASSIFICATION	0.9999999995493043	WITHOUT_CLASSIFICATION	4.506956918263945E-10	IMPLEMENTATION
// finally with exception	WITHOUT_CLASSIFICATION	0.9999998981139201	WITHOUT_CLASSIFICATION	1.0188607986051334E-7	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999992577765779	WITHOUT_CLASSIFICATION	7.422234220945411E-7	IMPLEMENTATION
// otherwise, there's a receiver, so we pass that in directly for the sclass logic	WITHOUT_CLASSIFICATION	0.9999954394081717	WITHOUT_CLASSIFICATION	4.560591828246336E-6	IMPLEMENTATION
// original exception is on stack	WITHOUT_CLASSIFICATION	0.9999995037177778	WITHOUT_CLASSIFICATION	4.962822222298023E-7	IMPLEMENTATION
// RaiseException is on stack, get RubyException out	WITHOUT_CLASSIFICATION	0.9999999928596607	WITHOUT_CLASSIFICATION	7.1403392324504356E-9	IMPLEMENTATION
// updating position for same line; skip	WITHOUT_CLASSIFICATION	0.9999995963704179	WITHOUT_CLASSIFICATION	4.0362958211248215E-7	IMPLEMENTATION
// callbacks to fill in method body	WITHOUT_CLASSIFICATION	0.9999999088928596	WITHOUT_CLASSIFICATION	9.110714042350246E-8	IMPLEMENTATION
// prepare to call "def" utility method to handle def logic	WITHOUT_CLASSIFICATION	0.9999675218948194	WITHOUT_CLASSIFICATION	3.24781051805306E-5	IMPLEMENTATION
// script object	WITHOUT_CLASSIFICATION	0.9999988543852554	WITHOUT_CLASSIFICATION	1.1456147445928373E-6	IMPLEMENTATION
// arities	WITHOUT_CLASSIFICATION	0.9999997255507678	WITHOUT_CLASSIFICATION	2.7444923222349493E-7	IMPLEMENTATION
// TODO assuming case is a fixnum	WITHOUT_CLASSIFICATION	0.9960222599796992	WITHOUT_CLASSIFICATION	0.003977740020300818	IMPLEMENTATION
// we have an input case, prepare branching logic	WITHOUT_CLASSIFICATION	0.9999999500593357	WITHOUT_CLASSIFICATION	4.9940664300660984E-8	IMPLEMENTATION
// we have optimized switch cases, build a lookupswitch	WITHOUT_CLASSIFICATION	0.9999998988224313	WITHOUT_CLASSIFICATION	1.0117756864517802E-7	IMPLEMENTATION
// checkcast the value; if match, fast path; otherwise proceed to slow logic	WITHOUT_CLASSIFICATION	0.9999505012464238	WITHOUT_CLASSIFICATION	4.94987535761508E-5	IMPLEMENTATION
// expression-based tests + bodies	WITHOUT_CLASSIFICATION	0.9999998012602533	WITHOUT_CLASSIFICATION	1.9873974666288698E-7	IMPLEMENTATION
// normal case, create a new label	WITHOUT_CLASSIFICATION	0.9999987841816532	WITHOUT_CLASSIFICATION	1.2158183466905016E-6	IMPLEMENTATION
// last conditional case, use defaultCase	WITHOUT_CLASSIFICATION	0.9999974116219382	WITHOUT_CLASSIFICATION	2.5883780618946786E-6	IMPLEMENTATION
// do nothing; arity check is done before call	WITHOUT_CLASSIFICATION	0.9999999437749804	WITHOUT_CLASSIFICATION	5.6225019705423383E-8	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999882657371122	WITHOUT_CLASSIFICATION	1.1734262887780331E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996465991036	WITHOUT_CLASSIFICATION	3.5340089652337673E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999992868944144	WITHOUT_CLASSIFICATION	7.131055854935563E-7	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999896958538613	WITHOUT_CLASSIFICATION	1.0304146138714347E-5	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999896958538613	WITHOUT_CLASSIFICATION	1.0304146138714347E-5	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999993088603231	WITHOUT_CLASSIFICATION	6.911396770156253E-7	IMPLEMENTATION
// prepare labels for opt logic	WITHOUT_CLASSIFICATION	0.9999993088603231	WITHOUT_CLASSIFICATION	6.911396770156253E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999997120520299	WITHOUT_CLASSIFICATION	2.879479701284485E-7	IMPLEMENTATION
// next, iterate over all optional args, until no more arguments	WITHOUT_CLASSIFICATION	0.9999997120520299	WITHOUT_CLASSIFICATION	2.879479701284485E-7	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999971862978491	WITHOUT_CLASSIFICATION	2.813702150884394E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999035280552	WITHOUT_CLASSIFICATION	9.647194467431102E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999703124327	WITHOUT_CLASSIFICATION	2.9687567265855232E-8	IMPLEMENTATION
// if there's args left and we want them, assign to rest arg	WITHOUT_CLASSIFICATION	0.9999999110638134	WITHOUT_CLASSIFICATION	8.893618659737896E-8	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999998522511	WITHOUT_CLASSIFICATION	1.4774903846336306E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999786716235	WITHOUT_CLASSIFICATION	2.132837646605569E-8	IMPLEMENTATION
// first, iterate over all pre args	WITHOUT_CLASSIFICATION	0.9999999515950252	WITHOUT_CLASSIFICATION	4.840497490597233E-8	IMPLEMENTATION
// then optional args	WITHOUT_CLASSIFICATION	0.999997875509261	WITHOUT_CLASSIFICATION	2.1244907389684393E-6	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999870709924	WITHOUT_CLASSIFICATION	1.2929007555408968E-8	IMPLEMENTATION
// now logic for each optional value	WITHOUT_CLASSIFICATION	0.9999971862978491	WITHOUT_CLASSIFICATION	2.813702150884394E-6	IMPLEMENTATION
// otherwise no items left available, use the code for default	WITHOUT_CLASSIFICATION	0.9999999035280552	WITHOUT_CLASSIFICATION	9.647194467431102E-8	IMPLEMENTATION
// pop extra failed value from first cycle and we're done	WITHOUT_CLASSIFICATION	0.9999999703124327	WITHOUT_CLASSIFICATION	2.9687567265855232E-8	IMPLEMENTATION
// assign remaining elements as an array for rest args (or empty array)	WITHOUT_CLASSIFICATION	0.9999999998522511	WITHOUT_CLASSIFICATION	1.4774903846336306E-10	IMPLEMENTATION
// block argument assignment, if there's a block arg	WITHOUT_CLASSIFICATION	0.9999999786716235	WITHOUT_CLASSIFICATION	2.132837646605569E-8	IMPLEMENTATION
// if rest args, excluding post args	WITHOUT_CLASSIFICATION	0.9999999968545832	WITHOUT_CLASSIFICATION	3.1454166843890768E-9	IMPLEMENTATION
// finally, post args	WITHOUT_CLASSIFICATION	0.9999997158650005	WITHOUT_CLASSIFICATION	2.841349994383428E-7	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999978775665454	WITHOUT_CLASSIFICATION	2.122433454600496E-5	IMPLEMENTATION
// not an expression, don't want result; pop it	WITHOUT_CLASSIFICATION	0.999978775665454	WITHOUT_CLASSIFICATION	2.122433454600496E-5	IMPLEMENTATION
// unwrap scopes to appropriate depth	WITHOUT_CLASSIFICATION	0.999999122821659	WITHOUT_CLASSIFICATION	8.771783409100906E-7	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998502543956	WITHOUT_CLASSIFICATION	1.4974560423701275E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998584927989	WITHOUT_CLASSIFICATION	1.415072010830833E-7	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999105503091	WITHOUT_CLASSIFICATION	8.944969084471802E-8	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999105503091	WITHOUT_CLASSIFICATION	8.944969084471802E-8	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999942277875	WITHOUT_CLASSIFICATION	5.7722124825032534E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999986032235	WITHOUT_CLASSIFICATION	1.3967765275752555E-9	IMPLEMENTATION
// store the local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999746935059	WITHOUT_CLASSIFICATION	2.5306494059861056E-8	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999881461882821	WITHOUT_CLASSIFICATION	1.1853811717993451E-5	IMPLEMENTATION
// return in a class body raises error	WITHOUT_CLASSIFICATION	0.9999999940319678	WITHOUT_CLASSIFICATION	5.9680322544794945E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999941166108	WITHOUT_CLASSIFICATION	5.883389230983298E-9	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999991006358	WITHOUT_CLASSIFICATION	8.993642024079804E-9	IMPLEMENTATION
// end of variable scope	WITHOUT_CLASSIFICATION	0.9999999950939849	WITHOUT_CLASSIFICATION	4.906015180418233E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999990162494	WITHOUT_CLASSIFICATION	9.837506077620102E-9	IMPLEMENTATION
// load block from [] version of method	WITHOUT_CLASSIFICATION	0.9999991639471775	WITHOUT_CLASSIFICATION	8.360528224663511E-7	IMPLEMENTATION
// normal return for method body. return jump for within a begin/rescue/ensure	WITHOUT_CLASSIFICATION	0.9999804663028806	WITHOUT_CLASSIFICATION	1.9533697119304686E-5	IMPLEMENTATION
// declare locals for Java debugging purposes	WITHOUT_CLASSIFICATION	0.9999999942277875	WITHOUT_CLASSIFICATION	5.7722124825032534E-9	IMPLEMENTATION
// class bodies prepare their own dynamic scope, so let it do that	WITHOUT_CLASSIFICATION	0.9999999986032235	WITHOUT_CLASSIFICATION	1.3967765275752555E-9	IMPLEMENTATION
// load args[0] which will be the IRubyObject representing block args	WITHOUT_CLASSIFICATION	0.9999881461882821	WITHOUT_CLASSIFICATION	1.1853811717993451E-5	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999826195591782	WITHOUT_CLASSIFICATION	1.7380440821770427E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998584927989	WITHOUT_CLASSIFICATION	1.415072010830833E-7	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998584927989	WITHOUT_CLASSIFICATION	1.415072010830833E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999998924817181	WITHOUT_CLASSIFICATION	1.075182819004E-6	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999998924817181	WITHOUT_CLASSIFICATION	1.075182819004E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9949688697405389	WITHOUT_CLASSIFICATION	0.00503113025946108	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9949688697405389	WITHOUT_CLASSIFICATION	0.00503113025946108	IMPLEMENTATION
// store the local vars in a local variable if there are any	WITHOUT_CLASSIFICATION	0.9999999984746032	WITHOUT_CLASSIFICATION	1.5253967470791309E-9	IMPLEMENTATION
// if more than 4 locals, get and populate the locals array too	WITHOUT_CLASSIFICATION	0.9999999957021418	WITHOUT_CLASSIFICATION	4.297858196347693E-9	IMPLEMENTATION
// fill local vars with nil, to avoid checking every access.	WITHOUT_CLASSIFICATION	0.9999934086127729	WITHOUT_CLASSIFICATION	6.59138722722412E-6	IMPLEMENTATION
// default for starting tempVariableIndex is ok	WITHOUT_CLASSIFICATION	0.9999999256792554	WITHOUT_CLASSIFICATION	7.432074450247864E-8	IMPLEMENTATION
// store the local vars in a local variable for preparing the class (using previous scope)	WITHOUT_CLASSIFICATION	0.9999999999597337	WITHOUT_CLASSIFICATION	4.026639674452496E-11	IMPLEMENTATION
// store the new local vars in a local variable	WITHOUT_CLASSIFICATION	0.9999999858510098	WITHOUT_CLASSIFICATION	1.4148990176616923E-8	IMPLEMENTATION
// in 1.8 mode, this will be a RubyArray containing the arguments // in 1.9 mode, this will be an IRubyObject[]	WITHOUT_CLASSIFICATION	0.999999991733143	WITHOUT_CLASSIFICATION	8.266856899873277E-9	IMPLEMENTATION
// no variable initialization, because we're reusing parent's scope (flat)	WITHOUT_CLASSIFICATION	0.9999999886697891	WITHOUT_CLASSIFICATION	1.133021084883863E-8	IMPLEMENTATION
// for specific-index cases, clean up non-expression values	WITHOUT_CLASSIFICATION	0.9999989737520055	WITHOUT_CLASSIFICATION	1.0262479943995849E-6	IMPLEMENTATION
// set up a local Ruby variable	WITHOUT_CLASSIFICATION	0.9999997870561664	WITHOUT_CLASSIFICATION	2.129438335478991E-7	IMPLEMENTATION
// if that succeeds, the others should as well	WITHOUT_CLASSIFICATION	0.999999870203905	WITHOUT_CLASSIFICATION	1.2979609491347948E-7	IMPLEMENTATION
// verify the class	WITHOUT_CLASSIFICATION	0.9999996344649322	WITHOUT_CLASSIFICATION	3.6553506777812224E-7	IMPLEMENTATION
// create dir if necessary	WITHOUT_CLASSIFICATION	0.9999999476218893	WITHOUT_CLASSIFICATION	5.2378110625642235E-8	IMPLEMENTATION
// Create the class with the appropriate class name and source file	WITHOUT_CLASSIFICATION	0.9999999668178416	WITHOUT_CLASSIFICATION	3.3182158320472854E-8	IMPLEMENTATION
// add setPosition impl, which stores filename as constant to speed updates	WITHOUT_CLASSIFICATION	0.9999987004071388	WITHOUT_CLASSIFICATION	1.299592861231837E-6	IMPLEMENTATION
// thread context	WITHOUT_CLASSIFICATION	0.9999122103347755	WITHOUT_CLASSIFICATION	8.77896652243963E-5	IMPLEMENTATION
// line number	WITHOUT_CLASSIFICATION	0.9999996221250295	WITHOUT_CLASSIFICATION	3.7787497043818064E-7	IMPLEMENTATION
// invoke __file__ with threadcontext, self, args (null), and block (null)	WITHOUT_CLASSIFICATION	0.9999999577313132	WITHOUT_CLASSIFICATION	4.226868683430454E-8	IMPLEMENTATION
// load always uses IRubyObject[], so simple closure offset calculation here	WITHOUT_CLASSIFICATION	0.9999626842514525	WITHOUT_CLASSIFICATION	3.731574854755299E-5	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999991006358	WITHOUT_CLASSIFICATION	8.993642024079804E-9	IMPLEMENTATION
// method is done, declare all variables	WITHOUT_CLASSIFICATION	0.999999990162494	WITHOUT_CLASSIFICATION	9.837506077620102E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999966826253	WITHOUT_CLASSIFICATION	3.3173747119102125E-9	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998040478495	WITHOUT_CLASSIFICATION	1.959521506321519E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998040478495	WITHOUT_CLASSIFICATION	1.959521506321519E-7	IMPLEMENTATION
// we force argParamCount to 1 since we always know we'll have [] args	WITHOUT_CLASSIFICATION	0.9999826195591782	WITHOUT_CLASSIFICATION	1.7380440821770427E-5	IMPLEMENTATION
// chain to the next segment of this giant method	WITHOUT_CLASSIFICATION	0.9999998584927989	WITHOUT_CLASSIFICATION	1.415072010830833E-7	IMPLEMENTATION
// load all arguments straight through	WITHOUT_CLASSIFICATION	0.999998924817181	WITHOUT_CLASSIFICATION	1.075182819004E-6	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9949688697405389	WITHOUT_CLASSIFICATION	0.00503113025946108	IMPLEMENTATION
// add Script#run impl, used for running this script with a specified threadcontext and self // root method of a script is always in __file__ method	WITHOUT_CLASSIFICATION	0.9999957134977377	WITHOUT_CLASSIFICATION	4.28650226230925E-6	IMPLEMENTATION
// add main impl, used for detached or command-line execution of this script with a new runtime // root method of a script is always in stub0, method0	WITHOUT_CLASSIFICATION	0.9999981560449275	WITHOUT_CLASSIFICATION	1.8439550724757898E-6	IMPLEMENTATION
// construct static scope list of names	WITHOUT_CLASSIFICATION	0.9999997648372084	WITHOUT_CLASSIFICATION	2.3516279147174834E-7	IMPLEMENTATION
// JRUBY-3014: make __FILE__ dynamically determined at load time, but // we provide a reasonable default here	WITHOUT_CLASSIFICATION	0.9999997564555203	WITHOUT_CLASSIFICATION	2.4354447968503484E-7	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999788493695	WITHOUT_CLASSIFICATION	2.115063053519812E-8	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999788493695	WITHOUT_CLASSIFICATION	2.115063053519812E-8	IMPLEMENTATION
// lazily create class init only if necessary	WITHOUT_CLASSIFICATION	0.9999999921681209	WITHOUT_CLASSIFICATION	7.831879050647235E-9	IMPLEMENTATION
// boxed arg list __file__	WITHOUT_CLASSIFICATION	0.9999998593304221	WITHOUT_CLASSIFICATION	1.4066957778098672E-7	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999759405868	WITHOUT_CLASSIFICATION	2.4059413260293112E-8	IMPLEMENTATION
// exact arg list __file__	WITHOUT_CLASSIFICATION	0.9999998643655222	WITHOUT_CLASSIFICATION	1.3563447771410626E-7	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989098794883	WITHOUT_CLASSIFICATION	1.0901205118271051E-6	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989098794883	WITHOUT_CLASSIFICATION	1.0901205118271051E-6	IMPLEMENTATION
// not using a new scope, use saved one for a flat closure	WITHOUT_CLASSIFICATION	0.9999999263947748	WITHOUT_CLASSIFICATION	7.360522529999878E-8	IMPLEMENTATION
// normal closure	WITHOUT_CLASSIFICATION	0.9999967333461529	WITHOUT_CLASSIFICATION	3.2666538470804715E-6	IMPLEMENTATION
// end of scoping for closure's vars	WITHOUT_CLASSIFICATION	0.9999999940756069	WITHOUT_CLASSIFICATION	5.924393068238217E-9	IMPLEMENTATION
// we only need full-on redo exception handling if there's logic that might produce it	WITHOUT_CLASSIFICATION	0.9999957072666714	WITHOUT_CLASSIFICATION	4.2927333286566295E-6	IMPLEMENTATION
// handle redos by restarting the block	WITHOUT_CLASSIFICATION	0.9999994035058531	WITHOUT_CLASSIFICATION	5.964941469508962E-7	IMPLEMENTATION
// jump back to the top of the main body of this closure	WITHOUT_CLASSIFICATION	0.9999999984727472	WITHOUT_CLASSIFICATION	1.5272528105496718E-9	IMPLEMENTATION
// Ruby name 	WITHOUT_CLASSIFICATION	0.9999999106637422	WITHOUT_CLASSIFICATION	8.93362578697359E-8	IMPLEMENTATION
// Accumulate call arguments	WITHOUT_CLASSIFICATION	0.999999990638666	WITHOUT_CLASSIFICATION	9.36133404516827E-9	IMPLEMENTATION
// Fix FileNameCompletor to work mid-line	WITHOUT_CLASSIFICATION	0.9994821008112124	WITHOUT_CLASSIFICATION	5.178991887876485E-4	IMPLEMENTATION
// We need to ensure that the variable names generated here cannot conflict with ruby variable names! // Hence the "%" tthat is appended to the beginning!	WITHOUT_CLASSIFICATION	0.998972350626803	WITHOUT_CLASSIFICATION	0.0010276493731970365	IMPLEMENTATION
// Does this method define code?  // Default is yes -- which basically leads to pessimistic but safe optimizations // But, for library and internal methods, this might be false.	WITHOUT_CLASSIFICATION	0.9999999904744472	WITHOUT_CLASSIFICATION	9.52555289138375E-9	IMPLEMENTATION
// Map of constants defined in this scope (not valid for methods!)	WITHOUT_CLASSIFICATION	0.999999993607575	WITHOUT_CLASSIFICATION	6.392425024964939E-9	IMPLEMENTATION
// NOTE: Since we are processing ASTs, loop bodies are processed in depth-first manner // with outer loops encountered before inner loops, and inner loops finished before outer ones. // // So, we can keep track of loops in a loop stack which  keeps track of loops as they are encountered. // This lets us implement next/redo/break/retry easily for the non-closure cases	WITHOUT_CLASSIFICATION	0.9999999511725864	WITHOUT_CLASSIFICATION	4.882741344922151E-8	IMPLEMENTATION
// Map keep track of the next available variable index for a particular prefix	WITHOUT_CLASSIFICATION	0.9999735088359409	WITHOUT_CLASSIFICATION	2.6491164058936762E-5	IMPLEMENTATION
// Control flow graph for this scope	WITHOUT_CLASSIFICATION	0.9999992296517303	WITHOUT_CLASSIFICATION	7.703482697139135E-7	IMPLEMENTATION
//        _lexicalNestingLevel = lexicalParent == null ? 0 : ((IR_ScopeImpl)lexicalParent)._lexicalNestingLevel + 1;	WITHOUT_CLASSIFICATION	0.9999048228208307	WITHOUT_CLASSIFICATION	9.517717916928688E-5	IMPLEMENTATION
// List of modules, classes, and methods defined in this scope!	WITHOUT_CLASSIFICATION	0.9999999999967717	WITHOUT_CLASSIFICATION	3.2283403658183305E-12	IMPLEMENTATION
// Returns the containing parent scope!	WITHOUT_CLASSIFICATION	0.9999803733764605	WITHOUT_CLASSIFICATION	1.962662353944949E-5	IMPLEMENTATION
// Insert nesting level to ensure variable names don't conflict across nested scopes! // i.e. definition of %v_1 in a closure shouldn't override the use of %v_1 from the parent scope! //        return new Variable(prefix + _lexicalNestingLevel + "_" + idx);	WITHOUT_CLASSIFICATION	0.9999999510365825	WITHOUT_CLASSIFICATION	4.896341757386434E-8	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.999999871413191	WITHOUT_CLASSIFICATION	1.2858680895020413E-7	IMPLEMENTATION
// variable is never read, variable is never live	WITHOUT_CLASSIFICATION	0.9999933851597496	WITHOUT_CLASSIFICATION	6.614840250450466E-6	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.999999934628017	WITHOUT_CLASSIFICATION	6.537198312146966E-8	IMPLEMENTATION
// inline script	WITHOUT_CLASSIFICATION	0.999999934628017	WITHOUT_CLASSIFICATION	6.537198312146966E-8	IMPLEMENTATION
// This method is called to build assignments for a multiple-assignment instruction	WITHOUT_CLASSIFICATION	0.9999997241126375	WITHOUT_CLASSIFICATION	2.758873624961314E-7	IMPLEMENTATION
// Build the class body!	WITHOUT_CLASSIFICATION	0.9999999915051027	WITHOUT_CLASSIFICATION	8.49489737915637E-9	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999978297682008	WITHOUT_CLASSIFICATION	2.1702317992040823E-6	IMPLEMENTATION
// unwrap newline nodes to get their actual type	WITHOUT_CLASSIFICATION	0.9999978297682008	WITHOUT_CLASSIFICATION	2.1702317992040823E-6	IMPLEMENTATION
// SSS FIXME: Can this ever be null?	WITHOUT_CLASSIFICATION	0.9988807863441124	WITHOUT_CLASSIFICATION	0.0011192136558876241	IMPLEMENTATION
// Run the pass on the passed in scope!	WITHOUT_CLASSIFICATION	0.9999999813348859	WITHOUT_CLASSIFICATION	1.866511420558344E-8	IMPLEMENTATION
// done // done // done // done	WITHOUT_CLASSIFICATION	0.9999958506924819	WITHOUT_CLASSIFICATION	4.149307518037766E-6	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999992944937	WITHOUT_CLASSIFICATION	7.05506291702555E-10	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999992944937	WITHOUT_CLASSIFICATION	7.05506291702555E-10	IMPLEMENTATION
// This method is called to build arguments for a block!	WITHOUT_CLASSIFICATION	0.9999985239171315	WITHOUT_CLASSIFICATION	1.476082868455106E-6	IMPLEMENTATION
// build first node (and ignore its result) and then second node	WITHOUT_CLASSIFICATION	0.9999999887232317	WITHOUT_CLASSIFICATION	1.1276768285813572E-8	IMPLEMENTATION
// build first node only and return false	WITHOUT_CLASSIFICATION	0.9999996444416227	WITHOUT_CLASSIFICATION	3.5555837730590053E-7	IMPLEMENTATION
// Value of the last expression in the block 	WITHOUT_CLASSIFICATION	0.9999999156919516	WITHOUT_CLASSIFICATION	8.430804840607092E-8	IMPLEMENTATION
// If this is not a closure, the break is equivalent to jumping to the loop end label	WITHOUT_CLASSIFICATION	0.9999994590757529	WITHOUT_CLASSIFICATION	5.409242471075707E-7	IMPLEMENTATION
// get the incoming case value	WITHOUT_CLASSIFICATION	0.9999999929751033	WITHOUT_CLASSIFICATION	7.024896673792261E-9	IMPLEMENTATION
// the CASE instruction	WITHOUT_CLASSIFICATION	0.9999994998952504	WITHOUT_CLASSIFICATION	5.001047496830702E-7	IMPLEMENTATION
// lists to aggregate variables and bodies for whens	WITHOUT_CLASSIFICATION	0.9999999567821442	WITHOUT_CLASSIFICATION	4.321785591036857E-8	IMPLEMENTATION
// build each "when"	WITHOUT_CLASSIFICATION	0.9999995307843099	WITHOUT_CLASSIFICATION	4.6921569010106707E-7	IMPLEMENTATION
// multiple conditions for when	WITHOUT_CLASSIFICATION	0.99999595681085	WITHOUT_CLASSIFICATION	4.04318915004389E-6	IMPLEMENTATION
// build "else" if it exists	WITHOUT_CLASSIFICATION	0.9999981550403417	WITHOUT_CLASSIFICATION	1.8449596582783972E-6	IMPLEMENTATION
// now emit bodies	WITHOUT_CLASSIFICATION	0.9999830188536836	WITHOUT_CLASSIFICATION	1.698114631650949E-5	IMPLEMENTATION
// close it out	WITHOUT_CLASSIFICATION	0.9999998265124517	WITHOUT_CLASSIFICATION	1.7348754838565262E-7	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999499543687	WITHOUT_CLASSIFICATION	5.0045631225874096E-8	IMPLEMENTATION
// Do we have a dynamic container?	WITHOUT_CLASSIFICATION	0.9996212461318648	WITHOUT_CLASSIFICATION	3.7875386813535474E-4	IMPLEMENTATION
// Return a meta object corresponding to the class	WITHOUT_CLASSIFICATION	0.999999460756729	WITHOUT_CLASSIFICATION	5.392432710171478E-7	IMPLEMENTATION
// 1. Load the module first (lhs of node) // 2. Then load the constant from the module	WITHOUT_CLASSIFICATION	0.9999999990981557	WITHOUT_CLASSIFICATION	9.018442692711094E-10	IMPLEMENTATION
// Build IR for args	WITHOUT_CLASSIFICATION	0.9999967555946261	WITHOUT_CLASSIFICATION	3.2444053738462043E-6	IMPLEMENTATION
// Build IR for body	WITHOUT_CLASSIFICATION	0.9999942769647165	WITHOUT_CLASSIFICATION	5.723035283500648E-6	IMPLEMENTATION
// if root of method is rescue, build as a light rescue	WITHOUT_CLASSIFICATION	0.9999999956696178	WITHOUT_CLASSIFICATION	4.330382078991152E-9	IMPLEMENTATION
// Instance method	WITHOUT_CLASSIFICATION	0.9999979161616372	WITHOUT_CLASSIFICATION	2.0838383627319833E-6	IMPLEMENTATION
// Class method	WITHOUT_CLASSIFICATION	0.9999999291397144	WITHOUT_CLASSIFICATION	7.08602856448301E-8	IMPLEMENTATION
// Other args begin at index 1	WITHOUT_CLASSIFICATION	0.9999829331919815	WITHOUT_CLASSIFICATION	1.706680801850852E-5	IMPLEMENTATION
// Both for fixed arity and variable arity methods	WITHOUT_CLASSIFICATION	0.9999998931311979	WITHOUT_CLASSIFICATION	1.0686880208547576E-7	IMPLEMENTATION
// Now for the rest	WITHOUT_CLASSIFICATION	0.9999479144652927	WITHOUT_CLASSIFICATION	5.2085534707228554E-5	IMPLEMENTATION
// Jump to 'l' if this arg is not null.  If null, fall through and build the default value!	WITHOUT_CLASSIFICATION	0.999999900577741	WITHOUT_CLASSIFICATION	9.942225898441473E-8	IMPLEMENTATION
// This is not an expression that computes anything	WITHOUT_CLASSIFICATION	0.999475735398246	WITHOUT_CLASSIFICATION	5.242646017540243E-4	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999812932272	WITHOUT_CLASSIFICATION	1.870677281798285E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999987330759548	WITHOUT_CLASSIFICATION	1.2669240453267694E-6	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999934963375	WITHOUT_CLASSIFICATION	6.503662480769955E-9	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999068052506	WITHOUT_CLASSIFICATION	9.319474933553942E-8	IMPLEMENTATION
// By default, the container for this class is 's'	WITHOUT_CLASSIFICATION	0.9999999499543687	WITHOUT_CLASSIFICATION	5.0045631225874096E-8	IMPLEMENTATION
// Create a new closure context	WITHOUT_CLASSIFICATION	0.9999999812932272	WITHOUT_CLASSIFICATION	1.870677281798285E-8	IMPLEMENTATION
// Build args	WITHOUT_CLASSIFICATION	0.9999987330759548	WITHOUT_CLASSIFICATION	1.2669240453267694E-6	IMPLEMENTATION
// Assign the closure to the block variable in the parent scope and return it	WITHOUT_CLASSIFICATION	0.9999999068052506	WITHOUT_CLASSIFICATION	9.319474933553942E-8	IMPLEMENTATION
// Get the container for this new module	WITHOUT_CLASSIFICATION	0.9999996840727664	WITHOUT_CLASSIFICATION	3.159272335434335E-7	IMPLEMENTATION
// Build the new module	WITHOUT_CLASSIFICATION	0.999998476497589	WITHOUT_CLASSIFICATION	1.5235024110274117E-6	IMPLEMENTATION
// Build the module body	WITHOUT_CLASSIFICATION	0.9999993661774491	WITHOUT_CLASSIFICATION	6.338225510251132E-7	IMPLEMENTATION
// First, build an assignment for a splat, if any, with the rest of the args!	WITHOUT_CLASSIFICATION	0.9999999823507124	WITHOUT_CLASSIFICATION	1.764928751536859E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999519116465	WITHOUT_CLASSIFICATION	4.8088353468934814E-8	IMPLEMENTATION
// If a closure, the next is simply a return from the closure! // If a regular loop, the next is simply a jump to the end of the iteration	WITHOUT_CLASSIFICATION	0.9999998361987793	WITHOUT_CLASSIFICATION	1.6380122058307056E-7	IMPLEMENTATION
// get attr	WITHOUT_CLASSIFICATION	0.9999990691435824	WITHOUT_CLASSIFICATION	9.30856417684822E-7	IMPLEMENTATION
// call operator	WITHOUT_CLASSIFICATION	0.9999993871657041	WITHOUT_CLASSIFICATION	6.128342957881207E-7	IMPLEMENTATION
// set attr	WITHOUT_CLASSIFICATION	0.9999988078178934	WITHOUT_CLASSIFICATION	1.1921821066094403E-6	IMPLEMENTATION
// Translate "x &&= y" --> "x = (is_true(x) ? y : false)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, false, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999998899287424	WITHOUT_CLASSIFICATION	1.100712575013926E-7	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999999306569431	WITHOUT_CLASSIFICATION	6.934305690336472E-8	IMPLEMENTATION
// This does the assignment!	WITHOUT_CLASSIFICATION	0.9999999306569431	WITHOUT_CLASSIFICATION	6.934305690336472E-8	IMPLEMENTATION
// if v1 is defined and true, we are done! 	WITHOUT_CLASSIFICATION	0.9999999991381521	WITHOUT_CLASSIFICATION	8.618479728602498E-10	IMPLEMENTATION
// build first node only and return true	WITHOUT_CLASSIFICATION	0.9999994432743212	WITHOUT_CLASSIFICATION	5.567256787805155E-7	IMPLEMENTATION
// build first node as non-expr and build second node	WITHOUT_CLASSIFICATION	0.999999986743448	WITHOUT_CLASSIFICATION	1.3256551950726345E-8	IMPLEMENTATION
// Top-level script!	WITHOUT_CLASSIFICATION	0.9999937197222114	WITHOUT_CLASSIFICATION	6.280277788509385E-6	IMPLEMENTATION
// we won't enter the loop -- just build the condition node	WITHOUT_CLASSIFICATION	0.9999982748021398	WITHOUT_CLASSIFICATION	1.725197860264932E-6	IMPLEMENTATION
/* ----------- Private Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999305908058	WITHOUT_CLASSIFICATION	6.940919415382039E-8	IMPLEMENTATION
// What handles warnings	WITHOUT_CLASSIFICATION	0.9999999808379051	WITHOUT_CLASSIFICATION	1.9162094896857814E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999926454061	WITHOUT_CLASSIFICATION	7.354593954988025E-9	IMPLEMENTATION
// For closures, a redo is a jump to the beginning of the closure // For non-closures, a redo is a jump to the beginning of the loop	WITHOUT_CLASSIFICATION	0.9999999980126525	WITHOUT_CLASSIFICATION	1.9873475948204082E-9	IMPLEMENTATION
// The "root" method of a class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.9999998806453287	WITHOUT_CLASSIFICATION	1.1935467115385535E-7	IMPLEMENTATION
// Dummy top-level method for the class	WITHOUT_CLASSIFICATION	0.999999927084378	WITHOUT_CLASSIFICATION	7.291562202735459E-8	IMPLEMENTATION
// Build a dummy static method for the class -- the scope in which all definitions, and class code executes, equivalent to java clinit	WITHOUT_CLASSIFICATION	0.999999484358587	WITHOUT_CLASSIFICATION	5.156414128875231E-7	IMPLEMENTATION
// ------ Define the operations below ----	WITHOUT_CLASSIFICATION	0.999999986089718	WITHOUT_CLASSIFICATION	1.3910282020785261E-8	IMPLEMENTATION
// value copy and type conversion operations	WITHOUT_CLASSIFICATION	0.9999985862750268	WITHOUT_CLASSIFICATION	1.413724973169641E-6	IMPLEMENTATION
// alu operations	WITHOUT_CLASSIFICATION	0.999998825987153	WITHOUT_CLASSIFICATION	1.1740128470143693E-6	IMPLEMENTATION
// method handle, arg receive, return value, and  call instructions	WITHOUT_CLASSIFICATION	0.9999983072734915	WITHOUT_CLASSIFICATION	1.69272650857391E-6	IMPLEMENTATION
// closure instructions	WITHOUT_CLASSIFICATION	0.9999998242544578	WITHOUT_CLASSIFICATION	1.7574554220435088E-7	IMPLEMENTATION
// eval instructions	WITHOUT_CLASSIFICATION	0.9999986115369779	WITHOUT_CLASSIFICATION	1.388463022077993E-6	IMPLEMENTATION
// def instructions	WITHOUT_CLASSIFICATION	0.9999918976636274	WITHOUT_CLASSIFICATION	8.10233637251691E-6	IMPLEMENTATION
// exception instructions	WITHOUT_CLASSIFICATION	0.9999997483070932	WITHOUT_CLASSIFICATION	2.516929068674143E-7	IMPLEMENTATION
// Loads	WITHOUT_CLASSIFICATION	0.9999998853316279	WITHOUT_CLASSIFICATION	1.1466837218388926E-7	IMPLEMENTATION
// Stores	WITHOUT_CLASSIFICATION	0.999999154805134	WITHOUT_CLASSIFICATION	8.451948659253766E-7	IMPLEMENTATION
// jump and branch operations	WITHOUT_CLASSIFICATION	0.9999999357626436	WITHOUT_CLASSIFICATION	6.423735637767307E-8	IMPLEMENTATION
// others	WITHOUT_CLASSIFICATION	0.9999808417337881	WITHOUT_CLASSIFICATION	1.9158266211888923E-5	IMPLEMENTATION
// a case/when branch	WITHOUT_CLASSIFICATION	0.9999999706980995	WITHOUT_CLASSIFICATION	2.9301900441952283E-8	IMPLEMENTATION
// optimization guards	WITHOUT_CLASSIFICATION	0.9999998397162834	WITHOUT_CLASSIFICATION	1.6028371667802402E-7	IMPLEMENTATION
// By default, call instructions cannot be deleted even if their results aren't used by anyone // unless we know more about what the call is, what it does, etc. // Similarly for evals, stores, returns.	WITHOUT_CLASSIFICATION	0.9999992519276718	WITHOUT_CLASSIFICATION	7.480723281427439E-7	IMPLEMENTATION
// Returns the containing parent scope -- can be a dynamic value (hence Operand)!	WITHOUT_CLASSIFICATION	0.9999994210003861	WITHOUT_CLASSIFICATION	5.789996139107527E-7	IMPLEMENTATION
// scripts	WITHOUT_CLASSIFICATION	0.999999951555811	WITHOUT_CLASSIFICATION	4.844418899211591E-8	IMPLEMENTATION
// scripts and modules	WITHOUT_CLASSIFICATION	0.9999999992419437	WITHOUT_CLASSIFICATION	7.580562759251573E-10	IMPLEMENTATION
// scripts, classes, and modules	WITHOUT_CLASSIFICATION	0.9999999998254681	WITHOUT_CLASSIFICATION	1.7453190892405634E-10	IMPLEMENTATION
// methods and closures	WITHOUT_CLASSIFICATION	0.9999999974610495	WITHOUT_CLASSIFICATION	2.5389503867730142E-9	IMPLEMENTATION
// create a new variable using the prefix	WITHOUT_CLASSIFICATION	0.9999999939111911	WITHOUT_CLASSIFICATION	6.088808875073756E-9	IMPLEMENTATION
// create a new temporary variable	WITHOUT_CLASSIFICATION	0.999999918998951	WITHOUT_CLASSIFICATION	8.100104890986212E-8	IMPLEMENTATION
// Get a new label using a generic prefix	WITHOUT_CLASSIFICATION	0.9999999958919418	WITHOUT_CLASSIFICATION	4.108058173838649E-9	IMPLEMENTATION
// Build the CFG for this scope -- supported only by methods & closures	WITHOUT_CLASSIFICATION	0.9999999884091338	WITHOUT_CLASSIFICATION	1.1590866068980437E-8	IMPLEMENTATION
// Get the control flow graph for this scope -- only valid for methods & closures	WITHOUT_CLASSIFICATION	0.9999999896592382	WITHOUT_CLASSIFICATION	1.0340761940754079E-8	IMPLEMENTATION
// While processing loops, this returns the loop that we are processing.	WITHOUT_CLASSIFICATION	0.9999997040968761	WITHOUT_CLASSIFICATION	2.959031238323053E-7	IMPLEMENTATION
// Record the loop we are beginning to process	WITHOUT_CLASSIFICATION	0.9999994654460644	WITHOUT_CLASSIFICATION	5.345539356916558E-7	IMPLEMENTATION
// Indicate that we are done processing the loop	WITHOUT_CLASSIFICATION	0.9999927397235125	WITHOUT_CLASSIFICATION	7.260276487392285E-6	IMPLEMENTATION
// Run the passed in compiler pass on this scope!	WITHOUT_CLASSIFICATION	0.9999999887787229	WITHOUT_CLASSIFICATION	1.1221277090520289E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999536617035542	WITHOUT_CLASSIFICATION	4.6338296445881056E-5	IMPLEMENTATION
// Readline	WITHOUT_CLASSIFICATION	0.9999952533549545	WITHOUT_CLASSIFICATION	4.746645045380789E-6	IMPLEMENTATION
// If the cfg of the method is around, print the CFG!	WITHOUT_CLASSIFICATION	0.9999999240905196	WITHOUT_CLASSIFICATION	7.59094803441502E-8	IMPLEMENTATION
// Optimize some core class method calls for constant values	WITHOUT_CLASSIFICATION	0.9999997231655605	WITHOUT_CLASSIFICATION	2.7683443955776265E-7	IMPLEMENTATION
// If 'r' is not a constant, it could actually be a compound value! // Look in our value map to see if we have a simplified value for the receiver.	WITHOUT_CLASSIFICATION	0.9999999757055266	WITHOUT_CLASSIFICATION	2.4294473406108776E-8	IMPLEMENTATION
// Check if we can optimize this call based on the receiving method and receiver type // Use the simplified receiver!	WITHOUT_CLASSIFICATION	0.9999768189157685	WITHOUT_CLASSIFICATION	2.3181084231545374E-5	IMPLEMENTATION
// If we got a simplified value, mark the call dead and insert a copy in its place!	WITHOUT_CLASSIFICATION	0.9999866743208987	WITHOUT_CLASSIFICATION	1.3325679101252034E-5	IMPLEMENTATION
// If the call has been optimized away in the previous step, it is no longer a hard boundary for opts!	WITHOUT_CLASSIFICATION	0.9999998793985359	WITHOUT_CLASSIFICATION	1.2060146420772284E-7	IMPLEMENTATION
/* ----------- Public abstract methods ---------- */	WITHOUT_CLASSIFICATION	0.9999999633124312	WITHOUT_CLASSIFICATION	3.668756867217847E-8	IMPLEMENTATION
/* ----------- Public methods with a default implementation ---------- */	WITHOUT_CLASSIFICATION	0.9999653164687418	WITHOUT_CLASSIFICATION	3.46835312582786E-5	IMPLEMENTATION
// Compute meet over all "sources" and compute "destination" basic blocks that should then be processed.  // sources & targets depends on direction of the data flow problem	WITHOUT_CLASSIFICATION	0.9999968595031442	WITHOUT_CLASSIFICATION	3.1404968559179986E-6	IMPLEMENTATION
// If the solution has changed, add "dsts" to the work list. // No duplicates please which is why we have bbset.	WITHOUT_CLASSIFICATION	0.9997014322584669	WITHOUT_CLASSIFICATION	2.9856774153321045E-4	IMPLEMENTATION
/* --------- Protected fields/methods below --------- */	WITHOUT_CLASSIFICATION	0.9999998986020614	WITHOUT_CLASSIFICATION	1.013979385335599E-7	IMPLEMENTATION
// Dataflow problem with which this node is associated // CFG node for which this node contains info.	WITHOUT_CLASSIFICATION	0.9999992361301545	WITHOUT_CLASSIFICATION	7.638698454096669E-7	IMPLEMENTATION
/* -------------- Public fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999773779853	WITHOUT_CLASSIFICATION	2.2622014613708342E-8	IMPLEMENTATION
// ------- Abstract methods without a default implementation -------	WITHOUT_CLASSIFICATION	0.9999537057907557	WITHOUT_CLASSIFICATION	4.629420924428251E-5	IMPLEMENTATION
// ------- Default implementation methods below -------	WITHOUT_CLASSIFICATION	0.9998716054894989	WITHOUT_CLASSIFICATION	1.2839451050110243E-4	IMPLEMENTATION
/* Compute Meet Over All Paths solution for this dataflow problem on the input CFG.     * This implements a standard worklist algorithm. */	WITHOUT_CLASSIFICATION	0.814103216143629	WITHOUT_CLASSIFICATION	0.18589678385637093	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999314091369362	WITHOUT_CLASSIFICATION	6.859086306382254E-5	IMPLEMENTATION
/* Individual analyses should override this */	WITHOUT_CLASSIFICATION	0.9999314091369362	WITHOUT_CLASSIFICATION	6.859086306382254E-5	IMPLEMENTATION
/* -------------- Packaged/protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.999999892198889	WITHOUT_CLASSIFICATION	1.0780111104376649E-7	IMPLEMENTATION
// We want unique ids for dataflow variables	WITHOUT_CLASSIFICATION	0.9999999372792338	WITHOUT_CLASSIFICATION	6.272076630051627E-8	IMPLEMENTATION
/* -------------- Protected fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999655149444	WITHOUT_CLASSIFICATION	3.448505555746963E-8	IMPLEMENTATION
/* -------------- Private fields and methods below ---------------- */	WITHOUT_CLASSIFICATION	0.9999999750452889	WITHOUT_CLASSIFICATION	2.495471109382266E-8	IMPLEMENTATION
// Initialize all flow graph nodes 	WITHOUT_CLASSIFICATION	0.9999961750230537	WITHOUT_CLASSIFICATION	3.824976946318799E-6	IMPLEMENTATION
/* Lattice TOP, BOTTOM, ANY values -- these will be used during dataflow analyses */	WITHOUT_CLASSIFICATION	0.9999993330920074	WITHOUT_CLASSIFICATION	6.669079925361168E-7	IMPLEMENTATION
/* ******************** PUBLIC INTERFACE ******************* */	WITHOUT_CLASSIFICATION	0.9999758016189683	WITHOUT_CLASSIFICATION	2.4198381031700347E-5	IMPLEMENTATION
// Unique ID assigned to this variable	WITHOUT_CLASSIFICATION	0.9999994623362933	WITHOUT_CLASSIFICATION	5.376637067489627E-7	IMPLEMENTATION
// start out with a default RubyObject allocator	WITHOUT_CLASSIFICATION	0.9999992357722541	WITHOUT_CLASSIFICATION	7.642277459349083E-7	IMPLEMENTATION
// switch to an allocator based on a default constructor	WITHOUT_CLASSIFICATION	0.9999954082080041	WITHOUT_CLASSIFICATION	4.591791995822131E-6	IMPLEMENTATION
/* ----------- Public Interface ------------ */	WITHOUT_CLASSIFICATION	0.9999999673822059	WITHOUT_CLASSIFICATION	3.261779410403983E-8	IMPLEMENTATION
// class or module	WITHOUT_CLASSIFICATION	0.9999999984390856	WITHOUT_CLASSIFICATION	1.5609143146074325E-9	IMPLEMENTATION
// OUT = UNION(IN(succs))	WITHOUT_CLASSIFICATION	0.9999997179416669	WITHOUT_CLASSIFICATION	2.820583331037943E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order!	WITHOUT_CLASSIFICATION	0.9999099306647623	WITHOUT_CLASSIFICATION	9.006933523769398E-5	IMPLEMENTATION
// v is defined => It is no longer live before 'i'	WITHOUT_CLASSIFICATION	0.9999998453540079	WITHOUT_CLASSIFICATION	1.5464599205492113E-7	IMPLEMENTATION
// IN is the same!	WITHOUT_CLASSIFICATION	0.9999952165525192	WITHOUT_CLASSIFICATION	4.783447480761198E-6	IMPLEMENTATION
// IN changed!	WITHOUT_CLASSIFICATION	0.9999993128762015	WITHOUT_CLASSIFICATION	6.871237985930198E-7	IMPLEMENTATION
/* ---------- Protected / package fields, methods --------- */	WITHOUT_CLASSIFICATION	0.999999990147952	WITHOUT_CLASSIFICATION	9.85204793287978E-9	IMPLEMENTATION
// If 'v' is not live at the instruction site, and it has no side effects, mark it dead!	WITHOUT_CLASSIFICATION	0.9999936883332852	WITHOUT_CLASSIFICATION	6.311666714807206E-6	IMPLEMENTATION
// Do not mark this instruction's operands live if the instruction itself is dead!	WITHOUT_CLASSIFICATION	0.9999961717796298	WITHOUT_CLASSIFICATION	3.828220370135276E-6	IMPLEMENTATION
/* ---------- Private fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999904639776	WITHOUT_CLASSIFICATION	9.536022398664815E-9	IMPLEMENTATION
// Variables live at entry of this node // Variables live at exit of node // Temporary set of live variables // Size of the "_in" and "_out" bit sets 	WITHOUT_CLASSIFICATION	0.9999999964467723	WITHOUT_CLASSIFICATION	3.553227774263798E-9	IMPLEMENTATION
// Used during optimization passes to propagate type and other information	WITHOUT_CLASSIFICATION	0.9999992614646608	WITHOUT_CLASSIFICATION	7.385353390941136E-7	IMPLEMENTATION
// Does this instruction have side effects as a result of its operation // This information is used in optimization phases to impact dead code elimination // and other optimization passes	WITHOUT_CLASSIFICATION	0.9999999993172569	WITHOUT_CLASSIFICATION	6.827431375506967E-10	IMPLEMENTATION
/* --------- "Abstract"/"please-override" methods --------- */	WITHOUT_CLASSIFICATION	0.9999999147173521	WITHOUT_CLASSIFICATION	8.528264804620304E-8	IMPLEMENTATION
/* Array of all operands for this instruction */	WITHOUT_CLASSIFICATION	0.9999346488115449	WITHOUT_CLASSIFICATION	6.535118845505898E-5	IMPLEMENTATION
/* List of all variables used by all operands of this instruction */	WITHOUT_CLASSIFICATION	0.9999998546824588	WITHOUT_CLASSIFICATION	1.453175411755731E-7	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     *     * If the value map provides a value for any of the instruction's operands     * this method is expected to replace the original operands with the simplified values.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify     */	WITHOUT_CLASSIFICATION	0.9999998860857389	WITHOUT_CLASSIFICATION	1.1391426117329598E-7	IMPLEMENTATION
// By default, no simplifications!	WITHOUT_CLASSIFICATION	0.9999942469946523	WITHOUT_CLASSIFICATION	5.753005347727476E-6	IMPLEMENTATION
// Can this call lead to ruby code getting modified?   // If we don't know what method we are calling, we assume it can (pessimistic, but safe!) // If we do know the target method, we ask the method itself whether it modifies ruby code	WITHOUT_CLASSIFICATION	0.9999999808652873	WITHOUT_CLASSIFICATION	1.913471272344541E-8	IMPLEMENTATION
// By default, return instructions cannot be deleted	WITHOUT_CLASSIFICATION	0.9999941310919449	WITHOUT_CLASSIFICATION	5.868908055173496E-6	IMPLEMENTATION
// If true, returns the rest of the array starting at the index	WITHOUT_CLASSIFICATION	0.9999965466143034	WITHOUT_CLASSIFICATION	3.453385696676829E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999982241002	WITHOUT_CLASSIFICATION	1.7758997623212334E-9	IMPLEMENTATION
// Map of label & basic blocks with that label	WITHOUT_CLASSIFICATION	0.9999958488730606	WITHOUT_CLASSIFICATION	4.151126939475646E-6	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999982241002	WITHOUT_CLASSIFICATION	1.7758997623212334E-9	IMPLEMENTATION
// You can only value-replace atomic values	WITHOUT_CLASSIFICATION	0.9999997886224539	WITHOUT_CLASSIFICATION	2.1137754623965582E-7	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999206077107955	WITHOUT_CLASSIFICATION	7.939228920454E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999206077107955	WITHOUT_CLASSIFICATION	7.939228920454E-5	IMPLEMENTATION
// If divisor is zero, don't simplify!	WITHOUT_CLASSIFICATION	0.9999206077107955	WITHOUT_CLASSIFICATION	7.939228920454E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999954976255361	WITHOUT_CLASSIFICATION	4.502374463892647E-5	IMPLEMENTATION
// For simplification, get the target value, even if compound	WITHOUT_CLASSIFICATION	0.999954976255361	WITHOUT_CLASSIFICATION	4.502374463892647E-5	IMPLEMENTATION
// The operand that this attribute targets //    DEFERRED //    AttributeValue _val;       // Attribute value	WITHOUT_CLASSIFICATION	0.999999823936696	WITHOUT_CLASSIFICATION	1.7606330400286194E-7	IMPLEMENTATION
// Arrays, Ranges, etc. are compound values // Variables, fixnums, floats, etc. are "atomic" values	WITHOUT_CLASSIFICATION	0.9999999995570592	WITHOUT_CLASSIFICATION	4.4294084412766284E-10	IMPLEMENTATION
// Get the target class of this operand, if we know it!	WITHOUT_CLASSIFICATION	0.9999999991295122	WITHOUT_CLASSIFICATION	8.704876986182805E-10	IMPLEMENTATION
// The following constants capture pre-known static call sites -- used to implement ruby internals	WITHOUT_CLASSIFICATION	0.9893894091911831	WITHOUT_CLASSIFICATION	0.010610590808816859	IMPLEMENTATION
/* Nothing to do by default */	WITHOUT_CLASSIFICATION	0.9999996308444847	WITHOUT_CLASSIFICATION	3.6915551525996525E-7	IMPLEMENTATION
// Map of label & basic blocks which are waiting for a bb with that label	WITHOUT_CLASSIFICATION	0.9999995621807644	WITHOUT_CLASSIFICATION	4.3781923574154274E-7	IMPLEMENTATION
// Init before building basic blocks below!	WITHOUT_CLASSIFICATION	0.9999996414083986	WITHOUT_CLASSIFICATION	3.5859160136167356E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999990749287431	WITHOUT_CLASSIFICATION	9.250712568892845E-7	IMPLEMENTATION
// Scope (method/closure) to which this cfg belongs // Entry BB -- dummy // Exit BB -- dummy // The actual graph // Next available basic block id	WITHOUT_CLASSIFICATION	0.9999990546688595	WITHOUT_CLASSIFICATION	9.453311405743677E-7	IMPLEMENTATION
// Jump instruction bbs dont add an edge to the succeeding bb by default	WITHOUT_CLASSIFICATION	0.9999999579929436	WITHOUT_CLASSIFICATION	4.200705646452776E-8	IMPLEMENTATION
// Add forward ref. edges	WITHOUT_CLASSIFICATION	0.9999997212839294	WITHOUT_CLASSIFICATION	2.787160705059613E-7	IMPLEMENTATION
// currBB cannot be null!	WITHOUT_CLASSIFICATION	0.9999997537321443	WITHOUT_CLASSIFICATION	2.4626785567620276E-7	IMPLEMENTATION
// Add a forward reference from tgt -> currBB	WITHOUT_CLASSIFICATION	0.9999998056249876	WITHOUT_CLASSIFICATION	1.9437501239437688E-7	IMPLEMENTATION
// root-level logic	WITHOUT_CLASSIFICATION	0.9999939666744119	WITHOUT_CLASSIFICATION	6.033325588071856E-6	IMPLEMENTATION
// root-level methods	WITHOUT_CLASSIFICATION	0.9999979284582942	WITHOUT_CLASSIFICATION	2.07154170578879E-6	IMPLEMENTATION
// root-level classes	WITHOUT_CLASSIFICATION	0.9999999617018109	WITHOUT_CLASSIFICATION	3.829818909175093E-8	IMPLEMENTATION
//        case 4: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class); //            break; //        case 5: //            signature = sig(Object.class, Object.class, Object.class, Object.class, Object.class, Object.class); //            break;	WITHOUT_CLASSIFICATION	0.9999999960501711	WITHOUT_CLASSIFICATION	3.9498288431047075E-9	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999975546680633	WITHOUT_CLASSIFICATION	2.4453319367336753E-6	IMPLEMENTATION
// load receiver	WITHOUT_CLASSIFICATION	0.9999975546680633	WITHOUT_CLASSIFICATION	2.4453319367336753E-6	IMPLEMENTATION
// receiver	WITHOUT_CLASSIFICATION	0.999996544723986	WITHOUT_CLASSIFICATION	3.4552760139362716E-6	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999999462672644	WITHOUT_CLASSIFICATION	5.3732735591257016E-8	IMPLEMENTATION
// load arguments	WITHOUT_CLASSIFICATION	0.9999999462672644	WITHOUT_CLASSIFICATION	5.3732735591257016E-8	IMPLEMENTATION
//        case 4: //        case 5:	WITHOUT_CLASSIFICATION	0.9999987534034962	WITHOUT_CLASSIFICATION	1.246596503774254E-6	IMPLEMENTATION
// Object[] args	WITHOUT_CLASSIFICATION	0.9999998805356008	WITHOUT_CLASSIFICATION	1.1946439919973924E-7	IMPLEMENTATION
// load handle	WITHOUT_CLASSIFICATION	0.9999931766945817	WITHOUT_CLASSIFICATION	6.823305418341082E-6	IMPLEMENTATION
// args array	WITHOUT_CLASSIFICATION	0.9999998060213349	WITHOUT_CLASSIFICATION	1.9397866507833035E-7	IMPLEMENTATION
// i'th argument	WITHOUT_CLASSIFICATION	0.9999994612610698	WITHOUT_CLASSIFICATION	5.387389302095477E-7	IMPLEMENTATION
// invoke specific arity version	WITHOUT_CLASSIFICATION	0.999999828660326	WITHOUT_CLASSIFICATION	1.713396740420947E-7	IMPLEMENTATION
// Object arg0	WITHOUT_CLASSIFICATION	0.9999996690776318	WITHOUT_CLASSIFICATION	3.3092236815143977E-7	IMPLEMENTATION
// useful for code completion inside the IRB	WITHOUT_CLASSIFICATION	0.9999949004611796	WITHOUT_CLASSIFICATION	5.099538820349771E-6	IMPLEMENTATION
// No editing before startPos	WITHOUT_CLASSIFICATION	0.999999969584354	WITHOUT_CLASSIFICATION	3.041564597760991E-8	IMPLEMENTATION
// no silly ticks!	WITHOUT_CLASSIFICATION	0.9999817156404358	WITHOUT_CLASSIFICATION	1.8284359564276133E-5	IMPLEMENTATION
// no candidates? Fail.	WITHOUT_CLASSIFICATION	0.9997996696232563	WITHOUT_CLASSIFICATION	2.003303767437591E-4	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999852564312874	WITHOUT_CLASSIFICATION	1.4743568712534257E-5	IMPLEMENTATION
// undo check	WITHOUT_CLASSIFICATION	0.9999980342687663	WITHOUT_CLASSIFICATION	1.9657312336566676E-6	IMPLEMENTATION
// Explicit reference to these vars as symbols...	WITHOUT_CLASSIFICATION	0.9999994308100637	WITHOUT_CLASSIFICATION	5.691899363696072E-7	IMPLEMENTATION
// ignore	WITHOUT_CLASSIFICATION	0.9999990749287431	WITHOUT_CLASSIFICATION	9.250712568892845E-7	IMPLEMENTATION
//\t\n\"\\'`@$><=;|&{(	WITHOUT_CLASSIFICATION	0.9999897027114123	WITHOUT_CLASSIFICATION	1.0297288587723839E-5	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997598684748	WITHOUT_CLASSIFICATION	2.4013152518166717E-7	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999480261288545	WITHOUT_CLASSIFICATION	5.1973871145407355E-5	IMPLEMENTATION
// no check for '*'	WITHOUT_CLASSIFICATION	0.9999480261288545	WITHOUT_CLASSIFICATION	5.1973871145407355E-5	IMPLEMENTATION
// Binding provided for scope, use it	WITHOUT_CLASSIFICATION	0.9999999218585024	WITHOUT_CLASSIFICATION	7.814149750712197E-8	IMPLEMENTATION
// this is ensured by the callers	WITHOUT_CLASSIFICATION	0.9999645654121281	WITHOUT_CLASSIFICATION	3.5434587871899225E-5	IMPLEMENTATION
// no binding, just eval in "current" frame (caller's frame)	WITHOUT_CLASSIFICATION	0.9999998730837991	WITHOUT_CLASSIFICATION	1.2691620077115283E-7	IMPLEMENTATION
// restore position	WITHOUT_CLASSIFICATION	0.9999977535666671	WITHOUT_CLASSIFICATION	2.246433332856641E-6	IMPLEMENTATION
/* Something like cvar_cbase() from eval.c, factored out for the benefit     * of all the classvar-related node evaluations */	WITHOUT_CLASSIFICATION	0.9999999990533052	WITHOUT_CLASSIFICATION	9.466948328912681E-10	IMPLEMENTATION
// Used by the compiler to simplify arg processing	WITHOUT_CLASSIFICATION	0.9999860842328819	WITHOUT_CLASSIFICATION	1.3915767118143421E-5	IMPLEMENTATION
// JRUBY-2673: if wrapping a NativeException, use the actual Java exception's trace as our Java trace	WITHOUT_CLASSIFICATION	0.9999999967766846	WITHOUT_CLASSIFICATION	3.223315302507555E-9	IMPLEMENTATION
// MRI does similar thing on MacOS X with 'EditLine wrapper'.	WITHOUT_CLASSIFICATION	0.9999962265252876	WITHOUT_CLASSIFICATION	3.7734747124133886E-6	IMPLEMENTATION
// We lazily initialize this in case Readline.readline has been overridden in ruby (s_readline)	WITHOUT_CLASSIFICATION	0.9999998511125129	WITHOUT_CLASSIFICATION	1.4888748715253565E-7	IMPLEMENTATION
// JRUBY-852, ignore escape key (it causes IRB to quit if we pass it out through readline)	WITHOUT_CLASSIFICATION	0.9999345952136781	WITHOUT_CLASSIFICATION	6.540478632188311E-5	IMPLEMENTATION
// not overridden, let's go	WITHOUT_CLASSIFICATION	0.9998874641073816	WITHOUT_CLASSIFICATION	1.1253589261842037E-4	IMPLEMENTATION
/* Explicitly use UTF-8 here. c.f. history.addToHistory using line.asUTF8() */	WITHOUT_CLASSIFICATION	0.9999999187646089	WITHOUT_CLASSIFICATION	8.12353910947015E-8	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9988664157449204	WITHOUT_CLASSIFICATION	0.0011335842550796377	IMPLEMENTATION
// Complete using a Proc object	WITHOUT_CLASSIFICATION	0.9999999816042392	WITHOUT_CLASSIFICATION	1.8395760806244282E-8	IMPLEMENTATION
// clear basename so it's anonymous when raising	WITHOUT_CLASSIFICATION	0.9999999983057613	WITHOUT_CLASSIFICATION	1.6942387517988113E-9	IMPLEMENTATION
// These are not really used by timeout, but exposed for compatibility	WITHOUT_CLASSIFICATION	0.9999999276960709	WITHOUT_CLASSIFICATION	7.23039289838151E-8	IMPLEMENTATION
// Timeout module methods	WITHOUT_CLASSIFICATION	0.9999994858126584	WITHOUT_CLASSIFICATION	5.141873416256579E-7	IMPLEMENTATION
// Toplevel defines	WITHOUT_CLASSIFICATION	0.9999668033773554	WITHOUT_CLASSIFICATION	3.319662264443628E-5	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999985894919047	WITHOUT_CLASSIFICATION	1.41050809532528E-6	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999985368271551	WITHOUT_CLASSIFICATION	1.463172844870214E-6	IMPLEMENTATION
// if it's the exception we're expecting	WITHOUT_CLASSIFICATION	0.9999993815396697	WITHOUT_CLASSIFICATION	6.184603302831018E-7	IMPLEMENTATION
// and we were given a specific exception	WITHOUT_CLASSIFICATION	0.9999990509071437	WITHOUT_CLASSIFICATION	9.490928563327636E-7	IMPLEMENTATION
// otherwise, rethrow	WITHOUT_CLASSIFICATION	0.999928670074249	WITHOUT_CLASSIFICATION	7.132992575096126E-5	IMPLEMENTATION
// // Remove the Executor task now, to avoid cancelled tasks accumulating // until an Executor thread can schedule and remove them //	WITHOUT_CLASSIFICATION	0.9999999955236218	WITHOUT_CLASSIFICATION	4.476378162639487E-9	IMPLEMENTATION
// // If the task was scheduled, wait for it to finish before polling // for the exception it would have thrown. //	WITHOUT_CLASSIFICATION	0.9999902737699631	WITHOUT_CLASSIFICATION	9.726230036864396E-6	IMPLEMENTATION
// NetProtocolBufferedIO	WITHOUT_CLASSIFICATION	0.9999919887602653	WITHOUT_CLASSIFICATION	8.011239734774878E-6	IMPLEMENTATION
/* When a length is given, read_string acts like get_bytes */	WITHOUT_CLASSIFICATION	0.9999973693590509	WITHOUT_CLASSIFICATION	2.6306409489911786E-6	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9997206453436007	WITHOUT_CLASSIFICATION	2.793546563993326E-4	IMPLEMENTATION
// ARRAY and STRUCT are only used internally	WITHOUT_CLASSIFICATION	0.9999999071377546	WITHOUT_CLASSIFICATION	9.286224538172514E-8	IMPLEMENTATION
// If no release method is defined, then memory leaks will result.	WITHOUT_CLASSIFICATION	0.9999999076893826	WITHOUT_CLASSIFICATION	9.231061742982189E-8	IMPLEMENTATION
/*     * This variant of newStruct is called from StructLayoutBuilder     */	WITHOUT_CLASSIFICATION	0.9999991421173144	WITHOUT_CLASSIFICATION	8.578826854880978E-7	IMPLEMENTATION
// This also handles unsigned int -> negative signed int conversion	WITHOUT_CLASSIFICATION	0.9999997476746647	WITHOUT_CLASSIFICATION	2.523253352796733E-7	IMPLEMENTATION
// Windows is LLP64	WITHOUT_CLASSIFICATION	0.99999952911092	WITHOUT_CLASSIFICATION	4.7088907997695843E-7	IMPLEMENTATION
// Older JDK on linux map 'c' to 'libc.so' which doesn't work	WITHOUT_CLASSIFICATION	0.9999977981571877	WITHOUT_CLASSIFICATION	2.201842812344828E-6	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998398691975	WITHOUT_CLASSIFICATION	1.601308025997383E-7	IMPLEMENTATION
// $blah	WITHOUT_CLASSIFICATION	0.9999998532160413	WITHOUT_CLASSIFICATION	1.46783958565185E-7	IMPLEMENTATION
// Replace memory object with one that throws an exception on any access	WITHOUT_CLASSIFICATION	0.9997206453436007	WITHOUT_CLASSIFICATION	2.793546563993326E-4	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999999915310258	WITHOUT_CLASSIFICATION	8.468974201392538E-8	IMPLEMENTATION
// Ensure room for terminating zero byte	WITHOUT_CLASSIFICATION	0.9999998398691975	WITHOUT_CLASSIFICATION	1.601308025997383E-7	IMPLEMENTATION
// // Keep a reference to the temporary memory in the cache so it does // not get freed by the GC until the struct is freed //	WITHOUT_CLASSIFICATION	0.999999987550966	WITHOUT_CLASSIFICATION	1.2449034009774569E-8	IMPLEMENTATION
// Add Pointer::NULL as a constant	WITHOUT_CLASSIFICATION	0.9999998877722852	WITHOUT_CLASSIFICATION	1.1222771484939474E-7	IMPLEMENTATION
// Create the ordered list of field names from the map	WITHOUT_CLASSIFICATION	0.9999999732876613	WITHOUT_CLASSIFICATION	2.671233868920455E-8	IMPLEMENTATION
// Assemble a [ :name, offset ] array	WITHOUT_CLASSIFICATION	0.9999994621608218	WITHOUT_CLASSIFICATION	5.37839178306474E-7	IMPLEMENTATION
//                case FLOAT:	WITHOUT_CLASSIFICATION	0.9999995666122726	WITHOUT_CLASSIFICATION	4.33387727412584E-7	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999948304176971	WITHOUT_CLASSIFICATION	5.1695823029790735E-6	IMPLEMENTATION
// keep a reference to avoid the memory being freed	WITHOUT_CLASSIFICATION	0.9999948304176971	WITHOUT_CLASSIFICATION	5.1695823029790735E-6	IMPLEMENTATION
// No auto cleanup needed	WITHOUT_CLASSIFICATION	0.9017127135498174	IMPLEMENTATION	0.09828728645018266	WITHOUT_CLASSIFICATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999970020068362	WITHOUT_CLASSIFICATION	2.9979931637909308E-6	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999995973312056	WITHOUT_CLASSIFICATION	4.0266879443320543E-7	IMPLEMENTATION
// Get the convention from the options hash	WITHOUT_CLASSIFICATION	0.9999995973312056	WITHOUT_CLASSIFICATION	4.0266879443320543E-7	IMPLEMENTATION
/*         * If there is exactly _one_ callback argument to the function,         * then a block can be given and automatically subsituted for the callback         * parameter.         */	WITHOUT_CLASSIFICATION	0.9999993115196749	WITHOUT_CLASSIFICATION	6.884803251162417E-7	IMPLEMENTATION
/*------------------------------------------------------------------------*/	WITHOUT_CLASSIFICATION	0.9992391971696133	WITHOUT_CLASSIFICATION	7.608028303867867E-4	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999504540221721	WITHOUT_CLASSIFICATION	4.9545977827862945E-5	IMPLEMENTATION
//AF_INET	WITHOUT_CLASSIFICATION	0.9999504540221721	WITHOUT_CLASSIFICATION	4.9545977827862945E-5	IMPLEMENTATION
// RubyUNIXServer	WITHOUT_CLASSIFICATION	0.9999884182022406	WITHOUT_CLASSIFICATION	1.1581797759346374E-5	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999981607246017	WITHOUT_CLASSIFICATION	1.8392753983288997E-6	IMPLEMENTATION
// // Set up for potentially fast-int operations //	WITHOUT_CLASSIFICATION	0.9999999982212994	WITHOUT_CLASSIFICATION	1.778700561770255E-9	IMPLEMENTATION
// // Hook up the MemoryPointer class if its not already there //	WITHOUT_CLASSIFICATION	0.9999998902124022	WITHOUT_CLASSIFICATION	1.0978759783876173E-7	IMPLEMENTATION
// This is a bit convoluted because (1) SocketChannel.bind is only in jdk 7 and // (2) Socket.getChannel() seems to return null in some cases	WITHOUT_CLASSIFICATION	0.999999970871726	WITHOUT_CLASSIFICATION	2.9128273951524727E-8	IMPLEMENTATION
// no UNIXSockets on Windows	WITHOUT_CLASSIFICATION	0.9999927768924903	WITHOUT_CLASSIFICATION	7.2231075096579485E-6	IMPLEMENTATION
// Sockaddr_un has different structure on different platforms. // See JRUBY-2213 for more details.	WITHOUT_CLASSIFICATION	0.9999997101476447	WITHOUT_CLASSIFICATION	2.8985235537731806E-7	IMPLEMENTATION
// There is something valid in the sun_path component	WITHOUT_CLASSIFICATION	0.9999999790727646	WITHOUT_CLASSIFICATION	2.0927235312834164E-8	IMPLEMENTATION
// RubyIPSocket	WITHOUT_CLASSIFICATION	0.9999986550183574	WITHOUT_CLASSIFICATION	1.3449816426016549E-6	IMPLEMENTATION
// host is nil or the empty string, bind to INADDR_ANY	WITHOUT_CLASSIFICATION	0.9999948070517576	WITHOUT_CLASSIFICATION	5.192948242374914E-6	IMPLEMENTATION
// host and port given	WITHOUT_CLASSIFICATION	0.9999261237039916	WITHOUT_CLASSIFICATION	7.387629600850111E-5	IMPLEMENTATION
// RubyUDPSocket	WITHOUT_CLASSIFICATION	0.9999988869420987	WITHOUT_CLASSIFICATION	1.113057901237256E-6	IMPLEMENTATION
// By default we always reverse lookup unless do_not_reverse_lookup set.	WITHOUT_CLASSIFICATION	0.9999915844744215	WITHOUT_CLASSIFICATION	8.415525578562444E-6	IMPLEMENTATION
// make sure descriptor is registered	WITHOUT_CLASSIFICATION	0.9999931732353825	WITHOUT_CLASSIFICATION	6.826764617491569E-6	IMPLEMENTATION
// continue with normal initialization	WITHOUT_CLASSIFICATION	0.9999993273825653	WITHOUT_CLASSIFICATION	6.726174347108109E-7	IMPLEMENTATION
// recv returns nil on EOF	WITHOUT_CLASSIFICATION	0.999999232068695	WITHOUT_CLASSIFICATION	7.679313049382022E-7	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999582992063512	WITHOUT_CLASSIFICATION	4.170079364881867E-5	IMPLEMENTATION
// RubyBasicSocket	WITHOUT_CLASSIFICATION	0.9999998362704298	WITHOUT_CLASSIFICATION	1.6372957018232427E-7	IMPLEMENTATION
// we don't have to define any that we don't support; see socket.c	WITHOUT_CLASSIFICATION	0.9999971490162939	WITHOUT_CLASSIFICATION	2.8509837061816037E-6	IMPLEMENTATION
// mandatory constants we haven't implemented	WITHOUT_CLASSIFICATION	0.9853197073749619	WITHOUT_CLASSIFICATION	0.014680292625038076	IMPLEMENTATION
// constants webrick crashes without	WITHOUT_CLASSIFICATION	0.9999999546582127	WITHOUT_CLASSIFICATION	4.53417873619098E-8	IMPLEMENTATION
// More constants needed by specs	WITHOUT_CLASSIFICATION	0.9999843348010846	WITHOUT_CLASSIFICATION	1.566519891534362E-5	IMPLEMENTATION
// normal file descriptor..try to work with it	WITHOUT_CLASSIFICATION	0.9958362242968869	WITHOUT_CLASSIFICATION	0.004163775703113108	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999967970775756	WITHOUT_CLASSIFICATION	3.202922424439505E-6	IMPLEMENTATION
// 255.255.255.255	WITHOUT_CLASSIFICATION	0.9999945051995424	WITHOUT_CLASSIFICATION	5.494800457667108E-6	IMPLEMENTATION
// 0.0.0.0	WITHOUT_CLASSIFICATION	0.999999504072329	WITHOUT_CLASSIFICATION	4.959276710400116E-7	IMPLEMENTATION
//def self.getaddrinfo(host, port, family = nil, socktype = nil, protocol = nil, flags = nil)	WITHOUT_CLASSIFICATION	0.9999998648847329	WITHOUT_CLASSIFICATION	1.3511526703991811E-7	IMPLEMENTATION
// line 323	WITHOUT_CLASSIFICATION	0.9999993939869903	WITHOUT_CLASSIFICATION	6.060130096039155E-7	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999793651133	WITHOUT_CLASSIFICATION	2.0634886635312747E-8	IMPLEMENTATION
// can't set TC classloader	WITHOUT_CLASSIFICATION	0.9999999793651133	WITHOUT_CLASSIFICATION	2.0634886635312747E-8	IMPLEMENTATION
// ok, it's a socket...set values accordingly // just using AF_INET since we can't tell from SocketChannel...	WITHOUT_CLASSIFICATION	0.9999999975026269	WITHOUT_CLASSIFICATION	2.4973730386589023E-9	IMPLEMENTATION
// datagram, set accordingly // again, AF_INET	WITHOUT_CLASSIFICATION	0.9999991548141062	WITHOUT_CLASSIFICATION	8.451858937031504E-7	IMPLEMENTATION
//IRubyObject family = args[2];	WITHOUT_CLASSIFICATION	0.9999999035041877	WITHOUT_CLASSIFICATION	9.649581238992614E-8	IMPLEMENTATION
// When Socket::AI_PASSIVE and host is nil, return 'any' address. 	WITHOUT_CLASSIFICATION	0.9999995156374999	WITHOUT_CLASSIFICATION	4.843625001186299E-7	IMPLEMENTATION
// The value of 1 is for Socket::AI_PASSIVE.	WITHOUT_CLASSIFICATION	0.9999999586684412	WITHOUT_CLASSIFICATION	4.133155881464604E-8	IMPLEMENTATION
// RubySocket	WITHOUT_CLASSIFICATION	0.9999991880145606	WITHOUT_CLASSIFICATION	8.119854395164974E-7	IMPLEMENTATION
// numeric host, use it for port	WITHOUT_CLASSIFICATION	0.9999924230308983	WITHOUT_CLASSIFICATION	7.576969101750188E-6	IMPLEMENTATION
//            e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999995881007671	WITHOUT_CLASSIFICATION	4.118992329113645E-7	IMPLEMENTATION
// we were woken up without being selected...poll for thread events and go back to sleep	WITHOUT_CLASSIFICATION	0.9999998730715365	WITHOUT_CLASSIFICATION	1.269284634856465E-7	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999985180594537	WITHOUT_CLASSIFICATION	1.4819405463197482E-6	IMPLEMENTATION
// no connection immediately accepted, let them try again	WITHOUT_CLASSIFICATION	0.972584640193631	WITHOUT_CLASSIFICATION	0.027415359806368975	IMPLEMENTATION
// do nothing, just exit	WITHOUT_CLASSIFICATION	0.9999999677725185	WITHOUT_CLASSIFICATION	3.2227481435924235E-8	IMPLEMENTATION
//nativeThread.setPriority(priority);	WITHOUT_CLASSIFICATION	0.9991854710342278	WITHOUT_CLASSIFICATION	8.14528965772184E-4	IMPLEMENTATION
// set thread context JRuby classloader here, for Ruby-owned thread	WITHOUT_CLASSIFICATION	0.999997681502649	WITHOUT_CLASSIFICATION	2.318497350971332E-6	IMPLEMENTATION
// uber-ThreadKill catcher, since it should always just mean "be dead"	WITHOUT_CLASSIFICATION	0.9999972747484686	WITHOUT_CLASSIFICATION	2.725251531386809E-6	IMPLEMENTATION
// Call the thread's code	WITHOUT_CLASSIFICATION	0.9999975022950884	WITHOUT_CLASSIFICATION	2.497704911503789E-6	IMPLEMENTATION
// Someone called exit!, so we need to kill the main thread	WITHOUT_CLASSIFICATION	0.9986657464926838	WITHOUT_CLASSIFICATION	0.0013342535073162102	IMPLEMENTATION
// restore context classloader, in case we're using a thread pool	WITHOUT_CLASSIFICATION	0.9999998321949344	WITHOUT_CLASSIFICATION	1.6780506558105162E-7	IMPLEMENTATION
// be dead	WITHOUT_CLASSIFICATION	0.9999993413252387	WITHOUT_CLASSIFICATION	6.586747612868069E-7	IMPLEMENTATION
// loop until a context is available, to clean up softrefs that might have been collected	WITHOUT_CLASSIFICATION	0.9999160077438074	WITHOUT_CLASSIFICATION	8.399225619255201E-5	IMPLEMENTATION
// all threads in ruby thread group plus main thread	WITHOUT_CLASSIFICATION	0.9999883734504241	WITHOUT_CLASSIFICATION	1.1626549575942257E-5	IMPLEMENTATION
// thread is not alive, skip it	WITHOUT_CLASSIFICATION	0.9997573346870209	WITHOUT_CLASSIFICATION	2.426653129791146E-4	IMPLEMENTATION
// future is done or cancelled, skip it	WITHOUT_CLASSIFICATION	0.9999956459713402	WITHOUT_CLASSIFICATION	4.354028659822228E-6	IMPLEMENTATION
// first, check if the sender has unreceived mail	WITHOUT_CLASSIFICATION	0.9999997451067109	WITHOUT_CLASSIFICATION	2.548932891725237E-7	IMPLEMENTATION
// then deliver mail to the target	WITHOUT_CLASSIFICATION	0.999998214717234	WITHOUT_CLASSIFICATION	1.7852827658964492E-6	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999839764311731	WITHOUT_CLASSIFICATION	1.602356882683833E-5	IMPLEMENTATION
// Define a second version that doesn't take a block, so we have unique code paths for both cases.	WITHOUT_CLASSIFICATION	0.9999643162124816	WITHOUT_CLASSIFICATION	3.5683787518458096E-5	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999963135400011	WITHOUT_CLASSIFICATION	3.6864599989491103E-6	IMPLEMENTATION
// main body	WITHOUT_CLASSIFICATION	0.9999998903843151	WITHOUT_CLASSIFICATION	1.0961568492855895E-7	IMPLEMENTATION
// return jump handling	WITHOUT_CLASSIFICATION	0.9999986175604783	WITHOUT_CLASSIFICATION	1.3824395217464999E-6	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999998368095342	WITHOUT_CLASSIFICATION	1.6319046573553034E-7	IMPLEMENTATION
// return result if we're still good	WITHOUT_CLASSIFICATION	0.999998460169139	WITHOUT_CLASSIFICATION	1.5398308610528624E-6	IMPLEMENTATION
// redo jump handling	WITHOUT_CLASSIFICATION	0.999997979888792	WITHOUT_CLASSIFICATION	2.0201112079165037E-6	IMPLEMENTATION
// clear the redo	WITHOUT_CLASSIFICATION	0.9999980077766577	WITHOUT_CLASSIFICATION	1.992223342343644E-6	IMPLEMENTATION
// get runtime, create jump error, and throw it	WITHOUT_CLASSIFICATION	0.9999987690058724	WITHOUT_CLASSIFICATION	1.2309941275713184E-6	IMPLEMENTATION
// throw redo error if we're still good	WITHOUT_CLASSIFICATION	0.9997544420038157	WITHOUT_CLASSIFICATION	2.4555799618439206E-4	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999960888148502	WITHOUT_CLASSIFICATION	3.911185149783824E-6	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999166659482982	WITHOUT_CLASSIFICATION	8.333405170173782E-5	IMPLEMENTATION
// No required specified, check actual number of required args	WITHOUT_CLASSIFICATION	0.9999973752698853	WITHOUT_CLASSIFICATION	2.624730114691654E-6	IMPLEMENTATION
// actual required is less than 3, so we use specific arity	WITHOUT_CLASSIFICATION	0.9999991790303693	WITHOUT_CLASSIFICATION	8.209696306765266E-7	IMPLEMENTATION
// actual required is greater than 3, raise error (we don't support actual required > 3)	WITHOUT_CLASSIFICATION	0.9998562509206607	WITHOUT_CLASSIFICATION	1.4374907933924907E-4	IMPLEMENTATION
// simple path, no multimethod	WITHOUT_CLASSIFICATION	0.9999994514224486	WITHOUT_CLASSIFICATION	5.4857755132724E-7	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999992531971982	WITHOUT_CLASSIFICATION	7.468028018495881E-7	IMPLEMENTATION
// in debug mode we append _DBG to class name to force it to regenerate (or use pre-generated debug version)	WITHOUT_CLASSIFICATION	0.9999992531971982	WITHOUT_CLASSIFICATION	7.468028018495881E-7	IMPLEMENTATION
// normal all-rest method	WITHOUT_CLASSIFICATION	0.9998313417941991	WITHOUT_CLASSIFICATION	1.686582058009186E-4	IMPLEMENTATION
// for zero, one, two, three arities, JavaMethod.JavaMethod*.call(...IRubyObject[] args...) will check	WITHOUT_CLASSIFICATION	0.9999994767477344	WITHOUT_CLASSIFICATION	5.232522655745939E-7	IMPLEMENTATION
// promise to implement zero to N	WITHOUT_CLASSIFICATION	0.9663968158184237	WITHOUT_CLASSIFICATION	0.03360318418157636	IMPLEMENTATION
// return	WITHOUT_CLASSIFICATION	0.9999994812078129	WITHOUT_CLASSIFICATION	5.187921871027773E-7	IMPLEMENTATION
// just confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999882657371122	WITHOUT_CLASSIFICATION	1.1734262887780331E-5	IMPLEMENTATION
// just confirm args length == required	WITHOUT_CLASSIFICATION	0.9999996465991036	WITHOUT_CLASSIFICATION	3.5340089652337673E-7	IMPLEMENTATION
// confirm minimum args provided	WITHOUT_CLASSIFICATION	0.9999905638123923	WITHOUT_CLASSIFICATION	9.436187607737973E-6	IMPLEMENTATION
// confirm maximum not greater than optional	WITHOUT_CLASSIFICATION	0.9999892431493457	WITHOUT_CLASSIFICATION	1.0756850654248267E-5	IMPLEMENTATION
// Raise an error if arity does not match requirements	WITHOUT_CLASSIFICATION	0.9999996308567526	WITHOUT_CLASSIFICATION	3.691432474705708E-7	IMPLEMENTATION
// tc	WITHOUT_CLASSIFICATION	0.9999995675049835	WITHOUT_CLASSIFICATION	4.3249501642871314E-7	IMPLEMENTATION
// self // name	WITHOUT_CLASSIFICATION	0.9999998584310222	WITHOUT_CLASSIFICATION	1.4156897765316906E-7	IMPLEMENTATION
// no args	WITHOUT_CLASSIFICATION	0.9999993257058749	WITHOUT_CLASSIFICATION	6.742941252008178E-7	IMPLEMENTATION
// variable args with block	WITHOUT_CLASSIFICATION	0.9999999842306527	WITHOUT_CLASSIFICATION	1.5769347300501566E-8	IMPLEMENTATION
// variable args no block, load null block	WITHOUT_CLASSIFICATION	0.999999994986164	WITHOUT_CLASSIFICATION	5.013835954639262E-9	IMPLEMENTATION
// zero args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999686173702	WITHOUT_CLASSIFICATION	3.138262986177893E-8	IMPLEMENTATION
// one arg with block	WITHOUT_CLASSIFICATION	0.9999998745994726	WITHOUT_CLASSIFICATION	1.254005274371724E-7	IMPLEMENTATION
// one arg, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999752869004	WITHOUT_CLASSIFICATION	2.4713099514796506E-8	IMPLEMENTATION
// two args with block	WITHOUT_CLASSIFICATION	0.9999998872641515	WITHOUT_CLASSIFICATION	1.1273584847464096E-7	IMPLEMENTATION
// two args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.99999997615406	WITHOUT_CLASSIFICATION	2.384594002227325E-8	IMPLEMENTATION
// three args with block	WITHOUT_CLASSIFICATION	0.9999999195144781	WITHOUT_CLASSIFICATION	8.048552198612584E-8	IMPLEMENTATION
// three args, no block; load NULL_BLOCK	WITHOUT_CLASSIFICATION	0.9999999447984457	WITHOUT_CLASSIFICATION	5.5201554406363544E-8	IMPLEMENTATION
// load block if it accepts block	WITHOUT_CLASSIFICATION	0.999989718950603	WITHOUT_CLASSIFICATION	1.0281049396929654E-5	IMPLEMENTATION
// all other arg cases with block	WITHOUT_CLASSIFICATION	0.999996598157701	WITHOUT_CLASSIFICATION	3.4018422989563494E-6	IMPLEMENTATION
// all other arg cases without block	WITHOUT_CLASSIFICATION	0.9999980031071998	WITHOUT_CLASSIFICATION	1.996892800279444E-6	IMPLEMENTATION
// one arg, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999989958809	WITHOUT_CLASSIFICATION	1.004119136244375E-9	IMPLEMENTATION
// two args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999991213473	WITHOUT_CLASSIFICATION	8.786526528943733E-10	IMPLEMENTATION
// three args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999987748814	WITHOUT_CLASSIFICATION	1.225118532350669E-9	IMPLEMENTATION
// load target for invocations	WITHOUT_CLASSIFICATION	0.9999999322755223	WITHOUT_CLASSIFICATION	6.772447779792963E-8	IMPLEMENTATION
// load receiver as original type for virtual invocation	WITHOUT_CLASSIFICATION	0.9999999480119363	WITHOUT_CLASSIFICATION	5.198806363980895E-8	IMPLEMENTATION
// static invocation	WITHOUT_CLASSIFICATION	0.9999999100614446	WITHOUT_CLASSIFICATION	8.993855534055976E-8	IMPLEMENTATION
// virtual invocation	WITHOUT_CLASSIFICATION	0.999999842135603	WITHOUT_CLASSIFICATION	1.578643969462451E-7	IMPLEMENTATION
// void return type, so we need to load a nil for returning below	WITHOUT_CLASSIFICATION	0.9999981562256044	WITHOUT_CLASSIFICATION	1.843774395666813E-6	IMPLEMENTATION
// normal finally and exit	WITHOUT_CLASSIFICATION	0.9999494070460462	WITHOUT_CLASSIFICATION	5.059295395386242E-5	IMPLEMENTATION
// promise to implement one to N	WITHOUT_CLASSIFICATION	0.9772580154838055	WITHOUT_CLASSIFICATION	0.02274198451619446	IMPLEMENTATION
//call post method stuff (exception raised)	WITHOUT_CLASSIFICATION	0.9999166659482982	WITHOUT_CLASSIFICATION	8.333405170173782E-5	IMPLEMENTATION
// these are only needed if we have a non-noop call config	WITHOUT_CLASSIFICATION	0.9998778508711116	WITHOUT_CLASSIFICATION	1.2214912888843782E-4	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999997636349467	WITHOUT_CLASSIFICATION	2.3636505331895388E-7	IMPLEMENTATION
// method itself // ThreadContext // invoked name	WITHOUT_CLASSIFICATION	0.9999997636349467	WITHOUT_CLASSIFICATION	2.3636505331895388E-7	IMPLEMENTATION
// singleton classes don't get their own visibility domain	WITHOUT_CLASSIFICATION	0.9999999949112719	WITHOUT_CLASSIFICATION	5.0887280977996E-9	IMPLEMENTATION
// For visibility we need real meta class and not anonymous one from class << self	WITHOUT_CLASSIFICATION	0.9999999968290603	WITHOUT_CLASSIFICATION	3.1709396452437877E-9	IMPLEMENTATION
// SimpleInvocationMethod	WITHOUT_CLASSIFICATION	0.999946100848415	WITHOUT_CLASSIFICATION	5.3899151584952754E-5	IMPLEMENTATION
// never reached	WITHOUT_CLASSIFICATION	0.9988205148170165	WITHOUT_CLASSIFICATION	0.0011794851829834963	IMPLEMENTATION
// promise to implement N with block	WITHOUT_CLASSIFICATION	0.982378275797589	WITHOUT_CLASSIFICATION	0.017621724202411065	IMPLEMENTATION
// promise to implement zero to N with block	WITHOUT_CLASSIFICATION	0.9799795642606461	WITHOUT_CLASSIFICATION	0.020020435739353883	IMPLEMENTATION
// promise to implement one to N with block	WITHOUT_CLASSIFICATION	0.9865118315616349	WITHOUT_CLASSIFICATION	0.013488168438365093	IMPLEMENTATION
// promise to implement two to N with block	WITHOUT_CLASSIFICATION	0.9753083833203096	WITHOUT_CLASSIFICATION	0.024691616679690477	IMPLEMENTATION
// promise to implement zero to three with block	WITHOUT_CLASSIFICATION	0.9605724743050189	WITHOUT_CLASSIFICATION	0.039427525694981085	IMPLEMENTATION
// promise to implement one to three with block	WITHOUT_CLASSIFICATION	0.9813136902448936	WITHOUT_CLASSIFICATION	0.01868630975510645	IMPLEMENTATION
// promise to implement two to three with block	WITHOUT_CLASSIFICATION	0.9515968692311562	WITHOUT_CLASSIFICATION	0.0484031307688439	IMPLEMENTATION
// promise to implement three with block	WITHOUT_CLASSIFICATION	0.9409783236744966	WITHOUT_CLASSIFICATION	0.05902167632550329	IMPLEMENTATION
// promise to implement N	WITHOUT_CLASSIFICATION	0.9901035366115698	WITHOUT_CLASSIFICATION	0.009896463388430154	IMPLEMENTATION
// DumpingInvocationMethodFactory	WITHOUT_CLASSIFICATION	0.9999915560142197	WITHOUT_CLASSIFICATION	8.44398578026067E-6	IMPLEMENTATION
// We promote our box to being its own box since we're changing // visibilities, and need it to be reflected on this method object // independent of any other sharing the box.	WITHOUT_CLASSIFICATION	0.9999708032413078	WITHOUT_CLASSIFICATION	2.9196758692205902E-5	IMPLEMENTATION
// Normally we could leave these to fall back on the superclass, but // since it dispatches through the [] version below, which may // dispatch through the []+block version, we can save it a couple hops // by overriding these here.	WITHOUT_CLASSIFICATION	0.9999997261804997	WITHOUT_CLASSIFICATION	2.7381950026174873E-7	IMPLEMENTATION
// promise to implement two to N	WITHOUT_CLASSIFICATION	0.9662713365828538	WITHOUT_CLASSIFICATION	0.03372866341714622	IMPLEMENTATION
// promise to implement three to N	WITHOUT_CLASSIFICATION	0.8838203673166123	WITHOUT_CLASSIFICATION	0.1161796326833876	IMPLEMENTATION
// promise to implement zero to three	WITHOUT_CLASSIFICATION	0.9328863296486611	WITHOUT_CLASSIFICATION	0.06711367035133885	IMPLEMENTATION
// promise to implement one to three	WITHOUT_CLASSIFICATION	0.9677023907857304	WITHOUT_CLASSIFICATION	0.0322976092142696	IMPLEMENTATION
// promise to implement two to three	WITHOUT_CLASSIFICATION	0.9326444388043355	WITHOUT_CLASSIFICATION	0.06735556119566452	IMPLEMENTATION
// promise to implement three	WITHOUT_CLASSIFICATION	0.9652584080861311	WITHOUT_CLASSIFICATION	0.034741591913869024	IMPLEMENTATION
// all other arities use "n" dispatch path	WITHOUT_CLASSIFICATION	0.9999973638034185	WITHOUT_CLASSIFICATION	2.6361965814973994E-6	IMPLEMENTATION
// load up object and add a few useful methods	WITHOUT_CLASSIFICATION	0.9999998610851909	WITHOUT_CLASSIFICATION	1.3891480915608728E-7	IMPLEMENTATION
// open up the 'to_java' and 'as' coercion methods on Ruby Objects, via Kernel	WITHOUT_CLASSIFICATION	0.9999999921631294	WITHOUT_CLASSIFICATION	7.836870512230844E-9	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9995721049051536	WITHOUT_CLASSIFICATION	4.2789509484632575E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999941691208315	WITHOUT_CLASSIFICATION	5.830879168470288E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998237861811	WITHOUT_CLASSIFICATION	1.7621381880095332E-7	IMPLEMENTATION
// wrap self and store the wrapper	WITHOUT_CLASSIFICATION	0.9999991733128344	WITHOUT_CLASSIFICATION	8.2668716571988E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999858419175517	WITHOUT_CLASSIFICATION	1.4158082448358464E-5	IMPLEMENTATION
// start setup method	WITHOUT_CLASSIFICATION	0.9999996604778967	WITHOUT_CLASSIFICATION	3.3952210339813536E-7	IMPLEMENTATION
// set RubyClass	WITHOUT_CLASSIFICATION	0.9999999773113328	WITHOUT_CLASSIFICATION	2.2688667084206105E-8	IMPLEMENTATION
// set Ruby	WITHOUT_CLASSIFICATION	0.9999989776832067	WITHOUT_CLASSIFICATION	1.0223167932755455E-6	IMPLEMENTATION
// all methods dispatch to the simple version by default, which is method_missing normally	WITHOUT_CLASSIFICATION	0.9999974186975322	WITHOUT_CLASSIFICATION	2.58130246783274E-6	IMPLEMENTATION
// try specific name first, falling back on simple name	WITHOUT_CLASSIFICATION	0.9999980884503583	WITHOUT_CLASSIFICATION	1.9115496417415335E-6	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999949395195314	WITHOUT_CLASSIFICATION	5.0604804685670716E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999991732468	WITHOUT_CLASSIFICATION	8.267531896828558E-10	IMPLEMENTATION
// construct the class, implementing all supertypes	WITHOUT_CLASSIFICATION	0.9995721049051536	WITHOUT_CLASSIFICATION	4.2789509484632575E-4	IMPLEMENTATION
// fields needed for dispatch and such	WITHOUT_CLASSIFICATION	0.9999941691208315	WITHOUT_CLASSIFICATION	5.830879168470288E-6	IMPLEMENTATION
// create constructor	WITHOUT_CLASSIFICATION	0.9999998237861811	WITHOUT_CLASSIFICATION	1.7621381880095332E-7	IMPLEMENTATION
// end constructor	WITHOUT_CLASSIFICATION	0.9999858419175517	WITHOUT_CLASSIFICATION	1.4158082448358464E-5	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9959355559294184	WITHOUT_CLASSIFICATION	0.004064444070581629	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999999995823297	WITHOUT_CLASSIFICATION	4.176702943558298E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999930344042662	WITHOUT_CLASSIFICATION	6.965595733805072E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999998079815435	WITHOUT_CLASSIFICATION	1.9201845647257427E-7	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.999997537632385	WITHOUT_CLASSIFICATION	2.4623676150123263E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999998773172355	WITHOUT_CLASSIFICATION	1.2268276444936755E-7	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999900565181248	WITHOUT_CLASSIFICATION	9.94348187520302E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999999902478433	WITHOUT_CLASSIFICATION	9.75215670142461E-8	IMPLEMENTATION
// create static init, for a monitor object	WITHOUT_CLASSIFICATION	0.9999999602279386	WITHOUT_CLASSIFICATION	3.9772061379835425E-8	IMPLEMENTATION
// store the wrapper	WITHOUT_CLASSIFICATION	0.9999978047306571	WITHOUT_CLASSIFICATION	2.1952693428217587E-6	IMPLEMENTATION
// prepare temp locals	WITHOUT_CLASSIFICATION	0.9999997385323776	WITHOUT_CLASSIFICATION	2.61467622376323E-7	IMPLEMENTATION
// Try to look up field for simple name // get field; if nonnull, go straight to dispatch	WITHOUT_CLASSIFICATION	0.9999995980935011	WITHOUT_CLASSIFICATION	4.0190649891573625E-7	IMPLEMENTATION
// field is null, lock class and try to populate	WITHOUT_CLASSIFICATION	0.9999999987613033	WITHOUT_CLASSIFICATION	1.238696632794124E-9	IMPLEMENTATION
// try/finally block to ensure unlock	WITHOUT_CLASSIFICATION	0.9999943367901173	WITHOUT_CLASSIFICATION	5.663209882759129E-6	IMPLEMENTATION
// store it	WITHOUT_CLASSIFICATION	0.9999962768634594	WITHOUT_CLASSIFICATION	3.7231365405523654E-6	IMPLEMENTATION
// end of try block	WITHOUT_CLASSIFICATION	0.9999990534499691	WITHOUT_CLASSIFICATION	9.465500308546532E-7	IMPLEMENTATION
// finally block to release monitor	WITHOUT_CLASSIFICATION	0.9999995845887895	WITHOUT_CLASSIFICATION	4.1541121057788853E-7	IMPLEMENTATION
// exception handling for monitor release	WITHOUT_CLASSIFICATION	0.9999999861840786	WITHOUT_CLASSIFICATION	1.38159213823947E-8	IMPLEMENTATION
// re-get, re-check method; if not null now, go to dispatch	WITHOUT_CLASSIFICATION	0.9999988049143855	WITHOUT_CLASSIFICATION	1.1950856145085246E-6	IMPLEMENTATION
// load self, class, and name	WITHOUT_CLASSIFICATION	0.9999999991732468	WITHOUT_CLASSIFICATION	8.267531896828558E-10	IMPLEMENTATION
// load arguments into IRubyObject[] for dispatch	WITHOUT_CLASSIFICATION	0.999999995823297	WITHOUT_CLASSIFICATION	4.176702943558298E-9	IMPLEMENTATION
// convert to IRubyObject	WITHOUT_CLASSIFICATION	0.999930344042662	WITHOUT_CLASSIFICATION	6.965595733805072E-5	IMPLEMENTATION
// invoke method	WITHOUT_CLASSIFICATION	0.999997537632385	WITHOUT_CLASSIFICATION	2.4623676150123263E-6	IMPLEMENTATION
// if we expect a return value, unwrap it	WITHOUT_CLASSIFICATION	0.9999998773172355	WITHOUT_CLASSIFICATION	1.2268276444936755E-7	IMPLEMENTATION
// end setup method	WITHOUT_CLASSIFICATION	0.9999900565181248	WITHOUT_CLASSIFICATION	9.94348187520302E-6	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999999902478433	WITHOUT_CLASSIFICATION	9.75215670142461E-8	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999779870942	WITHOUT_CLASSIFICATION	2.2012905725511876E-8	IMPLEMENTATION
// method still not available, call method_missing	WITHOUT_CLASSIFICATION	0.9999846360563018	WITHOUT_CLASSIFICATION	1.5363943698169446E-5	IMPLEMENTATION
// perform the dispatch	WITHOUT_CLASSIFICATION	0.9999999073170643	WITHOUT_CLASSIFICATION	9.268293566368029E-8	IMPLEMENTATION
// try to load the specified name; only if that fails, try to define the class	WITHOUT_CLASSIFICATION	0.9999999996863829	WITHOUT_CLASSIFICATION	3.1361715826375546E-10	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999993552188465	WITHOUT_CLASSIFICATION	6.447811535689429E-7	IMPLEMENTATION
// up two slots, for long's two halves	WITHOUT_CLASSIFICATION	0.9999993552188465	WITHOUT_CLASSIFICATION	6.447811535689429E-7	IMPLEMENTATION
// setup the class	WITHOUT_CLASSIFICATION	0.9999999887245327	WITHOUT_CLASSIFICATION	1.1275467362923575E-8	IMPLEMENTATION
// now, create a method_added that can replace the DynamicMethod fields as they're redefined	WITHOUT_CLASSIFICATION	0.9999997792601582	WITHOUT_CLASSIFICATION	2.2073984195227084E-7	IMPLEMENTATION
// do nothing, it's a non-impl method	WITHOUT_CLASSIFICATION	0.9999997300191815	WITHOUT_CLASSIFICATION	2.6998081849116623E-7	IMPLEMENTATION
// probably a primitive	WITHOUT_CLASSIFICATION	0.9999979527494534	WITHOUT_CLASSIFICATION	2.0472505466482756E-6	IMPLEMENTATION
// interfaces are handled as modules	WITHOUT_CLASSIFICATION	0.9999999998662477	WITHOUT_CLASSIFICATION	1.3375239663413588E-10	IMPLEMENTATION
// construct the mirror class and parent classes	WITHOUT_CLASSIFICATION	0.9999992383724234	WITHOUT_CLASSIFICATION	7.616275766205758E-7	IMPLEMENTATION
// set the full name	WITHOUT_CLASSIFICATION	0.9999992606226801	WITHOUT_CLASSIFICATION	7.393773198752735E-7	IMPLEMENTATION
// include all interfaces	WITHOUT_CLASSIFICATION	0.9999999613998395	WITHOUT_CLASSIFICATION	3.860016048694383E-8	IMPLEMENTATION
// if it's an array, only add methods for aref, aset, and length	WITHOUT_CLASSIFICATION	0.9999996879777157	WITHOUT_CLASSIFICATION	3.1202228431591416E-7	IMPLEMENTATION
// add array construction methods	WITHOUT_CLASSIFICATION	0.9999891651566808	WITHOUT_CLASSIFICATION	1.0834843319249E-5	IMPLEMENTATION
// add all public constructors (note: getConstructors only returns public ones)	WITHOUT_CLASSIFICATION	0.9999903050564594	WITHOUT_CLASSIFICATION	9.694943540695288E-6	IMPLEMENTATION
// add all instance and static methods	WITHOUT_CLASSIFICATION	0.9999950101599897	WITHOUT_CLASSIFICATION	4.9898400102312766E-6	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999917810008763	WITHOUT_CLASSIFICATION	8.218999123778811E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999987833042177	WITHOUT_CLASSIFICATION	1.216695782320025E-6	IMPLEMENTATION
// only include static methods if specified	WITHOUT_CLASSIFICATION	0.9999998724509553	WITHOUT_CLASSIFICATION	1.27549044626031E-7	IMPLEMENTATION
// add a few type-specific special methods	WITHOUT_CLASSIFICATION	0.9999810410909289	WITHOUT_CLASSIFICATION	1.8958909071132323E-5	IMPLEMENTATION
// add all static variables	WITHOUT_CLASSIFICATION	0.9999996603286962	WITHOUT_CLASSIFICATION	3.396713038248991E-7	IMPLEMENTATION
// only public static fields that are valid constants	WITHOUT_CLASSIFICATION	0.9999999821579341	WITHOUT_CLASSIFICATION	1.7842065924035977E-8	IMPLEMENTATION
// looks like someone's trying to raise a Java exception. Let them.	WITHOUT_CLASSIFICATION	0.9999997841561862	WITHOUT_CLASSIFICATION	2.1584381380083674E-7	IMPLEMENTATION
// NOTE: The five match methods are arity-split to avoid the cost of boxing arguments // when there's already a cached match. Do not condense them into a single // method.	WITHOUT_CLASSIFICATION	0.9999999376410382	WITHOUT_CLASSIFICATION	6.235896182544476E-8	IMPLEMENTATION
// TODO: This is where we would want to do precision checks to see // if it's non-destructive to coerce a given type into the target // integral primitive	WITHOUT_CLASSIFICATION	0.9681258518023412	IMPLEMENTATION	0.0318741481976588	WITHOUT_CLASSIFICATION
// long first because it's what Fixnum claims to be	WITHOUT_CLASSIFICATION	0.9999999839359996	WITHOUT_CLASSIFICATION	1.606400031821511E-8	IMPLEMENTATION
// double first because it's what float claims to be	WITHOUT_CLASSIFICATION	0.9999999912227086	WITHOUT_CLASSIFICATION	8.777291575284915E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6721403955969332	WITHOUT_CLASSIFICATION	0.32785960440306683	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999553579337137	WITHOUT_CLASSIFICATION	4.464206628623068E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999998671380842	WITHOUT_CLASSIFICATION	1.328619158015922E-6	IMPLEMENTATION
// we set all Java methods to optional, since many/most have overloads	WITHOUT_CLASSIFICATION	0.9999999870586446	WITHOUT_CLASSIFICATION	1.2941355420420139E-8	IMPLEMENTATION
// If we hold a Java object, we need a java_class accessor	WITHOUT_CLASSIFICATION	0.9999977140713181	WITHOUT_CLASSIFICATION	2.2859286819227214E-6	IMPLEMENTATION
// line 326	WITHOUT_CLASSIFICATION	0.9999993632663341	WITHOUT_CLASSIFICATION	6.367336658888618E-7	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999553579337137	WITHOUT_CLASSIFICATION	4.464206628623068E-5	IMPLEMENTATION
// initialize cache of parameter types to method	WITHOUT_CLASSIFICATION	0.999998671380842	WITHOUT_CLASSIFICATION	1.328619158015922E-6	IMPLEMENTATION
// too much array creation!	WITHOUT_CLASSIFICATION	0.9999987833042177	WITHOUT_CLASSIFICATION	1.216695782320025E-6	IMPLEMENTATION
// construct new array proxy (ArrayJavaProxy)	WITHOUT_CLASSIFICATION	0.9999750128799769	WITHOUT_CLASSIFICATION	2.498712002315368E-5	IMPLEMENTATION
// Get map of all fields we want to define.  	WITHOUT_CLASSIFICATION	0.9999984104712611	WITHOUT_CLASSIFICATION	1.5895287388763236E-6	IMPLEMENTATION
// Look through all mappings to find a match entry for this field	WITHOUT_CLASSIFICATION	0.9999840830837734	WITHOUT_CLASSIFICATION	1.5916916226603845E-5	IMPLEMENTATION
// Hit a non-java proxy class (included Modules can be a cause of this...skip)	WITHOUT_CLASSIFICATION	0.9999999998227544	WITHOUT_CLASSIFICATION	1.7724567698645036E-10	IMPLEMENTATION
// We could not find all of them print out first one (we could print them all?)	WITHOUT_CLASSIFICATION	0.9999903094766637	WITHOUT_CLASSIFICATION	9.690523336341245E-6	IMPLEMENTATION
// dummy bodies for default impls	WITHOUT_CLASSIFICATION	0.9999983275415942	WITHOUT_CLASSIFICATION	1.6724584057865403E-6	IMPLEMENTATION
// initialize this if it hasn't been	WITHOUT_CLASSIFICATION	0.9999996684402217	WITHOUT_CLASSIFICATION	3.3155977833212244E-7	IMPLEMENTATION
// initialize these if they haven't been	WITHOUT_CLASSIFICATION	0.9999988867931262	WITHOUT_CLASSIFICATION	1.1132068737386666E-6	IMPLEMENTATION
// not allowed for original (non-generated) Java classes // note: not allowing for any previously created class right now; // this restriction might be loosened later for generated classes	WITHOUT_CLASSIFICATION	0.9999985122820805	WITHOUT_CLASSIFICATION	1.4877179195304206E-6	IMPLEMENTATION
// setup new, etc unless this is a ConcreteJavaProxy subclass	WITHOUT_CLASSIFICATION	0.9999999995720172	WITHOUT_CLASSIFICATION	4.2798281944729736E-10	IMPLEMENTATION
// First we make modifications to the class, to adapt it to being // both a Ruby class and a proxy for a Java type	WITHOUT_CLASSIFICATION	0.9999975206852164	WITHOUT_CLASSIFICATION	2.479314783579125E-6	IMPLEMENTATION
// list of interfaces we implement	WITHOUT_CLASSIFICATION	0.9999850416555633	WITHOUT_CLASSIFICATION	1.4958344436575806E-5	IMPLEMENTATION
// We capture the original "new" and make it private	WITHOUT_CLASSIFICATION	0.999587419090859	WITHOUT_CLASSIFICATION	4.125809091409852E-4	IMPLEMENTATION
// The replacement "new" allocates and inits the Ruby object as before, but // also instantiates our proxified Java object by calling __jcreate!	WITHOUT_CLASSIFICATION	0.9999992300768716	WITHOUT_CLASSIFICATION	7.699231283753674E-7	IMPLEMENTATION
// Next, we define a few private methods that we'll use to manipulate // the Java object contained within this Ruby object	WITHOUT_CLASSIFICATION	0.9999998625517639	WITHOUT_CLASSIFICATION	1.374482361349262E-7	IMPLEMENTATION
// jcreate instantiates the proxy object which implements all interfaces // and which is wrapped and implemented by this object	WITHOUT_CLASSIFICATION	0.9999481088775318	WITHOUT_CLASSIFICATION	5.1891122468188316E-5	IMPLEMENTATION
// Now we add an "implement" and "implement_all" methods to the class	WITHOUT_CLASSIFICATION	0.9999788234983465	WITHOUT_CLASSIFICATION	2.1176501653544373E-5	IMPLEMENTATION
// implement all forces implementation of all interfaces we intend // for this class to implement	WITHOUT_CLASSIFICATION	0.999971219538295	WITHOUT_CLASSIFICATION	2.8780461704893734E-5	IMPLEMENTATION
// we've already done the above priming logic, just add another interface // to the list of intentions unless we're past the point of no return or // already intend to implement the given interface	WITHOUT_CLASSIFICATION	0.9999997227230663	WITHOUT_CLASSIFICATION	2.772769338203616E-7	IMPLEMENTATION
// walk all superclasses aggregating interfaces	WITHOUT_CLASSIFICATION	0.9999999952564781	WITHOUT_CLASSIFICATION	4.743521819098915E-9	IMPLEMENTATION
// construct the new interface impl and set it into the object	WITHOUT_CLASSIFICATION	0.9999993232266065	WITHOUT_CLASSIFICATION	6.767733935360522E-7	IMPLEMENTATION
// assuming the user wants a collection of interfaces that can be // included together. make it so.	WITHOUT_CLASSIFICATION	0.999999982048883	WITHOUT_CLASSIFICATION	1.7951117038326806E-8	IMPLEMENTATION
// not allowed for existing Java interface modules	WITHOUT_CLASSIFICATION	0.9999998895554546	WITHOUT_CLASSIFICATION	1.1044454540587765E-7	IMPLEMENTATION
// To turn a module into an "interface collection" we add a class instance // variable to hold the list of interfaces, and modify append_features // for this module to call append_features on each of those interfaces as // well	WITHOUT_CLASSIFICATION	0.9999999996707668	WITHOUT_CLASSIFICATION	3.292332024274541E-10	IMPLEMENTATION
// already set up append_features, just add the interface if we haven't already	WITHOUT_CLASSIFICATION	0.999999930567859	WITHOUT_CLASSIFICATION	6.943214106100443E-8	IMPLEMENTATION
// array-of-interface-type creation/identity	WITHOUT_CLASSIFICATION	0.9999996929219093	WITHOUT_CLASSIFICATION	3.070780907330114E-7	IMPLEMENTATION
// keep this variant for kind_of? testing	WITHOUT_CLASSIFICATION	0.9999829998210314	WITHOUT_CLASSIFICATION	1.7000178968602284E-5	IMPLEMENTATION
// array creation should use this variant	WITHOUT_CLASSIFICATION	0.9999918712545255	WITHOUT_CLASSIFICATION	8.128745474433417E-6	IMPLEMENTATION
// parent.setConstant(name, proxyClass); // where the name should come from ?	WITHOUT_CLASSIFICATION	0.9999999802172728	WITHOUT_CLASSIFICATION	1.97827272817224E-8	IMPLEMENTATION
// including interface module so old-style interface "subclasses" will // respond correctly to #kind_of?, etc.	WITHOUT_CLASSIFICATION	0.9999999977771329	WITHOUT_CLASSIFICATION	2.22286704837228E-9	IMPLEMENTATION
// add reference to interface module	WITHOUT_CLASSIFICATION	0.9999999640314375	WITHOUT_CLASSIFICATION	3.596856248116237E-8	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// proxy is complete, return it	WITHOUT_CLASSIFICATION	0.9999917810008763	WITHOUT_CLASSIFICATION	8.218999123778811E-6	IMPLEMENTATION
// same as argument_types, but matches name in java.lang.reflect.Constructor/Method	WITHOUT_CLASSIFICATION	0.9999999999616266	WITHOUT_CLASSIFICATION	3.837341796357872E-11	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998409407066	WITHOUT_CLASSIFICATION	1.59059293393253E-7	IMPLEMENTATION
// weakly reserved names	WITHOUT_CLASSIFICATION	0.9999986578869058	WITHOUT_CLASSIFICATION	1.342113094258256E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999931252562575	WITHOUT_CLASSIFICATION	6.874743742497359E-6	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999931252562575	WITHOUT_CLASSIFICATION	6.874743742497359E-6	IMPLEMENTATION
// modified only by addMethod; no synchronization required	WITHOUT_CLASSIFICATION	0.9999995234340021	WITHOUT_CLASSIFICATION	4.765659979146818E-7	IMPLEMENTATION
// if there's no constructor, we must prevent construction	WITHOUT_CLASSIFICATION	0.9997941747784665	WITHOUT_CLASSIFICATION	2.058252215335481E-4	IMPLEMENTATION
// caching constructors, as they're accessed for each new instance	WITHOUT_CLASSIFICATION	0.9999999856176058	WITHOUT_CLASSIFICATION	1.438239417628239E-8	IMPLEMENTATION
// proxy module for interfaces	WITHOUT_CLASSIFICATION	0.9999999811355013	WITHOUT_CLASSIFICATION	1.8864498848469584E-8	IMPLEMENTATION
// proxy class for concrete classes.  also used for // "concrete" interfaces, which is why we have two fields	WITHOUT_CLASSIFICATION	0.9999999634708571	WITHOUT_CLASSIFICATION	3.652914296210758E-8	IMPLEMENTATION
// readable only by thread building proxy, so don't need to be // volatile. used to handle recursive calls to getProxyClass/Module // while proxy is being constructed (usually when a constant // defined by a class is of the same type as that class).	WITHOUT_CLASSIFICATION	0.9999999955254462	WITHOUT_CLASSIFICATION	4.474553876147809E-9	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9997603180234877	WITHOUT_CLASSIFICATION	2.3968197651217705E-4	IMPLEMENTATION
// Now add all aliases for the static methods (fields) as appropriate	WITHOUT_CLASSIFICATION	0.9999852832741171	WITHOUT_CLASSIFICATION	1.4716725882937338E-5	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999956342321717	WITHOUT_CLASSIFICATION	4.3657678281832805E-6	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999998945342302	WITHOUT_CLASSIFICATION	1.0546576980145386E-6	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999997960607895	WITHOUT_CLASSIFICATION	2.0393921057140028E-7	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999999942906279	WITHOUT_CLASSIFICATION	5.70937209339831E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999997994850244	WITHOUT_CLASSIFICATION	2.005149755530871E-7	IMPLEMENTATION
// Additionally add ?-postfixed aliases to any boolean methods and properties.	WITHOUT_CLASSIFICATION	0.9999979147689901	WITHOUT_CLASSIFICATION	2.085231009878969E-6	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999991720124181	WITHOUT_CLASSIFICATION	8.279875819321581E-7	IMPLEMENTATION
// something?	WITHOUT_CLASSIFICATION	0.999997853233941	WITHOUT_CLASSIFICATION	2.1467660589583757E-6	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999995790213	WITHOUT_CLASSIFICATION	4.20978675283424E-10	IMPLEMENTATION
// setup constants for public inner classes	WITHOUT_CLASSIFICATION	0.9999999995790213	WITHOUT_CLASSIFICATION	4.20978675283424E-10	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997158959903	WITHOUT_CLASSIFICATION	2.841040096527451E-7	IMPLEMENTATION
// Ignore bad constant named inner classes pending JRUBY-697	WITHOUT_CLASSIFICATION	0.9999997158959903	WITHOUT_CLASSIFICATION	2.841040096527451E-7	IMPLEMENTATION
// create constructorInstaller; if there are no constructors, it will disable construction	WITHOUT_CLASSIFICATION	0.9999999288769432	WITHOUT_CLASSIFICATION	7.112305670823944E-8	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999063421223	WITHOUT_CLASSIFICATION	9.36578776898406E-8	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999700417055827	WITHOUT_CLASSIFICATION	2.9958294417336234E-5	IMPLEMENTATION
// now iterate over all installers and make sure they also have appropriate aliases	WITHOUT_CLASSIFICATION	0.9998796494676238	WITHOUT_CLASSIFICATION	1.203505323762204E-4	IMPLEMENTATION
// old (quasi-deprecated) interface class	WITHOUT_CLASSIFICATION	0.9999999956076752	WITHOUT_CLASSIFICATION	4.392324728242521E-9	IMPLEMENTATION
// 1.9 support for encodings	WITHOUT_CLASSIFICATION	0.9999989054304361	WITHOUT_CLASSIFICATION	1.0945695638046829E-6	IMPLEMENTATION
// double-check the cache now that we're synchronized	WITHOUT_CLASSIFICATION	0.9999989533329428	WITHOUT_CLASSIFICATION	1.0466670571954057E-6	IMPLEMENTATION
// setFoo(Foo) => foo=(Foo)	WITHOUT_CLASSIFICATION	0.999999942906279	WITHOUT_CLASSIFICATION	5.70937209339831E-8	IMPLEMENTATION
// isFoo() => foo, isFoo(*) => foo(*)	WITHOUT_CLASSIFICATION	0.9999997994850244	WITHOUT_CLASSIFICATION	2.005149755530871E-7	IMPLEMENTATION
// is_something?, contains_thing?	WITHOUT_CLASSIFICATION	0.9999991720124181	WITHOUT_CLASSIFICATION	8.279875819321581E-7	IMPLEMENTATION
// one word type name that starts lower-case...it may be a primitive type	WITHOUT_CLASSIFICATION	0.9999999970951104	WITHOUT_CLASSIFICATION	2.9048896187416526E-9	IMPLEMENTATION
// Java.getProxyClass deals with sync issues, so we won't duplicate the logic here	WITHOUT_CLASSIFICATION	0.9999997354520528	WITHOUT_CLASSIFICATION	2.6454794721790917E-7	IMPLEMENTATION
// note: intentionally returning the actual array returned from Java, rather // than wrapping it in a RubyArray. wave of the future, when java_class will // return the actual class, rather than a JavaClass wrapper.	WITHOUT_CLASSIFICATION	0.9999999926212261	WITHOUT_CLASSIFICATION	7.3787739808512885E-9	IMPLEMENTATION
// see note above re: return type	WITHOUT_CLASSIFICATION	0.9999999286751362	WITHOUT_CLASSIFICATION	7.132486380021505E-8	IMPLEMENTATION
// restrictive security policy; no matter, we only want public // classes anyway	WITHOUT_CLASSIFICATION	0.999999997166945	WITHOUT_CLASSIFICATION	2.833055075112395E-9	IMPLEMENTATION
// very restrictive policy (disallows Member.PUBLIC) // we'd never actually get this far in that case	WITHOUT_CLASSIFICATION	0.9999864741533419	WITHOUT_CLASSIFICATION	1.352584665816778E-5	IMPLEMENTATION
// one-dimensional array	WITHOUT_CLASSIFICATION	0.9999882243022618	WITHOUT_CLASSIFICATION	1.1775697738350998E-5	IMPLEMENTATION
// n-dimensional array	WITHOUT_CLASSIFICATION	0.9999355535997123	WITHOUT_CLASSIFICATION	6.444640028763981E-5	IMPLEMENTATION
// if it's an array of arrays, recurse with the component type	WITHOUT_CLASSIFICATION	0.9999962953440759	WITHOUT_CLASSIFICATION	3.704655924204374E-6	IMPLEMENTATION
// we all all superclasses, but avoid adding superclass methods with same name+signature as subclass methods // see JRUBY-3130	WITHOUT_CLASSIFICATION	0.9999999999823773	WITHOUT_CLASSIFICATION	1.7622681115838705E-11	IMPLEMENTATION
// Proc implementing an interface, pull in the catch-all code that lets the proc get invoked // no matter what method is called on the interface	WITHOUT_CLASSIFICATION	0.9998897523351351	WITHOUT_CLASSIFICATION	1.1024766486488762E-4	IMPLEMENTATION
// can't be converted any more, return it	WITHOUT_CLASSIFICATION	0.9999987792503203	WITHOUT_CLASSIFICATION	1.2207496796282008E-6	IMPLEMENTATION
// getFooBar() => fooBar?, foo_bar?(*)	WITHOUT_CLASSIFICATION	0.9999999406284158	WITHOUT_CLASSIFICATION	5.937158431588283E-8	IMPLEMENTATION
// If not a property, but is boolean add ?-postfixed aliases.	WITHOUT_CLASSIFICATION	0.9999970127396813	WITHOUT_CLASSIFICATION	2.987260318561185E-6	IMPLEMENTATION
// many cases are ok to convert to float; if not one of these, error	WITHOUT_CLASSIFICATION	0.9999922270676437	WITHOUT_CLASSIFICATION	7.772932356386665E-6	IMPLEMENTATION
// for Object, default to natural wrapper type	WITHOUT_CLASSIFICATION	0.9999996607001442	WITHOUT_CLASSIFICATION	3.3929985573083303E-7	IMPLEMENTATION
// rubyObject is already of the required jruby class (or subclass)	WITHOUT_CLASSIFICATION	0.9999995868344804	WITHOUT_CLASSIFICATION	4.131655196558735E-7	IMPLEMENTATION
// the converters handle not only primitive types but also their boxed versions, so we should check // if we have a converter before checking for isPrimitive()	WITHOUT_CLASSIFICATION	0.9999993934128801	WITHOUT_CLASSIFICATION	6.06587119868186E-7	IMPLEMENTATION
// it's not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999984540547671	WITHOUT_CLASSIFICATION	1.5459452328462681E-6	IMPLEMENTATION
// we've found a Java type to which we've coerced the Ruby value, wrap it	WITHOUT_CLASSIFICATION	0.9999998587946104	WITHOUT_CLASSIFICATION	1.4120538955570616E-7	IMPLEMENTATION
// set of utility methods for Java-based proxy objects	WITHOUT_CLASSIFICATION	0.9999999860723318	WITHOUT_CLASSIFICATION	1.3927668275571675E-8	IMPLEMENTATION
// the proxy (wrapper) type hierarchy	WITHOUT_CLASSIFICATION	0.9999749765349927	WITHOUT_CLASSIFICATION	2.5023465007365313E-5	IMPLEMENTATION
//InterfaceJavaProxy.createInterfaceJavaProxy(context);	WITHOUT_CLASSIFICATION	0.9999802963892015	WITHOUT_CLASSIFICATION	1.970361079847126E-5	IMPLEMENTATION
// also create the JavaProxy* classes	WITHOUT_CLASSIFICATION	0.9999999483441869	WITHOUT_CLASSIFICATION	5.165581307202786E-8	IMPLEMENTATION
// The template for interface modules	WITHOUT_CLASSIFICATION	0.9999999907395074	WITHOUT_CLASSIFICATION	9.260492608954455E-9	IMPLEMENTATION
// Now attach Java-related extras to core classes	WITHOUT_CLASSIFICATION	0.9999995060832432	WITHOUT_CLASSIFICATION	4.939167568013842E-7	IMPLEMENTATION
// add all name-to-class mappings	WITHOUT_CLASSIFICATION	0.999999455328465	WITHOUT_CLASSIFICATION	5.446715350210294E-7	IMPLEMENTATION
// add some base Java classes everyone will need	WITHOUT_CLASSIFICATION	0.9999644247175156	WITHOUT_CLASSIFICATION	3.5575282484469346E-5	IMPLEMENTATION
// finally, set JavaSupport.isEnabled to true	WITHOUT_CLASSIFICATION	0.9999992794491692	WITHOUT_CLASSIFICATION	7.205508307636902E-7	IMPLEMENTATION
// shouldn't happen, but if a superclass is specified, it's not ours	WITHOUT_CLASSIFICATION	0.9999995973671036	WITHOUT_CLASSIFICATION	4.026328963467681E-7	IMPLEMENTATION
// include any interfaces we extend	WITHOUT_CLASSIFICATION	0.9999997852019713	WITHOUT_CLASSIFICATION	2.14798028814443E-7	IMPLEMENTATION
// java.lang.Object is added at root of java proxy classes	WITHOUT_CLASSIFICATION	0.9999998637234451	WITHOUT_CLASSIFICATION	1.362765548331962E-7	IMPLEMENTATION
// other java proxy classes added under their superclass' java proxy	WITHOUT_CLASSIFICATION	0.9999998312432141	WITHOUT_CLASSIFICATION	1.6875678586463535E-7	IMPLEMENTATION
// include interface modules into the proxy class	WITHOUT_CLASSIFICATION	0.9999999980055372	WITHOUT_CLASSIFICATION	1.994462709064639E-9	IMPLEMENTATION
// JRUBY-2938 the proxy class might already exist	WITHOUT_CLASSIFICATION	0.999992193939974	WITHOUT_CLASSIFICATION	7.8060600260206E-6	IMPLEMENTATION
// add java_method for unbound use	WITHOUT_CLASSIFICATION	0.9999996712504449	WITHOUT_CLASSIFICATION	3.287495551594508E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999985958339545	WITHOUT_CLASSIFICATION	1.4041660455015953E-6	IMPLEMENTATION
// we'll only map conventional class names to modules 	WITHOUT_CLASSIFICATION	0.999999785835531	WITHOUT_CLASSIFICATION	2.141644690905888E-7	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999966841553454	WITHOUT_CLASSIFICATION	3.315844654689362E-6	IMPLEMENTATION
// Haven't found a class, continue on as though it were a package	WITHOUT_CLASSIFICATION	0.9999999930979481	WITHOUT_CLASSIFICATION	6.902051939495005E-9	IMPLEMENTATION
// upper case name, so most likely a class	WITHOUT_CLASSIFICATION	0.9999997761737829	WITHOUT_CLASSIFICATION	2.2382621711376608E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998409407066	WITHOUT_CLASSIFICATION	1.59059293393253E-7	IMPLEMENTATION
// add alias to meta	WITHOUT_CLASSIFICATION	0.9999985958339545	WITHOUT_CLASSIFICATION	1.4041660455015953E-6	IMPLEMENTATION
// this is where we'll get connected when classes are opened using // package module syntax.	WITHOUT_CLASSIFICATION	0.9999999995575056	WITHOUT_CLASSIFICATION	4.4249439666929284E-10	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999564077475	WITHOUT_CLASSIFICATION	4.359225253469235E-8	IMPLEMENTATION
// this covers primitives and (unlikely) lower-case class names	WITHOUT_CLASSIFICATION	0.999999949509511	WITHOUT_CLASSIFICATION	5.049048897112727E-8	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997265052994	WITHOUT_CLASSIFICATION	2.7349470055887964E-7	IMPLEMENTATION
/* not primitive or lc class */	WITHOUT_CLASSIFICATION	0.9999997265052994	WITHOUT_CLASSIFICATION	2.7349470055887964E-7	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was supplied	WITHOUT_CLASSIFICATION	0.9999595652591668	WITHOUT_CLASSIFICATION	4.0434740833122536E-5	IMPLEMENTATION
// Create list of interfaces to proxy (and make sure they really are interfaces)	WITHOUT_CLASSIFICATION	0.9999998801384692	WITHOUT_CLASSIFICATION	1.1986153085171488E-7	IMPLEMENTATION
// hashcode is a combination of the interfaces and the Ruby class we're using // to implement them	WITHOUT_CLASSIFICATION	0.9999999752302471	WITHOUT_CLASSIFICATION	2.476975283681927E-8	IMPLEMENTATION
// if it's a singleton class and the real class is proc, we're doing closure conversion // so just use Proc's hashcode	WITHOUT_CLASSIFICATION	0.9999999936574582	WITHOUT_CLASSIFICATION	6.34254184604153E-9	IMPLEMENTATION
// normal new class implementing interfaces	WITHOUT_CLASSIFICATION	0.9997343460846269	WITHOUT_CLASSIFICATION	2.656539153732429E-4	IMPLEMENTATION
/*         * Initialize some components.         */	WITHOUT_CLASSIFICATION	0.9999998132025516	WITHOUT_CLASSIFICATION	1.867974484771305E-7	IMPLEMENTATION
// not synchronizing these methods, no harm if these values get set more // than once. // (also note that there's no chance of getting a partially initialized // class/module, as happens-before is guaranteed by volatile write/read // of constants table.)	WITHOUT_CLASSIFICATION	0.9999999999442788	WITHOUT_CLASSIFICATION	5.572116471202889E-11	IMPLEMENTATION
// Java reflection does not allow retrieving constructors like methods	WITHOUT_CLASSIFICATION	0.999978311445791	WITHOUT_CLASSIFICATION	2.1688554209049146E-5	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999958458466	WITHOUT_CLASSIFICATION	4.15415339793603E-8	IMPLEMENTATION
// for zero args case we can stop searching	WITHOUT_CLASSIFICATION	0.999999958458466	WITHOUT_CLASSIFICATION	4.15415339793603E-8	IMPLEMENTATION
// no matching ctor found	WITHOUT_CLASSIFICATION	0.9999996120431123	WITHOUT_CLASSIFICATION	3.87956887637586E-7	IMPLEMENTATION
// Create Ruby proxies for any input arguments that are not primitives.	WITHOUT_CLASSIFICATION	0.9999996556202907	WITHOUT_CLASSIFICATION	3.443797093342881E-7	IMPLEMENTATION
// prepare a faster handle if handles are enabled and the method and class are public	WITHOUT_CLASSIFICATION	0.9999999985986029	WITHOUT_CLASSIFICATION	1.4013970738735473E-9	IMPLEMENTATION
// must be a public method	WITHOUT_CLASSIFICATION	0.9999999883775278	WITHOUT_CLASSIFICATION	1.1622472254840458E-8	IMPLEMENTATION
// must be a public class	WITHOUT_CLASSIFICATION	0.9999999995766632	WITHOUT_CLASSIFICATION	4.2333677335230995E-10	IMPLEMENTATION
// must have been loaded from our known classloader hierarchy	WITHOUT_CLASSIFICATION	0.9999999451674207	WITHOUT_CLASSIFICATION	5.4832579298448254E-8	IMPLEMENTATION
// Special classes like Collections.EMPTY_LIST are inner classes that are private but  // implement public interfaces.  Their methods are all public methods for the public  // interface.  Let these public methods execute via setAccessible(true). 	WITHOUT_CLASSIFICATION	0.9999996029012261	WITHOUT_CLASSIFICATION	3.970987739246071E-7	IMPLEMENTATION
// search through all declared methods to find a closest match	WITHOUT_CLASSIFICATION	0.9999999689441318	WITHOUT_CLASSIFICATION	3.1055868207452975E-8	IMPLEMENTATION
// no matching method found	WITHOUT_CLASSIFICATION	0.9999998203012347	WITHOUT_CLASSIFICATION	1.7969876536046733E-7	IMPLEMENTATION
// this test really means, that this is a ruby-defined subclass of a java class	WITHOUT_CLASSIFICATION	0.9999999973661636	WITHOUT_CLASSIFICATION	2.633836371589097E-9	IMPLEMENTATION
/*         * First we need to register the JRuby engine.         */	WITHOUT_CLASSIFICATION	0.9999573373188794	WITHOUT_CLASSIFICATION	4.266268112063483E-5	IMPLEMENTATION
/*         * Now we create a new BSFManager.         */	WITHOUT_CLASSIFICATION	0.999999869613069	WITHOUT_CLASSIFICATION	1.3038693108735994E-7	IMPLEMENTATION
/*         * Initialize a simple Frame.          */	WITHOUT_CLASSIFICATION	0.9999971101694768	WITHOUT_CLASSIFICATION	2.8898305232450175E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999978592503576	WITHOUT_CLASSIFICATION	2.1407496424020768E-6	IMPLEMENTATION
//e.printStackTrace();	WITHOUT_CLASSIFICATION	0.9999978592503576	WITHOUT_CLASSIFICATION	2.1407496424020768E-6	IMPLEMENTATION
// JRUBY-530, while case	WITHOUT_CLASSIFICATION	0.9999998674139444	WITHOUT_CLASSIFICATION	1.325860555992775E-7	IMPLEMENTATION
// end class	WITHOUT_CLASSIFICATION	0.999999902478433	WITHOUT_CLASSIFICATION	9.75215670142461E-8	IMPLEMENTATION
// // this test really means, that this is a ruby-defined subclass of a java class //	WITHOUT_CLASSIFICATION	0.9999999995677631	WITHOUT_CLASSIFICATION	4.322368916789302E-10	IMPLEMENTATION
// for our purposes, Accessibles are also Members, and vice-versa, // so we'll include Member methods here.	WITHOUT_CLASSIFICATION	0.9999993293669444	WITHOUT_CLASSIFICATION	6.706330556601062E-7	IMPLEMENTATION
/*             * Declare those components as beans in BSF. Then it will be             * possible to access those components in Ruby as global             * variables ($frame, $menubar, ...)             */	WITHOUT_CLASSIFICATION	0.9999999998532554	WITHOUT_CLASSIFICATION	1.467446569264953E-10	IMPLEMENTATION
/*              * Execute a Ruby script (add the menubar to the frame).             */	WITHOUT_CLASSIFICATION	0.9999999902285773	WITHOUT_CLASSIFICATION	9.771422640033586E-9	IMPLEMENTATION
/*                     * Execute Ruby statements.                     */	WITHOUT_CLASSIFICATION	0.999999997709952	WITHOUT_CLASSIFICATION	2.2900481768303755E-9	IMPLEMENTATION
/*                     * Evaluates a Ruby expression and display the result.                     */	WITHOUT_CLASSIFICATION	0.9999986874726529	WITHOUT_CLASSIFICATION	1.312527347194854E-6	IMPLEMENTATION
// Populate values for the parameter names	WITHOUT_CLASSIFICATION	0.9999995284938695	WITHOUT_CLASSIFICATION	4.7150613044390393E-7	IMPLEMENTATION
/* package scope */	WITHOUT_CLASSIFICATION	0.9999998312788744	WITHOUT_CLASSIFICATION	1.6872112556084248E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler // installed.	WITHOUT_CLASSIFICATION	0.9999999169727661	WITHOUT_CLASSIFICATION	8.3027233971421E-8	IMPLEMENTATION
// // Ruby-level methods //	WITHOUT_CLASSIFICATION	0.9999999259446658	WITHOUT_CLASSIFICATION	7.405533420684427E-8	IMPLEMENTATION
// need names ordered for key generation later	WITHOUT_CLASSIFICATION	0.9999271006242586	WITHOUT_CLASSIFICATION	7.289937574136231E-5	IMPLEMENTATION
// we only collect methods and interfaces for  // user-defined proxy classes.	WITHOUT_CLASSIFICATION	0.9999999989464743	WITHOUT_CLASSIFICATION	1.0535256448805918E-9	IMPLEMENTATION
// get JavaClass if this is the new proxy class; verify it // matches if this is a superclass proxy.	WITHOUT_CLASSIFICATION	0.9999999993772951	WITHOUT_CLASSIFICATION	6.227049017862697E-10	IMPLEMENTATION
// get any included interfaces	WITHOUT_CLASSIFICATION	0.9999999987888684	WITHOUT_CLASSIFICATION	1.2111317098518423E-9	IMPLEMENTATION
// lock in the overridden methods for the new class, and any as-yet // uninstantiated ancestor class.	WITHOUT_CLASSIFICATION	0.9999999976276296	WITHOUT_CLASSIFICATION	2.3723703667194145E-9	IMPLEMENTATION
// statically initialized below	WITHOUT_CLASSIFICATION	0.9999996078998471	WITHOUT_CLASSIFICATION	3.921001528658648E-7	IMPLEMENTATION
// finish class initializer	WITHOUT_CLASSIFICATION	0.9999999457104618	WITHOUT_CLASSIFICATION	5.428953815088564E-8	IMPLEMENTATION
// trigger class initialization for the class	WITHOUT_CLASSIFICATION	0.9999999767830884	WITHOUT_CLASSIFICATION	2.3216911663430122E-8	IMPLEMENTATION
// should not happen!	WITHOUT_CLASSIFICATION	0.9999898758183059	WITHOUT_CLASSIFICATION	1.0124181694136392E-5	IMPLEMENTATION
// start class	WITHOUT_CLASSIFICATION	0.9999999904211233	WITHOUT_CLASSIFICATION	9.578876830818862E-9	IMPLEMENTATION
// make getter for handler	WITHOUT_CLASSIFICATION	0.9999984707103177	WITHOUT_CLASSIFICATION	1.5292896823380049E-6	IMPLEMENTATION
// make getter for proxy class	WITHOUT_CLASSIFICATION	0.99999993405434	WITHOUT_CLASSIFICATION	6.594566006096153E-8	IMPLEMENTATION
// add (potentially) overridden names to the key. // TODO: see note above re: optimizations	WITHOUT_CLASSIFICATION	0.9894758088239766	WITHOUT_CLASSIFICATION	0.010524191176023455	IMPLEMENTATION
// We generate all constructors and let some fail during invocation later	WITHOUT_CLASSIFICATION	0.9999997895788111	WITHOUT_CLASSIFICATION	2.1042118894987592E-7	IMPLEMENTATION
// create static private method field	WITHOUT_CLASSIFICATION	0.9999992242965022	WITHOUT_CLASSIFICATION	7.757034977992238E-7	IMPLEMENTATION
// load static empty array	WITHOUT_CLASSIFICATION	0.9999987240824405	WITHOUT_CLASSIFICATION	1.2759175595838551E-6	IMPLEMENTATION
// box arguments	WITHOUT_CLASSIFICATION	0.999999993003517	WITHOUT_CLASSIFICATION	6.996482959987397E-9	IMPLEMENTATION
// this is a simple rethrow handler	WITHOUT_CLASSIFICATION	0.9997252671841287	WITHOUT_CLASSIFICATION	2.747328158713994E-4	IMPLEMENTATION
// // construct the super-proxy method //	WITHOUT_CLASSIFICATION	0.9999997580870345	WITHOUT_CLASSIFICATION	2.4191296552272376E-7	IMPLEMENTATION
// do a void return	WITHOUT_CLASSIFICATION	0.9999970962662045	WITHOUT_CLASSIFICATION	2.9037337954583767E-6	IMPLEMENTATION
// // utility methods //	WITHOUT_CLASSIFICATION	0.9999999120061117	WITHOUT_CLASSIFICATION	8.799388835030702E-8	IMPLEMENTATION
// Is there a supplied proc argument or do we assume a block was // supplied	WITHOUT_CLASSIFICATION	0.999980209265033	WITHOUT_CLASSIFICATION	1.9790734966977017E-5	IMPLEMENTATION
// store call information so method_missing impl can use it	WITHOUT_CLASSIFICATION	0.99999048600118	WITHOUT_CLASSIFICATION	9.513998820018407E-6	IMPLEMENTATION
// use the same logic as in EvaluationState	WITHOUT_CLASSIFICATION	0.9999999938570632	WITHOUT_CLASSIFICATION	6.142936844970049E-9	IMPLEMENTATION
// no opt, no rest, exact match	WITHOUT_CLASSIFICATION	0.9999977881860876	WITHOUT_CLASSIFICATION	2.2118139123729056E-6	IMPLEMENTATION
// only rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999988299796879	WITHOUT_CLASSIFICATION	1.1700203120557644E-6	IMPLEMENTATION
// opt but no rest, must be at least required and no more than required + opt	WITHOUT_CLASSIFICATION	0.9999997730395916	WITHOUT_CLASSIFICATION	2.2696040836376374E-7	IMPLEMENTATION
// opt and rest, must be at least required	WITHOUT_CLASSIFICATION	0.9999989502689374	WITHOUT_CLASSIFICATION	1.0497310626685065E-6	IMPLEMENTATION
// No block from a nil proc	WITHOUT_CLASSIFICATION	0.9999998310577307	WITHOUT_CLASSIFICATION	1.6894226924264244E-7	IMPLEMENTATION
// If not already a proc then we should try and make it one.	WITHOUT_CLASSIFICATION	0.9951671248906413	WITHOUT_CLASSIFICATION	0.0048328751093587065	IMPLEMENTATION
// The current block is already associated with proc.  No need to create a new one	WITHOUT_CLASSIFICATION	0.9997753701563544	WITHOUT_CLASSIFICATION	2.2462984364555685E-4	IMPLEMENTATION
// Has the method that is calling super received a block argument	WITHOUT_CLASSIFICATION	0.9999999219989418	WITHOUT_CLASSIFICATION	7.800105812331027E-8	IMPLEMENTATION
/* NUL */	WITHOUT_CLASSIFICATION	0.999999591963942	WITHOUT_CLASSIFICATION	4.0803605806420816E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999973263816446	WITHOUT_CLASSIFICATION	2.673618355408506E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999545294214	WITHOUT_CLASSIFICATION	4.547057869609477E-8	IMPLEMENTATION
// 'class << state.self' and 'class << obj' uses defn as opposed to defs	WITHOUT_CLASSIFICATION	0.9999999996777597	WITHOUT_CLASSIFICATION	3.222402971051488E-10	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999599568723123	WITHOUT_CLASSIFICATION	4.004312768766816E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999553579337137	WITHOUT_CLASSIFICATION	4.464206628623068E-5	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999553579337137	WITHOUT_CLASSIFICATION	4.464206628623068E-5	IMPLEMENTATION
// classes are directly in the hierarchy, so no special logic is necessary for implementer	WITHOUT_CLASSIFICATION	0.9999995887634148	WITHOUT_CLASSIFICATION	4.112365851733749E-7	IMPLEMENTATION
// must be power of 2 // must be power of 2	WITHOUT_CLASSIFICATION	0.9999999460852167	WITHOUT_CLASSIFICATION	5.3914783366947786E-8	IMPLEMENTATION
// Find power-of-two sizes best matching arguments	WITHOUT_CLASSIFICATION	0.9999999792122933	WITHOUT_CLASSIFICATION	2.078770672858854E-8	IMPLEMENTATION
// note segmentShift differs from ConcurrentHashMap's calculation due to // issues with System.identityHashCode (upper n bits always 0, at least  // under Java 1.6 / WinXP)	WITHOUT_CLASSIFICATION	0.9999998890299863	WITHOUT_CLASSIFICATION	1.1097001374804107E-7	IMPLEMENTATION
//      System.err.println("***ObjectProxyCache " + id + " started at "+ new java.util.Date());	WITHOUT_CLASSIFICATION	0.9999997450341308	WITHOUT_CLASSIFICATION	2.5496586925778146E-7	IMPLEMENTATION
//    protected void finalize() throws Throwable { //        System.err.println("***ObjectProxyCache " + id + " finalized at "+ new java.util.Date()); //    }	WITHOUT_CLASSIFICATION	0.9999956472062751	WITHOUT_CLASSIFICATION	4.3527937249034985E-6	IMPLEMENTATION
// EntryRefs include hash with key to facilitate lookup by Segment#expunge // after ref is removed from ReferenceQueue	WITHOUT_CLASSIFICATION	0.9999999905592335	WITHOUT_CLASSIFICATION	9.440766455804183E-9	IMPLEMENTATION
// Unlike WeakHashMap, our Entry does not subclass WeakReference, but rather // makes it a final field.  The theory is that doing so should force a happens-before // relationship WRT the WeakReference constructor, guaranteeing that the key will be // visibile to other threads (unless it's been GC'ed).  See JLS 17.5 (final fields) and // 17.4.5 (Happens-before order) to confirm or refute my reasoning here.	WITHOUT_CLASSIFICATION	0.9999993630364546	WITHOUT_CLASSIFICATION	6.369635453080655E-7	IMPLEMENTATION
// references to the Java object and its proxy will either both be // weak or both be soft, since the proxy contains a strong reference // to the object, so it wouldn't make sense for the reference types // to differ.	WITHOUT_CLASSIFICATION	0.9999989455142537	WITHOUT_CLASSIFICATION	1.054485746319227E-6	IMPLEMENTATION
// ctor used by remove/rehash	WITHOUT_CLASSIFICATION	0.9999996922959423	WITHOUT_CLASSIFICATION	3.0770405769504615E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997043466323	WITHOUT_CLASSIFICATION	2.956533676359755E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997043466323	WITHOUT_CLASSIFICATION	2.956533676359755E-7	IMPLEMENTATION
// must be called under lock	WITHOUT_CLASSIFICATION	0.9999997043466323	WITHOUT_CLASSIFICATION	2.956533676359755E-7	IMPLEMENTATION
// note that we'll potentially see the refs for both the java object and // proxy -- whichever we see first will cause the entry to be removed; // the other will not match an entry and will be ignored.	WITHOUT_CLASSIFICATION	0.9858541233801006	WITHOUT_CLASSIFICATION	0.014145876619899536	IMPLEMENTATION
// temp method to verify tableSize value // must be called under lock	WITHOUT_CLASSIFICATION	0.9999993898021681	WITHOUT_CLASSIFICATION	6.101978319565177E-7	IMPLEMENTATION
// Single node in list	WITHOUT_CLASSIFICATION	0.999999899990196	WITHOUT_CLASSIFICATION	1.0000980401835299E-7	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999982333428127	WITHOUT_CLASSIFICATION	1.766657187365201E-6	IMPLEMENTATION
// indirect read-/write- volatile	WITHOUT_CLASSIFICATION	0.9999982333428127	WITHOUT_CLASSIFICATION	1.766657187365201E-6	IMPLEMENTATION
// entry exists, proxy has been gc'ed. replace entry.	WITHOUT_CLASSIFICATION	0.9999988133888247	WITHOUT_CLASSIFICATION	1.1866111753120749E-6	IMPLEMENTATION
// Where we get new positions from.	WITHOUT_CLASSIFICATION	0.9999846661038123	WITHOUT_CLASSIFICATION	1.5333896187681557E-5	IMPLEMENTATION
// Start of string ([, (, {, <, ', ", \n) 	WITHOUT_CLASSIFICATION	0.9999999968993856	WITHOUT_CLASSIFICATION	3.1006144065793407E-9	IMPLEMENTATION
// Number of newlines read from the reader	WITHOUT_CLASSIFICATION	0.9999999522933954	WITHOUT_CLASSIFICATION	4.770660444905329E-8	IMPLEMENTATION
// How many bytes into the source are we?	WITHOUT_CLASSIFICATION	0.9999999759718723	WITHOUT_CLASSIFICATION	2.402812774031433E-8	IMPLEMENTATION
// For 'list' and only populated if list is not null.	WITHOUT_CLASSIFICATION	0.9999378919674837	WITHOUT_CLASSIFICATION	6.210803251634142E-5	IMPLEMENTATION
// Last full line read.	WITHOUT_CLASSIFICATION	0.9999999823914578	WITHOUT_CLASSIFICATION	1.760854209919803E-8	IMPLEMENTATION
// Save sourceLine for error reporting to display line where error occurred	WITHOUT_CLASSIFICATION	0.9999933154412377	WITHOUT_CLASSIFICATION	6.684558762236662E-6	IMPLEMENTATION
// Get rest of line. lineBuffer filled as side-effect...	WITHOUT_CLASSIFICATION	0.9999999828448634	WITHOUT_CLASSIFICATION	1.7155136654404176E-8	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999866899335356	WITHOUT_CLASSIFICATION	1.3310066464516534E-5	IMPLEMENTATION
// Expand variables, Indentation of final marker	WITHOUT_CLASSIFICATION	0.9999866899335356	WITHOUT_CLASSIFICATION	1.3310066464516534E-5	IMPLEMENTATION
// End of string (], ), }, >, ', ", \0)	WITHOUT_CLASSIFICATION	0.9999997130870053	WITHOUT_CLASSIFICATION	2.869129946187046E-7	IMPLEMENTATION
// How many strings are nested in the current string term	WITHOUT_CLASSIFICATION	0.9999998988190553	WITHOUT_CLASSIFICATION	1.01180944650628E-7	IMPLEMENTATION
// Single-quote fast path	WITHOUT_CLASSIFICATION	0.999999839364938	WITHOUT_CLASSIFICATION	1.606350621203675E-7	IMPLEMENTATION
// Regexp engine 'java'	WITHOUT_CLASSIFICATION	0.9999971107258628	WITHOUT_CLASSIFICATION	2.88927413712398E-6	IMPLEMENTATION
// Was a goto in original ruby lexer	WITHOUT_CLASSIFICATION	0.999999822543236	WITHOUT_CLASSIFICATION	1.7745676397971315E-7	IMPLEMENTATION
/* just ignore */	WITHOUT_CLASSIFICATION	0.9999954581679362	WITHOUT_CLASSIFICATION	4.5418320638268035E-6	IMPLEMENTATION
/* octal constant */	WITHOUT_CLASSIFICATION	0.9999954180362861	WITHOUT_CLASSIFICATION	4.581963713925456E-6	IMPLEMENTATION
/* hex constant */	WITHOUT_CLASSIFICATION	0.9999874590920409	WITHOUT_CLASSIFICATION	1.2540907959043811E-5	IMPLEMENTATION
// PUSH(1)	WITHOUT_CLASSIFICATION	0.9999974014795765	WITHOUT_CLASSIFICATION	2.5985204234148008E-6	IMPLEMENTATION
// POP	WITHOUT_CLASSIFICATION	0.9999979724085254	WITHOUT_CLASSIFICATION	2.0275914745396816E-6	IMPLEMENTATION
// PUSH(0).  If you look at original macro: stack |= (n&1) => stack |= 0 => no-change.	WITHOUT_CLASSIFICATION	0.999999962752961	WITHOUT_CLASSIFICATION	3.724703894518555E-8	IMPLEMENTATION
// LEXPOP	WITHOUT_CLASSIFICATION	0.9999996866388436	WITHOUT_CLASSIFICATION	3.133611564287294E-7	IMPLEMENTATION
// SET_P	WITHOUT_CLASSIFICATION	0.999999801429039	WITHOUT_CLASSIFICATION	1.985709610364311E-7	IMPLEMENTATION
// Marker delimiting heredoc boundary	WITHOUT_CLASSIFICATION	0.9999999592423705	WITHOUT_CLASSIFICATION	4.0757629561751395E-8	IMPLEMENTATION
// Found end marker for this heredoc	WITHOUT_CLASSIFICATION	0.9999277196967213	WITHOUT_CLASSIFICATION	7.228030327864378E-5	IMPLEMENTATION
// Put back lastLine for any elements past start of heredoc marker	WITHOUT_CLASSIFICATION	0.999999983455215	WITHOUT_CLASSIFICATION	1.6544785028100908E-8	IMPLEMENTATION
// Last token read via yylex().	WITHOUT_CLASSIFICATION	0.9999942136141113	WITHOUT_CLASSIFICATION	5.786385888672403E-6	IMPLEMENTATION
// Value of last token which had a value associated with it.	WITHOUT_CLASSIFICATION	0.9999997804404341	WITHOUT_CLASSIFICATION	2.1955956596200817E-7	IMPLEMENTATION
// Stream of data that yylex() examines.	WITHOUT_CLASSIFICATION	0.9999931372838875	WITHOUT_CLASSIFICATION	6.862716112474051E-6	IMPLEMENTATION
// Used for tiny smidgen of grammar in lexer (see setParserSupport())	WITHOUT_CLASSIFICATION	0.9999993453854226	WITHOUT_CLASSIFICATION	6.546145773528852E-7	IMPLEMENTATION
// Give a name to a value.  Enebo: This should be used more.	WITHOUT_CLASSIFICATION	0.999991236170764	WITHOUT_CLASSIFICATION	8.763829235918264E-6	IMPLEMENTATION
// When the heredoc identifier specifies <<-EOF that indents before ident. are ok (the '-').	WITHOUT_CLASSIFICATION	0.999993673862263	WITHOUT_CLASSIFICATION	6.3261377370799365E-6	IMPLEMENTATION
// Are we lexing Ruby 1.8 or 1.9+ syntax	WITHOUT_CLASSIFICATION	0.9999980089252242	WITHOUT_CLASSIFICATION	1.991074775868088E-6	IMPLEMENTATION
// Count of nested parentheses (1.9 only)	WITHOUT_CLASSIFICATION	0.9999777390868856	WITHOUT_CLASSIFICATION	2.2260913114418072E-5	IMPLEMENTATION
// 1.9 only	WITHOUT_CLASSIFICATION	0.9999943061084828	WITHOUT_CLASSIFICATION	5.693891517243719E-6	IMPLEMENTATION
// Short-hand (e.g. %{,%.,%!,... versus %Q{).	WITHOUT_CLASSIFICATION	0.9999952963711355	WITHOUT_CLASSIFICATION	4.703628864457761E-6	IMPLEMENTATION
// Long-hand (e.g. %Q{}).	WITHOUT_CLASSIFICATION	0.9999997537993565	WITHOUT_CLASSIFICATION	2.4620064349017635E-7	IMPLEMENTATION
/* no mb || ismbchar(term)*/	WITHOUT_CLASSIFICATION	0.9999991660406358	WITHOUT_CLASSIFICATION	8.339593641802515E-7	IMPLEMENTATION
/*     * Not normally used, but is left in here since it can be useful in debugging     * grammar and lexing problems.     *     */	WITHOUT_CLASSIFICATION	0.9999999815734553	WITHOUT_CLASSIFICATION	1.842654471964792E-8	IMPLEMENTATION
// DEBUGGING HELP 	WITHOUT_CLASSIFICATION	0.9999973841967504	WITHOUT_CLASSIFICATION	2.6158032494882724E-6	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999986454542573	WITHOUT_CLASSIFICATION	1.3545457427027E-6	IMPLEMENTATION
/* end of script. */	WITHOUT_CLASSIFICATION	0.999966082751041	WITHOUT_CLASSIFICATION	3.391724895889003E-5	IMPLEMENTATION
/* white spaces */	WITHOUT_CLASSIFICATION	0.9999996925674629	WITHOUT_CLASSIFICATION	3.074325370752266E-7	IMPLEMENTATION
/* '\v' */	WITHOUT_CLASSIFICATION	0.9999986454542573	WITHOUT_CLASSIFICATION	1.3545457427027E-6	IMPLEMENTATION
/* it's a comment */	WITHOUT_CLASSIFICATION	0.9999984611980625	WITHOUT_CLASSIFICATION	1.5388019376540584E-6	IMPLEMENTATION
// Replace a string of newlines with a single one	WITHOUT_CLASSIFICATION	0.9999995833500926	WITHOUT_CLASSIFICATION	4.166499074182648E-7	IMPLEMENTATION
/* $\: output record separator */	WITHOUT_CLASSIFICATION	0.999998349348666	WITHOUT_CLASSIFICATION	1.6506513338820147E-6	IMPLEMENTATION
// EOF (ENEBO: After default?	WITHOUT_CLASSIFICATION	0.9999978509746135	WITHOUT_CLASSIFICATION	2.149025386568676E-6	IMPLEMENTATION
// documentation nodes	WITHOUT_CLASSIFICATION	0.9999994948500233	WITHOUT_CLASSIFICATION	5.051499767569486E-7	IMPLEMENTATION
// In case last next was the newline.	WITHOUT_CLASSIFICATION	0.9999994607731066	WITHOUT_CLASSIFICATION	5.392268934284734E-7	IMPLEMENTATION
// Just a plain bang	WITHOUT_CLASSIFICATION	0.9999998882967057	WITHOUT_CLASSIFICATION	1.1170329428934086E-7	IMPLEMENTATION
/* $_: last read line string */	WITHOUT_CLASSIFICATION	0.9999996899599577	WITHOUT_CLASSIFICATION	3.100400423130029E-7	IMPLEMENTATION
/* $~: match-data */	WITHOUT_CLASSIFICATION	0.9999983961090324	WITHOUT_CLASSIFICATION	1.603890967631204E-6	IMPLEMENTATION
/* $*: argv */	WITHOUT_CLASSIFICATION	0.9999960816029145	WITHOUT_CLASSIFICATION	3.918397085539675E-6	IMPLEMENTATION
/* $$: pid */	WITHOUT_CLASSIFICATION	0.9999836298920983	WITHOUT_CLASSIFICATION	1.6370107901642998E-5	IMPLEMENTATION
/* $?: last status */	WITHOUT_CLASSIFICATION	0.9999995831762432	WITHOUT_CLASSIFICATION	4.1682375686457046E-7	IMPLEMENTATION
/* $!: error string */	WITHOUT_CLASSIFICATION	0.9999886954523287	WITHOUT_CLASSIFICATION	1.1304547671207668E-5	IMPLEMENTATION
/* $@: error position */	WITHOUT_CLASSIFICATION	0.9998976622629117	WITHOUT_CLASSIFICATION	1.0233773708837389E-4	IMPLEMENTATION
/* $/: input record separator */	WITHOUT_CLASSIFICATION	0.9999986105861027	WITHOUT_CLASSIFICATION	1.3894138972985633E-6	IMPLEMENTATION
/* $;: field separator */	WITHOUT_CLASSIFICATION	0.999997834403914	WITHOUT_CLASSIFICATION	2.165596086082671E-6	IMPLEMENTATION
/* $,: output field separator */	WITHOUT_CLASSIFICATION	0.9999974588621175	WITHOUT_CLASSIFICATION	2.541137882522988E-6	IMPLEMENTATION
/* $.: last read line number */	WITHOUT_CLASSIFICATION	0.999998847542299	WITHOUT_CLASSIFICATION	1.1524577010626325E-6	IMPLEMENTATION
/* $=: ignorecase */	WITHOUT_CLASSIFICATION	0.9999992300616747	WITHOUT_CLASSIFICATION	7.699383254034499E-7	IMPLEMENTATION
/* $:: load path */	WITHOUT_CLASSIFICATION	0.9999622336255224	WITHOUT_CLASSIFICATION	3.776637447752025E-5	IMPLEMENTATION
/* $<: reading filename */	WITHOUT_CLASSIFICATION	0.9999999708003253	WITHOUT_CLASSIFICATION	2.9199674701856508E-8	IMPLEMENTATION
/* $": already loaded files */	WITHOUT_CLASSIFICATION	0.9999994596562751	WITHOUT_CLASSIFICATION	5.403437248563066E-7	IMPLEMENTATION
/* $&: last match */	WITHOUT_CLASSIFICATION	0.9999997166468936	WITHOUT_CLASSIFICATION	2.8335310640467184E-7	IMPLEMENTATION
/* $`: string before last match */	WITHOUT_CLASSIFICATION	0.999999985233497	WITHOUT_CLASSIFICATION	1.4766502965446505E-8	IMPLEMENTATION
/* $': string after last match */	WITHOUT_CLASSIFICATION	0.9999998761099245	WITHOUT_CLASSIFICATION	1.2389007544860934E-7	IMPLEMENTATION
// methods 'foo!' and 'foo?' are possible but if followed by '=' it is relop	WITHOUT_CLASSIFICATION	0.9999999950534739	WITHOUT_CLASSIFICATION	4.946526076234853E-9	IMPLEMENTATION
/* See if it is a reserved word.  */	WITHOUT_CLASSIFICATION	0.9999986943292185	WITHOUT_CLASSIFICATION	1.305670781502847E-6	IMPLEMENTATION
// enum lex_state	WITHOUT_CLASSIFICATION	0.9999996709191011	WITHOUT_CLASSIFICATION	3.290808988499433E-7	IMPLEMENTATION
// block (primary)	WITHOUT_CLASSIFICATION	0.9999983056247406	WITHOUT_CLASSIFICATION	1.6943752593566246E-6	IMPLEMENTATION
// block (expr)	WITHOUT_CLASSIFICATION	0.9999868403451975	WITHOUT_CLASSIFICATION	1.315965480257196E-5	IMPLEMENTATION
// hash	WITHOUT_CLASSIFICATION	0.9999997256298524	WITHOUT_CLASSIFICATION	2.743701475067313E-7	IMPLEMENTATION
// ENEBO: 1.9 is IS_ARG, but we need to break apart for 1.8 support.	WITHOUT_CLASSIFICATION	0.9959221424876696	WITHOUT_CLASSIFICATION	0.004077857512330304	IMPLEMENTATION
// FIXME: peek('u') utf8 stuff for 1.9	WITHOUT_CLASSIFICATION	0.9978843929328898	WITHOUT_CLASSIFICATION	0.002115607067110173	IMPLEMENTATION
// We don't append '+' since Java number parser gets confused	WITHOUT_CLASSIFICATION	0.9999999877717941	WITHOUT_CLASSIFICATION	1.2228205966001298E-8	IMPLEMENTATION
//  hexadecimal	WITHOUT_CLASSIFICATION	0.9999731544329447	WITHOUT_CLASSIFICATION	2.6845567055408327E-5	IMPLEMENTATION
// binary	WITHOUT_CLASSIFICATION	0.9999999723806078	WITHOUT_CLASSIFICATION	2.7619392261630494E-8	IMPLEMENTATION
// decimal	WITHOUT_CLASSIFICATION	0.9999996766150981	WITHOUT_CLASSIFICATION	3.233849018227996E-7	IMPLEMENTATION
//Octal	WITHOUT_CLASSIFICATION	0.9999927186601728	WITHOUT_CLASSIFICATION	7.281339827217882E-6	IMPLEMENTATION
//  '_' in number just ignored	WITHOUT_CLASSIFICATION	0.9999916727575183	WITHOUT_CLASSIFICATION	8.327242481698334E-6	IMPLEMENTATION
// backslash	WITHOUT_CLASSIFICATION	0.9999997403189361	WITHOUT_CLASSIFICATION	2.596810638996971E-7	IMPLEMENTATION
// newline	WITHOUT_CLASSIFICATION	0.9999972249342289	WITHOUT_CLASSIFICATION	2.775065771174175E-6	IMPLEMENTATION
// horizontal tab	WITHOUT_CLASSIFICATION	0.9999608947479999	WITHOUT_CLASSIFICATION	3.910525200008908E-5	IMPLEMENTATION
// form feed	WITHOUT_CLASSIFICATION	0.9999424020700586	WITHOUT_CLASSIFICATION	5.75979299414717E-5	IMPLEMENTATION
// vertical tab	WITHOUT_CLASSIFICATION	0.9999644363344133	WITHOUT_CLASSIFICATION	3.556366558658446E-5	IMPLEMENTATION
// alarm(bell)	WITHOUT_CLASSIFICATION	0.9999960105121672	WITHOUT_CLASSIFICATION	3.989487832713157E-6	IMPLEMENTATION
// escape	WITHOUT_CLASSIFICATION	0.9999999525451967	WITHOUT_CLASSIFICATION	4.7454803273159044E-8	IMPLEMENTATION
// hex constant	WITHOUT_CLASSIFICATION	0.9999920945339289	WITHOUT_CLASSIFICATION	7.905466071026067E-6	IMPLEMENTATION
//char hexValue = scanHex(2);	WITHOUT_CLASSIFICATION	0.9999999185229805	WITHOUT_CLASSIFICATION	8.14770193961791E-8	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999989373572973	WITHOUT_CLASSIFICATION	1.0626427027453374E-6	IMPLEMENTATION
// space	WITHOUT_CLASSIFICATION	0.999999805443322	WITHOUT_CLASSIFICATION	1.9455667786951056E-7	IMPLEMENTATION
// Where we started this marker match	WITHOUT_CLASSIFICATION	0.9999997796995727	WITHOUT_CLASSIFICATION	2.2030042724482648E-7	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999959469181194	WITHOUT_CLASSIFICATION	4.053081880561591E-6	IMPLEMENTATION
// We use offset here to keep track of extra newlines for windows	WITHOUT_CLASSIFICATION	0.9999988722073444	WITHOUT_CLASSIFICATION	1.1277926556298306E-6	IMPLEMENTATION
// If \r\n then just pass along \n (windows).  // If \r[^\n] then pass along \n (MAC).	WITHOUT_CLASSIFICATION	0.9999989373572973	WITHOUT_CLASSIFICATION	1.0626427027453374E-6	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9817569694769285	WITHOUT_CLASSIFICATION	0.018243030523071514	IMPLEMENTATION
// FIXME: Old Mac format strings?	WITHOUT_CLASSIFICATION	0.9817569694769285	WITHOUT_CLASSIFICATION	0.018243030523071514	IMPLEMENTATION
// Where we get our newest char's	WITHOUT_CLASSIFICATION	0.9999996220893783	WITHOUT_CLASSIFICATION	3.779106216639105E-7	IMPLEMENTATION
// Our readback/pushback buffer.	WITHOUT_CLASSIFICATION	0.9999992815543142	WITHOUT_CLASSIFICATION	7.184456858710995E-7	IMPLEMENTATION
// index of last character in pushback buffer	WITHOUT_CLASSIFICATION	0.9999998074118058	WITHOUT_CLASSIFICATION	1.9258819418074224E-7	IMPLEMENTATION
// Character read before previous read	WITHOUT_CLASSIFICATION	0.9999998310251687	WITHOUT_CLASSIFICATION	1.6897483125384732E-7	IMPLEMENTATION
// keep value of twoAgo around so we can restore after we unread	WITHOUT_CLASSIFICATION	0.9999844475929617	WITHOUT_CLASSIFICATION	1.5552407038295928E-5	IMPLEMENTATION
// NetProtocolBufferedIOLibrary	WITHOUT_CLASSIFICATION	0.999993328616071	WITHOUT_CLASSIFICATION	6.671383928929968E-6	IMPLEMENTATION
// BigDecimalLibrary	WITHOUT_CLASSIFICATION	0.9999993132230164	WITHOUT_CLASSIFICATION	6.867769836273082E-7	IMPLEMENTATION
// TODO: FD_CLOEXEC is mysterious and we are not sure how constantine should include this. // We did it here for now	WITHOUT_CLASSIFICATION	0.6839698327816838	IMPLEMENTATION	0.3160301672183161	WITHOUT_CLASSIFICATION
// Ruby's designation for some platforms, minus version numbers in some cases	WITHOUT_CLASSIFICATION	0.9999995566474743	WITHOUT_CLASSIFICATION	4.433525257206339E-7	IMPLEMENTATION
// that's what JDK5 produces on Windows Vista	WITHOUT_CLASSIFICATION	0.9999948822380251	WITHOUT_CLASSIFICATION	5.11776197492236E-6	IMPLEMENTATION
// Rubygems is too specific on host cpu so until we have real need lets default to universal //setConfig(configHash, "arch", System.getProperty("os.arch") + "-java" + System.getProperty("java.specification.version"));	WITHOUT_CLASSIFICATION	0.9999999887520788	WITHOUT_CLASSIFICATION	1.124792127164353E-8	IMPLEMENTATION
// Our shell scripts pass in non-canonicalized paths, but even if we didn't // anyone who did would become unhappy because Ruby apps expect no relative // operators in the pathname (rubygems, for example).	WITHOUT_CLASSIFICATION	0.9999999554188	WITHOUT_CLASSIFICATION	4.458120001012756E-8	IMPLEMENTATION
// this set is only for darwin	WITHOUT_CLASSIFICATION	0.9999985662502557	WITHOUT_CLASSIFICATION	1.433749744234641E-6	IMPLEMENTATION
// DigestLibrary	WITHOUT_CLASSIFICATION	0.99999901260476	WITHOUT_CLASSIFICATION	9.87395240057908E-7	IMPLEMENTATION
// all errors, just info; do not prevent loading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9946524350734482	WITHOUT_CLASSIFICATION	0.005347564926551822	IMPLEMENTATION
// all errors, just info; do not prevent unloading // IKVM does not support JMX, and throws an error	WITHOUT_CLASSIFICATION	0.9989704590269501	WITHOUT_CLASSIFICATION	0.001029540973049851	IMPLEMENTATION
// do nothing, return dummy version below	WITHOUT_CLASSIFICATION	0.999999979514345	WITHOUT_CLASSIFICATION	2.0485654978529523E-8	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999931987436959	WITHOUT_CLASSIFICATION	6.801256304088751E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999931987436959	WITHOUT_CLASSIFICATION	6.801256304088751E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999931987436959	WITHOUT_CLASSIFICATION	6.801256304088751E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999931987436959	WITHOUT_CLASSIFICATION	6.801256304088751E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999931987436959	WITHOUT_CLASSIFICATION	6.801256304088751E-6	IMPLEMENTATION
// line 329	WITHOUT_CLASSIFICATION	0.9999993766322818	WITHOUT_CLASSIFICATION	6.233677181136749E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997950868944	WITHOUT_CLASSIFICATION	2.0491310565125996E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999749836155363	WITHOUT_CLASSIFICATION	2.5016384463712047E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999165175505	WITHOUT_CLASSIFICATION	8.348244949962753E-8	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999217795784	WITHOUT_CLASSIFICATION	7.822042155018279E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999876740719	WITHOUT_CLASSIFICATION	1.232592813056312E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999274753898167	WITHOUT_CLASSIFICATION	7.252461018320336E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999993993986086	WITHOUT_CLASSIFICATION	6.006013913193463E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989505069397	WITHOUT_CLASSIFICATION	1.0494930602710252E-6	IMPLEMENTATION
// line 271	WITHOUT_CLASSIFICATION	0.9999972840664646	WITHOUT_CLASSIFICATION	2.7159335353652473E-6	IMPLEMENTATION
// line 274	WITHOUT_CLASSIFICATION	0.9999990912019265	WITHOUT_CLASSIFICATION	9.087980735758624E-7	IMPLEMENTATION
// line 303	WITHOUT_CLASSIFICATION	0.9999994844926046	WITHOUT_CLASSIFICATION	5.155073954363127E-7	IMPLEMENTATION
// line 311	WITHOUT_CLASSIFICATION	0.9999981703970593	WITHOUT_CLASSIFICATION	1.8296029406803029E-6	IMPLEMENTATION
// line 314	WITHOUT_CLASSIFICATION	0.9999988322024522	WITHOUT_CLASSIFICATION	1.1677975477903194E-6	IMPLEMENTATION
// line 317	WITHOUT_CLASSIFICATION	0.9999990492098371	WITHOUT_CLASSIFICATION	9.50790162920905E-7	IMPLEMENTATION
// line 332	WITHOUT_CLASSIFICATION	0.9999996266866887	WITHOUT_CLASSIFICATION	3.7331331125760717E-7	IMPLEMENTATION
// line 338	WITHOUT_CLASSIFICATION	0.9999990386247124	WITHOUT_CLASSIFICATION	9.613752875994772E-7	IMPLEMENTATION
// line 341	WITHOUT_CLASSIFICATION	0.9999978687934559	WITHOUT_CLASSIFICATION	2.1312065442167587E-6	IMPLEMENTATION
// line 344	WITHOUT_CLASSIFICATION	0.9999993080518257	WITHOUT_CLASSIFICATION	6.919481742718268E-7	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999980176930644	WITHOUT_CLASSIFICATION	1.982306935642311E-6	IMPLEMENTATION
// line 358	WITHOUT_CLASSIFICATION	0.9999991437723573	WITHOUT_CLASSIFICATION	8.562276427192683E-7	IMPLEMENTATION
// line 367	WITHOUT_CLASSIFICATION	0.9999993870648319	WITHOUT_CLASSIFICATION	6.12935168070762E-7	IMPLEMENTATION
// line 372	WITHOUT_CLASSIFICATION	0.9999996968410774	WITHOUT_CLASSIFICATION	3.031589227107703E-7	IMPLEMENTATION
// line 378	WITHOUT_CLASSIFICATION	0.9999992347962389	WITHOUT_CLASSIFICATION	7.652037612612208E-7	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999995346149175	WITHOUT_CLASSIFICATION	4.653850824588433E-7	IMPLEMENTATION
// line 407	WITHOUT_CLASSIFICATION	0.9999995173429312	WITHOUT_CLASSIFICATION	4.826570687133781E-7	IMPLEMENTATION
// line 411	WITHOUT_CLASSIFICATION	0.9999975971816496	WITHOUT_CLASSIFICATION	2.40281835044736E-6	IMPLEMENTATION
// line 414	WITHOUT_CLASSIFICATION	0.9999984610816912	WITHOUT_CLASSIFICATION	1.5389183088242132E-6	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999987512946241	WITHOUT_CLASSIFICATION	1.2487053759763606E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999996128057558	WITHOUT_CLASSIFICATION	3.871942443125806E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999991536663169	WITHOUT_CLASSIFICATION	8.463336831033422E-7	IMPLEMENTATION
// line 434	WITHOUT_CLASSIFICATION	0.9999992532007679	WITHOUT_CLASSIFICATION	7.467992320925951E-7	IMPLEMENTATION
// line 443	WITHOUT_CLASSIFICATION	0.9999991870389553	WITHOUT_CLASSIFICATION	8.129610447650001E-7	IMPLEMENTATION
// line 446	WITHOUT_CLASSIFICATION	0.9999989921106044	WITHOUT_CLASSIFICATION	1.0078893955877306E-6	IMPLEMENTATION
// line 452	WITHOUT_CLASSIFICATION	0.9999995675043728	WITHOUT_CLASSIFICATION	4.324956271947411E-7	IMPLEMENTATION
// line 457	WITHOUT_CLASSIFICATION	0.9999992907799841	WITHOUT_CLASSIFICATION	7.092200159336684E-7	IMPLEMENTATION
// line 464	WITHOUT_CLASSIFICATION	0.9999990355569432	WITHOUT_CLASSIFICATION	9.64443056749545E-7	IMPLEMENTATION
// line 467	WITHOUT_CLASSIFICATION	0.9999991945071991	WITHOUT_CLASSIFICATION	8.054928008784245E-7	IMPLEMENTATION
// line 470	WITHOUT_CLASSIFICATION	0.9999996056764204	WITHOUT_CLASSIFICATION	3.943235795186671E-7	IMPLEMENTATION
// line 479	WITHOUT_CLASSIFICATION	0.9999992033582732	WITHOUT_CLASSIFICATION	7.96641726908322E-7	IMPLEMENTATION
// line 484	WITHOUT_CLASSIFICATION	0.999998789293417	WITHOUT_CLASSIFICATION	1.210706582998155E-6	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999987156021581	WITHOUT_CLASSIFICATION	1.2843978418555027E-6	IMPLEMENTATION
// line 492	WITHOUT_CLASSIFICATION	0.9999995085479741	WITHOUT_CLASSIFICATION	4.91452025917173E-7	IMPLEMENTATION
// line 498	WITHOUT_CLASSIFICATION	0.999998730436171	WITHOUT_CLASSIFICATION	1.2695638289577945E-6	IMPLEMENTATION
// line 501	WITHOUT_CLASSIFICATION	0.9999984269038534	WITHOUT_CLASSIFICATION	1.5730961465777002E-6	IMPLEMENTATION
// line 504	WITHOUT_CLASSIFICATION	0.9999994013819535	WITHOUT_CLASSIFICATION	5.98618046502269E-7	IMPLEMENTATION
// line 507	WITHOUT_CLASSIFICATION	0.9999995847625539	WITHOUT_CLASSIFICATION	4.152374460959464E-7	IMPLEMENTATION
// line 510	WITHOUT_CLASSIFICATION	0.9999994571686641	WITHOUT_CLASSIFICATION	5.428313359444691E-7	IMPLEMENTATION
// line 519	WITHOUT_CLASSIFICATION	0.9999985972699927	WITHOUT_CLASSIFICATION	1.4027300072074331E-6	IMPLEMENTATION
// line 525	WITHOUT_CLASSIFICATION	0.9999992645046589	WITHOUT_CLASSIFICATION	7.354953410644178E-7	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999749836155363	WITHOUT_CLASSIFICATION	2.5016384463712047E-4	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999994830662747	WITHOUT_CLASSIFICATION	5.169337252183777E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999995055051832	WITHOUT_CLASSIFICATION	4.944948166870512E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999993016338583	WITHOUT_CLASSIFICATION	6.983661416785685E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999991341825634	WITHOUT_CLASSIFICATION	8.658174365283193E-7	IMPLEMENTATION
// line 556	WITHOUT_CLASSIFICATION	0.9999991289182182	WITHOUT_CLASSIFICATION	8.710817818091688E-7	IMPLEMENTATION
// line 559	WITHOUT_CLASSIFICATION	0.9999991386003367	WITHOUT_CLASSIFICATION	8.613996633343597E-7	IMPLEMENTATION
// line 563	WITHOUT_CLASSIFICATION	0.9999992921757496	WITHOUT_CLASSIFICATION	7.078242503742019E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999991284851552	WITHOUT_CLASSIFICATION	8.71514844995257E-7	IMPLEMENTATION
// line 569	WITHOUT_CLASSIFICATION	0.9999991284201115	WITHOUT_CLASSIFICATION	8.715798886099848E-7	IMPLEMENTATION
// line 575	WITHOUT_CLASSIFICATION	0.9999992855272318	WITHOUT_CLASSIFICATION	7.144727682605887E-7	IMPLEMENTATION
// line 578	WITHOUT_CLASSIFICATION	0.9999991343021996	WITHOUT_CLASSIFICATION	8.656978005016579E-7	IMPLEMENTATION
// line 587	WITHOUT_CLASSIFICATION	0.9999991321530247	WITHOUT_CLASSIFICATION	8.67846975387058E-7	IMPLEMENTATION
// line 596	WITHOUT_CLASSIFICATION	0.999999129068008	WITHOUT_CLASSIFICATION	8.709319920142131E-7	IMPLEMENTATION
// line 604	WITHOUT_CLASSIFICATION	0.999999266589141	WITHOUT_CLASSIFICATION	7.334108589540476E-7	IMPLEMENTATION
// line 607	WITHOUT_CLASSIFICATION	0.9999994588743184	WITHOUT_CLASSIFICATION	5.41125681482993E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999999374892912	WITHOUT_CLASSIFICATION	6.251070879508865E-7	IMPLEMENTATION
// line 613	WITHOUT_CLASSIFICATION	0.9999986992352334	WITHOUT_CLASSIFICATION	1.30076476658871E-6	IMPLEMENTATION
// line 616	WITHOUT_CLASSIFICATION	0.9999983969728056	WITHOUT_CLASSIFICATION	1.6030271945004376E-6	IMPLEMENTATION
// line 634	WITHOUT_CLASSIFICATION	0.9999992648712772	WITHOUT_CLASSIFICATION	7.351287228166001E-7	IMPLEMENTATION
// line 638	WITHOUT_CLASSIFICATION	0.9999989831955752	WITHOUT_CLASSIFICATION	1.0168044247260568E-6	IMPLEMENTATION
// line 643	WITHOUT_CLASSIFICATION	0.9999991965569824	WITHOUT_CLASSIFICATION	8.034430175382178E-7	IMPLEMENTATION
// line 646	WITHOUT_CLASSIFICATION	0.9999990146696376	WITHOUT_CLASSIFICATION	9.853303624115129E-7	IMPLEMENTATION
// line 655	WITHOUT_CLASSIFICATION	0.9999990835538014	WITHOUT_CLASSIFICATION	9.164461986020412E-7	IMPLEMENTATION
// line 660	WITHOUT_CLASSIFICATION	0.9999993911981921	WITHOUT_CLASSIFICATION	6.088018078140877E-7	IMPLEMENTATION
// line 667	WITHOUT_CLASSIFICATION	0.9999992102393803	WITHOUT_CLASSIFICATION	7.89760619777869E-7	IMPLEMENTATION
// line 670	WITHOUT_CLASSIFICATION	0.9999996091826433	WITHOUT_CLASSIFICATION	3.908173567223568E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999996053535781	WITHOUT_CLASSIFICATION	3.946464217915763E-7	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999990068971457	WITHOUT_CLASSIFICATION	9.93102854296964E-7	IMPLEMENTATION
// line 701	WITHOUT_CLASSIFICATION	0.9999989245102958	WITHOUT_CLASSIFICATION	1.0754897041987792E-6	IMPLEMENTATION
// line 717	WITHOUT_CLASSIFICATION	0.9999987766768084	WITHOUT_CLASSIFICATION	1.2233231915883262E-6	IMPLEMENTATION
// line 720	WITHOUT_CLASSIFICATION	0.9999996845279686	WITHOUT_CLASSIFICATION	3.1547203141228573E-7	IMPLEMENTATION
// line 726	WITHOUT_CLASSIFICATION	0.9999993104684369	WITHOUT_CLASSIFICATION	6.895315630412734E-7	IMPLEMENTATION
// line 729	WITHOUT_CLASSIFICATION	0.9999993249426872	WITHOUT_CLASSIFICATION	6.750573128511198E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999996795658715	WITHOUT_CLASSIFICATION	3.204341284291196E-7	IMPLEMENTATION
// line 735	WITHOUT_CLASSIFICATION	0.9999993952432009	WITHOUT_CLASSIFICATION	6.047567990953734E-7	IMPLEMENTATION
// line 738	WITHOUT_CLASSIFICATION	0.9999991748017851	WITHOUT_CLASSIFICATION	8.251982148668262E-7	IMPLEMENTATION
// line 751	WITHOUT_CLASSIFICATION	0.9999978993476414	WITHOUT_CLASSIFICATION	2.1006523586486966E-6	IMPLEMENTATION
// line 754	WITHOUT_CLASSIFICATION	0.9999993193460285	WITHOUT_CLASSIFICATION	6.806539716463284E-7	IMPLEMENTATION
// line 757	WITHOUT_CLASSIFICATION	0.9999992826065287	WITHOUT_CLASSIFICATION	7.173934712258289E-7	IMPLEMENTATION
// line 760	WITHOUT_CLASSIFICATION	0.9999994987679183	WITHOUT_CLASSIFICATION	5.012320816782377E-7	IMPLEMENTATION
// line 763	WITHOUT_CLASSIFICATION	0.9999993362786237	WITHOUT_CLASSIFICATION	6.637213763397172E-7	IMPLEMENTATION
// line 769	WITHOUT_CLASSIFICATION	0.9999991827262081	WITHOUT_CLASSIFICATION	8.172737919827468E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999995957565606	WITHOUT_CLASSIFICATION	4.0424343938476075E-7	IMPLEMENTATION
// line 775	WITHOUT_CLASSIFICATION	0.9999992532317886	WITHOUT_CLASSIFICATION	7.467682114055221E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999999503687858	WITHOUT_CLASSIFICATION	4.963121420609034E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999989864430477	WITHOUT_CLASSIFICATION	1.0135569523034276E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.999997598425981	WITHOUT_CLASSIFICATION	2.40157401899882E-6	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999992263439023	WITHOUT_CLASSIFICATION	7.736560976893281E-7	IMPLEMENTATION
// line 797	WITHOUT_CLASSIFICATION	0.9999991922336225	WITHOUT_CLASSIFICATION	8.077663773729998E-7	IMPLEMENTATION
// line 803	WITHOUT_CLASSIFICATION	0.9999992342076943	WITHOUT_CLASSIFICATION	7.65792305676746E-7	IMPLEMENTATION
// line 806	WITHOUT_CLASSIFICATION	0.9999989894681506	WITHOUT_CLASSIFICATION	1.0105318493770077E-6	IMPLEMENTATION
// line 809	WITHOUT_CLASSIFICATION	0.9999990455953903	WITHOUT_CLASSIFICATION	9.544046097120017E-7	IMPLEMENTATION
// line 815	WITHOUT_CLASSIFICATION	0.9999980805216272	WITHOUT_CLASSIFICATION	1.919478372869683E-6	IMPLEMENTATION
// line 818	WITHOUT_CLASSIFICATION	0.9999973333034069	WITHOUT_CLASSIFICATION	2.6666965931834826E-6	IMPLEMENTATION
// line 821	WITHOUT_CLASSIFICATION	0.9999969007604099	WITHOUT_CLASSIFICATION	3.099239590009183E-6	IMPLEMENTATION
// line 824	WITHOUT_CLASSIFICATION	0.9999989744107476	WITHOUT_CLASSIFICATION	1.0255892524781359E-6	IMPLEMENTATION
// line 830	WITHOUT_CLASSIFICATION	0.9999994835993123	WITHOUT_CLASSIFICATION	5.16400687673471E-7	IMPLEMENTATION
// line 833	WITHOUT_CLASSIFICATION	0.9999989528654422	WITHOUT_CLASSIFICATION	1.0471345578307483E-6	IMPLEMENTATION
// line 836	WITHOUT_CLASSIFICATION	0.9999989419611824	WITHOUT_CLASSIFICATION	1.0580388176178216E-6	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.999998952447265	WITHOUT_CLASSIFICATION	1.0475527350536865E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999993653421679	WITHOUT_CLASSIFICATION	6.346578319819067E-7	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999987127592898	WITHOUT_CLASSIFICATION	1.2872407101347407E-6	IMPLEMENTATION
// line 852	WITHOUT_CLASSIFICATION	0.9999994448243329	WITHOUT_CLASSIFICATION	5.551756670702589E-7	IMPLEMENTATION
// line 858	WITHOUT_CLASSIFICATION	0.9999988546156473	WITHOUT_CLASSIFICATION	1.145384352680387E-6	IMPLEMENTATION
// line 861	WITHOUT_CLASSIFICATION	0.9999961747427417	WITHOUT_CLASSIFICATION	3.8252572582417595E-6	IMPLEMENTATION
// line 868	WITHOUT_CLASSIFICATION	0.9999986941405483	WITHOUT_CLASSIFICATION	1.3058594516521157E-6	IMPLEMENTATION
// line 871	WITHOUT_CLASSIFICATION	0.9999971000697581	WITHOUT_CLASSIFICATION	2.8999302420112814E-6	IMPLEMENTATION
// line 876	WITHOUT_CLASSIFICATION	0.999998962789985	WITHOUT_CLASSIFICATION	1.0372100150129901E-6	IMPLEMENTATION
// line 879	WITHOUT_CLASSIFICATION	0.9999989739170807	WITHOUT_CLASSIFICATION	1.0260829192672435E-6	IMPLEMENTATION
// line 883	WITHOUT_CLASSIFICATION	0.9999989564159064	WITHOUT_CLASSIFICATION	1.0435840935672531E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999989535574813	WITHOUT_CLASSIFICATION	1.0464425187553276E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999986954368218	WITHOUT_CLASSIFICATION	1.3045631781627197E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999987098836499	WITHOUT_CLASSIFICATION	1.2901163500732836E-6	IMPLEMENTATION
// line 903	WITHOUT_CLASSIFICATION	0.9999993927997928	WITHOUT_CLASSIFICATION	6.072002071584301E-7	IMPLEMENTATION
// line 907	WITHOUT_CLASSIFICATION	0.999999509016627	WITHOUT_CLASSIFICATION	4.909833728601428E-7	IMPLEMENTATION
// line 915	WITHOUT_CLASSIFICATION	0.9999984647742259	WITHOUT_CLASSIFICATION	1.5352257739774715E-6	IMPLEMENTATION
// line 920	WITHOUT_CLASSIFICATION	0.9999996107744911	WITHOUT_CLASSIFICATION	3.892255089220189E-7	IMPLEMENTATION
// line 923	WITHOUT_CLASSIFICATION	0.9999993422368516	WITHOUT_CLASSIFICATION	6.57763148405912E-7	IMPLEMENTATION
// line 926	WITHOUT_CLASSIFICATION	0.9999991493091958	WITHOUT_CLASSIFICATION	8.506908042347846E-7	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999995950847758	WITHOUT_CLASSIFICATION	4.049152242243231E-7	IMPLEMENTATION
// line 936	WITHOUT_CLASSIFICATION	0.9999991641843117	WITHOUT_CLASSIFICATION	8.358156883251809E-7	IMPLEMENTATION
// line 940	WITHOUT_CLASSIFICATION	0.999999411432205	WITHOUT_CLASSIFICATION	5.88567794926203E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999990290817212	WITHOUT_CLASSIFICATION	9.709182788607616E-7	IMPLEMENTATION
// line 948	WITHOUT_CLASSIFICATION	0.9999987047082532	WITHOUT_CLASSIFICATION	1.2952917468369156E-6	IMPLEMENTATION
// line 956	WITHOUT_CLASSIFICATION	0.9999990904091447	WITHOUT_CLASSIFICATION	9.095908552531408E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.999999368189161	WITHOUT_CLASSIFICATION	6.318108390913461E-7	IMPLEMENTATION
// line 964	WITHOUT_CLASSIFICATION	0.9999990220025808	WITHOUT_CLASSIFICATION	9.779974192025917E-7	IMPLEMENTATION
// line 967	WITHOUT_CLASSIFICATION	0.9999991803912045	WITHOUT_CLASSIFICATION	8.196087955818549E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999995957274413	WITHOUT_CLASSIFICATION	4.04272558547507E-7	IMPLEMENTATION
// line 978	WITHOUT_CLASSIFICATION	0.9999989788299098	WITHOUT_CLASSIFICATION	1.0211700901974728E-6	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999992616159341	WITHOUT_CLASSIFICATION	7.383840658304375E-7	IMPLEMENTATION
// line 984	WITHOUT_CLASSIFICATION	0.9999987795014924	WITHOUT_CLASSIFICATION	1.2204985075808888E-6	IMPLEMENTATION
// line 986	WITHOUT_CLASSIFICATION	0.9999987007828542	WITHOUT_CLASSIFICATION	1.2992171457630795E-6	IMPLEMENTATION
// line 996	WITHOUT_CLASSIFICATION	0.9999989698013346	WITHOUT_CLASSIFICATION	1.0301986654006485E-6	IMPLEMENTATION
// line 1001	WITHOUT_CLASSIFICATION	0.9999981760100957	WITHOUT_CLASSIFICATION	1.8239899042469214E-6	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999988805662057	WITHOUT_CLASSIFICATION	1.1194337943297997E-6	IMPLEMENTATION
// line 1008	WITHOUT_CLASSIFICATION	0.9999985016512809	WITHOUT_CLASSIFICATION	1.4983487190352727E-6	IMPLEMENTATION
// line 1014	WITHOUT_CLASSIFICATION	0.9999988618749546	WITHOUT_CLASSIFICATION	1.1381250454588846E-6	IMPLEMENTATION
// line 1029	WITHOUT_CLASSIFICATION	0.9999988391699699	WITHOUT_CLASSIFICATION	1.1608300301575092E-6	IMPLEMENTATION
// line 1032	WITHOUT_CLASSIFICATION	0.9999994371024103	WITHOUT_CLASSIFICATION	5.628975895965609E-7	IMPLEMENTATION
// line 1034	WITHOUT_CLASSIFICATION	0.9999989520040945	WITHOUT_CLASSIFICATION	1.0479959055948645E-6	IMPLEMENTATION
// line 1045	WITHOUT_CLASSIFICATION	0.9999987010410075	WITHOUT_CLASSIFICATION	1.2989589923793211E-6	IMPLEMENTATION
// line 1048	WITHOUT_CLASSIFICATION	0.9999982195754562	WITHOUT_CLASSIFICATION	1.7804245437103436E-6	IMPLEMENTATION
// line 1051	WITHOUT_CLASSIFICATION	0.9999978696623586	WITHOUT_CLASSIFICATION	2.1303376413308123E-6	IMPLEMENTATION
// line 1058	WITHOUT_CLASSIFICATION	0.9999985114694462	WITHOUT_CLASSIFICATION	1.4885305537582842E-6	IMPLEMENTATION
// line 1070	WITHOUT_CLASSIFICATION	0.9999994616655244	WITHOUT_CLASSIFICATION	5.38334475602349E-7	IMPLEMENTATION
// line 1073	WITHOUT_CLASSIFICATION	0.9999992479828594	WITHOUT_CLASSIFICATION	7.520171404757502E-7	IMPLEMENTATION
// line 1076	WITHOUT_CLASSIFICATION	0.9999990606803416	WITHOUT_CLASSIFICATION	9.39319658323343E-7	IMPLEMENTATION
// line 1079	WITHOUT_CLASSIFICATION	0.9999990707342072	WITHOUT_CLASSIFICATION	9.29265792818967E-7	IMPLEMENTATION
// line 1082	WITHOUT_CLASSIFICATION	0.9999991289731177	WITHOUT_CLASSIFICATION	8.710268823006578E-7	IMPLEMENTATION
// line 1089	WITHOUT_CLASSIFICATION	0.9999982112671207	WITHOUT_CLASSIFICATION	1.7887328791875787E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999998861942667	WITHOUT_CLASSIFICATION	1.138057333028144E-6	IMPLEMENTATION
// line 1100	WITHOUT_CLASSIFICATION	0.9999993107587634	WITHOUT_CLASSIFICATION	6.89241236573094E-7	IMPLEMENTATION
// line 1103	WITHOUT_CLASSIFICATION	0.9999991519824468	WITHOUT_CLASSIFICATION	8.480175530961548E-7	IMPLEMENTATION
// line 1107	WITHOUT_CLASSIFICATION	0.9999993141712524	WITHOUT_CLASSIFICATION	6.858287476119984E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.99999617878199	WITHOUT_CLASSIFICATION	3.821218009953682E-6	IMPLEMENTATION
// line 1113	WITHOUT_CLASSIFICATION	0.9999982927717432	WITHOUT_CLASSIFICATION	1.7072282567051966E-6	IMPLEMENTATION
// line 1115	WITHOUT_CLASSIFICATION	0.9999980612148082	WITHOUT_CLASSIFICATION	1.938785191888754E-6	IMPLEMENTATION
// line 1119	WITHOUT_CLASSIFICATION	0.9999978793986894	WITHOUT_CLASSIFICATION	2.120601310505966E-6	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999991575201552	WITHOUT_CLASSIFICATION	8.424798448428689E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999982916767477	WITHOUT_CLASSIFICATION	1.708323252318754E-6	IMPLEMENTATION
// line 1135	WITHOUT_CLASSIFICATION	0.9999984213766023	WITHOUT_CLASSIFICATION	1.5786233976060826E-6	IMPLEMENTATION
// line 1137	WITHOUT_CLASSIFICATION	0.9999986402503407	WITHOUT_CLASSIFICATION	1.3597496592727327E-6	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999987948002217	WITHOUT_CLASSIFICATION	1.2051997782973333E-6	IMPLEMENTATION
// line 1151	WITHOUT_CLASSIFICATION	0.9999966219093269	WITHOUT_CLASSIFICATION	3.3780906730636273E-6	IMPLEMENTATION
// line 1154	WITHOUT_CLASSIFICATION	0.9999982312043302	WITHOUT_CLASSIFICATION	1.7687956698170986E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999976421092138	WITHOUT_CLASSIFICATION	2.3578907862621086E-6	IMPLEMENTATION
// line 1164	WITHOUT_CLASSIFICATION	0.9999979805787863	WITHOUT_CLASSIFICATION	2.0194212137688157E-6	IMPLEMENTATION
// line 1175	WITHOUT_CLASSIFICATION	0.9999984992689431	WITHOUT_CLASSIFICATION	1.5007310568212733E-6	IMPLEMENTATION
// line 1178	WITHOUT_CLASSIFICATION	0.9999979494169415	WITHOUT_CLASSIFICATION	2.0505830585374213E-6	IMPLEMENTATION
// line 1187	WITHOUT_CLASSIFICATION	0.9999972924312717	WITHOUT_CLASSIFICATION	2.7075687282425693E-6	IMPLEMENTATION
// line 1189	WITHOUT_CLASSIFICATION	0.999996596817227	WITHOUT_CLASSIFICATION	3.4031827730036185E-6	IMPLEMENTATION
// line 1193	WITHOUT_CLASSIFICATION	0.9999982799150734	WITHOUT_CLASSIFICATION	1.7200849266193475E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999991219317531	WITHOUT_CLASSIFICATION	8.780682468990568E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999993908513013	WITHOUT_CLASSIFICATION	6.09148698765682E-7	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999992997138334	WITHOUT_CLASSIFICATION	7.0028616655752E-7	IMPLEMENTATION
// line 1214	WITHOUT_CLASSIFICATION	0.9999982975073515	WITHOUT_CLASSIFICATION	1.7024926485825412E-6	IMPLEMENTATION
// line 1234	WITHOUT_CLASSIFICATION	0.9999988539470822	WITHOUT_CLASSIFICATION	1.1460529177776354E-6	IMPLEMENTATION
// line 1239	WITHOUT_CLASSIFICATION	0.9999986431382819	WITHOUT_CLASSIFICATION	1.3568617180109228E-6	IMPLEMENTATION
// line 1243	WITHOUT_CLASSIFICATION	0.999998520858706	WITHOUT_CLASSIFICATION	1.4791412940197503E-6	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999985558435798	WITHOUT_CLASSIFICATION	1.444156420203286E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999971028329215	WITHOUT_CLASSIFICATION	2.89716707849198E-6	IMPLEMENTATION
// line 1263	WITHOUT_CLASSIFICATION	0.9999985201583449	WITHOUT_CLASSIFICATION	1.479841655085262E-6	IMPLEMENTATION
// line 1269	WITHOUT_CLASSIFICATION	0.9999981777962625	WITHOUT_CLASSIFICATION	1.8222037375105292E-6	IMPLEMENTATION
// line 1280	WITHOUT_CLASSIFICATION	0.999998690414933	WITHOUT_CLASSIFICATION	1.3095850670184544E-6	IMPLEMENTATION
// line 1283	WITHOUT_CLASSIFICATION	0.9999981500857252	WITHOUT_CLASSIFICATION	1.8499142747524115E-6	IMPLEMENTATION
// line 1290	WITHOUT_CLASSIFICATION	0.9999989711720109	WITHOUT_CLASSIFICATION	1.0288279891949353E-6	IMPLEMENTATION
// line 1296	WITHOUT_CLASSIFICATION	0.9999981960684506	WITHOUT_CLASSIFICATION	1.8039315493843814E-6	IMPLEMENTATION
// line 1299	WITHOUT_CLASSIFICATION	0.9999982160453107	WITHOUT_CLASSIFICATION	1.7839546892787757E-6	IMPLEMENTATION
// line 1302	WITHOUT_CLASSIFICATION	0.9999993067469275	WITHOUT_CLASSIFICATION	6.932530723798027E-7	IMPLEMENTATION
// line 1309	WITHOUT_CLASSIFICATION	0.9999985705494451	WITHOUT_CLASSIFICATION	1.4294505548941352E-6	IMPLEMENTATION
// line 1313	WITHOUT_CLASSIFICATION	0.9999979144208453	WITHOUT_CLASSIFICATION	2.0855791546114803E-6	IMPLEMENTATION
// line 1315	WITHOUT_CLASSIFICATION	0.9999980785471396	WITHOUT_CLASSIFICATION	1.9214528603467683E-6	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999992026372554	WITHOUT_CLASSIFICATION	7.973627445321354E-7	IMPLEMENTATION
// line 1328	WITHOUT_CLASSIFICATION	0.9999978165549291	WITHOUT_CLASSIFICATION	2.183445070925285E-6	IMPLEMENTATION
// line 1335	WITHOUT_CLASSIFICATION	0.9999980714240154	WITHOUT_CLASSIFICATION	1.9285759846138128E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999974730363324	WITHOUT_CLASSIFICATION	2.526963667682729E-6	IMPLEMENTATION
// line 1352	WITHOUT_CLASSIFICATION	0.9999991014589429	WITHOUT_CLASSIFICATION	8.985410570899532E-7	IMPLEMENTATION
// line 1358	WITHOUT_CLASSIFICATION	0.9999976562545895	WITHOUT_CLASSIFICATION	2.343745410593467E-6	IMPLEMENTATION
// line 1374	WITHOUT_CLASSIFICATION	0.9999984299409638	WITHOUT_CLASSIFICATION	1.570059036221061E-6	IMPLEMENTATION
// line 1381	WITHOUT_CLASSIFICATION	0.9999952294378258	WITHOUT_CLASSIFICATION	4.770562174128964E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999979088383917	WITHOUT_CLASSIFICATION	2.091161608274405E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999989786187137	WITHOUT_CLASSIFICATION	1.0213812864062126E-6	IMPLEMENTATION
// line 1415	WITHOUT_CLASSIFICATION	0.9999976497776868	WITHOUT_CLASSIFICATION	2.35022231318662E-6	IMPLEMENTATION
// line 1431	WITHOUT_CLASSIFICATION	0.9999962210603759	WITHOUT_CLASSIFICATION	3.778939624200701E-6	IMPLEMENTATION
// line 1434	WITHOUT_CLASSIFICATION	0.9999980959064051	WITHOUT_CLASSIFICATION	1.9040935948658466E-6	IMPLEMENTATION
// line 1440	WITHOUT_CLASSIFICATION	0.9999985323149758	WITHOUT_CLASSIFICATION	1.4676850241700106E-6	IMPLEMENTATION
// line 1443	WITHOUT_CLASSIFICATION	0.999997927215652	WITHOUT_CLASSIFICATION	2.072784348163401E-6	IMPLEMENTATION
// line 1453	WITHOUT_CLASSIFICATION	0.9999982897259395	WITHOUT_CLASSIFICATION	1.7102740604251535E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999977051038476	WITHOUT_CLASSIFICATION	2.2948961524642315E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999987395523674	WITHOUT_CLASSIFICATION	1.2604476326674052E-6	IMPLEMENTATION
// line 1465	WITHOUT_CLASSIFICATION	0.9999976175546228	WITHOUT_CLASSIFICATION	2.3824453772235888E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999989949232481	WITHOUT_CLASSIFICATION	1.005076752007516E-6	IMPLEMENTATION
// line 1477	WITHOUT_CLASSIFICATION	0.9999979681187693	WITHOUT_CLASSIFICATION	2.0318812307455307E-6	IMPLEMENTATION
// line 1480	WITHOUT_CLASSIFICATION	0.9999981387883488	WITHOUT_CLASSIFICATION	1.86121165128571E-6	IMPLEMENTATION
// line 1485	WITHOUT_CLASSIFICATION	0.9999970082036848	WITHOUT_CLASSIFICATION	2.9917963152093147E-6	IMPLEMENTATION
// line 1488	WITHOUT_CLASSIFICATION	0.9999967671081289	WITHOUT_CLASSIFICATION	3.232891871109775E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999974121091044	WITHOUT_CLASSIFICATION	2.5878908956079104E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999991806916451	WITHOUT_CLASSIFICATION	8.193083549725349E-7	IMPLEMENTATION
// line 1510	WITHOUT_CLASSIFICATION	0.9999991134727342	WITHOUT_CLASSIFICATION	8.865272657789153E-7	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.99999815569129	WITHOUT_CLASSIFICATION	1.8443087100165854E-6	IMPLEMENTATION
// line 1516	WITHOUT_CLASSIFICATION	0.9999977023784109	WITHOUT_CLASSIFICATION	2.2976215890291626E-6	IMPLEMENTATION
// line 1533	WITHOUT_CLASSIFICATION	0.9999982862261705	WITHOUT_CLASSIFICATION	1.7137738295870697E-6	IMPLEMENTATION
// line 1550	WITHOUT_CLASSIFICATION	0.9999986882396841	WITHOUT_CLASSIFICATION	1.3117603159320334E-6	IMPLEMENTATION
// line 1553	WITHOUT_CLASSIFICATION	0.9999982867256698	WITHOUT_CLASSIFICATION	1.7132743301728365E-6	IMPLEMENTATION
// line 1556	WITHOUT_CLASSIFICATION	0.9999977010779996	WITHOUT_CLASSIFICATION	2.298922000500674E-6	IMPLEMENTATION
// line 1565	WITHOUT_CLASSIFICATION	0.9999976053901841	WITHOUT_CLASSIFICATION	2.394609815833894E-6	IMPLEMENTATION
// line 1568	WITHOUT_CLASSIFICATION	0.9999970877735529	WITHOUT_CLASSIFICATION	2.912226447218302E-6	IMPLEMENTATION
// line 1571	WITHOUT_CLASSIFICATION	0.9999968329270208	WITHOUT_CLASSIFICATION	3.167072979185689E-6	IMPLEMENTATION
// line 1574	WITHOUT_CLASSIFICATION	0.9999982874618196	WITHOUT_CLASSIFICATION	1.7125381803753545E-6	IMPLEMENTATION
// line 1577	WITHOUT_CLASSIFICATION	0.9999981879665837	WITHOUT_CLASSIFICATION	1.8120334162169682E-6	IMPLEMENTATION
// line 1587	WITHOUT_CLASSIFICATION	0.9999977092977188	WITHOUT_CLASSIFICATION	2.290702281074872E-6	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999976430781974	WITHOUT_CLASSIFICATION	2.3569218026653714E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999971282519705	WITHOUT_CLASSIFICATION	2.871748029403369E-6	IMPLEMENTATION
// line 1600	WITHOUT_CLASSIFICATION	0.99999865639271	WITHOUT_CLASSIFICATION	1.343607290026556E-6	IMPLEMENTATION
// line 1609	WITHOUT_CLASSIFICATION	0.9999979458923831	WITHOUT_CLASSIFICATION	2.0541076167953818E-6	IMPLEMENTATION
// line 1623	WITHOUT_CLASSIFICATION	0.9999983244762424	WITHOUT_CLASSIFICATION	1.6755237575971711E-6	IMPLEMENTATION
// line 1626	WITHOUT_CLASSIFICATION	0.9999978561167157	WITHOUT_CLASSIFICATION	2.143883284257507E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999978823628569	WITHOUT_CLASSIFICATION	2.1176371429771937E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999989656967876	WITHOUT_CLASSIFICATION	1.034303212413377E-6	IMPLEMENTATION
// line 1638	WITHOUT_CLASSIFICATION	0.9999973364436008	WITHOUT_CLASSIFICATION	2.663556399095725E-6	IMPLEMENTATION
// line 1641	WITHOUT_CLASSIFICATION	0.9999953147275285	WITHOUT_CLASSIFICATION	4.6852724715128645E-6	IMPLEMENTATION
// line 1644	WITHOUT_CLASSIFICATION	0.999997541799482	WITHOUT_CLASSIFICATION	2.45820051808708E-6	IMPLEMENTATION
// line 1649	WITHOUT_CLASSIFICATION	0.9999974103278544	WITHOUT_CLASSIFICATION	2.5896721455935317E-6	IMPLEMENTATION
// line 1655	WITHOUT_CLASSIFICATION	0.9999976000503381	WITHOUT_CLASSIFICATION	2.3999496619384694E-6	IMPLEMENTATION
// line 1658	WITHOUT_CLASSIFICATION	0.9999970826360899	WITHOUT_CLASSIFICATION	2.917363910082093E-6	IMPLEMENTATION
// line 1661	WITHOUT_CLASSIFICATION	0.9999952814679753	WITHOUT_CLASSIFICATION	4.718532024730646E-6	IMPLEMENTATION
// line 1672	WITHOUT_CLASSIFICATION	0.9999989662082149	WITHOUT_CLASSIFICATION	1.033791785070575E-6	IMPLEMENTATION
// line 1677	WITHOUT_CLASSIFICATION	0.9999979304379747	WITHOUT_CLASSIFICATION	2.069562025195484E-6	IMPLEMENTATION
// line 1687	WITHOUT_CLASSIFICATION	0.9999973830621119	WITHOUT_CLASSIFICATION	2.6169378879489655E-6	IMPLEMENTATION
// line 1694	WITHOUT_CLASSIFICATION	0.999997510984315	WITHOUT_CLASSIFICATION	2.489015685059054E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999999005101372	WITHOUT_CLASSIFICATION	9.948986279459962E-7	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999984176703687	WITHOUT_CLASSIFICATION	1.582329631355308E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999984537484431	WITHOUT_CLASSIFICATION	1.5462515569185741E-6	IMPLEMENTATION
// line 1733	WITHOUT_CLASSIFICATION	0.999998392063588	WITHOUT_CLASSIFICATION	1.6079364119746797E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999990267174449	WITHOUT_CLASSIFICATION	9.732825551302787E-7	IMPLEMENTATION
// line 1745	WITHOUT_CLASSIFICATION	0.9999981785729652	WITHOUT_CLASSIFICATION	1.8214270347266531E-6	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999980291388049	WITHOUT_CLASSIFICATION	1.9708611951179472E-6	IMPLEMENTATION
// line 1757	WITHOUT_CLASSIFICATION	0.9999982372776284	WITHOUT_CLASSIFICATION	1.7627223716695323E-6	IMPLEMENTATION
// line 1769	WITHOUT_CLASSIFICATION	0.9999979919985222	WITHOUT_CLASSIFICATION	2.008001477795803E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.99999900679317	WITHOUT_CLASSIFICATION	9.93206829954414E-7	IMPLEMENTATION
// line 1775	WITHOUT_CLASSIFICATION	0.9999981652270746	WITHOUT_CLASSIFICATION	1.8347729253253635E-6	IMPLEMENTATION
// line 1784	WITHOUT_CLASSIFICATION	0.9999976225827966	WITHOUT_CLASSIFICATION	2.3774172033424924E-6	IMPLEMENTATION
// line 1808	WITHOUT_CLASSIFICATION	0.9999968410466382	WITHOUT_CLASSIFICATION	3.1589533617685078E-6	IMPLEMENTATION
// line 1814	WITHOUT_CLASSIFICATION	0.999995900923923	WITHOUT_CLASSIFICATION	4.099076076994456E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999956708712308	WITHOUT_CLASSIFICATION	4.329128769231641E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.999997894270222	WITHOUT_CLASSIFICATION	2.10572977795419E-6	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999998983815727	WITHOUT_CLASSIFICATION	1.0161842745219078E-7	IMPLEMENTATION
/*XXX 0;*/	WITHOUT_CLASSIFICATION	0.9999824988307053	WITHOUT_CLASSIFICATION	1.7501169294600047E-5	IMPLEMENTATION
/*                      $$ = $3;*/	WITHOUT_CLASSIFICATION	0.9999909645162032	WITHOUT_CLASSIFICATION	9.035483796936307E-6	IMPLEMENTATION
/*                  }*/	WITHOUT_CLASSIFICATION	0.9999941723426754	WITHOUT_CLASSIFICATION	5.827657324557811E-6	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999788742715771	WITHOUT_CLASSIFICATION	2.112572842293034E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999122743521189	WITHOUT_CLASSIFICATION	8.772564788100322E-5	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997690291187505	WITHOUT_CLASSIFICATION	2.3097088124946592E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998402911233205	WITHOUT_CLASSIFICATION	1.597088766795426E-4	IMPLEMENTATION
/* NOEX_PRIVATE for toplevel */	WITHOUT_CLASSIFICATION	0.9998992914347453	WITHOUT_CLASSIFICATION	1.0070856525464925E-4	IMPLEMENTATION
/*mirko: check*/	WITHOUT_CLASSIFICATION	0.999821114128847	WITHOUT_CLASSIFICATION	1.7888587115293494E-4	IMPLEMENTATION
/* Include pipes on multiple arg type*/	WITHOUT_CLASSIFICATION	0.9999909582782882	WITHOUT_CLASSIFICATION	9.041721711824464E-6	IMPLEMENTATION
// line 529	WITHOUT_CLASSIFICATION	0.9999993067667193	WITHOUT_CLASSIFICATION	6.932332806950148E-7	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999969269756196	WITHOUT_CLASSIFICATION	3.073024380537134E-6	IMPLEMENTATION
/* XXX*/	WITHOUT_CLASSIFICATION	0.9999889624676706	WITHOUT_CLASSIFICATION	1.1037532329382009E-5	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999879816023055	WITHOUT_CLASSIFICATION	1.2018397694599231E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9974280402836374	WITHOUT_CLASSIFICATION	0.002571959716362583	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999597847634645	WITHOUT_CLASSIFICATION	4.021523653541293E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9991356652179079	WITHOUT_CLASSIFICATION	8.643347820920438E-4	IMPLEMENTATION
// line 1827 "DefaultRubyParser.y"	WITHOUT_CLASSIFICATION	0.9999999637094213	WITHOUT_CLASSIFICATION	3.629057871947595E-8	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999959410632335	WITHOUT_CLASSIFICATION	4.058936766552993E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999920050149772	WITHOUT_CLASSIFICATION	7.994985022845805E-6	IMPLEMENTATION
// line 7713 "-"	WITHOUT_CLASSIFICATION	0.9999995397523855	WITHOUT_CLASSIFICATION	4.6024761446776143E-7	IMPLEMENTATION
// local scopes are argument scopes by default	WITHOUT_CLASSIFICATION	0.9999999965648523	WITHOUT_CLASSIFICATION	3.4351477304959764E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999980522509	WITHOUT_CLASSIFICATION	1.9477491520435184E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999980522509	WITHOUT_CLASSIFICATION	1.9477491520435184E-9	IMPLEMENTATION
// We know this is a block scope because a local scope cannot be within a local scope // If topScope was itself it would have created a LocalAsgnNode above.	WITHOUT_CLASSIFICATION	0.9999998304091016	WITHOUT_CLASSIFICATION	1.6959089845894244E-7	IMPLEMENTATION
// ENEBO: 1.9 has CURR nodes for local/block variables.  We don't.  I believe we follow proper logic	WITHOUT_CLASSIFICATION	0.9999814049921375	WITHOUT_CLASSIFICATION	1.8595007862573484E-5	IMPLEMENTATION
// odd...but it is odd in ruby too.	WITHOUT_CLASSIFICATION	0.9999999592507678	WITHOUT_CLASSIFICATION	4.074923223893945E-8	IMPLEMENTATION
// What linenumber will the source think it starts from?	WITHOUT_CLASSIFICATION	0.999999605190675	WITHOUT_CLASSIFICATION	3.948093250211223E-7	IMPLEMENTATION
// Is this inline source (aka -e "...source...")	WITHOUT_CLASSIFICATION	0.999999401387597	WITHOUT_CLASSIFICATION	5.986124030397433E-7	IMPLEMENTATION
// We parse evals more often in source so assume an eval parse.	WITHOUT_CLASSIFICATION	0.9999999839440677	WITHOUT_CLASSIFICATION	1.6055932242219573E-8	IMPLEMENTATION
// Should positions added extra IDE-friendly information and leave in all newline nodes	WITHOUT_CLASSIFICATION	0.9999950428903072	WITHOUT_CLASSIFICATION	4.957109692865284E-6	IMPLEMENTATION
// Will parser parse Duby grammar Extensions	WITHOUT_CLASSIFICATION	0.9999978370160687	WITHOUT_CLASSIFICATION	2.1629839313399123E-6	IMPLEMENTATION
// Should we display extra debug information while parsing?	WITHOUT_CLASSIFICATION	0.9994959841219693	WITHOUT_CLASSIFICATION	5.040158780307293E-4	IMPLEMENTATION
// __END__ marker offset (-1 means none present)	WITHOUT_CLASSIFICATION	0.9999685577191776	WITHOUT_CLASSIFICATION	3.144228082241006E-5	IMPLEMENTATION
// Parser states:	WITHOUT_CLASSIFICATION	0.9999952528750026	WITHOUT_CLASSIFICATION	4.747124997465125E-6	IMPLEMENTATION
// Is the parser current within a singleton (value is number of nested singletons)	WITHOUT_CLASSIFICATION	0.999693730500723	WITHOUT_CLASSIFICATION	3.0626949927701515E-4	IMPLEMENTATION
// Is the parser currently within a method definition	WITHOUT_CLASSIFICATION	0.999971502911228	WITHOUT_CLASSIFICATION	2.849708877190088E-5	IMPLEMENTATION
// LOCALVAR	WITHOUT_CLASSIFICATION	0.9999976534983921	WITHOUT_CLASSIFICATION	2.3465016079962745E-6	IMPLEMENTATION
// CONSTANT	WITHOUT_CLASSIFICATION	0.9999975704055412	WITHOUT_CLASSIFICATION	2.4295944588501217E-6	IMPLEMENTATION
// INSTANCE VARIABLE	WITHOUT_CLASSIFICATION	0.9999928433489044	WITHOUT_CLASSIFICATION	7.156651095628825E-6	IMPLEMENTATION
// Add real top to new top (unless this top is empty [only begin/end nodes or truly empty])	WITHOUT_CLASSIFICATION	0.9999902570383256	WITHOUT_CLASSIFICATION	9.74296167453086E-6	IMPLEMENTATION
/* MRI: block_append */	WITHOUT_CLASSIFICATION	0.9999960297310416	WITHOUT_CLASSIFICATION	3.970268958341092E-6	IMPLEMENTATION
// Reduces overhead in interp by not set position every single line we encounter. 	WITHOUT_CLASSIFICATION	0.9999998424564825	WITHOUT_CLASSIFICATION	1.5754351740317696E-7	IMPLEMENTATION
// Assumption: tail is never a list node	WITHOUT_CLASSIFICATION	0.9989692942102153	WITHOUT_CLASSIFICATION	0.001030705789784618	IMPLEMENTATION
//        return new CallOneArgNode(firstNode.getPosition(), firstNode, operator, new ArrayNode(secondNode.getPosition(), secondNode));	WITHOUT_CLASSIFICATION	0.9999999833095776	WITHOUT_CLASSIFICATION	1.66904222747569E-8	IMPLEMENTATION
// Node	WITHOUT_CLASSIFICATION	0.9999919179211466	WITHOUT_CLASSIFICATION	8.082078853299114E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999935555488335	WITHOUT_CLASSIFICATION	6.444451166542098E-6	IMPLEMENTATION
/*case CONSTNODE:                handleUselessWarn(node, "a constant"); return;*/	WITHOUT_CLASSIFICATION	0.9999996928554654	WITHOUT_CLASSIFICATION	3.071445345705965E-7	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999935555488335	WITHOUT_CLASSIFICATION	6.444451166542098E-6	IMPLEMENTATION
/*case CLASSNODE: case COLON2NODE:                handleUselessWarn(node, "::"); return;*/	WITHOUT_CLASSIFICATION	0.9999998689562559	WITHOUT_CLASSIFICATION	1.3104374406043346E-7	IMPLEMENTATION
/*case SELFNODE:                handleUselessWarn(node, "self"); return;*/	WITHOUT_CLASSIFICATION	0.9999999237582491	WITHOUT_CLASSIFICATION	7.624175092769165E-8	IMPLEMENTATION
// FIXME: DSTR,EVSTR,STR: warning "string literal in condition"	WITHOUT_CLASSIFICATION	0.9997727240649614	WITHOUT_CLASSIFICATION	2.2727593503851662E-4	IMPLEMENTATION
/* MRI: range_op */	WITHOUT_CLASSIFICATION	0.9999860621668922	WITHOUT_CLASSIFICATION	1.3937833107846496E-5	IMPLEMENTATION
// Block and block pass passed in at same time....uh oh	WITHOUT_CLASSIFICATION	0.9999999945694188	WITHOUT_CLASSIFICATION	5.430581180461476E-9	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993082054011	WITHOUT_CLASSIFICATION	6.917945989201967E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993082054011	WITHOUT_CLASSIFICATION	6.917945989201967E-7	IMPLEMENTATION
// foo()	WITHOUT_CLASSIFICATION	0.9999993082054011	WITHOUT_CLASSIFICATION	6.917945989201967E-7	IMPLEMENTATION
// tail must be EvStrNode at this point 	WITHOUT_CLASSIFICATION	0.9999999226204005	WITHOUT_CLASSIFICATION	7.73795995690108E-8	IMPLEMENTATION
//Do not add an empty string node	WITHOUT_CLASSIFICATION	0.9999845642744302	WITHOUT_CLASSIFICATION	1.543572556983101E-5	IMPLEMENTATION
// Zero-Argument declaration	WITHOUT_CLASSIFICATION	0.9999998640296325	WITHOUT_CLASSIFICATION	1.359703675605921E-7	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999971552183555	WITHOUT_CLASSIFICATION	2.8447816443566807E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999971552183555	WITHOUT_CLASSIFICATION	2.8447816443566807E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999971552183555	WITHOUT_CLASSIFICATION	2.8447816443566807E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999971552183555	WITHOUT_CLASSIFICATION	2.8447816443566807E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999971552183555	WITHOUT_CLASSIFICATION	2.8447816443566807E-6	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999971552183555	WITHOUT_CLASSIFICATION	2.8447816443566807E-6	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999888172560719	WITHOUT_CLASSIFICATION	1.11827439282088E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999888172560719	WITHOUT_CLASSIFICATION	1.11827439282088E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999888172560719	WITHOUT_CLASSIFICATION	1.11827439282088E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999888172560719	WITHOUT_CLASSIFICATION	1.11827439282088E-5	IMPLEMENTATION
//yyLen 542	WITHOUT_CLASSIFICATION	0.9999888172560719	WITHOUT_CLASSIFICATION	1.11827439282088E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999585260373058	WITHOUT_CLASSIFICATION	4.1473962694108635E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999585260373058	WITHOUT_CLASSIFICATION	4.1473962694108635E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999585260373058	WITHOUT_CLASSIFICATION	4.1473962694108635E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999585260373058	WITHOUT_CLASSIFICATION	4.1473962694108635E-5	IMPLEMENTATION
//yyDefRed 945	WITHOUT_CLASSIFICATION	0.9999585260373058	WITHOUT_CLASSIFICATION	4.1473962694108635E-5	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997973958119755	WITHOUT_CLASSIFICATION	2.0260418802456185E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997973958119755	WITHOUT_CLASSIFICATION	2.0260418802456185E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997973958119755	WITHOUT_CLASSIFICATION	2.0260418802456185E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997973958119755	WITHOUT_CLASSIFICATION	2.0260418802456185E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997973958119755	WITHOUT_CLASSIFICATION	2.0260418802456185E-4	IMPLEMENTATION
//yyDgoto 152	WITHOUT_CLASSIFICATION	0.9997973958119755	WITHOUT_CLASSIFICATION	2.0260418802456185E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998462324524123	WITHOUT_CLASSIFICATION	1.5376754758763823E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998462324524123	WITHOUT_CLASSIFICATION	1.5376754758763823E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998462324524123	WITHOUT_CLASSIFICATION	1.5376754758763823E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998462324524123	WITHOUT_CLASSIFICATION	1.5376754758763823E-4	IMPLEMENTATION
//yySindex 945	WITHOUT_CLASSIFICATION	0.9998462324524123	WITHOUT_CLASSIFICATION	1.5376754758763823E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999700365879389	WITHOUT_CLASSIFICATION	2.9963412061088853E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999700365879389	WITHOUT_CLASSIFICATION	2.9963412061088853E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999700365879389	WITHOUT_CLASSIFICATION	2.9963412061088853E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999700365879389	WITHOUT_CLASSIFICATION	2.9963412061088853E-4	IMPLEMENTATION
//yyRindex 945	WITHOUT_CLASSIFICATION	0.999700365879389	WITHOUT_CLASSIFICATION	2.9963412061088853E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999749836155363	WITHOUT_CLASSIFICATION	2.5016384463712047E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999749836155363	WITHOUT_CLASSIFICATION	2.5016384463712047E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999749836155363	WITHOUT_CLASSIFICATION	2.5016384463712047E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999749836155363	WITHOUT_CLASSIFICATION	2.5016384463712047E-4	IMPLEMENTATION
//yyGindex 152	WITHOUT_CLASSIFICATION	0.999749836155363	WITHOUT_CLASSIFICATION	2.5016384463712047E-4	IMPLEMENTATION
// dynamically increase	WITHOUT_CLASSIFICATION	0.9999999165175505	WITHOUT_CLASSIFICATION	8.348244949962753E-8	IMPLEMENTATION
// else [default] reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999999876740719	WITHOUT_CLASSIFICATION	1.232592813056312E-8	IMPLEMENTATION
// shift to yyN	WITHOUT_CLASSIFICATION	0.9999274753898167	WITHOUT_CLASSIFICATION	7.252461018320336E-5	IMPLEMENTATION
// reduce (yyN)	WITHOUT_CLASSIFICATION	0.9999993993986086	WITHOUT_CLASSIFICATION	6.006013913193463E-7	IMPLEMENTATION
// leave stack alone	WITHOUT_CLASSIFICATION	0.9999989505069397	WITHOUT_CLASSIFICATION	1.0494930602710252E-6	IMPLEMENTATION
// line 321	WITHOUT_CLASSIFICATION	0.9999981607246017	WITHOUT_CLASSIFICATION	1.8392753983288997E-6	IMPLEMENTATION
// line 351	WITHOUT_CLASSIFICATION	0.9999980176930644	WITHOUT_CLASSIFICATION	1.982306935642311E-6	IMPLEMENTATION
// line 382	WITHOUT_CLASSIFICATION	0.9999995346149175	WITHOUT_CLASSIFICATION	4.653850824588433E-7	IMPLEMENTATION
// line 417	WITHOUT_CLASSIFICATION	0.9999987512946241	WITHOUT_CLASSIFICATION	1.2487053759763606E-6	IMPLEMENTATION
// line 420	WITHOUT_CLASSIFICATION	0.9999996128057558	WITHOUT_CLASSIFICATION	3.871942443125806E-7	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999993456401896	WITHOUT_CLASSIFICATION	6.543598104544771E-7	IMPLEMENTATION
// line 426	WITHOUT_CLASSIFICATION	0.9999991536663169	WITHOUT_CLASSIFICATION	8.463336831033422E-7	IMPLEMENTATION
// line 280	WITHOUT_CLASSIFICATION	0.9999991193674233	WITHOUT_CLASSIFICATION	8.80632576782878E-7	IMPLEMENTATION
// line 283	WITHOUT_CLASSIFICATION	0.9999987559834411	WITHOUT_CLASSIFICATION	1.2440165588444774E-6	IMPLEMENTATION
// line 296	WITHOUT_CLASSIFICATION	0.9999987867374909	WITHOUT_CLASSIFICATION	1.213262509051702E-6	IMPLEMENTATION
// line 324	WITHOUT_CLASSIFICATION	0.9999993913540931	WITHOUT_CLASSIFICATION	6.086459067975976E-7	IMPLEMENTATION
// line 327	WITHOUT_CLASSIFICATION	0.9999995005515815	WITHOUT_CLASSIFICATION	4.994484185350632E-7	IMPLEMENTATION
// line 331	WITHOUT_CLASSIFICATION	0.9999977632696571	WITHOUT_CLASSIFICATION	2.2367303429402907E-6	IMPLEMENTATION
// line 333	WITHOUT_CLASSIFICATION	0.9999992375063522	WITHOUT_CLASSIFICATION	7.624936477178675E-7	IMPLEMENTATION
// line 336	WITHOUT_CLASSIFICATION	0.9999992294072728	WITHOUT_CLASSIFICATION	7.705927271602788E-7	IMPLEMENTATION
// line 342	WITHOUT_CLASSIFICATION	0.9999996399973979	WITHOUT_CLASSIFICATION	3.600026021065808E-7	IMPLEMENTATION
// line 345	WITHOUT_CLASSIFICATION	0.99999932631514	WITHOUT_CLASSIFICATION	6.736848598854341E-7	IMPLEMENTATION
// line 348	WITHOUT_CLASSIFICATION	0.99999907683813	WITHOUT_CLASSIFICATION	9.231618699869191E-7	IMPLEMENTATION
// line 354	WITHOUT_CLASSIFICATION	0.9999993576923972	WITHOUT_CLASSIFICATION	6.423076028128391E-7	IMPLEMENTATION
// line 368	WITHOUT_CLASSIFICATION	0.9999990246038912	WITHOUT_CLASSIFICATION	9.7539610871339E-7	IMPLEMENTATION
// line 377	WITHOUT_CLASSIFICATION	0.9999993931015294	WITHOUT_CLASSIFICATION	6.068984706434179E-7	IMPLEMENTATION
// line 388	WITHOUT_CLASSIFICATION	0.999999045059123	WITHOUT_CLASSIFICATION	9.54940877017028E-7	IMPLEMENTATION
// line 392	WITHOUT_CLASSIFICATION	0.9999996269287689	WITHOUT_CLASSIFICATION	3.7307123111539385E-7	IMPLEMENTATION
// line 397	WITHOUT_CLASSIFICATION	0.9999993943875811	WITHOUT_CLASSIFICATION	6.05612418868716E-7	IMPLEMENTATION
// line 429	WITHOUT_CLASSIFICATION	0.9999991714320643	WITHOUT_CLASSIFICATION	8.285679356746861E-7	IMPLEMENTATION
// line 432	WITHOUT_CLASSIFICATION	0.9999996002581566	WITHOUT_CLASSIFICATION	3.9974184335377646E-7	IMPLEMENTATION
// line 436	WITHOUT_CLASSIFICATION	0.9999991748535633	WITHOUT_CLASSIFICATION	8.251464367255362E-7	IMPLEMENTATION
// line 445	WITHOUT_CLASSIFICATION	0.9999990754769851	WITHOUT_CLASSIFICATION	9.245230149637874E-7	IMPLEMENTATION
// line 448	WITHOUT_CLASSIFICATION	0.9999987331104395	WITHOUT_CLASSIFICATION	1.2668895605062931E-6	IMPLEMENTATION
// line 454	WITHOUT_CLASSIFICATION	0.999999150677633	WITHOUT_CLASSIFICATION	8.493223669545468E-7	IMPLEMENTATION
// line 459	WITHOUT_CLASSIFICATION	0.9999991099293539	WITHOUT_CLASSIFICATION	8.900706461984316E-7	IMPLEMENTATION
// line 466	WITHOUT_CLASSIFICATION	0.9999989876320413	WITHOUT_CLASSIFICATION	1.0123679587374066E-6	IMPLEMENTATION
// line 469	WITHOUT_CLASSIFICATION	0.9999989875564853	WITHOUT_CLASSIFICATION	1.012443514607251E-6	IMPLEMENTATION
// line 478	WITHOUT_CLASSIFICATION	0.9999989981522713	WITHOUT_CLASSIFICATION	1.0018477286928787E-6	IMPLEMENTATION
// line 481	WITHOUT_CLASSIFICATION	0.9999962729484232	WITHOUT_CLASSIFICATION	3.727051576811149E-6	IMPLEMENTATION
// line 488	WITHOUT_CLASSIFICATION	0.9999987320681365	WITHOUT_CLASSIFICATION	1.2679318635094366E-6	IMPLEMENTATION
// line 494	WITHOUT_CLASSIFICATION	0.9999990358015299	WITHOUT_CLASSIFICATION	9.641984700161942E-7	IMPLEMENTATION
// line 497	WITHOUT_CLASSIFICATION	0.9999992030933889	WITHOUT_CLASSIFICATION	7.969066111457683E-7	IMPLEMENTATION
// line 503	WITHOUT_CLASSIFICATION	0.9999994864520806	WITHOUT_CLASSIFICATION	5.135479194314974E-7	IMPLEMENTATION
// line 506	WITHOUT_CLASSIFICATION	0.9999993223342885	WITHOUT_CLASSIFICATION	6.776657115231934E-7	IMPLEMENTATION
// line 509	WITHOUT_CLASSIFICATION	0.999999359966758	WITHOUT_CLASSIFICATION	6.400332419516628E-7	IMPLEMENTATION
// line 512	WITHOUT_CLASSIFICATION	0.9999993850638077	WITHOUT_CLASSIFICATION	6.149361922820816E-7	IMPLEMENTATION
// line 521	WITHOUT_CLASSIFICATION	0.9999979366777745	WITHOUT_CLASSIFICATION	2.063322225554169E-6	IMPLEMENTATION
// line 526	WITHOUT_CLASSIFICATION	0.9999992857040776	WITHOUT_CLASSIFICATION	7.14295922313068E-7	IMPLEMENTATION
// line 540	WITHOUT_CLASSIFICATION	0.9999995055051832	WITHOUT_CLASSIFICATION	4.944948166870512E-7	IMPLEMENTATION
// line 543	WITHOUT_CLASSIFICATION	0.9999993016338583	WITHOUT_CLASSIFICATION	6.983661416785685E-7	IMPLEMENTATION
// line 546	WITHOUT_CLASSIFICATION	0.9999991341825634	WITHOUT_CLASSIFICATION	8.658174365283193E-7	IMPLEMENTATION
// line 566	WITHOUT_CLASSIFICATION	0.9999991284851552	WITHOUT_CLASSIFICATION	8.71514844995257E-7	IMPLEMENTATION
// line 610	WITHOUT_CLASSIFICATION	0.999999374892912	WITHOUT_CLASSIFICATION	6.251070879508865E-7	IMPLEMENTATION
// line 672	WITHOUT_CLASSIFICATION	0.9999996053535781	WITHOUT_CLASSIFICATION	3.946464217915763E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999970504824862	WITHOUT_CLASSIFICATION	2.9495175137686254E-6	IMPLEMENTATION
// line 696	WITHOUT_CLASSIFICATION	0.9999990068971457	WITHOUT_CLASSIFICATION	9.93102854296964E-7	IMPLEMENTATION
// line 772	WITHOUT_CLASSIFICATION	0.9999995957565606	WITHOUT_CLASSIFICATION	4.0424343938476075E-7	IMPLEMENTATION
// line 782	WITHOUT_CLASSIFICATION	0.999999503687858	WITHOUT_CLASSIFICATION	4.963121420609034E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999990589977598	WITHOUT_CLASSIFICATION	9.410022403533476E-7	IMPLEMENTATION
// line 788	WITHOUT_CLASSIFICATION	0.9999989864430477	WITHOUT_CLASSIFICATION	1.0135569523034276E-6	IMPLEMENTATION
// line 791	WITHOUT_CLASSIFICATION	0.999997598425981	WITHOUT_CLASSIFICATION	2.40157401899882E-6	IMPLEMENTATION
// line 534	WITHOUT_CLASSIFICATION	0.9999994079573945	WITHOUT_CLASSIFICATION	5.920426055080196E-7	IMPLEMENTATION
// line 549	WITHOUT_CLASSIFICATION	0.9999991406482499	WITHOUT_CLASSIFICATION	8.593517502140226E-7	IMPLEMENTATION
// line 552	WITHOUT_CLASSIFICATION	0.9999995813585131	WITHOUT_CLASSIFICATION	4.186414870001285E-7	IMPLEMENTATION
// line 558	WITHOUT_CLASSIFICATION	0.9999989080189342	WITHOUT_CLASSIFICATION	1.0919810658019987E-6	IMPLEMENTATION
// line 561	WITHOUT_CLASSIFICATION	0.9999974440397162	WITHOUT_CLASSIFICATION	2.5559602838104223E-6	IMPLEMENTATION
// line 571	WITHOUT_CLASSIFICATION	0.9999980607613068	WITHOUT_CLASSIFICATION	1.9392386931481677E-6	IMPLEMENTATION
// line 574	WITHOUT_CLASSIFICATION	0.9999993510977148	WITHOUT_CLASSIFICATION	6.489022852699437E-7	IMPLEMENTATION
// line 579	WITHOUT_CLASSIFICATION	0.9999993138391967	WITHOUT_CLASSIFICATION	6.861608032400457E-7	IMPLEMENTATION
// line 586	WITHOUT_CLASSIFICATION	0.9999988974498059	WITHOUT_CLASSIFICATION	1.1025501942143493E-6	IMPLEMENTATION
// line 589	WITHOUT_CLASSIFICATION	0.9999989090274206	WITHOUT_CLASSIFICATION	1.0909725794139653E-6	IMPLEMENTATION
// line 592	WITHOUT_CLASSIFICATION	0.9999995784489858	WITHOUT_CLASSIFICATION	4.215510142046927E-7	IMPLEMENTATION
// line 595	WITHOUT_CLASSIFICATION	0.9999991055414647	WITHOUT_CLASSIFICATION	8.94458535471712E-7	IMPLEMENTATION
// line 598	WITHOUT_CLASSIFICATION	0.9999989114319596	WITHOUT_CLASSIFICATION	1.0885680403829389E-6	IMPLEMENTATION
// line 623	WITHOUT_CLASSIFICATION	0.9999993603743738	WITHOUT_CLASSIFICATION	6.396256262246118E-7	IMPLEMENTATION
// line 627	WITHOUT_CLASSIFICATION	0.9999993513888756	WITHOUT_CLASSIFICATION	6.486111244563705E-7	IMPLEMENTATION
// line 630	WITHOUT_CLASSIFICATION	0.9999996023090136	WITHOUT_CLASSIFICATION	3.9769098629406224E-7	IMPLEMENTATION
// line 633	WITHOUT_CLASSIFICATION	0.9999991935889341	WITHOUT_CLASSIFICATION	8.064110659094905E-7	IMPLEMENTATION
// line 639	WITHOUT_CLASSIFICATION	0.9999991932668906	WITHOUT_CLASSIFICATION	8.067331093553656E-7	IMPLEMENTATION
// line 648	WITHOUT_CLASSIFICATION	0.9999987479429878	WITHOUT_CLASSIFICATION	1.2520570122576994E-6	IMPLEMENTATION
// line 657	WITHOUT_CLASSIFICATION	0.9999992997684375	WITHOUT_CLASSIFICATION	7.002315626278117E-7	IMPLEMENTATION
// line 661	WITHOUT_CLASSIFICATION	0.9999970881412189	WITHOUT_CLASSIFICATION	2.911858781094625E-6	IMPLEMENTATION
// line 666	WITHOUT_CLASSIFICATION	0.9999990070324587	WITHOUT_CLASSIFICATION	9.929675412380372E-7	IMPLEMENTATION
// line 678	WITHOUT_CLASSIFICATION	0.9999990038726833	WITHOUT_CLASSIFICATION	9.961273167066566E-7	IMPLEMENTATION
// line 682	WITHOUT_CLASSIFICATION	0.9999993884590423	WITHOUT_CLASSIFICATION	6.115409577541089E-7	IMPLEMENTATION
// line 688	WITHOUT_CLASSIFICATION	0.9999987471272964	WITHOUT_CLASSIFICATION	1.2528727035015452E-6	IMPLEMENTATION
// line 699	WITHOUT_CLASSIFICATION	0.9999990072021833	WITHOUT_CLASSIFICATION	9.92797816741689E-7	IMPLEMENTATION
// line 706	WITHOUT_CLASSIFICATION	0.9999994195925023	WITHOUT_CLASSIFICATION	5.80407497760763E-7	IMPLEMENTATION
// line 708	WITHOUT_CLASSIFICATION	0.9999993559784562	WITHOUT_CLASSIFICATION	6.44021543736627E-7	IMPLEMENTATION
// line 727	WITHOUT_CLASSIFICATION	0.9999993196356145	WITHOUT_CLASSIFICATION	6.80364385589381E-7	IMPLEMENTATION
// line 737	WITHOUT_CLASSIFICATION	0.999999344744446	WITHOUT_CLASSIFICATION	6.55255554010838E-7	IMPLEMENTATION
// line 753	WITHOUT_CLASSIFICATION	0.999999460590162	WITHOUT_CLASSIFICATION	5.394098381054036E-7	IMPLEMENTATION
// line 779	WITHOUT_CLASSIFICATION	0.9999991912593743	WITHOUT_CLASSIFICATION	8.087406256501048E-7	IMPLEMENTATION
// line 801	WITHOUT_CLASSIFICATION	0.9999976542319565	WITHOUT_CLASSIFICATION	2.3457680434773936E-6	IMPLEMENTATION
// line 808	WITHOUT_CLASSIFICATION	0.9999990570060415	WITHOUT_CLASSIFICATION	9.429939585952774E-7	IMPLEMENTATION
// line 811	WITHOUT_CLASSIFICATION	0.9999969036818601	WITHOUT_CLASSIFICATION	3.0963181398199564E-6	IMPLEMENTATION
// line 817	WITHOUT_CLASSIFICATION	0.9999983908935962	WITHOUT_CLASSIFICATION	1.6091064037784966E-6	IMPLEMENTATION
// line 842	WITHOUT_CLASSIFICATION	0.9999993653421679	WITHOUT_CLASSIFICATION	6.346578319819067E-7	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999988123439447	WITHOUT_CLASSIFICATION	1.1876560552343577E-6	IMPLEMENTATION
// line 848	WITHOUT_CLASSIFICATION	0.9999987127592898	WITHOUT_CLASSIFICATION	1.2872407101347407E-6	IMPLEMENTATION
// line 893	WITHOUT_CLASSIFICATION	0.9999989535574813	WITHOUT_CLASSIFICATION	1.0464425187553276E-6	IMPLEMENTATION
// line 899	WITHOUT_CLASSIFICATION	0.9999987098836499	WITHOUT_CLASSIFICATION	1.2901163500732836E-6	IMPLEMENTATION
// line 932	WITHOUT_CLASSIFICATION	0.9999995950847758	WITHOUT_CLASSIFICATION	4.049152242243231E-7	IMPLEMENTATION
// line 944	WITHOUT_CLASSIFICATION	0.9999990290817212	WITHOUT_CLASSIFICATION	9.709182788607616E-7	IMPLEMENTATION
// line 960	WITHOUT_CLASSIFICATION	0.999999368189161	WITHOUT_CLASSIFICATION	6.318108390913461E-7	IMPLEMENTATION
// line 980	WITHOUT_CLASSIFICATION	0.9999992616159341	WITHOUT_CLASSIFICATION	7.383840658304375E-7	IMPLEMENTATION
// line 1004	WITHOUT_CLASSIFICATION	0.9999988805662057	WITHOUT_CLASSIFICATION	1.1194337943297997E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999985503981398	WITHOUT_CLASSIFICATION	1.4496018603037539E-6	IMPLEMENTATION
// line 820	WITHOUT_CLASSIFICATION	0.9999995091222335	WITHOUT_CLASSIFICATION	4.908777664986504E-7	IMPLEMENTATION
// line 826	WITHOUT_CLASSIFICATION	0.9999989270819296	WITHOUT_CLASSIFICATION	1.0729180703729374E-6	IMPLEMENTATION
// line 829	WITHOUT_CLASSIFICATION	0.9999989500948484	WITHOUT_CLASSIFICATION	1.049905151536966E-6	IMPLEMENTATION
// line 832	WITHOUT_CLASSIFICATION	0.9999994872991578	WITHOUT_CLASSIFICATION	5.1270084228654E-7	IMPLEMENTATION
// line 851	WITHOUT_CLASSIFICATION	0.9999966473787822	WITHOUT_CLASSIFICATION	3.352621217747994E-6	IMPLEMENTATION
// line 857	WITHOUT_CLASSIFICATION	0.9999990897738226	WITHOUT_CLASSIFICATION	9.102261774223647E-7	IMPLEMENTATION
// line 860	WITHOUT_CLASSIFICATION	0.9999992002348822	WITHOUT_CLASSIFICATION	7.997651177888483E-7	IMPLEMENTATION
// line 863	WITHOUT_CLASSIFICATION	0.9999989409673229	WITHOUT_CLASSIFICATION	1.0590326771941086E-6	IMPLEMENTATION
// line 866	WITHOUT_CLASSIFICATION	0.9999986960567908	WITHOUT_CLASSIFICATION	1.3039432091492784E-6	IMPLEMENTATION
// line 869	WITHOUT_CLASSIFICATION	0.99999869656864	WITHOUT_CLASSIFICATION	1.3034313600333089E-6	IMPLEMENTATION
// line 875	WITHOUT_CLASSIFICATION	0.9999990525440484	WITHOUT_CLASSIFICATION	9.474559516785972E-7	IMPLEMENTATION
// line 884	WITHOUT_CLASSIFICATION	0.999998778839464	WITHOUT_CLASSIFICATION	1.2211605360780107E-6	IMPLEMENTATION
// line 887	WITHOUT_CLASSIFICATION	0.9999989767964133	WITHOUT_CLASSIFICATION	1.0232035867020013E-6	IMPLEMENTATION
// line 890	WITHOUT_CLASSIFICATION	0.9999992559746385	WITHOUT_CLASSIFICATION	7.440253616276766E-7	IMPLEMENTATION
// line 902	WITHOUT_CLASSIFICATION	0.9999996330173636	WITHOUT_CLASSIFICATION	3.6698263649336826E-7	IMPLEMENTATION
// line 909	WITHOUT_CLASSIFICATION	0.9999992432515526	WITHOUT_CLASSIFICATION	7.567484472658225E-7	IMPLEMENTATION
// line 912	WITHOUT_CLASSIFICATION	0.9999992453303962	WITHOUT_CLASSIFICATION	7.546696037739678E-7	IMPLEMENTATION
// line 916	WITHOUT_CLASSIFICATION	0.9999983158566033	WITHOUT_CLASSIFICATION	1.6841433966848827E-6	IMPLEMENTATION
// line 922	WITHOUT_CLASSIFICATION	0.9999995016487842	WITHOUT_CLASSIFICATION	4.983512159328591E-7	IMPLEMENTATION
// line 928	WITHOUT_CLASSIFICATION	0.9999989343706447	WITHOUT_CLASSIFICATION	1.065629355327334E-6	IMPLEMENTATION
// line 941	WITHOUT_CLASSIFICATION	0.9999970095647824	WITHOUT_CLASSIFICATION	2.990435217629763E-6	IMPLEMENTATION
// line 947	WITHOUT_CLASSIFICATION	0.9999991884459035	WITHOUT_CLASSIFICATION	8.115540965015811E-7	IMPLEMENTATION
// line 951	WITHOUT_CLASSIFICATION	0.9999973601530447	WITHOUT_CLASSIFICATION	2.6398469552326527E-6	IMPLEMENTATION
// line 955	WITHOUT_CLASSIFICATION	0.9999990619766527	WITHOUT_CLASSIFICATION	9.380233474002599E-7	IMPLEMENTATION
// line 965	WITHOUT_CLASSIFICATION	0.9999990489588038	WITHOUT_CLASSIFICATION	9.510411960753548E-7	IMPLEMENTATION
// line 969	WITHOUT_CLASSIFICATION	0.9999989698183045	WITHOUT_CLASSIFICATION	1.0301816955064428E-6	IMPLEMENTATION
// line 977	WITHOUT_CLASSIFICATION	0.9999991900894504	WITHOUT_CLASSIFICATION	8.099105495828188E-7	IMPLEMENTATION
// line 983	WITHOUT_CLASSIFICATION	0.9999989569816654	WITHOUT_CLASSIFICATION	1.0430183345934806E-6	IMPLEMENTATION
// line 1013	WITHOUT_CLASSIFICATION	0.9999990266095515	WITHOUT_CLASSIFICATION	9.733904485254695E-7	IMPLEMENTATION
// line 1023	WITHOUT_CLASSIFICATION	0.9999990832368247	WITHOUT_CLASSIFICATION	9.16763175188562E-7	IMPLEMENTATION
// line 1035	WITHOUT_CLASSIFICATION	0.9999989376410281	WITHOUT_CLASSIFICATION	1.0623589719827294E-6	IMPLEMENTATION
// line 1041	WITHOUT_CLASSIFICATION	0.9999974566201227	WITHOUT_CLASSIFICATION	2.543379877236019E-6	IMPLEMENTATION
// line 1043	WITHOUT_CLASSIFICATION	0.9999988575041514	WITHOUT_CLASSIFICATION	1.142495848593958E-6	IMPLEMENTATION
// line 1054	WITHOUT_CLASSIFICATION	0.9999988833639618	WITHOUT_CLASSIFICATION	1.1166360381692009E-6	IMPLEMENTATION
// line 1057	WITHOUT_CLASSIFICATION	0.9999990643704927	WITHOUT_CLASSIFICATION	9.35629507340873E-7	IMPLEMENTATION
// line 1060	WITHOUT_CLASSIFICATION	0.9999986512327402	WITHOUT_CLASSIFICATION	1.348767259811184E-6	IMPLEMENTATION
// line 1069	WITHOUT_CLASSIFICATION	0.9999984828494465	WITHOUT_CLASSIFICATION	1.5171505535771741E-6	IMPLEMENTATION
// line 1075	WITHOUT_CLASSIFICATION	0.9999991419422514	WITHOUT_CLASSIFICATION	8.580577485828261E-7	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999990965203492	WITHOUT_CLASSIFICATION	9.034796507149298E-7	IMPLEMENTATION
// line 1111	WITHOUT_CLASSIFICATION	0.99999617878199	WITHOUT_CLASSIFICATION	3.821218009953682E-6	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999991137587796	WITHOUT_CLASSIFICATION	8.862412204490113E-7	IMPLEMENTATION
// line 1130	WITHOUT_CLASSIFICATION	0.9999991575201552	WITHOUT_CLASSIFICATION	8.424798448428689E-7	IMPLEMENTATION
// line 1140	WITHOUT_CLASSIFICATION	0.9999987948002217	WITHOUT_CLASSIFICATION	1.2051997782973333E-6	IMPLEMENTATION
// line 1158	WITHOUT_CLASSIFICATION	0.9999976421092138	WITHOUT_CLASSIFICATION	2.3578907862621086E-6	IMPLEMENTATION
// line 1204	WITHOUT_CLASSIFICATION	0.9999991219317531	WITHOUT_CLASSIFICATION	8.780682468990568E-7	IMPLEMENTATION
// line 1207	WITHOUT_CLASSIFICATION	0.9999993908513013	WITHOUT_CLASSIFICATION	6.09148698765682E-7	IMPLEMENTATION
// line 1247	WITHOUT_CLASSIFICATION	0.9999985558435798	WITHOUT_CLASSIFICATION	1.444156420203286E-6	IMPLEMENTATION
// line 1251	WITHOUT_CLASSIFICATION	0.9999971028329215	WITHOUT_CLASSIFICATION	2.89716707849198E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999966922486321	WITHOUT_CLASSIFICATION	3.3077513679675143E-6	IMPLEMENTATION
// line 1078	WITHOUT_CLASSIFICATION	0.9999988313657687	WITHOUT_CLASSIFICATION	1.168634231219609E-6	IMPLEMENTATION
// line 1084	WITHOUT_CLASSIFICATION	0.9999983018128729	WITHOUT_CLASSIFICATION	1.6981871271356003E-6	IMPLEMENTATION
// line 1087	WITHOUT_CLASSIFICATION	0.9999985770983892	WITHOUT_CLASSIFICATION	1.422901610727385E-6	IMPLEMENTATION
// line 1090	WITHOUT_CLASSIFICATION	0.9999988737073049	WITHOUT_CLASSIFICATION	1.1262926951872332E-6	IMPLEMENTATION
// line 1093	WITHOUT_CLASSIFICATION	0.9999988379627515	WITHOUT_CLASSIFICATION	1.1620372485273331E-6	IMPLEMENTATION
// line 1114	WITHOUT_CLASSIFICATION	0.9999980038050345	WITHOUT_CLASSIFICATION	1.9961949656042935E-6	IMPLEMENTATION
// line 1116	WITHOUT_CLASSIFICATION	0.9999978731518151	WITHOUT_CLASSIFICATION	2.1268481848326296E-6	IMPLEMENTATION
// line 1118	WITHOUT_CLASSIFICATION	0.9999965945710672	WITHOUT_CLASSIFICATION	3.405428932776801E-6	IMPLEMENTATION
// line 1124	WITHOUT_CLASSIFICATION	0.9999985595711652	WITHOUT_CLASSIFICATION	1.4404288348226157E-6	IMPLEMENTATION
// line 1126	WITHOUT_CLASSIFICATION	0.9999984869112323	WITHOUT_CLASSIFICATION	1.5130887677285442E-6	IMPLEMENTATION
// line 1138	WITHOUT_CLASSIFICATION	0.9999978459493979	WITHOUT_CLASSIFICATION	2.1540506021050927E-6	IMPLEMENTATION
// line 1144	WITHOUT_CLASSIFICATION	0.9999980118458488	WITHOUT_CLASSIFICATION	1.9881541511885983E-6	IMPLEMENTATION
// line 1149	WITHOUT_CLASSIFICATION	0.9999979064829798	WITHOUT_CLASSIFICATION	2.0935170201737864E-6	IMPLEMENTATION
// line 1155	WITHOUT_CLASSIFICATION	0.9999980602973066	WITHOUT_CLASSIFICATION	1.9397026933512753E-6	IMPLEMENTATION
// line 1162	WITHOUT_CLASSIFICATION	0.9999989609798664	WITHOUT_CLASSIFICATION	1.039020133606959E-6	IMPLEMENTATION
// line 1173	WITHOUT_CLASSIFICATION	0.9999986846997292	WITHOUT_CLASSIFICATION	1.31530027086889E-6	IMPLEMENTATION
// line 1179	WITHOUT_CLASSIFICATION	0.9999983749288804	WITHOUT_CLASSIFICATION	1.6250711195180867E-6	IMPLEMENTATION
// line 1182	WITHOUT_CLASSIFICATION	0.9999983425654273	WITHOUT_CLASSIFICATION	1.6574345726210556E-6	IMPLEMENTATION
// line 1190	WITHOUT_CLASSIFICATION	0.9999987770116029	WITHOUT_CLASSIFICATION	1.2229883971354706E-6	IMPLEMENTATION
// line 1196	WITHOUT_CLASSIFICATION	0.9999978556308202	WITHOUT_CLASSIFICATION	2.1443691798607984E-6	IMPLEMENTATION
// line 1213	WITHOUT_CLASSIFICATION	0.9999985431223192	WITHOUT_CLASSIFICATION	1.456877680809531E-6	IMPLEMENTATION
// line 1217	WITHOUT_CLASSIFICATION	0.9999986130438524	WITHOUT_CLASSIFICATION	1.3869561476783149E-6	IMPLEMENTATION
// line 1231	WITHOUT_CLASSIFICATION	0.9999975373894863	WITHOUT_CLASSIFICATION	2.4626105137065867E-6	IMPLEMENTATION
// line 1236	WITHOUT_CLASSIFICATION	0.9999986290467113	WITHOUT_CLASSIFICATION	1.3709532887594091E-6	IMPLEMENTATION
// line 1244	WITHOUT_CLASSIFICATION	0.9999982722759377	WITHOUT_CLASSIFICATION	1.7277240622503298E-6	IMPLEMENTATION
// line 1254	WITHOUT_CLASSIFICATION	0.9999984828099283	WITHOUT_CLASSIFICATION	1.5171900716746469E-6	IMPLEMENTATION
// line 1258	WITHOUT_CLASSIFICATION	0.9999979774905838	WITHOUT_CLASSIFICATION	2.022509416185667E-6	IMPLEMENTATION
// line 1264	WITHOUT_CLASSIFICATION	0.9999982701083159	WITHOUT_CLASSIFICATION	1.7298916840936986E-6	IMPLEMENTATION
// line 1270	WITHOUT_CLASSIFICATION	0.9999992928120758	WITHOUT_CLASSIFICATION	7.07187924257491E-7	IMPLEMENTATION
// line 1273	WITHOUT_CLASSIFICATION	0.9999988475518162	WITHOUT_CLASSIFICATION	1.1524481837004166E-6	IMPLEMENTATION
// line 1276	WITHOUT_CLASSIFICATION	0.9999985558425508	WITHOUT_CLASSIFICATION	1.4441574492183528E-6	IMPLEMENTATION
// line 1279	WITHOUT_CLASSIFICATION	0.9999985713188788	WITHOUT_CLASSIFICATION	1.428681121151504E-6	IMPLEMENTATION
// line 1282	WITHOUT_CLASSIFICATION	0.9999986570951814	WITHOUT_CLASSIFICATION	1.3429048186030966E-6	IMPLEMENTATION
// line 1289	WITHOUT_CLASSIFICATION	0.9999977198581201	WITHOUT_CLASSIFICATION	2.2801418798223055E-6	IMPLEMENTATION
// line 1292	WITHOUT_CLASSIFICATION	0.999998943952721	WITHOUT_CLASSIFICATION	1.0560472789631092E-6	IMPLEMENTATION
// line 1295	WITHOUT_CLASSIFICATION	0.9999983554966128	WITHOUT_CLASSIFICATION	1.6445033873337701E-6	IMPLEMENTATION
// line 1298	WITHOUT_CLASSIFICATION	0.9999977444144371	WITHOUT_CLASSIFICATION	2.2555855628977753E-6	IMPLEMENTATION
// line 1305	WITHOUT_CLASSIFICATION	0.9999987795095596	WITHOUT_CLASSIFICATION	1.220490440441043E-6	IMPLEMENTATION
// line 1348	WITHOUT_CLASSIFICATION	0.9999974730363324	WITHOUT_CLASSIFICATION	2.526963667682729E-6	IMPLEMENTATION
// line 1387	WITHOUT_CLASSIFICATION	0.9999979088383917	WITHOUT_CLASSIFICATION	2.091161608274405E-6	IMPLEMENTATION
// line 1392	WITHOUT_CLASSIFICATION	0.9999989786187137	WITHOUT_CLASSIFICATION	1.0213812864062126E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999967698489103	WITHOUT_CLASSIFICATION	3.2301510897130793E-6	IMPLEMENTATION
// line 1462	WITHOUT_CLASSIFICATION	0.9999987395523674	WITHOUT_CLASSIFICATION	1.2604476326674052E-6	IMPLEMENTATION
// line 1470	WITHOUT_CLASSIFICATION	0.9999989949232481	WITHOUT_CLASSIFICATION	1.005076752007516E-6	IMPLEMENTATION
// line 1496	WITHOUT_CLASSIFICATION	0.9999974121091044	WITHOUT_CLASSIFICATION	2.5878908956079104E-6	IMPLEMENTATION
// line 1502	WITHOUT_CLASSIFICATION	0.9999991806916451	WITHOUT_CLASSIFICATION	8.193083549725349E-7	IMPLEMENTATION
// line 1595	WITHOUT_CLASSIFICATION	0.9999976430781974	WITHOUT_CLASSIFICATION	2.3569218026653714E-6	IMPLEMENTATION
// line 1598	WITHOUT_CLASSIFICATION	0.9999971282519705	WITHOUT_CLASSIFICATION	2.871748029403369E-6	IMPLEMENTATION
// line 1308	WITHOUT_CLASSIFICATION	0.9999982145865043	WITHOUT_CLASSIFICATION	1.7854134957760336E-6	IMPLEMENTATION
// line 1311	WITHOUT_CLASSIFICATION	0.9999969004968103	WITHOUT_CLASSIFICATION	3.0995031896107584E-6	IMPLEMENTATION
// line 1317	WITHOUT_CLASSIFICATION	0.999998389258944	WITHOUT_CLASSIFICATION	1.6107410560486758E-6	IMPLEMENTATION
// line 1323	WITHOUT_CLASSIFICATION	0.9999983409674903	WITHOUT_CLASSIFICATION	1.6590325097086383E-6	IMPLEMENTATION
// line 1326	WITHOUT_CLASSIFICATION	0.9999982568661422	WITHOUT_CLASSIFICATION	1.743133857863135E-6	IMPLEMENTATION
// line 1329	WITHOUT_CLASSIFICATION	0.9999982934569682	WITHOUT_CLASSIFICATION	1.7065430317124365E-6	IMPLEMENTATION
// line 1337	WITHOUT_CLASSIFICATION	0.9999983388180682	WITHOUT_CLASSIFICATION	1.661181931786949E-6	IMPLEMENTATION
// line 1342	WITHOUT_CLASSIFICATION	0.9999990145667673	WITHOUT_CLASSIFICATION	9.854332326870083E-7	IMPLEMENTATION
// line 1345	WITHOUT_CLASSIFICATION	0.9999981559269748	WITHOUT_CLASSIFICATION	1.8440730250897081E-6	IMPLEMENTATION
// line 1354	WITHOUT_CLASSIFICATION	0.9999982418156333	WITHOUT_CLASSIFICATION	1.7581843666866265E-6	IMPLEMENTATION
// line 1359	WITHOUT_CLASSIFICATION	0.9999981511565498	WITHOUT_CLASSIFICATION	1.8488434502138278E-6	IMPLEMENTATION
// line 1366	WITHOUT_CLASSIFICATION	0.9999978913109405	WITHOUT_CLASSIFICATION	2.1086890594201826E-6	IMPLEMENTATION
// line 1369	WITHOUT_CLASSIFICATION	0.9999978911535633	WITHOUT_CLASSIFICATION	2.1088464366465673E-6	IMPLEMENTATION
// line 1373	WITHOUT_CLASSIFICATION	0.9999983461371628	WITHOUT_CLASSIFICATION	1.6538628371706946E-6	IMPLEMENTATION
// line 1377	WITHOUT_CLASSIFICATION	0.9999983387234836	WITHOUT_CLASSIFICATION	1.661276516470244E-6	IMPLEMENTATION
// line 1383	WITHOUT_CLASSIFICATION	0.999997374560691	WITHOUT_CLASSIFICATION	2.625439309028228E-6	IMPLEMENTATION
// line 1399	WITHOUT_CLASSIFICATION	0.9999979129984011	WITHOUT_CLASSIFICATION	2.0870015989182622E-6	IMPLEMENTATION
// line 1401	WITHOUT_CLASSIFICATION	0.9999971131972394	WITHOUT_CLASSIFICATION	2.8868027605805084E-6	IMPLEMENTATION
// line 1406	WITHOUT_CLASSIFICATION	0.9999979941561	WITHOUT_CLASSIFICATION	2.005843899930788E-6	IMPLEMENTATION
// line 1417	WITHOUT_CLASSIFICATION	0.9999980297990896	WITHOUT_CLASSIFICATION	1.9702009104672394E-6	IMPLEMENTATION
// line 1424	WITHOUT_CLASSIFICATION	0.9999979302352023	WITHOUT_CLASSIFICATION	2.0697647976166596E-6	IMPLEMENTATION
// line 1427	WITHOUT_CLASSIFICATION	0.999998307345881	WITHOUT_CLASSIFICATION	1.6926541189911483E-6	IMPLEMENTATION
// line 1430	WITHOUT_CLASSIFICATION	0.9999989734335817	WITHOUT_CLASSIFICATION	1.0265664183033862E-6	IMPLEMENTATION
// line 1433	WITHOUT_CLASSIFICATION	0.999997918398925	WITHOUT_CLASSIFICATION	2.0816010749519587E-6	IMPLEMENTATION
// line 1436	WITHOUT_CLASSIFICATION	0.9999978961469338	WITHOUT_CLASSIFICATION	2.103853066151147E-6	IMPLEMENTATION
// line 1442	WITHOUT_CLASSIFICATION	0.9999987403461171	WITHOUT_CLASSIFICATION	1.2596538828638982E-6	IMPLEMENTATION
// line 1445	WITHOUT_CLASSIFICATION	0.9999976427695817	WITHOUT_CLASSIFICATION	2.357230418319199E-6	IMPLEMENTATION
// line 1458	WITHOUT_CLASSIFICATION	0.9999971231378109	WITHOUT_CLASSIFICATION	2.8768621890332917E-6	IMPLEMENTATION
// line 1464	WITHOUT_CLASSIFICATION	0.9999975416419319	WITHOUT_CLASSIFICATION	2.4583580681574003E-6	IMPLEMENTATION
// line 1489	WITHOUT_CLASSIFICATION	0.9999967595129192	WITHOUT_CLASSIFICATION	3.2404870806877296E-6	IMPLEMENTATION
// line 1493	WITHOUT_CLASSIFICATION	0.9999979266564536	WITHOUT_CLASSIFICATION	2.0733435464405964E-6	IMPLEMENTATION
// line 1507	WITHOUT_CLASSIFICATION	0.999998903902324	WITHOUT_CLASSIFICATION	1.0960976758653646E-6	IMPLEMENTATION
// line 1519	WITHOUT_CLASSIFICATION	0.9999977091268714	WITHOUT_CLASSIFICATION	2.2908731285723506E-6	IMPLEMENTATION
// line 1532	WITHOUT_CLASSIFICATION	0.9999991608874909	WITHOUT_CLASSIFICATION	8.39112509076141E-7	IMPLEMENTATION
// line 1538	WITHOUT_CLASSIFICATION	0.9999978390766857	WITHOUT_CLASSIFICATION	2.1609233142693662E-6	IMPLEMENTATION
// line 1542	WITHOUT_CLASSIFICATION	0.9999988799403052	WITHOUT_CLASSIFICATION	1.1200596948555024E-6	IMPLEMENTATION
// line 1557	WITHOUT_CLASSIFICATION	0.9999981885488045	WITHOUT_CLASSIFICATION	1.8114511954610324E-6	IMPLEMENTATION
// line 1573	WITHOUT_CLASSIFICATION	0.9999985345375332	WITHOUT_CLASSIFICATION	1.4654624667913198E-6	IMPLEMENTATION
// line 1591	WITHOUT_CLASSIFICATION	0.9999958235141583	WITHOUT_CLASSIFICATION	4.17648584182163E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999976054296855	WITHOUT_CLASSIFICATION	2.3945703145199796E-6	IMPLEMENTATION
// line 1629	WITHOUT_CLASSIFICATION	0.9999978823628569	WITHOUT_CLASSIFICATION	2.1176371429771937E-6	IMPLEMENTATION
// line 1632	WITHOUT_CLASSIFICATION	0.9999989656967876	WITHOUT_CLASSIFICATION	1.034303212413377E-6	IMPLEMENTATION
// line 1705	WITHOUT_CLASSIFICATION	0.999999005101372	WITHOUT_CLASSIFICATION	9.948986279459962E-7	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999980646445757	WITHOUT_CLASSIFICATION	1.9353554242376044E-6	IMPLEMENTATION
// line 1725	WITHOUT_CLASSIFICATION	0.9999984537484431	WITHOUT_CLASSIFICATION	1.5462515569185741E-6	IMPLEMENTATION
// line 1742	WITHOUT_CLASSIFICATION	0.9999990267174449	WITHOUT_CLASSIFICATION	9.732825551302787E-7	IMPLEMENTATION
// line 1749	WITHOUT_CLASSIFICATION	0.9999980291388049	WITHOUT_CLASSIFICATION	1.9708611951179472E-6	IMPLEMENTATION
// line 1818	WITHOUT_CLASSIFICATION	0.9999956708712308	WITHOUT_CLASSIFICATION	4.329128769231641E-6	IMPLEMENTATION
// line 1822	WITHOUT_CLASSIFICATION	0.999997894270222	WITHOUT_CLASSIFICATION	2.10572977795419E-6	IMPLEMENTATION
// line 1607	WITHOUT_CLASSIFICATION	0.9999985825003836	WITHOUT_CLASSIFICATION	1.4174996163901058E-6	IMPLEMENTATION
// line 1610	WITHOUT_CLASSIFICATION	0.9999989866829389	WITHOUT_CLASSIFICATION	1.013317061064729E-6	IMPLEMENTATION
// line 1622	WITHOUT_CLASSIFICATION	0.999998730463569	WITHOUT_CLASSIFICATION	1.2695364309822583E-6	IMPLEMENTATION
// line 1625	WITHOUT_CLASSIFICATION	0.9999980211059205	WITHOUT_CLASSIFICATION	1.978894079596346E-6	IMPLEMENTATION
// line 1636	WITHOUT_CLASSIFICATION	0.9999978879889722	WITHOUT_CLASSIFICATION	2.112011027902668E-6	IMPLEMENTATION
// line 1639	WITHOUT_CLASSIFICATION	0.9999978867323798	WITHOUT_CLASSIFICATION	2.1132676201910775E-6	IMPLEMENTATION
// line 1647	WITHOUT_CLASSIFICATION	0.9999979458203903	WITHOUT_CLASSIFICATION	2.0541796096906853E-6	IMPLEMENTATION
// line 1651	WITHOUT_CLASSIFICATION	0.9999958203673018	WITHOUT_CLASSIFICATION	4.17963269815847E-6	IMPLEMENTATION
// line 1657	WITHOUT_CLASSIFICATION	0.9999981662632321	WITHOUT_CLASSIFICATION	1.8337367679104634E-6	IMPLEMENTATION
// line 1660	WITHOUT_CLASSIFICATION	0.9999984057846997	WITHOUT_CLASSIFICATION	1.5942153003770459E-6	IMPLEMENTATION
// line 1663	WITHOUT_CLASSIFICATION	0.9999978889974349	WITHOUT_CLASSIFICATION	2.111002564976249E-6	IMPLEMENTATION
// line 1678	WITHOUT_CLASSIFICATION	0.9999973906079546	WITHOUT_CLASSIFICATION	2.609392045370928E-6	IMPLEMENTATION
// line 1702	WITHOUT_CLASSIFICATION	0.9999993859844157	WITHOUT_CLASSIFICATION	6.140155841597811E-7	IMPLEMENTATION
// line 1711	WITHOUT_CLASSIFICATION	0.9999972519035936	WITHOUT_CLASSIFICATION	2.748096406397155E-6	IMPLEMENTATION
// line 1719	WITHOUT_CLASSIFICATION	0.9999980703290081	WITHOUT_CLASSIFICATION	1.9296709919837206E-6	IMPLEMENTATION
// line 1722	WITHOUT_CLASSIFICATION	0.9999990075884372	WITHOUT_CLASSIFICATION	9.9241156277728E-7	IMPLEMENTATION
// line 1731	WITHOUT_CLASSIFICATION	0.9999970809503126	WITHOUT_CLASSIFICATION	2.919049687451591E-6	IMPLEMENTATION
// line 1734	WITHOUT_CLASSIFICATION	0.9999985389196973	WITHOUT_CLASSIFICATION	1.4610803027031193E-6	IMPLEMENTATION
// line 1738	WITHOUT_CLASSIFICATION	0.9999979725286288	WITHOUT_CLASSIFICATION	2.027471371345695E-6	IMPLEMENTATION
// line 1746	WITHOUT_CLASSIFICATION	0.9999980143308334	WITHOUT_CLASSIFICATION	1.9856691666435393E-6	IMPLEMENTATION
// line 1756	WITHOUT_CLASSIFICATION	0.9999982215009345	WITHOUT_CLASSIFICATION	1.778499065423506E-6	IMPLEMENTATION
// line 1758	WITHOUT_CLASSIFICATION	0.9999977704884907	WITHOUT_CLASSIFICATION	2.2295115093032142E-6	IMPLEMENTATION
// line 1761	WITHOUT_CLASSIFICATION	0.9999963549802406	WITHOUT_CLASSIFICATION	3.645019759461813E-6	IMPLEMENTATION
// line 1767	WITHOUT_CLASSIFICATION	0.9999979904239656	WITHOUT_CLASSIFICATION	2.0095760343668414E-6	IMPLEMENTATION
// line 1776	WITHOUT_CLASSIFICATION	0.9999979914161813	WITHOUT_CLASSIFICATION	2.0085838186843053E-6	IMPLEMENTATION
// line 1782	WITHOUT_CLASSIFICATION	0.999998780584927	WITHOUT_CLASSIFICATION	1.2194150730349527E-6	IMPLEMENTATION
// line 1785	WITHOUT_CLASSIFICATION	0.9999976880042317	WITHOUT_CLASSIFICATION	2.311995768315486E-6	IMPLEMENTATION
// line 1788	WITHOUT_CLASSIFICATION	0.9999975097411712	WITHOUT_CLASSIFICATION	2.4902588288004265E-6	IMPLEMENTATION
// line 1791	WITHOUT_CLASSIFICATION	0.9999963496967899	WITHOUT_CLASSIFICATION	3.650303210099128E-6	IMPLEMENTATION
// line 1797	WITHOUT_CLASSIFICATION	0.9999980159489064	WITHOUT_CLASSIFICATION	1.9840510936318126E-6	IMPLEMENTATION
// line 1800	WITHOUT_CLASSIFICATION	0.9999979089744667	WITHOUT_CLASSIFICATION	2.091025533255517E-6	IMPLEMENTATION
// line 1803	WITHOUT_CLASSIFICATION	0.9999974346567507	WITHOUT_CLASSIFICATION	2.5653432492570507E-6	IMPLEMENTATION
// line 1806	WITHOUT_CLASSIFICATION	0.9999966148007131	WITHOUT_CLASSIFICATION	3.3851992868388764E-6	IMPLEMENTATION
// line 1809	WITHOUT_CLASSIFICATION	0.9999968028219672	WITHOUT_CLASSIFICATION	3.19717803281136E-6	IMPLEMENTATION
// line 1815	WITHOUT_CLASSIFICATION	0.9999960188114808	WITHOUT_CLASSIFICATION	3.981188519193632E-6	IMPLEMENTATION
// line 1825	WITHOUT_CLASSIFICATION	0.9999967164419606	WITHOUT_CLASSIFICATION	3.283558039379544E-6	IMPLEMENTATION
// line 1828	WITHOUT_CLASSIFICATION	0.999996437246877	WITHOUT_CLASSIFICATION	3.5627531228549773E-6	IMPLEMENTATION
// line 1831	WITHOUT_CLASSIFICATION	0.999993630883782	WITHOUT_CLASSIFICATION	6.369116217983594E-6	IMPLEMENTATION
// line 1847	WITHOUT_CLASSIFICATION	0.9999965825133861	WITHOUT_CLASSIFICATION	3.417486613801057E-6	IMPLEMENTATION
/*$8 == null ? NilImplicitNode.NIL : $8;*/	WITHOUT_CLASSIFICATION	0.9997690291187505	WITHOUT_CLASSIFICATION	2.3097088124946592E-4	IMPLEMENTATION
/*$5 == null ? NilImplicitNode.NIL : $5;*/	WITHOUT_CLASSIFICATION	0.9998402911233205	WITHOUT_CLASSIFICATION	1.597088766795426E-4	IMPLEMENTATION
/* .setPosFrom($2);*/	WITHOUT_CLASSIFICATION	0.9999969269756196	WITHOUT_CLASSIFICATION	3.073024380537134E-6	IMPLEMENTATION
/* zero length array */	WITHOUT_CLASSIFICATION	0.9999879816023055	WITHOUT_CLASSIFICATION	1.2018397694599231E-5	IMPLEMENTATION
/* DStrNode: :"some text #{some expression}"*/	WITHOUT_CLASSIFICATION	0.9974280402836374	WITHOUT_CLASSIFICATION	0.002571959716362583	IMPLEMENTATION
/* StrNode: :"some text"*/	WITHOUT_CLASSIFICATION	0.9999597847634645	WITHOUT_CLASSIFICATION	4.021523653541293E-5	IMPLEMENTATION
/* EvStrNode :"#{some expression}"*/	WITHOUT_CLASSIFICATION	0.9991356652179079	WITHOUT_CLASSIFICATION	8.643347820920438E-4	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999992919729203	WITHOUT_CLASSIFICATION	7.080270796918348E-6	IMPLEMENTATION
// line 1854	WITHOUT_CLASSIFICATION	0.9999963590347947	WITHOUT_CLASSIFICATION	3.640965205384603E-6	IMPLEMENTATION
// line 1869	WITHOUT_CLASSIFICATION	0.999995631348321	WITHOUT_CLASSIFICATION	4.368651678973832E-6	IMPLEMENTATION
// line 1872	WITHOUT_CLASSIFICATION	0.9999982809983774	WITHOUT_CLASSIFICATION	1.7190016226373651E-6	IMPLEMENTATION
// line 1877	WITHOUT_CLASSIFICATION	0.999996558709318	WITHOUT_CLASSIFICATION	3.4412906820125618E-6	IMPLEMENTATION
// line 1886	WITHOUT_CLASSIFICATION	0.9999956432466507	WITHOUT_CLASSIFICATION	4.356753349276632E-6	IMPLEMENTATION
// line 1898	WITHOUT_CLASSIFICATION	0.999995676384256	WITHOUT_CLASSIFICATION	4.32361574392508E-6	IMPLEMENTATION
// line 1902	WITHOUT_CLASSIFICATION	0.9999990513918205	WITHOUT_CLASSIFICATION	9.486081793487029E-7	IMPLEMENTATION
// line 1905	WITHOUT_CLASSIFICATION	0.9999983282699091	WITHOUT_CLASSIFICATION	1.671730090929261E-6	IMPLEMENTATION
// line 1911	WITHOUT_CLASSIFICATION	0.9999960385367432	WITHOUT_CLASSIFICATION	3.961463256728621E-6	IMPLEMENTATION
// line 1918	WITHOUT_CLASSIFICATION	0.9999956864446147	WITHOUT_CLASSIFICATION	4.313555385416709E-6	IMPLEMENTATION
// line 1935	WITHOUT_CLASSIFICATION	0.9999980245713121	WITHOUT_CLASSIFICATION	1.9754286878875073E-6	IMPLEMENTATION
// line 1938	WITHOUT_CLASSIFICATION	0.9999973045041993	WITHOUT_CLASSIFICATION	2.695495800671734E-6	IMPLEMENTATION
// line 1942	WITHOUT_CLASSIFICATION	0.9999986528881503	WITHOUT_CLASSIFICATION	1.3471118497614132E-6	IMPLEMENTATION
// line 1948	WITHOUT_CLASSIFICATION	0.9999965992447067	WITHOUT_CLASSIFICATION	3.400755293245181E-6	IMPLEMENTATION
// line 1960	WITHOUT_CLASSIFICATION	0.999998366892323	WITHOUT_CLASSIFICATION	1.6331076769967324E-6	IMPLEMENTATION
// line 1963	WITHOUT_CLASSIFICATION	0.9999978374726659	WITHOUT_CLASSIFICATION	2.1625273341060094E-6	IMPLEMENTATION
// line 1968	WITHOUT_CLASSIFICATION	0.9999966286773303	WITHOUT_CLASSIFICATION	3.3713226697353633E-6	IMPLEMENTATION
// line 1972	WITHOUT_CLASSIFICATION	0.9999989566567777	WITHOUT_CLASSIFICATION	1.0433432222679516E-6	IMPLEMENTATION
// line 1982	WITHOUT_CLASSIFICATION	0.9999983801231086	WITHOUT_CLASSIFICATION	1.619876891469722E-6	IMPLEMENTATION
// line 1995	WITHOUT_CLASSIFICATION	0.9999975729253809	WITHOUT_CLASSIFICATION	2.4270746190788596E-6	IMPLEMENTATION
// line 2000	WITHOUT_CLASSIFICATION	0.9999997123229445	WITHOUT_CLASSIFICATION	2.8767705546754324E-7	IMPLEMENTATION
// line 2006	WITHOUT_CLASSIFICATION	0.9999996078166358	WITHOUT_CLASSIFICATION	3.9218336433807937E-7	IMPLEMENTATION
// line 2010	WITHOUT_CLASSIFICATION	0.9999995601568399	WITHOUT_CLASSIFICATION	4.398431600938201E-7	IMPLEMENTATION
/* We may need to subtract addition offset off of first */	WITHOUT_CLASSIFICATION	0.9999857566144869	WITHOUT_CLASSIFICATION	1.424338551310755E-5	IMPLEMENTATION
/* string fragment (we optimistically take one off in*/	WITHOUT_CLASSIFICATION	0.99999838163952	WITHOUT_CLASSIFICATION	1.6183604799303259E-6	IMPLEMENTATION
/* ParserSupport.literal_concat).  Check token length*/	WITHOUT_CLASSIFICATION	0.9999169260486349	WITHOUT_CLASSIFICATION	8.307395136514016E-5	IMPLEMENTATION
/* and subtract as neeeded.*/	WITHOUT_CLASSIFICATION	0.9999497298777213	WITHOUT_CLASSIFICATION	5.027012227867984E-5	IMPLEMENTATION
/*                    $$ = new ArgAuxiliaryNode($1.getPosition(), (String) $1.getValue(), 1);  */	WITHOUT_CLASSIFICATION	0.9999998144858901	WITHOUT_CLASSIFICATION	1.8551410974455078E-7	IMPLEMENTATION
/* ENEBO: arg surrounded by in_defined set/unset*/	WITHOUT_CLASSIFICATION	0.9999976310423572	WITHOUT_CLASSIFICATION	2.3689576429631404E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999959410632335	WITHOUT_CLASSIFICATION	4.058936766552993E-6	IMPLEMENTATION
//yyparse(lexer, new jay.yydebug.yyAnim("JRuby", 9));	WITHOUT_CLASSIFICATION	0.9999920050149772	WITHOUT_CLASSIFICATION	7.994985022845805E-6	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999980522509	WITHOUT_CLASSIFICATION	1.9477491520435184E-9	IMPLEMENTATION
// mark as captured if from containing scope	WITHOUT_CLASSIFICATION	0.9999999980522509	WITHOUT_CLASSIFICATION	1.9477491520435184E-9	IMPLEMENTATION
/* ENEBO: Removed !compile_for_eval which probably is to reduce warnings*/	WITHOUT_CLASSIFICATION	0.9992984735874768	WITHOUT_CLASSIFICATION	7.015264125231985E-4	IMPLEMENTATION
/* was $$ = null;*/	WITHOUT_CLASSIFICATION	0.9999999718633241	WITHOUT_CLASSIFICATION	2.8136675970535074E-8	IMPLEMENTATION
// line 2019 "Ruby19Parser.y"	WITHOUT_CLASSIFICATION	0.9999999871227665	WITHOUT_CLASSIFICATION	1.2877233407665337E-8	IMPLEMENTATION
// line 8143 "-"	WITHOUT_CLASSIFICATION	0.99999924130934	WITHOUT_CLASSIFICATION	7.586906599605448E-7	IMPLEMENTATION
// we know variables cannot be null since localstaticscope will create a 0 length one.	WITHOUT_CLASSIFICATION	0.9999997320723623	WITHOUT_CLASSIFICATION	2.679276376781724E-7	IMPLEMENTATION
// No bit math to store level since we know level is zero for this case	WITHOUT_CLASSIFICATION	0.9999823596121915	WITHOUT_CLASSIFICATION	1.7640387808502038E-5	IMPLEMENTATION
// Next immediate scope.  Variable and constant scoping rules make use of this variable // in different ways.	WITHOUT_CLASSIFICATION	0.9999999983603803	WITHOUT_CLASSIFICATION	1.6396196284262427E-9	IMPLEMENTATION
// Live reference to module	WITHOUT_CLASSIFICATION	0.9999999310673235	WITHOUT_CLASSIFICATION	6.89326764833952E-8	IMPLEMENTATION
// Next CRef down the lexical structure	WITHOUT_CLASSIFICATION	0.9999138271759259	WITHOUT_CLASSIFICATION	8.617282407415539E-5	IMPLEMENTATION
// Our name holder (offsets are assigned as variables are added	WITHOUT_CLASSIFICATION	0.9999999980369044	WITHOUT_CLASSIFICATION	1.9630956200583616E-9	IMPLEMENTATION
// number of variables in this scope representing required arguments	WITHOUT_CLASSIFICATION	0.9999999986964468	WITHOUT_CLASSIFICATION	1.3035531811371335E-9	IMPLEMENTATION
// number of variables in this scope representing optional arguments	WITHOUT_CLASSIFICATION	0.9999999976566883	WITHOUT_CLASSIFICATION	2.3433116624730237E-9	IMPLEMENTATION
// index of variable that represents a "rest" arg	WITHOUT_CLASSIFICATION	0.9999999629919382	WITHOUT_CLASSIFICATION	3.700806192486271E-8	IMPLEMENTATION
// Note that this object equality check is intentional, to ensure // the string and its interned version are the same object.	WITHOUT_CLASSIFICATION	0.9998203759335439	WITHOUT_CLASSIFICATION	1.7962406645607683E-4	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999997576129233	WITHOUT_CLASSIFICATION	2.423870768099635E-7	IMPLEMENTATION
// Returns slot of variable	WITHOUT_CLASSIFICATION	0.9999997576129233	WITHOUT_CLASSIFICATION	2.423870768099635E-7	IMPLEMENTATION
/* Note: Only used by compiler until it can use getConstant again or use some other refactoring */	WITHOUT_CLASSIFICATION	0.9999962456520921	WITHOUT_CLASSIFICATION	3.754347907922731E-6	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996402818604	WITHOUT_CLASSIFICATION	3.5971813952427106E-7	IMPLEMENTATION
/* Try and unload the autoload specified from internedName */	WITHOUT_CLASSIFICATION	0.999999929699212	WITHOUT_CLASSIFICATION	7.030078791329208E-8	IMPLEMENTATION
// We override that the logic which uses this	WITHOUT_CLASSIFICATION	0.9999993351043986	WITHOUT_CLASSIFICATION	6.648956013261197E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999105491356	WITHOUT_CLASSIFICATION	8.945086442457366E-8	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999766067553	WITHOUT_CLASSIFICATION	2.339324469823653E-7	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999856112973635	WITHOUT_CLASSIFICATION	1.4388702636337481E-5	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999766067553	WITHOUT_CLASSIFICATION	2.339324469823653E-7	IMPLEMENTATION
// . Array given to rest should pass itself // . Array with rest + other args should extract array // . Array with multiple values and NO rest should extract args if there are more than one argument	WITHOUT_CLASSIFICATION	0.9998594510693064	WITHOUT_CLASSIFICATION	1.405489306936485E-4	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999761091640138	WITHOUT_CLASSIFICATION	2.389083598619532E-5	IMPLEMENTATION
// Is this thread currently with in a function trace?	WITHOUT_CLASSIFICATION	0.9993342050104504	WITHOUT_CLASSIFICATION	6.657949895495876E-4	IMPLEMENTATION
// Is this thread currently doing an defined? defined should set things like $!	WITHOUT_CLASSIFICATION	0.9999443262295106	WITHOUT_CLASSIFICATION	5.567377048932887E-5	IMPLEMENTATION
//private UnsynchronizedStack parentStack;	WITHOUT_CLASSIFICATION	0.9999358085560233	WITHOUT_CLASSIFICATION	6.419144397672696E-5	IMPLEMENTATION
//private UnsynchronizedStack frameStack;	WITHOUT_CLASSIFICATION	0.9999968418649565	WITHOUT_CLASSIFICATION	3.1581350435139945E-6	IMPLEMENTATION
// List of active dynamic scopes.  Each of these may have captured other dynamic scopes // to implement closures.	WITHOUT_CLASSIFICATION	0.9998305829216447	WITHOUT_CLASSIFICATION	1.6941707835521882E-4	IMPLEMENTATION
// File where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9998868110421881	WITHOUT_CLASSIFICATION	1.1318895781189925E-4	IMPLEMENTATION
// Line where current executing unit is being evaluated	WITHOUT_CLASSIFICATION	0.9999969138983248	WITHOUT_CLASSIFICATION	3.0861016752496416E-6	IMPLEMENTATION
// In certain places, like grep, we don't use real frames for the // call blocks. This has the effect of not setting the backref in // the correct frame - this delta is activated to the place where // the grep is running in so that the backref will be set in an // appropriate place.	WITHOUT_CLASSIFICATION	0.9999991351586973	WITHOUT_CLASSIFICATION	8.64841302793072E-7	IMPLEMENTATION
// TOPLEVEL self and a few others want a top-level scope.  We create this one right // away and then pass it into top-level parse so it ends up being the top level.	WITHOUT_CLASSIFICATION	0.9999773020512124	WITHOUT_CLASSIFICATION	2.2697948787651506E-5	IMPLEMENTATION
//////////////////// CATCH MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999998368243268	WITHOUT_CLASSIFICATION	1.6317567320091427E-7	IMPLEMENTATION
//////////////////// FRAME MANAGEMENT ////////////////////////	WITHOUT_CLASSIFICATION	0.9999968441364812	WITHOUT_CLASSIFICATION	3.1558635188485866E-6	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999793271630757	WITHOUT_CLASSIFICATION	2.067283692430925E-5	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999573659407	WITHOUT_CLASSIFICATION	4.2634059305025755E-8	IMPLEMENTATION
// assert level == 0;	WITHOUT_CLASSIFICATION	0.9999999573659407	WITHOUT_CLASSIFICATION	4.2634059305025755E-8	IMPLEMENTATION
// look for mangling markers for compiled Ruby in method name	WITHOUT_CLASSIFICATION	0.9999998467185364	WITHOUT_CLASSIFICATION	1.5328146359397737E-7	IMPLEMENTATION
// if it's not a rescue or ensure, there's a frame associated, so decrement	WITHOUT_CLASSIFICATION	0.9999654924330063	WITHOUT_CLASSIFICATION	3.4507566993781495E-5	IMPLEMENTATION
// look for __file__ method name for compiled roots	WITHOUT_CLASSIFICATION	0.9999994519892459	WITHOUT_CLASSIFICATION	5.480107541238547E-7	IMPLEMENTATION
// All entries following removed node can stay // in list, but all preceding ones need to be // cloned.	WITHOUT_CLASSIFICATION	0.999936984821168	WITHOUT_CLASSIFICATION	6.301517883196491E-5	IMPLEMENTATION
// required and optional only	WITHOUT_CLASSIFICATION	0.9999959328470173	WITHOUT_CLASSIFICATION	4.067152982728349E-6	IMPLEMENTATION
// do nothing, allow loop to redo	WITHOUT_CLASSIFICATION	0.999999766067553	WITHOUT_CLASSIFICATION	2.339324469823653E-7	IMPLEMENTATION
// look for mangling markers for bound, unframed methods in class name	WITHOUT_CLASSIFICATION	0.9999999997959524	WITHOUT_CLASSIFICATION	2.0404750600772528E-10	IMPLEMENTATION
// set the binding's frame's "previous" file and line to current, so // trace will show who called the block	WITHOUT_CLASSIFICATION	0.9999970031191441	WITHOUT_CLASSIFICATION	2.996880855970034E-6	IMPLEMENTATION
// framed invokers will have Ruby frames associated with them	WITHOUT_CLASSIFICATION	0.9999999921820677	WITHOUT_CLASSIFICATION	7.817932327825392E-9	IMPLEMENTATION
// look for mangling markers for bound, framed methods in class name	WITHOUT_CLASSIFICATION	0.9999999997405316	WITHOUT_CLASSIFICATION	2.594683837134677E-10	IMPLEMENTATION
// unframed invokers have no Ruby frames, so pull from class name // but use current frame as file and line	WITHOUT_CLASSIFICATION	0.9999999999916616	WITHOUT_CLASSIFICATION	8.33849665527649E-12	IMPLEMENTATION
// try to mine out a Ruby frame using our list of interpreter entry-point markers	WITHOUT_CLASSIFICATION	0.9999999853057346	WITHOUT_CLASSIFICATION	1.4694265376196643E-8	IMPLEMENTATION
// Frame matches one of our markers for "interpreted" calls	WITHOUT_CLASSIFICATION	0.9999999588169036	WITHOUT_CLASSIFICATION	4.1183096382001685E-8	IMPLEMENTATION
// Frame is extraneous runtime information, skip it unless debug	WITHOUT_CLASSIFICATION	0.99999990163553	WITHOUT_CLASSIFICATION	9.83644699538825E-8	IMPLEMENTATION
/*     * Determine what sort of assigner should be used for the provided 'iter' (e.g. block).     * Assigner provides just the right logic for assigning values to local parameters of the     * block.     *     * This method also has a second optimization which is to set 'noargblock' in the case that     * the block is a block which accepts no arguments.  The primary reason for this second     * optimization is that in the case of a yield with a RubyArray we will bypass some logic     * processing the RubyArray into a proper form (only to then not do anythign with it).  A     * secondary benefit is that a simple boolean seems to optimize by hotspot much faster     * than the zero arg assigner.     */	WITHOUT_CLASSIFICATION	0.9999996728559845	WITHOUT_CLASSIFICATION	3.2714401547490655E-7	IMPLEMENTATION
// new scope for this invocation of the block, based on parent scope	WITHOUT_CLASSIFICATION	0.9999993587719815	WITHOUT_CLASSIFICATION	6.412280184026575E-7	IMPLEMENTATION
// No argument blocks	WITHOUT_CLASSIFICATION	0.9999998936170961	WITHOUT_CLASSIFICATION	1.0638290394518764E-7	IMPLEMENTATION
// just push the same empty scope, since we won't use one	WITHOUT_CLASSIFICATION	0.9999999920560801	WITHOUT_CLASSIFICATION	7.943919784532087E-9	IMPLEMENTATION
// Not sure if this is actually possible, but better safe than sorry	WITHOUT_CLASSIFICATION	0.9999956960691552	WITHOUT_CLASSIFICATION	4.3039308447596285E-6	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995197954764	WITHOUT_CLASSIFICATION	4.802045235746987E-7	IMPLEMENTATION
// This should only be called by 1.8 (1.9 subclasses this to handle unusedBlock).	WITHOUT_CLASSIFICATION	0.9998862010508064	WITHOUT_CLASSIFICATION	1.1379894919362108E-4	IMPLEMENTATION
// Highest reserved id	WITHOUT_CLASSIFICATION	0.9999695099019854	WITHOUT_CLASSIFICATION	3.0490098014607215E-5	IMPLEMENTATION
// binary typed calls	WITHOUT_CLASSIFICATION	0.9999993702492117	WITHOUT_CLASSIFICATION	6.297507882868994E-7	IMPLEMENTATION
// id must always be even	WITHOUT_CLASSIFICATION	0.9999972182640959	WITHOUT_CLASSIFICATION	2.781735904044889E-6	IMPLEMENTATION
// with block pass	WITHOUT_CLASSIFICATION	0.999999593870634	WITHOUT_CLASSIFICATION	4.061293660531324E-7	IMPLEMENTATION
// no block	WITHOUT_CLASSIFICATION	0.9999912708028538	WITHOUT_CLASSIFICATION	8.729197146247715E-6	IMPLEMENTATION
// with block literal (iter)	WITHOUT_CLASSIFICATION	0.9999925983404309	WITHOUT_CLASSIFICATION	7.401659569047474E-6	IMPLEMENTATION
//            assert false : "can this happen?";	WITHOUT_CLASSIFICATION	0.9999996664847964	WITHOUT_CLASSIFICATION	3.3351520360062746E-7	IMPLEMENTATION
// if we have multiple asgn with just *args, need a special type for that	WITHOUT_CLASSIFICATION	0.9999951271410688	WITHOUT_CLASSIFICATION	4.872858931249912E-6	IMPLEMENTATION
// && args.getMaxArgumentsCount() != 1) {	WITHOUT_CLASSIFICATION	0.9999999780846421	WITHOUT_CLASSIFICATION	2.1915357853248E-8	IMPLEMENTATION
//            return warnMultiReturnNil(ruby);	WITHOUT_CLASSIFICATION	0.9999998030533828	WITHOUT_CLASSIFICATION	1.9694661725041807E-7	IMPLEMENTATION
// ensure zero is devoted to no method name	WITHOUT_CLASSIFICATION	0.9999973606773771	WITHOUT_CLASSIFICATION	2.639322622892777E-6	IMPLEMENTATION
// predefine a few other methods we invoke directly elsewhere	WITHOUT_CLASSIFICATION	0.9999995042371925	WITHOUT_CLASSIFICATION	4.957628075212654E-7	IMPLEMENTATION
// fast and safe respond_to? call site logic	WITHOUT_CLASSIFICATION	0.9999950599901739	WITHOUT_CLASSIFICATION	4.9400098261117025E-6	IMPLEMENTATION
// Static scoping information for this scope	WITHOUT_CLASSIFICATION	0.9999995104083578	WITHOUT_CLASSIFICATION	4.895916422405243E-7	IMPLEMENTATION
// Captured dynamic scopes	WITHOUT_CLASSIFICATION	0.9999999588288119	WITHOUT_CLASSIFICATION	4.1171188039460624E-8	IMPLEMENTATION
// Backref for $~, $1, etc	WITHOUT_CLASSIFICATION	0.9999996134635954	WITHOUT_CLASSIFICATION	3.865364044404799E-7	IMPLEMENTATION
// Lastline	WITHOUT_CLASSIFICATION	0.9999998645989836	WITHOUT_CLASSIFICATION	1.3540101640639785E-7	IMPLEMENTATION
// No binding scope so we should create one	WITHOUT_CLASSIFICATION	0.9999996646933614	WITHOUT_CLASSIFICATION	3.353066385055637E-7	IMPLEMENTATION
// bindings scopes must always be ManyVars scopes since evals can grow them	WITHOUT_CLASSIFICATION	0.9999851689446653	WITHOUT_CLASSIFICATION	1.4831055334718365E-5	IMPLEMENTATION
// Helper function to give a good view of current dynamic scope with captured scopes	WITHOUT_CLASSIFICATION	0.9999918403024185	WITHOUT_CLASSIFICATION	8.159697581412583E-6	IMPLEMENTATION
// try count specific args to determine required	WITHOUT_CLASSIFICATION	0.9999985462668108	WITHOUT_CLASSIFICATION	1.4537331890572787E-6	IMPLEMENTATION
// Some helper functions:	WITHOUT_CLASSIFICATION	0.9999997791333237	WITHOUT_CLASSIFICATION	2.2086667627314116E-7	IMPLEMENTATION
// silently ignore	WITHOUT_CLASSIFICATION	0.9999941669426893	WITHOUT_CLASSIFICATION	5.833057310629054E-6	IMPLEMENTATION
// used by compiler	WITHOUT_CLASSIFICATION	0.9999988952202283	WITHOUT_CLASSIFICATION	1.1047797717045906E-6	IMPLEMENTATION
// initialize the static settings to determine which factory to use	WITHOUT_CLASSIFICATION	0.999999978802922	WITHOUT_CLASSIFICATION	2.1197078011428155E-8	IMPLEMENTATION
// // INSTANCE VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.999992919729203	WITHOUT_CLASSIFICATION	7.080270796918348E-6	IMPLEMENTATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9422136334207175	WITHOUT_CLASSIFICATION	0.057786366579282426	IMPLEMENTATION
//  Single node on list	WITHOUT_CLASSIFICATION	0.9999990275510162	WITHOUT_CLASSIFICATION	9.724489838802946E-7	IMPLEMENTATION
// Reuse trailing consecutive sequence at same slot	WITHOUT_CLASSIFICATION	0.9999973263816446	WITHOUT_CLASSIFICATION	2.673618355408506E-6	IMPLEMENTATION
// Clone all remaining nodes	WITHOUT_CLASSIFICATION	0.9999999545294214	WITHOUT_CLASSIFICATION	4.547057869609477E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999761091640138	WITHOUT_CLASSIFICATION	2.389083598619532E-5	IMPLEMENTATION
// Note: In Ruby 1.9 all of this logic can go away since they will require explicit // bindings for evals.	WITHOUT_CLASSIFICATION	0.999832181113601	WITHOUT_CLASSIFICATION	1.678188863990114E-4	IMPLEMENTATION
// We only define one special dynamic scope per 'logical' binding.  So all bindings for // the same scope should share the same dynamic scope.  This allows multiple evals with // different different bindings in the same scope to see the same stuff.	WITHOUT_CLASSIFICATION	0.9999998655468229	WITHOUT_CLASSIFICATION	1.344531772085974E-7	IMPLEMENTATION
// If the next scope out has the same binding scope as this scope it means // we are evaling within an eval and in that case we should be sharing the same // binding scope.	WITHOUT_CLASSIFICATION	0.9999999834968902	WITHOUT_CLASSIFICATION	1.650310975124117E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999985891589	WITHOUT_CLASSIFICATION	1.4108411028624243E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999985891589	WITHOUT_CLASSIFICATION	1.4108411028624243E-8	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994323017386	WITHOUT_CLASSIFICATION	5.676982613580314E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994323017386	WITHOUT_CLASSIFICATION	5.676982613580314E-7	IMPLEMENTATION
// nil pad since we provided less values than block parms	WITHOUT_CLASSIFICATION	0.9999994323017386	WITHOUT_CLASSIFICATION	5.676982613580314E-7	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999974839511142	WITHOUT_CLASSIFICATION	2.516048885796602E-6	IMPLEMENTATION
// no extra args for rest	WITHOUT_CLASSIFICATION	0.9999974839511142	WITHOUT_CLASSIFICATION	2.516048885796602E-6	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999424565008	WITHOUT_CLASSIFICATION	5.7543499044496134E-8	IMPLEMENTATION
// extra args for rest	WITHOUT_CLASSIFICATION	0.9999999424565008	WITHOUT_CLASSIFICATION	5.7543499044496134E-8	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners which have a pre > 0.  The rest     * override this.     */	WITHOUT_CLASSIFICATION	0.9999999990396375	WITHOUT_CLASSIFICATION	9.603625011256608E-10	IMPLEMENTATION
/*     * This is the proper behavior for all non-expanded assigners.     */	WITHOUT_CLASSIFICATION	0.9999998097262882	WITHOUT_CLASSIFICATION	1.9027371180479008E-7	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999960764733503	WITHOUT_CLASSIFICATION	3.923526649708119E-6	IMPLEMENTATION
// prefill ?	WITHOUT_CLASSIFICATION	0.9999960764733503	WITHOUT_CLASSIFICATION	3.923526649708119E-6	IMPLEMENTATION
// MUST be called from synchronized/locked block! // should only be called by variableTableStore/variableTableFastStore	WITHOUT_CLASSIFICATION	0.9999999688125031	WITHOUT_CLASSIFICATION	3.1187496974954417E-8	IMPLEMENTATION
// retrieve method // module // name	WITHOUT_CLASSIFICATION	0.9999969403837996	WITHOUT_CLASSIFICATION	3.0596162003171382E-6	IMPLEMENTATION
// call is ok, punch it!	WITHOUT_CLASSIFICATION	0.9999999575262236	WITHOUT_CLASSIFICATION	4.2473776426261583E-8	IMPLEMENTATION
// if undefined, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999872048091	WITHOUT_CLASSIFICATION	1.279519095626749E-8	IMPLEMENTATION
// if we're not attempting to invoke method_missing and method is not visible, branch to method_missing	WITHOUT_CLASSIFICATION	0.9999999964584388	WITHOUT_CLASSIFICATION	3.5415611585526375E-9	IMPLEMENTATION
// method object already present, push various args // tc // self // klazz // name	WITHOUT_CLASSIFICATION	0.9999995597560909	WITHOUT_CLASSIFICATION	4.4024390905770483E-7	IMPLEMENTATION
// if it's method_missing, just invoke it	WITHOUT_CLASSIFICATION	0.999999824026873	WITHOUT_CLASSIFICATION	1.759731268783677E-7	IMPLEMENTATION
// invoke callMethodMissing	WITHOUT_CLASSIFICATION	0.999999727733955	WITHOUT_CLASSIFICATION	2.7226604498351556E-7	IMPLEMENTATION
// caller	WITHOUT_CLASSIFICATION	0.9999993941131068	WITHOUT_CLASSIFICATION	6.058868931006159E-7	IMPLEMENTATION
// calltype // block	WITHOUT_CLASSIFICATION	0.9999977670463062	WITHOUT_CLASSIFICATION	2.232953693805816E-6	IMPLEMENTATION
// if no exception raised, jump to end to leave result on stack for return	WITHOUT_CLASSIFICATION	0.9999969411995756	WITHOUT_CLASSIFICATION	3.0588004244405517E-6	IMPLEMENTATION
// load arity for check	WITHOUT_CLASSIFICATION	0.9999993353423333	WITHOUT_CLASSIFICATION	6.646576666777825E-7	IMPLEMENTATION
// throw	WITHOUT_CLASSIFICATION	0.9999924579874796	WITHOUT_CLASSIFICATION	7.542012520397563E-6	IMPLEMENTATION
// load arity for error	WITHOUT_CLASSIFICATION	0.9999968830996897	WITHOUT_CLASSIFICATION	3.1169003102396254E-6	IMPLEMENTATION
// arity ok, continue	WITHOUT_CLASSIFICATION	0.9999998775371195	WITHOUT_CLASSIFICATION	1.2246288045227524E-7	IMPLEMENTATION
//InvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999580549564384	WITHOUT_CLASSIFICATION	4.1945043561707355E-5	IMPLEMENTATION
// ENEBO: Perhaps slow but simple for now	WITHOUT_CLASSIFICATION	0.9998685817970218	WITHOUT_CLASSIFICATION	1.314182029782485E-4	IMPLEMENTATION
// FastInvocationCallback	WITHOUT_CLASSIFICATION	0.9999975758826076	WITHOUT_CLASSIFICATION	2.4241173923756843E-6	IMPLEMENTATION
// InvocationCallback	WITHOUT_CLASSIFICATION	0.9999971266309474	WITHOUT_CLASSIFICATION	2.8733690526098475E-6	IMPLEMENTATION
//DumpingInvocationCallbackFactory	WITHOUT_CLASSIFICATION	0.9999482613051968	WITHOUT_CLASSIFICATION	5.1738694803364316E-5	IMPLEMENTATION
// for fast lookup: encoding entry => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999845385854	WITHOUT_CLASSIFICATION	1.546141463475278E-8	IMPLEMENTATION
// for fast lookup: org.joni.encoding.Encoding => org.jruby.RubyEncoding	WITHOUT_CLASSIFICATION	0.9999999948942013	WITHOUT_CLASSIFICATION	5.10579865415078E-9	IMPLEMENTATION
// load the encoding	WITHOUT_CLASSIFICATION	0.9999996052238459	WITHOUT_CLASSIFICATION	3.9477615407427485E-7	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.999999857047326	WITHOUT_CLASSIFICATION	1.429526740158152E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999999150927897	WITHOUT_CLASSIFICATION	8.490721024647983E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String	WITHOUT_CLASSIFICATION	0.9999975268085532	WITHOUT_CLASSIFICATION	2.4731914467080954E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyModule, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999909652424	WITHOUT_CLASSIFICATION	9.034757602252727E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, ThreadContext, IRubyObject, RubyClass, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999614445404	WITHOUT_CLASSIFICATION	3.855545956037856E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.999999927539037	WITHOUT_CLASSIFICATION	7.246096292947171E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999999569615744	WITHOUT_CLASSIFICATION	4.303842569137955E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, IRubyObject	WITHOUT_CLASSIFICATION	0.9999987463680489	WITHOUT_CLASSIFICATION	1.2536319512452526E-6	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999821113091	WITHOUT_CLASSIFICATION	1.788869080866659E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999893749539	WITHOUT_CLASSIFICATION	1.0625046119992514E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997908829401	WITHOUT_CLASSIFICATION	2.0911705981463437E-7	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999893749539	WITHOUT_CLASSIFICATION	1.0625046119992514E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999893749539	WITHOUT_CLASSIFICATION	1.0625046119992514E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999893749539	WITHOUT_CLASSIFICATION	1.0625046119992514E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999893749539	WITHOUT_CLASSIFICATION	1.0625046119992514E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999893749539	WITHOUT_CLASSIFICATION	1.0625046119992514E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999893749539	WITHOUT_CLASSIFICATION	1.0625046119992514E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997908829401	WITHOUT_CLASSIFICATION	2.0911705981463437E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997908829401	WITHOUT_CLASSIFICATION	2.0911705981463437E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997908829401	WITHOUT_CLASSIFICATION	2.0911705981463437E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997908829401	WITHOUT_CLASSIFICATION	2.0911705981463437E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997908829401	WITHOUT_CLASSIFICATION	2.0911705981463437E-7	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997908829401	WITHOUT_CLASSIFICATION	2.0911705981463437E-7	IMPLEMENTATION
// If we're running in 1.9 compat mode, add Ruby 1.9 libs to path before 1.8 libs	WITHOUT_CLASSIFICATION	0.9999997265860758	WITHOUT_CLASSIFICATION	2.734139241834449E-7	IMPLEMENTATION
// BreakJump, ThreadContext	WITHOUT_CLASSIFICATION	0.999998923779097	WITHOUT_CLASSIFICATION	1.076220902906717E-6	IMPLEMENTATION
// ThreadContext	WITHOUT_CLASSIFICATION	0.9999799800858697	WITHOUT_CLASSIFICATION	2.0019914130176478E-5	IMPLEMENTATION
// BreakJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999974296818606	WITHOUT_CLASSIFICATION	2.570318139383969E-6	IMPLEMENTATION
// Make Java class files in the jar reachable from Ruby	WITHOUT_CLASSIFICATION	0.9999999998036411	WITHOUT_CLASSIFICATION	1.9635893186831772E-10	IMPLEMENTATION
// RetryJump, CacheEntry, ThreadContext, IRubyObject, IRubyObject	WITHOUT_CLASSIFICATION	0.9999985235497819	WITHOUT_CLASSIFICATION	1.476450218172474E-6	IMPLEMENTATION
// add all startup load paths to the list first	WITHOUT_CLASSIFICATION	0.9999968777847879	WITHOUT_CLASSIFICATION	3.1222152122078865E-6	IMPLEMENTATION
// if it's a compiled JRuby script, instantiate and run it	WITHOUT_CLASSIFICATION	0.999999994726501	WITHOUT_CLASSIFICATION	5.273499043796199E-9	IMPLEMENTATION
// wrap in try/catch for security exceptions in an applet	WITHOUT_CLASSIFICATION	0.9999998658923092	WITHOUT_CLASSIFICATION	1.341076908518406E-7	IMPLEMENTATION
// add $RUBYLIB paths	WITHOUT_CLASSIFICATION	0.999995985952486	WITHOUT_CLASSIFICATION	4.014047514082489E-6	IMPLEMENTATION
// Empty paths do not need to be added	WITHOUT_CLASSIFICATION	0.7223512354290477	IMPLEMENTATION	0.2776487645709523	WITHOUT_CLASSIFICATION
// "." dir is used for relative path loads from a given file, as in require '../foo/bar'	WITHOUT_CLASSIFICATION	0.9999999983726335	WITHOUT_CLASSIFICATION	1.6273664052127386E-9	IMPLEMENTATION
// Add 1.8 libs	WITHOUT_CLASSIFICATION	0.9999867110665742	WITHOUT_CLASSIFICATION	1.3288933425714759E-5	IMPLEMENTATION
// Create package name, by splitting on / and joining all but the last elements with a ".", and downcasing them.	WITHOUT_CLASSIFICATION	0.9999999981511856	WITHOUT_CLASSIFICATION	1.8488144149477802E-9	IMPLEMENTATION
// Library has already been loaded in some form, bail out	WITHOUT_CLASSIFICATION	0.9999999994057499	WITHOUT_CLASSIFICATION	5.942500469298315E-10	IMPLEMENTATION
// We don't want a package name beginning with dots, so we remove them	WITHOUT_CLASSIFICATION	0.999997179826093	WITHOUT_CLASSIFICATION	2.8201739069112305E-6	IMPLEMENTATION
// If there is a jar-file with the required name, we add this to the class path.	WITHOUT_CLASSIFICATION	0.9999994035197562	WITHOUT_CLASSIFICATION	5.964802437629776E-7	IMPLEMENTATION
// quietly try to load the class	WITHOUT_CLASSIFICATION	0.9999998471615394	WITHOUT_CLASSIFICATION	1.5283846059547288E-7	IMPLEMENTATION
// If there was a good library before, we go back to that	WITHOUT_CLASSIFICATION	0.9999999257407041	WITHOUT_CLASSIFICATION	7.42592958882684E-8	IMPLEMENTATION
// no library or extension found, try to load directly as a class	WITHOUT_CLASSIFICATION	0.9999999304543526	WITHOUT_CLASSIFICATION	6.954564725677606E-8	IMPLEMENTATION
// if an extension is specified, try more targetted searches	WITHOUT_CLASSIFICATION	0.9999993751363428	WITHOUT_CLASSIFICATION	6.248636571719689E-7	IMPLEMENTATION
// signed short, big-endian	WITHOUT_CLASSIFICATION	0.9999997377371289	WITHOUT_CLASSIFICATION	2.6226287114407385E-7	IMPLEMENTATION
// source extensions	WITHOUT_CLASSIFICATION	0.9999856112973635	WITHOUT_CLASSIFICATION	1.4388702636337481E-5	IMPLEMENTATION
// We don't support .so, but some stdlib require .so directly // replace it with .jar to look for an extension type we do support	WITHOUT_CLASSIFICATION	0.9984480791292374	WITHOUT_CLASSIFICATION	0.001551920870762646	IMPLEMENTATION
// This code exploits the fact that all .jar files will be found for the JarredScript feature. // This is where the basic extension mechanism gets fixed	WITHOUT_CLASSIFICATION	0.9999972501667969	WITHOUT_CLASSIFICATION	2.749833203104098E-6	IMPLEMENTATION
// Make the class name look nice, by splitting on _ and capitalize each segment, then joining // the, together without anything separating them, and last put on "Service" at the end.	WITHOUT_CLASSIFICATION	0.9999981546942356	WITHOUT_CLASSIFICATION	1.8453057643506474E-6	IMPLEMENTATION
// It's _really_ expensive to check that the class actually exists in the Jar, so // we don't do that now.	WITHOUT_CLASSIFICATION	0.9999998442007948	WITHOUT_CLASSIFICATION	1.557992053139077E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997330818089822	WITHOUT_CLASSIFICATION	2.6691819101783E-4	IMPLEMENTATION
// extension extensions	WITHOUT_CLASSIFICATION	0.9999784293519435	WITHOUT_CLASSIFICATION	2.1570648056498315E-5	IMPLEMENTATION
// unknown extension, fall back to search with extensions	WITHOUT_CLASSIFICATION	0.9999921683458206	WITHOUT_CLASSIFICATION	7.83165417934163E-6	IMPLEMENTATION
// try all extensions	WITHOUT_CLASSIFICATION	0.9999131566892103	WITHOUT_CLASSIFICATION	8.684331078962581E-5	IMPLEMENTATION
// if a source extension is specified, try all source extensions	WITHOUT_CLASSIFICATION	0.9999708603283262	WITHOUT_CLASSIFICATION	2.913967167390369E-5	IMPLEMENTATION
// unknown extension, fall back to exact search	WITHOUT_CLASSIFICATION	0.9999881341223533	WITHOUT_CLASSIFICATION	1.1865877646750414E-5	IMPLEMENTATION
// try only literal search	WITHOUT_CLASSIFICATION	0.9999997561678857	WITHOUT_CLASSIFICATION	2.4383211431224697E-7	IMPLEMENTATION
// attempt to load the found library	WITHOUT_CLASSIFICATION	0.999993065624207	WITHOUT_CLASSIFICATION	6.934375793046211E-6	IMPLEMENTATION
// otherwise load the library we've found	WITHOUT_CLASSIFICATION	0.9998877412841003	WITHOUT_CLASSIFICATION	1.1225871589974486E-4	IMPLEMENTATION
// allow MainExitException to propagate out for exec and friends	WITHOUT_CLASSIFICATION	0.9999915266082567	WITHOUT_CLASSIFICATION	8.473391743257848E-6	IMPLEMENTATION
// Remove any relative prefix, e.g. "./foo/bar" becomes "foo/bar".	WITHOUT_CLASSIFICATION	0.9999999821457551	WITHOUT_CLASSIFICATION	1.7854244916002063E-8	IMPLEMENTATION
// check current directory; if file exists, retrieve URL and return resource	WITHOUT_CLASSIFICATION	0.9999713542588344	WITHOUT_CLASSIFICATION	2.8645741165509155E-5	IMPLEMENTATION
// if a jar or file URL, return load service resource directly without further searching	WITHOUT_CLASSIFICATION	0.9999955103722908	WITHOUT_CLASSIFICATION	4.489627709192617E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999986272614821	WITHOUT_CLASSIFICATION	1.372738517860821E-6	IMPLEMENTATION
// if it's a ./ baseName, use CWD logic	WITHOUT_CLASSIFICATION	0.9999999476135878	WITHOUT_CLASSIFICATION	5.238641225129815E-8	IMPLEMENTATION
// if given path is absolute, just try it as-is (with extensions) and no load path	WITHOUT_CLASSIFICATION	0.9999990336319591	WITHOUT_CLASSIFICATION	9.66368041012078E-7	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999993080963558	WITHOUT_CLASSIFICATION	6.919036440907194E-7	IMPLEMENTATION
// we check length == 0 for 'load', which does not use load path	WITHOUT_CLASSIFICATION	0.9999993080963558	WITHOUT_CLASSIFICATION	6.919036440907194E-7	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999998786407623	WITHOUT_CLASSIFICATION	1.2135923762719521E-7	IMPLEMENTATION
// it's an absolute path, use it as-is	WITHOUT_CLASSIFICATION	0.9999998786407623	WITHOUT_CLASSIFICATION	1.2135923762719521E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996792719027	WITHOUT_CLASSIFICATION	3.207280973964117E-7	IMPLEMENTATION
// prepend ./ if . is not already there, since we're loading based on CWD	WITHOUT_CLASSIFICATION	0.9999996792719027	WITHOUT_CLASSIFICATION	3.207280973964117E-7	IMPLEMENTATION
//                    actualPath = new File(RubyFile.expandUserPath(runtime.getCurrentContext(), reportedPath));	WITHOUT_CLASSIFICATION	0.9999948784046642	WITHOUT_CLASSIFICATION	5.121595335841057E-6	IMPLEMENTATION
// handle security-sensitive case	WITHOUT_CLASSIFICATION	0.999994370942698	WITHOUT_CLASSIFICATION	5.629057301983013E-6	IMPLEMENTATION
// if entry is an empty string, skip it	WITHOUT_CLASSIFICATION	0.9999999541773751	WITHOUT_CLASSIFICATION	4.582262494888093E-8	IMPLEMENTATION
// if entry starts with a slash, skip it since classloader resources never start with a /	WITHOUT_CLASSIFICATION	0.9999984821152946	WITHOUT_CLASSIFICATION	1.5178847053850027E-6	IMPLEMENTATION
// otherwise, try to load from classpath (Note: Jar resources always uses '/')	WITHOUT_CLASSIFICATION	0.9999915697054753	WITHOUT_CLASSIFICATION	8.430294524621343E-6	IMPLEMENTATION
// Make sure this is not a directory or unavailable in some way	WITHOUT_CLASSIFICATION	0.9999998350464042	WITHOUT_CLASSIFICATION	1.6495359572837533E-7	IMPLEMENTATION
// signed short, native	WITHOUT_CLASSIFICATION	0.9999992086556384	WITHOUT_CLASSIFICATION	7.913443615025299E-7	IMPLEMENTATION
// If we fail to find as a normal Ruby script, we try to find as an extension, // checking for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999779054269	WITHOUT_CLASSIFICATION	2.209457302532329E-8	IMPLEMENTATION
// write `I' instance var signet if class is NOT a direct subclass of Object	WITHOUT_CLASSIFICATION	0.9999999999935897	WITHOUT_CLASSIFICATION	6.410247140278484E-12	IMPLEMENTATION
// if name starts with a / we're done (classloader resources won't load with an initial /)	WITHOUT_CLASSIFICATION	0.9999999996079147	WITHOUT_CLASSIFICATION	3.92085296326126E-10	IMPLEMENTATION
// Look in classpath next (we do not use File as a test since UNC names will match) // Note: Jar resources must NEVER begin with an '/'. (previous code said "always begin with a /")	WITHOUT_CLASSIFICATION	0.9999999657390841	WITHOUT_CLASSIFICATION	3.426091597159949E-8	IMPLEMENTATION
/* Directories and unavailable resources are not able to open a stream. */	WITHOUT_CLASSIFICATION	0.9999998955083518	WITHOUT_CLASSIFICATION	1.044916483066371E-7	IMPLEMENTATION
// Try to load from classpath without prefix. "A/b.rb" will not load as  // "./A/b.rb" in a jar file.	WITHOUT_CLASSIFICATION	0.9999999371092659	WITHOUT_CLASSIFICATION	6.28907339911459E-8	IMPLEMENTATION
// object has instance vars and isn't a class, get a snapshot to be marshalled // and output the ivar header here	WITHOUT_CLASSIFICATION	0.9999999917164663	WITHOUT_CLASSIFICATION	8.283533814607406E-9	IMPLEMENTATION
// flush afer whole dump is complete	WITHOUT_CLASSIFICATION	0.9999940960589047	WITHOUT_CLASSIFICATION	5.9039410953398915E-6	IMPLEMENTATION
//            write('S');	WITHOUT_CLASSIFICATION	0.9999997015020388	WITHOUT_CLASSIFICATION	2.9849796126477974E-7	IMPLEMENTATION
// switch on the object's *native type*. This allows use-defined // classes that have extended core native types to piggyback on their // marshalling logic.	WITHOUT_CLASSIFICATION	0.9999957397515387	WITHOUT_CLASSIFICATION	4.2602484613062505E-6	IMPLEMENTATION
// object is a custom class that extended one of the native types other than Object	WITHOUT_CLASSIFICATION	0.9999999416758105	WITHOUT_CLASSIFICATION	5.83241893725393E-8	IMPLEMENTATION
// We do not want to capture cached methods	WITHOUT_CLASSIFICATION	0.9999844161030658	WITHOUT_CLASSIFICATION	1.558389693432473E-5	IMPLEMENTATION
// w_symbol	WITHOUT_CLASSIFICATION	0.999999505533755	WITHOUT_CLASSIFICATION	4.944662448881352E-7	IMPLEMENTATION
// w_unique	WITHOUT_CLASSIFICATION	0.9999973604540764	WITHOUT_CLASSIFICATION	2.6395459236204742E-6	IMPLEMENTATION
// call the proc, but not for symbols	WITHOUT_CLASSIFICATION	0.999997561813997	WITHOUT_CLASSIFICATION	2.4381860030001554E-6	IMPLEMENTATION
// Major // Minor	WITHOUT_CLASSIFICATION	0.9999885933210008	WITHOUT_CLASSIFICATION	1.140667899917844E-5	IMPLEMENTATION
// any ivars, since we don't have __attached__ ivar now	WITHOUT_CLASSIFICATION	0.9999999683569443	WITHOUT_CLASSIFICATION	3.1643055777822966E-8	IMPLEMENTATION
// "hashdef" object, a hash with a default	WITHOUT_CLASSIFICATION	0.9999999898755505	WITHOUT_CLASSIFICATION	1.0124449469476618E-8	IMPLEMENTATION
// All "C" marshalled objects descend from core classes, which are all RubyObject	WITHOUT_CLASSIFICATION	0.9999999559814566	WITHOUT_CLASSIFICATION	4.401854338767865E-8	IMPLEMENTATION
// sic	WITHOUT_CLASSIFICATION	0.9999998206590135	WITHOUT_CLASSIFICATION	1.793409865720723E-7	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999863815434	WITHOUT_CLASSIFICATION	1.361845659740972E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999863815434	WITHOUT_CLASSIFICATION	1.361845659740972E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999863815434	WITHOUT_CLASSIFICATION	1.361845659740972E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998104866145	WITHOUT_CLASSIFICATION	1.895133856614331E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998104866145	WITHOUT_CLASSIFICATION	1.895133856614331E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995197954764	WITHOUT_CLASSIFICATION	4.802045235746987E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995197954764	WITHOUT_CLASSIFICATION	4.802045235746987E-7	IMPLEMENTATION
/*     * If we are setting post arguments we can assume there are no pre or others     */	WITHOUT_CLASSIFICATION	0.9999999999042433	WITHOUT_CLASSIFICATION	9.575667475332903E-11	IMPLEMENTATION
// XXX: 0xffff0000 on BE?	WITHOUT_CLASSIFICATION	0.9999512597895365	WITHOUT_CLASSIFICATION	4.874021046357974E-5	IMPLEMENTATION
// unsigned short, native	WITHOUT_CLASSIFICATION	0.999999537024803	WITHOUT_CLASSIFICATION	4.6297519707176055E-7	IMPLEMENTATION
// int, native // long, native	WITHOUT_CLASSIFICATION	0.9999999878182148	WITHOUT_CLASSIFICATION	1.2181785308719328E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999863815434	WITHOUT_CLASSIFICATION	1.361845659740972E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999863815434	WITHOUT_CLASSIFICATION	1.361845659740972E-8	IMPLEMENTATION
// if we're not the "argument scope" for zsuper, try our parent	WITHOUT_CLASSIFICATION	0.9999999863815434	WITHOUT_CLASSIFICATION	1.361845659740972E-8	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998104866145	WITHOUT_CLASSIFICATION	1.895133856614331E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998104866145	WITHOUT_CLASSIFICATION	1.895133856614331E-7	IMPLEMENTATION
// copy and splat arguments out of the scope to use for zsuper call	WITHOUT_CLASSIFICATION	0.9999998104866145	WITHOUT_CLASSIFICATION	1.895133856614331E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995197954764	WITHOUT_CLASSIFICATION	4.802045235746987E-7	IMPLEMENTATION
// rest arg must be splatted	WITHOUT_CLASSIFICATION	0.9999995197954764	WITHOUT_CLASSIFICATION	4.802045235746987E-7	IMPLEMENTATION
// Look for slash, starting from 'start' position, until 'end'.	WITHOUT_CLASSIFICATION	0.9999999985573971	WITHOUT_CLASSIFICATION	1.4426029352489383E-9	IMPLEMENTATION
// Our values holder (name of variables are kept in staticScope)	WITHOUT_CLASSIFICATION	0.9999999996529428	WITHOUT_CLASSIFICATION	3.470572271359398E-10	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999739834	WITHOUT_CLASSIFICATION	2.6016543717295603E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999739834	WITHOUT_CLASSIFICATION	2.6016543717295603E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999739834	WITHOUT_CLASSIFICATION	2.6016543717295603E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999739834	WITHOUT_CLASSIFICATION	2.6016543717295603E-11	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999739834	WITHOUT_CLASSIFICATION	2.6016543717295603E-11	IMPLEMENTATION
// SunSignalFacade	WITHOUT_CLASSIFICATION	0.9999992921618396	WITHOUT_CLASSIFICATION	7.078381603816802E-7	IMPLEMENTATION
// All braces pushed..	WITHOUT_CLASSIFICATION	0.9999993987294062	WITHOUT_CLASSIFICATION	6.012705937997682E-7	IMPLEMENTATION
/* failed : try next recursion */	WITHOUT_CLASSIFICATION	0.9999095315282263	WITHOUT_CLASSIFICATION	9.04684717737088E-5	IMPLEMENTATION
// leftToken made us start as nest 1	WITHOUT_CLASSIFICATION	0.9999993583009318	WITHOUT_CLASSIFICATION	6.416990682405215E-7	IMPLEMENTATION
// are we at '**/'	WITHOUT_CLASSIFICATION	0.9999960690763376	WITHOUT_CLASSIFICATION	3.930923662440751E-6	IMPLEMENTATION
// No or mismatched braces..Move along..nothing to see here	WITHOUT_CLASSIFICATION	0.9999990284917184	WITHOUT_CLASSIFICATION	9.715082815806345E-7	IMPLEMENTATION
// not enough bytes	WITHOUT_CLASSIFICATION	0.9996303335089121	WITHOUT_CLASSIFICATION	3.696664910879206E-4	IMPLEMENTATION
// Get index of last read byte	WITHOUT_CLASSIFICATION	0.999999598710711	WITHOUT_CLASSIFICATION	4.0128928899056186E-7	IMPLEMENTATION
// skip inner braces	WITHOUT_CLASSIFICATION	0.9999972367103627	WITHOUT_CLASSIFICATION	2.7632896373872362E-6	IMPLEMENTATION
/*     * Process {}'s (example: Dir.glob("{jruby,jython}/README*")      */	WITHOUT_CLASSIFICATION	0.9999998691441889	WITHOUT_CLASSIFICATION	1.308558110689688E-7	IMPLEMENTATION
/* complete, according to Posix.2 */	WITHOUT_CLASSIFICATION	0.9999916950816717	WITHOUT_CLASSIFICATION	8.304918328179761E-6	IMPLEMENTATION
/* Only accept an open brace if there is a close */	WITHOUT_CLASSIFICATION	0.9999999957200535	WITHOUT_CLASSIFICATION	4.279946500759126E-9	IMPLEMENTATION
/* brace to match it.  Bracket expressions must be */	WITHOUT_CLASSIFICATION	0.9999975432476397	WITHOUT_CLASSIFICATION	2.4567523603640843E-6	IMPLEMENTATION
// index of left-most brace // index of right-most brace	WITHOUT_CLASSIFICATION	0.9999997899184215	WITHOUT_CLASSIFICATION	2.1008157847627762E-7	IMPLEMENTATION
// Length check is a hack.  We should not be reeiving "" as a filename ever. 	WITHOUT_CLASSIFICATION	0.9999999952363486	WITHOUT_CLASSIFICATION	4.763651340822166E-9	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999910421815382	WITHOUT_CLASSIFICATION	8.957818461743594E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999910421815382	WITHOUT_CLASSIFICATION	8.957818461743594E-6	IMPLEMENTATION
// NOT REACHED HERE	WITHOUT_CLASSIFICATION	0.9999910421815382	WITHOUT_CLASSIFICATION	8.957818461743594E-6	IMPLEMENTATION
// Pickaxe says @ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999016908243	WITHOUT_CLASSIFICATION	9.830917576409659E-8	IMPLEMENTATION
// Pickaxe says @@ must be followed by a name character, but MRI // does not require this.	WITHOUT_CLASSIFICATION	0.9999999017126969	WITHOUT_CLASSIFICATION	9.8287303120046E-8	IMPLEMENTATION
// SimpleSampler	WITHOUT_CLASSIFICATION	0.9999857948903462	WITHOUT_CLASSIFICATION	1.4205109653772082E-5	IMPLEMENTATION
/*     * convert into longs, returning unsigned 64-bit values as signed longs     * ( num2long raises a RangeError on values > Long.MAX_VALUE )     */	WITHOUT_CLASSIFICATION	0.9999999999987085	WITHOUT_CLASSIFICATION	1.291534488496099E-12	IMPLEMENTATION
// b64_xtable for decoding Base 64	WITHOUT_CLASSIFICATION	0.9999999964024542	WITHOUT_CLASSIFICATION	3.597545787926319E-9	IMPLEMENTATION
// single precision, little-endian	WITHOUT_CLASSIFICATION	0.9999963553899678	WITHOUT_CLASSIFICATION	3.6446100321981157E-6	IMPLEMENTATION
// single precision, big-endian	WITHOUT_CLASSIFICATION	0.999999621285563	WITHOUT_CLASSIFICATION	3.787144370808096E-7	IMPLEMENTATION
// single precision, native	WITHOUT_CLASSIFICATION	0.9999997464816148	WITHOUT_CLASSIFICATION	2.535183851821472E-7	IMPLEMENTATION
// single precision, native // single precision, native	WITHOUT_CLASSIFICATION	0.9999992866839541	WITHOUT_CLASSIFICATION	7.133160458778546E-7	IMPLEMENTATION
// double precision, little-endian	WITHOUT_CLASSIFICATION	0.9999999475583824	WITHOUT_CLASSIFICATION	5.244161745511641E-8	IMPLEMENTATION
// double precision, big-endian	WITHOUT_CLASSIFICATION	0.9999999910606137	WITHOUT_CLASSIFICATION	8.939386352101952E-9	IMPLEMENTATION
// double precision, native	WITHOUT_CLASSIFICATION	0.9999999943527527	WITHOUT_CLASSIFICATION	5.647247448230294E-9	IMPLEMENTATION
// signed short, little-endian	WITHOUT_CLASSIFICATION	0.9999980811740636	WITHOUT_CLASSIFICATION	1.918825936273976E-6	IMPLEMENTATION
// signed char	WITHOUT_CLASSIFICATION	0.9999998527879033	WITHOUT_CLASSIFICATION	1.4721209679811567E-7	IMPLEMENTATION
// unsigned char	WITHOUT_CLASSIFICATION	0.9999999026513042	WITHOUT_CLASSIFICATION	9.734869576519777E-8	IMPLEMENTATION
// long, little-endian	WITHOUT_CLASSIFICATION	0.9999988180116344	WITHOUT_CLASSIFICATION	1.1819883656276168E-6	IMPLEMENTATION
// long, big-endian	WITHOUT_CLASSIFICATION	0.9999998203219772	WITHOUT_CLASSIFICATION	1.7967802272410526E-7	IMPLEMENTATION
// unsigned int, native	WITHOUT_CLASSIFICATION	0.9999999885110018	WITHOUT_CLASSIFICATION	1.1488998208610059E-8	IMPLEMENTATION
// int, native	WITHOUT_CLASSIFICATION	0.9999997665704087	WITHOUT_CLASSIFICATION	2.334295913643681E-7	IMPLEMENTATION
// 64-bit number, native (as fixnum)	WITHOUT_CLASSIFICATION	0.9999997891725771	WITHOUT_CLASSIFICATION	2.1082742276852343E-7	IMPLEMENTATION
// How many occurrences of 'type' we want	WITHOUT_CLASSIFICATION	0.9999993283113902	WITHOUT_CLASSIFICATION	6.716886098933525E-7	IMPLEMENTATION
// See if we have a converter for the job...	WITHOUT_CLASSIFICATION	0.9999986975832604	WITHOUT_CLASSIFICATION	1.3024167395801863E-6	IMPLEMENTATION
// Otherwise the unpack should be here...	WITHOUT_CLASSIFICATION	0.9998598291188935	WITHOUT_CLASSIFICATION	1.40170881106566E-4	IMPLEMENTATION
// Possible Checksum Byte	WITHOUT_CLASSIFICATION	0.9999995694191024	WITHOUT_CLASSIFICATION	4.305808976192069E-7	IMPLEMENTATION
// obtain a	WITHOUT_CLASSIFICATION	0.9999996440195595	WITHOUT_CLASSIFICATION	3.559804404163565E-7	IMPLEMENTATION
// obtain b	WITHOUT_CLASSIFICATION	0.9999995969527867	WITHOUT_CLASSIFICATION	4.0304721318375623E-7	IMPLEMENTATION
// obtain c	WITHOUT_CLASSIFICATION	0.9999998332651603	WITHOUT_CLASSIFICATION	1.6673483964795367E-7	IMPLEMENTATION
// obtain d	WITHOUT_CLASSIFICATION	0.9999987386287922	WITHOUT_CLASSIFICATION	1.2613712077846354E-6	IMPLEMENTATION
/*encode.limit() - */	WITHOUT_CLASSIFICATION	0.9999943492512239	WITHOUT_CLASSIFICATION	5.6507487760875754E-6	IMPLEMENTATION
/* 1 */	WITHOUT_CLASSIFICATION	0.9999983480773873	WITHOUT_CLASSIFICATION	1.6519226126800642E-6	IMPLEMENTATION
/* 2 */	WITHOUT_CLASSIFICATION	0.9999982036870156	WITHOUT_CLASSIFICATION	1.7963129843224184E-6	IMPLEMENTATION
/* 3 */	WITHOUT_CLASSIFICATION	0.9999992323689445	WITHOUT_CLASSIFICATION	7.676310555504094E-7	IMPLEMENTATION
/* 4 */	WITHOUT_CLASSIFICATION	0.9999989849580719	WITHOUT_CLASSIFICATION	1.0150419281006653E-6	IMPLEMENTATION
/* 5 */	WITHOUT_CLASSIFICATION	0.9999991192301498	WITHOUT_CLASSIFICATION	8.807698500399292E-7	IMPLEMENTATION
/* 6 */	WITHOUT_CLASSIFICATION	0.9999990189613647	WITHOUT_CLASSIFICATION	9.81038635347431E-7	IMPLEMENTATION
/* 7 */	WITHOUT_CLASSIFICATION	0.999999082105249	WITHOUT_CLASSIFICATION	9.178947509219648E-7	IMPLEMENTATION
// Skip all whitespace in pack format string	WITHOUT_CLASSIFICATION	0.9999975134753755	WITHOUT_CLASSIFICATION	2.4865246245047522E-6	IMPLEMENTATION
// Skip embedded comments in pack format string	WITHOUT_CLASSIFICATION	0.9999999812611823	WITHOUT_CLASSIFICATION	1.8738817715797786E-8	IMPLEMENTATION
// In case when the number of occurences is // explicitly specified, we have to read up // the remaining garbage after the '\0' to // satisfy the requested pattern.	WITHOUT_CLASSIFICATION	0.9990388000828931	WITHOUT_CLASSIFICATION	9.611999171068749E-4	IMPLEMENTATION
//normal exit, this should be faster than a test at each iterations for string with more than //about 40 char	WITHOUT_CLASSIFICATION	0.999962168484242	WITHOUT_CLASSIFICATION	3.783151575800469E-5	IMPLEMENTATION
// We encountered '\0' when // were reading the buffer above, // increment the number of read bytes.	WITHOUT_CLASSIFICATION	0.999999999918932	WITHOUT_CLASSIFICATION	8.106814749722295E-11	IMPLEMENTATION
// MRI behavior: Contrary to what seems to be logical, // when '*' is given, MRI calculates the distance // to the end, in order to go backwards.	WITHOUT_CLASSIFICATION	0.9999987861285026	WITHOUT_CLASSIFICATION	1.2138714973543844E-6	IMPLEMENTATION
// Determine how many of type are needed (default: 1)	WITHOUT_CLASSIFICATION	0.9999579985453445	WITHOUT_CLASSIFICATION	4.200145465549971E-5	IMPLEMENTATION
// 'Z' adds extra null pad (versus 'a')	WITHOUT_CLASSIFICATION	0.9999919693225938	WITHOUT_CLASSIFICATION	8.03067740615377E-6	IMPLEMENTATION
//if the low bit is set //set the high bit of the result	WITHOUT_CLASSIFICATION	0.9999992651290116	WITHOUT_CLASSIFICATION	7.348709884687326E-7	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary //shift the byte	WITHOUT_CLASSIFICATION	0.999996612403023	WITHOUT_CLASSIFICATION	3.3875969770258797E-6	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999802873355217	WITHOUT_CLASSIFICATION	1.971266447826055E-5	IMPLEMENTATION
//if the length is not a multiple of 8 //we need to pad the last byte	WITHOUT_CLASSIFICATION	0.9999802873355217	WITHOUT_CLASSIFICATION	1.971266447826055E-5	IMPLEMENTATION
//do some padding, I don't understand the padding strategy	WITHOUT_CLASSIFICATION	0.99999366247391	WITHOUT_CLASSIFICATION	6.337526090040348E-6	IMPLEMENTATION
// we filled up current byte; append it and create next one	WITHOUT_CLASSIFICATION	0.9999900923109954	WITHOUT_CLASSIFICATION	9.907689004635852E-6	IMPLEMENTATION
//if the index is not a multiple of 8, we are not on a byte boundary	WITHOUT_CLASSIFICATION	0.9999990373109862	WITHOUT_CLASSIFICATION	9.626890137957453E-7	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999886847881	WITHOUT_CLASSIFICATION	1.1315212026197884E-8	IMPLEMENTATION
// we don't deal with negatives.	WITHOUT_CLASSIFICATION	0.9999666274304068	WITHOUT_CLASSIFICATION	3.337256959328589E-5	IMPLEMENTATION
// populate commandline with NG-provided stuff	WITHOUT_CLASSIFICATION	0.999999883821266	WITHOUT_CLASSIFICATION	1.1617873400481869E-7	IMPLEMENTATION
// are we recursing?	WITHOUT_CLASSIFICATION	0.9999999480571	WITHOUT_CLASSIFICATION	5.194290002160481E-8	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999998884724	WITHOUT_CLASSIFICATION	1.1152751588865453E-10	IMPLEMENTATION
// default PidGetter	WITHOUT_CLASSIFICATION	0.9999991146427113	WITHOUT_CLASSIFICATION	8.853572887479767E-7	IMPLEMENTATION
// ignore and try windows version	WITHOUT_CLASSIFICATION	0.999993581413447	WITHOUT_CLASSIFICATION	6.418586553027264E-6	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999219511413	WITHOUT_CLASSIFICATION	7.804885869755448E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999219511413	WITHOUT_CLASSIFICATION	7.804885869755448E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999219511413	WITHOUT_CLASSIFICATION	7.804885869755448E-8	IMPLEMENTATION
// ignore and use hashcode	WITHOUT_CLASSIFICATION	0.9999999219511413	WITHOUT_CLASSIFICATION	7.804885869755448E-8	IMPLEMENTATION
// try both	WITHOUT_CLASSIFICATION	0.9999966896447684	WITHOUT_CLASSIFICATION	3.310355231562261E-6	IMPLEMENTATION
// just unix	WITHOUT_CLASSIFICATION	0.9999996991711614	WITHOUT_CLASSIFICATION	3.0082883851844324E-7	IMPLEMENTATION
// just windows	WITHOUT_CLASSIFICATION	0.9999976756343147	WITHOUT_CLASSIFICATION	2.324365685293734E-6	IMPLEMENTATION
// neither	WITHOUT_CLASSIFICATION	0.9999574193791017	WITHOUT_CLASSIFICATION	4.258062089835124E-5	IMPLEMENTATION
// CON: popen is a case where I think we should just always shell out.	WITHOUT_CLASSIFICATION	0.9999718677142737	WITHOUT_CLASSIFICATION	2.8132285726241882E-5	IMPLEMENTATION
// single string command, pass to sh to expand wildcards	WITHOUT_CLASSIFICATION	0.9999997328567131	WITHOUT_CLASSIFICATION	2.671432869624675E-7	IMPLEMENTATION
// direct invocation of the command	WITHOUT_CLASSIFICATION	0.9999988845257471	WITHOUT_CLASSIFICATION	1.1154742528733741E-6	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997937678708	WITHOUT_CLASSIFICATION	2.0623212907784856E-7	IMPLEMENTATION
// break out if we've dug as deep as we can	WITHOUT_CLASSIFICATION	0.9999997937678708	WITHOUT_CLASSIFICATION	2.0623212907784856E-7	IMPLEMENTATION
// close process output // See JRUBY-3405; hooking up to parent process stdin caused // problems for IRB etc using stdin.	WITHOUT_CLASSIFICATION	0.9999999065835975	WITHOUT_CLASSIFICATION	9.341640256043823E-8	IMPLEMENTATION
// ignore, we're on the way out	WITHOUT_CLASSIFICATION	0.9999959756440844	WITHOUT_CLASSIFICATION	4.024355915571898E-6	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999970519538015	WITHOUT_CLASSIFICATION	2.948046198545962E-6	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999999525104	WITHOUT_CLASSIFICATION	4.748959702600197E-10	IMPLEMENTATION
// popen callers wants to be able to read, provide subprocess in directly	WITHOUT_CLASSIFICATION	0.999999999525104	WITHOUT_CLASSIFICATION	4.748959702600197E-10	IMPLEMENTATION
// popen caller wants to be able to write, provide subprocess out directly	WITHOUT_CLASSIFICATION	0.999999999679292	WITHOUT_CLASSIFICATION	3.2070811090930313E-10	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995743517956835	WITHOUT_CLASSIFICATION	4.256482043164722E-4	IMPLEMENTATION
// no read requested, hook up read to parents output	WITHOUT_CLASSIFICATION	0.9995743517956835	WITHOUT_CLASSIFICATION	4.256482043164722E-4	IMPLEMENTATION
// execute command with sh -c // this does shell expansion of wildcards	WITHOUT_CLASSIFICATION	0.999999932043285	WITHOUT_CLASSIFICATION	6.795671503861315E-8	IMPLEMENTATION
// We need to close the out, since some // processes would just wait for the stream // to be closed before they process its content, // and produce the output. E.g.: "cat".	WITHOUT_CLASSIFICATION	0.9999999997174809	WITHOUT_CLASSIFICATION	2.82519167838557E-10	IMPLEMENTATION
// we only close out if it's the slave stream, to avoid // closing a directly-mapped stream from parent process	WITHOUT_CLASSIFICATION	0.9999999434741789	WITHOUT_CLASSIFICATION	5.6525821021296756E-8	IMPLEMENTATION
// The assumption here is that the 'in' stream provides // proper available() support. If available() always // returns 0, we'll hang!	WITHOUT_CLASSIFICATION	0.9999856883793966	WITHOUT_CLASSIFICATION	1.4311620603368335E-5	IMPLEMENTATION
// Force t3 to quit, just in case if it's stuck. // Note: On some platforms, even interrupt might not // have an effect if the thread is IO blocked.	WITHOUT_CLASSIFICATION	0.9928197491103367	WITHOUT_CLASSIFICATION	0.007180250889663329	IMPLEMENTATION
// Check for special shell characters [<>|] at the beginning // and end of each command word and don't run in process if we find them.	WITHOUT_CLASSIFICATION	0.9999999567234767	WITHOUT_CLASSIFICATION	4.327652322075977E-8	IMPLEMENTATION
// Note: this method produces meaningful results // only for RubyIO objects. For everything else returns 0.	WITHOUT_CLASSIFICATION	0.9996484807205872	WITHOUT_CLASSIFICATION	3.515192794127854E-4	IMPLEMENTATION
//sequential	WITHOUT_CLASSIFICATION	0.9999205541925894	WITHOUT_CLASSIFICATION	7.94458074105827E-5	IMPLEMENTATION
// reverse the entire area of the array selected if it's reversed.	WITHOUT_CLASSIFICATION	0.9999982373445142	WITHOUT_CLASSIFICATION	1.7626554857343819E-6	IMPLEMENTATION
// do median of 7 if the array is over 200 elements.	WITHOUT_CLASSIFICATION	0.9999999878742728	WITHOUT_CLASSIFICATION	1.2125727276092384E-8	IMPLEMENTATION
// if it's less than 200 do median of 3	WITHOUT_CLASSIFICATION	0.9999998702719027	WITHOUT_CLASSIFICATION	1.2972809717117087E-7	IMPLEMENTATION
// SignalFacade	WITHOUT_CLASSIFICATION	0.9999991666825004	WITHOUT_CLASSIFICATION	8.333174996669726E-7	IMPLEMENTATION
// this is the order in which MRI does these two tests	WITHOUT_CLASSIFICATION	0.999997178782537	WITHOUT_CLASSIFICATION	2.821217463022416E-6	IMPLEMENTATION
// this is the order in which MRI does these tests	WITHOUT_CLASSIFICATION	0.9999986559484288	WITHOUT_CLASSIFICATION	1.3440515711875271E-6	IMPLEMENTATION
// basically just forcing a TypeError here to match MRI	WITHOUT_CLASSIFICATION	0.9999996913325772	WITHOUT_CLASSIFICATION	3.0866742288452076E-7	IMPLEMENTATION
// not saving DFS instance, as it will only be used once (at most) per call	WITHOUT_CLASSIFICATION	0.9999977789475939	WITHOUT_CLASSIFICATION	2.2210524061011693E-6	IMPLEMENTATION
// Args	WITHOUT_CLASSIFICATION	0.9999994522691388	WITHOUT_CLASSIFICATION	5.477308612429445E-7	IMPLEMENTATION
// static methods only	WITHOUT_CLASSIFICATION	0.9999999044015242	WITHOUT_CLASSIFICATION	9.559847577367988E-8	IMPLEMENTATION
//System.err.println(" calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999236316333	WITHOUT_CLASSIFICATION	7.636836668551886E-8	IMPLEMENTATION
// MRI 1.8.6 behavior: null byte after '%' // leads to "%" string. Null byte in // other places, like "%5\0", leads to error.	WITHOUT_CLASSIFICATION	0.9999837865613687	WITHOUT_CLASSIFICATION	1.621343863142076E-5	IMPLEMENTATION
// last index (+1) accessed by next() // last index (+1) accessed by get()	WITHOUT_CLASSIFICATION	0.9999376843891348	WITHOUT_CLASSIFICATION	6.231561086513853E-5	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly.	WITHOUT_CLASSIFICATION	0.9999998524977997	WITHOUT_CLASSIFICATION	1.475022002397706E-7	IMPLEMENTATION
// Special form of sprintf that returns a RubyString and handles // tainted strings correctly. Version for 1.9.	WITHOUT_CLASSIFICATION	0.9999997699702108	WITHOUT_CLASSIFICATION	2.3002978915996294E-7	IMPLEMENTATION
// MRI doesn't flag it as an error if width is given multiple // times as a number (but it does for *)	WITHOUT_CLASSIFICATION	0.9999996218239942	WITHOUT_CLASSIFICATION	3.7817600588908626E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999988658083454	WITHOUT_CLASSIFICATION	1.1341916545937302E-6	IMPLEMENTATION
// MRI 1.8.5-p12 doesn't support 1-char strings, but // YARV 0.4.1 does. I don't think it hurts to include // this; sprintf('%c','a') is nicer than sprintf('%c','a'[0])	WITHOUT_CLASSIFICATION	0.9999999160141464	WITHOUT_CLASSIFICATION	8.398585354477005E-8	IMPLEMENTATION
// 'd' and 'i' are the same	WITHOUT_CLASSIFICATION	0.999999498618168	WITHOUT_CLASSIFICATION	5.01381831977262E-7	IMPLEMENTATION
// 'u' with space or plus flags is same as 'd'	WITHOUT_CLASSIFICATION	0.9999999154054526	WITHOUT_CLASSIFICATION	8.459454745773162E-8	IMPLEMENTATION
// We depart here from strict adherence to MRI code, as MRI // uses C-sprintf, in part, to format numeric output, while // we'll use Java's numeric formatting code (and our own).	WITHOUT_CLASSIFICATION	0.9999999980544354	WITHOUT_CLASSIFICATION	1.9455646551709458E-9	IMPLEMENTATION
// skip '-' in bytes, will add where appropriate	WITHOUT_CLASSIFICATION	0.9999979193904764	WITHOUT_CLASSIFICATION	2.080609523461539E-6	IMPLEMENTATION
// ..	WITHOUT_CLASSIFICATION	0.9999991245234464	WITHOUT_CLASSIFICATION	8.754765535465207E-7	IMPLEMENTATION
// the 1 is for the stripped sign char	WITHOUT_CLASSIFICATION	0.9999999177490247	WITHOUT_CLASSIFICATION	8.225097528360095E-8	IMPLEMENTATION
// FIXME: what is correct 'recv' argument? // (this does produce the desired behavior)	WITHOUT_CLASSIFICATION	0.9984978563075048	WITHOUT_CLASSIFICATION	0.001502143692495178	IMPLEMENTATION
// gotta have at least a zero...	WITHOUT_CLASSIFICATION	0.9999889707822812	WITHOUT_CLASSIFICATION	1.1029217718734885E-5	IMPLEMENTATION
// OK, we now have the significand in digits[0...nDigits] // and the exponent in exponent.  We're ready to format.	WITHOUT_CLASSIFICATION	0.9999995020381042	WITHOUT_CLASSIFICATION	4.979618959115033E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.999999988868752	WITHOUT_CLASSIFICATION	1.1131247935144236E-8	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999996192590727	WITHOUT_CLASSIFICATION	3.8074092739351757E-7	IMPLEMENTATION
//System.err.println(" stringToLong/reading c=" + data[s]);	WITHOUT_CLASSIFICATION	0.9999999757195556	WITHOUT_CLASSIFICATION	2.428044448927106E-8	IMPLEMENTATION
//System.err.println(" stringToLong/converted c=" + c);	WITHOUT_CLASSIFICATION	0.9999998462863231	WITHOUT_CLASSIFICATION	1.537136768144753E-7	IMPLEMENTATION
// intDigits isn't used here, but if it were, it would be 1	WITHOUT_CLASSIFICATION	0.999999988868752	WITHOUT_CLASSIFICATION	1.1131247935144236E-8	IMPLEMENTATION
/* intDigits = 1; */	WITHOUT_CLASSIFICATION	0.9999996192590727	WITHOUT_CLASSIFICATION	3.8074092739351757E-7	IMPLEMENTATION
// precision for G/g includes integer digits	WITHOUT_CLASSIFICATION	0.999999903274919	WITHOUT_CLASSIFICATION	9.672508087315601E-8	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999932618038265	WITHOUT_CLASSIFICATION	6.738196173466282E-6	IMPLEMENTATION
// deal with length/width	WITHOUT_CLASSIFICATION	0.9999932618038265	WITHOUT_CLASSIFICATION	6.738196173466282E-6	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998649129651996	WITHOUT_CLASSIFICATION	1.3508703480025877E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999974523176	WITHOUT_CLASSIFICATION	2.5476823982037525E-8	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999270426927	WITHOUT_CLASSIFICATION	7.295730730500674E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999997809927658	WITHOUT_CLASSIFICATION	2.190072342677371E-7	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998654961152762	WITHOUT_CLASSIFICATION	1.3450388472368942E-4	IMPLEMENTATION
// MRI behavior: In this mode // trailing zeroes are removed: // 1.500E+05 -> 1.5E+05 	WITHOUT_CLASSIFICATION	0.9999993051320939	WITHOUT_CLASSIFICATION	6.948679061383781E-7	IMPLEMENTATION
// '.' is printed	WITHOUT_CLASSIFICATION	0.999934215466145	WITHOUT_CLASSIFICATION	6.578453385495663E-5	IMPLEMENTATION
// all precision numebers printed	WITHOUT_CLASSIFICATION	0.9999703865713065	WITHOUT_CLASSIFICATION	2.9613428693461995E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999670927798726	WITHOUT_CLASSIFICATION	3.2907220127419265E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999989208703222	WITHOUT_CLASSIFICATION	1.0791296778510694E-6	IMPLEMENTATION
// decimal form, like (but not *just* like!) 'f'	WITHOUT_CLASSIFICATION	0.9999992233553978	WITHOUT_CLASSIFICATION	7.766446022651255E-7	IMPLEMENTATION
// digits array shifted, update all	WITHOUT_CLASSIFICATION	0.9999997173897797	WITHOUT_CLASSIFICATION	2.826102204344349E-7	IMPLEMENTATION
// will have a trailing '.' // g fills trailing zeroes if #	WITHOUT_CLASSIFICATION	0.9999999702977438	WITHOUT_CLASSIFICATION	2.9702256200239733E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.999999983495598	WITHOUT_CLASSIFICATION	1.6504401973108096E-8	IMPLEMENTATION
// s/b true, since intLength > 0	WITHOUT_CLASSIFICATION	0.999999983495598	WITHOUT_CLASSIFICATION	1.6504401973108096E-8	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999110933924928	WITHOUT_CLASSIFICATION	8.890660750723364E-5	IMPLEMENTATION
// always need at least a 0	WITHOUT_CLASSIFICATION	0.9999110933924928	WITHOUT_CLASSIFICATION	8.890660750723364E-5	IMPLEMENTATION
// digits arr shifted, update all	WITHOUT_CLASSIFICATION	0.9999998796623794	WITHOUT_CLASSIFICATION	1.2033762065601264E-7	IMPLEMENTATION
// (1|intlen).prec	WITHOUT_CLASSIFICATION	0.9999984096360852	WITHOUT_CLASSIFICATION	1.590363914689353E-6	IMPLEMENTATION
// (1|intlen)	WITHOUT_CLASSIFICATION	0.9999901799831556	WITHOUT_CLASSIFICATION	9.820016844450116E-6	IMPLEMENTATION
// will have a trailing '.'	WITHOUT_CLASSIFICATION	0.9999998792611735	WITHOUT_CLASSIFICATION	1.207388265894028E-7	IMPLEMENTATION
// fill up the rest with zeroes	WITHOUT_CLASSIFICATION	0.9999868265872622	WITHOUT_CLASSIFICATION	1.3173412737745845E-5	IMPLEMENTATION
//System.err.println(" main/len=" + len);	WITHOUT_CLASSIFICATION	0.9999995704793122	WITHOUT_CLASSIFICATION	4.2952068784602985E-7	IMPLEMENTATION
// 5 -> e+nnn / e-nnn	WITHOUT_CLASSIFICATION	0.9999999270426927	WITHOUT_CLASSIFICATION	7.295730730500674E-8	IMPLEMENTATION
// 4 -> e+nn / e-nn	WITHOUT_CLASSIFICATION	0.9999997809927658	WITHOUT_CLASSIFICATION	2.190072342677371E-7	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999670927798726	WITHOUT_CLASSIFICATION	3.2907220127419265E-5	IMPLEMENTATION
// '.'	WITHOUT_CLASSIFICATION	0.9999989208703222	WITHOUT_CLASSIFICATION	1.0791296778510694E-6	IMPLEMENTATION
// equivalent to MRI case '\0':	WITHOUT_CLASSIFICATION	0.9999673043463023	WITHOUT_CLASSIFICATION	3.269565369777036E-5	IMPLEMENTATION
// '.' and all precision digits printed	WITHOUT_CLASSIFICATION	0.9999881991077623	WITHOUT_CLASSIFICATION	1.1800892237825832E-5	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999989819295563	WITHOUT_CLASSIFICATION	1.0180704436985765E-6	IMPLEMENTATION
// dangling '%' char	WITHOUT_CLASSIFICATION	0.999999936682469	WITHOUT_CLASSIFICATION	6.331753102152956E-8	IMPLEMENTATION
// main while loop (offset < length)	WITHOUT_CLASSIFICATION	0.9999970395435828	WITHOUT_CLASSIFICATION	2.9604564171215603E-6	IMPLEMENTATION
// debugging code, keeping for now	WITHOUT_CLASSIFICATION	0.9999999944081972	WITHOUT_CLASSIFICATION	5.591802873522382E-9	IMPLEMENTATION
// MRI rounds up on nnn5nnn, but not nnn5 -- // except for when they do	WITHOUT_CLASSIFICATION	0.999999633803062	WITHOUT_CLASSIFICATION	3.6619693793344766E-7	IMPLEMENTATION
// "%.0f" % 0.99	WITHOUT_CLASSIFICATION	0.9999992158902603	WITHOUT_CLASSIFICATION	7.841097397630053E-7	IMPLEMENTATION
// limit the length of negatives if possible (also faster)	WITHOUT_CLASSIFICATION	0.9999939018414156	WITHOUT_CLASSIFICATION	6.098158584362476E-6	IMPLEMENTATION
// negative values	WITHOUT_CLASSIFICATION	0.9999984813919963	WITHOUT_CLASSIFICATION	1.5186080036357767E-6	IMPLEMENTATION
// calculation for negatives when %u specified // for values >= Integer.MIN_VALUE * 2, MRI uses (the equivalent of) //   long neg_u = (((long)Integer.MAX_VALUE + 1) << 1) + val // for smaller values, BigInteger math is required to conform to MRI's // result.	WITHOUT_CLASSIFICATION	0.9999999373185845	WITHOUT_CLASSIFICATION	6.268141553905393E-8	IMPLEMENTATION
// relatively cheap test for 32-bit values	WITHOUT_CLASSIFICATION	0.9999999585054923	WITHOUT_CLASSIFICATION	4.149450764825807E-8	IMPLEMENTATION
// no such luck...	WITHOUT_CLASSIFICATION	0.999997428912451	WITHOUT_CLASSIFICATION	2.571087548890091E-6	IMPLEMENTATION
// ok, now it gets expensive...	WITHOUT_CLASSIFICATION	0.9999985402710835	WITHOUT_CLASSIFICATION	1.459728916503728E-6	IMPLEMENTATION
// go through negated powers of 32 until we find one small enough 	WITHOUT_CLASSIFICATION	0.9999901433264566	WITHOUT_CLASSIFICATION	9.856673543442813E-6	IMPLEMENTATION
// add to the corresponding positive power of 32 for the result. // meaningful? no. conformant? yes. I just write the code...	WITHOUT_CLASSIFICATION	0.9999999879343768	WITHOUT_CLASSIFICATION	1.206562318523449E-8	IMPLEMENTATION
/* constant vector a */	WITHOUT_CLASSIFICATION	0.9999940907789714	WITHOUT_CLASSIFICATION	5.909221028699665E-6	IMPLEMENTATION
/* most significant w-r bits */	WITHOUT_CLASSIFICATION	0.9999997940564472	WITHOUT_CLASSIFICATION	2.059435526821228E-7	IMPLEMENTATION
/* least significant r bits */	WITHOUT_CLASSIFICATION	0.9999999785849127	WITHOUT_CLASSIFICATION	2.1415087153408064E-8	IMPLEMENTATION
// state[j] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.9999999350081249	WITHOUT_CLASSIFICATION	6.49918751448679E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.99999993096972	WITHOUT_CLASSIFICATION	6.903028001435062E-8	IMPLEMENTATION
// state[i] &= 0xffffffffL;	WITHOUT_CLASSIFICATION	0.99999993096972	WITHOUT_CLASSIFICATION	6.903028001435062E-8	IMPLEMENTATION
/* MSB is 1; assuring non-zero initial array */	WITHOUT_CLASSIFICATION	0.9999996358289734	WITHOUT_CLASSIFICATION	3.6417102656998427E-7	IMPLEMENTATION
/* Tempering */	WITHOUT_CLASSIFICATION	0.9999991882932137	WITHOUT_CLASSIFICATION	8.117067862120349E-7	IMPLEMENTATION
// MRI behavior: Week values are monotonous. // So, weeks that effectively belong to previous year, // will get the value of 0, not 52 or 53, as in Java.	WITHOUT_CLASSIFICATION	0.9999999988209946	WITHOUT_CLASSIFICATION	1.179005477859798E-9	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999998780074953	WITHOUT_CLASSIFICATION	1.2199250469144596E-7	IMPLEMENTATION
//System.err.println("byteListToInum(" + str + ")");	WITHOUT_CLASSIFICATION	0.9999998780074953	WITHOUT_CLASSIFICATION	1.2199250469144596E-7	IMPLEMENTATION
// \v	WITHOUT_CLASSIFICATION	0.9999989819295563	WITHOUT_CLASSIFICATION	1.0180704436985765E-6	IMPLEMENTATION
//System.err.println("getSign()");	WITHOUT_CLASSIFICATION	0.9999990548806886	WITHOUT_CLASSIFICATION	9.451193114812152E-7	IMPLEMENTATION
//System.err.println(" getSign/" + sign);	WITHOUT_CLASSIFICATION	0.9999998860191497	WITHOUT_CLASSIFICATION	1.1398085032165187E-7	IMPLEMENTATION
//System.err.println("figureOutBase()/base=" + base);	WITHOUT_CLASSIFICATION	0.9999998798946585	WITHOUT_CLASSIFICATION	1.2010534141662615E-7	IMPLEMENTATION
//System.err.println(" figureOutBase/base=" + base);	WITHOUT_CLASSIFICATION	0.9999998000123415	WITHOUT_CLASSIFICATION	1.9998765848684138E-7	IMPLEMENTATION
//System.err.println("calculateLength()/str=" + str);	WITHOUT_CLASSIFICATION	0.9999999567054986	WITHOUT_CLASSIFICATION	4.329450148046048E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
//System.err.println(" stringToLong=" + val);	WITHOUT_CLASSIFICATION	0.9999999813514817	WITHOUT_CLASSIFICATION	1.8648518393690093E-8	IMPLEMENTATION
// no number	WITHOUT_CLASSIFICATION	0.9999684788263477	WITHOUT_CLASSIFICATION	3.152117365238699E-5	IMPLEMENTATION
// trailing garbage	WITHOUT_CLASSIFICATION	0.9999988607933129	WITHOUT_CLASSIFICATION	1.1392066870896915E-6	IMPLEMENTATION
//System.err.println("ADDING CHAR: " + (char)cx + " with number: " + cx);	WITHOUT_CLASSIFICATION	0.9999997240288575	WITHOUT_CLASSIFICATION	2.7597114242982244E-7	IMPLEMENTATION
// it was not found at all!	WITHOUT_CLASSIFICATION	0.9999998642641384	WITHOUT_CLASSIFICATION	1.3573586158229282E-7	IMPLEMENTATION
// can be overridden to be informed when objects are removed	WITHOUT_CLASSIFICATION	0.9999996796439985	WITHOUT_CLASSIFICATION	3.203560016109169E-7	IMPLEMENTATION
// we reached the end of a list	WITHOUT_CLASSIFICATION	0.9999993621789129	WITHOUT_CLASSIFICATION	6.378210871144645E-7	IMPLEMENTATION
// goto next bucket	WITHOUT_CLASSIFICATION	0.9999969550617488	WITHOUT_CLASSIFICATION	3.044938251195494E-6	IMPLEMENTATION
// we reached the end	WITHOUT_CLASSIFICATION	0.9999986443539588	WITHOUT_CLASSIFICATION	1.3556460412185451E-6	IMPLEMENTATION
// entry is the first element of this bucket	WITHOUT_CLASSIFICATION	0.9999999685317362	WITHOUT_CLASSIFICATION	3.146826380087127E-8	IMPLEMENTATION
// states	WITHOUT_CLASSIFICATION	0.9999998060088757	WITHOUT_CLASSIFICATION	1.9399112420050957E-7	IMPLEMENTATION
// remove leading whitespace (includes _ for lax) // get sign, if any	WITHOUT_CLASSIFICATION	0.9999999652564183	WITHOUT_CLASSIFICATION	3.4743581654831826E-8	IMPLEMENTATION
// optimistic pass - calculate value as digits are processed // digits - lax rules // decimal digits - lax rules // exponent sign/digits - lax rules // digits - strict rules // decimal digits - strict rules // exponent sign/digits - strict rules // complete calculation if possible	WITHOUT_CLASSIFICATION	0.9999999989670431	WITHOUT_CLASSIFICATION	1.0329568517680307E-9	IMPLEMENTATION
// fields used for direct (optimistic) calculation // number of significant digits, updated as parsed // zeroes that may go to significand or exponent // offset of decimal pt from start (-1 -> no decimal) // significand, updated as parsed // exponent, updated as parsed	WITHOUT_CLASSIFICATION	0.9999999716207802	WITHOUT_CLASSIFICATION	2.8379219767479936E-8	IMPLEMENTATION
// drop through for sign	WITHOUT_CLASSIFICATION	0.9999980641136886	WITHOUT_CLASSIFICATION	1.9358863113041225E-6	IMPLEMENTATION
// switch // will use this if we have to go back the slow way	WITHOUT_CLASSIFICATION	0.999998502245458	WITHOUT_CLASSIFICATION	1.4977545419773367E-6	IMPLEMENTATION
// drop through for non-strict digits	WITHOUT_CLASSIFICATION	0.9999994744960679	WITHOUT_CLASSIFICATION	5.255039321416973E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999852532433	WITHOUT_CLASSIFICATION	1.474675677691662E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998723954622	WITHOUT_CLASSIFICATION	1.2760453783886032E-7	IMPLEMENTATION
// no digits, go calc (will return +/- 0.0 for lax)	WITHOUT_CLASSIFICATION	0.9999961713304784	WITHOUT_CLASSIFICATION	3.82866952164538E-6	IMPLEMENTATION
// ignore leading zeroes	WITHOUT_CLASSIFICATION	0.9999995204149145	WITHOUT_CLASSIFICATION	4.795850854598194E-7	IMPLEMENTATION
// just save a count of zeroes for now; if no digit // ends up following them, they'll be applied to the // exponent rather than the significand (and our max // length for optimistic calc).	WITHOUT_CLASSIFICATION	0.9999996642770562	WITHOUT_CLASSIFICATION	3.357229437270195E-7	IMPLEMENTATION
// ok, got a non-zero, have to own up to our horded zeroes	WITHOUT_CLASSIFICATION	0.9999981533699611	WITHOUT_CLASSIFICATION	1.8466300388341734E-6	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998920704838	WITHOUT_CLASSIFICATION	1.0792951621507296E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998920704838	WITHOUT_CLASSIFICATION	1.0792951621507296E-7	IMPLEMENTATION
// oh, well, it was worth a try. go let // Double/FloatingDecimal handle it 	WITHOUT_CLASSIFICATION	0.9999999972057408	WITHOUT_CLASSIFICATION	2.7942591708994667E-9	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999992188507513	WITHOUT_CLASSIFICATION	7.811492487436311E-7	IMPLEMENTATION
// ignore // switch	WITHOUT_CLASSIFICATION	0.9999992188507513	WITHOUT_CLASSIFICATION	7.811492487436311E-7	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999987560732977	WITHOUT_CLASSIFICATION	1.2439267023257324E-6	IMPLEMENTATION
// end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999987560732977	WITHOUT_CLASSIFICATION	1.2439267023257324E-6	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995944839976	WITHOUT_CLASSIFICATION	4.0551600248929964E-7	IMPLEMENTATION
// first non_underscore char must be digit	WITHOUT_CLASSIFICATION	0.999999953416582	WITHOUT_CLASSIFICATION	4.658341790426574E-8	IMPLEMENTATION
// no dec digits, end of parseable data, go to calc	WITHOUT_CLASSIFICATION	0.9999771797975048	WITHOUT_CLASSIFICATION	2.2820202495232755E-5	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997154270944	WITHOUT_CLASSIFICATION	2.845729055417824E-7	IMPLEMENTATION
// difficult case, send to Double/FloatingDecimal	WITHOUT_CLASSIFICATION	0.999999987130841	WITHOUT_CLASSIFICATION	1.286915901585298E-8	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998040478495	WITHOUT_CLASSIFICATION	1.959521506321519E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998040478495	WITHOUT_CLASSIFICATION	1.959521506321519E-7	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999852532433	WITHOUT_CLASSIFICATION	1.474675677691662E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999852532433	WITHOUT_CLASSIFICATION	1.474675677691662E-8	IMPLEMENTATION
// first char must be digit or decimal point	WITHOUT_CLASSIFICATION	0.9999999852532433	WITHOUT_CLASSIFICATION	1.474675677691662E-8	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998723954622	WITHOUT_CLASSIFICATION	1.2760453783886032E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998920704838	WITHOUT_CLASSIFICATION	1.0792951621507296E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998920704838	WITHOUT_CLASSIFICATION	1.0792951621507296E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998920704838	WITHOUT_CLASSIFICATION	1.0792951621507296E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995944839976	WITHOUT_CLASSIFICATION	4.0551600248929964E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995944839976	WITHOUT_CLASSIFICATION	4.0551600248929964E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995944839976	WITHOUT_CLASSIFICATION	4.0551600248929964E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997154270944	WITHOUT_CLASSIFICATION	2.845729055417824E-7	IMPLEMENTATION
// switch // if	WITHOUT_CLASSIFICATION	0.9999997154270944	WITHOUT_CLASSIFICATION	2.845729055417824E-7	IMPLEMENTATION
// lax (str.to_f) allows underscores between e/E and sign	WITHOUT_CLASSIFICATION	0.9999972141586648	WITHOUT_CLASSIFICATION	2.7858413351628397E-6	IMPLEMENTATION
// switch // for // no exponent, so drop through for calculation	WITHOUT_CLASSIFICATION	0.9999793574707782	WITHOUT_CLASSIFICATION	2.064252922185541E-5	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999736499499225	WITHOUT_CLASSIFICATION	2.6350050077537017E-5	IMPLEMENTATION
// TODO: it's not clear to me why, in FloatingDecimal, the // "slop" calculation performed above for positive exponents // isn't used for negative exponents as well. Will find out...	WITHOUT_CLASSIFICATION	0.9995795007800098	WITHOUT_CLASSIFICATION	4.204992199902645E-4	IMPLEMENTATION
// no digits, error	WITHOUT_CLASSIFICATION	0.9999046665064087	WITHOUT_CLASSIFICATION	9.53334935913503E-5	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999998977392158	WITHOUT_CLASSIFICATION	1.022607842817709E-7	IMPLEMENTATION
// too big for us	WITHOUT_CLASSIFICATION	0.9999998977392158	WITHOUT_CLASSIFICATION	1.022607842817709E-7	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999829966486	WITHOUT_CLASSIFICATION	1.7003351380730093E-8	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997209574736	WITHOUT_CLASSIFICATION	2.79042526456443E-7	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997209574736	WITHOUT_CLASSIFICATION	2.79042526456443E-7	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997209574736	WITHOUT_CLASSIFICATION	2.79042526456443E-7	IMPLEMENTATION
// first char must be digit	WITHOUT_CLASSIFICATION	0.9999999944792359	WITHOUT_CLASSIFICATION	5.52076396743923E-9	IMPLEMENTATION
// no dec digits after '.', error for strict	WITHOUT_CLASSIFICATION	0.9999924510708544	WITHOUT_CLASSIFICATION	7.548929145664353E-6	IMPLEMENTATION
// ignore leading zeroes // switch	WITHOUT_CLASSIFICATION	0.9999998723954622	WITHOUT_CLASSIFICATION	1.2760453783886032E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995944839976	WITHOUT_CLASSIFICATION	4.0551600248929964E-7	IMPLEMENTATION
// switch // for	WITHOUT_CLASSIFICATION	0.9999995944839976	WITHOUT_CLASSIFICATION	4.0551600248929964E-7	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
// only whitespace allowed after value for strict	WITHOUT_CLASSIFICATION	0.9999997209574736	WITHOUT_CLASSIFICATION	2.79042526456443E-7	IMPLEMENTATION
// must be at least one digit for strict	WITHOUT_CLASSIFICATION	0.9999999829966486	WITHOUT_CLASSIFICATION	1.7003351380730093E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999859597221	WITHOUT_CLASSIFICATION	1.4040277934221821E-8	IMPLEMENTATION
// switch //while	WITHOUT_CLASSIFICATION	0.9999992633395856	WITHOUT_CLASSIFICATION	7.366604144178526E-7	IMPLEMENTATION
/*     * All the positive powers of 10 that can be     * represented exactly in double/float.     * (From sun.misc.FloatingDecimal.java)     */	WITHOUT_CLASSIFICATION	0.9999999927999397	WITHOUT_CLASSIFICATION	7.200060375169435E-9	IMPLEMENTATION
// Zlib behavior: negative win_bits means no header and no checksum.	WITHOUT_CLASSIFICATION	0.9999978586705297	WITHOUT_CLASSIFICATION	2.1413294703632515E-6	IMPLEMENTATION
// rb_enc_mbclen	WITHOUT_CLASSIFICATION	0.9999994072023699	WITHOUT_CLASSIFICATION	5.927976301057821E-7	IMPLEMENTATION
// rb_enc_precise_mbclen	WITHOUT_CLASSIFICATION	0.9999997057980136	WITHOUT_CLASSIFICATION	2.942019865089473E-7	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784088535382	WITHOUT_CLASSIFICATION	2.159114646177272E-5	IMPLEMENTATION
// arg cannot be negative	WITHOUT_CLASSIFICATION	0.9999987634579023	WITHOUT_CLASSIFICATION	1.2365420978122075E-6	IMPLEMENTATION
// NoFunctionalitySignalFacade	WITHOUT_CLASSIFICATION	0.9999911617693711	WITHOUT_CLASSIFICATION	8.838230628935228E-6	IMPLEMENTATION
// Change visibility so others can see it	WITHOUT_CLASSIFICATION	0.9999998168124671	WITHOUT_CLASSIFICATION	1.8318753293716637E-7	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999924181414761	WITHOUT_CLASSIFICATION	7.581858523890595E-6	IMPLEMENTATION
// strip off "_dot_rb" for .rb files	WITHOUT_CLASSIFICATION	0.9999998867475101	WITHOUT_CLASSIFICATION	1.1325249001617628E-7	IMPLEMENTATION
// Makes sure the key is not already in the hashtable.	WITHOUT_CLASSIFICATION	0.9999984814591774	WITHOUT_CLASSIFICATION	1.5185408225885287E-6	IMPLEMENTATION
// Rehash the table if the threshold is exceeded	WITHOUT_CLASSIFICATION	0.9992358830945627	WITHOUT_CLASSIFICATION	7.641169054373698E-4	IMPLEMENTATION
// Creates the new entry.	WITHOUT_CLASSIFICATION	0.9999991842289857	WITHOUT_CLASSIFICATION	8.157710142555276E-7	IMPLEMENTATION
// next entry to return // current slot // current entry	WITHOUT_CLASSIFICATION	0.998137283134338	WITHOUT_CLASSIFICATION	0.001862716865661997	IMPLEMENTATION
// advance to first entry	WITHOUT_CLASSIFICATION	0.9999979517986928	WITHOUT_CLASSIFICATION	2.048201307172404E-6	IMPLEMENTATION
// The reason why we need the stream is to be able to invoke available() on it. // STDIN in Java is non-interruptible, non-selectable, and attempt to read // on such stream might lead to thread being blocked without *any* way to unblock it. // That's where available() comes it, so at least we could check whether // anything is available to be read without blocking.	WITHOUT_CLASSIFICATION	0.9999998201969879	WITHOUT_CLASSIFICATION	1.7980301221215807E-7	IMPLEMENTATION
/*package-protected*/	WITHOUT_CLASSIFICATION	0.9997406623740597	WITHOUT_CLASSIFICATION	2.593376259402313E-4	IMPLEMENTATION
// raw file URL, just open directly	WITHOUT_CLASSIFICATION	0.9999999766156906	WITHOUT_CLASSIFICATION	2.3384309357257105E-8	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999385105257035	WITHOUT_CLASSIFICATION	6.14894742965293E-5	IMPLEMENTATION
// if refcount is at or below zero, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999996157514	WITHOUT_CLASSIFICATION	3.8424859660080427E-10	IMPLEMENTATION
// if channel is already closed, we're no longer valid	WITHOUT_CLASSIFICATION	0.9999999995642842	WITHOUT_CLASSIFICATION	4.357157737680077E-10	IMPLEMENTATION
// otherwise decrement and possibly close as normal	WITHOUT_CLASSIFICATION	0.9999963751407768	WITHOUT_CLASSIFICATION	3.6248592232567825E-6	IMPLEMENTATION
// r/w buffer // are we reading or writing?	WITHOUT_CLASSIFICATION	0.9999998543428799	WITHOUT_CLASSIFICATION	1.456571201262352E-7	IMPLEMENTATION
// this constructor is used by fdopen, so we don't increment descriptor ref count	WITHOUT_CLASSIFICATION	0.9999987894050162	WITHOUT_CLASSIFICATION	1.2105949838956853E-6	IMPLEMENTATION
// unread back	WITHOUT_CLASSIFICATION	0.9999991451951897	WITHOUT_CLASSIFICATION	8.548048102255962E-7	IMPLEMENTATION
// iterate over remainder of buffer until we find a match	WITHOUT_CLASSIFICATION	0.9999999948828604	WITHOUT_CLASSIFICATION	5.117139661643275E-9	IMPLEMENTATION
// terminate and advance buffer when we find our char	WITHOUT_CLASSIFICATION	0.9999998013124474	WITHOUT_CLASSIFICATION	1.986875527487093E-7	IMPLEMENTATION
// no match, append remainder of buffer and continue with next block	WITHOUT_CLASSIFICATION	0.9998789487950609	WITHOUT_CLASSIFICATION	1.2105120493904248E-4	IMPLEMENTATION
// found a match above, check if remaining separator characters match, appending as we go	WITHOUT_CLASSIFICATION	0.9999999978982715	WITHOUT_CLASSIFICATION	2.1017285200061256E-9	IMPLEMENTATION
// // Check file size - special files in /proc have zero size and need to be // handled by the generic read path. //	WITHOUT_CLASSIFICATION	0.9999992127374611	WITHOUT_CLASSIFICATION	7.872625389960378E-7	IMPLEMENTATION
// // Copy any buffered data (including ungetc byte) //	WITHOUT_CLASSIFICATION	0.9999999998401988	WITHOUT_CLASSIFICATION	1.5980112419677483E-10	IMPLEMENTATION
// // Now read unbuffered directly from the file //	WITHOUT_CLASSIFICATION	0.9999999655303999	WITHOUT_CLASSIFICATION	3.4469599951761264E-8	IMPLEMENTATION
// // Copy out any buffered bytes //	WITHOUT_CLASSIFICATION	0.9999999859597221	WITHOUT_CLASSIFICATION	1.4040277934221821E-8	IMPLEMENTATION
// // Need to clamp source (buffer) size to avoid overrun //	WITHOUT_CLASSIFICATION	0.9999999530011271	WITHOUT_CLASSIFICATION	4.699887301199089E-8	IMPLEMENTATION
// not closing from finalize	WITHOUT_CLASSIFICATION	0.9999999624852867	WITHOUT_CLASSIFICATION	3.751471338552463E-8	IMPLEMENTATION
// clear runtime so it doesn't get stuck in memory (JRUBY-2933)	WITHOUT_CLASSIFICATION	0.9999999735694498	WITHOUT_CLASSIFICATION	2.6430550184571006E-8	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999999750991549	WITHOUT_CLASSIFICATION	2.4900845093047434E-7	IMPLEMENTATION
// silence	WITHOUT_CLASSIFICATION	0.999999750991549	WITHOUT_CLASSIFICATION	2.4900845093047434E-7	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999639772531519	WITHOUT_CLASSIFICATION	3.6022746848040966E-5	IMPLEMENTATION
// Don't bother	WITHOUT_CLASSIFICATION	0.9999639772531519	WITHOUT_CLASSIFICATION	3.6022746848040966E-5	IMPLEMENTATION
// For Sockets, only write as much as will fit.	WITHOUT_CLASSIFICATION	0.9999999992823869	WITHOUT_CLASSIFICATION	7.176132018628358E-10	IMPLEMENTATION
// Correct position for read / write buffering (we could invalidate, but expensive)	WITHOUT_CLASSIFICATION	0.9999999795651253	WITHOUT_CLASSIFICATION	2.0434874612207737E-8	IMPLEMENTATION
// Adjust for buffered data	WITHOUT_CLASSIFICATION	0.9999997121413345	WITHOUT_CLASSIFICATION	2.878586654519305E-7	IMPLEMENTATION
// for SEEK_CUR, need to adjust for buffered data	WITHOUT_CLASSIFICATION	0.999997859262892	WITHOUT_CLASSIFICATION	2.140737107992163E-6	IMPLEMENTATION
// libc flushes writes on any read from the actual file, so we flush here	WITHOUT_CLASSIFICATION	0.9999998552034071	WITHOUT_CLASSIFICATION	1.4479659295565492E-7	IMPLEMENTATION
// we have read ahead, and need to back up	WITHOUT_CLASSIFICATION	0.9999749298500172	WITHOUT_CLASSIFICATION	2.5070149982693483E-5	IMPLEMENTATION
// 128K seems to be the minimum at which the stat+seek is faster than reallocation	WITHOUT_CLASSIFICATION	0.999999957970922	WITHOUT_CLASSIFICATION	4.2029077978979465E-8	IMPLEMENTATION
// // limit each iteration to a max of BULK_READ_SIZE to avoid over-size allocations //	WITHOUT_CLASSIFICATION	0.9999988401132179	WITHOUT_CLASSIFICATION	1.1598867820506397E-6	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998150068183456	WITHOUT_CLASSIFICATION	1.8499318165432976E-4	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999973276749	WITHOUT_CLASSIFICATION	2.672325108561623E-9	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size //	WITHOUT_CLASSIFICATION	0.9999999996237972	WITHOUT_CLASSIFICATION	3.7620290067369404E-10	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999990005954498	WITHOUT_CLASSIFICATION	9.9940455019528E-7	IMPLEMENTATION
// // Complete the request by filling the read buffer first //	WITHOUT_CLASSIFICATION	0.9999990005954498	WITHOUT_CLASSIFICATION	9.9940455019528E-7	IMPLEMENTATION
// // Avoid double-copying for reads that are larger than the buffer size, or // the destination is a direct buffer. //	WITHOUT_CLASSIFICATION	0.9999999995755163	WITHOUT_CLASSIFICATION	4.2448360472539945E-10	IMPLEMENTATION
// // We limit reads to BULK_READ_SIZED chunks to avoid NIO allocating // a huge temporary native buffer, when doing reads into a heap buffer // If the dst buffer is direct, then no need to limit. //	WITHOUT_CLASSIFICATION	0.9999999563238071	WITHOUT_CLASSIFICATION	4.367619289872591E-8	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999993835891935	WITHOUT_CLASSIFICATION	6.16410806509668E-7	IMPLEMENTATION
// Ruby ignores empty syswrites	WITHOUT_CLASSIFICATION	0.9999993835891935	WITHOUT_CLASSIFICATION	6.16410806509668E-7	IMPLEMENTATION
// Doesn't fit in buffer. Write immediately. // ensure nothing left to write	WITHOUT_CLASSIFICATION	0.9999999960319131	WITHOUT_CLASSIFICATION	3.968086910128571E-9	IMPLEMENTATION
// truncate can't lengthen files, so we save position, seek/write, and go back	WITHOUT_CLASSIFICATION	0.9999999672091774	WITHOUT_CLASSIFICATION	3.279082267127603E-8	IMPLEMENTATION
// how far ahead we are when reading	WITHOUT_CLASSIFICATION	0.9999942437611122	WITHOUT_CLASSIFICATION	5.756238887782551E-6	IMPLEMENTATION
// if the read buffer is ahead, back up	WITHOUT_CLASSIFICATION	0.9999998991184128	WITHOUT_CLASSIFICATION	1.0088158718820166E-7	IMPLEMENTATION
// close without removing from finalizers	WITHOUT_CLASSIFICATION	0.9999999295249786	WITHOUT_CLASSIFICATION	7.047502139690271E-8	IMPLEMENTATION
// putting a bit back, so we're not at EOF anymore	WITHOUT_CLASSIFICATION	0.9999996504479899	WITHOUT_CLASSIFICATION	3.495520100877468E-7	IMPLEMENTATION
// save the ungot	WITHOUT_CLASSIFICATION	0.9999969263751189	WITHOUT_CLASSIFICATION	3.073624881064071E-6	IMPLEMENTATION
// otherwise, we try an unbuffered read to get whatever's available	WITHOUT_CLASSIFICATION	0.9999943919297873	WITHOUT_CLASSIFICATION	5.608070212676069E-6	IMPLEMENTATION
// ignore this; select() will set the correct mode when it is finished	WITHOUT_CLASSIFICATION	0.9992200279636854	WITHOUT_CLASSIFICATION	7.799720363145427E-4	IMPLEMENTATION
// flush first	WITHOUT_CLASSIFICATION	0.9999993313457635	WITHOUT_CLASSIFICATION	6.68654236614795E-7	IMPLEMENTATION
// // Wake up any channels that became unblocked //	WITHOUT_CLASSIFICATION	0.9999999003280858	WITHOUT_CLASSIFICATION	9.967191421614686E-8	IMPLEMENTATION
// // Register any new blocking I/O requests //	WITHOUT_CLASSIFICATION	0.9999997737480527	WITHOUT_CLASSIFICATION	2.2625194728993583E-7	IMPLEMENTATION
// Now clear out any previously selected channels	WITHOUT_CLASSIFICATION	0.9999896921345445	WITHOUT_CLASSIFICATION	1.0307865455552706E-5	IMPLEMENTATION
// // Wait for I/O on any channel //	WITHOUT_CLASSIFICATION	0.9999987569807494	WITHOUT_CLASSIFICATION	1.243019250741902E-6	IMPLEMENTATION
// Do not open as 'rw' by default since a file with read-only permissions will fail on 'rw'	WITHOUT_CLASSIFICATION	0.9999996319407004	WITHOUT_CLASSIFICATION	3.680592996004702E-7	IMPLEMENTATION
// Java requires "w" for creating a file that does not exist	WITHOUT_CLASSIFICATION	0.9999988352191325	WITHOUT_CLASSIFICATION	1.1647808675308159E-6	IMPLEMENTATION
// seek to force underlying buffer to flush	WITHOUT_CLASSIFICATION	0.9999980147590497	WITHOUT_CLASSIFICATION	1.9852409503713322E-6	IMPLEMENTATION
// seek to force read buffer to invalidate	WITHOUT_CLASSIFICATION	0.9999997653665293	WITHOUT_CLASSIFICATION	2.3463347058476785E-7	IMPLEMENTATION
/*        result = eval("arr = Array::['c', 200]; p arr");        assertEquals("[\"c\", 200]", result);        result = eval("arr = Array.['d', 200]; p arr");        assertEquals("[\"d\", 200]", result);        */	WITHOUT_CLASSIFICATION	0.9999999992590101	WITHOUT_CLASSIFICATION	7.409898802256843E-10	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999957342131633	WITHOUT_CLASSIFICATION	4.26578683669759E-6	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7983050056346073	IMPLEMENTATION	0.20169499436539276	WITHOUT_CLASSIFICATION
// make sure the pipe stream is set to null	WITHOUT_CLASSIFICATION	0.9999993777332244	WITHOUT_CLASSIFICATION	6.222667756354544E-7	IMPLEMENTATION
// make sure the main stream is set to null	WITHOUT_CLASSIFICATION	0.9999995507482979	WITHOUT_CLASSIFICATION	4.492517021436054E-7	IMPLEMENTATION
// first try our custom-generated Unsafe	WITHOUT_CLASSIFICATION	0.9999870200382939	WITHOUT_CLASSIFICATION	1.2979961706144786E-5	IMPLEMENTATION
// then try Sun's Unsafe	WITHOUT_CLASSIFICATION	0.99999861821038	WITHOUT_CLASSIFICATION	1.381789619927214E-6	IMPLEMENTATION
// if we get here, the class and field exist; construct our Unsafe impl // that calls it directly	WITHOUT_CLASSIFICATION	0.9999997767535908	WITHOUT_CLASSIFICATION	2.232464092349671E-7	IMPLEMENTATION
// else leave it null	WITHOUT_CLASSIFICATION	0.9999996724682467	WITHOUT_CLASSIFICATION	3.2753175331415216E-7	IMPLEMENTATION
// TypeMatcher	WITHOUT_CLASSIFICATION	0.9999929419332735	WITHOUT_CLASSIFICATION	7.058066726535999E-6	IMPLEMENTATION
// This is now needed, since module Java // isn't in by default	WITHOUT_CLASSIFICATION	0.9999998616388003	WITHOUT_CLASSIFICATION	1.3836119971247907E-7	IMPLEMENTATION
// Iterate over the RubyHash keySet, simultaneously iterating over the values()	WITHOUT_CLASSIFICATION	0.9999999970063997	WITHOUT_CLASSIFICATION	2.9936002247766527E-9	IMPLEMENTATION
// Get the value from the map via the key	WITHOUT_CLASSIFICATION	0.9999999731190772	WITHOUT_CLASSIFICATION	2.6880922783890194E-8	IMPLEMENTATION
// Get the value from the map via the values iterator	WITHOUT_CLASSIFICATION	0.9999999837457495	WITHOUT_CLASSIFICATION	1.6254250520635744E-8	IMPLEMENTATION
// Check the 2 values obtained via different means	WITHOUT_CLASSIFICATION	0.9999999062329469	WITHOUT_CLASSIFICATION	9.376705311847416E-8	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999990794714	WITHOUT_CLASSIFICATION	9.205285989852708E-9	IMPLEMENTATION
// Set a value in the RubyHash	WITHOUT_CLASSIFICATION	0.999999990794714	WITHOUT_CLASSIFICATION	9.205285989852708E-9	IMPLEMENTATION
// Check the entry.setValue values come back out ok	WITHOUT_CLASSIFICATION	0.999999557161202	WITHOUT_CLASSIFICATION	4.428387979558228E-7	IMPLEMENTATION
// If we're running from within an IDE we may not have // the .rb files in our classpath. Try to find them // in the filesystem instead.	WITHOUT_CLASSIFICATION	0.9999999872195425	WITHOUT_CLASSIFICATION	1.278045751789234E-8	IMPLEMENTATION
//assertEquals("\"foo\"\n\"bar\"", eval("$h.each {|val| p val}")); //assertEquals("[\"foo\", \"bar\"]", eval("p $h.each {|val| }"));	WITHOUT_CLASSIFICATION	0.9999999898580361	WITHOUT_CLASSIFICATION	1.0141963882678524E-8	IMPLEMENTATION
// Init	WITHOUT_CLASSIFICATION	0.9999975753130358	WITHOUT_CLASSIFICATION	2.4246869642106033E-6	IMPLEMENTATION
// Block	WITHOUT_CLASSIFICATION	0.9999995333014187	WITHOUT_CLASSIFICATION	4.666985813018258E-7	IMPLEMENTATION
// Copy constructor	WITHOUT_CLASSIFICATION	0.9999992651143255	WITHOUT_CLASSIFICATION	7.348856745818152E-7	IMPLEMENTATION
// presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999960404317025	WITHOUT_CLASSIFICATION	3.959568297453882E-6	IMPLEMENTATION
// JRUBY-646 // presumably this require should fail	WITHOUT_CLASSIFICATION	0.9999962203547086	WITHOUT_CLASSIFICATION	3.779645291328708E-6	IMPLEMENTATION
// Test that requiring a normal Java class raises an error (JRUBY-3214	WITHOUT_CLASSIFICATION	0.9999989144305051	WITHOUT_CLASSIFICATION	1.0855694947730685E-6	IMPLEMENTATION
// ok	WITHOUT_CLASSIFICATION	0.9999991928249994	WITHOUT_CLASSIFICATION	8.071750006284311E-7	IMPLEMENTATION
// Function not used...but it gets rid of unused warnings in Eclipse (we do call those methods // from Ruby so they are not really unused).	WITHOUT_CLASSIFICATION	0.9999999969536991	WITHOUT_CLASSIFICATION	3.046300822045674E-9	IMPLEMENTATION
//load should work several times in a row	WITHOUT_CLASSIFICATION	0.9998591367956048	WITHOUT_CLASSIFICATION	1.4086320439512997E-4	IMPLEMENTATION
//reset the $loadTestvar	WITHOUT_CLASSIFICATION	0.9999531823854697	WITHOUT_CLASSIFICATION	4.6817614530240045E-5	IMPLEMENTATION
//call throwException via JRuby	WITHOUT_CLASSIFICATION	0.9999909265103879	WITHOUT_CLASSIFICATION	9.073489612120088E-6	IMPLEMENTATION
// Notify the calling thread that we're about to go to sleep the first time	WITHOUT_CLASSIFICATION	0.9999978640729251	WITHOUT_CLASSIFICATION	2.135927074886781E-6	IMPLEMENTATION
// wait for the go signal	WITHOUT_CLASSIFICATION	0.9999994738804469	WITHOUT_CLASSIFICATION	5.261195531282684E-7	IMPLEMENTATION
// run ten separate calls into Ruby, with delay and explicit GC	WITHOUT_CLASSIFICATION	0.9999990178793069	WITHOUT_CLASSIFICATION	9.82120693111431E-7	IMPLEMENTATION
// wait until thread has initialized	WITHOUT_CLASSIFICATION	0.9999979130596235	WITHOUT_CLASSIFICATION	2.0869403764502033E-6	IMPLEMENTATION
// notify thread to proceed	WITHOUT_CLASSIFICATION	0.9970953603932227	WITHOUT_CLASSIFICATION	0.002904639606777303	IMPLEMENTATION
// wait until thread has completed	WITHOUT_CLASSIFICATION	0.9999863089840356	WITHOUT_CLASSIFICATION	1.3691015964350955E-5	IMPLEMENTATION
// we do preand post load outside the "body" versions to pre-prepare // and pre-push the dynamic scope we need for lastline	WITHOUT_CLASSIFICATION	0.9999996951606539	WITHOUT_CLASSIFICATION	3.048393460390595E-7	IMPLEMENTATION
// out of byte range // there will be no match for sure	WITHOUT_CLASSIFICATION	0.9999999478324251	WITHOUT_CLASSIFICATION	5.216757490301204E-8	IMPLEMENTATION
// MRI behavior: raise ArgumentError for 'unknown command' before // checking number of args.	WITHOUT_CLASSIFICATION	0.9999990637303332	WITHOUT_CLASSIFICATION	9.36269666808378E-7	IMPLEMENTATION
// if any exceptions were raised, we fail	WITHOUT_CLASSIFICATION	0.9999997949567765	WITHOUT_CLASSIFICATION	2.050432235177033E-7	IMPLEMENTATION
// there should only be one more thread in thread group than before we started	WITHOUT_CLASSIFICATION	0.9999965150052847	WITHOUT_CLASSIFICATION	3.4849947151432118E-6	IMPLEMENTATION
// construct a new cache with thread's classloader and no limit	WITHOUT_CLASSIFICATION	0.9999940434130219	WITHOUT_CLASSIFICATION	5.956586978052511E-6	IMPLEMENTATION
//        Class<?> script1 = ((DefaultMethod) runtime1.getObject().getMethods().get("foo")).getJITCompilerScript().getClass(); //        Class<?> script2 = ((DefaultMethod) runtime2.getObject().getMethods().get("foo")).getJITCompilerScript().getClass();	WITHOUT_CLASSIFICATION	0.9999999998574157	WITHOUT_CLASSIFICATION	1.4258437102118077E-10	IMPLEMENTATION
//        assertSame(script1, script2);	WITHOUT_CLASSIFICATION	0.999999992628166	WITHOUT_CLASSIFICATION	7.371834052499051E-9	IMPLEMENTATION
// void methods should work	WITHOUT_CLASSIFICATION	0.9999964366499504	WITHOUT_CLASSIFICATION	3.563350049635694E-6	IMPLEMENTATION
// methods with required = 4 or higher should bind and be callable using reflection // JRUBY-3649	WITHOUT_CLASSIFICATION	0.9999996289528773	WITHOUT_CLASSIFICATION	3.710471227319954E-7	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999242772488	WITHOUT_CLASSIFICATION	7.572275114002274E-8	IMPLEMENTATION
// Ensure we have a new interpreter for each test. Previous we were using the //  same interpreter which caused problems as soon as one test failed.	WITHOUT_CLASSIFICATION	0.9999953488406749	WITHOUT_CLASSIFICATION	4.6511593251422695E-6	IMPLEMENTATION
// Without a flush Ant will miss some of our output	WITHOUT_CLASSIFICATION	0.9999989597426159	WITHOUT_CLASSIFICATION	1.0402573840834457E-6	IMPLEMENTATION
// assertTrue(rubyObject.kind_of(ruby.getClasses().getStringClass()).isFalse());	WITHOUT_CLASSIFICATION	0.9999999963525183	WITHOUT_CLASSIFICATION	3.6474815856611822E-9	IMPLEMENTATION
//        int n = 10;	WITHOUT_CLASSIFICATION	0.9999989604056229	WITHOUT_CLASSIFICATION	1.0395943771263153E-6	IMPLEMENTATION
// there might be more test classes in a single file, so we iterate over them	WITHOUT_CLASSIFICATION	0.9999999985054069	WITHOUT_CLASSIFICATION	1.4945932156357235E-9	IMPLEMENTATION
//No ClassCastException!	WITHOUT_CLASSIFICATION	0.9999999681052105	WITHOUT_CLASSIFICATION	3.189478950383561E-8	IMPLEMENTATION
// value equality	WITHOUT_CLASSIFICATION	0.9999987833567721	WITHOUT_CLASSIFICATION	1.2166432279175268E-6	IMPLEMENTATION
// identity equality	WITHOUT_CLASSIFICATION	0.9999745635507281	WITHOUT_CLASSIFICATION	2.5436449271929685E-5	IMPLEMENTATION
// bench straight-up integer fib(30)	WITHOUT_CLASSIFICATION	0.999999910511225	WITHOUT_CLASSIFICATION	8.948877492390168E-8	IMPLEMENTATION
// bench Integer fib	WITHOUT_CLASSIFICATION	0.9999929133576201	WITHOUT_CLASSIFICATION	7.086642379940501E-6	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999999892501491	WITHOUT_CLASSIFICATION	1.074985090656061E-7	IMPLEMENTATION
// bench fully-boxed fib	WITHOUT_CLASSIFICATION	0.999999892501491	WITHOUT_CLASSIFICATION	1.074985090656061E-7	IMPLEMENTATION
// bench fixnum-boxed fib	WITHOUT_CLASSIFICATION	0.9999997612714501	WITHOUT_CLASSIFICATION	2.3872854995308565E-7	IMPLEMENTATION
// bench straight-up long fib(30)	WITHOUT_CLASSIFICATION	0.9999999796617556	WITHOUT_CLASSIFICATION	2.0338244456641972E-8	IMPLEMENTATION
// bench Long fib	WITHOUT_CLASSIFICATION	0.999999878303726	WITHOUT_CLASSIFICATION	1.2169627402937396E-7	IMPLEMENTATION
// skip this one, probably no 'ls' (windows)	WITHOUT_CLASSIFICATION	0.9999785667311796	WITHOUT_CLASSIFICATION	2.1433268820468E-5	IMPLEMENTATION
// start off with a neutral parent	WITHOUT_CLASSIFICATION	0.9999897085959764	WITHOUT_CLASSIFICATION	1.029140402359248E-5	IMPLEMENTATION
/*            public class Hello {                public static String getMessage() {                    return ".....";                }            }            */	WITHOUT_CLASSIFICATION	0.9999999999861902	WITHOUT_CLASSIFICATION	1.3809975588874829E-11	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999966826253	WITHOUT_CLASSIFICATION	3.3173747119102125E-9	IMPLEMENTATION
// Note: We can't use file.exists() to check whether the symlink // exists or not, because that method returns false for existing // but broken symlink. So, we try without the existence check, // but in the try-catch block. // MRI behavior: symlink? on broken symlink should return true.	WITHOUT_CLASSIFICATION	0.9999995126583269	WITHOUT_CLASSIFICATION	4.873416731734245E-7	IMPLEMENTATION
// We are creating a new IO object that shares the same // IOHandler (and fileno).	WITHOUT_CLASSIFICATION	0.9999975220099241	WITHOUT_CLASSIFICATION	2.4779900759744554E-6	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999987076835309	WITHOUT_CLASSIFICATION	1.2923164690851376E-6	IMPLEMENTATION
//[IRubyObject] //[IRubyObject, IRubyObject] //[IRubyObject, RubyClass] //[IRubyObject, RubyClass, RubyClass] //[IRubyObject, RubyClass, Visibility] //[IRubyObject, RubyClass, Visibility, Visibility]	WITHOUT_CLASSIFICATION	0.9999999843897954	WITHOUT_CLASSIFICATION	1.561020453417986E-8	IMPLEMENTATION
// select appropriate call site // dup receiver // load self	WITHOUT_CLASSIFICATION	0.9999984704399422	WITHOUT_CLASSIFICATION	1.529560057773462E-6	IMPLEMENTATION
// Translate "x || y" --> "x = (is_true(x) ? x : y)" --> //  //    x = -- build(x) should return a variable! -- //    f = is_true(x) //    beq(f, true, L) //    x = -- build(y) -- // L: //	WITHOUT_CLASSIFICATION	0.9999997971760083	WITHOUT_CLASSIFICATION	2.028239915679686E-7	IMPLEMENTATION
// // Force the client socket to be blocking //	WITHOUT_CLASSIFICATION	0.9999982982160118	WITHOUT_CLASSIFICATION	1.7017839881206525E-6	IMPLEMENTATION
// Additional context surrounding tokens that both the lexer and // grammar use.	WITHOUT_CLASSIFICATION	0.9999987183346722	WITHOUT_CLASSIFICATION	1.281665327730043E-6	IMPLEMENTATION
// Enebo:  c can never be antrhign but '.' // Why did I put this here?	WITHOUT_CLASSIFICATION	0.9656995018643839	WITHOUT_CLASSIFICATION	0.034300498135616135	IMPLEMENTATION
// save package module as ivar in parent, and add method to parent so // we don't have to come back here.	WITHOUT_CLASSIFICATION	0.9999999564077475	WITHOUT_CLASSIFICATION	4.359225253469235E-8	IMPLEMENTATION
//[C,C] //[C, boolean]	WITHOUT_CLASSIFICATION	0.9999997594220805	WITHOUT_CLASSIFICATION	2.4057791944743226E-7	IMPLEMENTATION
// Label for the start of the closure (used to implement redo) // Label for the end of the closure (used to implement retry)	WITHOUT_CLASSIFICATION	0.999999468920891	WITHOUT_CLASSIFICATION	5.310791090029529E-7	IMPLEMENTATION
// ignore; job was cancelled // FIXME: is this ok?	WITHOUT_CLASSIFICATION	0.9999885862145325	WITHOUT_CLASSIFICATION	1.1413785467590393E-5	IMPLEMENTATION
//                    // check arity //                    checkArity(mv, scope);	WITHOUT_CLASSIFICATION	0.9999995241862201	WITHOUT_CLASSIFICATION	4.7581377984571763E-7	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999955052230045	WITHOUT_CLASSIFICATION	4.494776995483642E-6	IMPLEMENTATION
// we take the first method found as our "n" method, since for any non-specific // arity they'll all error the same. If an actual "n" method is created, we // use that.	WITHOUT_CLASSIFICATION	0.9999999283638701	WITHOUT_CLASSIFICATION	7.163612990062226E-8	IMPLEMENTATION
// Used by our duck-typification of Proc into interface types, to allow // coercing a simple proc into an interface parameter.	WITHOUT_CLASSIFICATION	0.9999987697489449	WITHOUT_CLASSIFICATION	1.230251055208267E-6	IMPLEMENTATION
// proxy is under construction, building thread can // safely read non-volatile value	WITHOUT_CLASSIFICATION	0.9999956342321717	WITHOUT_CLASSIFICATION	4.3657678281832805E-6	IMPLEMENTATION
// it's either as converted as we can make it via above logic or it's // not one of the types we convert, so just pass it out as-is without wrapping	WITHOUT_CLASSIFICATION	0.9999993790919619	WITHOUT_CLASSIFICATION	6.209080380812771E-7	IMPLEMENTATION
// package scheme 2: separate module for each full package name, constructed  // from the camel-cased package segments: Java::JavaLang::Object, 	WITHOUT_CLASSIFICATION	0.9999999999956338	WITHOUT_CLASSIFICATION	4.366101550975878E-12	IMPLEMENTATION
// // construct the proxy method //	WITHOUT_CLASSIFICATION	0.9999865905006207	WITHOUT_CLASSIFICATION	1.3409499379275523E-5	IMPLEMENTATION
// line 159 "-" // %token constants	WITHOUT_CLASSIFICATION	0.999999969988905	WITHOUT_CLASSIFICATION	3.00110950210666E-8	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999994884678841	WITHOUT_CLASSIFICATION	5.11532115917148E-7	IMPLEMENTATION
// line 152 "-" // %token constants	WITHOUT_CLASSIFICATION	0.9999999652652911	WITHOUT_CLASSIFICATION	3.473470885580106E-8	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999988696697168	WITHOUT_CLASSIFICATION	1.1303302831074004E-6	IMPLEMENTATION
// +++ // Helper Methods	WITHOUT_CLASSIFICATION	0.9999994884678841	WITHOUT_CLASSIFICATION	5.11532115917148E-7	IMPLEMENTATION
// We only need to pass in current scope if we are evaluating as a block (which // is only done for evals).  We need to pass this in so that we can appropriately scope // down to captured scopes when we are parsing.	WITHOUT_CLASSIFICATION	0.9999998837988859	WITHOUT_CLASSIFICATION	1.1620111404328915E-7	IMPLEMENTATION
// let the width (if any), get processed in the next loop, // so any leading 0 gets treated correctly 	WITHOUT_CLASSIFICATION	0.9999988658083454	WITHOUT_CLASSIFICATION	1.1341916545937302E-6	IMPLEMENTATION
// A place to store that special hiding space that bindings need to implement things like: // eval("a = 1", binding); eval("p a").  All binding instances must get access to this // hidden shared scope.  We store it here.  This will be null if no binding has yet // been called.	WITHOUT_CLASSIFICATION	0.9993763269563289	WITHOUT_CLASSIFICATION	6.236730436710876E-4	IMPLEMENTATION
// TODO: make it 16 now ? // MUST be power of 2!	WITHOUT_CLASSIFICATION	0.9243106691009508	IMPLEMENTATION	0.07568933089904915	WITHOUT_CLASSIFICATION
// check visibility // dup method	WITHOUT_CLASSIFICATION	0.9999993871301283	WITHOUT_CLASSIFICATION	6.128698717727192E-7	IMPLEMENTATION
// &foo are not getting set from somewhere...I want the following assert to be true though //assert variableValues[offset] != null : "Getting unassigned: " + staticScope.getVariables()[offset];	WITHOUT_CLASSIFICATION	0.9999999999739834	WITHOUT_CLASSIFICATION	2.6016543717295603E-11	IMPLEMENTATION
// unsigned int, native // unsigned long, native	WITHOUT_CLASSIFICATION	0.99999999729486	WITHOUT_CLASSIFICATION	2.7051399111492035E-9	IMPLEMENTATION
//need padding //I'm fairly sure there is a library call to create a //string filled with a given char with a given length but I couldn't find it	WITHOUT_CLASSIFICATION	0.9998734648799527	WITHOUT_CLASSIFICATION	1.2653512004732171E-4	IMPLEMENTATION
// MRI behavior: Be default, 2 digits // in the exponent. Use 3 digits // only when necessary. // See comment for writeExp method for more details.	WITHOUT_CLASSIFICATION	0.999999974523176	WITHOUT_CLASSIFICATION	2.5476823982037525E-8	IMPLEMENTATION
// MRI ignores seek errors, presumably for unseekable files like // serial ports (JRUBY-2979), so we shall too.	WITHOUT_CLASSIFICATION	0.9999957342131633	WITHOUT_CLASSIFICATION	4.26578683669759E-6	IMPLEMENTATION
// switch // for // no more data, OK for strict to go calc	WITHOUT_CLASSIFICATION	0.9999736499499225	WITHOUT_CLASSIFICATION	2.6350050077537017E-5	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999949722327	WITHOUT_CLASSIFICATION	5.027767308991159E-9	IMPLEMENTATION
// Estimate the square root with the foremost 62 bits of squarD // bi and scale are a tandem	WITHOUT_CLASSIFICATION	0.9999991633264913	WITHOUT_CLASSIFICATION	8.366735086105129E-7	IMPLEMENTATION
// captures // begin and end are used when not groups defined // source string	WITHOUT_CLASSIFICATION	0.9999999534835857	WITHOUT_CLASSIFICATION	4.6516414400010096E-8	IMPLEMENTATION
// // INSTANCE VARIABLE RUBY METHODS //	WITHOUT_CLASSIFICATION	0.9999906442376745	WITHOUT_CLASSIFICATION	9.355762325586909E-6	IMPLEMENTATION
// switch // while	WITHOUT_CLASSIFICATION	0.9999995872821861	WITHOUT_CLASSIFICATION	4.1271781393831495E-7	IMPLEMENTATION
// For nodes do not have their own scope so we pass null to indicate this. // 'For's are implemented as blocks in evaluation, but they have no scope so we // just deal with this lack of scope throughout its lifespan.  We should probably // change the way this works to get rid of multiple null checks.	WITHOUT_CLASSIFICATION	0.9999547011320498	WITHOUT_CLASSIFICATION	4.5298867950269774E-5	IMPLEMENTATION
// This field is used during argument processing to avoid putting RubyArray // instances that are purely for utility purposes into ObjectSpace.	WITHOUT_CLASSIFICATION	0.9999962504166572	WITHOUT_CLASSIFICATION	3.74958334280516E-6	IMPLEMENTATION
// Parent container for this context (can be dynamic!!) // If dynamic, at runtime, this will be the meta-object corresponding to a class/script/module/method/closure // List of IR instructions for this method	WITHOUT_CLASSIFICATION	0.9999999572721271	WITHOUT_CLASSIFICATION	4.2727872895269226E-8	IMPLEMENTATION
// Translate "ret = (a && b)" --> "ret = (a ? b : false)" --> //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is false if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = false    //    beq(v1, false, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.9999998371220368	WITHOUT_CLASSIFICATION	1.6287796320305236E-7	IMPLEMENTATION
// expected	WITHOUT_CLASSIFICATION	0.9999887601113501	WITHOUT_CLASSIFICATION	1.1239888650056799E-5	IMPLEMENTATION
// Do nothing	WITHOUT_CLASSIFICATION	0.9999974955869271	WITHOUT_CLASSIFICATION	2.5044130729113127E-6	IMPLEMENTATION
// constructor	WITHOUT_CLASSIFICATION	0.999998132182545	WITHOUT_CLASSIFICATION	1.8678174549961247E-6	IMPLEMENTATION
// If a line is followed by a blank line put // it back.	WITHOUT_CLASSIFICATION	0.9999896691258909	WITHOUT_CLASSIFICATION	1.03308741091166E-5	IMPLEMENTATION
/* $>: default output handle */	WITHOUT_CLASSIFICATION	0.9999970891937587	WITHOUT_CLASSIFICATION	2.9108062412373744E-6	IMPLEMENTATION
// line 423	WITHOUT_CLASSIFICATION	0.9999993456401896	WITHOUT_CLASSIFICATION	6.543598104544771E-7	IMPLEMENTATION
// line 486	WITHOUT_CLASSIFICATION	0.9999987156021581	WITHOUT_CLASSIFICATION	1.2843978418555027E-6	IMPLEMENTATION
// Signal uses sun.misc.* classes, this is not allowed // in the security-sensitive environments	WITHOUT_CLASSIFICATION	0.9999999997257865	WITHOUT_CLASSIFICATION	2.742135688993887E-10	IMPLEMENTATION
// re-register, since fileno points at something new now	WITHOUT_CLASSIFICATION	0.9999999998101567	WITHOUT_CLASSIFICATION	1.898431637950274E-10	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999720897388	WITHOUT_CLASSIFICATION	2.7910261254923152E-8	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999720897388	WITHOUT_CLASSIFICATION	2.7910261254923152E-8	IMPLEMENTATION
// colon3, assign in Object	WITHOUT_CLASSIFICATION	0.9999999990128671	WITHOUT_CLASSIFICATION	9.871329341711638E-10	IMPLEMENTATION
// if there's no receiver, evaluate and pass in the superclass, or // pass self if it no superclass	WITHOUT_CLASSIFICATION	0.9999999998544447	WITHOUT_CLASSIFICATION	1.4555543967498201E-10	IMPLEMENTATION
// Wire up Function#call(*args) to use the super-fast native invokers	WITHOUT_CLASSIFICATION	0.9999970020068362	WITHOUT_CLASSIFICATION	2.9979931637909308E-6	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6721403955969332	WITHOUT_CLASSIFICATION	0.32785960440306683	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6721403955969332	WITHOUT_CLASSIFICATION	0.32785960440306683	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6721403955969332	WITHOUT_CLASSIFICATION	0.32785960440306683	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6721403955969332	WITHOUT_CLASSIFICATION	0.32785960440306683	IMPLEMENTATION
// Decrease value to hit upper range.  	WITHOUT_CLASSIFICATION	0.9999999875950945	WITHOUT_CLASSIFICATION	1.240490559333199E-8	IMPLEMENTATION
// assign to appropriate variable	WITHOUT_CLASSIFICATION	0.9999998898711067	WITHOUT_CLASSIFICATION	1.1012889346496243E-7	IMPLEMENTATION
// "else" body	WITHOUT_CLASSIFICATION	0.9999998903042906	WITHOUT_CLASSIFICATION	1.0969570950611973E-7	IMPLEMENTATION
// done // done // done // Nothing to do for 1.8 // done // done // done // done // done // done // done? // done // done // done // done // done // done // done // done // done // done // done //            case DEFINEDNODE: return buildDefined(node, m); // Incomplete // done // done // done // done // done // done // done // done //            case ENSURENODE: return buildEnsureNode(node, m); // DEFERRED // done // done // done // done //            case FLIPNODE: return buildFlip(node, m); // SSS FIXME: What code generates this AST? // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done // done? // done // done // done // done // done // done -- partially //            case OPELEMENTASGNNODE: return buildOpElementAsgn(node, m); // DEFERRED SSS FIXME: What code generates this AST? // done //            case POSTEXENODE: return buildPostExe(node, m); // DEFERRED //            case PREEXENODE: return buildPreExe(node, m); // DEFERRED // done?? // done	WITHOUT_CLASSIFICATION	0.995168923302332	WITHOUT_CLASSIFICATION	0.004831076697668041	IMPLEMENTATION
// read-volatile	WITHOUT_CLASSIFICATION	0.9999553579337137	WITHOUT_CLASSIFICATION	4.464206628623068E-5	IMPLEMENTATION
/* $+: string matches last paren. */	WITHOUT_CLASSIFICATION	0.9999979575548485	WITHOUT_CLASSIFICATION	2.042445151420262E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999931066463434	WITHOUT_CLASSIFICATION	6.893353656607192E-6	IMPLEMENTATION
/* should alter global state */	WITHOUT_CLASSIFICATION	0.9999931066463434	WITHOUT_CLASSIFICATION	6.893353656607192E-6	IMPLEMENTATION
// Ruby code frequently uses a platform check to choose "NUL:" on windows // but since that check doesn't work well on JRuby, we help it out	WITHOUT_CLASSIFICATION	0.9999999208399102	WITHOUT_CLASSIFICATION	7.916008982778352E-8	IMPLEMENTATION
/* 10! */	WITHOUT_CLASSIFICATION	0.9999980262350242	WITHOUT_CLASSIFICATION	1.973764975812193E-6	IMPLEMENTATION
//            case RESCUENODE: return buildRescue(node, m); // DEFERRED //            case RETRYNODE: return buildRetry(node, m); // DEFERRED // done	WITHOUT_CLASSIFICATION	0.9999994884183515	WITHOUT_CLASSIFICATION	5.115816484452104E-7	IMPLEMENTATION
// Is this instruction live or dead?  During optimization passes, if this instruction // causes no side-effects and the result of the instruction is not needed by anyone else, // we can remove this instruction altogether without affecting program correctness.	WITHOUT_CLASSIFICATION	0.9999686823611352	WITHOUT_CLASSIFICATION	3.131763886477424E-5	IMPLEMENTATION
// all these types are immediately considered "defined"	WITHOUT_CLASSIFICATION	0.9999991015598777	WITHOUT_CLASSIFICATION	8.984401223554118E-7	IMPLEMENTATION
// first, iterate over all required args	WITHOUT_CLASSIFICATION	0.999999927210003	WITHOUT_CLASSIFICATION	7.278999694075945E-8	IMPLEMENTATION
// // Determine if the parameter might be passed as a 32bit int parameter. // This just applies to buffer/pointer types. //	WITHOUT_CLASSIFICATION	0.9999999986712818	WITHOUT_CLASSIFICATION	1.3287181868889906E-9	IMPLEMENTATION
//Keyword keyword = Keyword.getKeyword(tempVal, tempVal.length());	WITHOUT_CLASSIFICATION	0.9999975083731074	WITHOUT_CLASSIFICATION	2.4916268924850235E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999931987436959	WITHOUT_CLASSIFICATION	6.801256304088751E-6	IMPLEMENTATION
//yyLhs 496	WITHOUT_CLASSIFICATION	0.9999931987436959	WITHOUT_CLASSIFICATION	6.801256304088751E-6	IMPLEMENTATION
// initial size // state stack // value stack // current input // #tokens to shift	WITHOUT_CLASSIFICATION	0.9999988696697168	WITHOUT_CLASSIFICATION	1.1303302831074004E-6	IMPLEMENTATION
// line 449	WITHOUT_CLASSIFICATION	0.9999990002211058	WITHOUT_CLASSIFICATION	9.997788941599664E-7	IMPLEMENTATION
// line 495	WITHOUT_CLASSIFICATION	0.9999990743860513	WITHOUT_CLASSIFICATION	9.256139486698677E-7	IMPLEMENTATION
// Management/monitoring	WITHOUT_CLASSIFICATION	0.9999939370534351	WITHOUT_CLASSIFICATION	6.062946564805328E-6	IMPLEMENTATION
// if we've found the last char of the separator, // and we've found at least as many characters as separator length, // and the last n characters of our buffer match the separator, we're done	WITHOUT_CLASSIFICATION	0.9999999999450788	WITHOUT_CLASSIFICATION	5.492116233337959E-11	IMPLEMENTATION
/* 14! */	WITHOUT_CLASSIFICATION	0.999996426095653	WITHOUT_CLASSIFICATION	3.573904346981502E-6	IMPLEMENTATION
// Process any set of annotations // No supported options	WITHOUT_CLASSIFICATION	0.9999917641806859	WITHOUT_CLASSIFICATION	8.235819314047908E-6	IMPLEMENTATION
// add to the jitted methods set	WITHOUT_CLASSIFICATION	0.9999964331956605	WITHOUT_CLASSIFICATION	3.566804339514964E-6	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999992868944144	WITHOUT_CLASSIFICATION	7.131055854935563E-7	IMPLEMENTATION
// extract item from array	WITHOUT_CLASSIFICATION	0.9999992868944144	WITHOUT_CLASSIFICATION	7.131055854935563E-7	IMPLEMENTATION
//            case SCLASSNODE: return buildSClass(node, m); // DEFERRED // done // done // done // done // done // done // done // done //            case UNDEFNODE: return buildUndef(node, m); // DEFERRED // done //            case VALIASNODE: return buildVAlias(node, m); // DEFERRED // done // done	WITHOUT_CLASSIFICATION	0.9999999398513939	WITHOUT_CLASSIFICATION	6.014860616930152E-8	IMPLEMENTATION
// // Adding a post-invoke for the cb result serves to both keep it alive // until after the function returns, and allows us to clean up the native // trampoline early, instead of letting them accumulate until a GC run //	WITHOUT_CLASSIFICATION	0.9999999831161785	WITHOUT_CLASSIFICATION	1.68838215330844E-8	IMPLEMENTATION
/* The Java method doesn't care what class it is, but we need to               know what to convert it to, so we use the object's own class.               If that doesn't help, we use String to force a call to the               object's "to_s" method. */	WITHOUT_CLASSIFICATION	0.999998880341196	WITHOUT_CLASSIFICATION	1.1196588040680205E-6	IMPLEMENTATION
// index for the item	WITHOUT_CLASSIFICATION	0.9999896958538613	WITHOUT_CLASSIFICATION	1.0304146138714347E-5	IMPLEMENTATION
// Atomic integers for symbol and method IDs	WITHOUT_CLASSIFICATION	0.9999988194425313	WITHOUT_CLASSIFICATION	1.1805574687052234E-6	IMPLEMENTATION
/* 18! */	WITHOUT_CLASSIFICATION	0.9999939722957238	WITHOUT_CLASSIFICATION	6.027704276107493E-6	IMPLEMENTATION
// If we have more than one arg, make sure the array created to contain them is not ObjectSpaced	WITHOUT_CLASSIFICATION	0.9965269450572614	WITHOUT_CLASSIFICATION	0.003473054942738686	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995712821028	WITHOUT_CLASSIFICATION	4.2871789712763933E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995712821028	WITHOUT_CLASSIFICATION	4.2871789712763933E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995712821028	WITHOUT_CLASSIFICATION	4.2871789712763933E-7	IMPLEMENTATION
// set up a local IRuby variable	WITHOUT_CLASSIFICATION	0.9999995712821028	WITHOUT_CLASSIFICATION	4.2871789712763933E-7	IMPLEMENTATION
// NOTE: if 's' happens to the a class, this is effectively an assignment of a class instance variable	WITHOUT_CLASSIFICATION	0.9999999992944937	WITHOUT_CLASSIFICATION	7.05506291702555E-10	IMPLEMENTATION
/*      * This method takes as input a map of operands to their values, and outputs     * the result of this instruction.     *     * If the value map provides a value for any of the instruction's operands     * the expectation is that the operand will be replaced with the simplified value.     * It is not required that it do so -- code correctness is not compromised by failure     * to simplify.     *     * @param valueMap Mapping from operands to their simplified values     * @returns simplified result / output of this instruction     */	WITHOUT_CLASSIFICATION	0.9999999104810747	WITHOUT_CLASSIFICATION	8.951892534350478E-8	IMPLEMENTATION
// Can't support the rest with Java	WITHOUT_CLASSIFICATION	0.9999582992063512	WITHOUT_CLASSIFICATION	4.170079364881867E-5	IMPLEMENTATION
// An atomic long for generating DynamicMethod serial numbers	WITHOUT_CLASSIFICATION	0.9999991134012832	WITHOUT_CLASSIFICATION	8.865987168764282E-7	IMPLEMENTATION
// MRI behavior: always check whether the file is writable // or not, even if we are to write 0 bytes.	WITHOUT_CLASSIFICATION	0.9999997293554627	WITHOUT_CLASSIFICATION	2.706445373285138E-7	IMPLEMENTATION
/* 22! */	WITHOUT_CLASSIFICATION	0.9999982361688364	WITHOUT_CLASSIFICATION	1.763831163624762E-6	IMPLEMENTATION
// attribute set.	WITHOUT_CLASSIFICATION	0.9999996651654557	WITHOUT_CLASSIFICATION	3.348345442527089E-7	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999870709924	WITHOUT_CLASSIFICATION	1.2929007555408968E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999870709924	WITHOUT_CLASSIFICATION	1.2929007555408968E-8	IMPLEMENTATION
// grab nil for local variables	WITHOUT_CLASSIFICATION	0.9999999870709924	WITHOUT_CLASSIFICATION	1.2929007555408968E-8	IMPLEMENTATION
// fill in all vars with nil so compiler is happy about future accesses	WITHOUT_CLASSIFICATION	0.9999998502543956	WITHOUT_CLASSIFICATION	1.4974560423701275E-7	IMPLEMENTATION
// Build a new class and add it to the current scope (could be a script / module / class)	WITHOUT_CLASSIFICATION	0.9999999402326911	WITHOUT_CLASSIFICATION	5.976730890326617E-8	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999982241002	WITHOUT_CLASSIFICATION	1.7758997623212334E-9	IMPLEMENTATION
// ---------- These methods below are used during compile-time optimizations ------- 	WITHOUT_CLASSIFICATION	0.9999999982241002	WITHOUT_CLASSIFICATION	1.7758997623212334E-9	IMPLEMENTATION
// AF_INET	WITHOUT_CLASSIFICATION	0.9999967970775756	WITHOUT_CLASSIFICATION	3.202922424439505E-6	IMPLEMENTATION
//////////////////////////////////////////////////////////////////////////// // Now we provide default impls of a number of signatures. For each arity, // we first generate a non-block version of the method, which just adds // NULL_BLOCK and re-calls, allowing e.g. compiled code, which always can // potentially take a block, to only generate the block-receiving signature // and still avoid arg boxing. // // We then provide default implementations of each block-accepting method // that in turn call the IRubyObject[]+Block version of call. This then // finally falls back on the minimum implementation requirement for // dynamic method handles. ////////////////////////////////////////////////////////////////////////////	WITHOUT_CLASSIFICATION	0.9690374445485478	WITHOUT_CLASSIFICATION	0.030962555451452232	IMPLEMENTATION
// Because we implement Java interfaces now, we need a new === that's // aware of those additional "virtual" supertypes	WITHOUT_CLASSIFICATION	0.9999851774512711	WITHOUT_CLASSIFICATION	1.4822548728849107E-5	IMPLEMENTATION
// BASE64	WITHOUT_CLASSIFICATION	0.9999988006612792	WITHOUT_CLASSIFICATION	1.199338720761178E-6	IMPLEMENTATION
/* note nemes_gamma can return Double.POSITIVE_INFINITY or Double.NEGATIVE_INFINITY         * when value is an integer less than 1.         * We treat 0 as a special case to avoid Domain error.         */	WITHOUT_CLASSIFICATION	0.9999999859867501	WITHOUT_CLASSIFICATION	1.4013249849434899E-8	IMPLEMENTATION
// element set	WITHOUT_CLASSIFICATION	0.9999990859236285	WITHOUT_CLASSIFICATION	9.140763714258123E-7	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999941166108	WITHOUT_CLASSIFICATION	5.883389230983298E-9	IMPLEMENTATION
// visit a label to start scoping for local vars in this method	WITHOUT_CLASSIFICATION	0.9999999941166108	WITHOUT_CLASSIFICATION	5.883389230983298E-9	IMPLEMENTATION
// temp locals must start after last real local	WITHOUT_CLASSIFICATION	0.9999999105503091	WITHOUT_CLASSIFICATION	8.944969084471802E-8	IMPLEMENTATION
// SSS: Looks like we receive the arg in buildBlockArgsAssignment via the IterNode // We won't get here for argument receives!  So, buildDasgn is called for // assignments to block variables within a block.  As far as the IR is concerned, // this is just a simple copy	WITHOUT_CLASSIFICATION	0.999999999989154	WITHOUT_CLASSIFICATION	1.0846050757167795E-11	IMPLEMENTATION
// getSimplifiedOperand returns the value of this operand, fully simplified // getSimplifiedOperand returns the operand in a form that can be materialized into bytecode, if it cannot be completely optimized away // // The value is used during optimizations and propagated through the IR.  But, it is thrown away after that. // But, the operand form is used for constructing the compound objects represented by the operand. // // Example: a = [1], b = [3,4], c = [a,b], d = [2,c] //   -- getValue(c) = [1,[3,4]];     getSimplifiedOperand(c) = [1, b] //   -- getValue(d) = [2,[1,[3,4]]]; getSimplifiedOperand(d) = [2, c] // // Note that a,b,c,d are all objects, and c has a reference to objects a and b, and d has a reference to c. // So, if contents of a or b is modified, the "simplified value"s of c and d also change!  This difference // is captured by these two methods.	WITHOUT_CLASSIFICATION	0.9999999532102961	WITHOUT_CLASSIFICATION	4.6789703958980294E-8	IMPLEMENTATION
//IRubyObject protocol = args[4];	WITHOUT_CLASSIFICATION	0.999959762602052	WITHOUT_CLASSIFICATION	4.0237397948119174E-5	IMPLEMENTATION
// promise to implement three to N with block	WITHOUT_CLASSIFICATION	0.9555496850001787	WITHOUT_CLASSIFICATION	0.044450314999821265	IMPLEMENTATION
// Ruby's OMG capture all source in a Hash feature // Add each line to buffer when encountering newline or EOF for first time.	WITHOUT_CLASSIFICATION	0.9999993479247486	WITHOUT_CLASSIFICATION	6.520752513904906E-7	IMPLEMENTATION
// carriage return	WITHOUT_CLASSIFICATION	0.9999997266898067	WITHOUT_CLASSIFICATION	2.7331019323845297E-7	IMPLEMENTATION
//yyDgoto 136	WITHOUT_CLASSIFICATION	0.9996133755756963	WITHOUT_CLASSIFICATION	3.8662442430363554E-4	IMPLEMENTATION
// discarding a token does not change stack	WITHOUT_CLASSIFICATION	0.9999999217795784	WITHOUT_CLASSIFICATION	7.822042155018279E-8	IMPLEMENTATION
// String construction routines by NOT byte[] buffer and making the target String shared 	WITHOUT_CLASSIFICATION	0.9999994367947496	WITHOUT_CLASSIFICATION	5.632052504041077E-7	IMPLEMENTATION
// insert all nodes in sequence, hash them in the final instruction // KEY	WITHOUT_CLASSIFICATION	0.9999981746797487	WITHOUT_CLASSIFICATION	1.8253202514037065E-6	IMPLEMENTATION
// return last value from execution	WITHOUT_CLASSIFICATION	0.999999991006358	WITHOUT_CLASSIFICATION	8.993642024079804E-9	IMPLEMENTATION
// we append an index to ensure two identical method names will not conflict	WITHOUT_CLASSIFICATION	0.9949688697405389	WITHOUT_CLASSIFICATION	0.00503113025946108	IMPLEMENTATION
// Basic Block id // CFG that this basic block belongs to // All basic blocks have a starting label // List of non-label instructions	WITHOUT_CLASSIFICATION	0.9999999092234482	WITHOUT_CLASSIFICATION	9.07765518818901E-8	IMPLEMENTATION
// otherwise one key has been selected (ours) so we get the channel and hand it off	WITHOUT_CLASSIFICATION	0.9999985180594537	WITHOUT_CLASSIFICATION	1.4819405463197482E-6	IMPLEMENTATION
// For all uninitialized specific arities, we defer to the "n" method which // should raise appropriate error in all cases.	WITHOUT_CLASSIFICATION	0.9999728972468427	WITHOUT_CLASSIFICATION	2.7102753157268643E-5	IMPLEMENTATION
// implement is called to force this class to create stubs for all // methods in the given interface, so they'll show up in the list // of methods and be invocable without passing through method_missing	WITHOUT_CLASSIFICATION	0.9999982603324163	WITHOUT_CLASSIFICATION	1.7396675837078113E-6	IMPLEMENTATION
// CASE IR instructions are dummy instructions  // -- all when/then clauses have been converted into if-then-else blocks	WITHOUT_CLASSIFICATION	0.999999923183092	WITHOUT_CLASSIFICATION	7.681690802302089E-8	IMPLEMENTATION
// check arity in the variable-arity version	WITHOUT_CLASSIFICATION	0.9999993916788462	WITHOUT_CLASSIFICATION	6.083211538244514E-7	IMPLEMENTATION
// leave it null and fall back on our normal invocation logic	WITHOUT_CLASSIFICATION	0.9999990695345506	WITHOUT_CLASSIFICATION	9.304654494844769E-7	IMPLEMENTATION
// Build closure body and return the result of the closure	WITHOUT_CLASSIFICATION	0.9999999934963375	WITHOUT_CLASSIFICATION	6.503662480769955E-9	IMPLEMENTATION
// for each simple method name, implement the complex methods, calling the simple version	WITHOUT_CLASSIFICATION	0.9959355559294184	WITHOUT_CLASSIFICATION	0.004064444070581629	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Need to initialize	WITHOUT_CLASSIFICATION	0.9999903366215245	WITHOUT_CLASSIFICATION	9.663378475413004E-6	IMPLEMENTATION
// Install direct java methods with mangled name so 'send' can call them directly.	WITHOUT_CLASSIFICATION	0.9999700417055827	WITHOUT_CLASSIFICATION	2.9958294417336234E-5	IMPLEMENTATION
/* fall through */	WITHOUT_CLASSIFICATION	0.999993443844521	WITHOUT_CLASSIFICATION	6.55615547897089E-6	IMPLEMENTATION
// deal with case when "other" is not a string	WITHOUT_CLASSIFICATION	0.9999968055554794	WITHOUT_CLASSIFICATION	3.194444520534209E-6	IMPLEMENTATION
// All errors to sysread should be SystemCallErrors, but on a closed stream // Ruby returns an IOError.  Java throws same exception for all errors so // we resort to this hack...	WITHOUT_CLASSIFICATION	0.9999993956411491	WITHOUT_CLASSIFICATION	6.043588508276466E-7	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999966826253	WITHOUT_CLASSIFICATION	3.3173747119102125E-9	IMPLEMENTATION
// in method body with no containing loop, issue jump error // load runtime and value, issue jump error	WITHOUT_CLASSIFICATION	0.9999999966826253	WITHOUT_CLASSIFICATION	3.3173747119102125E-9	IMPLEMENTATION
// store argument count information into scope	WITHOUT_CLASSIFICATION	0.9999999849004235	WITHOUT_CLASSIFICATION	1.5099576390226855E-8	IMPLEMENTATION
// the load method is used for loading as a top-level script, and prepares appropriate scoping around the code	WITHOUT_CLASSIFICATION	0.9999999628106193	WITHOUT_CLASSIFICATION	3.7189380547104277E-8	IMPLEMENTATION
// First, build assignments for specific named arguments	WITHOUT_CLASSIFICATION	0.9999999997739335	WITHOUT_CLASSIFICATION	2.2606658643959785E-10	IMPLEMENTATION
//        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3) { throw fail(); } //        public Object invoke(Object receiver, Object arg0, Object arg1, Object arg2, Object arg3, Object arg4) { throw fail(); }	WITHOUT_CLASSIFICATION	0.9999994657750699	WITHOUT_CLASSIFICATION	5.342249300570553E-7	IMPLEMENTATION
// get current context	WITHOUT_CLASSIFICATION	0.9999949395195314	WITHOUT_CLASSIFICATION	5.0604804685670716E-6	IMPLEMENTATION
// octal constant	WITHOUT_CLASSIFICATION	0.999998387027689	WITHOUT_CLASSIFICATION	1.61297231100932E-6	IMPLEMENTATION
// read	WITHOUT_CLASSIFICATION	0.9999982997166055	WITHOUT_CLASSIFICATION	1.7002833945062735E-6	IMPLEMENTATION
// this really needs to be inlined here	WITHOUT_CLASSIFICATION	0.9999357801504489	WITHOUT_CLASSIFICATION	6.421984955105924E-5	IMPLEMENTATION
// it doesn't handle special cases	WITHOUT_CLASSIFICATION	0.9999982652481473	WITHOUT_CLASSIFICATION	1.7347518526751773E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999940986349986	WITHOUT_CLASSIFICATION	5.90136500149296E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999940986349986	WITHOUT_CLASSIFICATION	5.90136500149296E-6	IMPLEMENTATION
// If reciever is self then we do the call the same way as vcall	WITHOUT_CLASSIFICATION	0.9999940986349986	WITHOUT_CLASSIFICATION	5.90136500149296E-6	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
// ignore; we won't use invokedynamic	WITHOUT_CLASSIFICATION	0.9999999788493695	WITHOUT_CLASSIFICATION	2.115063053519812E-8	IMPLEMENTATION
// at end	WITHOUT_CLASSIFICATION	0.9999852564312874	WITHOUT_CLASSIFICATION	1.4743568712534257E-5	IMPLEMENTATION
/* bang: true, no match, no substitution */	WITHOUT_CLASSIFICATION	0.9999988569512634	WITHOUT_CLASSIFICATION	1.1430487365612892E-6	IMPLEMENTATION
// save blocking state	WITHOUT_CLASSIFICATION	0.9999999845890176	WITHOUT_CLASSIFICATION	1.54109823949442E-8	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
/*receiver*/	WITHOUT_CLASSIFICATION	0.999057845441007	WITHOUT_CLASSIFICATION	9.421545589929794E-4	IMPLEMENTATION
// invoke static __file__	WITHOUT_CLASSIFICATION	0.9999999759405868	WITHOUT_CLASSIFICATION	2.4059413260293112E-8	IMPLEMENTATION
// rest of the argument array!	WITHOUT_CLASSIFICATION	0.9999999519116465	WITHOUT_CLASSIFICATION	4.8088353468934814E-8	IMPLEMENTATION
// fall back on empty env when security disallows environment var access (like in an applet)	WITHOUT_CLASSIFICATION	0.9999826758948237	WITHOUT_CLASSIFICATION	1.7324105176237567E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999839764311731	WITHOUT_CLASSIFICATION	1.602356882683833E-5	IMPLEMENTATION
// UndefinedMethod should be immutable	WITHOUT_CLASSIFICATION	0.9999839764311731	WITHOUT_CLASSIFICATION	1.602356882683833E-5	IMPLEMENTATION
// load null block	WITHOUT_CLASSIFICATION	0.9999998079815435	WITHOUT_CLASSIFICATION	1.9201845647257427E-7	IMPLEMENTATION
// This point is only reached if there was an exception handler installed.	WITHOUT_CLASSIFICATION	0.9999998409407066	WITHOUT_CLASSIFICATION	1.59059293393253E-7	IMPLEMENTATION
// nothing else to here - the module version will be // included in the class.	WITHOUT_CLASSIFICATION	0.999999978787358	WITHOUT_CLASSIFICATION	2.1212641968485912E-8	IMPLEMENTATION
// JRUBY-1000, fail early when attempting to subclass a final Java class; // solved here by adding an exception-throwing "inherited"	WITHOUT_CLASSIFICATION	0.9999998224530463	WITHOUT_CLASSIFICATION	1.7754695364044308E-7	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999925656613554	WITHOUT_CLASSIFICATION	7.434338644566671E-6	IMPLEMENTATION
// block given	WITHOUT_CLASSIFICATION	0.9999925656613554	WITHOUT_CLASSIFICATION	7.434338644566671E-6	IMPLEMENTATION
// Translate ret = (a || b) to ret = (a ? true : b) as follows //  //    v1 = -- build(a) -- //       OPT: ret can be set to v1, but effectively v1 is true if we take the branch to L. //            while this info can be inferred by using attributes, why bother if we can do this? //    ret = true //    beq(v1, true, L) //    v2 = -- build(b) -- //    ret = v2 // L: //	WITHOUT_CLASSIFICATION	0.999997384031724	WITHOUT_CLASSIFICATION	2.6159682760531917E-6	IMPLEMENTATION
// Initial precision is that of double numbers 2^63/2 ~ 4E18 // 63-1 an even number of number bits // precision seems 16 to 18 digits	WITHOUT_CLASSIFICATION	0.9999997541406194	WITHOUT_CLASSIFICATION	2.45859380630294E-7	IMPLEMENTATION
// We can callsite cache const_missing if we want	WITHOUT_CLASSIFICATION	0.9999995604376822	WITHOUT_CLASSIFICATION	4.395623178531242E-7	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
/*self*/	WITHOUT_CLASSIFICATION	0.9999803634430154	WITHOUT_CLASSIFICATION	1.9636556984564224E-5	IMPLEMENTATION
// declare the field	WITHOUT_CLASSIFICATION	0.9999989098794883	WITHOUT_CLASSIFICATION	1.0901205118271051E-6	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997598684748	WITHOUT_CLASSIFICATION	2.4013152518166717E-7	IMPLEMENTATION
// Assign the values.	WITHOUT_CLASSIFICATION	0.9999997598684748	WITHOUT_CLASSIFICATION	2.4013152518166717E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999992766489415	WITHOUT_CLASSIFICATION	7.233510583872635E-7	IMPLEMENTATION
// check arity	WITHOUT_CLASSIFICATION	0.9999992766489415	WITHOUT_CLASSIFICATION	7.233510583872635E-7	IMPLEMENTATION
// create the class	WITHOUT_CLASSIFICATION	0.9999999779870942	WITHOUT_CLASSIFICATION	2.2012905725511876E-8	IMPLEMENTATION
// called only by initializing thread; no synchronization required	WITHOUT_CLASSIFICATION	0.9999931252562575	WITHOUT_CLASSIFICATION	6.874743742497359E-6	IMPLEMENTATION
// No hex value after the 'x'.	WITHOUT_CLASSIFICATION	0.9999946860968824	WITHOUT_CLASSIFICATION	5.313903117650451E-6	IMPLEMENTATION
// 1.8	WITHOUT_CLASSIFICATION	0.9999981832602363	WITHOUT_CLASSIFICATION	1.8167397636433665E-6	IMPLEMENTATION
/* 6:tags 16:addr 1:eos */	WITHOUT_CLASSIFICATION	0.9999990833298323	WITHOUT_CLASSIFICATION	9.166701677627535E-7	IMPLEMENTATION
// Let m be the exact digits precision in an earlier! loop	WITHOUT_CLASSIFICATION	0.9999999980449225	WITHOUT_CLASSIFICATION	1.9550775218858427E-9	IMPLEMENTATION
// For 'foo()'.  Args are only significant in maintaining backwards compatible AST structure	WITHOUT_CLASSIFICATION	0.9999996844628887	WITHOUT_CLASSIFICATION	3.155371114170592E-7	IMPLEMENTATION
// block	WITHOUT_CLASSIFICATION	0.9999998040478495	WITHOUT_CLASSIFICATION	1.959521506321519E-7	IMPLEMENTATION
// Label for the start of the method // Label for the end of the method	WITHOUT_CLASSIFICATION	0.9999999558256697	WITHOUT_CLASSIFICATION	4.417433042554185E-8	IMPLEMENTATION
// comparisons & checks // checks if the operand is non-null and non-false // EQQ a === call used only for its conditional results, as in case/when, begin/rescue, ...	WITHOUT_CLASSIFICATION	0.999999999994946	WITHOUT_CLASSIFICATION	5.054044916685278E-12	IMPLEMENTATION
// FIXME: JRUBY-3604	WITHOUT_CLASSIFICATION	0.9988664157449204	WITHOUT_CLASSIFICATION	0.0011335842550796377	IMPLEMENTATION
// invoke pre method stuff	WITHOUT_CLASSIFICATION	0.9999963135400011	WITHOUT_CLASSIFICATION	3.6864599989491103E-6	IMPLEMENTATION
// all done with lookup attempts, release monitor	WITHOUT_CLASSIFICATION	0.9999951258744865	WITHOUT_CLASSIFICATION	4.874125513559293E-6	IMPLEMENTATION
// allow proxy to be read without synchronization. if proxy // is under construction, only the building thread can see it.	WITHOUT_CLASSIFICATION	0.9997603180234877	WITHOUT_CLASSIFICATION	2.3968197651217705E-4	IMPLEMENTATION
// Create list of interface names to proxy (and make sure they really are interfaces) // Also build a hashcode from all classes to use for retrieving previously-created impl	WITHOUT_CLASSIFICATION	0.9999999720585562	WITHOUT_CLASSIFICATION	2.794144382396348E-8	IMPLEMENTATION
// Construct local variables based on parameter names passed in	WITHOUT_CLASSIFICATION	0.9999999879840307	WITHOUT_CLASSIFICATION	1.2015969291793195E-8	IMPLEMENTATION
// Value of "TZ" property is of a bit different format, // which confuses the Java's TimeZone.getTimeZone(id) method, // and so, we need to convert it.	WITHOUT_CLASSIFICATION	0.9999975701625499	WITHOUT_CLASSIFICATION	2.429837450170939E-6	IMPLEMENTATION
// file given, use it and force it into binding	WITHOUT_CLASSIFICATION	0.9999998658251799	WITHOUT_CLASSIFICATION	1.3417482024759038E-7	IMPLEMENTATION
// ensure the object is associated with the wrapper we found it in, // so that if it comes back we don't re-wrap it	WITHOUT_CLASSIFICATION	0.9999998901821079	WITHOUT_CLASSIFICATION	1.0981789211518412E-7	IMPLEMENTATION
// return sqrt(squarD) with precision of rootMC	WITHOUT_CLASSIFICATION	0.99999813593726	WITHOUT_CLASSIFICATION	1.864062740034057E-6	IMPLEMENTATION
// A scoped location of this variable (high 16 bits is how many scopes down and low 16 bits // is what index in the right scope to set the value.	WITHOUT_CLASSIFICATION	0.9999999949722327	WITHOUT_CLASSIFICATION	5.027767308991159E-9	IMPLEMENTATION
/*arg*/	WITHOUT_CLASSIFICATION	0.9999677689825182	WITHOUT_CLASSIFICATION	3.223101748174413E-5	IMPLEMENTATION
// Get a new label using the provided label prefix	WITHOUT_CLASSIFICATION	0.9999999877779303	WITHOUT_CLASSIFICATION	1.2222069680156411E-8	IMPLEMENTATION
// normal exit, perform finally and return	WITHOUT_CLASSIFICATION	0.9999847056520674	WITHOUT_CLASSIFICATION	1.52943479325874E-5	IMPLEMENTATION
// coerce arguments	WITHOUT_CLASSIFICATION	0.9999999869478352	WITHOUT_CLASSIFICATION	1.3052164876655115E-8	IMPLEMENTATION
// 0.0 is ok // float range // inverted float range? // NaN // +infinity // -infinity	WITHOUT_CLASSIFICATION	0.9999956138782592	WITHOUT_CLASSIFICATION	4.386121740815023E-6	IMPLEMENTATION
/* expected */	WITHOUT_CLASSIFICATION	0.9999966841553454	WITHOUT_CLASSIFICATION	3.315844654689362E-6	IMPLEMENTATION
// set this class's method names in var @__java_ovrd_methods if this // is the new class; otherwise, get method names from there if this is // a proxy superclass.	WITHOUT_CLASSIFICATION	0.9999999999194589	WITHOUT_CLASSIFICATION	8.05410469825783E-11	IMPLEMENTATION
/* ignore backslashed spaces in %w */	WITHOUT_CLASSIFICATION	0.9999999545062537	WITHOUT_CLASSIFICATION	4.5493746316320175E-8	IMPLEMENTATION
// Invert the sign, since TZ format and Java format // use opposite signs, sigh... Also, Java API requires // the sign to be always present, be it "+" or "-".	WITHOUT_CLASSIFICATION	0.9999939090867698	WITHOUT_CLASSIFICATION	6.090913230324729E-6	IMPLEMENTATION
// no binding given, use 0 for both	WITHOUT_CLASSIFICATION	0.9999946293331734	WITHOUT_CLASSIFICATION	5.370666826572273E-6	IMPLEMENTATION
// <=> may return nil in many circumstances, e.g. 3 <=> NaN        	WITHOUT_CLASSIFICATION	0.9999999990121518	WITHOUT_CLASSIFICATION	9.878482669089807E-10	IMPLEMENTATION
// use numbered access method	WITHOUT_CLASSIFICATION	0.9999996174116288	WITHOUT_CLASSIFICATION	3.825883712423931E-7	IMPLEMENTATION
// Always use "GMT" since that's required by Java API.	WITHOUT_CLASSIFICATION	0.999999955689669	WITHOUT_CLASSIFICATION	4.431033096040283E-8	IMPLEMENTATION
// ignore if it's not a global var	WITHOUT_CLASSIFICATION	0.9999987993794668	WITHOUT_CLASSIFICATION	1.2006205332751265E-6	IMPLEMENTATION
// The dataStruct is a place where custom information can be // contained for core implementations that doesn't necessarily // want to go to the trouble of creating a subclass of // RubyObject. The OpenSSL implementation uses this heavily to // save holder objects containing Java cryptography objects. // Java integration uses this to store the Java object ref. //protected transient Object dataStruct;	WITHOUT_CLASSIFICATION	0.999999950249558	WITHOUT_CLASSIFICATION	4.975044195831645E-8	IMPLEMENTATION
// Remaining arguments are for the script itself	WITHOUT_CLASSIFICATION	0.9999999887886436	WITHOUT_CLASSIFICATION	1.1211356452849747E-8	IMPLEMENTATION
// arg grouping, use slower arg walking logic	WITHOUT_CLASSIFICATION	0.9999999544497143	WITHOUT_CLASSIFICATION	4.5550285628520194E-8	IMPLEMENTATION
// build scope names string	WITHOUT_CLASSIFICATION	0.9999999894459036	WITHOUT_CLASSIFICATION	1.0554096277892696E-8	IMPLEMENTATION
// Tries to load at compile-time the constant referred to by 'constRef'. // This might be possible if the constant is defined and is not a forward reference // to a value that will be defined later in the class.	WITHOUT_CLASSIFICATION	0.9999999926454061	WITHOUT_CLASSIFICATION	7.354593954988025E-9	IMPLEMENTATION
// Here we create an "anonymous" exception type used for unrolling the stack. // MRI creates a new one for *every call* to timeout, which can be costly. // We opt to use a single exception type for all cases to avoid this overhead.	WITHOUT_CLASSIFICATION	0.999999995000876	WITHOUT_CLASSIFICATION	4.999123928194349E-9	IMPLEMENTATION
// finally	WITHOUT_CLASSIFICATION	0.9999998368095342	WITHOUT_CLASSIFICATION	1.6319046573553034E-7	IMPLEMENTATION
// MRI behavior: With TZ equal to "GMT" or "UTC", Time.now // is *NOT* considered as a proper GMT/UTC time: //   ENV['TZ']="GMT" //   Time.now.gmt? ==> false //   ENV['TZ']="UTC" //   Time.now.utc? ==> false // Hence, we need to adjust for that.	WITHOUT_CLASSIFICATION	0.9999992753260986	WITHOUT_CLASSIFICATION	7.246739013384783E-7	IMPLEMENTATION
// ?l  | boolean | True if file1 exists and is a symbolic link	WITHOUT_CLASSIFICATION	0.9999999753105406	WITHOUT_CLASSIFICATION	2.4689459390510185E-8	IMPLEMENTATION
// This try/catch is to allow failing over to the "commands" logic // when running from within a jruby-complete jar file, which has // jruby.home = a jar file URL that does not resolve correctly with // JRubyFile.create.	WITHOUT_CLASSIFICATION	0.9999890366422292	WITHOUT_CLASSIFICATION	1.0963357770965085E-5	IMPLEMENTATION
// Each root node has a top-level scope that we need to push	WITHOUT_CLASSIFICATION	0.9999599568723123	WITHOUT_CLASSIFICATION	4.004312768766816E-5	IMPLEMENTATION
// specific arity	WITHOUT_CLASSIFICATION	0.9999998639626795	WITHOUT_CLASSIFICATION	1.360373204560687E-7	IMPLEMENTATION
// In the case of two arguments, MRI will discard the portion of // the first argument after a decimal point (i.e., "floor"). // However in the case of a single argument, any portion after // the decimal point is honored.	WITHOUT_CLASSIFICATION	0.9999999156705282	WITHOUT_CLASSIFICATION	8.432947186823653E-8	IMPLEMENTATION
// ?w  | boolean | True if file1 exists and is writable by effective uid/gid	WITHOUT_CLASSIFICATION	0.9999999194508669	WITHOUT_CLASSIFICATION	8.054913320623488E-8	IMPLEMENTATION
// // COMMON VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999974346129349	WITHOUT_CLASSIFICATION	2.5653870650862547E-6	IMPLEMENTATION
/*    @JRubyMethod    public IRubyObject to_proc() {        return RubyProc.newProc(getRuntime(),                                CallBlock.newCallClosure(this, getRuntime().getSymbol(), Arity.noArguments(), new ToProcCallback(this), getRuntime().getCurrentContext()),                                Block.Type.PROC);    }    */	WITHOUT_CLASSIFICATION	0.9999998478146646	WITHOUT_CLASSIFICATION	1.5218533554527905E-7	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999931764045209	WITHOUT_CLASSIFICATION	6.823595479203623E-6	IMPLEMENTATION
// let RescuedBlock continue	WITHOUT_CLASSIFICATION	0.9999931764045209	WITHOUT_CLASSIFICATION	6.823595479203623E-6	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999775448184	WITHOUT_CLASSIFICATION	2.2455181623562554E-8	IMPLEMENTATION
// do nothing, fall back on default compiler below	WITHOUT_CLASSIFICATION	0.9999999775448184	WITHOUT_CLASSIFICATION	2.2455181623562554E-8	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999536617035542	WITHOUT_CLASSIFICATION	4.6338296445881056E-5	IMPLEMENTATION
// Should we run this pass on the current scope before running it on nested scopes?	WITHOUT_CLASSIFICATION	0.9999536617035542	WITHOUT_CLASSIFICATION	4.6338296445881056E-5	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984705855319	WITHOUT_CLASSIFICATION	1.5294144680055757E-6	IMPLEMENTATION
/*  ================     *  Utility Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999984705855319	WITHOUT_CLASSIFICATION	1.5294144680055757E-6	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// write-volatile	WITHOUT_CLASSIFICATION	0.9999993700764495	WITHOUT_CLASSIFICATION	6.299235505082855E-7	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999545579075	WITHOUT_CLASSIFICATION	4.5442092532882834E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999545579075	WITHOUT_CLASSIFICATION	4.5442092532882834E-8	IMPLEMENTATION
// if more than 4 locals, get the locals array too	WITHOUT_CLASSIFICATION	0.9999999545579075	WITHOUT_CLASSIFICATION	4.5442092532882834E-8	IMPLEMENTATION
// Add property name aliases	WITHOUT_CLASSIFICATION	0.999998945342302	WITHOUT_CLASSIFICATION	1.0546576980145386E-6	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998205315671	WITHOUT_CLASSIFICATION	1.794684329264983E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998205315671	WITHOUT_CLASSIFICATION	1.794684329264983E-7	IMPLEMENTATION
/*  ================     *  Instance Methods     *  ================      */	WITHOUT_CLASSIFICATION	0.9999998205315671	WITHOUT_CLASSIFICATION	1.794684329264983E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999843118242	WITHOUT_CLASSIFICATION	1.568817580025963E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999843118242	WITHOUT_CLASSIFICATION	1.568817580025963E-7	IMPLEMENTATION
// @JRubyMethod(name = "new", meta = true, visibility = Visibility.PRIVATE)	WITHOUT_CLASSIFICATION	0.999999843118242	WITHOUT_CLASSIFICATION	1.568817580025963E-7	IMPLEMENTATION
// // INTERNAL VARIABLE METHODS //	WITHOUT_CLASSIFICATION	0.9999938756712368	WITHOUT_CLASSIFICATION	6.124328763283804E-6	IMPLEMENTATION
// backspace	WITHOUT_CLASSIFICATION	0.9999982120824361	WITHOUT_CLASSIFICATION	1.7879175637915071E-6	IMPLEMENTATION
//yySindex 889	WITHOUT_CLASSIFICATION	0.9997908125366942	WITHOUT_CLASSIFICATION	2.0918746330579472E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9995226393162002	WITHOUT_CLASSIFICATION	4.773606837997086E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9995226393162002	WITHOUT_CLASSIFICATION	4.773606837997086E-4	IMPLEMENTATION
//yyGindex 136	WITHOUT_CLASSIFICATION	0.9995226393162002	WITHOUT_CLASSIFICATION	4.773606837997086E-4	IMPLEMENTATION
/* package-private */	WITHOUT_CLASSIFICATION	0.9999999392947713	WITHOUT_CLASSIFICATION	6.070522878537459E-8	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.99999651917613	WITHOUT_CLASSIFICATION	3.4808238700782398E-6	IMPLEMENTATION
// fall through	WITHOUT_CLASSIFICATION	0.99999651917613	WITHOUT_CLASSIFICATION	3.4808238700782398E-6	IMPLEMENTATION
// MRI issuses warning here on (RBIGNUM(x)->len * SIZEOF_BDIGITS * yy > 1024*1024)	WITHOUT_CLASSIFICATION	0.9999995000911651	WITHOUT_CLASSIFICATION	4.999088347824213E-7	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999939767726954	WITHOUT_CLASSIFICATION	6.0232273046403215E-6	IMPLEMENTATION
// interrupt the target thread in case it's blocking or waiting // WARNING: We no longer interrupt the target thread, since this usually means // interrupting IO and with NIO that means the channel is no longer usable. // We either need a new way to handle waking a target thread that's waiting // on IO, or we need to accept that we can't wake such threads and must wait // for them to complete their operation. //threadImpl.interrupt();	WITHOUT_CLASSIFICATION	0.9999939767726954	WITHOUT_CLASSIFICATION	6.0232273046403215E-6	IMPLEMENTATION
/**      * Nested class whose instances act as thunks reacting to to_str method     * called from (Exception#to_str, Exception#message)     * MRI equivalent: rb_cNameErrorMesg, class name: "message", construction method: "!",     * to_str implementation: "name_err_mesg_to_str"     *     * TODO: this class should not be lookupable     */	WITHOUT_CLASSIFICATION	0.9512092966362965	IMPLEMENTATION	0.048790703363703426	WITHOUT_CLASSIFICATION
// We need to guarantee that any existing reads of old Map can //  proceed. So we cannot yet null out each bin.	WITHOUT_CLASSIFICATION	0.9422136334207175	WITHOUT_CLASSIFICATION	0.057786366579282426	IMPLEMENTATION
// The name of this source (e.g. a filename: foo.rb)	WITHOUT_CLASSIFICATION	0.9999999832065266	WITHOUT_CLASSIFICATION	1.6793473390843073E-8	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// This should only be called by this and RubyFile. // It allows this object to be created without a IOHandler.	WITHOUT_CLASSIFICATION	0.999894144836281	WITHOUT_CLASSIFICATION	1.058551637189654E-4	IMPLEMENTATION
// We yield here to hopefully permit the target thread to schedule // MRI immediately schedules it, so this is close but not exact	WITHOUT_CLASSIFICATION	0.9999999999241265	WITHOUT_CLASSIFICATION	7.587354917509164E-11	IMPLEMENTATION
// note that addMethod now does its own put, so any change made to // functionality here should be made there as well 	WITHOUT_CLASSIFICATION	0.9999978096937913	WITHOUT_CLASSIFICATION	2.1903062087162944E-6	IMPLEMENTATION
/* Currently dead code, but useful when we figure out how to actually perform translit.    private static boolean isTranslit(String encoding) {        return encoding.toLowerCase().indexOf(TRANSLIT) != -1 ? true : false;    }*/	WITHOUT_CLASSIFICATION	0.9999995843692991	WITHOUT_CLASSIFICATION	4.156307008982672E-7	IMPLEMENTATION
// empirically it appears that to_ary coersions always return array or nil, so this // should always be an array by now.	WITHOUT_CLASSIFICATION	0.9999788522264835	WITHOUT_CLASSIFICATION	2.11477735164609E-5	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// EQ == 0 (i.e. false)	WITHOUT_CLASSIFICATION	0.9999998142249804	WITHOUT_CLASSIFICATION	1.8577501963062624E-7	IMPLEMENTATION
// No seconds, just yield	WITHOUT_CLASSIFICATION	0.9999985894919047	WITHOUT_CLASSIFICATION	1.41050809532528E-6	IMPLEMENTATION
// finally handling for abnormal exit	WITHOUT_CLASSIFICATION	0.9999960888148502	WITHOUT_CLASSIFICATION	3.911185149783824E-6	IMPLEMENTATION
// if it's an inner class and it's not public, we can't access it; // skip population of declared elements	WITHOUT_CLASSIFICATION	0.9999999920132926	WITHOUT_CLASSIFICATION	7.98670741404412E-9	IMPLEMENTATION
// getFoo      => foo // getFoo(int) => foo(int)	WITHOUT_CLASSIFICATION	0.9999997960607895	WITHOUT_CLASSIFICATION	2.0393921057140028E-7	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// MRI behavior on Windows: it treats '/' as a root of // a current drive (but only if SINGLE slash is present!): // E.g., if current work directory is // 'D:/home/directory', then '/' means 'D:/'. // // Basically, '/path' is treated as a *RELATIVE* path, // relative to the current drive. '//path' is treated // as absolute one.	WITHOUT_CLASSIFICATION	0.9999987132709653	WITHOUT_CLASSIFICATION	1.2867290346978763E-6	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// not reached	WITHOUT_CLASSIFICATION	0.9988683797606105	WITHOUT_CLASSIFICATION	0.001131620239389445	IMPLEMENTATION
// This is needed when the enclosing class or module is a singleton. // In that case, we generated a name such as null::Foo, which broke  // Marshalling, among others. The correct thing to do in this situation  // is to insert the generate the name of form #<Class:01xasdfasd> if  // it's a singleton module/class, which this code accomplishes.	WITHOUT_CLASSIFICATION	0.9999983837248242	WITHOUT_CLASSIFICATION	1.6162751758910767E-6	IMPLEMENTATION
// this is the only case it might be null here (in MetaClass construction)	WITHOUT_CLASSIFICATION	0.9999999182392384	WITHOUT_CLASSIFICATION	8.176076156747894E-8	IMPLEMENTATION
// EQ == 0 (i.e. false) // pop the extra result and replace with the send part of the AND	WITHOUT_CLASSIFICATION	0.9999993437185098	WITHOUT_CLASSIFICATION	6.562814901255025E-7	IMPLEMENTATION
// get "self"	WITHOUT_CLASSIFICATION	0.999999871413191	WITHOUT_CLASSIFICATION	1.2858680895020413E-7	IMPLEMENTATION
// No timeout in critical section	WITHOUT_CLASSIFICATION	0.9999985368271551	WITHOUT_CLASSIFICATION	1.463172844870214E-6	IMPLEMENTATION
// rethrow exception // rethrow it	WITHOUT_CLASSIFICATION	0.9999955052230045	WITHOUT_CLASSIFICATION	4.494776995483642E-6	IMPLEMENTATION
// only public methods	WITHOUT_CLASSIFICATION	0.9999999462763182	WITHOUT_CLASSIFICATION	5.372368170544135E-8	IMPLEMENTATION
// If already inspecting, there is no need to register/unregister again.	WITHOUT_CLASSIFICATION	0.9997906589368354	WITHOUT_CLASSIFICATION	2.0934106316459043E-4	IMPLEMENTATION
// First try to use drive letter from supplied dir value, // then try current work dir.	WITHOUT_CLASSIFICATION	0.9999915046452338	WITHOUT_CLASSIFICATION	8.495354766292212E-6	IMPLEMENTATION
// JRUBY-2435: Aliasing eval and other "special" methods should display a warning // We warn because we treat certain method names as "special" for purposes of // optimization. Hopefully this will be enough to convince people not to alias // them.	WITHOUT_CLASSIFICATION	0.9998326503463996	WITHOUT_CLASSIFICATION	1.6734965360046242E-4	IMPLEMENTATION
// generate a real method signature for the method, with to/from coercions	WITHOUT_CLASSIFICATION	0.999998819053003	WITHOUT_CLASSIFICATION	1.1809469969654897E-6	IMPLEMENTATION
// block argument to the method // closure present // class present // method table mutations, def, defs, undef, alias // likely call to eval // makes calls that are aware of the frame // makes calls that are aware of the frame's self // makes calls that are aware of the frame's visibility // makes calls that are aware of the frame's block // makes calls that are aware of the frame's name // makes calls that set or get backref // makes calls that set or get lastline // makes calls that are aware of the frame's class // optional arguments to the method // rest arg to the method // makes calls that are aware of the scope // makes a zero-argument super call // accesses or sets constants // accesses or sets class variables // makes normal super call // contains a retry	WITHOUT_CLASSIFICATION	0.9999999980547991	WITHOUT_CLASSIFICATION	1.945200886837309E-9	IMPLEMENTATION
// // Add aliases in Type::*, NativeType::* and FFI::TYPE_* //	WITHOUT_CLASSIFICATION	0.9999999253468151	WITHOUT_CLASSIFICATION	7.46531848980206E-8	IMPLEMENTATION
// Create constants for flock	WITHOUT_CLASSIFICATION	0.9999999935329646	WITHOUT_CLASSIFICATION	6.4670353594707546E-9	IMPLEMENTATION
// double-testing args.length here, but it avoids duplicating the proc-setup code in two places	WITHOUT_CLASSIFICATION	0.9999994251802583	WITHOUT_CLASSIFICATION	5.748197416497277E-7	IMPLEMENTATION
// indices for temp values	WITHOUT_CLASSIFICATION	0.999999980112057	WITHOUT_CLASSIFICATION	1.9887942895144955E-8	IMPLEMENTATION
// a while node could receive non-local flow control from any of these: // * a closure within the loop // * an eval within the loop // * a block-arg-based proc called within the loop	WITHOUT_CLASSIFICATION	0.9999987076835309	WITHOUT_CLASSIFICATION	1.2923164690851376E-6	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994517928565	WITHOUT_CLASSIFICATION	5.482071434663199E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994517928565	WITHOUT_CLASSIFICATION	5.482071434663199E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994517928565	WITHOUT_CLASSIFICATION	5.482071434663199E-7	IMPLEMENTATION
// Done with closure compilation	WITHOUT_CLASSIFICATION	0.9999994517928565	WITHOUT_CLASSIFICATION	5.482071434663199E-7	IMPLEMENTATION
// snapshot of contents of directory // current position in directory	WITHOUT_CLASSIFICATION	0.9999998061962054	WITHOUT_CLASSIFICATION	1.9380379458801326E-7	IMPLEMENTATION
// Exclusive locks in Java require the channel to be writable, otherwise // an exception is thrown (terminating JRuby execution). // But flock behavior of MRI is that it allows // exclusive locks even on non-writable file. So we convert exclusive // lock to shared lock if the channel is not writable, to better match // the MRI behavior.	WITHOUT_CLASSIFICATION	0.9998222891396229	WITHOUT_CLASSIFICATION	1.7771086037698066E-4	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997523234823	WITHOUT_CLASSIFICATION	2.476765176917021E-7	IMPLEMENTATION
// explode array, it's an internal "args" array	WITHOUT_CLASSIFICATION	0.9999997523234823	WITHOUT_CLASSIFICATION	2.476765176917021E-7	IMPLEMENTATION
// set self to the class	WITHOUT_CLASSIFICATION	0.9999999969603738	WITHOUT_CLASSIFICATION	3.0396261790390772E-9	IMPLEMENTATION
/* ---------- Public fields, methods --------- */	WITHOUT_CLASSIFICATION	0.9999999885385072	WITHOUT_CLASSIFICATION	1.1461492788941713E-8	IMPLEMENTATION
// // A specific version was requested - use as is for search //	WITHOUT_CLASSIFICATION	0.999999915310258	WITHOUT_CLASSIFICATION	8.468974201392538E-8	IMPLEMENTATION
// zero args, no block; do nothing	WITHOUT_CLASSIFICATION	0.9999999987248908	WITHOUT_CLASSIFICATION	1.2751091530485393E-9	IMPLEMENTATION
// we need to collect all methods, though we'll only // install the ones that are named in this class	WITHOUT_CLASSIFICATION	0.9999999063421223	WITHOUT_CLASSIFICATION	9.36578776898406E-8	IMPLEMENTATION
// Store each line into this list if not null.	WITHOUT_CLASSIFICATION	0.9999995280651068	WITHOUT_CLASSIFICATION	4.719348932489939E-7	IMPLEMENTATION
// Portion of line right after beginning marker	WITHOUT_CLASSIFICATION	0.9999993765900342	WITHOUT_CLASSIFICATION	6.234099658167852E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999994991933845	WITHOUT_CLASSIFICATION	5.008066154271601E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999994991933845	WITHOUT_CLASSIFICATION	5.008066154271601E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999994991933845	WITHOUT_CLASSIFICATION	5.008066154271601E-7	IMPLEMENTATION
// do nothing	WITHOUT_CLASSIFICATION	0.9999994991933845	WITHOUT_CLASSIFICATION	5.008066154271601E-7	IMPLEMENTATION
// If an IO exception occurs (something odd, but possible) // A directory may return null.	WITHOUT_CLASSIFICATION	0.9999999818190265	WITHOUT_CLASSIFICATION	1.8180973413906488E-8	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999997121888	WITHOUT_CLASSIFICATION	2.878111526440088E-10	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999997121888	WITHOUT_CLASSIFICATION	2.878111526440088E-10	IMPLEMENTATION
// Check the visibility of the previous frame, which will be the frame in which the class is being eval'ed	WITHOUT_CLASSIFICATION	0.9999999997121888	WITHOUT_CLASSIFICATION	2.878111526440088E-10	IMPLEMENTATION
// use array as-is, it's a literal array	WITHOUT_CLASSIFICATION	0.999999170601102	WITHOUT_CLASSIFICATION	8.293988981052722E-7	IMPLEMENTATION
// finally with no exception	WITHOUT_CLASSIFICATION	0.9999999120064123	WITHOUT_CLASSIFICATION	8.799358769969204E-8	IMPLEMENTATION
// Now, for all variables used by 'i' mark them live before 'i'	WITHOUT_CLASSIFICATION	0.9999584758396689	WITHOUT_CLASSIFICATION	4.1524160331077114E-5	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6721403955969332	WITHOUT_CLASSIFICATION	0.32785960440306683	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6721403955969332	WITHOUT_CLASSIFICATION	0.32785960440306683	IMPLEMENTATION
/* The counting of slashes that follows is simply a way to adhere to          * Ruby's UNC (or something) compatibility. When Ruby's expand_path is          * called with "//foo//bar" it will return "//foo/bar". JRuby uses          * java.io.File, and hence returns "/foo/bar". In order to retain          * java.io.File in the lower layers and provide full Ruby          * compatibility, the number of extra slashes must be counted and          * prepended to the result.         */	WITHOUT_CLASSIFICATION	0.9999999883750074	WITHOUT_CLASSIFICATION	1.1624992508462298E-8	IMPLEMENTATION
// This is almost always already interned, since it will be called with a symbol in most cases // but when created from Java code, we might get an argument that needs to be interned. // addAccessor has as a precondition that the string MUST be interned	WITHOUT_CLASSIFICATION	0.9999889551145902	WITHOUT_CLASSIFICATION	1.1044885409825234E-5	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999999453232032	WITHOUT_CLASSIFICATION	5.4676796696237903E-8	IMPLEMENTATION
/* not a class */	WITHOUT_CLASSIFICATION	0.9999999453232032	WITHOUT_CLASSIFICATION	5.4676796696237903E-8	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999444499253	WITHOUT_CLASSIFICATION	5.555007472145415E-8	IMPLEMENTATION
// Ruby uses Qnil here, we use "dummy" because we need a class	WITHOUT_CLASSIFICATION	0.9999999444499253	WITHOUT_CLASSIFICATION	5.555007472145415E-8	IMPLEMENTATION
// io.available() only returns 0 after EOF is encountered // so we need to differentiate between the empty string and EOF	WITHOUT_CLASSIFICATION	0.9999997888930264	WITHOUT_CLASSIFICATION	2.1110697366574748E-7	IMPLEMENTATION
// In the current logic, if we get here we know that module is not an // IncludedModuleWrapper, so there's no need to fish out the delegate. But just // in case the logic should change later, let's do it anyway	WITHOUT_CLASSIFICATION	0.9999696821691617	WITHOUT_CLASSIFICATION	3.031783083817629E-5	IMPLEMENTATION
// rb_iterate((VALUE(*)_((VALUE)))str_step, (VALUE)args, step_i, (VALUE)iter);	WITHOUT_CLASSIFICATION	0.999999990870087	WITHOUT_CLASSIFICATION	9.129913043620195E-9	IMPLEMENTATION
// Broken symlinks considered by exists() as non-existing, // so we need to check for symlinks explicitly.	WITHOUT_CLASSIFICATION	0.9999964383602157	WITHOUT_CLASSIFICATION	3.561639784217018E-6	IMPLEMENTATION
// ////////////////// CONSTANT API METHODS //////////////// //	WITHOUT_CLASSIFICATION	0.9999987381989532	WITHOUT_CLASSIFICATION	1.2618010466998084E-6	IMPLEMENTATION
// create the default thread group	WITHOUT_CLASSIFICATION	0.9999992424877572	WITHOUT_CLASSIFICATION	7.575122428316815E-7	IMPLEMENTATION
// range_each_func(range, step_i, b, e, args);	WITHOUT_CLASSIFICATION	0.999999998942299	WITHOUT_CLASSIFICATION	1.0577011167186827E-9	IMPLEMENTATION
/* ============================     * Here are hash internals     * (This could be extracted to a separate class but it's not too large though)     * ============================     */	WITHOUT_CLASSIFICATION	0.9999999997064482	WITHOUT_CLASSIFICATION	2.935518650400117E-10	IMPLEMENTATION
// ////////////////// LOW-LEVEL CLASS VARIABLE INTERFACE //////////////// // // fetch/store/list class variables for this module //	WITHOUT_CLASSIFICATION	0.9999999999450316	WITHOUT_CLASSIFICATION	5.4968413989505754E-11	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999958475625315	WITHOUT_CLASSIFICATION	4.152437468512811E-6	IMPLEMENTATION
// used only by the compiler/interpreter (will set the literal flag)	WITHOUT_CLASSIFICATION	0.9999958475625315	WITHOUT_CLASSIFICATION	4.152437468512811E-6	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997046178547	WITHOUT_CLASSIFICATION	2.9538214527938825E-7	IMPLEMENTATION
// Used for the 'redo' command	WITHOUT_CLASSIFICATION	0.9999997046178547	WITHOUT_CLASSIFICATION	2.9538214527938825E-7	IMPLEMENTATION
// retuns null when not found to avoid unnecessary getRuntime().getNil() call	WITHOUT_CLASSIFICATION	0.999999584545008	WITHOUT_CLASSIFICATION	4.154549919667421E-7	IMPLEMENTATION
// returns the stored value without processing undefs (autoloads)	WITHOUT_CLASSIFICATION	0.9999944651426288	WITHOUT_CLASSIFICATION	5.534857371194414E-6	IMPLEMENTATION
/* \cX, \c\M-X */	WITHOUT_CLASSIFICATION	0.999996342981692	WITHOUT_CLASSIFICATION	3.6570183079844068E-6	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997950868944	WITHOUT_CLASSIFICATION	2.0491310565125996E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997950868944	WITHOUT_CLASSIFICATION	2.0491310565125996E-7	IMPLEMENTATION
//new Exception().printStackTrace();	WITHOUT_CLASSIFICATION	0.9999997950868944	WITHOUT_CLASSIFICATION	2.0491310565125996E-7	IMPLEMENTATION
// line 286	WITHOUT_CLASSIFICATION	0.9999984503949497	WITHOUT_CLASSIFICATION	1.549605050345229E-6	IMPLEMENTATION
// line 476	WITHOUT_CLASSIFICATION	0.9999991947192921	WITHOUT_CLASSIFICATION	8.052807078910574E-7	IMPLEMENTATION
// line 513	WITHOUT_CLASSIFICATION	0.999998870707116	WITHOUT_CLASSIFICATION	1.1292928839813699E-6	IMPLEMENTATION
// line 530	WITHOUT_CLASSIFICATION	0.9999997246376248	WITHOUT_CLASSIFICATION	2.7536237527656545E-7	IMPLEMENTATION
// line 533	WITHOUT_CLASSIFICATION	0.999999350549502	WITHOUT_CLASSIFICATION	6.494504980929007E-7	IMPLEMENTATION
// line 537	WITHOUT_CLASSIFICATION	0.9999994830662747	WITHOUT_CLASSIFICATION	5.169337252183777E-7	IMPLEMENTATION
// line 551	WITHOUT_CLASSIFICATION	0.999997471886142	WITHOUT_CLASSIFICATION	2.5281138580132574E-6	IMPLEMENTATION
// end loop	WITHOUT_CLASSIFICATION	0.9999968253027379	WITHOUT_CLASSIFICATION	3.1746972619942638E-6	IMPLEMENTATION
// MRI behavior: we don't print errno for actual Errno errors	WITHOUT_CLASSIFICATION	0.9998675771149113	WITHOUT_CLASSIFICATION	1.3242288508873328E-4	IMPLEMENTATION
// prepare to call class definition method	WITHOUT_CLASSIFICATION	0.9999992577765779	WITHOUT_CLASSIFICATION	7.422234220945411E-7	IMPLEMENTATION
// Traverse the instructions in this basic block in reverse order! // Mark as dead all instructions whose results are not used! 	WITHOUT_CLASSIFICATION	0.9999765615330357	WITHOUT_CLASSIFICATION	2.343846696433099E-5	IMPLEMENTATION
// // fields should really be an immutable map as it is never modified after construction //	WITHOUT_CLASSIFICATION	0.9999921162034409	WITHOUT_CLASSIFICATION	7.883796559245878E-6	IMPLEMENTATION
// load self object as IRubyObject, for recv param	WITHOUT_CLASSIFICATION	0.9999999929367533	WITHOUT_CLASSIFICATION	7.06324674263319E-9	IMPLEMENTATION
// TODO: varargs?	WITHOUT_CLASSIFICATION	0.6721403955969332	WITHOUT_CLASSIFICATION	0.32785960440306683	IMPLEMENTATION
// If we define a class in Ruby, but later want to allow it to be defined in Java, // the allocator needs to be updated	WITHOUT_CLASSIFICATION	0.9999996859912993	WITHOUT_CLASSIFICATION	3.1400870068485455E-7	IMPLEMENTATION
// We only want IO objects with valid streams (better to error now). 	WITHOUT_CLASSIFICATION	0.9999713160095173	WITHOUT_CLASSIFICATION	2.8683990482802093E-5	IMPLEMENTATION
// produce a nicer error since Rubyists aren't used to seeing this	WITHOUT_CLASSIFICATION	0.9999999720897388	WITHOUT_CLASSIFICATION	2.7910261254923152E-8	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999811238887879	WITHOUT_CLASSIFICATION	1.8876111212136566E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999811238887879	WITHOUT_CLASSIFICATION	1.8876111212136566E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999811238887879	WITHOUT_CLASSIFICATION	1.8876111212136566E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999811238887879	WITHOUT_CLASSIFICATION	1.8876111212136566E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999811238887879	WITHOUT_CLASSIFICATION	1.8876111212136566E-5	IMPLEMENTATION
//yyLhs 542	WITHOUT_CLASSIFICATION	0.9999971552183555	WITHOUT_CLASSIFICATION	2.8447816443566807E-6	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999811238887879	WITHOUT_CLASSIFICATION	1.8876111212136566E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999811238887879	WITHOUT_CLASSIFICATION	1.8876111212136566E-5	IMPLEMENTATION
/*value*/	WITHOUT_CLASSIFICATION	0.9999811238887879	WITHOUT_CLASSIFICATION	1.8876111212136566E-5	IMPLEMENTATION
// MRI has extra pointer which makes our code look a little bit // more strange in // comparison	WITHOUT_CLASSIFICATION	0.9999995693440679	WITHOUT_CLASSIFICATION	4.306559321912466E-7	IMPLEMENTATION
// Tempory buffer to build up a potential token.  Consumer takes responsibility to reset  // this before use.	WITHOUT_CLASSIFICATION	0.9993430603693838	WITHOUT_CLASSIFICATION	6.569396306161701E-4	IMPLEMENTATION
//tmpPosition is required because getPosition()'s side effects. //if the warning is generated, the getPosition() on line 954 (this line + 18) will create //a wrong position if the "inclusive" flag is not set.	WITHOUT_CLASSIFICATION	0.9999860114803695	WITHOUT_CLASSIFICATION	1.3988519630429997E-5	IMPLEMENTATION
/* What is \v in C?                    case '\v':                        c2 = 'v';                        break;                        */	WITHOUT_CLASSIFICATION	0.9999999787046734	WITHOUT_CLASSIFICATION	2.1295326637090366E-8	IMPLEMENTATION
/* Consider Thread aspects of this */	WITHOUT_CLASSIFICATION	0.9999999059353664	WITHOUT_CLASSIFICATION	9.406463358340949E-8	IMPLEMENTATION
// Position within source must reflect the actual offset and column.  Since // we ate an extra character here (this accounting is normally done in read // ), we should update position info.	WITHOUT_CLASSIFICATION	0.9999959469181194	WITHOUT_CLASSIFICATION	4.053081880561591E-6	IMPLEMENTATION
// An interrupt or timeout may have caused us to miss // a notify that we consumed, so do another notify in // case someone else is available to pick it up.	WITHOUT_CLASSIFICATION	0.9999992424554994	WITHOUT_CLASSIFICATION	7.575445005054437E-7	IMPLEMENTATION
// line 572	WITHOUT_CLASSIFICATION	0.9999996570272628	WITHOUT_CLASSIFICATION	3.429727372037246E-7	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999980725214986	WITHOUT_CLASSIFICATION	1.927478501281329E-6	IMPLEMENTATION
// line 601	WITHOUT_CLASSIFICATION	0.9999980725214986	WITHOUT_CLASSIFICATION	1.927478501281329E-6	IMPLEMENTATION
// line 625	WITHOUT_CLASSIFICATION	0.9999992445636199	WITHOUT_CLASSIFICATION	7.554363801523028E-7	IMPLEMENTATION
// line 649	WITHOUT_CLASSIFICATION	0.9999990113390855	WITHOUT_CLASSIFICATION	9.886609144944138E-7	IMPLEMENTATION
// line 691	WITHOUT_CLASSIFICATION	0.9999970504824862	WITHOUT_CLASSIFICATION	2.9495175137686254E-6	IMPLEMENTATION
// line 723	WITHOUT_CLASSIFICATION	0.999999466874903	WITHOUT_CLASSIFICATION	5.331250969375342E-7	IMPLEMENTATION
// line 732	WITHOUT_CLASSIFICATION	0.9999996795658715	WITHOUT_CLASSIFICATION	3.204341284291196E-7	IMPLEMENTATION
// line 745	WITHOUT_CLASSIFICATION	0.9999992585993013	WITHOUT_CLASSIFICATION	7.414006986960423E-7	IMPLEMENTATION
// line 766	WITHOUT_CLASSIFICATION	0.9999991827966123	WITHOUT_CLASSIFICATION	8.172033876374618E-7	IMPLEMENTATION
// line 785	WITHOUT_CLASSIFICATION	0.9999990589977598	WITHOUT_CLASSIFICATION	9.410022403533476E-7	IMPLEMENTATION
// line 794	WITHOUT_CLASSIFICATION	0.9999992263439023	WITHOUT_CLASSIFICATION	7.736560976893281E-7	IMPLEMENTATION
// line 800	WITHOUT_CLASSIFICATION	0.9999993758787546	WITHOUT_CLASSIFICATION	6.24121245326236E-7	IMPLEMENTATION
// line 812	WITHOUT_CLASSIFICATION	0.9999990797553423	WITHOUT_CLASSIFICATION	9.202446577955575E-7	IMPLEMENTATION
// line 827	WITHOUT_CLASSIFICATION	0.9999991611144684	WITHOUT_CLASSIFICATION	8.388855315323617E-7	IMPLEMENTATION
// line 839	WITHOUT_CLASSIFICATION	0.999998952447265	WITHOUT_CLASSIFICATION	1.0475527350536865E-6	IMPLEMENTATION
// line 845	WITHOUT_CLASSIFICATION	0.9999988123439447	WITHOUT_CLASSIFICATION	1.1876560552343577E-6	IMPLEMENTATION
// line 864	WITHOUT_CLASSIFICATION	0.9999987620216356	WITHOUT_CLASSIFICATION	1.2379783643949263E-6	IMPLEMENTATION
// line 886	WITHOUT_CLASSIFICATION	0.9999987001186378	WITHOUT_CLASSIFICATION	1.2998813623207034E-6	IMPLEMENTATION
// line 896	WITHOUT_CLASSIFICATION	0.9999986954368218	WITHOUT_CLASSIFICATION	1.3045631781627197E-6	IMPLEMENTATION
// line 911	WITHOUT_CLASSIFICATION	0.9999975235206608	WITHOUT_CLASSIFICATION	2.476479339256235E-6	IMPLEMENTATION
// line 929	WITHOUT_CLASSIFICATION	0.9999991671263482	WITHOUT_CLASSIFICATION	8.32873651846794E-7	IMPLEMENTATION
// line 952	WITHOUT_CLASSIFICATION	0.9999995628510621	WITHOUT_CLASSIFICATION	4.3714893799121207E-7	IMPLEMENTATION
// line 970	WITHOUT_CLASSIFICATION	0.9999995993761961	WITHOUT_CLASSIFICATION	4.006238039345031E-7	IMPLEMENTATION
// line 972	WITHOUT_CLASSIFICATION	0.9999995957274413	WITHOUT_CLASSIFICATION	4.04272558547507E-7	IMPLEMENTATION
// line 991	WITHOUT_CLASSIFICATION	0.9999969732929841	WITHOUT_CLASSIFICATION	3.0267070160264937E-6	IMPLEMENTATION
// line 1011	WITHOUT_CLASSIFICATION	0.9999984865059443	WITHOUT_CLASSIFICATION	1.5134940556724318E-6	IMPLEMENTATION
// line 1026	WITHOUT_CLASSIFICATION	0.9999988142800299	WITHOUT_CLASSIFICATION	1.1857199700601577E-6	IMPLEMENTATION
// line 1038	WITHOUT_CLASSIFICATION	0.9999985503981398	WITHOUT_CLASSIFICATION	1.4496018603037539E-6	IMPLEMENTATION
// line 1067	WITHOUT_CLASSIFICATION	0.9999987929657732	WITHOUT_CLASSIFICATION	1.207034226796759E-6	IMPLEMENTATION
// line 1085	WITHOUT_CLASSIFICATION	0.9999983485433803	WITHOUT_CLASSIFICATION	1.6514566197471428E-6	IMPLEMENTATION
// line 1097	WITHOUT_CLASSIFICATION	0.999998861942667	WITHOUT_CLASSIFICATION	1.138057333028144E-6	IMPLEMENTATION
// line 1105	WITHOUT_CLASSIFICATION	0.9999990965203492	WITHOUT_CLASSIFICATION	9.034796507149298E-7	IMPLEMENTATION
// line 1122	WITHOUT_CLASSIFICATION	0.9999991137587796	WITHOUT_CLASSIFICATION	8.862412204490113E-7	IMPLEMENTATION
// line 1133	WITHOUT_CLASSIFICATION	0.9999982916767477	WITHOUT_CLASSIFICATION	1.708323252318754E-6	IMPLEMENTATION
// line 1145	WITHOUT_CLASSIFICATION	0.9999980643212216	WITHOUT_CLASSIFICATION	1.9356787782654866E-6	IMPLEMENTATION
// line 1169	WITHOUT_CLASSIFICATION	0.9999978727503339	WITHOUT_CLASSIFICATION	2.127249666050958E-6	IMPLEMENTATION
// line 1201	WITHOUT_CLASSIFICATION	0.9999985719053843	WITHOUT_CLASSIFICATION	1.428094615657582E-6	IMPLEMENTATION
// line 1210	WITHOUT_CLASSIFICATION	0.9999992997138334	WITHOUT_CLASSIFICATION	7.0028616655752E-7	IMPLEMENTATION
// line 1229	WITHOUT_CLASSIFICATION	0.9999982172168422	WITHOUT_CLASSIFICATION	1.7827831577060364E-6	IMPLEMENTATION
// line 1261	WITHOUT_CLASSIFICATION	0.9999966922486321	WITHOUT_CLASSIFICATION	3.3077513679675143E-6	IMPLEMENTATION
// line 1287	WITHOUT_CLASSIFICATION	0.9999981861920707	WITHOUT_CLASSIFICATION	1.813807929238474E-6	IMPLEMENTATION
// line 1293	WITHOUT_CLASSIFICATION	0.9999985529939122	WITHOUT_CLASSIFICATION	1.4470060877955787E-6	IMPLEMENTATION
// line 1307	WITHOUT_CLASSIFICATION	0.9999990754800274	WITHOUT_CLASSIFICATION	9.245199724807888E-7	IMPLEMENTATION
// line 1320	WITHOUT_CLASSIFICATION	0.9999992026372554	WITHOUT_CLASSIFICATION	7.973627445321354E-7	IMPLEMENTATION
// line 1325	WITHOUT_CLASSIFICATION	0.9999984083436095	WITHOUT_CLASSIFICATION	1.5916563904116433E-6	IMPLEMENTATION
// line 1363	WITHOUT_CLASSIFICATION	0.9999978917974471	WITHOUT_CLASSIFICATION	2.1082025528472747E-6	IMPLEMENTATION
// line 1398	WITHOUT_CLASSIFICATION	0.999997361250077	WITHOUT_CLASSIFICATION	2.6387499230826066E-6	IMPLEMENTATION
// line 1448	WITHOUT_CLASSIFICATION	0.9999967698489103	WITHOUT_CLASSIFICATION	3.2301510897130793E-6	IMPLEMENTATION
// line 1456	WITHOUT_CLASSIFICATION	0.9999977051038476	WITHOUT_CLASSIFICATION	2.2948961524642315E-6	IMPLEMENTATION
// line 1473	WITHOUT_CLASSIFICATION	0.9999983567568458	WITHOUT_CLASSIFICATION	1.6432431542570716E-6	IMPLEMENTATION
// line 1492	WITHOUT_CLASSIFICATION	0.9999987474004765	WITHOUT_CLASSIFICATION	1.252599523458764E-6	IMPLEMENTATION
// line 1513	WITHOUT_CLASSIFICATION	0.99999815569129	WITHOUT_CLASSIFICATION	1.8443087100165854E-6	IMPLEMENTATION
// line 1523	WITHOUT_CLASSIFICATION	0.9999985424162867	WITHOUT_CLASSIFICATION	1.457583713371866E-6	IMPLEMENTATION
// line 1562	WITHOUT_CLASSIFICATION	0.9999988764988056	WITHOUT_CLASSIFICATION	1.1235011945204738E-6	IMPLEMENTATION
// line 1582	WITHOUT_CLASSIFICATION	0.9999985977498917	WITHOUT_CLASSIFICATION	1.4022501082885201E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999983516854376	WITHOUT_CLASSIFICATION	1.6483145624437854E-6	IMPLEMENTATION
// line 1603	WITHOUT_CLASSIFICATION	0.9999983516854376	WITHOUT_CLASSIFICATION	1.6483145624437854E-6	IMPLEMENTATION
// line 1615	WITHOUT_CLASSIFICATION	0.9999976054296855	WITHOUT_CLASSIFICATION	2.3945703145199796E-6	IMPLEMENTATION
// line 1620	WITHOUT_CLASSIFICATION	0.9999990084582298	WITHOUT_CLASSIFICATION	9.915417703225724E-7	IMPLEMENTATION
// line 1635	WITHOUT_CLASSIFICATION	0.9999980479560435	WITHOUT_CLASSIFICATION	1.9520439564123406E-6	IMPLEMENTATION
// line 1652	WITHOUT_CLASSIFICATION	0.9999988815456802	WITHOUT_CLASSIFICATION	1.118454319752139E-6	IMPLEMENTATION
// line 1681	WITHOUT_CLASSIFICATION	0.9999940299208597	WITHOUT_CLASSIFICATION	5.97007914027807E-6	IMPLEMENTATION
// line 1708	WITHOUT_CLASSIFICATION	0.9999984176703687	WITHOUT_CLASSIFICATION	1.582329631355308E-6	IMPLEMENTATION
// line 1716	WITHOUT_CLASSIFICATION	0.9999980646445757	WITHOUT_CLASSIFICATION	1.9353554242376044E-6	IMPLEMENTATION
// line 1755	WITHOUT_CLASSIFICATION	0.9999981659076805	WITHOUT_CLASSIFICATION	1.8340923193657246E-6	IMPLEMENTATION
// line 1772	WITHOUT_CLASSIFICATION	0.99999900679317	WITHOUT_CLASSIFICATION	9.93206829954414E-7	IMPLEMENTATION
// line 1789	WITHOUT_CLASSIFICATION	0.9999974958212219	WITHOUT_CLASSIFICATION	2.504178778181598E-6	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999846379899113	WITHOUT_CLASSIFICATION	1.536201008874848E-5	IMPLEMENTATION
// ACTIONS_END	WITHOUT_CLASSIFICATION	0.9999846379899113	WITHOUT_CLASSIFICATION	1.536201008874848E-5	IMPLEMENTATION
/* force for args */	WITHOUT_CLASSIFICATION	0.9999998983815727	WITHOUT_CLASSIFICATION	1.0161842745219078E-7	IMPLEMENTATION
/* last expression should not be void */	WITHOUT_CLASSIFICATION	0.9999788742715771	WITHOUT_CLASSIFICATION	2.112572842293034E-5	IMPLEMENTATION
/* compstmt position includes both parens around it*/	WITHOUT_CLASSIFICATION	0.9999122743521189	WITHOUT_CLASSIFICATION	8.772564788100322E-5	IMPLEMENTATION
// We can assign if we already have variable of that name here or we are the only // scope in the chain (which Local scopes always are).	WITHOUT_CLASSIFICATION	0.999999999905178	WITHOUT_CLASSIFICATION	9.482202795728669E-11	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999959410632335	WITHOUT_CLASSIFICATION	4.058936766552993E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999959410632335	WITHOUT_CLASSIFICATION	4.058936766552993E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999959410632335	WITHOUT_CLASSIFICATION	4.058936766552993E-6	IMPLEMENTATION
// ignore, no debugger present	WITHOUT_CLASSIFICATION	0.9999959410632335	WITHOUT_CLASSIFICATION	4.058936766552993E-6	IMPLEMENTATION
// FIXME: Temporarily disabling because this fires way too much running Rails tests. JRUBY-518	WITHOUT_CLASSIFICATION	0.9999935555488335	WITHOUT_CLASSIFICATION	6.444451166542098E-6	IMPLEMENTATION
/*     * This method exists for us to break up multiple expression when nodes (e.g. when 1,2,3:)     * into individual whenNodes.  The primary reason for this is to ensure lazy evaluation of     * the arguments (when foo,bar,gar:) to prevent side-effects.  In the old code this was done     * using nested when statements, which was awful for interpreter and compilation.     *     * Notes: This has semantic equivalence but will not be lexically equivalent.  Compiler     * needs to detect same bodies to simplify bytecode generated.     */	WITHOUT_CLASSIFICATION	0.9999987204904753	WITHOUT_CLASSIFICATION	1.2795095247123672E-6	IMPLEMENTATION
// line 313	WITHOUT_CLASSIFICATION	0.9999987705659037	WITHOUT_CLASSIFICATION	1.229434096259261E-6	IMPLEMENTATION
// line 339	WITHOUT_CLASSIFICATION	0.999999237253189	WITHOUT_CLASSIFICATION	7.627468109724261E-7	IMPLEMENTATION
// line 361	WITHOUT_CLASSIFICATION	0.999997740076652	WITHOUT_CLASSIFICATION	2.2599233479453094E-6	IMPLEMENTATION
// line 413	WITHOUT_CLASSIFICATION	0.9999986883428089	WITHOUT_CLASSIFICATION	1.3116571911026258E-6	IMPLEMENTATION
// line 451	WITHOUT_CLASSIFICATION	0.999997387740086	WITHOUT_CLASSIFICATION	2.6122599139688817E-6	IMPLEMENTATION
// line 472	WITHOUT_CLASSIFICATION	0.9999996018041143	WITHOUT_CLASSIFICATION	3.98195885652715E-7	IMPLEMENTATION
// line 500	WITHOUT_CLASSIFICATION	0.9999995816044106	WITHOUT_CLASSIFICATION	4.183955894586534E-7	IMPLEMENTATION
// line 515	WITHOUT_CLASSIFICATION	0.9999985552552004	WITHOUT_CLASSIFICATION	1.44474479954967E-6	IMPLEMENTATION
// line 555	WITHOUT_CLASSIFICATION	0.9999991013914146	WITHOUT_CLASSIFICATION	8.986085854090914E-7	IMPLEMENTATION
// line 582	WITHOUT_CLASSIFICATION	0.9999994687490148	WITHOUT_CLASSIFICATION	5.312509852073713E-7	IMPLEMENTATION
// line 619	WITHOUT_CLASSIFICATION	0.9999983842794722	WITHOUT_CLASSIFICATION	1.6157205278964949E-6	IMPLEMENTATION
// line 636	WITHOUT_CLASSIFICATION	0.9999991937465913	WITHOUT_CLASSIFICATION	8.062534086690743E-7	IMPLEMENTATION
// line 669	WITHOUT_CLASSIFICATION	0.9999990073306428	WITHOUT_CLASSIFICATION	9.926693571267716E-7	IMPLEMENTATION
// line 703	WITHOUT_CLASSIFICATION	0.9999995863912349	WITHOUT_CLASSIFICATION	4.1360876509854723E-7	IMPLEMENTATION
// line 776	WITHOUT_CLASSIFICATION	0.9999991824891901	WITHOUT_CLASSIFICATION	8.175108099920984E-7	IMPLEMENTATION
// line 814	WITHOUT_CLASSIFICATION	0.9999980236835506	WITHOUT_CLASSIFICATION	1.976316449460068E-6	IMPLEMENTATION
// line 823	WITHOUT_CLASSIFICATION	0.9999991704518971	WITHOUT_CLASSIFICATION	8.295481029090028E-7	IMPLEMENTATION
// line 854	WITHOUT_CLASSIFICATION	0.999998913681805	WITHOUT_CLASSIFICATION	1.0863181949856906E-6	IMPLEMENTATION
// line 872	WITHOUT_CLASSIFICATION	0.9999994871194543	WITHOUT_CLASSIFICATION	5.128805457679519E-7	IMPLEMENTATION
// line 905	WITHOUT_CLASSIFICATION	0.9999993532670268	WITHOUT_CLASSIFICATION	6.467329732523907E-7	IMPLEMENTATION
// line 925	WITHOUT_CLASSIFICATION	0.9999992231930714	WITHOUT_CLASSIFICATION	7.768069286171773E-7	IMPLEMENTATION
// line 958	WITHOUT_CLASSIFICATION	0.9999988597442828	WITHOUT_CLASSIFICATION	1.1402557172076576E-6	IMPLEMENTATION
// line 992	WITHOUT_CLASSIFICATION	0.9999995013654025	WITHOUT_CLASSIFICATION	4.986345975365911E-7	IMPLEMENTATION
// line 1047	WITHOUT_CLASSIFICATION	0.9999988845266451	WITHOUT_CLASSIFICATION	1.1154733549363192E-6	IMPLEMENTATION
// line 1072	WITHOUT_CLASSIFICATION	0.9999995254157593	WITHOUT_CLASSIFICATION	4.7458424075575623E-7	IMPLEMENTATION
// line 1081	WITHOUT_CLASSIFICATION	0.9999967548026817	WITHOUT_CLASSIFICATION	3.2451973184279304E-6	IMPLEMENTATION
// line 1108	WITHOUT_CLASSIFICATION	0.9999986791804042	WITHOUT_CLASSIFICATION	1.320819595798257E-6	IMPLEMENTATION
// line 1136	WITHOUT_CLASSIFICATION	0.9999982734150314	WITHOUT_CLASSIFICATION	1.726584968636419E-6	IMPLEMENTATION
// line 1168	WITHOUT_CLASSIFICATION	0.9999973067564735	WITHOUT_CLASSIFICATION	2.693243526598664E-6	IMPLEMENTATION
// line 1192	WITHOUT_CLASSIFICATION	0.9999989620849216	WITHOUT_CLASSIFICATION	1.037915078378024E-6	IMPLEMENTATION
// line 1241	WITHOUT_CLASSIFICATION	0.99999673394724	WITHOUT_CLASSIFICATION	3.266052760147163E-6	IMPLEMENTATION
// line 1267	WITHOUT_CLASSIFICATION	0.9999985505084533	WITHOUT_CLASSIFICATION	1.4494915467183535E-6	IMPLEMENTATION
// line 1286	WITHOUT_CLASSIFICATION	0.9999976956608368	WITHOUT_CLASSIFICATION	2.304339163188859E-6	IMPLEMENTATION
// line 1301	WITHOUT_CLASSIFICATION	0.9999978256806543	WITHOUT_CLASSIFICATION	2.1743193457288353E-6	IMPLEMENTATION
// line 1314	WITHOUT_CLASSIFICATION	0.9999980216505963	WITHOUT_CLASSIFICATION	1.978349403784197E-6	IMPLEMENTATION
// line 1333	WITHOUT_CLASSIFICATION	0.9999979128316007	WITHOUT_CLASSIFICATION	2.0871683992659323E-6	IMPLEMENTATION
// line 1362	WITHOUT_CLASSIFICATION	0.9999989699804959	WITHOUT_CLASSIFICATION	1.030019504114159E-6	IMPLEMENTATION
// line 1395	WITHOUT_CLASSIFICATION	0.9999980761387602	WITHOUT_CLASSIFICATION	1.9238612397059702E-6	IMPLEMENTATION
// line 1420	WITHOUT_CLASSIFICATION	0.9999990127614992	WITHOUT_CLASSIFICATION	9.872385007961656E-7	IMPLEMENTATION
// line 1439	WITHOUT_CLASSIFICATION	0.9999979175676305	WITHOUT_CLASSIFICATION	2.0824323695066364E-6	IMPLEMENTATION
// line 1476	WITHOUT_CLASSIFICATION	0.9999979474053484	WITHOUT_CLASSIFICATION	2.052594651679664E-6	IMPLEMENTATION
// line 1535	WITHOUT_CLASSIFICATION	0.9999982141492783	WITHOUT_CLASSIFICATION	1.785850721687255E-6	IMPLEMENTATION
// line 1588	WITHOUT_CLASSIFICATION	0.999997127103006	WITHOUT_CLASSIFICATION	2.8728969938811045E-6	IMPLEMENTATION
// line 1618	WITHOUT_CLASSIFICATION	0.9999957939970591	WITHOUT_CLASSIFICATION	4.2060029409859245E-6	IMPLEMENTATION
// line 1643	WITHOUT_CLASSIFICATION	0.999997895482064	WITHOUT_CLASSIFICATION	2.1045179359802597E-6	IMPLEMENTATION
// line 1669	WITHOUT_CLASSIFICATION	0.9999974005864081	WITHOUT_CLASSIFICATION	2.5994135920075096E-6	IMPLEMENTATION
// line 1728	WITHOUT_CLASSIFICATION	0.9999978779176908	WITHOUT_CLASSIFICATION	2.1220823092136163E-6	IMPLEMENTATION
// line 1753	WITHOUT_CLASSIFICATION	0.9999986745716513	WITHOUT_CLASSIFICATION	1.325428348761701E-6	IMPLEMENTATION
// line 1779	WITHOUT_CLASSIFICATION	0.9999980129640671	WITHOUT_CLASSIFICATION	1.987035932852775E-6	IMPLEMENTATION
// line 1794	WITHOUT_CLASSIFICATION	0.9999980997311277	WITHOUT_CLASSIFICATION	1.9002688722359918E-6	IMPLEMENTATION
// line 1812	WITHOUT_CLASSIFICATION	0.9999980913192613	WITHOUT_CLASSIFICATION	1.908680738677031E-6	IMPLEMENTATION
// line 1837	WITHOUT_CLASSIFICATION	0.999997206484576	WITHOUT_CLASSIFICATION	2.7935154240482945E-6	IMPLEMENTATION
// line 1895	WITHOUT_CLASSIFICATION	0.9999960145763434	WITHOUT_CLASSIFICATION	3.985423656612872E-6	IMPLEMENTATION
// line 1925	WITHOUT_CLASSIFICATION	0.9999979920123855	WITHOUT_CLASSIFICATION	2.007987614525124E-6	IMPLEMENTATION
// line 1950	WITHOUT_CLASSIFICATION	0.9999986569055284	WITHOUT_CLASSIFICATION	1.3430944716458699E-6	IMPLEMENTATION
// line 1992	WITHOUT_CLASSIFICATION	0.9999987113509036	WITHOUT_CLASSIFICATION	1.288649096477079E-6	IMPLEMENTATION
// line 2014	WITHOUT_CLASSIFICATION	0.9999992152173307	WITHOUT_CLASSIFICATION	7.847826693814647E-7	IMPLEMENTATION
// Whether this scope is used as the "argument scope" for e.g. zsuper	WITHOUT_CLASSIFICATION	0.9999999952634624	WITHOUT_CLASSIFICATION	4.736537626341259E-9	IMPLEMENTATION
// If we could not find the constant from cref..then try getting from inheritence hierarchy	WITHOUT_CLASSIFICATION	0.9999996402818604	WITHOUT_CLASSIFICATION	3.5971813952427106E-7	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999105491356	WITHOUT_CLASSIFICATION	8.945086442457366E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999105491356	WITHOUT_CLASSIFICATION	8.945086442457366E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999105491356	WITHOUT_CLASSIFICATION	8.945086442457366E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999105491356	WITHOUT_CLASSIFICATION	8.945086442457366E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999105491356	WITHOUT_CLASSIFICATION	8.945086442457366E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999105491356	WITHOUT_CLASSIFICATION	8.945086442457366E-8	IMPLEMENTATION
// This while loop is for restarting the block call in case a 'redo' fires.	WITHOUT_CLASSIFICATION	0.9999999105491356	WITHOUT_CLASSIFICATION	8.945086442457366E-8	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999761091640138	WITHOUT_CLASSIFICATION	2.389083598619532E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999761091640138	WITHOUT_CLASSIFICATION	2.389083598619532E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999761091640138	WITHOUT_CLASSIFICATION	2.389083598619532E-5	IMPLEMENTATION
// A 'next' is like a local return from the block, ending this call or yield.	WITHOUT_CLASSIFICATION	0.9999761091640138	WITHOUT_CLASSIFICATION	2.389083598619532E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999793271630757	WITHOUT_CLASSIFICATION	2.067283692430925E-5	IMPLEMENTATION
// happens with native exceptions, should not filter those out	WITHOUT_CLASSIFICATION	0.9999793271630757	WITHOUT_CLASSIFICATION	2.067283692430925E-5	IMPLEMENTATION
// We create one extra dynamicScope on a binding so that when we 'eval "b=1", binding' the // 'b' will get put into this new dynamic scope.  The original scope does not see the new // 'b' and successive evals with this binding will.  I take it having the ability to have  // succesive binding evals be able to share same scope makes sense from a programmers  // perspective.   One crappy outcome of this design is it requires Dynamic and Static  // scopes to be mutable for this one case.	WITHOUT_CLASSIFICATION	0.9999999956123051	WITHOUT_CLASSIFICATION	4.387694930331499E-9	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999985891589	WITHOUT_CLASSIFICATION	1.4108411028624243E-8	IMPLEMENTATION
// Populate up to shorter of calling arguments or local parameters in the block	WITHOUT_CLASSIFICATION	0.999999985891589	WITHOUT_CLASSIFICATION	1.4108411028624243E-8	IMPLEMENTATION
// tc // under method // self // under method // name // args	WITHOUT_CLASSIFICATION	0.9999999928784735	WITHOUT_CLASSIFICATION	7.121526394553667E-9	IMPLEMENTATION
// allow it to bubble up	WITHOUT_CLASSIFICATION	0.9999835100559875	WITHOUT_CLASSIFICATION	1.6489944012491195E-5	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999821113091	WITHOUT_CLASSIFICATION	1.788869080866659E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999821113091	WITHOUT_CLASSIFICATION	1.788869080866659E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999821113091	WITHOUT_CLASSIFICATION	1.788869080866659E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999821113091	WITHOUT_CLASSIFICATION	1.788869080866659E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999821113091	WITHOUT_CLASSIFICATION	1.788869080866659E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999821113091	WITHOUT_CLASSIFICATION	1.788869080866659E-8	IMPLEMENTATION
// IRubyObject, DynamicMethod, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999821113091	WITHOUT_CLASSIFICATION	1.788869080866659E-8	IMPLEMENTATION
// IRubyObject, RubyClass, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999999893749539	WITHOUT_CLASSIFICATION	1.0625046119992514E-8	IMPLEMENTATION
// IRubyObject, CacheEntry, ThreadContext, IRubyObject, IRubyObject, String, args	WITHOUT_CLASSIFICATION	0.9999997908829401	WITHOUT_CLASSIFICATION	2.0911705981463437E-7	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997330818089822	WITHOUT_CLASSIFICATION	2.6691819101783E-4	IMPLEMENTATION
// trim extension to try other options	WITHOUT_CLASSIFICATION	0.9997330818089822	WITHOUT_CLASSIFICATION	2.6691819101783E-4	IMPLEMENTATION
// Check for a builtin first.	WITHOUT_CLASSIFICATION	0.9999999489976966	WITHOUT_CLASSIFICATION	5.100230334502998E-8	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999986272614821	WITHOUT_CLASSIFICATION	1.372738517860821E-6	IMPLEMENTATION
// end suffix iteration	WITHOUT_CLASSIFICATION	0.9999986272614821	WITHOUT_CLASSIFICATION	1.372738517860821E-6	IMPLEMENTATION
// Unfortunately, the number of digits in the exponent is // not clearly defined in Ruby documentation. This is a // platform/version-dependent behavior. On Linux/Mac/Cygwin/*nix, // two digits are used. On Windows, 3 digits are used. // It is desirable for JRuby to have consistent behavior, and // the two digits behavior was selected. This is also in sync // with "Java-native" sprintf behavior (java.util.Formatter). // E or e	WITHOUT_CLASSIFICATION	0.999978737059844	WITHOUT_CLASSIFICATION	2.1262940155971846E-5	IMPLEMENTATION
/** * Represents the the dynamic portion of scoping information.  The variableValues are the * values of assigned local or block variables.  The staticScope identifies which sort of * scope this is (block or local). *  * Properties of Dynamic Scopes: * 1. static and dynamic scopes have the same number of names to values * 2. size of variables (and thus names) is determined during parsing.  So those structured do *    not need to change * * FIXME: When creating dynamic scopes we sometimes accidentally pass in extra parents.  This * is harmless (other than wasting memory), but we should not do that.  We can fix this in two * ways: * 1. Fix all callers * 2. Check parent that is passed in and make if new instance is local, then its parent is not local */	WITHOUT_CLASSIFICATION	0.6515982863492822	WITHOUT_CLASSIFICATION	0.34840171365071765	IMPLEMENTATION
// This method handles '**/' patterns and delegates to // fnmatch_helper for the main work.	WITHOUT_CLASSIFICATION	0.9999935168637623	WITHOUT_CLASSIFICATION	6.483136237815778E-6	IMPLEMENTATION
// Peel onion...make subpatterns out of outer layer of glob and recall with each subpattern  // Example: foo{a{c},b}bar -> fooa{c}bar, foobbar	WITHOUT_CLASSIFICATION	0.9999295278173524	WITHOUT_CLASSIFICATION	7.047218264753703E-5	IMPLEMENTATION
// double precision, native // double precision, native	WITHOUT_CLASSIFICATION	0.999999984110525	WITHOUT_CLASSIFICATION	1.5889474950324413E-8	IMPLEMENTATION
// 64-bit number, native (as bignum)	WITHOUT_CLASSIFICATION	0.9999998104997141	WITHOUT_CLASSIFICATION	1.895002859235488E-7	IMPLEMENTATION
// Next indicates to decode using native encoding format	WITHOUT_CLASSIFICATION	0.9999570043256939	WITHOUT_CLASSIFICATION	4.2995674306116414E-5	IMPLEMENTATION
// calculate based on a, b, c and d	WITHOUT_CLASSIFICATION	0.9999999608348575	WITHOUT_CLASSIFICATION	3.916514251605644E-8	IMPLEMENTATION
// processes seem to have some peculiar locking sequences, so we // need to ensure nobody is trying to close/destroy while we are	WITHOUT_CLASSIFICATION	0.9999970519538015	WITHOUT_CLASSIFICATION	2.948046198545962E-6	IMPLEMENTATION
// MRI behavior:  for 'Q', do not add trailing nils	WITHOUT_CLASSIFICATION	0.9999973646655929	WITHOUT_CLASSIFICATION	2.635334407198396E-6	IMPLEMENTATION
//this test may be too lax but it is the same as in MRI	WITHOUT_CLASSIFICATION	0.9999999886847881	WITHOUT_CLASSIFICATION	1.1315212026197884E-8	IMPLEMENTATION
// exec needs to behave differently in-process, because it's technically // supposed to replace the calling process. So if we're supposed to run // in-process, we allow it to use the default streams and not use // pumpers at all. See JRUBY-2156 and JRUBY-2154.	WITHOUT_CLASSIFICATION	0.9999916516835944	WITHOUT_CLASSIFICATION	8.348316405626506E-6	IMPLEMENTATION
// snip off ruby or jruby command from list of arguments // leave alone if the command is the name of a script	WITHOUT_CLASSIFICATION	0.9999999998884724	WITHOUT_CLASSIFICATION	1.1152751588865453E-10	IMPLEMENTATION
// The problem we trying to solve below: STDIN in Java // is blocked and non-interruptible, so if we invoke read // on it, we might never be able to interrupt such thread. // So, we use in.available() to see if there is any input // ready, and only then read it. But this approach can't // tell whether the end of stream reached or not, so we // might end up looping right at the end of the stream. // Well, at least, we can improve the situation by checking // if some input was ever available, and if so, not // checking for available anymore, and just go to read.	WITHOUT_CLASSIFICATION	0.999934568305531	WITHOUT_CLASSIFICATION	6.543169446912265E-5	IMPLEMENTATION
// first digit is always printed	WITHOUT_CLASSIFICATION	0.9998649129651996	WITHOUT_CLASSIFICATION	1.3508703480025877E-4	IMPLEMENTATION
// an empirically derived rule: precision applies to // significand length, irrespective of exponent	WITHOUT_CLASSIFICATION	0.9998984143486553	WITHOUT_CLASSIFICATION	1.0158565134462077E-4	IMPLEMENTATION
// an official rule, clarified: if the exponent // <clarif>after adjusting for exponent form</clarif> // is < -4,  or the exponent <clarif>after adjusting  // for exponent form</clarif> is greater than the // precision, use exponent form	WITHOUT_CLASSIFICATION	0.9999999941085626	WITHOUT_CLASSIFICATION	5.891437437055509E-9	IMPLEMENTATION
// in this mode, '.' is always printed	WITHOUT_CLASSIFICATION	0.9998654961152762	WITHOUT_CLASSIFICATION	1.3450388472368942E-4	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999670927798726	WITHOUT_CLASSIFICATION	3.2907220127419265E-5	IMPLEMENTATION
// now some data...	WITHOUT_CLASSIFICATION	0.9999670927798726	WITHOUT_CLASSIFICATION	3.2907220127419265E-5	IMPLEMENTATION
// MRI behavior: validate only the unnumbered arguments	WITHOUT_CLASSIFICATION	0.9999997563459576	WITHOUT_CLASSIFICATION	2.43654042482077E-7	IMPLEMENTATION
// else catch oversize below	WITHOUT_CLASSIFICATION	0.9999998920704838	WITHOUT_CLASSIFICATION	1.0792951621507296E-7	IMPLEMENTATION
// calculation for simple (and typical) case, // adapted from sun.misc.FloatingDecimal	WITHOUT_CLASSIFICATION	0.9999948600131174	WITHOUT_CLASSIFICATION	5.139986882644313E-6	IMPLEMENTATION
//switch	WITHOUT_CLASSIFICATION	0.9999929303092916	WITHOUT_CLASSIFICATION	7.069690708423052E-6	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784088535382	WITHOUT_CLASSIFICATION	2.159114646177272E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784088535382	WITHOUT_CLASSIFICATION	2.159114646177272E-5	IMPLEMENTATION
/*utf8 lead byte*/	WITHOUT_CLASSIFICATION	0.9999784088535382	WITHOUT_CLASSIFICATION	2.159114646177272E-5	IMPLEMENTATION
// could not get canonical path, just use given path	WITHOUT_CLASSIFICATION	0.9999924181414761	WITHOUT_CLASSIFICATION	7.581858523890595E-6	IMPLEMENTATION
// We always open this rw since we can only open it r or rw.	WITHOUT_CLASSIFICATION	0.9999385105257035	WITHOUT_CLASSIFICATION	6.14894742965293E-5	IMPLEMENTATION
// call chmod after we created the RandomAccesFile // because otherwise, the file could be read-only	WITHOUT_CLASSIFICATION	0.999712398093365	WITHOUT_CLASSIFICATION	2.876019066349288E-4	IMPLEMENTATION
// attempt to set the permissions, if we have been passed a POSIX instance, // and only if the file was created in this call.	WITHOUT_CLASSIFICATION	0.9999877970301974	WITHOUT_CLASSIFICATION	1.220296980262406E-5	IMPLEMENTATION
// // When reading into a heap buffer, the jvm allocates a temporary // direct ByteBuffer of the requested size.  To avoid allocating // a huge direct buffer when doing ludicrous reads (e.g. 1G or more) // we split the read up into chunks of no more than 1M //	WITHOUT_CLASSIFICATION	0.9999999812387068	WITHOUT_CLASSIFICATION	1.8761293239526246E-8	IMPLEMENTATION
// // If it is a file channel, then we can pre-allocate the output buffer // to the total size of buffered + remaining bytes in file //	WITHOUT_CLASSIFICATION	0.9999970226780502	WITHOUT_CLASSIFICATION	2.977321949672869E-6	IMPLEMENTATION
// // Cannot discern the total read length - allocate at least enough for the buffered data //	WITHOUT_CLASSIFICATION	0.9999983308961619	WITHOUT_CLASSIFICATION	1.669103838219641E-6	IMPLEMENTATION
// // Copy what is in the buffer, if there is some buffered data //	WITHOUT_CLASSIFICATION	0.9999999973276749	WITHOUT_CLASSIFICATION	2.672325108561623E-9	IMPLEMENTATION
// append what we read into our buffer and allow the loop to continue	WITHOUT_CLASSIFICATION	0.9998150068183456	WITHOUT_CLASSIFICATION	1.8499318165432976E-4	IMPLEMENTATION
// already have some bytes buffered, just return those	WITHOUT_CLASSIFICATION	0.9999907261855259	WITHOUT_CLASSIFICATION	9.273814474156473E-6	IMPLEMENTATION
// reset buffer	WITHOUT_CLASSIFICATION	0.9999974867939289	WITHOUT_CLASSIFICATION	2.5132060710810696E-6	IMPLEMENTATION
// // Synchronize and re-check to avoid creating more than one Selector per provider //	WITHOUT_CLASSIFICATION	0.9999939528650209	WITHOUT_CLASSIFICATION	6.0471349791328165E-6	IMPLEMENTATION
// TODO: Ruby logic is somewhat more complicated here, see comments after	WITHOUT_CLASSIFICATION	0.7983050056346073	IMPLEMENTATION	0.20169499436539276	WITHOUT_CLASSIFICATION
// Is there something built into JRuby to do this?	WITHOUT_CLASSIFICATION	0.9999770092451523	WITHOUT_CLASSIFICATION	2.299075484776218E-5	IMPLEMENTATION
// Note that WE CAN'T say the following, because of the on-the-fly conversion of Fixnum to Long // assertTrue(value == valueViaValuesIterator);	WITHOUT_CLASSIFICATION	0.999999999648757	WITHOUT_CLASSIFICATION	3.512430560580857E-10	IMPLEMENTATION
// value equality //result = eval("key = 3; arr = []; arr[key] = 'one'; arr.store(3, 'two'); puts arr[key]"); //assertEquals("two", result);	WITHOUT_CLASSIFICATION	0.999999998284625	WITHOUT_CLASSIFICATION	1.7153749420297066E-9	IMPLEMENTATION
// Uncomment the "puts" lines if you want to see more detail	WITHOUT_CLASSIFICATION	0.999998897160615	WITHOUT_CLASSIFICATION	1.1028393850523988E-6	IMPLEMENTATION
// Since we don't have any other error reporting mechanism, we // add the error message as an always-failing test to the test suite.	WITHOUT_CLASSIFICATION	0.9999999242772488	WITHOUT_CLASSIFICATION	7.572275114002274E-8	IMPLEMENTATION
// change the thread context to include the class	WITHOUT_CLASSIFICATION	0.999996427390205	WITHOUT_CLASSIFICATION	3.5726097950693305E-6	IMPLEMENTATION
